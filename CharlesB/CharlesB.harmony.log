### Harmony id=com.joelmeador.WeaponRealizer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from WeaponRealizer.Core.Init(System.String, WeaponRealizer.Settings), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\WeaponRealizer.dll
### At 2019-09-15 05.05.03
### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateRandomCache()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single[][]
L_0000: Local var 5: System.Int32[]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Int32[][]
L_0000: Local var 13: System.Int32[]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Int32[]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32[]
L_0000: Local var 20: System.Int32
L_0000: Local var 21: System.Int32
L_0000: ldarg.0
L_0001: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0006: callvirt Int32 get_Count()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldloc.0
L_000e: newarr System.Single[][]
L_0013: stfld System.Single[][][] randomCache
L_0018: ldarg.0
L_0019: ldloc.0
L_001a: newarr System.Int32[]
L_001f: stfld System.Int32[][] randomCacheValuesUsed
L_0024: ldc.i4.0
L_0025: stloc.1
L_0026: br Label1
L_002b: Label4
L_002b: ldarg.0
L_002c: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0031: ldloc.1
L_0032: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0037: stloc.2
L_0038: ldloc.2
L_0039: callvirt Int32 get_Count()
L_003e: stloc.3
L_003f: ldloc.3
L_0040: newarr System.Single[]
L_0045: stloc.s 4 (System.Single[][])
L_0047: ldloc.3
L_0048: newarr System.Int32
L_004d: stloc.s 5 (System.Int32[])
L_004f: ldc.i4.0
L_0050: stloc.s 6 (System.Int32)
L_0052: br Label2
L_0057: Label3
L_0057: ldloc.2
L_0058: ldloc.s 6 (System.Int32)
L_005a: callvirt BattleTech.Weapon get_Item(Int32)
L_005f: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_0064: stloc.s 7 (System.Int32)
L_0066: ldc.i4.6
L_0067: ldloc.s 7 (System.Int32)
L_0069: mul
L_006a: ldc.i4.2
L_006b: add
L_006c: ldc.i4.5
L_006d: add
L_006e: stloc.s 8 (System.Int32)
L_0070: ldloc.s 4 (System.Single[][])
L_0072: ldloc.s 6 (System.Int32)
L_0074: ldarg.0
L_0075: call BattleTech.AttackDirector get_Director()
L_007a: callvirt BattleTech.CombatGameState get_Combat()
L_007f: callvirt NetworkRandom get_NetworkRandom()
L_0084: ldloc.s 8 (System.Int32)
L_0086: callvirt Single[] GetRandomCache(Int32)
L_008b: stelem.ref
L_008c: ldloc.s 5 (System.Int32[])
L_008e: ldloc.s 6 (System.Int32)
L_0090: ldc.i4.0
L_0091: stelem.i4
L_0092: ldloc.s 6 (System.Int32)
L_0094: ldc.i4.1
L_0095: add
L_0096: stloc.s 6 (System.Int32)
L_0098: Label2
L_0098: ldloc.s 6 (System.Int32)
L_009a: ldloc.3
L_009b: blt Label3
L_00a0: ldarg.0
L_00a1: ldfld System.Single[][][] randomCache
L_00a6: ldloc.1
L_00a7: ldloc.s 4 (System.Single[][])
L_00a9: stelem.ref
L_00aa: ldarg.0
L_00ab: ldfld System.Int32[][] randomCacheValuesUsed
L_00b0: ldloc.1
L_00b1: ldloc.s 5 (System.Int32[])
L_00b3: stelem.ref
L_00b4: ldloc.1
L_00b5: ldc.i4.1
L_00b6: add
L_00b7: stloc.1
L_00b8: Label1
L_00b8: ldloc.1
L_00b9: ldloc.0
L_00ba: blt Label4
L_00bf: ldarg.0
L_00c0: ldloc.0
L_00c1: newarr System.Int32[][]
L_00c6: stfld System.Int32[][][] varianceCache
L_00cb: ldarg.0
L_00cc: ldloc.0
L_00cd: newarr System.Int32[]
L_00d2: stfld System.Int32[][] varianceCacheValuesUsed
L_00d7: ldc.i4.0
L_00d8: stloc.s 9 (System.Int32)
L_00da: br Label5
L_00df: Label12
L_00df: ldarg.0
L_00e0: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_00e5: ldloc.s 9 (System.Int32)
L_00e7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_00ec: stloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00ee: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00f0: callvirt Int32 get_Count()
L_00f5: stloc.s 11 (System.Int32)
L_00f7: ldloc.s 11 (System.Int32)
L_00f9: newarr System.Int32[]
L_00fe: stloc.s 12 (System.Int32[][])
L_0100: ldloc.s 11 (System.Int32)
L_0102: newarr System.Int32
L_0107: stloc.s 13 (System.Int32[])
L_0109: ldc.i4.0
L_010a: stloc.s 14 (System.Int32)
L_010c: br Label6
L_0111: Label11
L_0111: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0113: ldloc.s 14 (System.Int32)
L_0115: callvirt BattleTech.Weapon get_Item(Int32)
L_011a: dup
L_011b: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_0120: stloc.s 15 (System.Int32)
L_0122: callvirt Int32 get_DamageVariance()
L_0127: stloc.s 16 (System.Int32)
L_0129: ldloc.s 15 (System.Int32)
L_012b: newarr System.Int32
L_0130: stloc.s 17 (System.Int32[])
L_0132: ldc.i4.0
L_0133: stloc.s 18 (System.Int32)
L_0135: br Label7
L_013a: Label10
L_013a: ldarg.0
L_013b: call BattleTech.AttackDirector get_Director()
L_0140: callvirt BattleTech.CombatGameState get_Combat()
L_0145: callvirt NetworkRandom get_NetworkRandom()
L_014a: ldloc.s 16 (System.Int32)
L_014c: callvirt Int32[] GetFudgeCache(Int32)
L_0151: stloc.s 19 (System.Int32[])
L_0153: ldc.i4.0
L_0154: stloc.s 20 (System.Int32)
L_0156: ldc.i4.0
L_0157: stloc.s 21 (System.Int32)
L_0159: br Label8
L_015e: Label9
L_015e: ldloc.s 20 (System.Int32)
L_0160: ldloc.s 19 (System.Int32[])
L_0162: ldloc.s 21 (System.Int32)
L_0164: ldelem.i4
L_0165: add
L_0166: stloc.s 20 (System.Int32)
L_0168: ldloc.s 21 (System.Int32)
L_016a: ldc.i4.1
L_016b: add
L_016c: stloc.s 21 (System.Int32)
L_016e: Label8
L_016e: ldloc.s 21 (System.Int32)
L_0170: ldloc.s 16 (System.Int32)
L_0172: blt Label9
L_0177: ldloc.s 17 (System.Int32[])
L_0179: ldloc.s 18 (System.Int32)
L_017b: ldloc.s 20 (System.Int32)
L_017d: stelem.i4
L_017e: ldloc.s 18 (System.Int32)
L_0180: ldc.i4.1
L_0181: add
L_0182: stloc.s 18 (System.Int32)
L_0184: Label7
L_0184: ldloc.s 18 (System.Int32)
L_0186: ldloc.s 15 (System.Int32)
L_0188: blt Label10
L_018d: ldloc.s 12 (System.Int32[][])
L_018f: ldloc.s 14 (System.Int32)
L_0191: ldloc.s 17 (System.Int32[])
L_0193: stelem.ref
L_0194: ldloc.s 13 (System.Int32[])
L_0196: ldloc.s 14 (System.Int32)
L_0198: ldc.i4.0
L_0199: stelem.i4
L_019a: ldloc.s 14 (System.Int32)
L_019c: ldc.i4.1
L_019d: add
L_019e: stloc.s 14 (System.Int32)
L_01a0: Label6
L_01a0: ldloc.s 14 (System.Int32)
L_01a2: ldloc.s 11 (System.Int32)
L_01a4: blt Label11
L_01a9: ldarg.0
L_01aa: ldfld System.Int32[][][] varianceCache
L_01af: ldloc.s 9 (System.Int32)
L_01b1: ldloc.s 12 (System.Int32[][])
L_01b3: stelem.ref
L_01b4: ldarg.0
L_01b5: ldfld System.Int32[][] varianceCacheValuesUsed
L_01ba: ldloc.s 9 (System.Int32)
L_01bc: ldloc.s 13 (System.Int32[])
L_01be: stelem.ref
L_01bf: ldloc.s 9 (System.Int32)
L_01c1: ldc.i4.1
L_01c2: add
L_01c3: stloc.s 9 (System.Int32)
L_01c5: Label5
L_01c5: ldloc.s 9 (System.Int32)
L_01c7: ldloc.0
L_01c8: blt Label12
L_01cd: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.Team
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Boolean
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.String
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg 5
L_001e: ldarg 6
L_0024: ldarg.0
L_0025: call Boolean Prefix(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single, AttackSequence)
L_002a: brfalse Label0
L_002f: ldsfld HBS.Logging.ILog hitLogger
L_0034: callvirt Boolean get_IsLogEnabled()
L_0039: brfalse Label1
L_003e: ldsfld HBS.Logging.ILog hitLogger
L_0043: ldstr "???????? RANDOM HIT ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_0048: ldarg.2
L_0049: box System.Int32
L_004e: ldarg.3
L_004f: box System.Int32
L_0054: call System.String Format(System.String, System.Object, System.Object)
L_0059: callvirt Void Log(System.Object)
L_005e: Label1
L_005e: ldarg.1
L_005f: ldarg.0
L_0060: ldarg.2
L_0061: ldarg.3
L_0062: ldarg.1
L_0063: ldfld System.Int32 numberOfShots
L_0068: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_006d: stfld System.Single[] toHitRolls
L_0072: ldsfld HBS.Logging.ILog hitLogger
L_0077: callvirt Boolean get_IsLogEnabled()
L_007c: brfalse Label2
L_0081: ldsfld HBS.Logging.ILog hitLogger
L_0086: ldstr "???????? RANDOM LOCATION ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_008b: ldarg.2
L_008c: box System.Int32
L_0091: ldarg.3
L_0092: box System.Int32
L_0097: call System.String Format(System.String, System.Object, System.Object)
L_009c: callvirt Void Log(System.Object)
L_00a1: Label2
L_00a1: ldarg.1
L_00a2: ldarg.0
L_00a3: ldarg.2
L_00a4: ldarg.3
L_00a5: ldarg.1
L_00a6: ldfld System.Int32 numberOfShots
L_00ab: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_00b0: stfld System.Single[] locationRolls
L_00b5: ldsfld HBS.Logging.ILog hitLogger
L_00ba: callvirt Boolean get_IsLogEnabled()
L_00bf: brfalse Label3
L_00c4: ldsfld HBS.Logging.ILog hitLogger
L_00c9: ldstr "???????? DODGE ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_00ce: ldarg.2
L_00cf: box System.Int32
L_00d4: ldarg.3
L_00d5: box System.Int32
L_00da: call System.String Format(System.String, System.Object, System.Object)
L_00df: callvirt Void Log(System.Object)
L_00e4: Label3
L_00e4: ldarg.1
L_00e5: ldarg.0
L_00e6: ldarg.2
L_00e7: ldarg.3
L_00e8: ldarg.1
L_00e9: ldfld System.Int32 numberOfShots
L_00ee: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_00f3: stfld System.Single[] dodgeRolls
L_00f8: ldarg.1
L_00f9: ldarg.0
L_00fa: ldarg.2
L_00fb: ldarg.3
L_00fc: ldarg.1
L_00fd: ldfld System.Int32 numberOfShots
L_0102: ldarg.s 4
L_0104: call Int32[] GetVarianceSums(Int32, Int32, Int32, BattleTech.Weapon)
L_0109: stfld System.Int32[] hitVariance
L_010e: ldarg.0
L_010f: ldfld BattleTech.ICombatant chosenTarget
L_0114: isinst BattleTech.AbstractActor
L_0119: stloc.0
L_011a: ldarg.s 4
L_011c: brfalse Label4
L_0121: ldarg.s 4
L_0123: ldfld BattleTech.AbstractActor parent
L_0128: brfalse Label5
L_012d: ldarg.s 4
L_012f: ldfld BattleTech.AbstractActor parent
L_0134: callvirt BattleTech.Team get_team()
L_0139: brtrue Label6
L_013e: Label4
L_013e: Label5
L_013e: ldnull
L_013f: br Label7
L_0144: Label6
L_0144: ldarg.s 4
L_0146: ldfld BattleTech.AbstractActor parent
L_014b: callvirt BattleTech.Team get_team()
L_0150: Label7
L_0150: stloc.1
L_0151: ldarg.0
L_0152: ldfld BattleTech.AbstractActor attacker
L_0157: callvirt Single get_CalledShotBonusMultiplier()
L_015c: stloc.2
L_015d: ldc.i4.0
L_015e: stloc.3
L_015f: br Label8
L_0164: Label21
L_0164: ldarg.0
L_0165: ldarg.1
L_0166: ldfld System.Single[] toHitRolls
L_016b: ldloc.3
L_016c: ldelem.r4
L_016d: ldloc.1
L_016e: call Single GetCorrectedRoll(Single, BattleTech.Team)
L_0173: stloc.s 4 (System.Single)
L_0175: ldloc.s 4 (System.Single)
L_0177: ldarg.s 5
L_0179: cgt.un
L_017b: ldc.i4.0
L_017c: ceq
L_017e: stloc.s 5 (System.Boolean)
L_0180: ldloc.1
L_0181: brfalse Label9
L_0186: ldloc.1
L_0187: ldarg.s 5
L_0189: ldloc.s 5 (System.Boolean)
L_018b: callvirt Void ProcessRandomRoll(Single, Boolean)
L_0190: Label9
L_0190: ldc.i4.0
L_0191: stloc.s 6 (System.Boolean)
L_0193: ldloc.0
L_0194: brfalse Label10
L_0199: ldloc.0
L_019a: ldarg.0
L_019b: ldfld BattleTech.AbstractActor attacker
L_01a0: ldarg.s 4
L_01a2: ldarg.1
L_01a3: ldobj BattleTech.WeaponHitInfo
L_01a8: ldloc.3
L_01a9: ldarg.0
L_01aa: call Boolean get_IsBreachingShot()
L_01af: callvirt Boolean CheckDodge(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.WeaponHitInfo, Int32, Boolean)
L_01b4: stloc.s 6 (System.Boolean)
L_01b6: Label10
L_01b6: ldloc.s 5 (System.Boolean)
L_01b8: ldloc.s 6 (System.Boolean)
L_01ba: and
L_01bb: brfalse Label11
L_01c0: ldarg.1
L_01c1: ldfld System.Boolean[] dodgeSuccesses
L_01c6: ldloc.3
L_01c7: ldc.i4.1
L_01c8: stelem.i1
L_01c9: ldarg.0
L_01ca: ldloc.0
L_01cb: callvirt System.String get_GUID()
L_01d0: call Void FlagAttackContainsDodge(System.String)
L_01d5: br Label12
L_01da: Label11
L_01da: ldarg.1
L_01db: ldfld System.Boolean[] dodgeSuccesses
L_01e0: ldloc.3
L_01e1: ldc.i4.0
L_01e2: stelem.i1
L_01e3: Label12
L_01e3: ldsfld HBS.Logging.ILog attackLogger
L_01e8: callvirt Boolean get_IsLogEnabled()
L_01ed: brfalse Label13
L_01f2: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Roll Value: {3}"
L_01f7: ldc.i4.4
L_01f8: newarr System.Object
L_01fd: dup
L_01fe: ldc.i4.0
L_01ff: ldarg.0
L_0200: ldfld System.Int32 id
L_0205: box System.Int32
L_020a: stelem.ref
L_020b: dup
L_020c: ldc.i4.1
L_020d: ldarg.3
L_020e: box System.Int32
L_0213: stelem.ref
L_0214: dup
L_0215: ldc.i4.2
L_0216: ldloc.3
L_0217: box System.Int32
L_021c: stelem.ref
L_021d: dup
L_021e: ldc.i4.3
L_021f: ldloc.s 4 (System.Single)
L_0221: box System.Single
L_0226: stelem.ref
L_0227: call System.String Format(System.String, System.Object[])
L_022c: stloc.s 7 (System.String)
L_022e: ldsfld HBS.Logging.ILog attackLogger
L_0233: ldloc.s 7 (System.String)
L_0235: callvirt Void Log(System.Object)
L_023a: Label13
L_023a: ldloc.s 5 (System.Boolean)
L_023c: brfalse Label14
L_0241: ldloc.s 6 (System.Boolean)
L_0243: brtrue Label15
L_0248: ldarg.1
L_0249: ldfld System.Int32[] hitLocations
L_024e: ldloc.3
L_024f: ldarg.0
L_0250: ldfld BattleTech.ICombatant chosenTarget
L_0255: ldarg.0
L_0256: ldfld BattleTech.AbstractActor attacker
L_025b: ldarg.0
L_025c: ldfld UnityEngine.Vector3 attackPosition
L_0261: ldarg.1
L_0262: ldfld System.Single[] locationRolls
L_0267: ldloc.3
L_0268: ldelem.r4
L_0269: ldarg.0
L_026a: ldfld System.Int32 calledShotLocation
L_026f: ldloc.2
L_0270: callvirt Int32 GetHitLocation(BattleTech.AbstractActor, UnityEngine.Vector3, Single, Int32, Single)
L_0275: stelem.i4
L_0276: ldloc.2
L_0277: ldc.r4 1
L_027c: ldarg.0
L_027d: call BattleTech.AttackDirector get_Director()
L_0282: callvirt BattleTech.CombatGameState get_Combat()
L_0287: callvirt BattleTech.CombatGameConstants get_Constants()
L_028c: callvirt BattleTech.HitTableConstantsDef get_HitTables()
L_0291: ldfld System.Single CalledShotBonusDegradeLerpFactor
L_0296: call Single Lerp(Single, Single, Single)
L_029b: stloc.2
L_029c: ldsfld HBS.Logging.ILog attackLogger
L_02a1: callvirt Boolean get_IsLogEnabled()
L_02a6: brfalse Label16
L_02ab: ldsfld HBS.Logging.ILog attackLogger
L_02b0: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Hit! Location: {3}"
L_02b5: ldc.i4.4
L_02b6: newarr System.Object
L_02bb: dup
L_02bc: ldc.i4.0
L_02bd: ldarg.0
L_02be: ldfld System.Int32 id
L_02c3: box System.Int32
L_02c8: stelem.ref
L_02c9: dup
L_02ca: ldc.i4.1
L_02cb: ldarg.3
L_02cc: box System.Int32
L_02d1: stelem.ref
L_02d2: dup
L_02d3: ldc.i4.2
L_02d4: ldloc.3
L_02d5: box System.Int32
L_02da: stelem.ref
L_02db: dup
L_02dc: ldc.i4.3
L_02dd: ldarg.1
L_02de: ldfld System.Int32[] hitLocations
L_02e3: ldloc.3
L_02e4: ldelem.i4
L_02e5: box System.Int32
L_02ea: stelem.ref
L_02eb: call System.String Format(System.String, System.Object[])
L_02f0: callvirt Void Log(System.Object)
L_02f5: Label16
L_02f5: ldsfld HBS.Logging.ILog hitminLogger
L_02fa: callvirt Boolean get_IsLogEnabled()
L_02ff: brfalse Label17
L_0304: ldsfld HBS.Logging.ILog hitminLogger
L_0309: ldstr "WEAPON: {0} - SHOT: {1} Hits! ////// HEX VAL {2}"
L_030e: ldarg.s 4
L_0310: callvirt System.String get_Name()
L_0315: ldloc.3
L_0316: box System.Int32
L_031b: ldarg.1
L_031c: ldfld System.Int32[] hitLocations
L_0321: ldloc.3
L_0322: ldelem.i4
L_0323: box System.Int32
L_0328: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_032d: callvirt Void Log(System.Object)
L_0332: Label17
L_0332: ldarg.1
L_0333: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_0338: ldloc.3
L_0339: ldarg.0
L_033a: call BattleTech.AttackDirector get_Director()
L_033f: callvirt BattleTech.CombatGameState get_Combat()
L_0344: callvirt BattleTech.ToHit get_ToHit()
L_0349: ldarg.0
L_034a: ldfld BattleTech.AbstractActor attacker
L_034f: ldarg.0
L_0350: ldfld UnityEngine.Vector3 attackPosition
L_0355: ldarg.s 4
L_0357: ldarg.0
L_0358: ldfld BattleTech.ICombatant chosenTarget
L_035d: ldarg.0
L_035e: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0363: ldarg.0
L_0364: call Boolean get_IsBreachingShot()
L_0369: callvirt BattleTech.AttackImpactQuality GetBlowQuality(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, BattleTech.ICombatant, BattleTech.MeleeAttackType, Boolean)
L_036e: stelem.i4
L_036f: ldarg.0
L_0370: call Void FlagShotHit()
L_0375: br Label18
L_037a: Label14
L_037a: Label15
L_037a: ldarg.1
L_037b: ldfld System.Int32[] hitLocations
L_0380: ldloc.3
L_0381: ldc.i4.0
L_0382: stelem.i4
L_0383: ldsfld HBS.Logging.ILog attackLogger
L_0388: callvirt Boolean get_IsLogEnabled()
L_038d: brfalse Label19
L_0392: ldsfld HBS.Logging.ILog attackLogger
L_0397: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Miss!"
L_039c: ldarg.0
L_039d: ldfld System.Int32 id
L_03a2: box System.Int32
L_03a7: ldarg.3
L_03a8: box System.Int32
L_03ad: ldloc.3
L_03ae: box System.Int32
L_03b3: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03b8: callvirt Void Log(System.Object)
L_03bd: Label19
L_03bd: ldsfld HBS.Logging.ILog hitminLogger
L_03c2: callvirt Boolean get_IsLogEnabled()
L_03c7: brfalse Label20
L_03cc: ldsfld HBS.Logging.ILog hitminLogger
L_03d1: ldstr "WEAPON: {0} - SHOT: {1} Misses!"
L_03d6: ldarg.s 4
L_03d8: callvirt System.String get_Name()
L_03dd: ldloc.3
L_03de: box System.Int32
L_03e3: call System.String Format(System.String, System.Object, System.Object)
L_03e8: callvirt Void Log(System.Object)
L_03ed: Label20
L_03ed: ldarg.0
L_03ee: call Void FlagShotMissed()
L_03f3: Label18
L_03f3: ldarg.1
L_03f4: ldfld UnityEngine.Vector3[] hitPositions
L_03f9: ldloc.3
L_03fa: ldarg.0
L_03fb: ldfld BattleTech.ICombatant chosenTarget
L_0400: ldarg.0
L_0401: ldfld BattleTech.AbstractActor attacker
L_0406: ldarg.0
L_0407: ldfld UnityEngine.Vector3 attackPosition
L_040c: ldarg.s 4
L_040e: ldarg.1
L_040f: ldfld System.Int32[] hitLocations
L_0414: ldloc.3
L_0415: ldelema System.Int32
L_041a: ldarg.1
L_041b: ldfld BattleTech.AttackDirection[] attackDirections
L_0420: ldloc.3
L_0421: ldelema BattleTech.AttackDirection
L_0426: ldarg.1
L_0427: ldfld System.String[] secondaryTargetIds
L_042c: ldloc.3
L_042d: ldelema System.String
L_0432: ldarg.1
L_0433: ldfld System.Int32[] secondaryHitLocations
L_0438: ldloc.3
L_0439: ldelema System.Int32
L_043e: callvirt UnityEngine.Vector3 GetImpactPosition(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, Int32 ByRef, BattleTech.AttackDirection ByRef, System.String ByRef, Int32 ByRef)
L_0443: stelem UnityEngine.Vector3
L_0448: ldarg.0
L_0449: ldarg.1
L_044a: ldarg.s 4
L_044c: ldloc.3
L_044d: call Void RefreshHitQualitiesForSecondaryTargets(BattleTech.WeaponHitInfo ByRef, BattleTech.Weapon, Int32)
L_0452: ldloc.3
L_0453: ldc.i4.1
L_0454: add
L_0455: stloc.3
L_0456: Label8
L_0456: ldloc.3
L_0457: ldarg.1
L_0458: ldfld System.Int32 numberOfShots
L_045d: blt Label21
L_0462: Label0
L_0462: ret
DONE

### Patch BattleTech.Weapon, Int32 get_RefireModifier()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: ldfld BattleTech.StatCollection statCollection
L_000c: ldstr "RefireModifier"
L_0011: callvirt Int32 GetValue[Int32](System.String)
L_0016: stloc 0 (System.Int32)
L_0017: ldarg.0
L_0018: ldloca 0 (System.Int32)
L_001a: call Void Postfix(BattleTech.Weapon, Int32 ByRef)
L_001f: ldloc 0 (System.Int32)
L_0020: ret
DONE

### Patch BattleTech.AbstractActor, Void OnActivationEnd(System.String, Int32)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AbstractActor)
L_0006: ldsfld HBS.Logging.ILog attackLogger
L_000b: ldstr "[OnActivationEnd] {1} {2} HasActivatedThisRound {0}"
L_0010: ldarg.0
L_0011: call Boolean get_HasActivatedThisRound()
L_0016: box System.Boolean
L_001b: ldarg.0
L_001c: callvirt System.String get_UnitName()
L_0021: ldarg.0
L_0022: call System.String get_GUID()
L_0027: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_002c: callvirt Void LogDebug(System.Object)
L_0031: ldarg.0
L_0032: call Boolean get_HasActivatedThisRound()
L_0037: brfalse Label1
L_003c: br Label10
L_0041: Label1
L_0041: ldarg.0
L_0042: call Void LogActivationComplete()
L_0047: ldarg.0
L_0048: ldc.i4.1
L_0049: call Void set_HasActivatedThisRound(Boolean)
L_004e: ldarg.0
L_004f: ldc.i4.0
L_0050: call Void set_IsCompletingActivation(Boolean)
L_0055: ldarg.0
L_0056: ldc.i4.0
L_0057: call Void set_IsAttacking(Boolean)
L_005c: ldarg.0
L_005d: callvirt Boolean get_IsProne()
L_0062: brfalse Label2
L_0067: ldarg.0
L_0068: call BattleTech.StatCollection get_StatCollection()
L_006d: ldstr "PhaseModifier"
L_0072: ldc.i4.1
L_0073: ldarg.0
L_0074: ldfld BattleTech.StatCollection statCollection
L_0079: ldstr "PhaseModifierSelf"
L_007e: callvirt Int32 GetValue[Int32](System.String)
L_0083: add
L_0084: callvirt Boolean Set[Int32](System.String, Int32)
L_0089: pop
L_008a: br Label3
L_008f: Label2
L_008f: ldarg.0
L_0090: call BattleTech.StatCollection get_StatCollection()
L_0095: ldstr "PhaseModifier"
L_009a: ldarg.0
L_009b: ldfld BattleTech.StatCollection statCollection
L_00a0: ldstr "PhaseModifierSelf"
L_00a5: callvirt Int32 GetValue[Int32](System.String)
L_00aa: callvirt Boolean Set[Int32](System.String, Int32)
L_00af: pop
L_00b0: Label3
L_00b0: ldarg.0
L_00b1: call BattleTech.StatCollection get_StatCollection()
L_00b6: ldstr "PhaseModifierSelf"
L_00bb: ldc.i4.0
L_00bc: callvirt Boolean Set[Int32](System.String, Int32)
L_00c1: pop
L_00c2: ldarg.0
L_00c3: call Boolean get_HasMovedThisRound()
L_00c8: brtrue Label4
L_00cd: ldarg.0
L_00ce: ldc.r4 0
L_00d3: call Void set_DistMovedThisRound(Single)
L_00d8: ldarg.0
L_00d9: ldc.i4.0
L_00da: call Void set_JumpedLastRound(Boolean)
L_00df: ldarg.0
L_00e0: ldc.i4.0
L_00e1: call Void set_MeleeAttackedLastRound(Boolean)
L_00e6: ldarg.0
L_00e7: ldc.i4.0
L_00e8: call Void set_SprintedLastRound(Boolean)
L_00ed: ldarg.0
L_00ee: ldc.i4.0
L_00ef: call Void set_MovedLastRound(Boolean)
L_00f4: Label4
L_00f4: ldarg.0
L_00f5: callvirt BattleTech.Pilot GetPilot()
L_00fa: stloc.0
L_00fb: ldloc.0
L_00fc: brfalse Label5
L_0101: ldloc.0
L_0102: ldarg.1
L_0103: ldarg.2
L_0104: callvirt Void OnActivationEnd(System.String, Int32)
L_0109: Label5
L_0109: ldarg.0
L_010a: ldc.i4.0
L_010b: call Void ResetPathing(Boolean)
L_0110: ldarg.0
L_0111: call BattleTech.CombatGameState get_Combat()
L_0116: callvirt MessageCenter get_MessageCenter()
L_011b: ldarg.0
L_011c: call System.String get_GUID()
L_0121: newobj Void .ctor(String)
L_0126: callvirt Void PublishMessage(MessageCenterMessage)
L_012b: ldarg.0
L_012c: call BattleTech.CombatGameState get_Combat()
L_0131: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0136: ldarg.0
L_0137: ldarg.0
L_0138: call UnityEngine.Vector3 get_CurrentPosition()
L_013d: ldc.i4.6
L_013e: ldc.i4.1
L_013f: call Void UpdateAurasToActor(System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.EffectTriggerType, Boolean)
L_0144: ldc.i4.0
L_0145: stloc.1
L_0146: br Label6
L_014b: Label7
L_014b: ldarg.0
L_014c: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0151: ldloc.1
L_0152: callvirt BattleTech.Ability get_Item(Int32)
L_0157: ldarg.1
L_0158: ldarg.2
L_0159: callvirt Void OnActivationComplete(System.String, Int32)
L_015e: ldloc.1
L_015f: ldc.i4.1
L_0160: add
L_0161: stloc.1
L_0162: Label6
L_0162: ldloc.1
L_0163: ldarg.0
L_0164: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0169: callvirt Int32 get_Count()
L_016e: blt Label7
L_0173: ldarg.0
L_0174: call BattleTech.Team get_team()
L_0179: ldarg.0
L_017a: call System.String get_GUID()
L_017f: ldc.i4.0
L_0180: callvirt Void OnTurnActorActivationComplete(System.String, Boolean)
L_0185: ldarg.0
L_0186: call BattleTech.CombatGameState get_Combat()
L_018b: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0190: callvirt Boolean get_IsAnyAttackSequenceActive()
L_0195: brfalse Label8
L_019a: ldarg.0
L_019b: call BattleTech.CombatGameState get_Combat()
L_01a0: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01a5: ldarg.0
L_01a6: callvirt System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] GetAllAttackSequencesWithAttacker(BattleTech.ICombatant)
L_01ab: callvirt Int32 get_Count()
L_01b0: ldc.i4.0
L_01b1: ble Label9
L_01b6: ldsfld HBS.Logging.ILog attackLogger
L_01bb: ldstr "ERROR! There is an attack still active on the Attack Director."
L_01c0: callvirt Void LogError(System.Object)
L_01c5: Label8
L_01c5: Label9
L_01c5: ldarg.0
L_01c6: ldarg.0
L_01c7: call BattleTech.CombatGameState get_Combat()
L_01cc: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] GetAllLivingCombatants()
L_01d1: callvirt Void UpdateVisibilityCache(System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01d6: Label10
L_01d6: ret
DONE

### Patch BattleTech.MechComponent, Localize.Text get_UIName()
L_0000: Local var 0: Localize.Text
L_0000: ldnull
L_0001: stloc 0 (Localize.Text)
L_0002: ldarg.0
L_0003: call BattleTech.MechComponentDef get_componentDef()
L_0008: callvirt BattleTech.DescriptionDef get_Description()
L_000d: callvirt System.String get_UIName()
L_0012: call Boolean IsNullOrEmpty(System.String)
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: call BattleTech.MechComponentDef get_componentDef()
L_0022: callvirt BattleTech.DescriptionDef get_Description()
L_0027: callvirt System.String get_UIName()
L_002c: br Label2
L_0031: Label1
L_0031: ldarg.0
L_0032: call System.String get_Name()
L_0037: Label2
L_0037: call System.Object[] Empty[Object]()
L_003c: newobj Void .ctor(String, Object[])
L_0041: stloc 0 (Localize.Text)
L_0042: ldarg.0
L_0043: ldloca 0 (Localize.Text)
L_0045: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_004a: ldloc 0 (Localize.Text)
L_004b: ret
DONE

### Patch BallisticEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldflda System.Int32 hitIndex
L_0006: ldarg.0
L_0007: call Boolean Prefix(Int32 ByRef, BallisticEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld BattleTech.Weapon weapon
L_0018: ldarg.0
L_0019: ldfld BattleTech.Weapon weapon
L_001e: ldfld BattleTech.AbstractActor parent
L_0023: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0028: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_002d: ldarg.0
L_002e: ldfld BattleTech.Weapon weapon
L_0033: callvirt Int32 get_ShotsWhenFired()
L_0038: conv.r4
L_0039: mul
L_003a: callvirt Void OnImpact(Single)
L_003f: ldarg.0
L_0040: call Void OnComplete()
L_0045: Label0
L_0045: ret
DONE

### Patch LaserEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldfld System.String beamStopSFX
L_0006: call Boolean IsNullOrEmpty(System.String)
L_000b: brtrue Label1
L_0010: ldarg.0
L_0011: ldfld System.String beamStopSFX
L_0016: ldarg.0
L_0017: ldfld AkGameObj parentAudioObject
L_001c: ldnull
L_001d: ldnull
L_001e: call UInt32 PostEvent(System.String, AkGameObj, EventCallback, System.Object)
L_0023: pop
L_0024: Label1
L_0024: ldarg.0
L_0025: ldfld UnityEngine.ParticleSystem impactParticles
L_002a: ldnull
L_002b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0030: brfalse Label2
L_0035: ldarg.0
L_0036: ldfld UnityEngine.ParticleSystem impactParticles
L_003b: ldc.i4.1
L_003c: callvirt Void Stop(Boolean)
L_0041: Label2
L_0041: ldarg.0
L_0042: ldfld UnityEngine.LineRenderer beamRenderer
L_0047: ldc.i4.0
L_0048: ldarg.0
L_0049: ldfld UnityEngine.Vector3 startPos
L_004e: callvirt Void SetPosition(Int32, UnityEngine.Vector3)
L_0053: ldarg.0
L_0054: ldfld UnityEngine.LineRenderer beamRenderer
L_0059: ldc.i4.1
L_005a: ldarg.0
L_005b: ldfld UnityEngine.Vector3 startPos
L_0060: callvirt Void SetPosition(Int32, UnityEngine.Vector3)
L_0065: call Boolean get_HasInstance()
L_006a: brfalse Label3
L_006f: call BattleTech.Rendering.VFXRenderer get_Instance()
L_0074: ldfld System.Collections.Generic.List`1[UnityEngine.Renderer] laserRenderers
L_0079: ldarg.0
L_007a: ldfld UnityEngine.LineRenderer beamRenderer
L_007f: callvirt Boolean Contains(UnityEngine.Renderer)
L_0084: brfalse Label4
L_0089: call BattleTech.Rendering.VFXRenderer get_Instance()
L_008e: ldfld System.Collections.Generic.List`1[UnityEngine.Renderer] laserRenderers
L_0093: ldarg.0
L_0094: ldfld UnityEngine.LineRenderer beamRenderer
L_0099: callvirt Boolean Remove(UnityEngine.Renderer)
L_009e: pop
L_009f: ldarg.0
L_00a0: ldfld UnityEngine.LineRenderer beamRenderer
L_00a5: callvirt UnityEngine.GameObject get_gameObject()
L_00aa: ldstr "VFXOnly"
L_00af: call Int32 NameToLayer(System.String)
L_00b4: callvirt Void set_layer(Int32)
L_00b9: Label3
L_00b9: Label4
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.Rendering.BTLight laserLight
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label5
L_00ca: ldarg.0
L_00cb: ldfld BattleTech.Rendering.BTLight laserLight
L_00d0: ldc.r4 0
L_00d5: stfld System.Single intensity
L_00da: Label5
L_00da: ldarg.0
L_00db: ldc.r4 0
L_00e0: stfld System.Single t
L_00e5: ldarg.0
L_00e6: ldc.i4.3
L_00e7: stfld WeaponEffect+WeaponEffectState currentState
L_00ec: ldarg.0
L_00ed: ldflda System.Int32 hitIndex
L_00f2: ldarg.0
L_00f3: call Void Postfix(Int32 ByRef, LaserEffect)
L_00f8: ret
DONE

### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from Sheepy.BattleTechMod.BattleModModule.Patch(System.Reflection.MethodBase, Harmony.HarmonyMethod, Harmony.HarmonyMethod, Harmony.HarmonyMethod), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2019-09-15 05.05.03
### Patch BattleTech.UnityGameInstance, Void InitUserSettings()
L_0000: ldarg.0
L_0001: call BattleTech.GameInstance get_Game()
L_0006: callvirt BattleTech.Save.SaveManager get_SaveManager()
L_000b: call Void SetSaveManager(BattleTech.Save.SaveManager)
L_0010: ldarg.0
L_0011: ldftn Void <InitUserSettings>b__43_0()
L_0017: newobj Void .ctor(Object, IntPtr)
L_001c: call Void LoadUserSettings(System.Action)
L_0021: call Void RunGameStarts()
L_0026: ret
DONE

### Patch BattleTech.SimGameState, Void Init(BattleTech.GameInstance, SimGameType, Boolean, BattleTech.SimGameDifficulty)
L_0000: ldarg.0
L_0001: ldc.i4.1
L_0002: call Boolean HasInitStateBits(InitStates)
L_0007: brfalse Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "SIM GAME STATE ALREADY INITIALZIED"
L_0016: callvirt Void LogError(System.Object)
L_001b: br Label2
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: ldarg.s 4
L_0024: call Void _OnInit(BattleTech.GameInstance, BattleTech.SimGameDifficulty)
L_0029: ldarg.0
L_002a: ldarg.2
L_002b: ldarg.3
L_002c: call Void _OnFirstPlayInit(SimGameType, Boolean)
L_0031: ldarg.0
L_0032: ldc.i4 512
L_0037: call Void SetInitStateBits(InitStates)
L_003c: ldarg.0
L_003d: ldc.i4.1
L_003e: call Void SetInitStateBits(InitStates)
L_0043: Label2
L_0043: call Void RunCampaignStarts()
L_0048: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_Combat(BattleTech.CombatGameState)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: newobj Void .ctor(CombatGameState)
L_000e: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0013: ldarg.0
L_0014: ldarg.0
L_0015: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_001a: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0025: ldnull
L_0026: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_002b: brfalse Label1
L_0030: ldsfld HBS.Logging.ILog uiLogger
L_0035: ldstr "Couldn't find Selection Handler."
L_003a: callvirt Void LogWarning(System.Object)
L_003f: br Label2
L_0044: Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_004a: ldarg.1
L_004b: ldarg.0
L_004c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0051: Label2
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: ldc.i4.1
L_0054: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_0059: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_005e: ldarg.0
L_005f: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0064: ldnull
L_0065: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_006a: brfalse Label3
L_006f: ldsfld HBS.Logging.ILog uiLogger
L_0074: ldstr "Couldn't find MechTray under the CombatHUD."
L_0079: callvirt Void LogWarning(System.Object)
L_007e: br Label4
L_0083: Label3
L_0083: ldarg.0
L_0084: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0089: ldarg.1
L_008a: callvirt MessageCenter get_MessageCenter()
L_008f: ldarg.0
L_0090: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_0095: Label4
L_0095: ldarg.0
L_0096: ldarg.0
L_0097: ldc.i4.1
L_0098: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_009d: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00a2: ldarg.0
L_00a3: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00a8: ldnull
L_00a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ae: brfalse Label5
L_00b3: ldsfld HBS.Logging.ILog uiLogger
L_00b8: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00bd: callvirt Void LogWarning(System.Object)
L_00c2: br Label6
L_00c7: Label5
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00cd: ldarg.1
L_00ce: ldarg.0
L_00cf: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00d4: ldarg.0
L_00d5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00da: ldarg.1
L_00db: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00e0: callvirt Void RefreshTeam(BattleTech.Team)
L_00e5: Label6
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldc.i4.1
L_00e8: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00ed: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_00f2: ldarg.0
L_00f3: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_00f8: ldnull
L_00f9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label7
L_0103: ldsfld HBS.Logging.ILog uiLogger
L_0108: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_010d: callvirt Void LogWarning(System.Object)
L_0112: br Label8
L_0117: Label7
L_0117: ldarg.0
L_0118: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011d: ldnull
L_011e: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0123: ldarg.0
L_0124: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0129: ldarg.1
L_012a: ldarg.0
L_012b: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0130: Label8
L_0130: ldarg.0
L_0131: call BattleTech.UI.UIManager get_Instance()
L_0136: ldstr ""
L_013b: ldc.i4.1
L_013c: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0141: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0146: ldarg.0
L_0147: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_014c: ldnull
L_014d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0152: brfalse Label9
L_0157: ldsfld HBS.Logging.ILog uiLogger
L_015c: ldstr "Error creating PhaseTrack!"
L_0161: callvirt Void LogWarning(System.Object)
L_0166: br Label10
L_016b: Label9
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0171: ldarg.1
L_0172: ldarg.0
L_0173: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0178: Label10
L_0178: ldarg.0
L_0179: call BattleTech.UI.UIManager get_Instance()
L_017e: ldstr ""
L_0183: ldc.i4.1
L_0184: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_0189: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_018e: ldarg.0
L_018f: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0194: ldnull
L_0195: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_019a: brfalse Label11
L_019f: ldsfld HBS.Logging.ILog uiLogger
L_01a4: ldstr "Error creating Turn Event Notification!"
L_01a9: callvirt Void LogError(System.Object)
L_01ae: br Label12
L_01b3: Label11
L_01b3: ldarg.0
L_01b4: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b9: ldarg.1
L_01ba: ldarg.0
L_01bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01c0: Label12
L_01c0: ldarg.1
L_01c1: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01c6: callvirt Boolean IsNetworkGameActive()
L_01cb: brfalse Label13
L_01d0: ldarg.0
L_01d1: call BattleTech.UI.UIManager get_Instance()
L_01d6: ldstr ""
L_01db: ldc.i4.1
L_01dc: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01e1: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01e6: ldarg.0
L_01e7: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01ec: ldnull
L_01ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f2: brfalse Label14
L_01f7: ldsfld HBS.Logging.ILog uiLogger
L_01fc: ldstr "Error creating multiplayer UI!"
L_0201: callvirt Void LogError(System.Object)
L_0206: br Label15
L_020b: Label14
L_020b: ldarg.0
L_020c: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0211: ldarg.0
L_0212: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0217: Label13
L_0217: Label15
L_0217: ldarg.0
L_0218: call BattleTech.UI.UIManager get_Instance()
L_021d: ldstr ""
L_0222: ldc.i4.1
L_0223: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0228: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0233: ldnull
L_0234: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0239: brfalse Label16
L_023e: ldsfld HBS.Logging.ILog uiLogger
L_0243: ldstr "Error creating Targeting Computer!"
L_0248: callvirt Void LogError(System.Object)
L_024d: br Label17
L_0252: Label16
L_0252: ldarg.0
L_0253: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0258: ldarg.0
L_0259: callvirt Void Init(BattleTech.UI.CombatHUD)
L_025e: Label17
L_025e: ldarg.0
L_025f: call BattleTech.UI.UIManager get_Instance()
L_0264: ldstr ""
L_0269: ldc.i4.1
L_026a: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_026f: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_027a: ldnull
L_027b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0280: brfalse Label18
L_0285: ldsfld HBS.Logging.ILog uiLogger
L_028a: ldstr "Error creating Called Shot Popup!"
L_028f: callvirt Void LogError(System.Object)
L_0294: br Label19
L_0299: Label18
L_0299: ldarg.0
L_029a: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029f: ldarg.0
L_02a0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02a5: Label19
L_02a5: ldarg.0
L_02a6: call BattleTech.UI.UIManager get_Instance()
L_02ab: ldstr ""
L_02b0: ldc.i4.1
L_02b1: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02b6: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02c1: ldnull
L_02c2: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02c7: brfalse Label20
L_02cc: ldsfld HBS.Logging.ILog uiLogger
L_02d1: ldstr "Error creating Attack Mode Selector!"
L_02d6: callvirt Void LogError(System.Object)
L_02db: br Label21
L_02e0: Label20
L_02e0: ldarg.0
L_02e1: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e6: ldarg.1
L_02e7: ldarg.0
L_02e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02ed: ldarg.0
L_02ee: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f3: ldc.i4.0
L_02f4: callvirt Void set_Visible(Boolean)
L_02f9: Label21
L_02f9: ldarg.0
L_02fa: ldarg.0
L_02fb: call UnityEngine.GameObject get_gameObject()
L_0300: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0305: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_030a: ldarg.0
L_030b: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0310: ldnull
L_0311: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0316: brfalse Label22
L_031b: ldsfld HBS.Logging.ILog uiLogger
L_0320: ldstr "Error finding InWorldElementMgr!"
L_0325: callvirt Void LogError(System.Object)
L_032a: br Label23
L_032f: Label22
L_032f: ldarg.0
L_0330: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0335: ldarg.1
L_0336: ldarg.0
L_0337: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_033c: Label23
L_033c: ldarg.0
L_033d: call BattleTech.UI.UIManager get_Instance()
L_0342: ldstr ""
L_0347: ldc.i4.1
L_0348: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_034d: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0352: ldarg.0
L_0353: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0358: ldnull
L_0359: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035e: brfalse Label24
L_0363: ldsfld HBS.Logging.ILog uiLogger
L_0368: ldstr "Error creating Objective Status Notification!"
L_036d: callvirt Void LogError(System.Object)
L_0372: Label24
L_0372: ldarg.0
L_0373: call BattleTech.UI.UIManager get_Instance()
L_0378: ldstr ""
L_037d: ldc.i4.1
L_037e: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0383: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0388: ldarg.0
L_0389: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_038e: ldnull
L_038f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0394: brfalse Label25
L_0399: ldsfld HBS.Logging.ILog uiLogger
L_039e: ldstr "Error creating Objective List!"
L_03a3: callvirt Void LogError(System.Object)
L_03a8: br Label26
L_03ad: Label25
L_03ad: ldarg.0
L_03ae: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b3: ldarg.1
L_03b4: ldarg.0
L_03b5: ldarg.0
L_03b6: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03c0: Label26
L_03c0: call BattleTech.UI.UIManager get_Instance()
L_03c5: ldstr ""
L_03ca: ldc.i4.1
L_03cb: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03d0: stloc.0
L_03d1: ldloc.0
L_03d2: callvirt Void Init()
L_03d7: ldloc.0
L_03d8: ldc.i4.0
L_03d9: callvirt Void set_Visible(Boolean)
L_03de: ldarg.0
L_03df: call BattleTech.UI.UIManager get_Instance()
L_03e4: ldstr ""
L_03e9: ldc.i4.1
L_03ea: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_03ef: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_03f4: ldarg.0
L_03f5: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_03fa: ldnull
L_03fb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0400: brfalse Label27
L_0405: ldsfld HBS.Logging.ILog uiLogger
L_040a: ldstr "Error creating DialogSideStack!"
L_040f: callvirt Void LogError(System.Object)
L_0414: br Label28
L_0419: Label27
L_0419: ldarg.0
L_041a: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041f: ldarg.1
L_0420: ldarg.0
L_0421: ldloc.0
L_0422: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0427: Label28
L_0427: ldarg.0
L_0428: call BattleTech.UI.UIManager get_Instance()
L_042d: ldstr ""
L_0432: ldc.i4.1
L_0433: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0438: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_043d: ldarg.0
L_043e: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0443: ldnull
L_0444: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0449: brfalse Label29
L_044e: ldsfld HBS.Logging.ILog uiLogger
L_0453: ldstr "Error creating DialogWidget!"
L_0458: callvirt Void LogError(System.Object)
L_045d: br Label30
L_0462: Label29
L_0462: ldarg.0
L_0463: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0468: ldarg.1
L_0469: callvirt Void Init(BattleTech.CombatGameState)
L_046e: Label30
L_046e: ldarg.0
L_046f: call BattleTech.UI.UIManager get_Instance()
L_0474: ldstr ""
L_0479: ldc.i4.1
L_047a: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_047f: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0484: ldarg.0
L_0485: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_048a: ldnull
L_048b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0490: brfalse Label31
L_0495: ldsfld HBS.Logging.ILog uiLogger
L_049a: ldstr "Error creating RetreatEscMenu!"
L_049f: callvirt Void LogError(System.Object)
L_04a4: br Label32
L_04a9: Label31
L_04a9: ldarg.0
L_04aa: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04af: ldarg.1
L_04b0: ldarg.0
L_04b1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04b6: Label32
L_04b6: ldarg.0
L_04b7: call BattleTech.UI.UIManager get_Instance()
L_04bc: ldstr ""
L_04c1: ldc.i4.1
L_04c2: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04c7: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04cc: ldarg.0
L_04cd: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04d2: ldnull
L_04d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d8: brfalse Label33
L_04dd: ldsfld HBS.Logging.ILog uiLogger
L_04e2: ldstr "Error creating mission end screen!"
L_04e7: callvirt Void LogError(System.Object)
L_04ec: br Label34
L_04f1: Label33
L_04f1: ldarg.0
L_04f2: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f7: callvirt Void Init()
L_04fc: Label34
L_04fc: ldarg.0
L_04fd: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0502: ldnull
L_0503: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0508: brfalse Label35
L_050d: ldarg.0
L_050e: call BattleTech.UI.UIManager get_Instance()
L_0513: ldstr ""
L_0518: ldc.i4.1
L_0519: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_051e: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0523: ldarg.0
L_0524: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0529: ldnull
L_052a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_052f: brfalse Label36
L_0534: ldsfld HBS.Logging.ILog uiLogger
L_0539: ldstr "Error creating combat chat module"
L_053e: callvirt Void LogError(System.Object)
L_0543: br Label37
L_0548: Label36
L_0548: ldarg.0
L_0549: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054e: callvirt Void CombatInit()
L_0553: ldloc.0
L_0554: callvirt Void BumpUp()
L_0559: Label35
L_0559: Label37
L_0559: ldarg.0
L_055a: call BattleTech.UI.UIManager get_Instance()
L_055f: ldstr "DebugHUD"
L_0564: ldc.i4.1
L_0565: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_056a: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_056f: ldarg.0
L_0570: call BattleTech.UI.DebugHUD get_debugHUD()
L_0575: ldnull
L_0576: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_057b: brfalse Label38
L_0580: ldsfld HBS.Logging.ILog uiLogger
L_0585: ldstr "Error creating combat debug hud"
L_058a: callvirt Void LogError(System.Object)
L_058f: br Label39
L_0594: Label38
L_0594: ldarg.0
L_0595: call BattleTech.UI.DebugHUD get_debugHUD()
L_059a: ldarg.1
L_059b: ldarg.0
L_059c: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05a1: Label39
L_05a1: newobj Void .ctor()
L_05a6: stloc.1
L_05a7: ldarg.0
L_05a8: ldc.i4.1
L_05a9: ldloc.1
L_05aa: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05af: ldc.i4.0
L_05b0: stloc.2
L_05b1: br Label40
L_05b6: Label42
L_05b6: ldloc.1
L_05b7: ldloc.2
L_05b8: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05bd: callvirt Boolean get_IsInitialized()
L_05c2: brtrue Label41
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: ldarg.0
L_05cf: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05d4: Label41
L_05d4: ldloc.2
L_05d5: ldc.i4.1
L_05d6: add
L_05d7: stloc.2
L_05d8: Label40
L_05d8: ldloc.2
L_05d9: ldloc.1
L_05da: callvirt Int32 get_Count()
L_05df: blt Label42
L_05e4: ldarg.0
L_05e5: ldfld BattleTech.UI.UIManager uiManager
L_05ea: ldc.i4.1
L_05eb: callvirt Void SetUIRootInteractable(Boolean)
L_05f0: ldarg.1
L_05f1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_05f6: callvirt Int32 get_CurrentRound()
L_05fb: brfalse Label43
L_0600: ldarg.0
L_0601: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0606: ldarg.1
L_0607: callvirt BattleTech.TurnDirector get_TurnDirector()
L_060c: callvirt Int32 get_CurrentRound()
L_0611: callvirt Void SetRoundFromLoad(Int32)
L_0616: Label43
L_0616: ldarg.0
L_0617: ldc.i4.1
L_0618: call Void SubscribeToMessages(Boolean)
L_061d: ldarg.0
L_061e: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0623: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnCombatGameDestroyed()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void SubscribeToMessages(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_000d: ldnull
L_000e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0013: brfalse Label1
L_0018: ldarg.0
L_0019: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_001e: ldc.i4.0
L_001f: callvirt Void set_ListeningForDisconnects(Boolean)
L_0024: Label1
L_0024: ldarg.0
L_0025: call BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_002a: callvirt Void OnCombatGameDestroyed()
L_002f: ldarg.0
L_0030: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0035: callvirt Void OnCombatGameDestroyed()
L_003a: ldarg.0
L_003b: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_0040: callvirt Void OnCombatGameDestroyed()
L_0045: ldarg.0
L_0046: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_004b: callvirt Void OnCombatGameDestroyed()
L_0050: ldarg.0
L_0051: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0056: callvirt Void OnCombatGameDestroyed()
L_005b: ldarg.0
L_005c: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0061: callvirt Void OnCombatGameDestroyed()
L_0066: ldarg.0
L_0067: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_006c: callvirt Void OnCombatGameDestroyed()
L_0071: ldarg.0
L_0072: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0077: callvirt Void OnCombatGameDestroyed()
L_007c: ldarg.0
L_007d: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_0082: callvirt Void OnCombatGameDestroyed()
L_0087: ldarg.0
L_0088: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_008d: callvirt Void OnCombatGameDestroyed()
L_0092: ldarg.0
L_0093: call BattleTech.UI.DebugHUD get_debugHUD()
L_0098: callvirt Void OnCombatGameDestroyed()
L_009d: ldnull
L_009e: stsfld BattleTech.UI.ColorOverrides moraleButtonOverrides
L_00a3: ldnull
L_00a4: stsfld BattleTech.UI.ColorOverrides ejectButtonOverrides
L_00a9: ldarg.0
L_00aa: call Void RunCombatEnds(BattleTech.UI.CombatHUD)
L_00af: ret
DONE

### Harmony id=io.mission.modrepuation, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CACMain.Core.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2019-09-15 05.05.04
### Patch AIUtil, Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.Mech
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: ldfld BattleTech.Weapon MeleeWeapon
L_000d: callvirt Void Add(BattleTech.Weapon)
L_0012: ldarg.0
L_0013: stloc.1
L_0014: ldloc.1
L_0015: brtrue Label1
L_001a: ldc.r4 0
L_001f: br Label6
L_0024: Label1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label2
L_002b: Label5
L_002b: ldloc.1
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0031: ldloc.2
L_0032: callvirt BattleTech.Weapon get_Item(Int32)
L_0037: stloc.3
L_0038: ldloc.3
L_0039: callvirt Boolean get_CanFire()
L_003e: brfalse Label3
L_0043: ldloc.3
L_0044: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0049: ldc.i4.4
L_004a: bne.un Label4
L_004f: ldloc.0
L_0050: ldloc.3
L_0051: callvirt Void Add(BattleTech.Weapon)
L_0056: Label3
L_0056: Label4
L_0056: ldloc.2
L_0057: ldc.i4.1
L_0058: add
L_0059: stloc.2
L_005a: Label2
L_005a: ldloc.2
L_005b: ldloc.1
L_005c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0061: callvirt Int32 get_Count()
L_0066: blt Label5
L_006b: ldarg.0
L_006c: ldc.i4.1
L_006d: ldloc.0
L_006e: ldarg.1
L_006f: ldarg.2
L_0070: ldarg.3
L_0071: ldarg.s 4
L_0073: ldarg.s 5
L_0075: call Single ExpectedDamageForAttack(BattleTech.AbstractActor, AttackType, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_007a: Label6
L_007a: ret
DONE

### Patch AttackEvaluator, Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 10: BattleTech.Mech
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]][]
L_0000: Local var 13: System.Collections.Generic.List`1[[AttackEvaluator+AttackEvaluation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Weapon
L_0000: Local var 19: System.Boolean
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: UnityEngine.Vector3
L_0000: Local var 23: System.Int32
L_0000: Local var 24: System.String
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.Single
L_0000: Local var 27: System.Single
L_0000: Local var 28: System.Single
L_0000: Local var 29: System.Single
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: Local var 32: BattleTech.Weapon
L_0000: Local var 33: System.Int32
L_0000: Local var 34: AttackEvaluator+AttackEvaluation
L_0000: Local var 35: AIUtil+AttackType
L_0000: Local var 36: System.Int32
L_0000: Local var 37: AttackEvaluator+AttackEvaluation
L_0000: Local var 38: System.Boolean
L_0000: Local var 39: System.Boolean
L_0000: Local var 40: System.Boolean
L_0000: Local var 41: BattleTech.AbstractActor
L_0000: Local var 42: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 43: BattleTech.Weapon
L_0000: Local var 44: BehaviorTreeResults
L_0000: Local var 45: MultiTargetAttackOrderInfo
L_0000: Local var 46: CalledShotAttackOrderInfo
L_0000: Local var 47: CalledShotAttackOrderInfo
L_0000: Local var 48: AttackOrderInfo
L_0000: Local var 49: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 50: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.r4 3.402823E+38
L_000b: stloc.1
L_000c: ldc.r4 0
L_0011: stloc.2
L_0012: ldarg.0
L_0013: isinst BattleTech.Mech
L_0018: stloc.3
L_0019: ldloc.3
L_001a: brfalse Label1
L_001f: ldloc.3
L_0020: callvirt Int32 get_CurrentHeat()
L_0025: conv.r4
L_0026: stloc.0
L_0027: ldloc.3
L_0028: call Single GetAcceptableHeatLevelForMech(BattleTech.Mech)
L_002d: stloc.1
L_002e: ldloc.3
L_002f: call Single LegDamageLevel(BattleTech.Mech)
L_0034: stloc.2
L_0035: Label1
L_0035: ldarg.0
L_0036: ldstr "heat level: "
L_003b: ldloc.0
L_003c: box System.Single
L_0041: call System.String Concat(System.Object, System.Object)
L_0046: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_004b: ldarg.0
L_004c: ldstr "acceptable heat: "
L_0051: ldloc.1
L_0052: box System.Single
L_0057: call System.String Concat(System.Object, System.Object)
L_005c: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0061: ldarg.0
L_0062: ldfld BehaviorTree BehaviorTree
L_0067: ldc.i4.s 40
L_0069: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_006e: callvirt Single get_FloatVal()
L_0073: stloc.s 4 (System.Single)
L_0075: ldarg.0
L_0076: ldfld BehaviorTree BehaviorTree
L_007b: ldc.i4.s 42
L_007d: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0082: callvirt Single get_FloatVal()
L_0087: stloc.s 5 (System.Single)
L_0089: ldarg.0
L_008a: ldfld BehaviorTree BehaviorTree
L_008f: ldc.i4.1
L_0090: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0095: callvirt Single get_FloatVal()
L_009a: stloc.s 6 (System.Single)
L_009c: ldarg.0
L_009d: ldfld BehaviorTree BehaviorTree
L_00a2: ldfld System.Single weaponToHitThreshold
L_00a7: stloc.s 7 (System.Single)
L_00a9: ldarg.0
L_00aa: ldarg.1
L_00ab: call Single MaxDamageLevel(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00b0: stloc.s 8 (System.Single)
L_00b2: ldarg.0
L_00b3: ldc.i4.4
L_00b4: newarr System.Object
L_00b9: dup
L_00ba: ldc.i4.0
L_00bb: ldstr "Evaluating attack target "
L_00c0: stelem.ref
L_00c1: dup
L_00c2: ldc.i4.1
L_00c3: ldarg.1
L_00c4: callvirt System.String get_DisplayName()
L_00c9: stelem.ref
L_00ca: dup
L_00cb: ldc.i4.2
L_00cc: ldstr " at "
L_00d1: stelem.ref
L_00d2: dup
L_00d3: ldc.i4.3
L_00d4: ldarg.1
L_00d5: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00da: box UnityEngine.Vector3
L_00df: stelem.ref
L_00e0: call System.String Concat(System.Object[])
L_00e5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_00ea: ldarg.0
L_00eb: ldarg.1
L_00ec: call Boolean UnitHasVisibilityToTargetFromCurrentPosition(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00f1: brtrue Label2
L_00f6: ldarg.s 4
L_00f8: ldc.i4.0
L_00f9: call BehaviorTreeResults BehaviorTreeResultsFromBoolean(Boolean)
L_00fe: stind.ref
L_00ff: ldc.r4 0
L_0104: br Label98
L_0109: Label2
L_0109: ldc.i4.3
L_010a: newarr System.Collections.Generic.List`1[BattleTech.Weapon]
L_010f: dup
L_0110: ldc.i4.0
L_0111: newobj Void .ctor()
L_0116: stelem.ref
L_0117: dup
L_0118: ldc.i4.1
L_0119: newobj Void .ctor()
L_011e: stelem.ref
L_011f: dup
L_0120: ldc.i4.2
L_0121: newobj Void .ctor()
L_0126: stelem.ref
L_0127: stloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0129: ldc.i4.0
L_012a: stloc.s 17 (System.Int32)
L_012c: br Label3
L_0131: Label9
L_0131: ldarg.0
L_0132: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0137: ldloc.s 17 (System.Int32)
L_0139: callvirt BattleTech.Weapon get_Item(Int32)
L_013e: stloc.s 18 (BattleTech.Weapon)
L_0140: ldarg.0
L_0141: ldstr "Considering Weapon "
L_0146: ldloc.s 18 (BattleTech.Weapon)
L_0148: callvirt System.String get_Name()
L_014d: call System.String Concat(System.String, System.String)
L_0152: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0157: ldloc.s 18 (BattleTech.Weapon)
L_0159: callvirt Boolean get_CanFire()
L_015e: brtrue Label4
L_0163: ldarg.0
L_0164: ldstr "disregarding because not can fire"
L_0169: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_016e: br Label5
L_0173: Label4
L_0173: ldloc.s 18 (BattleTech.Weapon)
L_0175: ldarg.1
L_0176: ldarg.0
L_0177: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_017c: ldarg.0
L_017d: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0182: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0187: stloc.s 19 (System.Boolean)
L_0189: ldarg.0
L_018a: callvirt BattleTech.CombatGameState get_Combat()
L_018f: callvirt LOFCache get_LOFCache()
L_0194: ldarg.0
L_0195: ldarg.1
L_0196: ldloc.s 18 (BattleTech.Weapon)
L_0198: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_019d: stloc.s 20 (System.Boolean)
L_019f: ldarg.1
L_01a0: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a5: ldarg.0
L_01a6: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01ab: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_01b0: stloc.s 22 (UnityEngine.Vector3)
L_01b2: ldloca.s 22 (UnityEngine.Vector3)
L_01b4: call Single get_magnitude()
L_01b9: ldloc.s 18 (BattleTech.Weapon)
L_01bb: callvirt Single get_MaxRange()
L_01c0: cgt.un
L_01c2: ldc.i4.0
L_01c3: ceq
L_01c5: stloc.s 21 (System.Boolean)
L_01c7: ldarg.0
L_01c8: ldstr "will fire at target? "
L_01cd: ldloca.s 19 (System.Boolean)
L_01cf: call System.String ToString()
L_01d4: call System.String Concat(System.String, System.String)
L_01d9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_01de: ldarg.0
L_01df: ldstr "hasLOF? "
L_01e4: ldloca.s 20 (System.Boolean)
L_01e6: call System.String ToString()
L_01eb: call System.String Concat(System.String, System.String)
L_01f0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_01f5: ldarg.0
L_01f6: ldstr "inRange? "
L_01fb: ldloca.s 21 (System.Boolean)
L_01fd: call System.String ToString()
L_0202: call System.String Concat(System.String, System.String)
L_0207: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_020c: ldloc.s 19 (System.Boolean)
L_020e: ldloc.s 20 (System.Boolean)
L_0210: and
L_0211: ldloc.s 21 (System.Boolean)
L_0213: and
L_0214: brfalse Label6
L_0219: ldarg.0
L_021a: ldstr "willFireAtTarget and LOF"
L_021f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0224: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0226: ldc.i4.0
L_0227: ldelem.ref
L_0228: ldloc.s 18 (BattleTech.Weapon)
L_022a: callvirt Void Add(BattleTech.Weapon)
L_022f: br Label7
L_0234: Label6
L_0234: ldarg.0
L_0235: ldstr "not WFAT or hasLOF or inRange"
L_023a: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_023f: Label7
L_023f: ldloc.s 18 (BattleTech.Weapon)
L_0241: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0246: ldc.i4.4
L_0247: bne.un Label8
L_024c: ldarg.0
L_024d: ldstr "adding to melee and DFA"
L_0252: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0257: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0259: ldc.i4.1
L_025a: ldelem.ref
L_025b: ldloc.s 18 (BattleTech.Weapon)
L_025d: callvirt Void Add(BattleTech.Weapon)
L_0262: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0264: ldc.i4.2
L_0265: ldelem.ref
L_0266: ldloc.s 18 (BattleTech.Weapon)
L_0268: callvirt Void Add(BattleTech.Weapon)
L_026d: Label5
L_026d: Label8
L_026d: ldloc.s 17 (System.Int32)
L_026f: ldc.i4.1
L_0270: add
L_0271: stloc.s 17 (System.Int32)
L_0273: Label3
L_0273: ldloc.s 17 (System.Int32)
L_0275: ldarg.0
L_0276: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_027b: callvirt Int32 get_Count()
L_0280: blt Label9
L_0285: ldarg.1
L_0286: isinst BattleTech.Mech
L_028b: stloc.s 10 (BattleTech.Mech)
L_028d: ldloc.s 10 (BattleTech.Mech)
L_028f: brfalse Label10
L_0294: ldloc.s 10 (BattleTech.Mech)
L_0296: callvirt Boolean get_IsEvasive()
L_029b: br Label11
L_02a0: Label10
L_02a0: ldc.i4.0
L_02a1: Label11
L_02a1: stloc.s 11 (System.Boolean)
L_02a3: ldc.i4.3
L_02a4: newarr System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]]
L_02a9: stloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_02ab: ldc.i4.0
L_02ac: stloc.s 23 (System.Int32)
L_02ae: br Label12
L_02b3: Label44
L_02b3: ldarg.0
L_02b4: ldstr "considering attack type "
L_02b9: ldloc.s 23 (System.Int32)
L_02bb: box System.Int32
L_02c0: call System.String Concat(System.Object, System.Object)
L_02c5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02ca: ldloc.3
L_02cb: brtrue Label13
L_02d0: ldloc.s 23 (System.Int32)
L_02d2: ldc.i4.1
L_02d3: beq Label14
L_02d8: ldloc.s 23 (System.Int32)
L_02da: ldc.i4.2
L_02db: bne.un Label15
L_02e0: Label14
L_02e0: ldarg.0
L_02e1: ldstr "this unit can't melee or dfa"
L_02e6: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02eb: br Label16
L_02f0: Label13
L_02f0: Label15
L_02f0: ldloc.s 23 (System.Int32)
L_02f2: ldc.i4.1
L_02f3: bne.un Label17
L_02f8: ldloc.3
L_02f9: ldarg.1
L_02fa: ldloca.s 24 (System.String)
L_02fc: callvirt Boolean CanEngageTarget(BattleTech.ICombatant, System.String ByRef)
L_0301: brtrue Label18
L_0306: ldarg.0
L_0307: ldstr "unit.CanEngageTarget returned FALSE because: "
L_030c: ldloc.s 24 (System.String)
L_030e: call System.String Concat(System.String, System.String)
L_0313: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0318: br Label19
L_031d: Label17
L_031d: Label18
L_031d: ldloc.s 23 (System.Int32)
L_031f: ldc.i4.1
L_0320: bne.un Label20
L_0325: ldloc.s 10 (BattleTech.Mech)
L_0327: brfalse Label21
L_032c: ldloc.s 10 (BattleTech.Mech)
L_032e: ldarg.0
L_032f: ldloc.s 10 (BattleTech.Mech)
L_0331: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0336: ldloc.3
L_0337: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_033c: ldc.i4.0
L_033d: ldarg.0
L_033e: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0343: stloc.s 25 (System.Single)
L_0345: ldloc.3
L_0346: ldarg.1
L_0347: ldloc.3
L_0348: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_034d: ldarg.1
L_034e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0353: ldc.i4.0
L_0354: ldarg.0
L_0355: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_035a: stloc.s 26 (System.Single)
L_035c: ldloc.s 26 (System.Single)
L_035e: ldc.r4 0
L_0363: bgt.un Label22
L_0368: ldarg.0
L_0369: ldstr "expected damage: "
L_036e: ldloc.s 26 (System.Single)
L_0370: box System.Single
L_0375: call System.String Concat(System.Object, System.Object)
L_037a: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_037f: br Label23
L_0384: Label22
L_0384: ldloc.s 25 (System.Single)
L_0386: ldloc.s 26 (System.Single)
L_0388: div
L_0389: stloc.s 27 (System.Single)
L_038b: ldarg.0
L_038c: ldfld BehaviorTree BehaviorTree
L_0391: ldc.i4.s 56
L_0393: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0398: callvirt Single get_FloatVal()
L_039d: stloc.s 28 (System.Single)
L_039f: ldloc.s 27 (System.Single)
L_03a1: ldloc.s 28 (System.Single)
L_03a3: ble.un Label24
L_03a8: ldarg.0
L_03a9: ldc.i4.4
L_03aa: newarr System.Object
L_03af: dup
L_03b0: ldc.i4.0
L_03b1: ldstr "melee ratio too high: "
L_03b6: stelem.ref
L_03b7: dup
L_03b8: ldc.i4.1
L_03b9: ldloc.s 27 (System.Single)
L_03bb: box System.Single
L_03c0: stelem.ref
L_03c1: dup
L_03c2: ldc.i4.2
L_03c3: ldstr " vs "
L_03c8: stelem.ref
L_03c9: dup
L_03ca: ldc.i4.3
L_03cb: ldloc.s 28 (System.Single)
L_03cd: box System.Single
L_03d2: stelem.ref
L_03d3: call System.String Concat(System.Object[])
L_03d8: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_03dd: br Label25
L_03e2: Label20
L_03e2: Label21
L_03e2: Label24
L_03e2: ldloc.s 23 (System.Int32)
L_03e4: ldc.i4.2
L_03e5: bne.un Label26
L_03ea: ldarg.0
L_03eb: ldarg.1
L_03ec: call Boolean IsDFAAcceptable(BattleTech.AbstractActor, BattleTech.ICombatant)
L_03f1: brtrue Label27
L_03f6: ldarg.0
L_03f7: ldstr "unit cannot DFA"
L_03fc: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0401: br Label28
L_0406: Label26
L_0406: Label27
L_0406: ldloc.s 11 (System.Boolean)
L_0408: brfalse Label29
L_040d: ldarg.0
L_040e: callvirt BattleTech.UnitType get_UnitType()
L_0413: ldc.i4.1
L_0414: bne.un Label30
L_0419: ldarg.0
L_041a: ldfld BehaviorTree BehaviorTree
L_041f: ldc.i4 179
L_0424: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0429: callvirt Single get_FloatVal()
L_042e: ldc.r4 100
L_0433: div
L_0434: stloc.s 29 (System.Single)
L_0436: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0438: ldloc.s 23 (System.Int32)
L_043a: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_043c: ldloc.s 23 (System.Int32)
L_043e: ldelem.ref
L_043f: ldloc.s 29 (System.Single)
L_0441: ldarg.1
L_0442: ldarg.0
L_0443: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0448: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_044d: stelem.ref
L_044e: br Label31
L_0453: Label29
L_0453: Label30
L_0453: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0455: ldloc.s 23 (System.Int32)
L_0457: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0459: ldloc.s 23 (System.Int32)
L_045b: ldelem.ref
L_045c: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSets(System.Collections.Generic.List`1[BattleTech.Weapon])
L_0461: stelem.ref
L_0462: Label31
L_0462: ldloc.3
L_0463: brfalse Label32
L_0468: ldloc.s 23 (System.Int32)
L_046a: ldc.i4.1
L_046b: beq Label33
L_0470: ldloc.s 23 (System.Int32)
L_0472: ldc.i4.2
L_0473: bne.un Label34
L_0478: Label33
L_0478: ldc.i4.0
L_0479: stloc.s 30 (System.Int32)
L_047b: br Label35
L_0480: Label43
L_0480: ldloc.s 23 (System.Int32)
L_0482: ldc.i4.1
L_0483: bne.un Label36
L_0488: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_048a: ldloc.s 23 (System.Int32)
L_048c: ldelem.ref
L_048d: ldloc.s 30 (System.Int32)
L_048f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0494: ldloc.3
L_0495: ldfld BattleTech.Weapon MeleeWeapon
L_049a: callvirt Void Add(BattleTech.Weapon)
L_049f: Label36
L_049f: ldloc.s 23 (System.Int32)
L_04a1: ldc.i4.2
L_04a2: bne.un Label37
L_04a7: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04a9: ldloc.s 23 (System.Int32)
L_04ab: ldelem.ref
L_04ac: ldloc.s 30 (System.Int32)
L_04ae: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04b3: ldloc.3
L_04b4: ldfld BattleTech.Weapon DFAWeapon
L_04b9: callvirt Void Add(BattleTech.Weapon)
L_04be: Label37
L_04be: ldc.i4.0
L_04bf: stloc.s 31 (System.Int32)
L_04c1: br Label38
L_04c6: Label42
L_04c6: ldloc.3
L_04c7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_04cc: ldloc.s 31 (System.Int32)
L_04ce: callvirt BattleTech.Weapon get_Item(Int32)
L_04d3: stloc.s 32 (BattleTech.Weapon)
L_04d5: ldloc.s 32 (BattleTech.Weapon)
L_04d7: callvirt Boolean get_CanFire()
L_04dc: brfalse Label39
L_04e1: ldloc.s 32 (BattleTech.Weapon)
L_04e3: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_04e8: ldc.i4.4
L_04e9: bne.un Label40
L_04ee: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04f0: ldloc.s 23 (System.Int32)
L_04f2: ldelem.ref
L_04f3: ldloc.s 30 (System.Int32)
L_04f5: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04fa: ldloc.s 32 (BattleTech.Weapon)
L_04fc: callvirt Boolean Contains(BattleTech.Weapon)
L_0501: brtrue Label41
L_0506: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0508: ldloc.s 23 (System.Int32)
L_050a: ldelem.ref
L_050b: ldloc.s 30 (System.Int32)
L_050d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0512: ldloc.s 32 (BattleTech.Weapon)
L_0514: callvirt Void Add(BattleTech.Weapon)
L_0519: Label39
L_0519: Label40
L_0519: Label41
L_0519: ldloc.s 31 (System.Int32)
L_051b: ldc.i4.1
L_051c: add
L_051d: stloc.s 31 (System.Int32)
L_051f: Label38
L_051f: ldloc.s 31 (System.Int32)
L_0521: ldloc.3
L_0522: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0527: callvirt Int32 get_Count()
L_052c: blt Label42
L_0531: ldloc.s 30 (System.Int32)
L_0533: ldc.i4.1
L_0534: add
L_0535: stloc.s 30 (System.Int32)
L_0537: Label35
L_0537: ldloc.s 30 (System.Int32)
L_0539: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_053b: ldloc.s 23 (System.Int32)
L_053d: ldelem.ref
L_053e: callvirt Int32 get_Count()
L_0543: blt Label43
L_0548: Label16
L_0548: Label19
L_0548: Label23
L_0548: Label25
L_0548: Label28
L_0548: Label32
L_0548: Label34
L_0548: ldloc.s 23 (System.Int32)
L_054a: ldc.i4.1
L_054b: add
L_054c: stloc.s 23 (System.Int32)
L_054e: Label12
L_054e: ldloc.s 23 (System.Int32)
L_0550: ldc.i4.3
L_0551: blt Label44
L_0556: ldarg.0
L_0557: ldarg.1
L_0558: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_055a: ldarg.0
L_055b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0560: ldarg.1
L_0561: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0566: ldloc.s 11 (System.Boolean)
L_0568: call System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation] EvaluateAttacks(BattleTech.AbstractActor, BattleTech.ICombatant, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][], UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_056d: stloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_056f: ldarg.0
L_0570: ldstr "found {0} different attack solutions"
L_0575: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0577: callvirt Int32 get_Count()
L_057c: box System.Int32
L_0581: call System.String Format(System.String, System.Object)
L_0586: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_058b: ldc.r4 0
L_0590: stloc.s 14 (System.Single)
L_0592: ldc.r4 0
L_0597: stloc.s 15 (System.Single)
L_0599: ldc.r4 0
L_059e: stloc.s 16 (System.Single)
L_05a0: ldc.i4.0
L_05a1: stloc.s 33 (System.Int32)
L_05a3: br Label45
L_05a8: Label53
L_05a8: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05aa: ldloc.s 33 (System.Int32)
L_05ac: callvirt AttackEvaluation get_Item(Int32)
L_05b1: stloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05b3: ldarg.0
L_05b4: ldstr "evaluated attack of type {0} with {1} weapons and a result of {2}"
L_05b9: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05bb: ldfld AIUtil+AttackType AttackType
L_05c0: box AIUtil+AttackType
L_05c5: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05c7: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_05cc: callvirt Int32 get_Count()
L_05d1: box System.Int32
L_05d6: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05d8: ldfld System.Single ExpectedDamage
L_05dd: box System.Single
L_05e2: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_05e7: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_05ec: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05ee: ldfld AIUtil+AttackType AttackType
L_05f3: stloc.s 35 (AIUtil+AttackType)
L_05f5: ldloc.s 35 (AIUtil+AttackType)
L_05f7: switch Labels46,47,48
L_0608: br Label49
L_060d: Label46
L_060d: ldloc.s 14 (System.Single)
L_060f: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0611: ldfld System.Single ExpectedDamage
L_0616: call Single Max(Single, Single)
L_061b: stloc.s 14 (System.Single)
L_061d: br Label50
L_0622: Label47
L_0622: ldloc.s 15 (System.Single)
L_0624: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0626: ldfld System.Single ExpectedDamage
L_062b: call Single Max(Single, Single)
L_0630: stloc.s 15 (System.Single)
L_0632: br Label51
L_0637: Label48
L_0637: ldloc.s 16 (System.Single)
L_0639: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_063b: ldfld System.Single ExpectedDamage
L_0640: call Single Max(Single, Single)
L_0645: stloc.s 16 (System.Single)
L_0647: br Label52
L_064c: Label49
L_064c: ldstr "unknown attack type: "
L_0651: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0653: ldfld AIUtil+AttackType AttackType
L_0658: box AIUtil+AttackType
L_065d: call System.String Concat(System.Object, System.Object)
L_0662: call Void Log(System.Object)
L_0667: Label50
L_0667: Label51
L_0667: Label52
L_0667: ldloc.s 33 (System.Int32)
L_0669: ldc.i4.1
L_066a: add
L_066b: stloc.s 33 (System.Int32)
L_066d: Label45
L_066d: ldloc.s 33 (System.Int32)
L_066f: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0671: callvirt Int32 get_Count()
L_0676: blt Label53
L_067b: ldarg.0
L_067c: ldstr "best shooting: "
L_0681: ldloc.s 14 (System.Single)
L_0683: box System.Single
L_0688: call System.String Concat(System.Object, System.Object)
L_068d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0692: ldarg.0
L_0693: ldstr "best melee: "
L_0698: ldloc.s 15 (System.Single)
L_069a: box System.Single
L_069f: call System.String Concat(System.Object, System.Object)
L_06a4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06a9: ldarg.0
L_06aa: ldstr "best dfa: "
L_06af: ldloc.s 16 (System.Single)
L_06b1: box System.Single
L_06b6: call System.String Concat(System.Object, System.Object)
L_06bb: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06c0: ldc.i4.0
L_06c1: stloc.s 36 (System.Int32)
L_06c3: br Label54
L_06c8: Label97
L_06c8: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_06ca: ldloc.s 36 (System.Int32)
L_06cc: callvirt AttackEvaluation get_Item(Int32)
L_06d1: stloc.s 37 (AttackEvaluator+AttackEvaluation)
L_06d3: ldarg.0
L_06d4: ldstr "evaluating attack solution #"
L_06d9: ldloc.s 36 (System.Int32)
L_06db: box System.Int32
L_06e0: call System.String Concat(System.Object, System.Object)
L_06e5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06ea: ldarg.0
L_06eb: ldstr "------"
L_06f0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06f5: ldarg.0
L_06f6: ldstr "Weapons:"
L_06fb: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0700: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0702: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0707: callvirt Enumerator GetEnumerator()
L_070c: stloc.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_070e: br Label55
	L_0713: Label56
	L_0713: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0715: call BattleTech.Weapon get_Current()
	L_071a: stloc.s 43 (BattleTech.Weapon)
	L_071c: ldarg.0
	L_071d: ldstr "Weapon: "
	L_0722: ldloc.s 43 (BattleTech.Weapon)
	L_0724: callvirt System.String get_Name()
	L_0729: call System.String Concat(System.String, System.String)
	L_072e: call Void LogShoot(BattleTech.AbstractActor, System.String)
	L_0733: Label55
	L_0733: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0735: call Boolean MoveNext()
	L_073a: brtrue Label56
	L_073f: leave Label57
	L_0744: leave (autogenerated)
} // end try
.finally
{
	L_0749: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_074b: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_0751: callvirt Void Dispose()
	L_0756: endfinally
	L_0757: leave (autogenerated)
} // end handler
L_0758: Label57
L_0758: ldarg.0
L_0759: ldstr "heat generated for attack solution: "
L_075e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0760: ldfld System.Single HeatGenerated
L_0765: box System.Single
L_076a: call System.String Concat(System.Object, System.Object)
L_076f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0774: ldarg.0
L_0775: ldstr "current heat: "
L_077a: ldloc.0
L_077b: box System.Single
L_0780: call System.String Concat(System.Object, System.Object)
L_0785: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_078a: ldarg.0
L_078b: ldstr "acceptable heat: "
L_0790: ldloc.1
L_0791: box System.Single
L_0796: call System.String Concat(System.Object, System.Object)
L_079b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07a0: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_07a2: ldfld System.Single HeatGenerated
L_07a7: ldloc.0
L_07a8: add
L_07a9: ldloc.1
L_07aa: cgt
L_07ac: stloc.s 38 (System.Boolean)
L_07ae: ldarg.0
L_07af: ldstr "will overheat? "
L_07b4: ldloca.s 38 (System.Boolean)
L_07b6: call System.String ToString()
L_07bb: call System.String Concat(System.String, System.String)
L_07c0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07c5: ldloc.s 38 (System.Boolean)
L_07c7: brfalse Label58
L_07cc: ldloc.3
L_07cd: callvirt Boolean OverheatWillCauseDeath()
L_07d2: brfalse Label59
L_07d7: ldarg.0
L_07d8: ldstr "rejecting attack because overheat would cause own death"
L_07dd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07e2: br Label60
L_07e7: Label58
L_07e7: Label59
L_07e7: ldloc.s 8 (System.Single)
L_07e9: ldloc.s 6 (System.Single)
L_07eb: clt.un
L_07ed: ldc.i4.0
L_07ee: ceq
L_07f0: stloc.s 39 (System.Boolean)
L_07f2: ldarg.0
L_07f3: ldstr "but enough damage for overheat attack? "
L_07f8: ldloca.s 39 (System.Boolean)
L_07fa: call System.String ToString()
L_07ff: call System.String Concat(System.String, System.String)
L_0804: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0809: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_080b: ldfld System.Single lowestHitChance
L_0810: ldloc.s 7 (System.Single)
L_0812: clt.un
L_0814: ldc.i4.0
L_0815: ceq
L_0817: stloc.s 40 (System.Boolean)
L_0819: ldarg.0
L_081a: ldstr "but enough accuracy for overheat attack? "
L_081f: ldloca.s 40 (System.Boolean)
L_0821: call System.String ToString()
L_0826: call System.String Concat(System.String, System.String)
L_082b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0830: ldarg.1
L_0831: isinst BattleTech.AbstractActor
L_0836: stloc.s 41 (BattleTech.AbstractActor)
L_0838: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_083a: ldfld AIUtil+AttackType AttackType
L_083f: ldc.i4.1
L_0840: bne.un Label61
L_0845: ldarg.0
L_0846: ldarg.1
L_0847: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_084c: brfalse Label62
L_0851: ldloc.s 41 (BattleTech.AbstractActor)
L_0853: brfalse Label63
L_0858: ldarg.3
L_0859: brtrue Label64
L_085e: Label62
L_085e: Label63
L_085e: ldarg.0
L_085f: ldstr "Can't Melee"
L_0864: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0869: br Label65
L_086e: Label61
L_086e: Label64
L_086e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0870: ldfld AIUtil+AttackType AttackType
L_0875: ldc.i4.2
L_0876: bne.un Label66
L_087b: ldarg.0
L_087c: ldarg.1
L_087d: ldarg.0
L_087e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0883: callvirt Boolean CanDFATargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_0888: brfalse Label67
L_088d: ldloc.s 8 (System.Single)
L_088f: ldloc.s 4 (System.Single)
L_0891: blt Label68
L_0896: ldloc.2
L_0897: ldloc.s 5 (System.Single)
L_0899: ble.un Label69
L_089e: Label67
L_089e: Label68
L_089e: ldarg.0
L_089f: ldstr "Can't DFA"
L_08a4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08a9: br Label70
L_08ae: Label66
L_08ae: Label69
L_08ae: ldloc.s 38 (System.Boolean)
L_08b0: brfalse Label71
L_08b5: ldloc.s 39 (System.Boolean)
L_08b7: brfalse Label72
L_08bc: ldloc.s 40 (System.Boolean)
L_08be: brtrue Label73
L_08c3: Label72
L_08c3: ldarg.0
L_08c4: ldstr "rejecting attack for not enough damage or accuracy on an attack that will overheat"
L_08c9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08ce: br Label74
L_08d3: Label71
L_08d3: Label73
L_08d3: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08d5: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_08da: callvirt Int32 get_Count()
L_08df: brtrue Label75
L_08e4: ldarg.0
L_08e5: ldstr "rejecting attack for not having any weapons"
L_08ea: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08ef: br Label76
L_08f4: Label75
L_08f4: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08f6: ldfld System.Single ExpectedDamage
L_08fb: ldc.r4 0
L_0900: bgt.un Label77
L_0905: ldarg.0
L_0906: ldstr "rejecting attack for not having any expected damage"
L_090b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0910: br Label78
L_0915: Label77
L_0915: ldc.i4.1
L_0916: newobj Void .ctor(BehaviorNodeState)
L_091b: stloc.s 44 (BehaviorTreeResults)
L_091d: ldarg.0
L_091e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0920: ldarg.2
L_0921: call CalledShotAttackOrderInfo MakeOffensivePushOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_0926: stloc.s 47 (CalledShotAttackOrderInfo)
L_0928: ldloc.s 47 (CalledShotAttackOrderInfo)
L_092a: brfalse Label79
L_092f: ldloc.s 44 (BehaviorTreeResults)
L_0931: ldloc.s 47 (CalledShotAttackOrderInfo)
L_0933: stfld OrderInfo orderInfo
L_0938: ldloc.s 44 (BehaviorTreeResults)
L_093a: ldarg.0
L_093b: callvirt System.String get_DisplayName()
L_0940: ldstr " using offensive push"
L_0945: call System.String Concat(System.String, System.String)
L_094a: stfld System.String debugOrderString
L_094f: br Label80
L_0954: Label79
L_0954: ldarg.0
L_0955: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0957: ldarg.2
L_0958: ldc.i4.0
L_0959: call CalledShotAttackOrderInfo MakeCalledShotOrder(BattleTech.AbstractActor, AttackEvaluation, Int32, Boolean)
L_095e: dup
L_095f: stloc.s 46 (CalledShotAttackOrderInfo)
L_0961: brfalse Label81
L_0966: ldloc.s 44 (BehaviorTreeResults)
L_0968: ldloc.s 46 (CalledShotAttackOrderInfo)
L_096a: stfld OrderInfo orderInfo
L_096f: ldloc.s 44 (BehaviorTreeResults)
L_0971: ldarg.0
L_0972: callvirt System.String get_DisplayName()
L_0977: ldstr " using called shot"
L_097c: call System.String Concat(System.String, System.String)
L_0981: stfld System.String debugOrderString
L_0986: br Label82
L_098b: Label81
L_098b: ldloc.s 38 (System.Boolean)
L_098d: brtrue Label83
L_0992: ldarg.0
L_0993: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0995: ldarg.2
L_0996: call MultiTargetAttackOrderInfo MakeMultiAttackOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_099b: dup
L_099c: stloc.s 45 (MultiTargetAttackOrderInfo)
L_099e: brfalse Label84
L_09a3: ldloc.s 44 (BehaviorTreeResults)
L_09a5: ldloc.s 45 (MultiTargetAttackOrderInfo)
L_09a7: stfld OrderInfo orderInfo
L_09ac: ldloc.s 44 (BehaviorTreeResults)
L_09ae: ldarg.0
L_09af: callvirt System.String get_DisplayName()
L_09b4: ldstr " using multi attack"
L_09b9: call System.String Concat(System.String, System.String)
L_09be: stfld System.String debugOrderString
L_09c3: br Label85
L_09c8: Label83
L_09c8: Label84
L_09c8: ldarg.1
L_09c9: newobj Void .ctor(ICombatant)
L_09ce: stloc.s 48 (AttackOrderInfo)
L_09d0: ldloc.s 48 (AttackOrderInfo)
L_09d2: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09d4: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_09d9: stfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_09de: ldloc.s 48 (AttackOrderInfo)
L_09e0: ldarg.1
L_09e1: stfld BattleTech.ICombatant TargetUnit
L_09e6: ldloc.s 48 (AttackOrderInfo)
L_09e8: ldloc.s 38 (System.Boolean)
L_09ea: brfalse Label86
L_09ef: ldarg.0
L_09f0: callvirt Boolean get_HasVentCoolantAbility()
L_09f5: brfalse Label87
L_09fa: ldarg.0
L_09fb: callvirt Boolean get_CanVentCoolant()
L_0a00: br Label88
L_0a05: Label86
L_0a05: Label87
L_0a05: ldc.i4.0
L_0a06: Label88
L_0a06: stfld System.Boolean VentFirst
L_0a0b: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0a0d: ldfld AIUtil+AttackType AttackType
L_0a12: stloc.s 35 (AIUtil+AttackType)
L_0a14: ldloc.s 35 (AIUtil+AttackType)
L_0a16: ldc.i4.1
L_0a17: beq Label89
L_0a1c: ldloc.s 35 (AIUtil+AttackType)
L_0a1e: ldc.i4.2
L_0a1f: beq Label90
L_0a24: br Label91
L_0a29: Label89
L_0a29: ldloc.s 48 (AttackOrderInfo)
L_0a2b: ldc.i4.1
L_0a2c: stfld System.Boolean IsMelee
L_0a31: ldloc.s 48 (AttackOrderInfo)
L_0a33: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a38: ldloc.3
L_0a39: ldfld BattleTech.Weapon MeleeWeapon
L_0a3e: callvirt Boolean Remove(BattleTech.Weapon)
L_0a43: pop
L_0a44: ldloc.s 48 (AttackOrderInfo)
L_0a46: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a4b: ldloc.3
L_0a4c: ldfld BattleTech.Weapon DFAWeapon
L_0a51: callvirt Boolean Remove(BattleTech.Weapon)
L_0a56: pop
L_0a57: ldloc.3
L_0a58: callvirt BattleTech.Pathing get_Pathing()
L_0a5d: ldloc.s 41 (BattleTech.AbstractActor)
L_0a5f: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0a64: stloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a66: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a68: callvirt Int32 get_Count()
L_0a6d: brtrue Label92
L_0a72: ldarg.0
L_0a73: ldstr "Failing for lack of melee destinations"
L_0a78: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0a7d: br Label93
L_0a82: Label92
L_0a82: ldloc.s 48 (AttackOrderInfo)
L_0a84: ldloc.3
L_0a85: ldloc.s 41 (BattleTech.AbstractActor)
L_0a87: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a89: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a8e: stfld UnityEngine.Vector3 AttackFromLocation
L_0a93: br Label94
L_0a98: Label90
L_0a98: ldloc.s 48 (AttackOrderInfo)
L_0a9a: ldc.i4.1
L_0a9b: stfld System.Boolean IsDeathFromAbove
L_0aa0: ldloc.s 48 (AttackOrderInfo)
L_0aa2: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0aa7: ldloc.3
L_0aa8: ldfld BattleTech.Weapon MeleeWeapon
L_0aad: callvirt Boolean Remove(BattleTech.Weapon)
L_0ab2: pop
L_0ab3: ldloc.s 48 (AttackOrderInfo)
L_0ab5: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0aba: ldloc.3
L_0abb: ldfld BattleTech.Weapon DFAWeapon
L_0ac0: callvirt Boolean Remove(BattleTech.Weapon)
L_0ac5: pop
L_0ac6: ldloc.3
L_0ac7: callvirt BattleTech.JumpPathing get_JumpPathing()
L_0acc: ldloc.s 41 (BattleTech.AbstractActor)
L_0ace: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetDFADestsForTarget(BattleTech.AbstractActor)
L_0ad3: stloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ad5: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ad7: callvirt Int32 get_Count()
L_0adc: brtrue Label95
L_0ae1: ldarg.0
L_0ae2: ldstr "Failing for lack of DFA destinations"
L_0ae7: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0aec: br Label96
L_0af1: Label95
L_0af1: ldloc.s 48 (AttackOrderInfo)
L_0af3: ldloc.3
L_0af4: ldloc.s 41 (BattleTech.AbstractActor)
L_0af6: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0af8: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0afd: stfld UnityEngine.Vector3 AttackFromLocation
L_0b02: Label91
L_0b02: Label94
L_0b02: ldloc.s 44 (BehaviorTreeResults)
L_0b04: ldloc.s 48 (AttackOrderInfo)
L_0b06: stfld OrderInfo orderInfo
L_0b0b: ldloc.s 44 (BehaviorTreeResults)
L_0b0d: ldc.i4.5
L_0b0e: newarr System.Object
L_0b13: dup
L_0b14: ldc.i4.0
L_0b15: ldarg.0
L_0b16: callvirt System.String get_DisplayName()
L_0b1b: stelem.ref
L_0b1c: dup
L_0b1d: ldc.i4.1
L_0b1e: ldstr " using attack type: "
L_0b23: stelem.ref
L_0b24: dup
L_0b25: ldc.i4.2
L_0b26: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b28: ldfld AIUtil+AttackType AttackType
L_0b2d: box AIUtil+AttackType
L_0b32: stelem.ref
L_0b33: dup
L_0b34: ldc.i4.3
L_0b35: ldstr " against: "
L_0b3a: stelem.ref
L_0b3b: dup
L_0b3c: ldc.i4.4
L_0b3d: ldarg.1
L_0b3e: callvirt System.String get_DisplayName()
L_0b43: stelem.ref
L_0b44: call System.String Concat(System.Object[])
L_0b49: stfld System.String debugOrderString
L_0b4e: Label80
L_0b4e: Label82
L_0b4e: Label85
L_0b4e: ldarg.0
L_0b4f: ldstr "attack order: "
L_0b54: ldloc.s 44 (BehaviorTreeResults)
L_0b56: ldfld System.String debugOrderString
L_0b5b: call System.String Concat(System.String, System.String)
L_0b60: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b65: ldarg.s 4
L_0b67: ldloc.s 44 (BehaviorTreeResults)
L_0b69: stind.ref
L_0b6a: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b6c: ldfld System.Single ExpectedDamage
L_0b71: br Label100
L_0b76: Label60
L_0b76: Label65
L_0b76: Label70
L_0b76: Label74
L_0b76: Label76
L_0b76: Label78
L_0b76: Label93
L_0b76: Label96
L_0b76: ldloc.s 36 (System.Int32)
L_0b78: ldc.i4.1
L_0b79: add
L_0b7a: stloc.s 36 (System.Int32)
L_0b7c: Label54
L_0b7c: ldloc.s 36 (System.Int32)
L_0b7e: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0b80: callvirt Int32 get_Count()
L_0b85: blt Label97
L_0b8a: ldarg.0
L_0b8b: ldstr "There are no targets I can shoot at without overheating."
L_0b90: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b95: ldarg.s 4
L_0b97: ldnull
L_0b98: stind.ref
L_0b99: ldc.r4 0
L_0b9e: Label98
L_0b9e: Label100
L_0b9e: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void SetHitChance(BattleTech.ICombatant)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.Mech
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: ldarg.0
L_0001: ldfld BattleTech.Weapon displayedWeapon
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call Single get_HitChance()
L_0011: pop
L_0012: ldarg.0
L_0013: ldfld BattleTech.UI.CombatHUD HUD
L_0018: callvirt BattleTech.AbstractActor get_SelectedActor()
L_001d: brfalse Label2
L_0022: ldarg.1
L_0023: brtrue Label3
L_0028: Label2
L_0028: ldarg.0
L_0029: call Void ClearHitChance()
L_002e: br Label4
L_0033: Label3
L_0033: ldarg.0
L_0034: ldarg.1
L_0035: call Boolean contemplatingDFA(BattleTech.ICombatant)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.CombatHUD HUD
L_0041: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0046: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_004b: isinst BattleTech.UI.SelectionStateMoraleAttack
L_0050: ldnull
L_0051: cgt.un
L_0053: stloc.1
L_0054: ldarg.0
L_0055: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_005a: ldc.i4.2
L_005b: bne.un Label5
L_0060: ldloc.0
L_0061: brfalse Label6
L_0066: ldarg.0
L_0067: ldfld BattleTech.UI.CombatHUD HUD
L_006c: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0071: isinst BattleTech.Mech
L_0076: stloc.2
L_0077: ldarg.0
L_0078: ldarg.0
L_0079: ldfld BattleTech.CombatGameState Combat
L_007e: callvirt BattleTech.ToHit get_ToHit()
L_0083: ldloc.2
L_0084: ldarg.0
L_0085: ldfld BattleTech.Weapon displayedWeapon
L_008a: ldarg.1
L_008b: ldarg.0
L_008c: ldfld BattleTech.UI.CombatHUD HUD
L_0091: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0096: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_009b: callvirt UnityEngine.Vector3 get_PreviewPos()
L_00a0: ldarg.1
L_00a1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a6: ldc.i4.1
L_00a7: ldc.i4.6
L_00a8: ldc.i4.0
L_00a9: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_00ae: call Void SetHitChance(Single)
L_00b3: br Label7
L_00b8: Label6
L_00b8: ldarg.0
L_00b9: call Void ClearHitChance()
L_00be: br Label8
L_00c3: Label5
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_00c9: ldc.i4.1
L_00ca: bne.un Label9
L_00cf: ldarg.0
L_00d0: ldarg.1
L_00d1: call Boolean contemplatingMelee(BattleTech.ICombatant)
L_00d6: brfalse Label10
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.CombatHUD HUD
L_00e1: callvirt BattleTech.AbstractActor get_SelectedActor()
L_00e6: isinst BattleTech.Mech
L_00eb: stloc.3
L_00ec: ldarg.0
L_00ed: ldarg.0
L_00ee: ldfld BattleTech.CombatGameState Combat
L_00f3: callvirt BattleTech.ToHit get_ToHit()
L_00f8: ldloc.3
L_00f9: ldarg.0
L_00fa: ldfld BattleTech.Weapon displayedWeapon
L_00ff: ldarg.1
L_0100: ldarg.0
L_0101: ldfld BattleTech.UI.CombatHUD HUD
L_0106: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_010b: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0110: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0115: ldarg.1
L_0116: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_011b: ldc.i4.1
L_011c: ldc.i4.1
L_011d: ldc.i4.0
L_011e: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_0123: call Void SetHitChance(Single)
L_0128: br Label11
L_012d: Label10
L_012d: ldarg.0
L_012e: call Void ClearHitChance()
L_0133: br Label12
L_0138: Label9
L_0138: ldloc.0
L_0139: brtrue Label13
L_013e: ldarg.0
L_013f: ldarg.1
L_0140: call Boolean contemplatingMelee(BattleTech.ICombatant)
L_0145: brfalse Label14
L_014a: Label13
L_014a: ldarg.0
L_014b: ldfld BattleTech.Weapon displayedWeapon
L_0150: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0155: ldc.i4.4
L_0156: bne.un Label15
L_015b: ldarg.0
L_015c: ldfld BattleTech.Weapon displayedWeapon
L_0161: ldarg.1
L_0162: ldarg.0
L_0163: ldfld BattleTech.UI.CombatHUD HUD
L_0168: callvirt Int32 get_numTargets()
L_016d: ldarg.0
L_016e: ldfld BattleTech.UI.CombatHUD HUD
L_0173: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0178: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_017d: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0182: ldarg.1
L_0183: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0188: ldc.i4.0
L_0189: ldc.i4.0
L_018a: ldc.i4.0
L_018b: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0190: stloc.s 4 (System.Single)
L_0192: ldarg.0
L_0193: ldloc.s 4 (System.Single)
L_0195: call Void SetHitChance(Single)
L_019a: br Label16
L_019f: Label15
L_019f: ldarg.0
L_01a0: call Void ClearHitChance()
L_01a5: br Label17
L_01aa: Label14
L_01aa: ldarg.0
L_01ab: ldfld BattleTech.Weapon displayedWeapon
L_01b0: ldarg.1
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.CombatHUD HUD
L_01b7: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01bc: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01c1: callvirt UnityEngine.Vector3 get_PreviewPos()
L_01c6: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_01cb: brfalse Label18
L_01d0: ldarg.0
L_01d1: ldfld BattleTech.Weapon displayedWeapon
L_01d6: ldarg.1
L_01d7: ldarg.0
L_01d8: ldfld BattleTech.UI.CombatHUD HUD
L_01dd: callvirt Int32 get_numTargets()
L_01e2: ldarg.0
L_01e3: ldfld BattleTech.UI.CombatHUD HUD
L_01e8: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01ed: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01f2: callvirt UnityEngine.Vector3 get_PreviewPos()
L_01f7: ldarg.1
L_01f8: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01fd: ldc.i4.0
L_01fe: ldc.i4.0
L_01ff: ldloc.1
L_0200: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0205: stloc.s 5 (System.Single)
L_0207: ldarg.0
L_0208: ldloc.s 5 (System.Single)
L_020a: call Void SetHitChance(Single)
L_020f: br Label19
L_0214: Label18
L_0214: ldarg.0
L_0215: call Void ClearHitChance()
L_021a: Label4
L_021a: Label7
L_021a: Label8
L_021a: Label11
L_021a: Label12
L_021a: Label16
L_021a: Label17
L_021a: Label19
L_021a: ldarg.0
L_021b: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0220: callvirt Void ResetToolTip()
L_0225: ldarg.0
L_0226: ldarg.1
L_0227: call Void UpdateTooltipStrings(BattleTech.ICombatant)
L_022c: Label1
L_022c: ldarg.0
L_022d: ldarg 1
L_0233: call Void Postfix(BattleTech.UI.CombatHUDWeaponSlot, BattleTech.ICombatant)
L_0238: ret
DONE

### Patch BattleTech.UI.SelectionStateJump, Int32 get_ProjectedHeatForState()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: ldloc.0
L_000f: brfalse Label1
L_0014: ldloc.0
L_0015: callvirt UnityEngine.Vector3 get_PreviousPosition()
L_001a: ldarg.0
L_001b: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0020: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_0025: stloc.2
L_0026: ldloc.0
L_0027: ldloc.2
L_0028: callvirt Int32 CalcJumpHeat(Single)
L_002d: stloc.1
L_002e: ldarg.0
L_002f: call BattleTech.ICombatant get_TargetedCombatant()
L_0034: brfalse Label2
L_0039: ldc.i4.0
L_003a: stloc.3
L_003b: br Label3
L_0040: Label7
L_0040: ldloc.0
L_0041: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0046: ldloc.3
L_0047: callvirt BattleTech.Weapon get_Item(Int32)
L_004c: callvirt Boolean get_IsEnabled()
L_0051: brfalse Label4
L_0056: ldloc.0
L_0057: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_005c: ldloc.3
L_005d: callvirt BattleTech.Weapon get_Item(Int32)
L_0062: callvirt Boolean get_WillFire()
L_0067: brfalse Label5
L_006c: ldloc.0
L_006d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0072: ldloc.3
L_0073: callvirt BattleTech.Weapon get_Item(Int32)
L_0078: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_007d: ldc.i4.4
L_007e: bne.un Label6
L_0083: ldloc.1
L_0084: ldloc.0
L_0085: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_008a: ldloc.3
L_008b: callvirt BattleTech.Weapon get_Item(Int32)
L_0090: callvirt Single get_HeatGenerated()
L_0095: conv.i4
L_0096: add
L_0097: stloc.1
L_0098: Label4
L_0098: Label5
L_0098: Label6
L_0098: ldloc.3
L_0099: ldc.i4.1
L_009a: add
L_009b: stloc.3
L_009c: Label3
L_009c: ldloc.3
L_009d: ldloc.0
L_009e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a3: callvirt Int32 get_Count()
L_00a8: blt Label7
L_00ad: Label2
L_00ad: ldloc.1
L_00ae: br Label8
L_00b3: Label1
L_00b3: ldc.i4.0
L_00b4: Label8
L_00b4: ret
DONE

### Patch BattleTech.UI.SelectionStateMove, Int32 get_ProjectedHeatForState()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: call BattleTech.ICombatant get_TargetedCombatant()
L_0018: brfalse Label2
L_001d: ldloc.0
L_001e: callvirt Int32 get_WalkHeat()
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label3
L_002b: Label7
L_002b: ldloc.0
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0031: ldloc.2
L_0032: callvirt BattleTech.Weapon get_Item(Int32)
L_0037: callvirt Boolean get_IsEnabled()
L_003c: brfalse Label4
L_0041: ldloc.0
L_0042: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0047: ldloc.2
L_0048: callvirt BattleTech.Weapon get_Item(Int32)
L_004d: callvirt Boolean get_WillFire()
L_0052: brfalse Label5
L_0057: ldloc.0
L_0058: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_005d: ldloc.2
L_005e: callvirt BattleTech.Weapon get_Item(Int32)
L_0063: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0068: ldc.i4.4
L_0069: bne.un Label6
L_006e: ldloc.1
L_006f: ldloc.0
L_0070: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0075: ldloc.2
L_0076: callvirt BattleTech.Weapon get_Item(Int32)
L_007b: callvirt Single get_HeatGenerated()
L_0080: conv.i4
L_0081: add
L_0082: stloc.1
L_0083: Label4
L_0083: Label5
L_0083: Label6
L_0083: ldloc.2
L_0084: ldc.i4.1
L_0085: add
L_0086: stloc.2
L_0087: Label3
L_0087: ldloc.2
L_0088: ldloc.0
L_0089: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_008e: callvirt Int32 get_Count()
L_0093: blt Label7
L_0098: ldloc.1
L_0099: br Label10
L_009e: Label2
L_009e: ldarg.0
L_009f: call BattleTech.AbstractActor get_SelectedActor()
L_00a4: callvirt BattleTech.Pathing get_Pathing()
L_00a9: ldfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00ae: brfalse Label8
L_00b3: ldarg.0
L_00b4: call BattleTech.AbstractActor get_SelectedActor()
L_00b9: callvirt BattleTech.Pathing get_Pathing()
L_00be: ldfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00c3: callvirt Int32 get_Count()
L_00c8: ldc.i4.0
L_00c9: ble Label9
L_00ce: ldloc.0
L_00cf: callvirt Int32 get_WalkHeat()
L_00d4: br Label11
L_00d9: Label1
L_00d9: Label8
L_00d9: Label9
L_00d9: ldc.i4.0
L_00da: Label10
L_00da: Label11
L_00da: ret
DONE

### Patch BattleTech.HostileDamageFactor, Single expectedDamageForMelee(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0000: Local var 0: BattleTech.Mech
L_0000: ldarg.1
L_0001: isinst BattleTech.Mech
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: ldarg.s 4
L_0010: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_0015: brtrue Label2
L_001a: Label1
L_001a: ldc.r4 0
L_001f: br Label4
L_0024: Label2
L_0024: ldloc.0
L_0025: callvirt BattleTech.Pathing get_Pathing()
L_002a: ldarg.s 4
L_002c: isinst BattleTech.AbstractActor
L_0031: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0036: callvirt Int32 get_Count()
L_003b: brtrue Label3
L_0040: ldc.r4 0
L_0045: br Label5
L_004a: Label3
L_004a: ldloc.0
L_004b: ldarg.s 4
L_004d: ldarg.2
L_004e: ldarg.s 5
L_0050: ldc.i4.1
L_0051: call Single ExpectedDamageForMeleeAttack(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0056: Label4
L_0056: Label5
L_0056: ret
DONE

### Patch BattleTech.MechRepresentation, Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ArmorLocation
L_0000: Local var 2: UnityEngine.Vector2
L_0000: Local var 3: System.Boolean
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.AttackDirection
L_0000: Local var 7: BattleTech.Mech
L_0000: Local var 8: System.Single
L_0000: ldarg.0
L_0001: call BattleTech.Mech get_parentMech()
L_0006: callvirt Boolean get_IsOrWillBeProne()
L_000b: brtrue Label1
L_0010: ldarg.0
L_0011: call BattleTech.Mech get_parentMech()
L_0016: callvirt Boolean get_IsDead()
L_001b: brfalse Label2
L_0020: Label1
L_0020: br Label35
L_0025: Label2
L_0025: ldarg.0
L_0026: ldflda UnityEngine.AnimatorStateInfo previousAnimState
L_002b: call Int32 get_fullPathHash()
L_0030: stloc.0
L_0031: ldloc.0
L_0032: ldarg.0
L_0033: ldfld System.Int32 hitReactHeavyHash
L_0038: beq Label3
L_003d: ldloc.0
L_003e: ldarg.0
L_003f: ldfld System.Int32 hitReactMeleeHash
L_0044: beq Label4
L_0049: ldloc.0
L_004a: ldarg.0
L_004b: ldfld System.Int32 hitReactDodgeHash
L_0050: beq Label5
L_0055: ldloc.0
L_0056: ldarg.0
L_0057: ldfld System.Int32 hitReactDFAHash
L_005c: bne.un Label6
L_0061: Label3
L_0061: Label4
L_0061: Label5
L_0061: br Label36
L_0066: Label6
L_0066: ldarg.0
L_0067: ldfld UnityEngine.Animator thisAnimator
L_006c: ldstr "KnockedDown"
L_0071: callvirt Boolean GetBool(System.String)
L_0076: brfalse Label7
L_007b: ldsfld HBS.Logging.ILog logger
L_0080: ldstr "KNOCKDOWN - we got passed IsOrWillBeProne, but KnockedDown flag is true. ???"
L_0085: callvirt Void LogWarning(System.Object)
L_008a: Label7
L_008a: ldarg.0
L_008b: ldarg.1
L_008c: ldarg.2
L_008d: ldarg.3
L_008e: ldarg.s 4
L_0090: ldarg.s 5
L_0092: call Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0097: ldarga.s 1
L_0099: ldarg.2
L_009a: call Int32 ShotHitLocation(Int32)
L_009f: stloc.1
L_00a0: ldarg.0
L_00a1: call BattleTech.AbstractActor get_parentActor()
L_00a6: callvirt BattleTech.CombatGameState get_Combat()
L_00ab: callvirt BattleTech.HitLocation get_HitLocation()
L_00b0: ldarg.1
L_00b1: ldfld BattleTech.AttackDirection[] attackDirections
L_00b6: ldarg.2
L_00b7: ldelem.i4
L_00b8: callvirt UnityEngine.Vector2 ConvertAttackDirectionToCardinalVector(BattleTech.AttackDirection)
L_00bd: stloc.2
L_00be: ldarg.0
L_00bf: call Void ResetHitReactFlags()
L_00c4: ldarg.0
L_00c5: ldfld UnityEngine.Animator thisAnimator
L_00ca: ldstr "Stand"
L_00cf: callvirt Void ResetTrigger(System.String)
L_00d4: ldarg.s 4
L_00d6: brtrue Label8
L_00db: ldarg.0
L_00dc: ldfld UnityEngine.Animator thisAnimator
L_00e1: ldstr "MeleeEngaged"
L_00e6: callvirt Single GetFloat(System.String)
L_00eb: ldc.r4 0
L_00f0: bgt Label9
L_00f5: ldarg.1
L_00f6: ldfld System.Boolean[] dodgeSuccesses
L_00fb: ldarg.2
L_00fc: ldelem.u1
L_00fd: brfalse Label10
L_0102: Label8
L_0102: Label9
L_0102: ldloc.1
L_0103: brfalse Label11
L_0108: ldloc.1
L_0109: ldc.i4 65536
L_010e: bne.un Label12
L_0113: Label11
L_0113: ldc.r4 0
L_0118: stloc.s 4 (System.Single)
L_011a: ldc.i4.0
L_011b: ldc.i4.2
L_011c: call Int32 Range(Int32, Int32)
L_0121: ldc.i4.2
L_0122: mul
L_0123: stloc.s 5 (System.Int32)
L_0125: ldarg.1
L_0126: ldfld BattleTech.AttackDirection[] attackDirections
L_012b: ldarg.2
L_012c: ldelem.i4
L_012d: stloc.s 6 (BattleTech.AttackDirection)
L_012f: ldloc.s 6 (BattleTech.AttackDirection)
L_0131: ldc.i4.1
L_0132: sub
L_0133: switch Labels13,14,15,16
L_0148: br Label17
L_014d: Label16
L_014d: ldc.r4 1
L_0152: stloc.s 4 (System.Single)
L_0154: br Label18
L_0159: Label13
L_0159: ldloc.s 5 (System.Int32)
L_015b: conv.r4
L_015c: stloc.s 4 (System.Single)
L_015e: br Label19
L_0163: Label14
L_0163: ldc.r4 0
L_0168: stloc.s 4 (System.Single)
L_016a: br Label20
L_016f: Label15
L_016f: ldc.r4 2
L_0174: stloc.s 4 (System.Single)
L_0176: br Label21
L_017b: Label17
L_017b: ldloc.s 5 (System.Int32)
L_017d: conv.r4
L_017e: stloc.s 4 (System.Single)
L_0180: Label18
L_0180: Label19
L_0180: Label20
L_0180: Label21
L_0180: ldarg.0
L_0181: ldfld UnityEngine.Animator thisAnimator
L_0186: ldstr "Dodge_Direction"
L_018b: ldloc.s 4 (System.Single)
L_018d: callvirt Void SetFloat(System.String, Single)
L_0192: ldarg.0
L_0193: ldfld UnityEngine.Animator thisAnimator
L_0198: ldstr "Hit_Dodge"
L_019d: ldc.i4.1
L_019e: callvirt Void SetBool(System.String, Boolean)
L_01a3: br Label22
L_01a8: Label12
L_01a8: ldarg.s 4
L_01aa: ldc.i4.6
L_01ab: bne.un Label23
L_01b0: ldarg.3
L_01b1: ldfld BattleTech.AbstractActor parent
L_01b6: isinst BattleTech.Mech
L_01bb: stloc.s 7 (BattleTech.Mech)
L_01bd: ldc.r4 0.6
L_01c2: stloc.s 8 (System.Single)
L_01c4: ldloc.s 7 (BattleTech.Mech)
L_01c6: callvirt Single get_tonnage()
L_01cb: ldc.r4 70
L_01d0: ble.un Label24
L_01d5: ldc.r4 1
L_01da: stloc.s 8 (System.Single)
L_01dc: br Label25
L_01e1: Label24
L_01e1: ldloc.s 7 (BattleTech.Mech)
L_01e3: callvirt Single get_tonnage()
L_01e8: ldc.r4 40
L_01ed: ble.un Label26
L_01f2: ldc.r4 0.6
L_01f7: stloc.s 8 (System.Single)
L_01f9: br Label27
L_01fe: Label26
L_01fe: ldc.r4 0.3
L_0203: stloc.s 8 (System.Single)
L_0205: Label25
L_0205: Label27
L_0205: ldarg.0
L_0206: ldfld UnityEngine.Animator thisAnimator
L_020b: ldstr "DFA_Power"
L_0210: ldloc.s 8 (System.Single)
L_0212: callvirt Void SetFloat(System.String, Single)
L_0217: ldarg.0
L_0218: ldfld UnityEngine.Animator thisAnimator
L_021d: ldstr "Hit_DFA"
L_0222: ldc.i4.1
L_0223: callvirt Void SetBool(System.String, Boolean)
L_0228: br Label28
L_022d: Label23
L_022d: ldarg.0
L_022e: ldfld UnityEngine.Animator thisAnimator
L_0233: ldstr "HitDirection_X"
L_0238: ldloc.2
L_0239: ldfld System.Single x
L_023e: callvirt Void SetFloat(System.String, Single)
L_0243: ldarg.0
L_0244: ldfld UnityEngine.Animator thisAnimator
L_0249: ldstr "HitDirection_Y"
L_024e: ldloc.2
L_024f: ldfld System.Single y
L_0254: callvirt Void SetFloat(System.String, Single)
L_0259: ldarg.0
L_025a: ldfld UnityEngine.Animator thisAnimator
L_025f: ldstr "Hit_Melee"
L_0264: ldc.i4.1
L_0265: callvirt Void SetBool(System.String, Boolean)
L_026a: Label22
L_026a: Label28
L_026a: ldarg.0
L_026b: ldfld UnityEngine.Animator thisAnimator
L_0270: ldstr "Hit_React"
L_0275: callvirt Void SetTrigger(System.String)
L_027a: ldarg.1
L_027b: ldfld System.Boolean[] dodgeSuccesses
L_0280: ldarg.2
L_0281: ldelem.u1
L_0282: brtrue Label29
L_0287: ldarg.0
L_0288: ldc.i4.1
L_0289: call Void SetMeleeIdleState(Boolean)
L_028e: Label29
L_028e: br Label37
L_0293: Label10
L_0293: ldarg.0
L_0294: call BattleTech.Mech get_parentMech()
L_0299: callvirt Single get_StabilityPercentage()
L_029e: ldc.r4 0.5
L_02a3: bgt Label30
L_02a8: ldarg.s 5
L_02aa: ldarg.0
L_02ab: call BattleTech.CombatGameConstants get_Constants()
L_02b0: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_02b5: ldfld System.Int32 HeavyHitReactDamageThreshold
L_02ba: conv.r4
L_02bb: clt.un
L_02bd: ldc.i4.0
L_02be: ceq
L_02c0: br Label31
L_02c5: Label30
L_02c5: ldc.i4.1
L_02c6: Label31
L_02c6: stloc.3
L_02c7: ldarg.3
L_02c8: brfalse Label32
L_02cd: ldarg.3
L_02ce: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_02d3: ldc.i4.4
L_02d4: bne.un Label33
L_02d9: ldc.i4.0
L_02da: stloc.3
L_02db: Label32
L_02db: Label33
L_02db: ldarg.0
L_02dc: call BattleTech.Mech get_parentMech()
L_02e1: callvirt Boolean get_IsShutDown()
L_02e6: brfalse Label34
L_02eb: ldc.i4.0
L_02ec: stloc.3
L_02ed: ldarg.0
L_02ee: ldfld UnityEngine.Animator thisAnimator
L_02f3: ldstr "Shutdown_Hit"
L_02f8: ldc.i4.1
L_02f9: callvirt Void SetBool(System.String, Boolean)
L_02fe: Label34
L_02fe: ldarg.0
L_02ff: ldfld UnityEngine.Animator thisAnimator
L_0304: ldstr "HitDirection_X"
L_0309: ldloc.2
L_030a: ldfld System.Single x
L_030f: callvirt Void SetFloat(System.String, Single)
L_0314: ldarg.0
L_0315: ldfld UnityEngine.Animator thisAnimator
L_031a: ldstr "HitDirection_Y"
L_031f: ldloc.2
L_0320: ldfld System.Single y
L_0325: callvirt Void SetFloat(System.String, Single)
L_032a: ldarg.0
L_032b: ldfld UnityEngine.Animator thisAnimator
L_0330: ldstr "Hit_Stagger"
L_0335: ldloc.3
L_0336: callvirt Void SetBool(System.String, Boolean)
L_033b: ldarg.0
L_033c: ldfld UnityEngine.Animator thisAnimator
L_0341: ldstr "Hit_Light"
L_0346: ldloc.3
L_0347: ldc.i4.0
L_0348: ceq
L_034a: callvirt Void SetBool(System.String, Boolean)
L_034f: ldarg.0
L_0350: ldfld UnityEngine.Animator thisAnimator
L_0355: ldstr "Hit_React"
L_035a: callvirt Void SetTrigger(System.String)
L_035f: Label35
L_035f: Label36
L_035f: Label37
L_035f: ret
DONE

### Patch CombatTestFire, Void MeleeAttackSequence()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: BattleTech.MeleeAttackType
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Weapon
L_0000: ldarg.0
L_0001: ldfld BattleTech.CombatGameState combat
L_0006: callvirt System.Collections.Generic.List`1[BattleTech.Mech] get_AllMechs()
L_000b: ldarg.0
L_000c: ldfld System.Int32 attackerIdx
L_0011: callvirt BattleTech.Mech get_Item(Int32)
L_0016: stloc.0
L_0017: ldarg.0
L_0018: ldfld BattleTech.CombatGameState combat
L_001d: callvirt System.Collections.Generic.List`1[BattleTech.Mech] get_AllMechs()
L_0022: ldarg.0
L_0023: ldfld System.Int32 targetIdx
L_0028: callvirt BattleTech.Mech get_Item(Int32)
L_002d: stloc.1
L_002e: ldsfld HBS.Logging.ILog logger
L_0033: ldstr "MeleeAttackSequence: Attacker: "
L_0038: ldloc.0
L_0039: callvirt System.String get_GUID()
L_003e: ldstr ", Target: "
L_0043: ldloc.1
L_0044: callvirt System.String get_GUID()
L_0049: call System.String Concat(System.String, System.String, System.String, System.String)
L_004e: callvirt Void LogError(System.Object)
L_0053: ldloc.0
L_0054: callvirt BattleTech.CombatGameState get_Combat()
L_0059: callvirt BattleTech.MeleeRules get_MeleeRules()
L_005e: ldloc.0
L_005f: ldloc.0
L_0060: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0065: ldloc.1
L_0066: ldloc.0
L_0067: callvirt BattleTech.CombatGameState get_Combat()
L_006c: callvirt NetworkRandom get_NetworkRandom()
L_0071: ldc.r4 0
L_0076: ldc.r4 1
L_007b: callvirt Single Float(Single, Single)
L_0080: callvirt BattleTech.MeleeAttackType SelectRandomMeleeAttack(BattleTech.Mech, UnityEngine.Vector3, BattleTech.ICombatant, Single)
L_0085: stloc.2
L_0086: ldloc.2
L_0087: brtrue Label1
L_008c: ldsfld HBS.Logging.ILog logger
L_0091: ldstr "SelectRandomMeleeAttack could not select a valid attack!"
L_0096: callvirt Void LogError(System.Object)
L_009b: br Label6
L_00a0: Label1
L_00a0: newobj Void .ctor()
L_00a5: stloc.3
L_00a6: ldloc.3
L_00a7: ldloc.0
L_00a8: ldfld BattleTech.Weapon MeleeWeapon
L_00ad: callvirt Void Add(BattleTech.Weapon)
L_00b2: ldc.i4.0
L_00b3: stloc.s 5 (System.Int32)
L_00b5: br Label2
L_00ba: Label5
L_00ba: ldloc.0
L_00bb: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00c0: ldloc.s 5 (System.Int32)
L_00c2: callvirt BattleTech.Weapon get_Item(Int32)
L_00c7: stloc.s 6 (BattleTech.Weapon)
L_00c9: ldloc.s 6 (BattleTech.Weapon)
L_00cb: callvirt Boolean get_WillFire()
L_00d0: brfalse Label3
L_00d5: ldloc.s 6 (BattleTech.Weapon)
L_00d7: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_00dc: ldc.i4.4
L_00dd: bne.un Label4
L_00e2: ldloc.3
L_00e3: ldloc.s 6 (BattleTech.Weapon)
L_00e5: callvirt Void Add(BattleTech.Weapon)
L_00ea: Label3
L_00ea: Label4
L_00ea: ldloc.s 5 (System.Int32)
L_00ec: ldc.i4.1
L_00ed: add
L_00ee: stloc.s 5 (System.Int32)
L_00f0: Label2
L_00f0: ldloc.s 5 (System.Int32)
L_00f2: ldloc.0
L_00f3: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00f8: callvirt Int32 get_Count()
L_00fd: blt Label5
L_0102: ldloc.0
L_0103: callvirt BattleTech.CombatGameState get_Combat()
L_0108: callvirt BattleTech.AttackDirector get_AttackDirector()
L_010d: dup
L_010e: ldc.i4.0
L_010f: ldc.i4 9999999
L_0114: call Int32 Range(Int32, Int32)
L_0119: ldloc.0
L_011a: ldloc.1
L_011b: ldloc.0
L_011c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0121: ldloc.0
L_0122: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0127: ldc.i4.0
L_0128: ldloc.3
L_0129: ldloc.2
L_012a: ldc.i4.0
L_012b: ldc.i4.0
L_012c: callvirt AttackSequence CreateAttackSequence(Int32, BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType, Int32, Boolean)
L_0131: stloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_0133: ldloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_0135: callvirt Void ResetWeapons()
L_013a: ldloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_013c: callvirt Void PerformAttack(AttackSequence)
L_0141: Label6
L_0141: ret
DONE

### Patch BattleTech.Mech, Boolean get_CanSprint()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean get_IsLegged()
L_000c: brfalse Label1
L_0011: ldc.i4.0
L_0012: br Label4
L_0017: Label1
L_0017: ldarg.0
L_0018: call Boolean get_IsUnsteady()
L_001d: brfalse Label2
L_0022: ldc.i4.0
L_0023: br Label5
L_0028: Label2
L_0028: ldarg.0
L_0029: call Boolean get_HasFiredThisRound()
L_002e: brfalse Label3
L_0033: ldc.i4.0
L_0034: br Label6
L_0039: Label3
L_0039: ldc.i4.1
L_003a: Label4
L_003a: Label5
L_003a: Label6
L_003a: stloc 0 (System.Boolean)
L_003b: ldarg.0
L_003c: ldloca 0 (System.Boolean)
L_003e: call Void Postfix(BattleTech.Mech, Boolean ByRef)
L_0043: ldloc 0 (System.Boolean)
L_0044: ret
DONE

### Patch BattleTech.AbstractActor, Int32 get_WorkingJumpjets()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Int32)
L_0006: ldc.i4.0
L_0007: stloc.0
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: br Label1
L_000f: Label3
L_000f: ldarg.0
L_0010: ldfld System.Collections.Generic.List`1[BattleTech.Jumpjet] jumpjets
L_0015: ldloc.1
L_0016: callvirt BattleTech.Jumpjet get_Item(Int32)
L_001b: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0020: ldc.i4.3
L_0021: bge Label2
L_0026: ldloc.0
L_0027: ldc.i4.1
L_0028: add
L_0029: stloc.0
L_002a: Label2
L_002a: ldloc.1
L_002b: ldc.i4.1
L_002c: add
L_002d: stloc.1
L_002e: Label1
L_002e: ldloc.1
L_002f: ldarg.0
L_0030: ldfld System.Collections.Generic.List`1[BattleTech.Jumpjet] jumpjets
L_0035: callvirt Int32 get_Count()
L_003a: blt Label3
L_003f: ldloc.0
L_0040: stloc 2 (System.Int32)
L_0041: ldarg.0
L_0042: ldloca 2 (System.Int32)
L_0044: call Void Postfix(BattleTech.AbstractActor, Int32 ByRef)
L_0049: ldloc 2 (System.Int32)
L_004a: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog gameInfoLogger
L_0010: ldstr "CombatGameState Destroyed: {0}"
L_0015: call System.DateTime get_UtcNow()
L_001a: stloc.0
L_001b: ldloca.s 0 (System.DateTime)
L_001d: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0022: call System.String ToString(System.String)
L_0027: call System.String Format(System.String, System.Object)
L_002c: callvirt Void Log(System.Object)
L_0031: ldarg.0
L_0032: call MessageCenter get_MessageCenter()
L_0037: brfalse Label1
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: newobj Void .ctor()
L_0047: dup
L_0048: call BattleTech.GameInstance get_BattleTechGame()
L_004d: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0052: callvirt Boolean IsNetworkGameActive()
L_0057: callvirt Void set_IsNetworkGame(Boolean)
L_005c: callvirt Void PublishMessage(MessageCenterMessage)
L_0061: Label1
L_0061: ldarg.0
L_0062: call BattleTech.StackManager get_StackManager()
L_0067: brfalse Label2
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: callvirt Void OnCombatGameDestroyed()
L_0077: ldarg.0
L_0078: ldnull
L_0079: call Void set_StackManager(BattleTech.StackManager)
L_007e: Label2
L_007e: ldarg.0
L_007f: call BattleTech.TurnDirector get_TurnDirector()
L_0084: brfalse Label3
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: callvirt Void OnCombatGameDestroyed()
L_0094: Label3
L_0094: ldarg.0
L_0095: call BattleTech.InvocationHandler get_InvocationHandler()
L_009a: brfalse Label4
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: callvirt Void OnCombatGameDestroyed()
L_00aa: Label4
L_00aa: ldarg.0
L_00ab: call MessageCenter get_MessageCenter()
L_00b0: brfalse Label5
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: ldc.i4.3
L_00bc: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00c1: Label5
L_00c1: ldarg.0
L_00c2: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00c7: brfalse Label6
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: callvirt Void Dispose()
L_00d7: Label6
L_00d7: call Boolean get_HasInstance()
L_00dc: brfalse Label7
L_00e1: call HBS.DebugConsole.DebugConsole get_Instance()
L_00e6: ldarg.0
L_00e7: ldftn Void DebugConsoleOnBeforeDump()
L_00ed: newobj Void .ctor(Object, IntPtr)
L_00f2: callvirt Void remove_OnBeforeDump(DumpHandler)
L_00f7: Label7
L_00f7: call Boolean get_HasInstance()
L_00fc: brfalse Label8
L_0101: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0106: callvirt Void OnCombatSceneEnd()
L_010b: Label8
L_010b: ldnull
L_010c: call Void set_destructionConstantsComponent(DestructionConstants)
L_0111: call Void ClearStaticData()
L_0116: call Void ClearStaticData()
L_011b: call Void ClearStaticData()
L_0120: call Void ClearStaticData()
L_0125: call Void ClearStaticData()
L_012a: ldsfld HBS.Logging.ILog gameInfoLogger
L_012f: ldstr "CombatGameState destroyed: {0}"
L_0134: call System.DateTime get_UtcNow()
L_0139: stloc.0
L_013a: ldloca.s 0 (System.DateTime)
L_013c: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0141: call System.String ToString(System.String)
L_0146: call System.String Format(System.String, System.Object)
L_014b: callvirt Void Log(System.Object)
L_0150: Label0
L_0150: ret
DONE

### Patch BattleTech.TurnDirector, Void BeginNewRound(Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AutoCompleteSequence
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.AddSequenceToStackMessage
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.TurnDirector, Int32)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Boolean get_IsMissionOver()
L_0017: brfalse Label1
L_001c: br Label10
L_0021: Label1
L_0021: ldarg.0
L_0022: ldarg.1
L_0023: call Void set_CurrentRound(Int32)
L_0028: ldarg.0
L_0029: call Boolean get_IsInterleaved()
L_002e: brtrue Label2
L_0033: ldarg.0
L_0034: call Boolean get_DoAnyUnitsHaveContactWithEnemy()
L_0039: brfalse Label3
L_003e: ldarg.0
L_003f: ldc.i4.1
L_0040: call Void set_IsInterleaved(Boolean)
L_0045: ldarg.0
L_0046: call BattleTech.CombatGameState get_Combat()
L_004b: callvirt MessageCenter get_MessageCenter()
L_0050: newobj Void .ctor()
L_0055: callvirt Void PublishMessage(MessageCenterMessage)
L_005a: Label2
L_005a: Label3
L_005a: ldarg.0
L_005b: ldc.i4.0
L_005c: call Void set_IsInterleavePending(Boolean)
L_0061: ldsfld HBS.Logging.ILog logger
L_0066: ldstr "[[[============== Round "
L_006b: ldarg.0
L_006c: call Int32 get_CurrentRound()
L_0071: box System.Int32
L_0076: ldstr " Begin! ================]]]"
L_007b: call System.String Concat(System.Object, System.Object, System.Object)
L_0080: callvirt Void Log(System.Object)
L_0085: ldarg.0
L_0086: call BattleTech.CombatGameState get_Combat()
L_008b: callvirt MessageCenter get_MessageCenter()
L_0090: ldarg.0
L_0091: call Int32 get_CurrentRound()
L_0096: ldsfld System.String Empty
L_009b: newobj Void .ctor(Int32, String)
L_00a0: callvirt Void PublishMessage(MessageCenterMessage)
L_00a5: newobj Void .ctor()
L_00aa: stloc.0
L_00ab: ldc.i4.0
L_00ac: stloc.1
L_00ad: br Label4
L_00b2: Label5
L_00b2: ldloc.0
L_00b3: ldarg.0
L_00b4: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_00b9: ldloc.1
L_00ba: callvirt BattleTech.TurnActor get_Item(Int32)
L_00bf: ldarg.1
L_00c0: callvirt System.Collections.Generic.List`1[BattleTech.IStackSequence] OnRoundBegin(Int32)
L_00c5: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.IStackSequence])
L_00ca: ldloc.1
L_00cb: ldc.i4.1
L_00cc: add
L_00cd: stloc.1
L_00ce: Label4
L_00ce: ldloc.1
L_00cf: ldarg.0
L_00d0: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_00d5: callvirt Int32 get_Count()
L_00da: blt Label5
L_00df: ldloc.0
L_00e0: callvirt Int32 get_Count()
L_00e5: brtrue Label6
L_00ea: ldarg.0
L_00eb: ldstr "OnRoundBegin"
L_00f0: ldarg.0
L_00f1: ldftn Void OnRoundBeginSequencesCompleted()
L_00f7: newobj Void .ctor(Object, IntPtr)
L_00fc: call Boolean CheckAndFixStack(System.String, BattleTech.SequenceFinished)
L_0101: brtrue Label7
L_0106: ldarg.0
L_0107: ldarg.0
L_0108: call BattleTech.CombatGameState get_Combat()
L_010d: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0112: callvirt Int32 get_FirstPhase()
L_0117: call Void BeginNewPhase(Int32)
L_011c: br Label11
L_0121: Label6
L_0121: ldarg.0
L_0122: call BattleTech.CombatGameState get_Combat()
L_0127: ldarg.0
L_0128: ldftn Void OnRoundBeginSequencesCompleted()
L_012e: newobj Void .ctor(Object, IntPtr)
L_0133: newobj Void .ctor(CombatGameState, SequenceFinished)
L_0138: stloc.2
L_0139: ldarg.0
L_013a: call BattleTech.CombatGameState get_Combat()
L_013f: callvirt MessageCenter get_MessageCenter()
L_0144: ldloc.2
L_0145: newobj Void .ctor(IStackSequence)
L_014a: callvirt Void PublishMessage(MessageCenterMessage)
L_014f: ldc.i4.0
L_0150: stloc.3
L_0151: br Label8
L_0156: Label9
L_0156: ldloc.0
L_0157: ldloc.3
L_0158: callvirt BattleTech.IStackSequence get_Item(Int32)
L_015d: newobj Void .ctor(IStackSequence)
L_0162: stloc.s 4 (BattleTech.AddSequenceToStackMessage)
L_0164: ldarg.0
L_0165: call BattleTech.CombatGameState get_Combat()
L_016a: callvirt MessageCenter get_MessageCenter()
L_016f: ldloc.s 4 (BattleTech.AddSequenceToStackMessage)
L_0171: callvirt Void PublishMessage(MessageCenterMessage)
L_0176: ldloc.3
L_0177: ldc.i4.1
L_0178: add
L_0179: stloc.3
L_017a: Label8
L_017a: ldloc.3
L_017b: ldloc.0
L_017c: callvirt Int32 get_Count()
L_0181: blt Label9
L_0186: Label7
L_0186: Label10
L_0186: Label11
L_0186: Label0
L_0186: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void Init(BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: UnityEngine.Transform[]
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldfld BattleTech.AbstractActor parent
L_0007: ldarg.2
L_0008: ldarg.3
L_0009: ldc.i4.0
L_000a: ldarg.s 4
L_000c: call Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_mechComponent(BattleTech.MechComponent)
L_0018: ldarg.0
L_0019: ldarg.s 5
L_001b: call Void set_mountedLocation(Int32)
L_0020: ldnull
L_0021: stloc.0
L_0022: ldarg.1
L_0023: callvirt BattleTech.WeaponDef get_weaponDef()
L_0028: callvirt System.String get_WeaponEffectID()
L_002d: call Boolean IsNullOrEmpty(System.String)
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: call BattleTech.ICombatant get_parentCombatant()
L_003d: callvirt BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.Data.DataManager get_DataManager()
L_0047: ldarg.1
L_0048: callvirt BattleTech.WeaponDef get_weaponDef()
L_004d: callvirt System.String get_WeaponEffectID()
L_0052: ldc.i4.s 45
L_0054: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0056: initobj System.Nullable`1[UnityEngine.Vector3]
L_005c: ldloc.2
L_005d: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_005f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0065: ldloc.3
L_0066: ldnull
L_0067: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_006c: stloc.0
L_006d: Label1
L_006d: ldloc.0
L_006e: ldnull
L_006f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0074: brfalse Label2
L_0079: ldstr "Error instantiating WeaponEffect [{0}], Weapon [{1}], Parent[{2}] "
L_007e: ldarg.1
L_007f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0084: callvirt System.String get_WeaponEffectID()
L_0089: ldarg.1
L_008a: callvirt System.String get_Name()
L_008f: ldarg.s 4
L_0091: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0096: ldarg.0
L_0097: call Void LogError(System.Object, UnityEngine.Object)
L_009c: br Label12
L_00a1: Label2
L_00a1: ldloc.0
L_00a2: callvirt UnityEngine.Transform get_transform()
L_00a7: ldarg.0
L_00a8: call UnityEngine.Transform get_transform()
L_00ad: callvirt Void set_parent(UnityEngine.Transform)
L_00b2: ldloc.0
L_00b3: callvirt UnityEngine.Transform get_transform()
L_00b8: call UnityEngine.Vector3 get_zero()
L_00bd: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00c2: ldloc.0
L_00c3: callvirt UnityEngine.Transform get_transform()
L_00c8: call UnityEngine.Quaternion get_identity()
L_00cd: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00d2: ldarg.0
L_00d3: ldloc.0
L_00d4: callvirt WeaponEffect GetComponent[WeaponEffect]()
L_00d9: stfld WeaponEffect weaponEffect
L_00de: ldarg.0
L_00df: ldfld WeaponEffect weaponEffect
L_00e4: ldnull
L_00e5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ea: brfalse Label3
L_00ef: ldstr "Error finding WeaponEffect on GO [{0}], Weapon [{1}], Parent[{2}] "
L_00f4: ldarg.1
L_00f5: callvirt BattleTech.WeaponDef get_weaponDef()
L_00fa: callvirt System.String get_WeaponEffectID()
L_00ff: ldarg.1
L_0100: callvirt System.String get_Name()
L_0105: ldarg.s 4
L_0107: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_010c: ldarg.0
L_010d: call Void LogError(System.Object, UnityEngine.Object)
L_0112: br Label13
L_0117: Label3
L_0117: ldc.i4.0
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldfld UnityEngine.Transform[] vfxTransforms
L_011f: brfalse Label4
L_0124: ldarg.0
L_0125: ldfld UnityEngine.Transform[] vfxTransforms
L_012a: ldlen
L_012b: conv.i4
L_012c: ldc.i4.1
L_012d: bge Label5
L_0132: Label4
L_0132: ldc.i4.1
L_0133: stloc.1
L_0134: br Label6
L_0139: Label5
L_0139: ldarg.0
L_013a: ldfld UnityEngine.Transform[] vfxTransforms
L_013f: stloc.s 4 (UnityEngine.Transform[])
L_0141: ldc.i4.0
L_0142: stloc.s 5 (System.Int32)
L_0144: br Label7
L_0149: Label10
L_0149: ldloc.s 4 (UnityEngine.Transform[])
L_014b: ldloc.s 5 (System.Int32)
L_014d: ldelem.ref
L_014e: ldnull
L_014f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0154: brfalse Label8
L_0159: ldc.i4.1
L_015a: stloc.1
L_015b: br Label9
L_0160: Label8
L_0160: ldloc.s 5 (System.Int32)
L_0162: ldc.i4.1
L_0163: add
L_0164: stloc.s 5 (System.Int32)
L_0166: Label7
L_0166: ldloc.s 5 (System.Int32)
L_0168: ldloc.s 4 (UnityEngine.Transform[])
L_016a: ldlen
L_016b: conv.i4
L_016c: blt Label10
L_0171: Label6
L_0171: Label9
L_0171: ldloc.1
L_0172: brfalse Label11
L_0177: ldc.i4.5
L_0178: newarr System.String
L_017d: dup
L_017e: ldc.i4.0
L_017f: ldstr "WeaponRepresentation for ["
L_0184: stelem.ref
L_0185: dup
L_0186: ldc.i4.1
L_0187: ldarg.1
L_0188: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_018d: ldfld System.String prefabName
L_0192: stelem.ref
L_0193: dup
L_0194: ldc.i4.2
L_0195: ldstr "] on "
L_019a: stelem.ref
L_019b: dup
L_019c: ldc.i4.3
L_019d: ldarg.s 4
L_019f: stelem.ref
L_01a0: dup
L_01a1: ldc.i4.4
L_01a2: ldstr " had no vfxTransforms. Using WeaponRepresentation position as fallback"
L_01a7: stelem.ref
L_01a8: call System.String Concat(System.String[])
L_01ad: call Void LogError(System.Object)
L_01b2: ldarg.0
L_01b3: ldc.i4.1
L_01b4: newarr UnityEngine.Transform
L_01b9: dup
L_01ba: ldc.i4.0
L_01bb: ldarg.0
L_01bc: call UnityEngine.GameObject get_gameObject()
L_01c1: callvirt UnityEngine.Transform get_transform()
L_01c6: stelem.ref
L_01c7: stfld UnityEngine.Transform[] vfxTransforms
L_01cc: Label11
L_01cc: ldarg.0
L_01cd: ldfld WeaponEffect weaponEffect
L_01d2: ldarg.1
L_01d3: callvirt Void Init(BattleTech.Weapon)
L_01d8: Label12
L_01d8: Label13
L_01d8: ldarg.0
L_01d9: ldarg 1
L_01df: ldarg 2
L_01e5: ldarg 3
L_01eb: ldarg 4
L_01f1: ldarg 5
L_01f7: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_01fc: ret
DONE

### Patch BattleTech.Mech, Void ApplyHeatSinks(Int32)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Mech, Int32)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Int32 get_AdjustedHeatsinkCapacity()
L_0017: stloc.0
L_0018: ldarg.0
L_0019: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_001e: brfalse Label1
L_0023: ldarg.0
L_0024: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0029: ldfld System.Single heatSinkMultiplier
L_002e: ldc.r4 1
L_0033: call Boolean Approximately(Single, Single)
L_0038: brtrue Label2
L_003d: ldsfld HBS.Logging.ILog heatLogger
L_0042: ldstr "Mech {0} sinks heat at {1:P0} rate from standing in {2}"
L_0047: ldarg.0
L_0048: call System.String get_DisplayName()
L_004d: ldarg.0
L_004e: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0053: ldfld System.Single heatSinkMultiplier
L_0058: box System.Single
L_005d: ldarg.0
L_005e: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0063: callvirt System.String get_Id()
L_0068: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_006d: callvirt Void Log(System.Object)
L_0072: Label1
L_0072: Label2
L_0072: ldarg.0
L_0073: call BattleTech.CombatGameState get_Combat()
L_0078: callvirt BattleTech.MapMetaData get_MapMetaData()
L_007d: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_0082: brfalse Label3
L_0087: ldarg.0
L_0088: call BattleTech.CombatGameState get_Combat()
L_008d: callvirt BattleTech.MapMetaData get_MapMetaData()
L_0092: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_0097: ldfld System.Single heatSinkMultiplier
L_009c: ldc.r4 1
L_00a1: call Boolean Approximately(Single, Single)
L_00a6: brtrue Label4
L_00ab: ldsfld HBS.Logging.ILog heatLogger
L_00b0: ldstr "Mech {0} sinks heat at {1:P0} rate from biome mask {2}"
L_00b5: ldarg.0
L_00b6: call System.String get_DisplayName()
L_00bb: ldarg.0
L_00bc: call BattleTech.CombatGameState get_Combat()
L_00c1: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00c6: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_00cb: ldfld System.Single heatSinkMultiplier
L_00d0: box System.Single
L_00d5: ldarg.0
L_00d6: call BattleTech.CombatGameState get_Combat()
L_00db: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00e0: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_00e5: callvirt System.String get_Id()
L_00ea: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_00ef: callvirt Void Log(System.Object)
L_00f4: Label3
L_00f4: Label4
L_00f4: ldarg.0
L_00f5: ldarg.0
L_00f6: call Int32 get__heat()
L_00fb: ldloc.0
L_00fc: sub
L_00fd: call Void set__heat(Int32)
L_0102: ldarg.0
L_0103: ldc.i4.1
L_0104: call Void set_HasAppliedHeatSinks(Boolean)
L_0109: ldsfld HBS.Logging.ILog heatLogger
L_010e: ldstr "Mech {0} sinks {1} points of heat; result heat = {2}"
L_0113: ldarg.0
L_0114: call System.String get_DisplayName()
L_0119: ldloc.0
L_011a: box System.Int32
L_011f: ldarg.0
L_0120: call Int32 get__heat()
L_0125: box System.Int32
L_012a: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012f: callvirt Void Log(System.Object)
L_0134: ldarg.0
L_0135: ldarg.1
L_0136: ldarg.0
L_0137: call System.String get_GUID()
L_013c: call Void ReconcileHeat(Int32, System.String)
L_0141: Label0
L_0141: ret
DONE

### Patch BattleTech.Mech, Int32 get_HeatSinkCapacity()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: call Single GetHeatSinkDissipation()
L_000c: conv.i4
L_000d: ldarg.0
L_000e: ldfld BattleTech.StatCollection statCollection
L_0013: ldstr "HeatSinkCapacity"
L_0018: callvirt Int32 GetValue[Int32](System.String)
L_001d: add
L_001e: stloc 0 (System.Int32)
L_001f: ldarg.0
L_0020: ldloca 0 (System.Int32)
L_0022: call Void Postfix(BattleTech.Mech, Int32 ByRef)
L_0027: ldloc 0 (System.Int32)
L_0028: ret
DONE

### Patch BattleTech.Mech, Void OnActivationEnd(System.String, Int32)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg 2
L_000d: call Void Prefix(BattleTech.Mech, System.String, Int32)
L_0012: ldarg.0
L_0013: call Boolean get_HasActivatedThisRound()
L_0018: brfalse Label1
L_001d: br Label2
L_0022: Label1
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: call Void OnActivationEnd(System.String, Int32)
L_002a: ldarg.0
L_002b: ldarg.1
L_002c: ldarg.2
L_002d: call Void CheckPilotStatusAfterActivation(System.String, Int32)
L_0032: Label2
L_0032: ldarg.0
L_0033: ldarg 1
L_0039: ldarg 2
L_003f: call Void Postfix(BattleTech.Mech, System.String, Int32)
L_0044: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void .ctor(AttackDirector, AbstractActor, ICombatant, Vector3, Quaternion, Int32, List`1, MeleeAttackType, Int32, Boolean, Int32, Int32)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: newobj Void .ctor()
L_0006: stfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: stfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence+MechDamage] recordedMechDamage
L_0016: ldarg.0
L_0017: newobj Void .ctor()
L_001c: stfld BattleTech.StatsGatherer damageStatsGatherer
L_0021: ldarg.0
L_0022: call Void .ctor()
L_0027: ldarg.0
L_0028: ldarg.1
L_0029: call Void set_Director(BattleTech.AttackDirector)
L_002e: ldarg.0
L_002f: ldarg.2
L_0030: stfld BattleTech.AbstractActor attacker
L_0035: ldarg.0
L_0036: ldarg.3
L_0037: stfld BattleTech.ICombatant chosenTarget
L_003c: ldarg.0
L_003d: ldarg.s 4
L_003f: stfld UnityEngine.Vector3 attackPosition
L_0044: ldarg.0
L_0045: ldarg.s 5
L_0047: stfld UnityEngine.Quaternion attackRotation
L_004c: ldarg.0
L_004d: ldarg.s 6
L_004f: stfld System.Int32 attackSequenceIdx
L_0054: ldarg.0
L_0055: ldarg.s 9
L_0057: stfld System.Int32 calledShotLocation
L_005c: ldarg.0
L_005d: ldarg.s 7
L_005f: stfld System.Collections.Generic.List`1[BattleTech.Weapon] allSelectedWeapons
L_0064: ldarg.0
L_0065: ldarg.s 10
L_0067: stfld System.Boolean isMoraleAttack
L_006c: ldarg.0
L_006d: ldarg.s 11
L_006f: stfld System.Int32 id
L_0074: ldarg.0
L_0075: ldarg.s 12
L_0077: stfld System.Int32 stackItemUID
L_007c: ldarg.0
L_007d: ldc.i4.0
L_007e: stfld System.Int32 currentFiringGroup
L_0083: ldarg.0
L_0084: ldc.r4 0
L_0089: stfld System.Single cumulativeDamage
L_008e: ldarg.0
L_008f: ldc.i4.1
L_0090: stfld System.Int32 numTargets
L_0095: ldarg.2
L_0096: callvirt BattleTech.Team get_team()
L_009b: callvirt System.String get_GUID()
L_00a0: ldarg.1
L_00a1: callvirt BattleTech.CombatGameState get_Combat()
L_00a6: callvirt System.String get_LocalPlayerTeamGuid()
L_00ab: call Boolean op_Equality(System.String, System.String)
L_00b0: brfalse Label1
L_00b5: ldarg.0
L_00b6: ldarg.2
L_00b7: callvirt BattleTech.Team get_team()
L_00bc: ldarg.3
L_00bd: callvirt BattleTech.Team get_team()
L_00c2: callvirt Single CompareTeamHealthPercentages(BattleTech.Team)
L_00c7: stfld System.Single previousTeamHealthDifference
L_00cc: br Label2
L_00d1: Label1
L_00d1: ldarg.0
L_00d2: ldarg.3
L_00d3: callvirt BattleTech.Team get_team()
L_00d8: ldarg.2
L_00d9: callvirt BattleTech.Team get_team()
L_00de: callvirt Single CompareTeamHealthPercentages(BattleTech.Team)
L_00e3: stfld System.Single previousTeamHealthDifference
L_00e8: Label2
L_00e8: ldarg.0
L_00e9: newobj Void .ctor()
L_00ee: stfld System.Collections.Generic.List`1[System.String] allWeaponIds
L_00f3: ldc.i4.0
L_00f4: stloc.0
L_00f5: br Label3
L_00fa: Label5
L_00fa: ldarg.0
L_00fb: ldfld System.Collections.Generic.List`1[System.String] allWeaponIds
L_0100: ldarg.s 7
L_0102: ldloc.0
L_0103: callvirt BattleTech.Weapon get_Item(Int32)
L_0108: callvirt System.String get_uid()
L_010d: callvirt Void Add(System.String)
L_0112: ldarg.s 7
L_0114: ldloc.0
L_0115: callvirt BattleTech.Weapon get_Item(Int32)
L_011a: ldarg.3
L_011b: ldarg.s 4
L_011d: ldarg.s 5
L_011f: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0124: brtrue Label4
L_0129: ldsfld HBS.Logging.ILog logger
L_012e: ldstr "AttackSequence: Weapon {0} is firing at target {1}, but technically cannot fire at that target."
L_0133: ldarg.s 7
L_0135: ldloc.0
L_0136: callvirt BattleTech.Weapon get_Item(Int32)
L_013b: callvirt System.String get_Name()
L_0140: ldarg.3
L_0141: callvirt System.String get_DisplayName()
L_0146: call System.String Format(System.String, System.Object, System.Object)
L_014b: callvirt Void LogWarning(System.Object)
L_0150: Label4
L_0150: ldloc.0
L_0151: ldc.i4.1
L_0152: add
L_0153: stloc.0
L_0154: Label3
L_0154: ldloc.0
L_0155: ldarg.s 7
L_0157: callvirt Int32 get_Count()
L_015c: blt Label5
L_0161: ldarg.0
L_0162: ldarg.2
L_0163: ldarg.s 4
L_0165: ldarg.s 5
L_0167: ldarg.3
L_0168: ldc.i4.1
L_0169: callvirt Boolean HasIndirectLOFToTargetUnit(UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, Boolean)
L_016e: stfld System.Boolean indirectFire
L_0173: ldarg.s 8
L_0175: brfalse Label6
L_017a: ldarg.0
L_017b: ldc.i4.1
L_017c: stfld System.Boolean isMelee
L_0181: ldarg.0
L_0182: ldarg.s 8
L_0184: stfld BattleTech.MeleeAttackType meleeAttackType
L_0189: Label6
L_0189: ldarg.3
L_018a: callvirt BattleTech.GameRepresentation get_GameRep()
L_018f: ldnull
L_0190: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0195: brfalse Label7
L_019a: ldarg.3
L_019b: callvirt BattleTech.GameRepresentation get_GameRep()
L_01a0: ldc.i4.1
L_01a1: callvirt Void SetVFXColliderEnabled(Boolean)
L_01a6: Label7
L_01a6: ldarg.0
L_01a7: newobj Void .ctor()
L_01ac: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedWeapon
L_01b1: ldarg.0
L_01b2: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedWeapon
L_01b7: ldarg.3
L_01b8: callvirt System.String get_GUID()
L_01bd: ldc.i4.0
L_01be: callvirt Void Add(System.String, Boolean)
L_01c3: ldarg.0
L_01c4: newobj Void .ctor()
L_01c9: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedAmmoExplosion
L_01ce: ldarg.0
L_01cf: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedAmmoExplosion
L_01d4: ldarg.3
L_01d5: callvirt System.String get_GUID()
L_01da: ldc.i4.0
L_01db: callvirt Void Add(System.String, Boolean)
L_01e0: ldarg.0
L_01e1: newobj Void .ctor()
L_01e6: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackContainsDodge
L_01eb: ldarg.0
L_01ec: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackContainsDodge
L_01f1: ldarg.3
L_01f2: callvirt System.String get_GUID()
L_01f7: ldc.i4.0
L_01f8: callvirt Void Add(System.String, Boolean)
L_01fd: ldarg.0
L_01fe: newobj Void .ctor()
L_0203: stfld System.Collections.Generic.Dictionary`2[System.String,System.Int32] attackCrits
L_0208: ldarg.0
L_0209: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Int32] attackCrits
L_020e: ldarg.3
L_020f: callvirt System.String get_GUID()
L_0214: ldc.i4.0
L_0215: callvirt Void Add(System.String, Int32)
L_021a: ldarg.0
L_021b: newobj Void .ctor()
L_0220: stfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.Weapon]] attackWeaponCrits
L_0225: ldarg.0
L_0226: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.Weapon]] attackWeaponCrits
L_022b: ldarg.3
L_022c: callvirt System.String get_GUID()
L_0231: newobj Void .ctor()
L_0236: callvirt Void Add(System.String, System.Collections.Generic.List`1[BattleTech.Weapon])
L_023b: ldarg.0
L_023c: newobj Void .ctor()
L_0241: stfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.AmmunitionBox]] attackAmmoCrits
L_0246: ldarg.0
L_0247: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.AmmunitionBox]] attackAmmoCrits
L_024c: ldarg.3
L_024d: callvirt System.String get_GUID()
L_0252: newobj Void .ctor()
L_0257: callvirt Void Add(System.String, System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_025c: ldarg.0
L_025d: newobj Void .ctor()
L_0262: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDidDamage
L_0267: ldarg.0
L_0268: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDidDamage
L_026d: ldarg.3
L_026e: callvirt System.String get_GUID()
L_0273: ldc.i4.0
L_0274: callvirt Void Add(System.String, Boolean)
L_0279: ldarg.0
L_027a: newobj Void .ctor()
L_027f: stfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackArmorDamage
L_0284: ldarg.0
L_0285: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackArmorDamage
L_028a: ldarg.3
L_028b: callvirt System.String get_GUID()
L_0290: ldc.r4 0
L_0295: callvirt Void Add(System.String, Single)
L_029a: ldarg.0
L_029b: newobj Void .ctor()
L_02a0: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] lowArmorStruck
L_02a5: ldarg.0
L_02a6: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] lowArmorStruck
L_02ab: ldarg.3
L_02ac: callvirt System.String get_GUID()
L_02b1: ldc.i4.0
L_02b2: callvirt Void Add(System.String, Boolean)
L_02b7: ldarg.0
L_02b8: newobj Void .ctor()
L_02bd: stfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackStructureDamage
L_02c2: ldarg.0
L_02c3: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackStructureDamage
L_02c8: ldarg.3
L_02c9: callvirt System.String get_GUID()
L_02ce: ldc.r4 0
L_02d3: callvirt Void Add(System.String, Single)
L_02d8: ldarg.0
L_02d9: newobj Void .ctor()
L_02de: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedLeg
L_02e3: ldarg.0
L_02e4: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedLeg
L_02e9: ldarg.3
L_02ea: callvirt System.String get_GUID()
L_02ef: ldc.i4.0
L_02f0: callvirt Void Add(System.String, Boolean)
L_02f5: ldarg.0
L_02f6: newobj Void .ctor()
L_02fb: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedAnyLocation
L_0300: ldarg.0
L_0301: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedAnyLocation
L_0306: ldarg.3
L_0307: callvirt System.String get_GUID()
L_030c: ldc.i4.0
L_030d: callvirt Void Add(System.String, Boolean)
L_0312: ldarg.0
L_0313: newobj Void .ctor()
L_0318: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDealtHeatDamage
L_031d: ldarg.0
L_031e: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDealtHeatDamage
L_0323: ldarg.3
L_0324: callvirt System.String get_GUID()
L_0329: ldc.i4.0
L_032a: callvirt Void Add(System.String, Boolean)
L_032f: ldarg.0
L_0330: newobj Void .ctor()
L_0335: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedKnockdown
L_033a: ldarg.0
L_033b: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedKnockdown
L_0340: ldarg.3
L_0341: callvirt System.String get_GUID()
L_0346: ldc.i4.0
L_0347: callvirt Void Add(System.String, Boolean)
L_034c: ldarg.0
L_034d: ldc.i4.1
L_034e: call Void set_attackCompletelyMissed(Boolean)
L_0353: ldarg.0
L_0354: ldc.i4.0
L_0355: call Void set_attackDestroyedAttackerLeg(Boolean)
L_035a: ldarg.0
L_035b: ldc.i4.0
L_035c: call Void set_attackTotalShotsFired(Int32)
L_0361: ldarg.0
L_0362: ldc.i4.0
L_0363: call Void set_attackTotalShotsHit(Int32)
L_0368: ldarg.0
L_0369: newobj Void .ctor()
L_036e: call Void set_allAffectedTargetIds(System.Collections.Generic.List`1[System.String])
L_0373: ldarg.0
L_0374: ldarg.3
L_0375: callvirt System.String get_GUID()
L_037a: call Void AddAffectedTarget(System.String)
L_037f: ldarg.0
L_0380: call Void Init()
L_0385: ldarg.0
L_0386: ldarg 1
L_038c: ldarg 2
L_0392: ldarg 3
L_0398: ldarg 4
L_039e: ldarg 5
L_03a4: ldarg 6
L_03aa: ldarg 7
L_03b0: ldarg 8
L_03b6: ldarg 9
L_03bc: ldarg 10
L_03c2: ldarg 11
L_03c8: ldarg 12
L_03ce: call Void Postfix(AttackSequence, BattleTech.AttackDirector, BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType, Int32, Boolean, Int32, Int32)
L_03d3: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: ldarg.1
L_0001: castclass BattleTech.AttackCompleteMessage
L_0006: stloc.0
L_0007: ldloc.0
L_0008: ldfld System.Int32 sequenceId
L_000d: stloc.1
L_000e: ldarg.0
L_000f: ldloc.1
L_0010: call AttackSequence GetAttackSequence(Int32)
L_0015: stloc.2
L_0016: ldloc.2
L_0017: brtrue Label1
L_001c: ldsfld HBS.Logging.ILog logger
L_0021: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_0026: ldloc.1
L_0027: box System.Int32
L_002c: call System.String Format(System.String, System.Object)
L_0031: callvirt Void LogError(System.Object)
L_0036: ldstr "OnAttackComplete received invalid sequenceID: "
L_003b: ldloc.1
L_003c: box System.Int32
L_0041: call System.String Concat(System.Object, System.Object)
L_0046: newobj Void .ctor(String)
L_004b: throw
L_004c: Label1
L_004c: ldsfld HBS.Logging.ILog logger
L_0051: callvirt Boolean get_IsLogEnabled()
L_0056: brfalse Label2
L_005b: ldsfld HBS.Logging.ILog logger
L_0060: ldstr "[OnAttackComplete] ID {0}"
L_0065: ldloc.1
L_0066: box System.Int32
L_006b: call System.String Format(System.String, System.Object)
L_0070: callvirt Void Log(System.Object)
L_0075: Label2
L_0075: ldloc.2
L_0076: ldfld BattleTech.AbstractActor attacker
L_007b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0080: ldnull
L_0081: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0086: brfalse Label3
L_008b: ldloc.2
L_008c: ldfld BattleTech.AbstractActor attacker
L_0091: callvirt BattleTech.GameRepresentation get_GameRep()
L_0096: ldc.i4.0
L_0097: ldc.r4 0.5
L_009c: ldloc.0
L_009d: ldfld System.Int32 stackItemUID
L_00a2: ldloc.0
L_00a3: ldfld System.Int32 sequenceId
L_00a8: ldnull
L_00a9: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00ae: ldloc.2
L_00af: ldfld BattleTech.AbstractActor attacker
L_00b4: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b9: ldc.i4.0
L_00ba: callvirt Void SetVFXColliderEnabled(Boolean)
L_00bf: ldloc.2
L_00c0: ldfld BattleTech.AbstractActor attacker
L_00c5: callvirt BattleTech.GameRepresentation get_GameRep()
L_00ca: isinst BattleTech.MechRepresentation
L_00cf: stloc.3
L_00d0: ldloc.3
L_00d1: ldnull
L_00d2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00d7: brfalse Label4
L_00dc: ldloc.3
L_00dd: ldc.i4.1
L_00de: callvirt Void ToggleRandomIdles(Boolean)
L_00e3: Label4
L_00e3: ldloc.2
L_00e4: ldfld BattleTech.AbstractActor attacker
L_00e9: callvirt BattleTech.Team get_team()
L_00ee: callvirt System.String get_GUID()
L_00f3: ldarg.0
L_00f4: call BattleTech.CombatGameState get_Combat()
L_00f9: callvirt System.String get_LocalPlayerTeamGuid()
L_00fe: call Boolean op_Equality(System.String, System.String)
L_0103: brfalse Label5
L_0108: ldloc.2
L_0109: ldfld BattleTech.AbstractActor attacker
L_010e: callvirt BattleTech.Team get_team()
L_0113: ldloc.2
L_0114: ldfld BattleTech.ICombatant chosenTarget
L_0119: callvirt BattleTech.Team get_team()
L_011e: ldloc.2
L_011f: ldfld System.Single previousTeamHealthDifference
L_0124: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_0129: Label3
L_0129: Label5
L_0129: ldloc.2
L_012a: ldfld BattleTech.ICombatant chosenTarget
L_012f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0134: ldnull
L_0135: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_013a: brfalse Label6
L_013f: ldloc.2
L_0140: ldfld BattleTech.ICombatant chosenTarget
L_0145: callvirt BattleTech.GameRepresentation get_GameRep()
L_014a: isinst BattleTech.MechRepresentation
L_014f: stloc.s 4 (BattleTech.MechRepresentation)
L_0151: ldloc.s 4 (BattleTech.MechRepresentation)
L_0153: ldnull
L_0154: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0159: brfalse Label7
L_015e: ldloc.s 4 (BattleTech.MechRepresentation)
L_0160: ldc.i4.1
L_0161: callvirt Void ToggleRandomIdles(Boolean)
L_0166: Label7
L_0166: ldloc.2
L_0167: ldfld BattleTech.ICombatant chosenTarget
L_016c: callvirt BattleTech.Team get_team()
L_0171: callvirt System.String get_GUID()
L_0176: ldarg.0
L_0177: call BattleTech.CombatGameState get_Combat()
L_017c: callvirt System.String get_LocalPlayerTeamGuid()
L_0181: call Boolean op_Equality(System.String, System.String)
L_0186: brfalse Label8
L_018b: ldloc.2
L_018c: ldfld BattleTech.ICombatant chosenTarget
L_0191: callvirt BattleTech.Team get_team()
L_0196: ldloc.2
L_0197: ldfld BattleTech.AbstractActor attacker
L_019c: callvirt BattleTech.Team get_team()
L_01a1: ldloc.2
L_01a2: ldfld System.Single previousTeamHealthDifference
L_01a7: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01ac: Label6
L_01ac: Label8
L_01ac: ldc.i4.0
L_01ad: stloc.s 5 (System.Int32)
L_01af: br Label9
L_01b4: Label13
L_01b4: ldarg.0
L_01b5: call BattleTech.CombatGameState get_Combat()
L_01ba: ldloc.2
L_01bb: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01c0: ldloc.s 5 (System.Int32)
L_01c2: callvirt System.String get_Item(Int32)
L_01c7: ldc.i4.0
L_01c8: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01cd: stloc.s 6 (BattleTech.ICombatant)
L_01cf: ldloc.s 6 (BattleTech.ICombatant)
L_01d1: brfalse Label10
L_01d6: ldloc.s 6 (BattleTech.ICombatant)
L_01d8: callvirt BattleTech.GameRepresentation get_GameRep()
L_01dd: ldnull
L_01de: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01e3: brtrue Label11
L_01e8: ldloc.s 6 (BattleTech.ICombatant)
L_01ea: callvirt BattleTech.GameRepresentation get_GameRep()
L_01ef: isinst BattleTech.MechRepresentation
L_01f4: stloc.s 7 (BattleTech.MechRepresentation)
L_01f6: ldloc.s 7 (BattleTech.MechRepresentation)
L_01f8: ldnull
L_01f9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01fe: brfalse Label12
L_0203: ldloc.s 7 (BattleTech.MechRepresentation)
L_0205: ldc.i4.1
L_0206: callvirt Void ToggleRandomIdles(Boolean)
L_020b: Label10
L_020b: Label11
L_020b: Label12
L_020b: ldloc.s 5 (System.Int32)
L_020d: ldc.i4.1
L_020e: add
L_020f: stloc.s 5 (System.Int32)
L_0211: Label9
L_0211: ldloc.s 5 (System.Int32)
L_0213: ldloc.2
L_0214: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0219: callvirt Int32 get_Count()
L_021e: blt Label13
L_0223: ldarg.0
L_0224: ldloc.2
L_0225: call Void RecordAttackSequenceStats(AttackSequence)
L_022a: ldarg.0
L_022b: call BattleTech.CombatGameState get_Combat()
L_0230: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0235: ldloc.2
L_0236: callvirt Void RecordAttackSequence(AttackSequence)
L_023b: ldarg.0
L_023c: ldloc.1
L_023d: call Boolean RemoveAttackSequence(Int32)
L_0242: pop
L_0243: ldarg.0
L_0244: ldarg 1
L_024a: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_024f: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: castclass BattleTech.AttackSequenceImpactMessage
L_0017: stloc.0
L_0018: ldloc.0
L_0019: ldflda BattleTech.WeaponHitInfo hitInfo
L_001e: ldfld System.Int32 attackSequenceId
L_0023: ldarg.0
L_0024: ldfld System.Int32 id
L_0029: beq Label1
L_002e: br Label33
L_0033: Label1
L_0033: ldloc.0
L_0034: ldflda BattleTech.WeaponHitInfo hitInfo
L_0039: ldfld System.Int32 attackGroupIndex
L_003e: stloc.1
L_003f: ldloc.0
L_0040: ldflda BattleTech.WeaponHitInfo hitInfo
L_0045: ldfld System.Int32 attackWeaponIndex
L_004a: stloc.2
L_004b: ldloc.0
L_004c: ldfld System.Int32 hitIndex
L_0051: stloc.3
L_0052: ldarg.0
L_0053: ldloc.1
L_0054: ldloc.2
L_0055: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_005a: stloc.s 4 (BattleTech.Weapon)
L_005c: ldloc.0
L_005d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0062: ldloc.3
L_0063: call Int32 ShotHitLocation(Int32)
L_0068: stloc.s 5 (System.Int32)
L_006a: ldloc.0
L_006b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0070: ldfld UnityEngine.Vector3[] hitPositions
L_0075: ldloc.3
L_0076: ldelem UnityEngine.Vector3
L_007b: stloc.s 6 (UnityEngine.Vector3)
L_007d: ldloc.0
L_007e: ldfld System.Single hitDamage
L_0083: stloc.s 7 (System.Single)
L_0085: ldloc.s 7 (System.Single)
L_0087: stloc.s 8 (System.Single)
L_0089: ldarg.0
L_008a: call BattleTech.AttackDirector get_Director()
L_008f: callvirt BattleTech.CombatGameState get_Combat()
L_0094: callvirt BattleTech.ToHit get_ToHit()
L_0099: ldloc.0
L_009a: ldflda BattleTech.WeaponHitInfo hitInfo
L_009f: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00a4: ldloc.3
L_00a5: ldelem.i4
L_00a6: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00ab: stloc.s 9 (System.Single)
L_00ad: ldloc.s 7 (System.Single)
L_00af: ldloc.s 9 (System.Single)
L_00b1: mul
L_00b2: stloc.s 8 (System.Single)
L_00b4: ldloc.0
L_00b5: ldflda BattleTech.WeaponHitInfo hitInfo
L_00ba: ldfld System.String[] secondaryTargetIds
L_00bf: ldloc.3
L_00c0: ldelem.ref
L_00c1: call Boolean IsNullOrEmpty(System.String)
L_00c6: ldc.i4.0
L_00c7: ceq
L_00c9: stloc.s 10 (System.Boolean)
L_00cb: ldnull
L_00cc: stloc.s 11 (BattleTech.ICombatant)
L_00ce: ldloc.s 10 (System.Boolean)
L_00d0: brfalse Label2
L_00d5: ldarg.0
L_00d6: call BattleTech.AttackDirector get_Director()
L_00db: callvirt BattleTech.CombatGameState get_Combat()
L_00e0: ldloc.0
L_00e1: ldflda BattleTech.WeaponHitInfo hitInfo
L_00e6: ldfld System.String[] secondaryTargetIds
L_00eb: ldloc.3
L_00ec: ldelem.ref
L_00ed: ldc.i4.0
L_00ee: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_00f3: stloc.s 11 (BattleTech.ICombatant)
L_00f5: Label2
L_00f5: ldarg.0
L_00f6: ldfld BattleTech.ICombatant chosenTarget
L_00fb: isinst BattleTech.AbstractActor
L_0100: stloc.s 12 (BattleTech.AbstractActor)
L_0102: ldloc.s 12 (BattleTech.AbstractActor)
L_0104: brfalse Label3
L_0109: ldarg.0
L_010a: ldfld BattleTech.AbstractActor attacker
L_010f: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0114: ldloc.s 12 (BattleTech.AbstractActor)
L_0116: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_011b: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_011d: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_011f: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0124: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0126: ldloc.s 12 (BattleTech.AbstractActor)
L_0128: ldloc.s 8 (System.Single)
L_012a: ldloc.s 4 (BattleTech.Weapon)
L_012c: callvirt BattleTech.WeaponCategory get_Category()
L_0131: ldloc.s 12 (BattleTech.AbstractActor)
L_0133: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0138: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_013a: ldc.i4.1
L_013b: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0140: stloc.s 8 (System.Single)
L_0142: ldloc.s 12 (BattleTech.AbstractActor)
L_0144: ldloc.s 8 (System.Single)
L_0146: ldloc.s 4 (BattleTech.Weapon)
L_0148: callvirt BattleTech.WeaponCategory get_Category()
L_014d: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0152: stloc.s 8 (System.Single)
L_0154: Label3
L_0154: ldloc.s 8 (System.Single)
L_0156: ldc.r4 0
L_015b: bgt.un Label4
L_0160: ldsfld HBS.Logging.ILog attackLogger
L_0165: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_016a: ldloc.s 7 (System.Single)
L_016c: box System.Single
L_0171: ldloc.s 8 (System.Single)
L_0173: box System.Single
L_0178: call System.String Format(System.String, System.Object, System.Object)
L_017d: callvirt Void LogWarning(System.Object)
L_0182: ldc.r4 0
L_0187: stloc.s 8 (System.Single)
L_0189: Label4
L_0189: ldarg.0
L_018a: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_018f: ldloc.0
L_0190: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_0195: stloc.s 13 (System.Boolean)
L_0197: ldloc.0
L_0198: ldflda BattleTech.WeaponHitInfo hitInfo
L_019d: ldloc.3
L_019e: call Boolean DidShotHitChosenTarget(Int32)
L_01a3: stloc.s 14 (System.Boolean)
L_01a5: ldloc.0
L_01a6: ldfld System.Boolean hasPlayedImpact
L_01ab: brtrue Label5
L_01b0: ldsfld HBS.Logging.ILog logger
L_01b5: callvirt Boolean get_IsDebugEnabled()
L_01ba: brfalse Label6
L_01bf: ldsfld HBS.Logging.ILog logger
L_01c4: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01c9: ldc.i4.5
L_01ca: newarr System.Object
L_01cf: dup
L_01d0: ldc.i4.0
L_01d1: ldarg.0
L_01d2: ldfld System.Int32 id
L_01d7: box System.Int32
L_01dc: stelem.ref
L_01dd: dup
L_01de: ldc.i4.1
L_01df: ldloc.1
L_01e0: box System.Int32
L_01e5: stelem.ref
L_01e6: dup
L_01e7: ldc.i4.2
L_01e8: ldloc.2
L_01e9: box System.Int32
L_01ee: stelem.ref
L_01ef: dup
L_01f0: ldc.i4.3
L_01f1: ldloc.3
L_01f2: box System.Int32
L_01f7: stelem.ref
L_01f8: dup
L_01f9: ldc.i4.4
L_01fa: ldloc.s 13 (System.Boolean)
L_01fc: box System.Boolean
L_0201: stelem.ref
L_0202: call System.String Format(System.String, System.Object[])
L_0207: callvirt Void LogDebug(System.Object)
L_020c: Label6
L_020c: ldloc.0
L_020d: ldc.i4.1
L_020e: stfld System.Boolean hasPlayedImpact
L_0213: ldarg.0
L_0214: ldfld BattleTech.ICombatant chosenTarget
L_0219: callvirt BattleTech.GameRepresentation get_GameRep()
L_021e: ldnull
L_021f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0224: brfalse Label7
L_0229: ldloc.s 14 (System.Boolean)
L_022b: brfalse Label8
L_0230: ldarg.0
L_0231: ldfld BattleTech.ICombatant chosenTarget
L_0236: callvirt BattleTech.GameRepresentation get_GameRep()
L_023b: ldloc.0
L_023c: ldfld BattleTech.WeaponHitInfo hitInfo
L_0241: ldloc.3
L_0242: ldloc.s 4 (BattleTech.Weapon)
L_0244: ldarg.0
L_0245: ldfld BattleTech.MeleeAttackType meleeAttackType
L_024a: ldarg.0
L_024b: ldfld System.Single cumulativeDamage
L_0250: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0255: ldloc.s 6 (UnityEngine.Vector3)
L_0257: stloc.s 17 (UnityEngine.Vector3)
L_0259: ldarg.0
L_025a: ldfld BattleTech.ICombatant chosenTarget
L_025f: ldloc.s 5 (System.Int32)
L_0261: callvirt Single ArmorForLocation(Int32)
L_0266: ldloc.s 8 (System.Single)
L_0268: bge.un Label9
L_026d: ldloc.0
L_026e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0273: ldfld System.String attackerId
L_0278: ldarg.0
L_0279: ldfld BattleTech.ICombatant chosenTarget
L_027e: callvirt System.String get_GUID()
L_0283: ldstr "{0}"
L_0288: ldc.i4.1
L_0289: newarr System.Object
L_028e: dup
L_028f: ldc.i4.0
L_0290: ldc.r4 1
L_0295: ldloc.s 8 (System.Single)
L_0297: call Single Max(Single, Single)
L_029c: conv.i4
L_029d: box System.Int32
L_02a2: stelem.ref
L_02a3: newobj Void .ctor(String, Object[])
L_02a8: ldarg.0
L_02a9: call BattleTech.AttackDirector get_Director()
L_02ae: callvirt BattleTech.CombatGameState get_Combat()
L_02b3: callvirt BattleTech.CombatGameConstants get_Constants()
L_02b8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02bd: ldfld System.Single floatieSizeMedium
L_02c2: ldc.i4.8
L_02c3: ldloc.s 17 (UnityEngine.Vector3)
L_02c5: ldfld System.Single x
L_02ca: ldloc.s 17 (UnityEngine.Vector3)
L_02cc: ldfld System.Single y
L_02d1: ldloc.s 17 (UnityEngine.Vector3)
L_02d3: ldfld System.Single z
L_02d8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02dd: stloc.s 18 (BattleTech.FloatieMessage)
L_02df: ldarg.0
L_02e0: call BattleTech.AttackDirector get_Director()
L_02e5: callvirt BattleTech.CombatGameState get_Combat()
L_02ea: callvirt MessageCenter get_MessageCenter()
L_02ef: ldloc.s 18 (BattleTech.FloatieMessage)
L_02f1: callvirt Void PublishMessage(MessageCenterMessage)
L_02f6: br Label10
L_02fb: Label9
L_02fb: ldloc.0
L_02fc: ldflda BattleTech.WeaponHitInfo hitInfo
L_0301: ldfld System.String attackerId
L_0306: ldarg.0
L_0307: ldfld BattleTech.ICombatant chosenTarget
L_030c: callvirt System.String get_GUID()
L_0311: ldstr "{0}"
L_0316: ldc.i4.1
L_0317: newarr System.Object
L_031c: dup
L_031d: ldc.i4.0
L_031e: ldc.r4 1
L_0323: ldloc.s 8 (System.Single)
L_0325: call Single Max(Single, Single)
L_032a: conv.i4
L_032b: box System.Int32
L_0330: stelem.ref
L_0331: newobj Void .ctor(String, Object[])
L_0336: ldarg.0
L_0337: call BattleTech.AttackDirector get_Director()
L_033c: callvirt BattleTech.CombatGameState get_Combat()
L_0341: callvirt BattleTech.CombatGameConstants get_Constants()
L_0346: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_034b: ldfld System.Single floatieSizeMedium
L_0350: ldc.i4.7
L_0351: ldloc.s 17 (UnityEngine.Vector3)
L_0353: ldfld System.Single x
L_0358: ldloc.s 17 (UnityEngine.Vector3)
L_035a: ldfld System.Single y
L_035f: ldloc.s 17 (UnityEngine.Vector3)
L_0361: ldfld System.Single z
L_0366: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_036b: stloc.s 19 (BattleTech.FloatieMessage)
L_036d: ldarg.0
L_036e: call BattleTech.AttackDirector get_Director()
L_0373: callvirt BattleTech.CombatGameState get_Combat()
L_0378: callvirt MessageCenter get_MessageCenter()
L_037d: ldloc.s 19 (BattleTech.FloatieMessage)
L_037f: callvirt Void PublishMessage(MessageCenterMessage)
L_0384: br Label11
L_0389: Label8
L_0389: ldarg.0
L_038a: ldfld BattleTech.ICombatant chosenTarget
L_038f: callvirt UnityEngine.Vector3 get_TargetPosition()
L_0394: call UnityEngine.Vector3 get_insideUnitSphere()
L_0399: ldc.r4 5
L_039e: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03a3: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03a8: stloc.s 20 (UnityEngine.Vector3)
L_03aa: ldloc.0
L_03ab: ldflda BattleTech.WeaponHitInfo hitInfo
L_03b0: ldfld System.Boolean[] dodgeSuccesses
L_03b5: ldloc.3
L_03b6: ldelem.u1
L_03b7: brfalse Label12
L_03bc: ldarg.0
L_03bd: ldfld BattleTech.ICombatant chosenTarget
L_03c2: callvirt BattleTech.GameRepresentation get_GameRep()
L_03c7: ldloc.0
L_03c8: ldfld BattleTech.WeaponHitInfo hitInfo
L_03cd: ldloc.3
L_03ce: ldloc.s 4 (BattleTech.Weapon)
L_03d0: ldarg.0
L_03d1: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03d6: ldarg.0
L_03d7: ldfld System.Single cumulativeDamage
L_03dc: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_03e1: ldloc.0
L_03e2: ldflda BattleTech.WeaponHitInfo hitInfo
L_03e7: ldfld System.String attackerId
L_03ec: ldarg.0
L_03ed: ldfld BattleTech.ICombatant chosenTarget
L_03f2: callvirt System.String get_GUID()
L_03f7: ldstr "EVADE"
L_03fc: call System.Object[] Empty[Object]()
L_0401: newobj Void .ctor(String, Object[])
L_0406: ldarg.0
L_0407: call BattleTech.AttackDirector get_Director()
L_040c: callvirt BattleTech.CombatGameState get_Combat()
L_0411: callvirt BattleTech.CombatGameConstants get_Constants()
L_0416: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_041b: ldfld System.Single floatieSizeMedium
L_0420: ldc.i4.6
L_0421: ldloc.s 20 (UnityEngine.Vector3)
L_0423: ldfld System.Single x
L_0428: ldloc.s 20 (UnityEngine.Vector3)
L_042a: ldfld System.Single y
L_042f: ldloc.s 20 (UnityEngine.Vector3)
L_0431: ldfld System.Single z
L_0436: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_043b: stloc.s 21 (BattleTech.FloatieMessage)
L_043d: ldarg.0
L_043e: call BattleTech.AttackDirector get_Director()
L_0443: callvirt BattleTech.CombatGameState get_Combat()
L_0448: callvirt MessageCenter get_MessageCenter()
L_044d: ldloc.s 21 (BattleTech.FloatieMessage)
L_044f: callvirt Void PublishMessage(MessageCenterMessage)
L_0454: br Label13
L_0459: Label12
L_0459: ldarg.0
L_045a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_045f: brfalse Label14
L_0464: ldarg.0
L_0465: ldfld BattleTech.ICombatant chosenTarget
L_046a: callvirt BattleTech.GameRepresentation get_GameRep()
L_046f: ldloc.0
L_0470: ldfld BattleTech.WeaponHitInfo hitInfo
L_0475: ldloc.3
L_0476: ldloc.s 4 (BattleTech.Weapon)
L_0478: ldarg.0
L_0479: ldfld BattleTech.MeleeAttackType meleeAttackType
L_047e: ldarg.0
L_047f: ldfld System.Single cumulativeDamage
L_0484: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0489: ldloc.0
L_048a: ldflda BattleTech.WeaponHitInfo hitInfo
L_048f: ldfld System.String attackerId
L_0494: ldloc.0
L_0495: ldflda BattleTech.WeaponHitInfo hitInfo
L_049a: ldfld System.String targetId
L_049f: ldstr "MISS!"
L_04a4: call System.Object[] Empty[Object]()
L_04a9: newobj Void .ctor(String, Object[])
L_04ae: ldarg.0
L_04af: call BattleTech.AttackDirector get_Director()
L_04b4: callvirt BattleTech.CombatGameState get_Combat()
L_04b9: callvirt BattleTech.CombatGameConstants get_Constants()
L_04be: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04c3: ldfld System.Single floatieSizeMedium
L_04c8: ldc.i4.5
L_04c9: ldloc.s 20 (UnityEngine.Vector3)
L_04cb: ldfld System.Single x
L_04d0: ldloc.s 20 (UnityEngine.Vector3)
L_04d2: ldfld System.Single y
L_04d7: ldloc.s 20 (UnityEngine.Vector3)
L_04d9: ldfld System.Single z
L_04de: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_04e3: stloc.s 22 (BattleTech.FloatieMessage)
L_04e5: ldarg.0
L_04e6: call BattleTech.AttackDirector get_Director()
L_04eb: callvirt BattleTech.CombatGameState get_Combat()
L_04f0: callvirt MessageCenter get_MessageCenter()
L_04f5: ldloc.s 22 (BattleTech.FloatieMessage)
L_04f7: callvirt Void PublishMessage(MessageCenterMessage)
L_04fc: br Label15
L_0501: Label14
L_0501: ldloc.s 4 (BattleTech.Weapon)
L_0503: callvirt Int32 get_ShotsWhenFired()
L_0508: ldc.i4.1
L_0509: bgt Label16
L_050e: ldc.i4.5
L_050f: br Label17
L_0514: Label16
L_0514: ldc.i4.4
L_0515: Label17
L_0515: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0517: ldloc.0
L_0518: ldflda BattleTech.WeaponHitInfo hitInfo
L_051d: ldfld System.String attackerId
L_0522: ldloc.0
L_0523: ldflda BattleTech.WeaponHitInfo hitInfo
L_0528: ldfld System.String targetId
L_052d: ldstr "MISS!"
L_0532: call System.Object[] Empty[Object]()
L_0537: newobj Void .ctor(String, Object[])
L_053c: ldarg.0
L_053d: call BattleTech.AttackDirector get_Director()
L_0542: callvirt BattleTech.CombatGameState get_Combat()
L_0547: callvirt BattleTech.CombatGameConstants get_Constants()
L_054c: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0551: ldfld System.Single floatieSizeMedium
L_0556: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0558: ldloc.s 20 (UnityEngine.Vector3)
L_055a: ldfld System.Single x
L_055f: ldloc.s 20 (UnityEngine.Vector3)
L_0561: ldfld System.Single y
L_0566: ldloc.s 20 (UnityEngine.Vector3)
L_0568: ldfld System.Single z
L_056d: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0572: stloc.s 24 (BattleTech.FloatieMessage)
L_0574: ldarg.0
L_0575: call BattleTech.AttackDirector get_Director()
L_057a: callvirt BattleTech.CombatGameState get_Combat()
L_057f: callvirt MessageCenter get_MessageCenter()
L_0584: ldloc.s 24 (BattleTech.FloatieMessage)
L_0586: callvirt Void PublishMessage(MessageCenterMessage)
L_058b: Label13
L_058b: Label15
L_058b: ldloc.s 10 (System.Boolean)
L_058d: brfalse Label18
L_0592: ldloc.0
L_0593: ldflda BattleTech.WeaponHitInfo hitInfo
L_0598: ldfld System.String attackerId
L_059d: ldloc.0
L_059e: ldflda BattleTech.WeaponHitInfo hitInfo
L_05a3: ldfld System.String targetId
L_05a8: ldstr "STRAY SHOT"
L_05ad: call System.Object[] Empty[Object]()
L_05b2: newobj Void .ctor(String, Object[])
L_05b7: ldarg.0
L_05b8: call BattleTech.AttackDirector get_Director()
L_05bd: callvirt BattleTech.CombatGameState get_Combat()
L_05c2: callvirt BattleTech.CombatGameConstants get_Constants()
L_05c7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05cc: ldfld System.Single floatieSizeLarge
L_05d1: ldc.i4.5
L_05d2: ldloc.s 6 (UnityEngine.Vector3)
L_05d4: ldfld System.Single x
L_05d9: ldloc.s 6 (UnityEngine.Vector3)
L_05db: ldfld System.Single y
L_05e0: ldloc.s 6 (UnityEngine.Vector3)
L_05e2: ldfld System.Single z
L_05e7: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05ec: stloc.s 25 (BattleTech.FloatieMessage)
L_05ee: ldarg.0
L_05ef: call BattleTech.AttackDirector get_Director()
L_05f4: callvirt BattleTech.CombatGameState get_Combat()
L_05f9: callvirt MessageCenter get_MessageCenter()
L_05fe: ldloc.s 25 (BattleTech.FloatieMessage)
L_0600: callvirt Void PublishMessage(MessageCenterMessage)
L_0605: ldloc.s 11 (BattleTech.ICombatant)
L_0607: brfalse Label19
L_060c: ldloc.s 11 (BattleTech.ICombatant)
L_060e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0613: ldnull
L_0614: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0619: brfalse Label20
L_061e: ldloc.s 11 (BattleTech.ICombatant)
L_0620: callvirt BattleTech.GameRepresentation get_GameRep()
L_0625: ldloc.0
L_0626: ldfld BattleTech.WeaponHitInfo hitInfo
L_062b: ldloc.3
L_062c: ldloc.s 4 (BattleTech.Weapon)
L_062e: ldarg.0
L_062f: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0634: ldarg.0
L_0635: ldfld System.Single cumulativeDamage
L_063a: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_063f: Label20
L_063f: ldloc.s 11 (BattleTech.ICombatant)
L_0641: ldloc.s 5 (System.Int32)
L_0643: callvirt Single ArmorForLocation(Int32)
L_0648: ldloc.s 8 (System.Single)
L_064a: bge.un Label21
L_064f: ldloc.0
L_0650: ldflda BattleTech.WeaponHitInfo hitInfo
L_0655: ldfld System.String attackerId
L_065a: ldloc.s 11 (BattleTech.ICombatant)
L_065c: callvirt System.String get_GUID()
L_0661: ldstr "{0}"
L_0666: ldc.i4.1
L_0667: newarr System.Object
L_066c: dup
L_066d: ldc.i4.0
L_066e: ldc.r4 1
L_0673: ldloc.s 8 (System.Single)
L_0675: call Single Max(Single, Single)
L_067a: conv.i4
L_067b: box System.Int32
L_0680: stelem.ref
L_0681: newobj Void .ctor(String, Object[])
L_0686: ldarg.0
L_0687: call BattleTech.AttackDirector get_Director()
L_068c: callvirt BattleTech.CombatGameState get_Combat()
L_0691: callvirt BattleTech.CombatGameConstants get_Constants()
L_0696: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_069b: ldfld System.Single floatieSizeMedium
L_06a0: ldc.i4.8
L_06a1: ldloc.s 6 (UnityEngine.Vector3)
L_06a3: ldfld System.Single x
L_06a8: ldloc.s 6 (UnityEngine.Vector3)
L_06aa: ldfld System.Single y
L_06af: ldloc.s 6 (UnityEngine.Vector3)
L_06b1: ldfld System.Single z
L_06b6: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06bb: stloc.s 26 (BattleTech.FloatieMessage)
L_06bd: ldarg.0
L_06be: call BattleTech.AttackDirector get_Director()
L_06c3: callvirt BattleTech.CombatGameState get_Combat()
L_06c8: callvirt MessageCenter get_MessageCenter()
L_06cd: ldloc.s 26 (BattleTech.FloatieMessage)
L_06cf: callvirt Void PublishMessage(MessageCenterMessage)
L_06d4: br Label22
L_06d9: Label21
L_06d9: ldloc.0
L_06da: ldflda BattleTech.WeaponHitInfo hitInfo
L_06df: ldfld System.String attackerId
L_06e4: ldloc.s 11 (BattleTech.ICombatant)
L_06e6: callvirt System.String get_GUID()
L_06eb: ldstr "{0}"
L_06f0: ldc.i4.1
L_06f1: newarr System.Object
L_06f6: dup
L_06f7: ldc.i4.0
L_06f8: ldc.r4 1
L_06fd: ldloc.s 8 (System.Single)
L_06ff: call Single Max(Single, Single)
L_0704: conv.i4
L_0705: box System.Int32
L_070a: stelem.ref
L_070b: newobj Void .ctor(String, Object[])
L_0710: ldarg.0
L_0711: call BattleTech.AttackDirector get_Director()
L_0716: callvirt BattleTech.CombatGameState get_Combat()
L_071b: callvirt BattleTech.CombatGameConstants get_Constants()
L_0720: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0725: ldfld System.Single floatieSizeMedium
L_072a: ldc.i4.7
L_072b: ldloc.s 6 (UnityEngine.Vector3)
L_072d: ldfld System.Single x
L_0732: ldloc.s 6 (UnityEngine.Vector3)
L_0734: ldfld System.Single y
L_0739: ldloc.s 6 (UnityEngine.Vector3)
L_073b: ldfld System.Single z
L_0740: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0745: stloc.s 27 (BattleTech.FloatieMessage)
L_0747: ldarg.0
L_0748: call BattleTech.AttackDirector get_Director()
L_074d: callvirt BattleTech.CombatGameState get_Combat()
L_0752: callvirt MessageCenter get_MessageCenter()
L_0757: ldloc.s 27 (BattleTech.FloatieMessage)
L_0759: callvirt Void PublishMessage(MessageCenterMessage)
L_075e: Label7
L_075e: Label10
L_075e: Label11
L_075e: Label18
L_075e: Label19
L_075e: Label22
L_075e: ldloc.s 4 (BattleTech.Weapon)
L_0760: callvirt BattleTech.WeaponType get_Type()
L_0765: ldc.i4.3
L_0766: beq Label23
L_076b: ldloc.s 4 (BattleTech.Weapon)
L_076d: callvirt BattleTech.WeaponType get_Type()
L_0772: ldc.i4.7
L_0773: beq Label24
L_0778: call BattleTech.CameraControl get_Instance()
L_077d: ldloc.s 8 (System.Single)
L_077f: ldarg.0
L_0780: call BattleTech.AttackDirector get_Director()
L_0785: callvirt BattleTech.CombatGameState get_Combat()
L_078a: callvirt BattleTech.CombatGameConstants get_Constants()
L_078f: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0794: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_0799: mul
L_079a: ldarg.0
L_079b: call BattleTech.AttackDirector get_Director()
L_07a0: callvirt BattleTech.CombatGameState get_Combat()
L_07a5: callvirt BattleTech.CombatGameConstants get_Constants()
L_07aa: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07af: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07b4: add
L_07b5: ldc.r4 1
L_07ba: ldloc.s 6 (UnityEngine.Vector3)
L_07bc: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07c1: Label5
L_07c1: Label23
L_07c1: Label24
L_07c1: ldloc.s 13 (System.Boolean)
L_07c3: brtrue Label25
L_07c8: ldarg.0
L_07c9: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07ce: ldloc.0
L_07cf: callvirt Void StoreMessage(MessageCenterMessage)
L_07d4: br Label34
L_07d9: Label25
L_07d9: ldsfld HBS.Logging.ILog logger
L_07de: callvirt Boolean get_IsLogEnabled()
L_07e3: brfalse Label26
L_07e8: ldsfld HBS.Logging.ILog logger
L_07ed: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_07f2: ldc.i4.4
L_07f3: newarr System.Object
L_07f8: dup
L_07f9: ldc.i4.0
L_07fa: ldarg.0
L_07fb: ldfld System.Int32 id
L_0800: box System.Int32
L_0805: stelem.ref
L_0806: dup
L_0807: ldc.i4.1
L_0808: ldloc.1
L_0809: box System.Int32
L_080e: stelem.ref
L_080f: dup
L_0810: ldc.i4.2
L_0811: ldloc.2
L_0812: box System.Int32
L_0817: stelem.ref
L_0818: dup
L_0819: ldc.i4.3
L_081a: ldloc.3
L_081b: box System.Int32
L_0820: stelem.ref
L_0821: call System.String Format(System.String, System.Object[])
L_0826: callvirt Void Log(System.Object)
L_082b: ldsfld HBS.Logging.ILog logger
L_0830: callvirt Boolean get_IsDebugEnabled()
L_0835: brfalse Label27
L_083a: ldsfld HBS.Logging.ILog logger
L_083f: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0844: ldloc.s 4 (BattleTech.Weapon)
L_0846: callvirt System.String get_Name()
L_084b: ldarg.0
L_084c: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0851: constrained. BattleTech.MeleeAttackType
L_0857: callvirt System.String ToString()
L_085c: ldloca.s 5 (System.Int32)
L_085e: call System.String ToString()
L_0863: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0868: callvirt Void LogDebug(System.Object)
L_086d: Label26
L_086d: Label27
L_086d: ldloc.s 14 (System.Boolean)
L_086f: brfalse Label28
L_0874: ldarg.0
L_0875: ldarg.0
L_0876: ldfld System.Single cumulativeDamage
L_087b: ldloc.s 8 (System.Single)
L_087d: add
L_087e: stfld System.Single cumulativeDamage
L_0883: ldarg.0
L_0884: ldfld BattleTech.ICombatant chosenTarget
L_0889: ldloc.0
L_088a: ldfld BattleTech.WeaponHitInfo hitInfo
L_088f: ldloc.s 5 (System.Int32)
L_0891: ldloc.s 4 (BattleTech.Weapon)
L_0893: ldloc.s 8 (System.Single)
L_0895: ldloc.3
L_0896: ldc.i4.s 12
L_0898: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_089d: ldarg.0
L_089e: ldfld BattleTech.ICombatant chosenTarget
L_08a3: ldarg.0
L_08a4: ldfld BattleTech.AbstractActor attacker
L_08a9: callvirt System.String get_GUID()
L_08ae: callvirt Void HandleDeath(System.String)
L_08b3: br Label29
L_08b8: Label28
L_08b8: ldloc.s 10 (System.Boolean)
L_08ba: brfalse Label30
L_08bf: ldloc.s 11 (BattleTech.ICombatant)
L_08c1: brfalse Label31
L_08c6: ldloc.s 7 (System.Single)
L_08c8: ldloc.s 9 (System.Single)
L_08ca: mul
L_08cb: stloc.s 8 (System.Single)
L_08cd: ldloc.s 11 (BattleTech.ICombatant)
L_08cf: isinst BattleTech.AbstractActor
L_08d4: stloc.s 28 (BattleTech.AbstractActor)
L_08d6: ldloc.s 28 (BattleTech.AbstractActor)
L_08d8: brfalse Label32
L_08dd: ldarg.0
L_08de: ldfld BattleTech.AbstractActor attacker
L_08e3: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_08e8: ldloc.s 28 (BattleTech.AbstractActor)
L_08ea: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_08ef: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_08f1: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_08f3: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_08f8: stloc.s 29 (BattleTech.LineOfFireLevel)
L_08fa: ldloc.s 28 (BattleTech.AbstractActor)
L_08fc: ldloc.s 8 (System.Single)
L_08fe: ldloc.s 4 (BattleTech.Weapon)
L_0900: callvirt BattleTech.WeaponCategory get_Category()
L_0905: ldloc.s 28 (BattleTech.AbstractActor)
L_0907: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_090c: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_090e: ldc.i4.1
L_090f: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0914: stloc.s 8 (System.Single)
L_0916: ldloc.s 28 (BattleTech.AbstractActor)
L_0918: ldloc.s 8 (System.Single)
L_091a: ldloc.s 4 (BattleTech.Weapon)
L_091c: callvirt BattleTech.WeaponCategory get_Category()
L_0921: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0926: stloc.s 8 (System.Single)
L_0928: Label32
L_0928: ldloc.s 11 (BattleTech.ICombatant)
L_092a: ldloc.0
L_092b: ldfld BattleTech.WeaponHitInfo hitInfo
L_0930: ldloc.0
L_0931: ldflda BattleTech.WeaponHitInfo hitInfo
L_0936: ldloc.3
L_0937: call Int32 ShotHitLocation(Int32)
L_093c: ldloc.s 4 (BattleTech.Weapon)
L_093e: ldloc.s 8 (System.Single)
L_0940: ldloc.3
L_0941: ldc.i4.s 12
L_0943: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0948: ldloc.s 11 (BattleTech.ICombatant)
L_094a: ldarg.0
L_094b: ldfld BattleTech.AbstractActor attacker
L_0950: callvirt System.String get_GUID()
L_0955: callvirt Void HandleDeath(System.String)
L_095a: Label29
L_095a: Label30
L_095a: Label31
L_095a: ldarg.0
L_095b: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0960: ldloc.0
L_0961: callvirt Void MessageComplete(MessageCenterMessage)
L_0966: Label33
L_0966: Label34
L_0966: Label0
L_0966: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_Combat(BattleTech.CombatGameState)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: newobj Void .ctor(CombatGameState)
L_000e: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0013: ldarg.0
L_0014: ldarg.0
L_0015: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_001a: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0025: ldnull
L_0026: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_002b: brfalse Label1
L_0030: ldsfld HBS.Logging.ILog uiLogger
L_0035: ldstr "Couldn't find Selection Handler."
L_003a: callvirt Void LogWarning(System.Object)
L_003f: br Label2
L_0044: Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_004a: ldarg.1
L_004b: ldarg.0
L_004c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0051: Label2
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: ldc.i4.1
L_0054: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_0059: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_005e: ldarg.0
L_005f: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0064: ldnull
L_0065: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_006a: brfalse Label3
L_006f: ldsfld HBS.Logging.ILog uiLogger
L_0074: ldstr "Couldn't find MechTray under the CombatHUD."
L_0079: callvirt Void LogWarning(System.Object)
L_007e: br Label4
L_0083: Label3
L_0083: ldarg.0
L_0084: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0089: ldarg.1
L_008a: callvirt MessageCenter get_MessageCenter()
L_008f: ldarg.0
L_0090: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_0095: Label4
L_0095: ldarg.0
L_0096: ldarg.0
L_0097: ldc.i4.1
L_0098: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_009d: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00a2: ldarg.0
L_00a3: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00a8: ldnull
L_00a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ae: brfalse Label5
L_00b3: ldsfld HBS.Logging.ILog uiLogger
L_00b8: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00bd: callvirt Void LogWarning(System.Object)
L_00c2: br Label6
L_00c7: Label5
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00cd: ldarg.1
L_00ce: ldarg.0
L_00cf: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00d4: ldarg.0
L_00d5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00da: ldarg.1
L_00db: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00e0: callvirt Void RefreshTeam(BattleTech.Team)
L_00e5: Label6
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldc.i4.1
L_00e8: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00ed: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_00f2: ldarg.0
L_00f3: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_00f8: ldnull
L_00f9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label7
L_0103: ldsfld HBS.Logging.ILog uiLogger
L_0108: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_010d: callvirt Void LogWarning(System.Object)
L_0112: br Label8
L_0117: Label7
L_0117: ldarg.0
L_0118: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011d: ldnull
L_011e: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0123: ldarg.0
L_0124: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0129: ldarg.1
L_012a: ldarg.0
L_012b: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0130: Label8
L_0130: ldarg.0
L_0131: call BattleTech.UI.UIManager get_Instance()
L_0136: ldstr ""
L_013b: ldc.i4.1
L_013c: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0141: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0146: ldarg.0
L_0147: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_014c: ldnull
L_014d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0152: brfalse Label9
L_0157: ldsfld HBS.Logging.ILog uiLogger
L_015c: ldstr "Error creating PhaseTrack!"
L_0161: callvirt Void LogWarning(System.Object)
L_0166: br Label10
L_016b: Label9
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0171: ldarg.1
L_0172: ldarg.0
L_0173: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0178: Label10
L_0178: ldarg.0
L_0179: call BattleTech.UI.UIManager get_Instance()
L_017e: ldstr ""
L_0183: ldc.i4.1
L_0184: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_0189: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_018e: ldarg.0
L_018f: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0194: ldnull
L_0195: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_019a: brfalse Label11
L_019f: ldsfld HBS.Logging.ILog uiLogger
L_01a4: ldstr "Error creating Turn Event Notification!"
L_01a9: callvirt Void LogError(System.Object)
L_01ae: br Label12
L_01b3: Label11
L_01b3: ldarg.0
L_01b4: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b9: ldarg.1
L_01ba: ldarg.0
L_01bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01c0: Label12
L_01c0: ldarg.1
L_01c1: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01c6: callvirt Boolean IsNetworkGameActive()
L_01cb: brfalse Label13
L_01d0: ldarg.0
L_01d1: call BattleTech.UI.UIManager get_Instance()
L_01d6: ldstr ""
L_01db: ldc.i4.1
L_01dc: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01e1: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01e6: ldarg.0
L_01e7: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01ec: ldnull
L_01ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f2: brfalse Label14
L_01f7: ldsfld HBS.Logging.ILog uiLogger
L_01fc: ldstr "Error creating multiplayer UI!"
L_0201: callvirt Void LogError(System.Object)
L_0206: br Label15
L_020b: Label14
L_020b: ldarg.0
L_020c: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0211: ldarg.0
L_0212: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0217: Label13
L_0217: Label15
L_0217: ldarg.0
L_0218: call BattleTech.UI.UIManager get_Instance()
L_021d: ldstr ""
L_0222: ldc.i4.1
L_0223: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0228: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0233: ldnull
L_0234: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0239: brfalse Label16
L_023e: ldsfld HBS.Logging.ILog uiLogger
L_0243: ldstr "Error creating Targeting Computer!"
L_0248: callvirt Void LogError(System.Object)
L_024d: br Label17
L_0252: Label16
L_0252: ldarg.0
L_0253: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0258: ldarg.0
L_0259: callvirt Void Init(BattleTech.UI.CombatHUD)
L_025e: Label17
L_025e: ldarg.0
L_025f: call BattleTech.UI.UIManager get_Instance()
L_0264: ldstr ""
L_0269: ldc.i4.1
L_026a: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_026f: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_027a: ldnull
L_027b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0280: brfalse Label18
L_0285: ldsfld HBS.Logging.ILog uiLogger
L_028a: ldstr "Error creating Called Shot Popup!"
L_028f: callvirt Void LogError(System.Object)
L_0294: br Label19
L_0299: Label18
L_0299: ldarg.0
L_029a: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029f: ldarg.0
L_02a0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02a5: Label19
L_02a5: ldarg.0
L_02a6: call BattleTech.UI.UIManager get_Instance()
L_02ab: ldstr ""
L_02b0: ldc.i4.1
L_02b1: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02b6: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02c1: ldnull
L_02c2: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02c7: brfalse Label20
L_02cc: ldsfld HBS.Logging.ILog uiLogger
L_02d1: ldstr "Error creating Attack Mode Selector!"
L_02d6: callvirt Void LogError(System.Object)
L_02db: br Label21
L_02e0: Label20
L_02e0: ldarg.0
L_02e1: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e6: ldarg.1
L_02e7: ldarg.0
L_02e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02ed: ldarg.0
L_02ee: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f3: ldc.i4.0
L_02f4: callvirt Void set_Visible(Boolean)
L_02f9: Label21
L_02f9: ldarg.0
L_02fa: ldarg.0
L_02fb: call UnityEngine.GameObject get_gameObject()
L_0300: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0305: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_030a: ldarg.0
L_030b: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0310: ldnull
L_0311: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0316: brfalse Label22
L_031b: ldsfld HBS.Logging.ILog uiLogger
L_0320: ldstr "Error finding InWorldElementMgr!"
L_0325: callvirt Void LogError(System.Object)
L_032a: br Label23
L_032f: Label22
L_032f: ldarg.0
L_0330: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0335: ldarg.1
L_0336: ldarg.0
L_0337: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_033c: Label23
L_033c: ldarg.0
L_033d: call BattleTech.UI.UIManager get_Instance()
L_0342: ldstr ""
L_0347: ldc.i4.1
L_0348: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_034d: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0352: ldarg.0
L_0353: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0358: ldnull
L_0359: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035e: brfalse Label24
L_0363: ldsfld HBS.Logging.ILog uiLogger
L_0368: ldstr "Error creating Objective Status Notification!"
L_036d: callvirt Void LogError(System.Object)
L_0372: Label24
L_0372: ldarg.0
L_0373: call BattleTech.UI.UIManager get_Instance()
L_0378: ldstr ""
L_037d: ldc.i4.1
L_037e: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0383: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0388: ldarg.0
L_0389: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_038e: ldnull
L_038f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0394: brfalse Label25
L_0399: ldsfld HBS.Logging.ILog uiLogger
L_039e: ldstr "Error creating Objective List!"
L_03a3: callvirt Void LogError(System.Object)
L_03a8: br Label26
L_03ad: Label25
L_03ad: ldarg.0
L_03ae: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b3: ldarg.1
L_03b4: ldarg.0
L_03b5: ldarg.0
L_03b6: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03c0: Label26
L_03c0: call BattleTech.UI.UIManager get_Instance()
L_03c5: ldstr ""
L_03ca: ldc.i4.1
L_03cb: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03d0: stloc.0
L_03d1: ldloc.0
L_03d2: callvirt Void Init()
L_03d7: ldloc.0
L_03d8: ldc.i4.0
L_03d9: callvirt Void set_Visible(Boolean)
L_03de: ldarg.0
L_03df: call BattleTech.UI.UIManager get_Instance()
L_03e4: ldstr ""
L_03e9: ldc.i4.1
L_03ea: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_03ef: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_03f4: ldarg.0
L_03f5: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_03fa: ldnull
L_03fb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0400: brfalse Label27
L_0405: ldsfld HBS.Logging.ILog uiLogger
L_040a: ldstr "Error creating DialogSideStack!"
L_040f: callvirt Void LogError(System.Object)
L_0414: br Label28
L_0419: Label27
L_0419: ldarg.0
L_041a: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041f: ldarg.1
L_0420: ldarg.0
L_0421: ldloc.0
L_0422: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0427: Label28
L_0427: ldarg.0
L_0428: call BattleTech.UI.UIManager get_Instance()
L_042d: ldstr ""
L_0432: ldc.i4.1
L_0433: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0438: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_043d: ldarg.0
L_043e: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0443: ldnull
L_0444: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0449: brfalse Label29
L_044e: ldsfld HBS.Logging.ILog uiLogger
L_0453: ldstr "Error creating DialogWidget!"
L_0458: callvirt Void LogError(System.Object)
L_045d: br Label30
L_0462: Label29
L_0462: ldarg.0
L_0463: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0468: ldarg.1
L_0469: callvirt Void Init(BattleTech.CombatGameState)
L_046e: Label30
L_046e: ldarg.0
L_046f: call BattleTech.UI.UIManager get_Instance()
L_0474: ldstr ""
L_0479: ldc.i4.1
L_047a: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_047f: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0484: ldarg.0
L_0485: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_048a: ldnull
L_048b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0490: brfalse Label31
L_0495: ldsfld HBS.Logging.ILog uiLogger
L_049a: ldstr "Error creating RetreatEscMenu!"
L_049f: callvirt Void LogError(System.Object)
L_04a4: br Label32
L_04a9: Label31
L_04a9: ldarg.0
L_04aa: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04af: ldarg.1
L_04b0: ldarg.0
L_04b1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04b6: Label32
L_04b6: ldarg.0
L_04b7: call BattleTech.UI.UIManager get_Instance()
L_04bc: ldstr ""
L_04c1: ldc.i4.1
L_04c2: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04c7: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04cc: ldarg.0
L_04cd: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04d2: ldnull
L_04d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d8: brfalse Label33
L_04dd: ldsfld HBS.Logging.ILog uiLogger
L_04e2: ldstr "Error creating mission end screen!"
L_04e7: callvirt Void LogError(System.Object)
L_04ec: br Label34
L_04f1: Label33
L_04f1: ldarg.0
L_04f2: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f7: callvirt Void Init()
L_04fc: Label34
L_04fc: ldarg.0
L_04fd: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0502: ldnull
L_0503: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0508: brfalse Label35
L_050d: ldarg.0
L_050e: call BattleTech.UI.UIManager get_Instance()
L_0513: ldstr ""
L_0518: ldc.i4.1
L_0519: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_051e: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0523: ldarg.0
L_0524: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0529: ldnull
L_052a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_052f: brfalse Label36
L_0534: ldsfld HBS.Logging.ILog uiLogger
L_0539: ldstr "Error creating combat chat module"
L_053e: callvirt Void LogError(System.Object)
L_0543: br Label37
L_0548: Label36
L_0548: ldarg.0
L_0549: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054e: callvirt Void CombatInit()
L_0553: ldloc.0
L_0554: callvirt Void BumpUp()
L_0559: Label35
L_0559: Label37
L_0559: ldarg.0
L_055a: call BattleTech.UI.UIManager get_Instance()
L_055f: ldstr "DebugHUD"
L_0564: ldc.i4.1
L_0565: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_056a: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_056f: ldarg.0
L_0570: call BattleTech.UI.DebugHUD get_debugHUD()
L_0575: ldnull
L_0576: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_057b: brfalse Label38
L_0580: ldsfld HBS.Logging.ILog uiLogger
L_0585: ldstr "Error creating combat debug hud"
L_058a: callvirt Void LogError(System.Object)
L_058f: br Label39
L_0594: Label38
L_0594: ldarg.0
L_0595: call BattleTech.UI.DebugHUD get_debugHUD()
L_059a: ldarg.1
L_059b: ldarg.0
L_059c: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05a1: Label39
L_05a1: newobj Void .ctor()
L_05a6: stloc.1
L_05a7: ldarg.0
L_05a8: ldc.i4.1
L_05a9: ldloc.1
L_05aa: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05af: ldc.i4.0
L_05b0: stloc.2
L_05b1: br Label40
L_05b6: Label42
L_05b6: ldloc.1
L_05b7: ldloc.2
L_05b8: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05bd: callvirt Boolean get_IsInitialized()
L_05c2: brtrue Label41
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: ldarg.0
L_05cf: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05d4: Label41
L_05d4: ldloc.2
L_05d5: ldc.i4.1
L_05d6: add
L_05d7: stloc.2
L_05d8: Label40
L_05d8: ldloc.2
L_05d9: ldloc.1
L_05da: callvirt Int32 get_Count()
L_05df: blt Label42
L_05e4: ldarg.0
L_05e5: ldfld BattleTech.UI.UIManager uiManager
L_05ea: ldc.i4.1
L_05eb: callvirt Void SetUIRootInteractable(Boolean)
L_05f0: ldarg.1
L_05f1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_05f6: callvirt Int32 get_CurrentRound()
L_05fb: brfalse Label43
L_0600: ldarg.0
L_0601: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0606: ldarg.1
L_0607: callvirt BattleTech.TurnDirector get_TurnDirector()
L_060c: callvirt Int32 get_CurrentRound()
L_0611: callvirt Void SetRoundFromLoad(Int32)
L_0616: Label43
L_0616: ldarg.0
L_0617: ldc.i4.1
L_0618: call Void SubscribeToMessages(Boolean)
L_061d: ldarg.0
L_061e: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0623: ldarg.0
L_0624: ldarg 1
L_062a: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_062f: ret
DONE

### Patch BattleTech.AbstractActor, Void ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef, Int32)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 2: System.Boolean
L_0000: ldarg.1
L_0001: brfalse Label1
L_0006: ldarg.1
L_0007: ldfld BattleTech.EffectData stickyEffect
L_000c: brfalse Label2
L_0011: ldarg.1
L_0012: ldfld BattleTech.EffectData stickyEffect
L_0017: ldfld BattleTech.EffectType effectType
L_001c: brfalse Label3
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldarg.1
L_0025: ldfld BattleTech.EffectData stickyEffect
L_002a: ldnull
L_002b: ldarg.0
L_002c: call System.String get_GUID()
L_0031: ldarg.2
L_0032: ldarg.0
L_0033: ldc.i4.0
L_0034: call Boolean CreateEffect(BattleTech.EffectData, BattleTech.Ability, System.String, Int32, BattleTech.AbstractActor, Boolean)
L_0039: brfalse Label4
L_003e: ldarg.1
L_003f: ldfld BattleTech.EffectData stickyEffect
L_0044: ldfld BattleTech.EffectNature nature
L_0049: ldc.i4.1
L_004a: beq Label5
L_004f: ldc.i4.2
L_0050: br Label6
L_0055: Label5
L_0055: ldc.i4.1
L_0056: Label6
L_0056: stloc.1
L_0057: ldarg.0
L_0058: call BattleTech.CombatGameState get_Combat()
L_005d: callvirt MessageCenter get_MessageCenter()
L_0062: ldarg.0
L_0063: call System.String get_GUID()
L_0068: ldarg.0
L_0069: call System.String get_GUID()
L_006e: ldarg.1
L_006f: ldfld BattleTech.EffectData stickyEffect
L_0074: ldfld BattleTech.BaseDescriptionDef Description
L_0079: callvirt System.String get_Name()
L_007e: ldloc.1
L_007f: newobj Void .ctor(String, String, String, MessageNature)
L_0084: callvirt Void PublishMessage(MessageCenterMessage)
L_0089: ldc.i4.1
L_008a: stloc.0
L_008b: Label4
L_008b: ldsfld HBS.Logging.ILog logger
L_0090: callvirt Boolean get_IsDebugEnabled()
L_0095: brfalse Label7
L_009a: ldarg.1
L_009b: ldfld BattleTech.EffectData stickyEffect
L_00a0: ldfld BattleTech.StatisticEffectData statisticData
L_00a5: brfalse Label8
L_00aa: ldarg.1
L_00ab: ldfld BattleTech.EffectData stickyEffect
L_00b0: ldfld BattleTech.StatisticEffectData statisticData
L_00b5: ldfld System.String statName
L_00ba: ldstr "ReceivedInstabilityMultiplier"
L_00bf: call Boolean op_Equality(System.String, System.String)
L_00c4: br Label9
L_00c9: Label8
L_00c9: ldc.i4.0
L_00ca: Label9
L_00ca: stloc.2
L_00cb: ldsfld HBS.Logging.ILog logger
L_00d0: ldstr "[ApplyDesignMaskStickyEffect] Actor {0} applying {1}. Is InstabilityMultiplier? {2} Actually applied? {3}"
L_00d5: ldc.i4.4
L_00d6: newarr System.Object
L_00db: dup
L_00dc: ldc.i4.0
L_00dd: ldarg.0
L_00de: call System.String get_GUID()
L_00e3: stelem.ref
L_00e4: dup
L_00e5: ldc.i4.1
L_00e6: ldarg.1
L_00e7: ldfld BattleTech.EffectData stickyEffect
L_00ec: ldfld BattleTech.EffectType effectType
L_00f1: box BattleTech.EffectType
L_00f6: stelem.ref
L_00f7: dup
L_00f8: ldc.i4.2
L_00f9: ldloc.2
L_00fa: box System.Boolean
L_00ff: stelem.ref
L_0100: dup
L_0101: ldc.i4.3
L_0102: ldloc.0
L_0103: box System.Boolean
L_0108: stelem.ref
L_0109: call System.String Format(System.String, System.Object[])
L_010e: callvirt Void LogDebug(System.Object)
L_0113: Label1
L_0113: Label2
L_0113: Label3
L_0113: Label7
L_0113: ldarg.0
L_0114: ldarg 1
L_011a: ldarg 2
L_0120: call Void Postfix(BattleTech.AbstractActor, BattleTech.DesignMaskDef, Int32)
L_0125: ret
DONE

### Patch BattleTech.Rendering.Trees.RenderTrees, Void InitQuadTree()
L_0000: Local var 0: UnityEngine.TreeInstance[]
L_0000: Local var 1: UnityEngine.TreePrototype[]
L_0000: Local var 2: BattleTech.Rendering.Trees.TreeContainer
L_0000: Local var 3: UnityEngine.GameObject
L_0000: Local var 4: UnityEngine.GameObject
L_0000: Local var 5: UnityEngine.LODGroup[]
L_0000: Local var 6: System.Collections.Generic.List`1[[UnityEngine.LODGroup, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Collections.Generic.List`1[[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject
L_0000: Local var 11: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 12: System.Int32
L_0000: Local var 13: System.Int32
L_0000: Local var 14: UnityEngine.Vector3
L_0000: Local var 15: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 16: UnityEngine.Quaternion
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: UnityEngine.Matrix4x4
L_0000: Local var 19: System.Int32
L_0000: Local var 20: Gaia.StampParent
L_0000: Local var 21: UnityEngine.GameObject
L_0000: Local var 22: System.Int32
L_0000: Local var 23: UnityEngine.GameObject
L_0000: Local var 24: System.Int32
L_0000: Local var 25: UnityEngine.LODGroup
L_0000: Local var 26: System.String
L_0000: Local var 27: UnityEngine.Mesh
L_0000: Local var 28: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 29: UnityEngine.Matrix4x4
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: call UnityEngine.Terrain get_terrain()
L_0007: ldarg.0
L_0008: ldfld System.Int32 maxDepth
L_000d: ldarg.0
L_000e: ldflda UnityEngine.CullingGroup treeCullingGroup
L_0013: newobj Void .ctor(Terrain, Int32, CullingGroup&)
L_0018: stfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_001d: ldarg.0
L_001e: call UnityEngine.Terrain get_terrain()
L_0023: callvirt UnityEngine.TerrainData get_terrainData()
L_0028: callvirt UnityEngine.TreeInstance[] get_treeInstances()
L_002d: stloc.0
L_002e: ldarg.0
L_002f: call UnityEngine.Terrain get_terrain()
L_0034: callvirt UnityEngine.TerrainData get_terrainData()
L_0039: callvirt UnityEngine.TreePrototype[] get_treePrototypes()
L_003e: stloc.1
L_003f: ldloc.0
L_0040: ldlen
L_0041: brtrue Label1
L_0046: ldarg.0
L_0047: ldc.i4.0
L_0048: call Void set_enabled(Boolean)
L_004d: br Label45
L_0052: Label1
L_0052: ldarg.0
L_0053: ldloc.1
L_0054: ldloca.s 0 (UnityEngine.TreeInstance[])
L_0056: call Void SanatizeTrees(UnityEngine.TreePrototype[], UnityEngine.TreeInstance[] ByRef)
L_005b: ldarg.0
L_005c: ldloc.1
L_005d: ldlen
L_005e: conv.i4
L_005f: newarr BattleTech.Rendering.Trees.QuadTreePrototype
L_0064: stfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0069: ldc.i4.0
L_006a: stloc.s 7 (System.Int32)
L_006c: br Label2
L_0071: Label5
L_0071: ldloc.1
L_0072: ldloc.s 7 (System.Int32)
L_0074: ldelem.ref
L_0075: brfalse Label3
L_007a: ldloc.1
L_007b: ldloc.s 7 (System.Int32)
L_007d: ldelem.ref
L_007e: callvirt UnityEngine.GameObject get_prefab()
L_0083: ldnull
L_0084: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0089: brtrue Label4
L_008e: ldarg.0
L_008f: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0094: ldloc.s 7 (System.Int32)
L_0096: ldloc.1
L_0097: ldloc.s 7 (System.Int32)
L_0099: ldelem.ref
L_009a: newobj Void .ctor(TreePrototype)
L_009f: stelem.ref
L_00a0: Label3
L_00a0: Label4
L_00a0: ldloc.s 7 (System.Int32)
L_00a2: ldc.i4.1
L_00a3: add
L_00a4: stloc.s 7 (System.Int32)
L_00a6: Label2
L_00a6: ldloc.s 7 (System.Int32)
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_00ae: ldlen
L_00af: conv.i4
L_00b0: blt Label5
L_00b5: ldarg.0
L_00b6: call UnityEngine.Terrain get_terrain()
L_00bb: callvirt BattleTech.Rendering.Trees.TreeContainer GetComponent[TreeContainer]()
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: ldnull
L_00c3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c8: brfalse Label6
L_00cd: ldloc.2
L_00ce: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_00d3: stloc.s 8 (System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject])
L_00d5: ldc.i4.0
L_00d6: stloc.s 9 (System.Int32)
L_00d8: br Label7
L_00dd: Label10
L_00dd: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject])
L_00df: ldloc.s 9 (System.Int32)
L_00e1: callvirt TreeContainerObject get_Item(Int32)
L_00e6: stloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_00e8: ldarg.0
L_00e9: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_00ee: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_00f0: ldfld System.Int32 treeInstance
L_00f5: ldelem.ref
L_00f6: stloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_00fe: ldloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0100: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0102: ldfld UnityEngine.Matrix4x4 trs
L_0107: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0109: ldfld UnityEngine.Vector3 position
L_010e: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0110: ldfld UnityEngine.Quaternion rotation
L_0115: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0117: ldfld UnityEngine.Vector3 lossyScale
L_011c: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0121: ldc.i4.0
L_0122: stloc.s 12 (System.Int32)
L_0124: br Label8
L_0129: Label9
L_0129: ldarg.0
L_012a: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_012f: ldloc.s 12 (System.Int32)
L_0131: ldelem.ref
L_0132: ldloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0134: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0136: ldfld UnityEngine.Matrix4x4[] distantTrs
L_013b: ldloc.s 12 (System.Int32)
L_013d: ldelem UnityEngine.Matrix4x4
L_0142: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0144: ldfld UnityEngine.Vector3[] distantPosition
L_0149: ldloc.s 12 (System.Int32)
L_014b: ldelem UnityEngine.Vector3
L_0150: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0152: ldfld UnityEngine.Quaternion rotation
L_0157: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0159: ldfld UnityEngine.Vector3 lossyScale
L_015e: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0163: ldloc.s 12 (System.Int32)
L_0165: ldc.i4.1
L_0166: add
L_0167: stloc.s 12 (System.Int32)
L_0169: Label8
L_0169: ldloc.s 12 (System.Int32)
L_016b: ldc.i4.8
L_016c: blt Label9
L_0171: ldloc.s 9 (System.Int32)
L_0173: ldc.i4.1
L_0174: add
L_0175: stloc.s 9 (System.Int32)
L_0177: Label7
L_0177: ldloc.s 9 (System.Int32)
L_0179: ldloc.2
L_017a: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_017f: callvirt Int32 get_Count()
L_0184: blt Label10
L_0189: br Label11
L_018e: Label6
L_018e: ldc.i4.0
L_018f: stloc.s 13 (System.Int32)
L_0191: br Label12
L_0196: Label17
L_0196: ldloc.1
L_0197: ldloc.0
L_0198: ldloc.s 13 (System.Int32)
L_019a: ldelema UnityEngine.TreeInstance
L_019f: ldfld System.Int32 prototypeIndex
L_01a4: ldelem.ref
L_01a5: callvirt UnityEngine.GameObject get_prefab()
L_01aa: ldnull
L_01ab: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01b0: brtrue Label13
L_01b5: ldloc.0
L_01b6: ldloc.s 13 (System.Int32)
L_01b8: ldelema UnityEngine.TreeInstance
L_01bd: ldfld UnityEngine.Vector3 position
L_01c2: stloc.s 14 (UnityEngine.Vector3)
L_01c4: ldloca.s 14 (UnityEngine.Vector3)
L_01c6: ldloc.s 14 (UnityEngine.Vector3)
L_01c8: ldfld System.Single x
L_01cd: ldarg.0
L_01ce: call UnityEngine.Terrain get_terrain()
L_01d3: callvirt UnityEngine.TerrainData get_terrainData()
L_01d8: callvirt UnityEngine.Vector3 get_size()
L_01dd: ldfld System.Single x
L_01e2: mul
L_01e3: ldarg.0
L_01e4: call UnityEngine.Terrain get_terrain()
L_01e9: callvirt UnityEngine.Transform get_transform()
L_01ee: callvirt UnityEngine.Vector3 get_position()
L_01f3: ldfld System.Single x
L_01f8: add
L_01f9: stfld System.Single x
L_01fe: ldloca.s 14 (UnityEngine.Vector3)
L_0200: ldloc.s 14 (UnityEngine.Vector3)
L_0202: ldfld System.Single y
L_0207: ldarg.0
L_0208: call UnityEngine.Terrain get_terrain()
L_020d: callvirt UnityEngine.TerrainData get_terrainData()
L_0212: callvirt UnityEngine.Vector3 get_size()
L_0217: ldfld System.Single y
L_021c: mul
L_021d: ldarg.0
L_021e: call UnityEngine.Terrain get_terrain()
L_0223: callvirt UnityEngine.Transform get_transform()
L_0228: callvirt UnityEngine.Vector3 get_position()
L_022d: ldfld System.Single y
L_0232: add
L_0233: stfld System.Single y
L_0238: ldloca.s 14 (UnityEngine.Vector3)
L_023a: ldloc.s 14 (UnityEngine.Vector3)
L_023c: ldfld System.Single z
L_0241: ldarg.0
L_0242: call UnityEngine.Terrain get_terrain()
L_0247: callvirt UnityEngine.TerrainData get_terrainData()
L_024c: callvirt UnityEngine.Vector3 get_size()
L_0251: ldfld System.Single z
L_0256: mul
L_0257: ldarg.0
L_0258: call UnityEngine.Terrain get_terrain()
L_025d: callvirt UnityEngine.Transform get_transform()
L_0262: callvirt UnityEngine.Vector3 get_position()
L_0267: ldfld System.Single z
L_026c: add
L_026d: stfld System.Single z
L_0272: ldarg.0
L_0273: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0278: ldloc.0
L_0279: ldloc.s 13 (System.Int32)
L_027b: ldelema UnityEngine.TreeInstance
L_0280: ldfld System.Int32 prototypeIndex
L_0285: ldelem.ref
L_0286: stloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0288: ldc.r4 0
L_028d: ldloc.0
L_028e: ldloc.s 13 (System.Int32)
L_0290: ldelema UnityEngine.TreeInstance
L_0295: ldfld System.Single rotation
L_029a: ldc.r4 57.29578
L_029f: mul
L_02a0: ldc.r4 0
L_02a5: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_02aa: stloc.s 16 (UnityEngine.Quaternion)
L_02ac: ldloca.s 17 (UnityEngine.Vector3)
L_02ae: ldloc.0
L_02af: ldloc.s 13 (System.Int32)
L_02b1: ldelema UnityEngine.TreeInstance
L_02b6: ldfld System.Single widthScale
L_02bb: ldloc.0
L_02bc: ldloc.s 13 (System.Int32)
L_02be: ldelema UnityEngine.TreeInstance
L_02c3: ldfld System.Single heightScale
L_02c8: ldloc.0
L_02c9: ldloc.s 13 (System.Int32)
L_02cb: ldelema UnityEngine.TreeInstance
L_02d0: ldfld System.Single widthScale
L_02d5: call Void .ctor(Single, Single, Single)
L_02da: ldloc.s 14 (UnityEngine.Vector3)
L_02dc: ldloc.s 16 (UnityEngine.Quaternion)
L_02de: ldloc.s 17 (UnityEngine.Vector3)
L_02e0: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_02e5: stloc.s 18 (UnityEngine.Matrix4x4)
L_02e7: ldarg.0
L_02e8: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_02ed: ldloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_02ef: ldloc.s 18 (UnityEngine.Matrix4x4)
L_02f1: ldloc.s 14 (UnityEngine.Vector3)
L_02f3: ldloc.s 16 (UnityEngine.Quaternion)
L_02f5: ldloc.s 17 (UnityEngine.Vector3)
L_02f7: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_02fc: ldarg.0
L_02fd: call Boolean get_isUrban()
L_0302: brtrue Label14
L_0307: ldc.i4.0
L_0308: stloc.s 19 (System.Int32)
L_030a: br Label15
L_030f: Label16
L_030f: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_0314: ldloc.s 19 (System.Int32)
L_0316: ldelema UnityEngine.Matrix4x4
L_031b: ldloc.s 14 (UnityEngine.Vector3)
L_031d: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_0322: ldloc.s 16 (UnityEngine.Quaternion)
L_0324: ldloc.s 17 (UnityEngine.Vector3)
L_0326: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_032b: stloc.s 18 (UnityEngine.Matrix4x4)
L_032d: ldarg.0
L_032e: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_0333: ldloc.s 19 (System.Int32)
L_0335: ldelem.ref
L_0336: ldloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0338: ldloc.s 18 (UnityEngine.Matrix4x4)
L_033a: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_033f: ldloc.s 19 (System.Int32)
L_0341: ldelema UnityEngine.Matrix4x4
L_0346: ldloc.s 14 (UnityEngine.Vector3)
L_0348: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_034d: ldloc.s 16 (UnityEngine.Quaternion)
L_034f: ldloc.s 17 (UnityEngine.Vector3)
L_0351: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0356: ldloc.s 19 (System.Int32)
L_0358: ldc.i4.1
L_0359: add
L_035a: stloc.s 19 (System.Int32)
L_035c: Label15
L_035c: ldloc.s 19 (System.Int32)
L_035e: ldc.i4.8
L_035f: blt Label16
L_0364: Label13
L_0364: Label14
L_0364: ldloc.s 13 (System.Int32)
L_0366: ldc.i4.1
L_0367: add
L_0368: stloc.s 13 (System.Int32)
L_036a: Label12
L_036a: ldloc.s 13 (System.Int32)
L_036c: ldloc.0
L_036d: ldlen
L_036e: conv.i4
L_036f: blt Label17
L_0374: Label11
L_0374: ldnull
L_0375: stloc.3
L_0376: ldstr "Parent_Placed_Trees"
L_037b: call UnityEngine.GameObject Find(System.String)
L_0380: stloc.s 4 (UnityEngine.GameObject)
L_0382: ldarg.0
L_0383: ldfld System.Boolean captureGaia
L_0388: brfalse Label18
L_038d: call Gaia.StampParent FindObjectOfType[StampParent]()
L_0392: stloc.s 20 (Gaia.StampParent)
L_0394: ldloc.s 20 (Gaia.StampParent)
L_0396: ldnull
L_0397: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_039c: brfalse Label19
L_03a1: ldloc.s 20 (Gaia.StampParent)
L_03a3: callvirt UnityEngine.GameObject get_gameObject()
L_03a8: stloc.3
L_03a9: br Label20
L_03ae: Label19
L_03ae: ldstr "GAME"
L_03b3: call UnityEngine.GameObject Find(System.String)
L_03b8: stloc.s 21 (UnityEngine.GameObject)
L_03ba: ldc.i4.0
L_03bb: stloc.s 22 (System.Int32)
L_03bd: br Label21
L_03c2: Label24
L_03c2: ldloc.s 21 (UnityEngine.GameObject)
L_03c4: callvirt UnityEngine.Transform get_transform()
L_03c9: ldloc.s 22 (System.Int32)
L_03cb: callvirt UnityEngine.Transform GetChild(Int32)
L_03d0: callvirt UnityEngine.GameObject get_gameObject()
L_03d5: stloc.s 23 (UnityEngine.GameObject)
L_03d7: ldloc.s 23 (UnityEngine.GameObject)
L_03d9: callvirt System.String get_name()
L_03de: ldstr "Parent_Stamp_Deco"
L_03e3: call Boolean op_Equality(System.String, System.String)
L_03e8: brfalse Label22
L_03ed: ldloc.s 23 (UnityEngine.GameObject)
L_03ef: stloc.3
L_03f0: br Label23
L_03f5: Label22
L_03f5: ldloc.s 22 (System.Int32)
L_03f7: ldc.i4.1
L_03f8: add
L_03f9: stloc.s 22 (System.Int32)
L_03fb: Label21
L_03fb: ldloc.s 22 (System.Int32)
L_03fd: ldloc.s 21 (UnityEngine.GameObject)
L_03ff: callvirt UnityEngine.Transform get_transform()
L_0404: callvirt Int32 get_childCount()
L_0409: blt Label24
L_040e: Label18
L_040e: Label20
L_040e: Label23
L_040e: ldloc.3
L_040f: ldnull
L_0410: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0415: brtrue Label25
L_041a: ldloc.3
L_041b: callvirt Boolean get_activeInHierarchy()
L_0420: brtrue Label26
L_0425: Label25
L_0425: ldloc.s 4 (UnityEngine.GameObject)
L_0427: ldnull
L_0428: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_042d: brtrue Label27
L_0432: ldloc.s 4 (UnityEngine.GameObject)
L_0434: callvirt Boolean get_activeInHierarchy()
L_0439: brtrue Label28
L_043e: Label27
L_043e: br Label46
L_0443: Label26
L_0443: Label28
L_0443: ldc.i4.0
L_0444: newarr UnityEngine.LODGroup
L_0449: stloc.s 5 (UnityEngine.LODGroup[])
L_044b: newobj Void .ctor()
L_0450: stloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0452: ldloc.3
L_0453: ldnull
L_0454: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0459: brfalse Label29
L_045e: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0460: ldloc.3
L_0461: callvirt UnityEngine.LODGroup[] GetComponentsInChildren[LODGroup]()
L_0466: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.LODGroup])
L_046b: Label29
L_046b: ldloc.s 4 (UnityEngine.GameObject)
L_046d: ldnull
L_046e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0473: brfalse Label30
L_0478: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_047a: ldloc.s 4 (UnityEngine.GameObject)
L_047c: callvirt UnityEngine.LODGroup[] GetComponentsInChildren[LODGroup]()
L_0481: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.LODGroup])
L_0486: Label30
L_0486: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0488: callvirt UnityEngine.LODGroup[] ToArray()
L_048d: stloc.s 5 (UnityEngine.LODGroup[])
L_048f: ldc.i4.0
L_0490: stloc.s 24 (System.Int32)
L_0492: br Label31
L_0497: Label41
L_0497: ldloc.s 5 (UnityEngine.LODGroup[])
L_0499: ldloc.s 24 (System.Int32)
L_049b: ldelem.ref
L_049c: stloc.s 25 (UnityEngine.LODGroup)
L_049e: ldloc.s 25 (UnityEngine.LODGroup)
L_04a0: callvirt UnityEngine.GameObject get_gameObject()
L_04a5: callvirt System.String get_name()
L_04aa: stloc.s 26 (System.String)
L_04ac: ldloc.s 26 (System.String)
L_04ae: ldstr "Tree"
L_04b3: callvirt Boolean Contains(System.String)
L_04b8: brtrue Label32
L_04bd: ldloc.s 26 (System.String)
L_04bf: ldstr "Bush"
L_04c4: callvirt Boolean Contains(System.String)
L_04c9: brfalse Label33
L_04ce: Label32
L_04ce: ldloc.s 25 (UnityEngine.LODGroup)
L_04d0: callvirt UnityEngine.LOD[] GetLODs()
L_04d5: ldc.i4.0
L_04d6: ldelema UnityEngine.LOD
L_04db: ldfld UnityEngine.Renderer[] renderers
L_04e0: ldc.i4.0
L_04e1: ldelem.ref
L_04e2: callvirt UnityEngine.MeshFilter GetComponentInChildren[MeshFilter]()
L_04e7: callvirt UnityEngine.Mesh get_sharedMesh()
L_04ec: stloc.s 27 (UnityEngine.Mesh)
L_04ee: ldnull
L_04ef: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_04f1: ldc.i4.0
L_04f2: stloc.s 30 (System.Int32)
L_04f4: br Label34
L_04f9: Label39
L_04f9: ldarg.0
L_04fa: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_04ff: ldloc.s 30 (System.Int32)
L_0501: ldelem.ref
L_0502: brfalse Label35
L_0507: ldarg.0
L_0508: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_050d: ldloc.s 30 (System.Int32)
L_050f: ldelem.ref
L_0510: callvirt UnityEngine.Mesh[] get_meshes()
L_0515: brfalse Label36
L_051a: ldarg.0
L_051b: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0520: ldloc.s 30 (System.Int32)
L_0522: ldelem.ref
L_0523: callvirt UnityEngine.Mesh[] get_meshes()
L_0528: ldc.i4.0
L_0529: ldelem.ref
L_052a: ldloc.s 27 (UnityEngine.Mesh)
L_052c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0531: brfalse Label37
L_0536: ldarg.0
L_0537: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_053c: ldloc.s 30 (System.Int32)
L_053e: ldelem.ref
L_053f: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0541: br Label38
L_0546: Label35
L_0546: Label36
L_0546: Label37
L_0546: ldloc.s 30 (System.Int32)
L_0548: ldc.i4.1
L_0549: add
L_054a: stloc.s 30 (System.Int32)
L_054c: Label34
L_054c: ldloc.s 30 (System.Int32)
L_054e: ldarg.0
L_054f: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0554: ldlen
L_0555: conv.i4
L_0556: blt Label39
L_055b: Label38
L_055b: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_055d: brtrue Label40
L_0562: ldarg.0
L_0563: ldflda BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0568: ldarg.0
L_0569: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_056e: ldlen
L_056f: conv.i4
L_0570: ldc.i4.1
L_0571: add
L_0572: call Void Resize[QuadTreePrototype](BattleTech.Rendering.Trees.QuadTreePrototype[] ByRef, Int32)
L_0577: ldloc.s 25 (UnityEngine.LODGroup)
L_0579: newobj Void .ctor(LODGroup)
L_057e: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0580: ldarg.0
L_0581: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0586: ldarg.0
L_0587: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_058c: ldlen
L_058d: conv.i4
L_058e: ldc.i4.1
L_058f: sub
L_0590: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0592: stelem.ref
L_0593: Label40
L_0593: ldloc.s 25 (UnityEngine.LODGroup)
L_0595: callvirt UnityEngine.GameObject get_gameObject()
L_059a: callvirt UnityEngine.Transform get_transform()
L_059f: callvirt UnityEngine.Vector3 get_position()
L_05a4: ldloc.s 25 (UnityEngine.LODGroup)
L_05a6: callvirt UnityEngine.GameObject get_gameObject()
L_05ab: callvirt UnityEngine.Transform get_transform()
L_05b0: callvirt UnityEngine.Quaternion get_rotation()
L_05b5: ldloc.s 25 (UnityEngine.LODGroup)
L_05b7: callvirt UnityEngine.GameObject get_gameObject()
L_05bc: callvirt UnityEngine.Transform get_transform()
L_05c1: callvirt UnityEngine.Vector3 get_lossyScale()
L_05c6: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_05cb: stloc.s 29 (UnityEngine.Matrix4x4)
L_05cd: ldarg.0
L_05ce: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_05d3: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_05d5: ldloc.s 29 (UnityEngine.Matrix4x4)
L_05d7: ldloc.s 25 (UnityEngine.LODGroup)
L_05d9: callvirt UnityEngine.GameObject get_gameObject()
L_05de: callvirt UnityEngine.Transform get_transform()
L_05e3: callvirt UnityEngine.Vector3 get_position()
L_05e8: ldloc.s 25 (UnityEngine.LODGroup)
L_05ea: callvirt UnityEngine.GameObject get_gameObject()
L_05ef: callvirt UnityEngine.Transform get_transform()
L_05f4: callvirt UnityEngine.Quaternion get_rotation()
L_05f9: ldloc.s 25 (UnityEngine.LODGroup)
L_05fb: callvirt UnityEngine.GameObject get_gameObject()
L_0600: callvirt UnityEngine.Transform get_transform()
L_0605: callvirt UnityEngine.Vector3 get_lossyScale()
L_060a: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_060f: ldloc.s 25 (UnityEngine.LODGroup)
L_0611: callvirt UnityEngine.Transform get_transform()
L_0616: callvirt UnityEngine.Transform get_parent()
L_061b: callvirt UnityEngine.GameObject get_gameObject()
L_0620: ldc.i4.0
L_0621: callvirt Void SetActive(Boolean)
L_0626: Label33
L_0626: ldloc.s 24 (System.Int32)
L_0628: ldc.i4.1
L_0629: add
L_062a: stloc.s 24 (System.Int32)
L_062c: Label31
L_062c: ldloc.s 24 (System.Int32)
L_062e: ldloc.s 5 (UnityEngine.LODGroup[])
L_0630: ldlen
L_0631: conv.i4
L_0632: blt Label41
L_0637: newobj Void .ctor()
L_063c: stsfld System.Collections.Generic.Dictionary`2[BattleTech.Rendering.Trees.QuadTreePrototype,System.Collections.Generic.List`1[UnityEngine.Matrix4x4]] masterTreeList
L_0641: ldloc.s 4 (UnityEngine.GameObject)
L_0643: ldnull
L_0644: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0649: brfalse Label42
L_064e: ldloc.s 4 (UnityEngine.GameObject)
L_0650: ldc.i4.0
L_0651: callvirt Void SetActive(Boolean)
L_0656: Label42
L_0656: ldarg.0
L_0657: call Void RebakeImposters()
L_065c: ldarg.0
L_065d: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_0662: callvirt Void InitializeImposters()
L_0667: ldc.i4.0
L_0668: stloc.s 31 (System.Int32)
L_066a: br Label43
L_066f: Label44
L_066f: ldarg.0
L_0670: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_0675: ldloc.s 31 (System.Int32)
L_0677: ldelem.ref
L_0678: callvirt Void SetupImposters()
L_067d: ldloc.s 31 (System.Int32)
L_067f: ldc.i4.1
L_0680: add
L_0681: stloc.s 31 (System.Int32)
L_0683: Label43
L_0683: ldloc.s 31 (System.Int32)
L_0685: ldarg.0
L_0686: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_068b: ldlen
L_068c: conv.i4
L_068d: blt Label44
L_0692: call UnityEngine.Transform get_ImposterRoot()
L_0697: callvirt UnityEngine.GameObject get_gameObject()
L_069c: call Void Combine(UnityEngine.GameObject)
L_06a1: Label45
L_06a1: Label46
L_06a1: ldarg.0
L_06a2: call Void Postfix(BattleTech.Rendering.Trees.RenderTrees)
L_06a7: ret
DONE

### Patch MissileEffect, Void Fire(BattleTech.WeaponHitInfo, Int32, Int32, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0009: ldarg.0
L_000a: ldarg.s 4
L_000c: stfld System.Boolean isIndirect
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld UnityEngine.Transform startingTransform
L_0018: callvirt UnityEngine.Vector3 get_position()
L_001d: stfld UnityEngine.Vector3 preFireEndPos
L_0022: ldarg.0
L_0023: ldfld MissileLauncherEffect parentLauncher
L_0028: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_002d: callvirt Int32 get_Count()
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: ldfld System.Boolean isIndirect
L_003d: brfalse Label2
L_0042: ldarg.0
L_0043: ldfld MissileLauncherEffect parentLauncher
L_0048: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_004d: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0052: ldfld System.Int32 IndirectFireMaxPoints
L_0057: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_005c: ldfld System.Single IndirectFireMinArcHeight
L_0061: ldarg.0
L_0062: ldfld UnityEngine.Vector3 preFireEndPos
L_0067: ldarg.0
L_0068: ldfld UnityEngine.Vector3 endPos
L_006d: call BattleTech.GameInstance get_BattleTechGame()
L_0072: callvirt BattleTech.CombatGameState get_Combat()
L_0077: callvirt BattleTech.MapMetaData get_MapMetaData()
L_007c: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0081: ldfld System.Single IndirectFireBuffer
L_0086: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_008b: ldfld System.Single IndirectFireMaxArcHeight
L_0090: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0095: ldfld System.Int32 IndirectFireCheckFreq
L_009a: ldc.i4.0
L_009b: call UnityEngine.Vector3[] GetPointsForArcDodgeBuildings(Int32, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.MapMetaData, Single, Single, Int32, Boolean)
L_00a0: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.Vector3])
L_00a5: Label1
L_00a5: Label2
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.Weapon weapon
L_00ab: ldfld BattleTech.AbstractActor parent
L_00b0: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b5: ldnull
L_00b6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00bb: brfalse Label3
L_00c0: ldarg.0
L_00c1: ldfld DopplerEffect doppler
L_00c6: ldnull
L_00c7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00cc: brfalse Label4
L_00d1: ldarg.0
L_00d2: ldarg.0
L_00d3: call UnityEngine.GameObject get_gameObject()
L_00d8: callvirt DopplerEffect AddComponent[DopplerEffect]()
L_00dd: stfld DopplerEffect doppler
L_00e2: Label4
L_00e2: ldarg.0
L_00e3: ldfld DopplerEffect doppler
L_00e8: ldc.i4.1
L_00e9: callvirt Void set_enabled(Boolean)
L_00ee: ldarg.0
L_00ef: ldfld DopplerEffect doppler
L_00f4: ldarg.0
L_00f5: ldfld AkGameObj projectileAudioObject
L_00fa: call BattleTech.CameraControl get_Instance()
L_00ff: callvirt UnityEngine.Camera GetMainCamera()
L_0104: callvirt UnityEngine.GameObject get_gameObject()
L_0109: callvirt Void Init(AkGameObj, UnityEngine.GameObject)
L_010e: Label3
L_010e: ldarg.0
L_010f: callvirt Void PlayPreFire()
L_0114: ldarg.0
L_0115: ldarga 1
L_011b: ldarg 2
L_0121: ldarg 3
L_0127: ldarg 4
L_012d: call Void Postfix(MissileEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, Boolean)
L_0132: ret
DONE

### Patch WeaponEffect, Void PublishWeaponCompleteMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean subEffect
L_0011: brtrue Label1
L_0016: ldarg.0
L_0017: call Boolean get_FiringComplete()
L_001c: brtrue Label2
L_0021: ldarg.0
L_0022: ldflda BattleTech.WeaponHitInfo hitInfo
L_0027: ldfld System.Int32 stackItemUID
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 attackSequenceId
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackGroupIndex
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackWeaponIndex
L_004d: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_0052: stloc.0
L_0053: ldarg.0
L_0054: ldfld BattleTech.CombatGameState Combat
L_0059: callvirt MessageCenter get_MessageCenter()
L_005e: ldloc.0
L_005f: callvirt Void PublishMessage(MessageCenterMessage)
L_0064: Label1
L_0064: Label2
L_0064: ldarg.0
L_0065: ldc.i4.1
L_0066: call Void set_FiringComplete(Boolean)
L_006b: Label0
L_006b: ldarg.0
L_006c: call Void Postfix(WeaponEffect)
L_0071: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnActorSelected(BattleTech.AbstractActor)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.AbstractActor selectedUnit
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: call Void updateHUDElements(BattleTech.AbstractActor)
L_000e: ldarg.0
L_000f: ldarg 1
L_0015: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.AbstractActor)
L_001a: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void RefreshDisplayedWeapon(BattleTech.ICombatant)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.String
L_0000: ldarg.0
L_0001: ldfld BattleTech.Weapon displayedWeapon
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: ldfld BattleTech.UI.CombatHUD HUD
L_0011: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0016: brtrue Label2
L_001b: br Label19
L_0020: Label2
L_0020: ldarg.0
L_0021: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0026: ldc.i4.1
L_0027: bne.un Label3
L_002c: ldarg.0
L_002d: call Void UpdateMeleeWeapon()
L_0032: br Label4
L_0037: Label3
L_0037: ldarg.0
L_0038: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_003d: ldc.i4.2
L_003e: bne.un Label5
L_0043: ldarg.0
L_0044: call Void UpdateDFAWeapon()
L_0049: br Label6
L_004e: Label5
L_004e: ldarg.0
L_004f: ldfld BattleTech.Weapon displayedWeapon
L_0054: callvirt Boolean get_HasAmmo()
L_0059: brtrue Label7
L_005e: ldarg.0
L_005f: ldfld BattleTech.Weapon displayedWeapon
L_0064: callvirt Void DisableWeapon()
L_0069: Label7
L_0069: ldarg.0
L_006a: ldfld BattleTech.UI.TMProWrapper.LocalizableText WeaponText
L_006f: ldarg.0
L_0070: ldfld BattleTech.Weapon displayedWeapon
L_0075: callvirt Localize.Text get_UIName()
L_007a: callvirt Void SetText(Localize.Text)
L_007f: ldarg.0
L_0080: ldfld BattleTech.UI.TMProWrapper.LocalizableText AmmoText
L_0085: ldarg.0
L_0086: ldfld BattleTech.Weapon displayedWeapon
L_008b: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0090: callvirt Boolean get_Is_NotSet()
L_0095: brtrue Label8
L_009a: ldarg.0
L_009b: ldfld BattleTech.Weapon displayedWeapon
L_00a0: callvirt Int32 get_CurrentAmmo()
L_00a5: stloc.0
L_00a6: ldloca.s 0 (System.Int32)
L_00a8: call System.String ToString()
L_00ad: br Label9
L_00b2: Label8
L_00b2: ldstr "--"
L_00b7: Label9
L_00b7: call System.Object[] Empty[Object]()
L_00bc: callvirt Void SetText(System.String, System.Object[])
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_00c7: ldarg.0
L_00c8: ldfld BattleTech.Weapon displayedWeapon
L_00cd: callvirt Boolean get_IsEnabled()
L_00d2: brfalse Label10
L_00d7: ldarg.0
L_00d8: ldfld BattleTech.Weapon displayedWeapon
L_00dd: callvirt Boolean get_IsDisabled()
L_00e2: ldc.i4.0
L_00e3: ceq
L_00e5: br Label11
L_00ea: Label10
L_00ea: ldc.i4.0
L_00eb: Label11
L_00eb: stfld System.Boolean isChecked
L_00f0: ldarg.0
L_00f1: ldfld BattleTech.UI.CombatHUD HUD
L_00f6: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00fb: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0100: callvirt BattleTech.IStackSequence get_Orders()
L_0105: brtrue Label12
L_010a: ldarg.0
L_010b: ldfld BattleTech.Weapon displayedWeapon
L_0110: callvirt Single DamagePerShotAdjusted()
L_0115: conv.i4
L_0116: stloc.1
L_0117: ldarg.0
L_0118: ldfld BattleTech.Weapon displayedWeapon
L_011d: callvirt Int32 get_DamageVariance()
L_0122: stloc.2
L_0123: ldloc.2
L_0124: ldc.i4.0
L_0125: bgt Label13
L_012a: ldstr "{0}"
L_012f: ldloc.1
L_0130: box System.Int32
L_0135: call System.String Format(System.String, System.Object)
L_013a: br Label14
L_013f: Label13
L_013f: ldstr "{0}-{1}"
L_0144: ldloc.1
L_0145: ldloc.2
L_0146: sub
L_0147: box System.Int32
L_014c: ldloc.1
L_014d: ldloc.2
L_014e: add
L_014f: box System.Int32
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: Label14
L_0159: stloc.3
L_015a: ldarg.0
L_015b: ldfld BattleTech.Weapon displayedWeapon
L_0160: callvirt Single get_HeatDamagePerShot()
L_0165: ldc.r4 0.01
L_016a: ble.un Label15
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.CombatHUD HUD
L_0175: callvirt BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_017a: ldfld System.String HeatFormatString
L_017f: ldloc.3
L_0180: ldarg.0
L_0181: ldfld BattleTech.Weapon displayedWeapon
L_0186: callvirt Single get_HeatDamagePerShot()
L_018b: call Int32 RoundToInt(Single)
L_0190: box System.Int32
L_0195: call System.String Format(System.String, System.Object, System.Object)
L_019a: stloc.3
L_019b: Label15
L_019b: ldarg.0
L_019c: ldfld BattleTech.Weapon displayedWeapon
L_01a1: callvirt Int32 get_ShotsWhenFired()
L_01a6: ldc.i4.1
L_01a7: ble Label16
L_01ac: ldstr "{0} (x{1})"
L_01b1: ldloc.3
L_01b2: ldarg.0
L_01b3: ldfld BattleTech.Weapon displayedWeapon
L_01b8: callvirt Int32 get_ShotsWhenFired()
L_01bd: box System.Int32
L_01c2: call System.String Format(System.String, System.Object, System.Object)
L_01c7: stloc.3
L_01c8: Label16
L_01c8: ldarg.0
L_01c9: ldfld BattleTech.UI.TMProWrapper.LocalizableText DamageText
L_01ce: ldloc.3
L_01cf: call System.Object[] Empty[Object]()
L_01d4: callvirt Void SetText(System.String, System.Object[])
L_01d9: Label4
L_01d9: Label6
L_01d9: Label12
L_01d9: ldarg.0
L_01da: ldfld BattleTech.UI.CombatHUD HUD
L_01df: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01e4: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01e9: callvirt BattleTech.IStackSequence get_Orders()
L_01ee: brtrue Label17
L_01f3: ldarg.1
L_01f4: brfalse Label18
L_01f9: ldarg.0
L_01fa: ldarg.1
L_01fb: call Void SetHitChance(BattleTech.ICombatant)
L_0200: br Label20
L_0205: Label18
L_0205: ldarg.0
L_0206: call Void SetHitChance()
L_020b: Label1
L_020b: Label17
L_020b: Label19
L_020b: Label20
L_020b: ldarg.0
L_020c: call Void Postfix(BattleTech.UI.CombatHUDWeaponSlot)
L_0211: ret
DONE

### Patch BattleTech.MechComponent, Localize.Text get_UIName()
L_0000: Local var 0: Localize.Text
L_0000: ldnull
L_0001: stloc 0 (Localize.Text)
L_0002: ldarg.0
L_0003: call BattleTech.MechComponentDef get_componentDef()
L_0008: callvirt BattleTech.DescriptionDef get_Description()
L_000d: callvirt System.String get_UIName()
L_0012: call Boolean IsNullOrEmpty(System.String)
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: call BattleTech.MechComponentDef get_componentDef()
L_0022: callvirt BattleTech.DescriptionDef get_Description()
L_0027: callvirt System.String get_UIName()
L_002c: br Label2
L_0031: Label1
L_0031: ldarg.0
L_0032: call System.String get_Name()
L_0037: Label2
L_0037: call System.Object[] Empty[Object]()
L_003c: newobj Void .ctor(String, Object[])
L_0041: stloc 0 (Localize.Text)
L_0042: ldarg.0
L_0043: ldloca 0 (Localize.Text)
L_0045: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_004a: ldarg.0
L_004b: ldloca 0 (Localize.Text)
L_004d: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_0052: ldloc 0 (Localize.Text)
L_0053: ret
DONE

### Patch AttackEvaluator, Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 10: BattleTech.Mech
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]][]
L_0000: Local var 13: System.Collections.Generic.List`1[[AttackEvaluator+AttackEvaluation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Weapon
L_0000: Local var 19: System.Boolean
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: UnityEngine.Vector3
L_0000: Local var 23: System.Int32
L_0000: Local var 24: System.String
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.Single
L_0000: Local var 27: System.Single
L_0000: Local var 28: System.Single
L_0000: Local var 29: System.Single
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: Local var 32: BattleTech.Weapon
L_0000: Local var 33: System.Int32
L_0000: Local var 34: AttackEvaluator+AttackEvaluation
L_0000: Local var 35: AIUtil+AttackType
L_0000: Local var 36: System.Int32
L_0000: Local var 37: AttackEvaluator+AttackEvaluation
L_0000: Local var 38: System.Boolean
L_0000: Local var 39: System.Boolean
L_0000: Local var 40: System.Boolean
L_0000: Local var 41: BattleTech.AbstractActor
L_0000: Local var 42: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 43: BattleTech.Weapon
L_0000: Local var 44: BehaviorTreeResults
L_0000: Local var 45: MultiTargetAttackOrderInfo
L_0000: Local var 46: CalledShotAttackOrderInfo
L_0000: Local var 47: CalledShotAttackOrderInfo
L_0000: Local var 48: AttackOrderInfo
L_0000: Local var 49: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 50: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 51: System.Single
L_0000: ldc.r4 0
L_0005: stloc 51 (System.Single)
L_0007: ldarg 0
L_000d: ldarg 1
L_0013: ldarg 2
L_0019: ldarg 3
L_001f: call Boolean Prefix(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean)
L_0024: brfalse Label0
L_0029: ldc.r4 0
L_002e: stloc.0
L_002f: ldc.r4 3.402823E+38
L_0034: stloc.1
L_0035: ldc.r4 0
L_003a: stloc.2
L_003b: ldarg.0
L_003c: isinst BattleTech.Mech
L_0041: stloc.3
L_0042: ldloc.3
L_0043: brfalse Label1
L_0048: ldloc.3
L_0049: callvirt Int32 get_CurrentHeat()
L_004e: conv.r4
L_004f: stloc.0
L_0050: ldloc.3
L_0051: call Single GetAcceptableHeatLevelForMech(BattleTech.Mech)
L_0056: stloc.1
L_0057: ldloc.3
L_0058: call Single LegDamageLevel(BattleTech.Mech)
L_005d: stloc.2
L_005e: Label1
L_005e: ldarg.0
L_005f: ldstr "heat level: "
L_0064: ldloc.0
L_0065: box System.Single
L_006a: call System.String Concat(System.Object, System.Object)
L_006f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0074: ldarg.0
L_0075: ldstr "acceptable heat: "
L_007a: ldloc.1
L_007b: box System.Single
L_0080: call System.String Concat(System.Object, System.Object)
L_0085: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_008a: ldarg.0
L_008b: ldfld BehaviorTree BehaviorTree
L_0090: ldc.i4.s 40
L_0092: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0097: callvirt Single get_FloatVal()
L_009c: stloc.s 4 (System.Single)
L_009e: ldarg.0
L_009f: ldfld BehaviorTree BehaviorTree
L_00a4: ldc.i4.s 42
L_00a6: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_00ab: callvirt Single get_FloatVal()
L_00b0: stloc.s 5 (System.Single)
L_00b2: ldarg.0
L_00b3: ldfld BehaviorTree BehaviorTree
L_00b8: ldc.i4.1
L_00b9: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_00be: callvirt Single get_FloatVal()
L_00c3: stloc.s 6 (System.Single)
L_00c5: ldarg.0
L_00c6: ldfld BehaviorTree BehaviorTree
L_00cb: ldfld System.Single weaponToHitThreshold
L_00d0: stloc.s 7 (System.Single)
L_00d2: ldarg.0
L_00d3: ldarg.1
L_00d4: call Single MaxDamageLevel(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00d9: stloc.s 8 (System.Single)
L_00db: ldarg.0
L_00dc: ldc.i4.4
L_00dd: newarr System.Object
L_00e2: dup
L_00e3: ldc.i4.0
L_00e4: ldstr "Evaluating attack target "
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.1
L_00ec: ldarg.1
L_00ed: callvirt System.String get_DisplayName()
L_00f2: stelem.ref
L_00f3: dup
L_00f4: ldc.i4.2
L_00f5: ldstr " at "
L_00fa: stelem.ref
L_00fb: dup
L_00fc: ldc.i4.3
L_00fd: ldarg.1
L_00fe: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0103: box UnityEngine.Vector3
L_0108: stelem.ref
L_0109: call System.String Concat(System.Object[])
L_010e: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0113: ldarg.0
L_0114: ldarg.1
L_0115: call Boolean UnitHasVisibilityToTargetFromCurrentPosition(BattleTech.AbstractActor, BattleTech.ICombatant)
L_011a: brtrue Label2
L_011f: ldarg.s 4
L_0121: ldc.i4.0
L_0122: call BehaviorTreeResults BehaviorTreeResultsFromBoolean(Boolean)
L_0127: stind.ref
L_0128: ldc.r4 0
L_012d: br Label98
L_0132: Label2
L_0132: ldc.i4.3
L_0133: newarr System.Collections.Generic.List`1[BattleTech.Weapon]
L_0138: dup
L_0139: ldc.i4.0
L_013a: newobj Void .ctor()
L_013f: stelem.ref
L_0140: dup
L_0141: ldc.i4.1
L_0142: newobj Void .ctor()
L_0147: stelem.ref
L_0148: dup
L_0149: ldc.i4.2
L_014a: newobj Void .ctor()
L_014f: stelem.ref
L_0150: stloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0152: ldc.i4.0
L_0153: stloc.s 17 (System.Int32)
L_0155: br Label3
L_015a: Label9
L_015a: ldarg.0
L_015b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0160: ldloc.s 17 (System.Int32)
L_0162: callvirt BattleTech.Weapon get_Item(Int32)
L_0167: stloc.s 18 (BattleTech.Weapon)
L_0169: ldarg.0
L_016a: ldstr "Considering Weapon "
L_016f: ldloc.s 18 (BattleTech.Weapon)
L_0171: callvirt System.String get_Name()
L_0176: call System.String Concat(System.String, System.String)
L_017b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0180: ldloc.s 18 (BattleTech.Weapon)
L_0182: callvirt Boolean get_CanFire()
L_0187: brtrue Label4
L_018c: ldarg.0
L_018d: ldstr "disregarding because not can fire"
L_0192: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0197: br Label5
L_019c: Label4
L_019c: ldloc.s 18 (BattleTech.Weapon)
L_019e: ldarg.1
L_019f: ldarg.0
L_01a0: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a5: ldarg.0
L_01a6: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_01ab: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_01b0: stloc.s 19 (System.Boolean)
L_01b2: ldarg.0
L_01b3: callvirt BattleTech.CombatGameState get_Combat()
L_01b8: callvirt LOFCache get_LOFCache()
L_01bd: ldarg.0
L_01be: ldarg.1
L_01bf: ldloc.s 18 (BattleTech.Weapon)
L_01c1: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_01c6: stloc.s 20 (System.Boolean)
L_01c8: ldarg.1
L_01c9: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01ce: ldarg.0
L_01cf: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01d4: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_01d9: stloc.s 22 (UnityEngine.Vector3)
L_01db: ldloca.s 22 (UnityEngine.Vector3)
L_01dd: call Single get_magnitude()
L_01e2: ldloc.s 18 (BattleTech.Weapon)
L_01e4: callvirt Single get_MaxRange()
L_01e9: cgt.un
L_01eb: ldc.i4.0
L_01ec: ceq
L_01ee: stloc.s 21 (System.Boolean)
L_01f0: ldarg.0
L_01f1: ldstr "will fire at target? "
L_01f6: ldloca.s 19 (System.Boolean)
L_01f8: call System.String ToString()
L_01fd: call System.String Concat(System.String, System.String)
L_0202: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0207: ldarg.0
L_0208: ldstr "hasLOF? "
L_020d: ldloca.s 20 (System.Boolean)
L_020f: call System.String ToString()
L_0214: call System.String Concat(System.String, System.String)
L_0219: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_021e: ldarg.0
L_021f: ldstr "inRange? "
L_0224: ldloca.s 21 (System.Boolean)
L_0226: call System.String ToString()
L_022b: call System.String Concat(System.String, System.String)
L_0230: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0235: ldloc.s 19 (System.Boolean)
L_0237: ldloc.s 20 (System.Boolean)
L_0239: and
L_023a: ldloc.s 21 (System.Boolean)
L_023c: and
L_023d: brfalse Label6
L_0242: ldarg.0
L_0243: ldstr "willFireAtTarget and LOF"
L_0248: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_024d: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_024f: ldc.i4.0
L_0250: ldelem.ref
L_0251: ldloc.s 18 (BattleTech.Weapon)
L_0253: callvirt Void Add(BattleTech.Weapon)
L_0258: br Label7
L_025d: Label6
L_025d: ldarg.0
L_025e: ldstr "not WFAT or hasLOF or inRange"
L_0263: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0268: Label7
L_0268: ldloc.s 18 (BattleTech.Weapon)
L_026a: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_026f: ldc.i4.4
L_0270: bne.un Label8
L_0275: ldarg.0
L_0276: ldstr "adding to melee and DFA"
L_027b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0280: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0282: ldc.i4.1
L_0283: ldelem.ref
L_0284: ldloc.s 18 (BattleTech.Weapon)
L_0286: callvirt Void Add(BattleTech.Weapon)
L_028b: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_028d: ldc.i4.2
L_028e: ldelem.ref
L_028f: ldloc.s 18 (BattleTech.Weapon)
L_0291: callvirt Void Add(BattleTech.Weapon)
L_0296: Label5
L_0296: Label8
L_0296: ldloc.s 17 (System.Int32)
L_0298: ldc.i4.1
L_0299: add
L_029a: stloc.s 17 (System.Int32)
L_029c: Label3
L_029c: ldloc.s 17 (System.Int32)
L_029e: ldarg.0
L_029f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_02a4: callvirt Int32 get_Count()
L_02a9: blt Label9
L_02ae: ldarg.1
L_02af: isinst BattleTech.Mech
L_02b4: stloc.s 10 (BattleTech.Mech)
L_02b6: ldloc.s 10 (BattleTech.Mech)
L_02b8: brfalse Label10
L_02bd: ldloc.s 10 (BattleTech.Mech)
L_02bf: callvirt Boolean get_IsEvasive()
L_02c4: br Label11
L_02c9: Label10
L_02c9: ldc.i4.0
L_02ca: Label11
L_02ca: stloc.s 11 (System.Boolean)
L_02cc: ldc.i4.3
L_02cd: newarr System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]]
L_02d2: stloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_02d4: ldc.i4.0
L_02d5: stloc.s 23 (System.Int32)
L_02d7: br Label12
L_02dc: Label44
L_02dc: ldarg.0
L_02dd: ldstr "considering attack type "
L_02e2: ldloc.s 23 (System.Int32)
L_02e4: box System.Int32
L_02e9: call System.String Concat(System.Object, System.Object)
L_02ee: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02f3: ldloc.3
L_02f4: brtrue Label13
L_02f9: ldloc.s 23 (System.Int32)
L_02fb: ldc.i4.1
L_02fc: beq Label14
L_0301: ldloc.s 23 (System.Int32)
L_0303: ldc.i4.2
L_0304: bne.un Label15
L_0309: Label14
L_0309: ldarg.0
L_030a: ldstr "this unit can't melee or dfa"
L_030f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0314: br Label16
L_0319: Label13
L_0319: Label15
L_0319: ldloc.s 23 (System.Int32)
L_031b: ldc.i4.1
L_031c: bne.un Label17
L_0321: ldloc.3
L_0322: ldarg.1
L_0323: ldloca.s 24 (System.String)
L_0325: callvirt Boolean CanEngageTarget(BattleTech.ICombatant, System.String ByRef)
L_032a: brtrue Label18
L_032f: ldarg.0
L_0330: ldstr "unit.CanEngageTarget returned FALSE because: "
L_0335: ldloc.s 24 (System.String)
L_0337: call System.String Concat(System.String, System.String)
L_033c: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0341: br Label19
L_0346: Label17
L_0346: Label18
L_0346: ldloc.s 23 (System.Int32)
L_0348: ldc.i4.1
L_0349: bne.un Label20
L_034e: ldloc.s 10 (BattleTech.Mech)
L_0350: brfalse Label21
L_0355: ldloc.s 10 (BattleTech.Mech)
L_0357: ldarg.0
L_0358: ldloc.s 10 (BattleTech.Mech)
L_035a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_035f: ldloc.3
L_0360: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0365: ldc.i4.0
L_0366: ldarg.0
L_0367: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_036c: stloc.s 25 (System.Single)
L_036e: ldloc.3
L_036f: ldarg.1
L_0370: ldloc.3
L_0371: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0376: ldarg.1
L_0377: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_037c: ldc.i4.0
L_037d: ldarg.0
L_037e: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0383: stloc.s 26 (System.Single)
L_0385: ldloc.s 26 (System.Single)
L_0387: ldc.r4 0
L_038c: bgt.un Label22
L_0391: ldarg.0
L_0392: ldstr "expected damage: "
L_0397: ldloc.s 26 (System.Single)
L_0399: box System.Single
L_039e: call System.String Concat(System.Object, System.Object)
L_03a3: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_03a8: br Label23
L_03ad: Label22
L_03ad: ldloc.s 25 (System.Single)
L_03af: ldloc.s 26 (System.Single)
L_03b1: div
L_03b2: stloc.s 27 (System.Single)
L_03b4: ldarg.0
L_03b5: ldfld BehaviorTree BehaviorTree
L_03ba: ldc.i4.s 56
L_03bc: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_03c1: callvirt Single get_FloatVal()
L_03c6: stloc.s 28 (System.Single)
L_03c8: ldloc.s 27 (System.Single)
L_03ca: ldloc.s 28 (System.Single)
L_03cc: ble.un Label24
L_03d1: ldarg.0
L_03d2: ldc.i4.4
L_03d3: newarr System.Object
L_03d8: dup
L_03d9: ldc.i4.0
L_03da: ldstr "melee ratio too high: "
L_03df: stelem.ref
L_03e0: dup
L_03e1: ldc.i4.1
L_03e2: ldloc.s 27 (System.Single)
L_03e4: box System.Single
L_03e9: stelem.ref
L_03ea: dup
L_03eb: ldc.i4.2
L_03ec: ldstr " vs "
L_03f1: stelem.ref
L_03f2: dup
L_03f3: ldc.i4.3
L_03f4: ldloc.s 28 (System.Single)
L_03f6: box System.Single
L_03fb: stelem.ref
L_03fc: call System.String Concat(System.Object[])
L_0401: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0406: br Label25
L_040b: Label20
L_040b: Label21
L_040b: Label24
L_040b: ldloc.s 23 (System.Int32)
L_040d: ldc.i4.2
L_040e: bne.un Label26
L_0413: ldarg.0
L_0414: ldarg.1
L_0415: call Boolean IsDFAAcceptable(BattleTech.AbstractActor, BattleTech.ICombatant)
L_041a: brtrue Label27
L_041f: ldarg.0
L_0420: ldstr "unit cannot DFA"
L_0425: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_042a: br Label28
L_042f: Label26
L_042f: Label27
L_042f: ldloc.s 11 (System.Boolean)
L_0431: brfalse Label29
L_0436: ldarg.0
L_0437: callvirt BattleTech.UnitType get_UnitType()
L_043c: ldc.i4.1
L_043d: bne.un Label30
L_0442: ldarg.0
L_0443: ldfld BehaviorTree BehaviorTree
L_0448: ldc.i4 179
L_044d: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0452: callvirt Single get_FloatVal()
L_0457: ldc.r4 100
L_045c: div
L_045d: stloc.s 29 (System.Single)
L_045f: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0461: ldloc.s 23 (System.Int32)
L_0463: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0465: ldloc.s 23 (System.Int32)
L_0467: ldelem.ref
L_0468: ldloc.s 29 (System.Single)
L_046a: ldarg.1
L_046b: ldarg.0
L_046c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0471: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_0476: stelem.ref
L_0477: br Label31
L_047c: Label29
L_047c: Label30
L_047c: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_047e: ldloc.s 23 (System.Int32)
L_0480: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0482: ldloc.s 23 (System.Int32)
L_0484: ldelem.ref
L_0485: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSets(System.Collections.Generic.List`1[BattleTech.Weapon])
L_048a: stelem.ref
L_048b: Label31
L_048b: ldloc.3
L_048c: brfalse Label32
L_0491: ldloc.s 23 (System.Int32)
L_0493: ldc.i4.1
L_0494: beq Label33
L_0499: ldloc.s 23 (System.Int32)
L_049b: ldc.i4.2
L_049c: bne.un Label34
L_04a1: Label33
L_04a1: ldc.i4.0
L_04a2: stloc.s 30 (System.Int32)
L_04a4: br Label35
L_04a9: Label43
L_04a9: ldloc.s 23 (System.Int32)
L_04ab: ldc.i4.1
L_04ac: bne.un Label36
L_04b1: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04b3: ldloc.s 23 (System.Int32)
L_04b5: ldelem.ref
L_04b6: ldloc.s 30 (System.Int32)
L_04b8: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04bd: ldloc.3
L_04be: ldfld BattleTech.Weapon MeleeWeapon
L_04c3: callvirt Void Add(BattleTech.Weapon)
L_04c8: Label36
L_04c8: ldloc.s 23 (System.Int32)
L_04ca: ldc.i4.2
L_04cb: bne.un Label37
L_04d0: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04d2: ldloc.s 23 (System.Int32)
L_04d4: ldelem.ref
L_04d5: ldloc.s 30 (System.Int32)
L_04d7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04dc: ldloc.3
L_04dd: ldfld BattleTech.Weapon DFAWeapon
L_04e2: callvirt Void Add(BattleTech.Weapon)
L_04e7: Label37
L_04e7: ldc.i4.0
L_04e8: stloc.s 31 (System.Int32)
L_04ea: br Label38
L_04ef: Label42
L_04ef: ldloc.3
L_04f0: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_04f5: ldloc.s 31 (System.Int32)
L_04f7: callvirt BattleTech.Weapon get_Item(Int32)
L_04fc: stloc.s 32 (BattleTech.Weapon)
L_04fe: ldloc.s 32 (BattleTech.Weapon)
L_0500: callvirt Boolean get_CanFire()
L_0505: brfalse Label39
L_050a: ldloc.s 32 (BattleTech.Weapon)
L_050c: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0511: ldc.i4.4
L_0512: bne.un Label40
L_0517: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0519: ldloc.s 23 (System.Int32)
L_051b: ldelem.ref
L_051c: ldloc.s 30 (System.Int32)
L_051e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0523: ldloc.s 32 (BattleTech.Weapon)
L_0525: callvirt Boolean Contains(BattleTech.Weapon)
L_052a: brtrue Label41
L_052f: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0531: ldloc.s 23 (System.Int32)
L_0533: ldelem.ref
L_0534: ldloc.s 30 (System.Int32)
L_0536: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_053b: ldloc.s 32 (BattleTech.Weapon)
L_053d: callvirt Void Add(BattleTech.Weapon)
L_0542: Label39
L_0542: Label40
L_0542: Label41
L_0542: ldloc.s 31 (System.Int32)
L_0544: ldc.i4.1
L_0545: add
L_0546: stloc.s 31 (System.Int32)
L_0548: Label38
L_0548: ldloc.s 31 (System.Int32)
L_054a: ldloc.3
L_054b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0550: callvirt Int32 get_Count()
L_0555: blt Label42
L_055a: ldloc.s 30 (System.Int32)
L_055c: ldc.i4.1
L_055d: add
L_055e: stloc.s 30 (System.Int32)
L_0560: Label35
L_0560: ldloc.s 30 (System.Int32)
L_0562: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0564: ldloc.s 23 (System.Int32)
L_0566: ldelem.ref
L_0567: callvirt Int32 get_Count()
L_056c: blt Label43
L_0571: Label16
L_0571: Label19
L_0571: Label23
L_0571: Label25
L_0571: Label28
L_0571: Label32
L_0571: Label34
L_0571: ldloc.s 23 (System.Int32)
L_0573: ldc.i4.1
L_0574: add
L_0575: stloc.s 23 (System.Int32)
L_0577: Label12
L_0577: ldloc.s 23 (System.Int32)
L_0579: ldc.i4.3
L_057a: blt Label44
L_057f: ldarg.0
L_0580: ldarg.1
L_0581: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0583: ldarg.0
L_0584: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0589: ldarg.1
L_058a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_058f: ldloc.s 11 (System.Boolean)
L_0591: call System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation] EvaluateAttacks(BattleTech.AbstractActor, BattleTech.ICombatant, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][], UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0596: stloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0598: ldarg.0
L_0599: ldstr "found {0} different attack solutions"
L_059e: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05a0: callvirt Int32 get_Count()
L_05a5: box System.Int32
L_05aa: call System.String Format(System.String, System.Object)
L_05af: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_05b4: ldc.r4 0
L_05b9: stloc.s 14 (System.Single)
L_05bb: ldc.r4 0
L_05c0: stloc.s 15 (System.Single)
L_05c2: ldc.r4 0
L_05c7: stloc.s 16 (System.Single)
L_05c9: ldc.i4.0
L_05ca: stloc.s 33 (System.Int32)
L_05cc: br Label45
L_05d1: Label53
L_05d1: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05d3: ldloc.s 33 (System.Int32)
L_05d5: callvirt AttackEvaluation get_Item(Int32)
L_05da: stloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05dc: ldarg.0
L_05dd: ldstr "evaluated attack of type {0} with {1} weapons and a result of {2}"
L_05e2: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05e4: ldfld AIUtil+AttackType AttackType
L_05e9: box AIUtil+AttackType
L_05ee: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05f0: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_05f5: callvirt Int32 get_Count()
L_05fa: box System.Int32
L_05ff: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0601: ldfld System.Single ExpectedDamage
L_0606: box System.Single
L_060b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0610: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0615: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0617: ldfld AIUtil+AttackType AttackType
L_061c: stloc.s 35 (AIUtil+AttackType)
L_061e: ldloc.s 35 (AIUtil+AttackType)
L_0620: switch Labels46,47,48
L_0631: br Label49
L_0636: Label46
L_0636: ldloc.s 14 (System.Single)
L_0638: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_063a: ldfld System.Single ExpectedDamage
L_063f: call Single Max(Single, Single)
L_0644: stloc.s 14 (System.Single)
L_0646: br Label50
L_064b: Label47
L_064b: ldloc.s 15 (System.Single)
L_064d: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_064f: ldfld System.Single ExpectedDamage
L_0654: call Single Max(Single, Single)
L_0659: stloc.s 15 (System.Single)
L_065b: br Label51
L_0660: Label48
L_0660: ldloc.s 16 (System.Single)
L_0662: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0664: ldfld System.Single ExpectedDamage
L_0669: call Single Max(Single, Single)
L_066e: stloc.s 16 (System.Single)
L_0670: br Label52
L_0675: Label49
L_0675: ldstr "unknown attack type: "
L_067a: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_067c: ldfld AIUtil+AttackType AttackType
L_0681: box AIUtil+AttackType
L_0686: call System.String Concat(System.Object, System.Object)
L_068b: call Void Log(System.Object)
L_0690: Label50
L_0690: Label51
L_0690: Label52
L_0690: ldloc.s 33 (System.Int32)
L_0692: ldc.i4.1
L_0693: add
L_0694: stloc.s 33 (System.Int32)
L_0696: Label45
L_0696: ldloc.s 33 (System.Int32)
L_0698: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_069a: callvirt Int32 get_Count()
L_069f: blt Label53
L_06a4: ldarg.0
L_06a5: ldstr "best shooting: "
L_06aa: ldloc.s 14 (System.Single)
L_06ac: box System.Single
L_06b1: call System.String Concat(System.Object, System.Object)
L_06b6: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06bb: ldarg.0
L_06bc: ldstr "best melee: "
L_06c1: ldloc.s 15 (System.Single)
L_06c3: box System.Single
L_06c8: call System.String Concat(System.Object, System.Object)
L_06cd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06d2: ldarg.0
L_06d3: ldstr "best dfa: "
L_06d8: ldloc.s 16 (System.Single)
L_06da: box System.Single
L_06df: call System.String Concat(System.Object, System.Object)
L_06e4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06e9: ldc.i4.0
L_06ea: stloc.s 36 (System.Int32)
L_06ec: br Label54
L_06f1: Label97
L_06f1: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_06f3: ldloc.s 36 (System.Int32)
L_06f5: callvirt AttackEvaluation get_Item(Int32)
L_06fa: stloc.s 37 (AttackEvaluator+AttackEvaluation)
L_06fc: ldarg.0
L_06fd: ldstr "evaluating attack solution #"
L_0702: ldloc.s 36 (System.Int32)
L_0704: box System.Int32
L_0709: call System.String Concat(System.Object, System.Object)
L_070e: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0713: ldarg.0
L_0714: ldstr "------"
L_0719: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_071e: ldarg.0
L_071f: ldstr "Weapons:"
L_0724: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0729: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_072b: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0730: callvirt Enumerator GetEnumerator()
L_0735: stloc.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_0737: br Label55
	L_073c: Label56
	L_073c: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_073e: call BattleTech.Weapon get_Current()
	L_0743: stloc.s 43 (BattleTech.Weapon)
	L_0745: ldarg.0
	L_0746: ldstr "Weapon: "
	L_074b: ldloc.s 43 (BattleTech.Weapon)
	L_074d: callvirt System.String get_Name()
	L_0752: call System.String Concat(System.String, System.String)
	L_0757: call Void LogShoot(BattleTech.AbstractActor, System.String)
	L_075c: Label55
	L_075c: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_075e: call Boolean MoveNext()
	L_0763: brtrue Label56
	L_0768: leave Label57
	L_076d: leave (autogenerated)
} // end try
.finally
{
	L_0772: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0774: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_077a: callvirt Void Dispose()
	L_077f: endfinally
	L_0780: leave (autogenerated)
} // end handler
L_0781: Label57
L_0781: ldarg.0
L_0782: ldstr "heat generated for attack solution: "
L_0787: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0789: ldfld System.Single HeatGenerated
L_078e: box System.Single
L_0793: call System.String Concat(System.Object, System.Object)
L_0798: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_079d: ldarg.0
L_079e: ldstr "current heat: "
L_07a3: ldloc.0
L_07a4: box System.Single
L_07a9: call System.String Concat(System.Object, System.Object)
L_07ae: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07b3: ldarg.0
L_07b4: ldstr "acceptable heat: "
L_07b9: ldloc.1
L_07ba: box System.Single
L_07bf: call System.String Concat(System.Object, System.Object)
L_07c4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07c9: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_07cb: ldfld System.Single HeatGenerated
L_07d0: ldloc.0
L_07d1: add
L_07d2: ldloc.1
L_07d3: cgt
L_07d5: stloc.s 38 (System.Boolean)
L_07d7: ldarg.0
L_07d8: ldstr "will overheat? "
L_07dd: ldloca.s 38 (System.Boolean)
L_07df: call System.String ToString()
L_07e4: call System.String Concat(System.String, System.String)
L_07e9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07ee: ldloc.s 38 (System.Boolean)
L_07f0: brfalse Label58
L_07f5: ldloc.3
L_07f6: callvirt Boolean OverheatWillCauseDeath()
L_07fb: brfalse Label59
L_0800: ldarg.0
L_0801: ldstr "rejecting attack because overheat would cause own death"
L_0806: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_080b: br Label60
L_0810: Label58
L_0810: Label59
L_0810: ldloc.s 8 (System.Single)
L_0812: ldloc.s 6 (System.Single)
L_0814: clt.un
L_0816: ldc.i4.0
L_0817: ceq
L_0819: stloc.s 39 (System.Boolean)
L_081b: ldarg.0
L_081c: ldstr "but enough damage for overheat attack? "
L_0821: ldloca.s 39 (System.Boolean)
L_0823: call System.String ToString()
L_0828: call System.String Concat(System.String, System.String)
L_082d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0832: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0834: ldfld System.Single lowestHitChance
L_0839: ldloc.s 7 (System.Single)
L_083b: clt.un
L_083d: ldc.i4.0
L_083e: ceq
L_0840: stloc.s 40 (System.Boolean)
L_0842: ldarg.0
L_0843: ldstr "but enough accuracy for overheat attack? "
L_0848: ldloca.s 40 (System.Boolean)
L_084a: call System.String ToString()
L_084f: call System.String Concat(System.String, System.String)
L_0854: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0859: ldarg.1
L_085a: isinst BattleTech.AbstractActor
L_085f: stloc.s 41 (BattleTech.AbstractActor)
L_0861: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0863: ldfld AIUtil+AttackType AttackType
L_0868: ldc.i4.1
L_0869: bne.un Label61
L_086e: ldarg.0
L_086f: ldarg.1
L_0870: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_0875: brfalse Label62
L_087a: ldloc.s 41 (BattleTech.AbstractActor)
L_087c: brfalse Label63
L_0881: ldarg.3
L_0882: brtrue Label64
L_0887: Label62
L_0887: Label63
L_0887: ldarg.0
L_0888: ldstr "Can't Melee"
L_088d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0892: br Label65
L_0897: Label61
L_0897: Label64
L_0897: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0899: ldfld AIUtil+AttackType AttackType
L_089e: ldc.i4.2
L_089f: bne.un Label66
L_08a4: ldarg.0
L_08a5: ldarg.1
L_08a6: ldarg.0
L_08a7: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_08ac: callvirt Boolean CanDFATargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_08b1: brfalse Label67
L_08b6: ldloc.s 8 (System.Single)
L_08b8: ldloc.s 4 (System.Single)
L_08ba: blt Label68
L_08bf: ldloc.2
L_08c0: ldloc.s 5 (System.Single)
L_08c2: ble.un Label69
L_08c7: Label67
L_08c7: Label68
L_08c7: ldarg.0
L_08c8: ldstr "Can't DFA"
L_08cd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08d2: br Label70
L_08d7: Label66
L_08d7: Label69
L_08d7: ldloc.s 38 (System.Boolean)
L_08d9: brfalse Label71
L_08de: ldloc.s 39 (System.Boolean)
L_08e0: brfalse Label72
L_08e5: ldloc.s 40 (System.Boolean)
L_08e7: brtrue Label73
L_08ec: Label72
L_08ec: ldarg.0
L_08ed: ldstr "rejecting attack for not enough damage or accuracy on an attack that will overheat"
L_08f2: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08f7: br Label74
L_08fc: Label71
L_08fc: Label73
L_08fc: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08fe: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0903: callvirt Int32 get_Count()
L_0908: brtrue Label75
L_090d: ldarg.0
L_090e: ldstr "rejecting attack for not having any weapons"
L_0913: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0918: br Label76
L_091d: Label75
L_091d: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_091f: ldfld System.Single ExpectedDamage
L_0924: ldc.r4 0
L_0929: bgt.un Label77
L_092e: ldarg.0
L_092f: ldstr "rejecting attack for not having any expected damage"
L_0934: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0939: br Label78
L_093e: Label77
L_093e: ldc.i4.1
L_093f: newobj Void .ctor(BehaviorNodeState)
L_0944: stloc.s 44 (BehaviorTreeResults)
L_0946: ldarg.0
L_0947: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0949: ldarg.2
L_094a: call CalledShotAttackOrderInfo MakeOffensivePushOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_094f: stloc.s 47 (CalledShotAttackOrderInfo)
L_0951: ldloc.s 47 (CalledShotAttackOrderInfo)
L_0953: brfalse Label79
L_0958: ldloc.s 44 (BehaviorTreeResults)
L_095a: ldloc.s 47 (CalledShotAttackOrderInfo)
L_095c: stfld OrderInfo orderInfo
L_0961: ldloc.s 44 (BehaviorTreeResults)
L_0963: ldarg.0
L_0964: callvirt System.String get_DisplayName()
L_0969: ldstr " using offensive push"
L_096e: call System.String Concat(System.String, System.String)
L_0973: stfld System.String debugOrderString
L_0978: br Label80
L_097d: Label79
L_097d: ldarg.0
L_097e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0980: ldarg.2
L_0981: ldc.i4.0
L_0982: call CalledShotAttackOrderInfo MakeCalledShotOrder(BattleTech.AbstractActor, AttackEvaluation, Int32, Boolean)
L_0987: dup
L_0988: stloc.s 46 (CalledShotAttackOrderInfo)
L_098a: brfalse Label81
L_098f: ldloc.s 44 (BehaviorTreeResults)
L_0991: ldloc.s 46 (CalledShotAttackOrderInfo)
L_0993: stfld OrderInfo orderInfo
L_0998: ldloc.s 44 (BehaviorTreeResults)
L_099a: ldarg.0
L_099b: callvirt System.String get_DisplayName()
L_09a0: ldstr " using called shot"
L_09a5: call System.String Concat(System.String, System.String)
L_09aa: stfld System.String debugOrderString
L_09af: br Label82
L_09b4: Label81
L_09b4: ldloc.s 38 (System.Boolean)
L_09b6: brtrue Label83
L_09bb: ldarg.0
L_09bc: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09be: ldarg.2
L_09bf: call MultiTargetAttackOrderInfo MakeMultiAttackOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_09c4: dup
L_09c5: stloc.s 45 (MultiTargetAttackOrderInfo)
L_09c7: brfalse Label84
L_09cc: ldloc.s 44 (BehaviorTreeResults)
L_09ce: ldloc.s 45 (MultiTargetAttackOrderInfo)
L_09d0: stfld OrderInfo orderInfo
L_09d5: ldloc.s 44 (BehaviorTreeResults)
L_09d7: ldarg.0
L_09d8: callvirt System.String get_DisplayName()
L_09dd: ldstr " using multi attack"
L_09e2: call System.String Concat(System.String, System.String)
L_09e7: stfld System.String debugOrderString
L_09ec: br Label85
L_09f1: Label83
L_09f1: Label84
L_09f1: ldarg.1
L_09f2: newobj Void .ctor(ICombatant)
L_09f7: stloc.s 48 (AttackOrderInfo)
L_09f9: ldloc.s 48 (AttackOrderInfo)
L_09fb: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09fd: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0a02: stfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a07: ldloc.s 48 (AttackOrderInfo)
L_0a09: ldarg.1
L_0a0a: stfld BattleTech.ICombatant TargetUnit
L_0a0f: ldloc.s 48 (AttackOrderInfo)
L_0a11: ldloc.s 38 (System.Boolean)
L_0a13: brfalse Label86
L_0a18: ldarg.0
L_0a19: callvirt Boolean get_HasVentCoolantAbility()
L_0a1e: brfalse Label87
L_0a23: ldarg.0
L_0a24: callvirt Boolean get_CanVentCoolant()
L_0a29: br Label88
L_0a2e: Label86
L_0a2e: Label87
L_0a2e: ldc.i4.0
L_0a2f: Label88
L_0a2f: stfld System.Boolean VentFirst
L_0a34: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0a36: ldfld AIUtil+AttackType AttackType
L_0a3b: stloc.s 35 (AIUtil+AttackType)
L_0a3d: ldloc.s 35 (AIUtil+AttackType)
L_0a3f: ldc.i4.1
L_0a40: beq Label89
L_0a45: ldloc.s 35 (AIUtil+AttackType)
L_0a47: ldc.i4.2
L_0a48: beq Label90
L_0a4d: br Label91
L_0a52: Label89
L_0a52: ldloc.s 48 (AttackOrderInfo)
L_0a54: ldc.i4.1
L_0a55: stfld System.Boolean IsMelee
L_0a5a: ldloc.s 48 (AttackOrderInfo)
L_0a5c: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a61: ldloc.3
L_0a62: ldfld BattleTech.Weapon MeleeWeapon
L_0a67: callvirt Boolean Remove(BattleTech.Weapon)
L_0a6c: pop
L_0a6d: ldloc.s 48 (AttackOrderInfo)
L_0a6f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a74: ldloc.3
L_0a75: ldfld BattleTech.Weapon DFAWeapon
L_0a7a: callvirt Boolean Remove(BattleTech.Weapon)
L_0a7f: pop
L_0a80: ldloc.3
L_0a81: callvirt BattleTech.Pathing get_Pathing()
L_0a86: ldloc.s 41 (BattleTech.AbstractActor)
L_0a88: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0a8d: stloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a8f: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a91: callvirt Int32 get_Count()
L_0a96: brtrue Label92
L_0a9b: ldarg.0
L_0a9c: ldstr "Failing for lack of melee destinations"
L_0aa1: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0aa6: br Label93
L_0aab: Label92
L_0aab: ldloc.s 48 (AttackOrderInfo)
L_0aad: ldloc.3
L_0aae: ldloc.s 41 (BattleTech.AbstractActor)
L_0ab0: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ab2: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ab7: stfld UnityEngine.Vector3 AttackFromLocation
L_0abc: br Label94
L_0ac1: Label90
L_0ac1: ldloc.s 48 (AttackOrderInfo)
L_0ac3: ldc.i4.1
L_0ac4: stfld System.Boolean IsDeathFromAbove
L_0ac9: ldloc.s 48 (AttackOrderInfo)
L_0acb: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0ad0: ldloc.3
L_0ad1: ldfld BattleTech.Weapon MeleeWeapon
L_0ad6: callvirt Boolean Remove(BattleTech.Weapon)
L_0adb: pop
L_0adc: ldloc.s 48 (AttackOrderInfo)
L_0ade: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0ae3: ldloc.3
L_0ae4: ldfld BattleTech.Weapon DFAWeapon
L_0ae9: callvirt Boolean Remove(BattleTech.Weapon)
L_0aee: pop
L_0aef: ldloc.3
L_0af0: callvirt BattleTech.JumpPathing get_JumpPathing()
L_0af5: ldloc.s 41 (BattleTech.AbstractActor)
L_0af7: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetDFADestsForTarget(BattleTech.AbstractActor)
L_0afc: stloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0afe: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b00: callvirt Int32 get_Count()
L_0b05: brtrue Label95
L_0b0a: ldarg.0
L_0b0b: ldstr "Failing for lack of DFA destinations"
L_0b10: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b15: br Label96
L_0b1a: Label95
L_0b1a: ldloc.s 48 (AttackOrderInfo)
L_0b1c: ldloc.3
L_0b1d: ldloc.s 41 (BattleTech.AbstractActor)
L_0b1f: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b21: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b26: stfld UnityEngine.Vector3 AttackFromLocation
L_0b2b: Label91
L_0b2b: Label94
L_0b2b: ldloc.s 44 (BehaviorTreeResults)
L_0b2d: ldloc.s 48 (AttackOrderInfo)
L_0b2f: stfld OrderInfo orderInfo
L_0b34: ldloc.s 44 (BehaviorTreeResults)
L_0b36: ldc.i4.5
L_0b37: newarr System.Object
L_0b3c: dup
L_0b3d: ldc.i4.0
L_0b3e: ldarg.0
L_0b3f: callvirt System.String get_DisplayName()
L_0b44: stelem.ref
L_0b45: dup
L_0b46: ldc.i4.1
L_0b47: ldstr " using attack type: "
L_0b4c: stelem.ref
L_0b4d: dup
L_0b4e: ldc.i4.2
L_0b4f: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b51: ldfld AIUtil+AttackType AttackType
L_0b56: box AIUtil+AttackType
L_0b5b: stelem.ref
L_0b5c: dup
L_0b5d: ldc.i4.3
L_0b5e: ldstr " against: "
L_0b63: stelem.ref
L_0b64: dup
L_0b65: ldc.i4.4
L_0b66: ldarg.1
L_0b67: callvirt System.String get_DisplayName()
L_0b6c: stelem.ref
L_0b6d: call System.String Concat(System.Object[])
L_0b72: stfld System.String debugOrderString
L_0b77: Label80
L_0b77: Label82
L_0b77: Label85
L_0b77: ldarg.0
L_0b78: ldstr "attack order: "
L_0b7d: ldloc.s 44 (BehaviorTreeResults)
L_0b7f: ldfld System.String debugOrderString
L_0b84: call System.String Concat(System.String, System.String)
L_0b89: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b8e: ldarg.s 4
L_0b90: ldloc.s 44 (BehaviorTreeResults)
L_0b92: stind.ref
L_0b93: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b95: ldfld System.Single ExpectedDamage
L_0b9a: br Label100
L_0b9f: Label60
L_0b9f: Label65
L_0b9f: Label70
L_0b9f: Label74
L_0b9f: Label76
L_0b9f: Label78
L_0b9f: Label93
L_0b9f: Label96
L_0b9f: ldloc.s 36 (System.Int32)
L_0ba1: ldc.i4.1
L_0ba2: add
L_0ba3: stloc.s 36 (System.Int32)
L_0ba5: Label54
L_0ba5: ldloc.s 36 (System.Int32)
L_0ba7: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0ba9: callvirt Int32 get_Count()
L_0bae: blt Label97
L_0bb3: ldarg.0
L_0bb4: ldstr "There are no targets I can shoot at without overheating."
L_0bb9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0bbe: ldarg.s 4
L_0bc0: ldnull
L_0bc1: stind.ref
L_0bc2: ldc.r4 0
L_0bc7: Label98
L_0bc7: Label100
L_0bc7: stloc 51 (System.Single)
L_0bc9: Label0
L_0bc9: ldloc 51 (System.Single)
L_0bcb: ret
DONE

### Patch AttackEvaluator, BehaviorTreeResults MakeAttackOrder(BattleTech.AbstractActor, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Single
L_0000: Local var 2: BehaviorTreeResults
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Single
L_0000: Local var 5: AITeam
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Int32
L_0000: Local var 12: BattleTech.ICombatant
L_0000: Local var 13: BattleTech.AbstractActor
L_0000: Local var 14: BehaviorTreeResults
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: BattleTech.Pilot
L_0000: Local var 18: System.String
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.Single
L_0000: Local var 21: AttackOrderInfo
L_0000: Local var 22: MultiTargetAttackOrderInfo
L_0000: Local var 23: System.Int32
L_0000: Local var 24: BattleTech.Weapon
L_0000: Local var 25: System.Int32
L_0000: Local var 26: AttackOrderInfo
L_0000: Local var 27: BattleTech.AbstractActor
L_0000: Local var 28: BattleTech.Pilot
L_0000: Local var 29: System.String
L_0000: Local var 30: System.Int32
L_0000: Local var 31: BattleTech.Weapon
L_0000: Local var 32: BehaviorTreeResults
L_0000: ldnull
L_0001: stloc 32 (BehaviorTreeResults)
L_0003: ldarg.0
L_0004: brtrue Label1
L_0009: ldc.i4.0
L_000a: newobj Void .ctor(BehaviorNodeState)
L_000f: br Label46
L_0014: Label1
L_0014: ldc.i4.0
L_0015: stloc.0
L_0016: ldarg.0
L_0017: ldfld BehaviorTree BehaviorTree
L_001c: ldfld System.Text.StringBuilder debugLogShootContextStringBuilder
L_0021: brtrue Label2
L_0026: ldc.i4.1
L_0027: stloc.0
L_0028: ldarg.0
L_0029: ldfld BehaviorTree BehaviorTree
L_002e: newobj Void .ctor()
L_0033: stfld System.Text.StringBuilder debugLogShootContextStringBuilder
L_0038: Label2
L_0038: ldarg.0
L_0039: ldfld BehaviorTree BehaviorTree
L_003e: ldc.i4.1
L_003f: ldstr "making attack order"
L_0044: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0049: ldarg.0
L_004a: ldfld BehaviorTree BehaviorTree
L_004f: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0054: callvirt Int32 get_Count()
L_0059: brtrue Label3
L_005e: ldstr "no enemy units"
L_0063: ldarg.0
L_0064: ldstr "AI.DecisionMaking"
L_0069: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_006e: ldarg.0
L_006f: ldfld BehaviorTree BehaviorTree
L_0074: ldc.i4.1
L_0075: ldstr "no enemy units. not shooting. Failure."
L_007a: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_007f: ldloc.0
L_0080: brfalse Label4
L_0085: ldarg.0
L_0086: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_008b: Label4
L_008b: ldc.i4.0
L_008c: newobj Void .ctor(BehaviorNodeState)
L_0091: br Label47
L_0096: Label3
L_0096: ldstr "enemy unit count: "
L_009b: ldarg.0
L_009c: ldfld BehaviorTree BehaviorTree
L_00a1: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00a6: callvirt Int32 get_Count()
L_00ab: box System.Int32
L_00b0: call System.String Concat(System.Object, System.Object)
L_00b5: ldarg.0
L_00b6: ldstr "AI.DecisionMaking"
L_00bb: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_00c0: ldarg.0
L_00c1: ldfld BehaviorTree BehaviorTree
L_00c6: ldc.i4.1
L_00c7: ldstr "Enemy Unit Count: "
L_00cc: ldarg.0
L_00cd: ldfld BehaviorTree BehaviorTree
L_00d2: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00d7: callvirt Int32 get_Count()
L_00dc: box System.Int32
L_00e1: call System.String Concat(System.Object, System.Object)
L_00e6: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_00eb: ldstr "Evaluating attack from pos "
L_00f0: ldarg.0
L_00f1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00f6: box UnityEngine.Vector3
L_00fb: call System.String Concat(System.Object, System.Object)
L_0100: ldarg.0
L_0101: ldstr "AI.DecisionMaking"
L_0106: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_010b: ldc.r4 0
L_0110: stloc.1
L_0111: ldnull
L_0112: stloc.2
L_0113: ldnull
L_0114: stloc.3
L_0115: ldc.r4 0
L_011a: stloc.s 4 (System.Single)
L_011c: ldarg.0
L_011d: callvirt BattleTech.Team get_team()
L_0122: isinst AITeam
L_0127: stloc.s 5 (AITeam)
L_0129: ldloc.s 5 (AITeam)
L_012b: brfalse Label5
L_0130: ldloc.s 5 (AITeam)
L_0132: ldfld System.Collections.Generic.Dictionary`2[Lance,BattleTech.AbstractActor] DesignatedTargetForLance
L_0137: ldarg.0
L_0138: callvirt Lance get_lance()
L_013d: callvirt Boolean ContainsKey(Lance)
L_0142: brfalse Label6
L_0147: ldloc.s 5 (AITeam)
L_0149: ldfld System.Collections.Generic.Dictionary`2[Lance,BattleTech.AbstractActor] DesignatedTargetForLance
L_014e: ldarg.0
L_014f: callvirt Lance get_lance()
L_0154: callvirt BattleTech.AbstractActor get_Item(Lance)
L_0159: stloc.3
L_015a: ldloc.3
L_015b: brfalse Label7
L_0160: ldloc.3
L_0161: callvirt Boolean get_IsDead()
L_0166: brtrue Label8
L_016b: ldc.i4.0
L_016c: stloc.s 10 (System.Int32)
L_016e: br Label9
L_0173: Label12
L_0173: ldarg.0
L_0174: ldfld BehaviorTree BehaviorTree
L_0179: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_017e: ldloc.s 10 (System.Int32)
L_0180: callvirt BattleTech.ICombatant get_Item(Int32)
L_0185: ldloc.3
L_0186: bne.un Label10
L_018b: ldarg.0
L_018c: ldloc.3
L_018d: ldloc.s 10 (System.Int32)
L_018f: ldarg.1
L_0190: ldloca.s 2 (BehaviorTreeResults)
L_0192: call Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0197: stloc.1
L_0198: ldarg.0
L_0199: ldarg.0
L_019a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_019f: ldloc.3
L_01a0: ldloc.3
L_01a1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a6: ldloc.3
L_01a7: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_01ac: ldarg.0
L_01ad: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_01b2: ldc.i4.0
L_01b3: call Single EvaluateFirepowerReductionFromAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_01b8: stloc.s 4 (System.Single)
L_01ba: br Label11
L_01bf: Label10
L_01bf: ldloc.s 10 (System.Int32)
L_01c1: ldc.i4.1
L_01c2: add
L_01c3: stloc.s 10 (System.Int32)
L_01c5: Label9
L_01c5: ldloc.s 10 (System.Int32)
L_01c7: ldarg.0
L_01c8: ldfld BehaviorTree BehaviorTree
L_01cd: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_01d2: callvirt Int32 get_Count()
L_01d7: blt Label12
L_01dc: Label5
L_01dc: Label6
L_01dc: Label7
L_01dc: Label8
L_01dc: Label11
L_01dc: ldarg.0
L_01dd: ldfld BehaviorTree BehaviorTree
L_01e2: ldc.i4.1
L_01e3: ldstr "Designated Target Attack Damage: "
L_01e8: ldloc.1
L_01e9: box System.Single
L_01ee: call System.String Concat(System.Object, System.Object)
L_01f3: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_01f8: ldarg.0
L_01f9: ldfld BehaviorTree BehaviorTree
L_01fe: ldc.i4.1
L_01ff: ldstr "Designated Target Firepower Takeaway: "
L_0204: ldloc.s 4 (System.Single)
L_0206: box System.Single
L_020b: call System.String Concat(System.Object, System.Object)
L_0210: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0215: ldarg.0
L_0216: ldfld BehaviorTree BehaviorTree
L_021b: ldc.i4 192
L_0220: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0225: callvirt Single get_FloatVal()
L_022a: stloc.s 6 (System.Single)
L_022c: ldloc.s 6 (System.Single)
L_022e: ldc.r4 100
L_0233: div
L_0234: stloc.s 7 (System.Single)
L_0236: ldarg.0
L_0237: ldfld BehaviorTree BehaviorTree
L_023c: ldc.i4.1
L_023d: ldstr "Opportunity Fire Damage Threshold (%): "
L_0242: ldloc.s 6 (System.Single)
L_0244: box System.Single
L_0249: call System.String Concat(System.Object, System.Object)
L_024e: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0253: ldarg.0
L_0254: ldfld BehaviorTree BehaviorTree
L_0259: ldc.i4 197
L_025e: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0263: callvirt Single get_FloatVal()
L_0268: stloc.s 8 (System.Single)
L_026a: ldloc.s 8 (System.Single)
L_026c: ldc.r4 100
L_0271: div
L_0272: stloc.s 9 (System.Single)
L_0274: ldarg.0
L_0275: ldfld BehaviorTree BehaviorTree
L_027a: ldc.i4.1
L_027b: ldstr "Opportunity Fire Takeaway Threshold (%): "
L_0280: ldloc.s 8 (System.Single)
L_0282: box System.Single
L_0287: call System.String Concat(System.Object, System.Object)
L_028c: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0291: ldc.i4.0
L_0292: stloc.s 11 (System.Int32)
L_0294: br Label13
L_0299: Label41
L_0299: ldarg.0
L_029a: ldfld BehaviorTree BehaviorTree
L_029f: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_02a4: ldloc.s 11 (System.Int32)
L_02a6: callvirt BattleTech.ICombatant get_Item(Int32)
L_02ab: stloc.s 12 (BattleTech.ICombatant)
L_02ad: ldloc.s 12 (BattleTech.ICombatant)
L_02af: ldloc.3
L_02b0: beq Label14
L_02b5: ldloc.s 12 (BattleTech.ICombatant)
L_02b7: callvirt Boolean get_IsDead()
L_02bc: brtrue Label15
L_02c1: ldloc.s 12 (BattleTech.ICombatant)
L_02c3: isinst BattleTech.AbstractActor
L_02c8: stloc.s 13 (BattleTech.AbstractActor)
L_02ca: ldloc.s 13 (BattleTech.AbstractActor)
L_02cc: brfalse Label16
L_02d1: ldloc.s 13 (BattleTech.AbstractActor)
L_02d3: callvirt BattleTech.Pilot GetPilot()
L_02d8: stloc.s 17 (BattleTech.Pilot)
L_02da: ldloc.s 17 (BattleTech.Pilot)
L_02dc: brfalse Label17
L_02e1: ldloc.s 17 (BattleTech.Pilot)
L_02e3: callvirt BattleTech.HumanDescriptionDef get_Description()
L_02e8: callvirt System.String get_Callsign()
L_02ed: br Label18
L_02f2: Label17
L_02f2: ldstr "???"
L_02f7: Label18
L_02f7: stloc.s 18 (System.String)
L_02f9: ldarg.0
L_02fa: ldfld BehaviorTree BehaviorTree
L_02ff: ldc.i4.1
L_0300: ldstr "Target: {0} {1} {2}"
L_0305: ldloc.s 13 (BattleTech.AbstractActor)
L_0307: callvirt System.String get_DisplayName()
L_030c: ldloc.s 13 (BattleTech.AbstractActor)
L_030e: callvirt System.String get_VariantName()
L_0313: ldloc.s 18 (System.String)
L_0315: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_031a: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_031f: br Label19
L_0324: Label16
L_0324: ldarg.0
L_0325: ldfld BehaviorTree BehaviorTree
L_032a: ldc.i4.1
L_032b: ldstr "Target: {0}"
L_0330: ldloc.s 12 (BattleTech.ICombatant)
L_0332: callvirt System.String get_DisplayName()
L_0337: call System.String Format(System.String, System.Object)
L_033c: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0341: Label19
L_0341: ldarg.0
L_0342: ldloc.s 12 (BattleTech.ICombatant)
L_0344: ldloc.s 11 (System.Int32)
L_0346: ldarg.1
L_0347: ldloca.s 14 (BehaviorTreeResults)
L_0349: call Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_034e: stloc.s 15 (System.Single)
L_0350: ldarg.0
L_0351: ldarg.0
L_0352: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0357: ldloc.s 12 (BattleTech.ICombatant)
L_0359: ldloc.s 12 (BattleTech.ICombatant)
L_035b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0360: ldloc.s 12 (BattleTech.ICombatant)
L_0362: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0367: ldarg.0
L_0368: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_036d: ldc.i4.0
L_036e: call Single EvaluateFirepowerReductionFromAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_0373: stloc.s 16 (System.Single)
L_0375: ldarg.0
L_0376: ldfld BehaviorTree BehaviorTree
L_037b: ldc.i4.1
L_037c: ldstr "Damage to Target: {0}"
L_0381: ldloc.s 15 (System.Single)
L_0383: box System.Single
L_0388: call System.String Format(System.String, System.Object)
L_038d: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0392: ldarg.0
L_0393: ldfld BehaviorTree BehaviorTree
L_0398: ldc.i4.1
L_0399: ldstr "Damage Takeaway from Target: {0}"
L_039e: ldloc.s 16 (System.Single)
L_03a0: box System.Single
L_03a5: call System.String Format(System.String, System.Object)
L_03aa: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_03af: ldloc.s 13 (BattleTech.AbstractActor)
L_03b1: brfalse Label20
L_03b6: ldloc.s 13 (BattleTech.AbstractActor)
L_03b8: callvirt Boolean get_IsEvasive()
L_03bd: brfalse Label21
L_03c2: ldarg.0
L_03c3: ldarg.0
L_03c4: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03c9: ldloc.s 13 (BattleTech.AbstractActor)
L_03cb: ldloc.s 12 (BattleTech.ICombatant)
L_03cd: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03d2: ldloc.s 12 (BattleTech.ICombatant)
L_03d4: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_03d9: ldarg.0
L_03da: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_03df: ldc.i4.0
L_03e0: call Int32 CountPipsRemovedByAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_03e5: stloc.s 19 (System.Int32)
L_03e7: ldarg.0
L_03e8: ldfld BehaviorTree BehaviorTree
L_03ed: ldc.i4.1
L_03ee: ldstr "Pips Removed from Target: {0}"
L_03f3: ldloc.s 19 (System.Int32)
L_03f5: box System.Int32
L_03fa: call System.String Format(System.String, System.Object)
L_03ff: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0404: ldloc.s 19 (System.Int32)
L_0406: ldc.i4.0
L_0407: ble Label22
L_040c: ldarg.0
L_040d: ldloc.s 13 (BattleTech.AbstractActor)
L_040f: ldloc.s 12 (BattleTech.ICombatant)
L_0411: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0416: ldloc.s 19 (System.Int32)
L_0418: call Single AdditionalDamageFromFriendsGainedByAttackingEvasiveTarget(BattleTech.AbstractActor, BattleTech.AbstractActor, UnityEngine.Vector3, Int32)
L_041d: stloc.s 20 (System.Single)
L_041f: ldarg.0
L_0420: ldfld BehaviorTree BehaviorTree
L_0425: ldc.i4.1
L_0426: ldstr "Additional Damage Gained as a result of my attack: {0}"
L_042b: ldloc.s 20 (System.Single)
L_042d: box System.Single
L_0432: call System.String Format(System.String, System.Object)
L_0437: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_043c: ldloc.s 15 (System.Single)
L_043e: ldloc.s 20 (System.Single)
L_0440: add
L_0441: stloc.s 15 (System.Single)
L_0443: Label20
L_0443: Label21
L_0443: Label22
L_0443: ldarg.0
L_0444: ldfld BehaviorTree BehaviorTree
L_0449: ldc.i4.1
L_044a: ldstr "Comparing damage to: {0} and takeaway to: {1}"
L_044f: ldloc.1
L_0450: box System.Single
L_0455: ldloc.s 4 (System.Single)
L_0457: box System.Single
L_045c: call System.String Format(System.String, System.Object, System.Object)
L_0461: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0466: ldloc.s 14 (BehaviorTreeResults)
L_0468: brfalse Label23
L_046d: ldloc.s 14 (BehaviorTreeResults)
L_046f: ldfld OrderInfo orderInfo
L_0474: brfalse Label24
L_0479: ldloc.s 15 (System.Single)
L_047b: ldloc.1
L_047c: ldc.r4 1
L_0481: ldloc.s 7 (System.Single)
L_0483: add
L_0484: mul
L_0485: bgt Label25
L_048a: ldloc.s 16 (System.Single)
L_048c: ldloc.s 4 (System.Single)
L_048e: ldc.r4 1
L_0493: ldloc.s 9 (System.Single)
L_0495: add
L_0496: mul
L_0497: ble.un Label26
L_049c: Label25
L_049c: ldloc.s 14 (BehaviorTreeResults)
L_049e: ldfld OrderInfo orderInfo
L_04a3: isinst AttackOrderInfo
L_04a8: stloc.s 21 (AttackOrderInfo)
L_04aa: ldloc.s 14 (BehaviorTreeResults)
L_04ac: ldfld OrderInfo orderInfo
L_04b1: isinst MultiTargetAttackOrderInfo
L_04b6: stloc.s 22 (MultiTargetAttackOrderInfo)
L_04b8: ldloc.s 21 (AttackOrderInfo)
L_04ba: brfalse Label27
L_04bf: ldc.i4.0
L_04c0: stloc.s 23 (System.Int32)
L_04c2: br Label28
L_04c7: Label29
L_04c7: ldloc.s 21 (AttackOrderInfo)
L_04c9: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_04ce: ldloc.s 23 (System.Int32)
L_04d0: callvirt BattleTech.Weapon get_Item(Int32)
L_04d5: stloc.s 24 (BattleTech.Weapon)
L_04d7: ldarg.0
L_04d8: ldfld BehaviorTree BehaviorTree
L_04dd: ldc.i4.1
L_04de: ldstr "weapon: "
L_04e3: ldloc.s 24 (BattleTech.Weapon)
L_04e5: callvirt System.String get_Name()
L_04ea: call System.String Concat(System.String, System.String)
L_04ef: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_04f4: ldloc.s 23 (System.Int32)
L_04f6: ldc.i4.1
L_04f7: add
L_04f8: stloc.s 23 (System.Int32)
L_04fa: Label28
L_04fa: ldloc.s 23 (System.Int32)
L_04fc: ldloc.s 21 (AttackOrderInfo)
L_04fe: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0503: callvirt Int32 get_Count()
L_0508: blt Label29
L_050d: br Label30
L_0512: Label27
L_0512: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0514: brfalse Label31
L_0519: ldarg.0
L_051a: ldfld BehaviorTree BehaviorTree
L_051f: ldc.i4.1
L_0520: ldstr "multi-target order"
L_0525: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_052a: ldc.i4.0
L_052b: stloc.s 25 (System.Int32)
L_052d: br Label32
L_0532: Label39
L_0532: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0534: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_0539: ldloc.s 25 (System.Int32)
L_053b: callvirt AttackOrderInfo get_Item(Int32)
L_0540: stloc.s 26 (AttackOrderInfo)
L_0542: ldloc.s 26 (AttackOrderInfo)
L_0544: ldfld BattleTech.ICombatant TargetUnit
L_0549: isinst BattleTech.AbstractActor
L_054e: stloc.s 27 (BattleTech.AbstractActor)
L_0550: ldloc.s 27 (BattleTech.AbstractActor)
L_0552: brtrue Label33
L_0557: ldarg.0
L_0558: ldfld BehaviorTree BehaviorTree
L_055d: ldc.i4.1
L_055e: ldstr "target: "
L_0563: ldloc.s 26 (AttackOrderInfo)
L_0565: ldfld BattleTech.ICombatant TargetUnit
L_056a: callvirt System.String get_DisplayName()
L_056f: call System.String Concat(System.String, System.String)
L_0574: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0579: br Label34
L_057e: Label33
L_057e: ldloc.s 27 (BattleTech.AbstractActor)
L_0580: callvirt BattleTech.Pilot GetPilot()
L_0585: stloc.s 28 (BattleTech.Pilot)
L_0587: ldloc.s 28 (BattleTech.Pilot)
L_0589: brfalse Label35
L_058e: ldloc.s 28 (BattleTech.Pilot)
L_0590: callvirt BattleTech.HumanDescriptionDef get_Description()
L_0595: callvirt System.String get_Callsign()
L_059a: br Label36
L_059f: Label35
L_059f: ldstr "???"
L_05a4: Label36
L_05a4: stloc.s 29 (System.String)
L_05a6: ldarg.0
L_05a7: ldfld BehaviorTree BehaviorTree
L_05ac: ldc.i4.1
L_05ad: ldstr "target: "
L_05b2: ldloc.s 26 (AttackOrderInfo)
L_05b4: ldfld BattleTech.ICombatant TargetUnit
L_05b9: callvirt System.String get_DisplayName()
L_05be: ldstr " "
L_05c3: ldloc.s 29 (System.String)
L_05c5: call System.String Concat(System.String, System.String, System.String, System.String)
L_05ca: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_05cf: Label34
L_05cf: ldc.i4.0
L_05d0: stloc.s 30 (System.Int32)
L_05d2: br Label37
L_05d7: Label38
L_05d7: ldloc.s 26 (AttackOrderInfo)
L_05d9: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_05de: ldloc.s 30 (System.Int32)
L_05e0: callvirt BattleTech.Weapon get_Item(Int32)
L_05e5: stloc.s 31 (BattleTech.Weapon)
L_05e7: ldarg.0
L_05e8: ldfld BehaviorTree BehaviorTree
L_05ed: ldc.i4.1
L_05ee: ldstr "weapon: "
L_05f3: ldloc.s 31 (BattleTech.Weapon)
L_05f5: callvirt System.String get_Name()
L_05fa: call System.String Concat(System.String, System.String)
L_05ff: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0604: ldloc.s 30 (System.Int32)
L_0606: ldc.i4.1
L_0607: add
L_0608: stloc.s 30 (System.Int32)
L_060a: Label37
L_060a: ldloc.s 30 (System.Int32)
L_060c: ldloc.s 26 (AttackOrderInfo)
L_060e: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0613: callvirt Int32 get_Count()
L_0618: blt Label38
L_061d: ldloc.s 25 (System.Int32)
L_061f: ldc.i4.1
L_0620: add
L_0621: stloc.s 25 (System.Int32)
L_0623: Label32
L_0623: ldloc.s 25 (System.Int32)
L_0625: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0627: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_062c: callvirt Int32 get_Count()
L_0631: blt Label39
L_0636: Label30
L_0636: Label31
L_0636: ldarg.0
L_0637: ldfld BehaviorTree BehaviorTree
L_063c: ldc.i4.1
L_063d: ldstr "taking opportunity fire shot. Success"
L_0642: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0647: ldloc.0
L_0648: brfalse Label40
L_064d: ldarg.0
L_064e: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_0653: Label40
L_0653: ldloc.s 14 (BehaviorTreeResults)
L_0655: br Label48
L_065a: Label14
L_065a: Label15
L_065a: Label23
L_065a: Label24
L_065a: Label26
L_065a: ldloc.s 11 (System.Int32)
L_065c: ldc.i4.1
L_065d: add
L_065e: stloc.s 11 (System.Int32)
L_0660: Label13
L_0660: ldloc.s 11 (System.Int32)
L_0662: ldarg.0
L_0663: ldfld BehaviorTree BehaviorTree
L_0668: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_066d: callvirt Int32 get_Count()
L_0672: blt Label41
L_0677: ldloc.2
L_0678: brfalse Label42
L_067d: ldloc.2
L_067e: ldfld OrderInfo orderInfo
L_0683: brfalse Label43
L_0688: ldarg.0
L_0689: ldfld BehaviorTree BehaviorTree
L_068e: ldc.i4.1
L_068f: ldstr "attacking designated target. Success"
L_0694: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0699: ldloc.0
L_069a: brfalse Label44
L_069f: ldarg.0
L_06a0: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_06a5: Label44
L_06a5: ldloc.2
L_06a6: br Label49
L_06ab: Label42
L_06ab: Label43
L_06ab: ldarg.0
L_06ac: ldfld BehaviorTree BehaviorTree
L_06b1: ldc.i4.1
L_06b2: ldstr "no good attacks. not shooting. Failure."
L_06b7: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_06bc: ldloc.0
L_06bd: brfalse Label45
L_06c2: ldarg.0
L_06c3: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_06c8: Label45
L_06c8: ldc.i4.0
L_06c9: newobj Void .ctor(BehaviorNodeState)
L_06ce: Label46
L_06ce: Label47
L_06ce: Label48
L_06ce: Label49
L_06ce: stloc 32 (BehaviorTreeResults)
L_06d0: ldarg 0
L_06d6: ldarg 1
L_06dc: ldloc 32 (BehaviorTreeResults)
L_06de: call Void Postfix(BattleTech.AbstractActor, Boolean, BehaviorTreeResults)
L_06e3: ldloc 32 (BehaviorTreeResults)
L_06e5: ret
DONE

### Patch BattleTech.AmmunitionDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(BattleTech.AmmunitionDef, System.String ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call System.String FromJSON[AmmunitionDef](BattleTech.AmmunitionDef, System.String)
L_0018: pop
L_0019: ldarg.0
L_001a: call Void UpgradeToDataDrivenEnums()
L_001f: Label0
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.AmmunitionDef)
L_0025: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarga 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_001d: brfalse Label0
L_0022: ldarg.1
L_0023: castclass BattleTech.AttackSequenceImpactMessage
L_0028: stloc.0
L_0029: ldloc.0
L_002a: ldflda BattleTech.WeaponHitInfo hitInfo
L_002f: ldfld System.Int32 attackSequenceId
L_0034: ldarg.0
L_0035: ldfld System.Int32 id
L_003a: beq Label1
L_003f: br Label33
L_0044: Label1
L_0044: ldloc.0
L_0045: ldflda BattleTech.WeaponHitInfo hitInfo
L_004a: ldfld System.Int32 attackGroupIndex
L_004f: stloc.1
L_0050: ldloc.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldfld System.Int32 attackWeaponIndex
L_005b: stloc.2
L_005c: ldloc.0
L_005d: ldfld System.Int32 hitIndex
L_0062: stloc.3
L_0063: ldarg.0
L_0064: ldloc.1
L_0065: ldloc.2
L_0066: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_006b: stloc.s 4 (BattleTech.Weapon)
L_006d: ldloc.0
L_006e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0073: ldloc.3
L_0074: call Int32 ShotHitLocation(Int32)
L_0079: stloc.s 5 (System.Int32)
L_007b: ldloc.0
L_007c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0081: ldfld UnityEngine.Vector3[] hitPositions
L_0086: ldloc.3
L_0087: ldelem UnityEngine.Vector3
L_008c: stloc.s 6 (UnityEngine.Vector3)
L_008e: ldloc.0
L_008f: ldfld System.Single hitDamage
L_0094: stloc.s 7 (System.Single)
L_0096: ldloc.s 7 (System.Single)
L_0098: stloc.s 8 (System.Single)
L_009a: ldarg.0
L_009b: call BattleTech.AttackDirector get_Director()
L_00a0: callvirt BattleTech.CombatGameState get_Combat()
L_00a5: callvirt BattleTech.ToHit get_ToHit()
L_00aa: ldloc.0
L_00ab: ldflda BattleTech.WeaponHitInfo hitInfo
L_00b0: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00b5: ldloc.3
L_00b6: ldelem.i4
L_00b7: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00bc: stloc.s 9 (System.Single)
L_00be: ldloc.s 7 (System.Single)
L_00c0: ldloc.s 9 (System.Single)
L_00c2: mul
L_00c3: stloc.s 8 (System.Single)
L_00c5: ldloc.0
L_00c6: ldflda BattleTech.WeaponHitInfo hitInfo
L_00cb: ldfld System.String[] secondaryTargetIds
L_00d0: ldloc.3
L_00d1: ldelem.ref
L_00d2: call Boolean IsNullOrEmpty(System.String)
L_00d7: ldc.i4.0
L_00d8: ceq
L_00da: stloc.s 10 (System.Boolean)
L_00dc: ldnull
L_00dd: stloc.s 11 (BattleTech.ICombatant)
L_00df: ldloc.s 10 (System.Boolean)
L_00e1: brfalse Label2
L_00e6: ldarg.0
L_00e7: call BattleTech.AttackDirector get_Director()
L_00ec: callvirt BattleTech.CombatGameState get_Combat()
L_00f1: ldloc.0
L_00f2: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f7: ldfld System.String[] secondaryTargetIds
L_00fc: ldloc.3
L_00fd: ldelem.ref
L_00fe: ldc.i4.0
L_00ff: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0104: stloc.s 11 (BattleTech.ICombatant)
L_0106: Label2
L_0106: ldarg.0
L_0107: ldfld BattleTech.ICombatant chosenTarget
L_010c: isinst BattleTech.AbstractActor
L_0111: stloc.s 12 (BattleTech.AbstractActor)
L_0113: ldloc.s 12 (BattleTech.AbstractActor)
L_0115: brfalse Label3
L_011a: ldarg.0
L_011b: ldfld BattleTech.AbstractActor attacker
L_0120: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0125: ldloc.s 12 (BattleTech.AbstractActor)
L_0127: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_012c: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_012e: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0130: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0135: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0137: ldloc.s 12 (BattleTech.AbstractActor)
L_0139: ldloc.s 8 (System.Single)
L_013b: ldloc.s 4 (BattleTech.Weapon)
L_013d: callvirt BattleTech.WeaponCategory get_Category()
L_0142: ldloc.s 12 (BattleTech.AbstractActor)
L_0144: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0149: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_014b: ldc.i4.1
L_014c: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0151: stloc.s 8 (System.Single)
L_0153: ldloc.s 12 (BattleTech.AbstractActor)
L_0155: ldloc.s 8 (System.Single)
L_0157: ldloc.s 4 (BattleTech.Weapon)
L_0159: callvirt BattleTech.WeaponCategory get_Category()
L_015e: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0163: stloc.s 8 (System.Single)
L_0165: Label3
L_0165: ldloc.s 8 (System.Single)
L_0167: ldc.r4 0
L_016c: bgt.un Label4
L_0171: ldsfld HBS.Logging.ILog attackLogger
L_0176: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_017b: ldloc.s 7 (System.Single)
L_017d: box System.Single
L_0182: ldloc.s 8 (System.Single)
L_0184: box System.Single
L_0189: call System.String Format(System.String, System.Object, System.Object)
L_018e: callvirt Void LogWarning(System.Object)
L_0193: ldc.r4 0
L_0198: stloc.s 8 (System.Single)
L_019a: Label4
L_019a: ldarg.0
L_019b: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01a0: ldloc.0
L_01a1: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01a6: stloc.s 13 (System.Boolean)
L_01a8: ldloc.0
L_01a9: ldflda BattleTech.WeaponHitInfo hitInfo
L_01ae: ldloc.3
L_01af: call Boolean DidShotHitChosenTarget(Int32)
L_01b4: stloc.s 14 (System.Boolean)
L_01b6: ldloc.0
L_01b7: ldfld System.Boolean hasPlayedImpact
L_01bc: brtrue Label5
L_01c1: ldsfld HBS.Logging.ILog logger
L_01c6: callvirt Boolean get_IsDebugEnabled()
L_01cb: brfalse Label6
L_01d0: ldsfld HBS.Logging.ILog logger
L_01d5: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01da: ldc.i4.5
L_01db: newarr System.Object
L_01e0: dup
L_01e1: ldc.i4.0
L_01e2: ldarg.0
L_01e3: ldfld System.Int32 id
L_01e8: box System.Int32
L_01ed: stelem.ref
L_01ee: dup
L_01ef: ldc.i4.1
L_01f0: ldloc.1
L_01f1: box System.Int32
L_01f6: stelem.ref
L_01f7: dup
L_01f8: ldc.i4.2
L_01f9: ldloc.2
L_01fa: box System.Int32
L_01ff: stelem.ref
L_0200: dup
L_0201: ldc.i4.3
L_0202: ldloc.3
L_0203: box System.Int32
L_0208: stelem.ref
L_0209: dup
L_020a: ldc.i4.4
L_020b: ldloc.s 13 (System.Boolean)
L_020d: box System.Boolean
L_0212: stelem.ref
L_0213: call System.String Format(System.String, System.Object[])
L_0218: callvirt Void LogDebug(System.Object)
L_021d: Label6
L_021d: ldloc.0
L_021e: ldc.i4.1
L_021f: stfld System.Boolean hasPlayedImpact
L_0224: ldarg.0
L_0225: ldfld BattleTech.ICombatant chosenTarget
L_022a: callvirt BattleTech.GameRepresentation get_GameRep()
L_022f: ldnull
L_0230: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0235: brfalse Label7
L_023a: ldloc.s 14 (System.Boolean)
L_023c: brfalse Label8
L_0241: ldarg.0
L_0242: ldfld BattleTech.ICombatant chosenTarget
L_0247: callvirt BattleTech.GameRepresentation get_GameRep()
L_024c: ldloc.0
L_024d: ldfld BattleTech.WeaponHitInfo hitInfo
L_0252: ldloc.3
L_0253: ldloc.s 4 (BattleTech.Weapon)
L_0255: ldarg.0
L_0256: ldfld BattleTech.MeleeAttackType meleeAttackType
L_025b: ldarg.0
L_025c: ldfld System.Single cumulativeDamage
L_0261: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0266: ldloc.s 6 (UnityEngine.Vector3)
L_0268: stloc.s 17 (UnityEngine.Vector3)
L_026a: ldarg.0
L_026b: ldfld BattleTech.ICombatant chosenTarget
L_0270: ldloc.s 5 (System.Int32)
L_0272: callvirt Single ArmorForLocation(Int32)
L_0277: ldloc.s 8 (System.Single)
L_0279: bge.un Label9
L_027e: ldloc.0
L_027f: ldflda BattleTech.WeaponHitInfo hitInfo
L_0284: ldfld System.String attackerId
L_0289: ldarg.0
L_028a: ldfld BattleTech.ICombatant chosenTarget
L_028f: callvirt System.String get_GUID()
L_0294: ldstr "{0}"
L_0299: ldc.i4.1
L_029a: newarr System.Object
L_029f: dup
L_02a0: ldc.i4.0
L_02a1: ldc.r4 1
L_02a6: ldloc.s 8 (System.Single)
L_02a8: call Single Max(Single, Single)
L_02ad: conv.i4
L_02ae: box System.Int32
L_02b3: stelem.ref
L_02b4: newobj Void .ctor(String, Object[])
L_02b9: ldarg.0
L_02ba: call BattleTech.AttackDirector get_Director()
L_02bf: callvirt BattleTech.CombatGameState get_Combat()
L_02c4: callvirt BattleTech.CombatGameConstants get_Constants()
L_02c9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02ce: ldfld System.Single floatieSizeMedium
L_02d3: ldc.i4.8
L_02d4: ldloc.s 17 (UnityEngine.Vector3)
L_02d6: ldfld System.Single x
L_02db: ldloc.s 17 (UnityEngine.Vector3)
L_02dd: ldfld System.Single y
L_02e2: ldloc.s 17 (UnityEngine.Vector3)
L_02e4: ldfld System.Single z
L_02e9: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02ee: stloc.s 18 (BattleTech.FloatieMessage)
L_02f0: ldarg.0
L_02f1: call BattleTech.AttackDirector get_Director()
L_02f6: callvirt BattleTech.CombatGameState get_Combat()
L_02fb: callvirt MessageCenter get_MessageCenter()
L_0300: ldloc.s 18 (BattleTech.FloatieMessage)
L_0302: callvirt Void PublishMessage(MessageCenterMessage)
L_0307: br Label10
L_030c: Label9
L_030c: ldloc.0
L_030d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0312: ldfld System.String attackerId
L_0317: ldarg.0
L_0318: ldfld BattleTech.ICombatant chosenTarget
L_031d: callvirt System.String get_GUID()
L_0322: ldstr "{0}"
L_0327: ldc.i4.1
L_0328: newarr System.Object
L_032d: dup
L_032e: ldc.i4.0
L_032f: ldc.r4 1
L_0334: ldloc.s 8 (System.Single)
L_0336: call Single Max(Single, Single)
L_033b: conv.i4
L_033c: box System.Int32
L_0341: stelem.ref
L_0342: newobj Void .ctor(String, Object[])
L_0347: ldarg.0
L_0348: call BattleTech.AttackDirector get_Director()
L_034d: callvirt BattleTech.CombatGameState get_Combat()
L_0352: callvirt BattleTech.CombatGameConstants get_Constants()
L_0357: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_035c: ldfld System.Single floatieSizeMedium
L_0361: ldc.i4.7
L_0362: ldloc.s 17 (UnityEngine.Vector3)
L_0364: ldfld System.Single x
L_0369: ldloc.s 17 (UnityEngine.Vector3)
L_036b: ldfld System.Single y
L_0370: ldloc.s 17 (UnityEngine.Vector3)
L_0372: ldfld System.Single z
L_0377: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_037c: stloc.s 19 (BattleTech.FloatieMessage)
L_037e: ldarg.0
L_037f: call BattleTech.AttackDirector get_Director()
L_0384: callvirt BattleTech.CombatGameState get_Combat()
L_0389: callvirt MessageCenter get_MessageCenter()
L_038e: ldloc.s 19 (BattleTech.FloatieMessage)
L_0390: callvirt Void PublishMessage(MessageCenterMessage)
L_0395: br Label11
L_039a: Label8
L_039a: ldarg.0
L_039b: ldfld BattleTech.ICombatant chosenTarget
L_03a0: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03a5: call UnityEngine.Vector3 get_insideUnitSphere()
L_03aa: ldc.r4 5
L_03af: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03b4: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03b9: stloc.s 20 (UnityEngine.Vector3)
L_03bb: ldloc.0
L_03bc: ldflda BattleTech.WeaponHitInfo hitInfo
L_03c1: ldfld System.Boolean[] dodgeSuccesses
L_03c6: ldloc.3
L_03c7: ldelem.u1
L_03c8: brfalse Label12
L_03cd: ldarg.0
L_03ce: ldfld BattleTech.ICombatant chosenTarget
L_03d3: callvirt BattleTech.GameRepresentation get_GameRep()
L_03d8: ldloc.0
L_03d9: ldfld BattleTech.WeaponHitInfo hitInfo
L_03de: ldloc.3
L_03df: ldloc.s 4 (BattleTech.Weapon)
L_03e1: ldarg.0
L_03e2: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03e7: ldarg.0
L_03e8: ldfld System.Single cumulativeDamage
L_03ed: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_03f2: ldloc.0
L_03f3: ldflda BattleTech.WeaponHitInfo hitInfo
L_03f8: ldfld System.String attackerId
L_03fd: ldarg.0
L_03fe: ldfld BattleTech.ICombatant chosenTarget
L_0403: callvirt System.String get_GUID()
L_0408: ldstr "EVADE"
L_040d: call System.Object[] Empty[Object]()
L_0412: newobj Void .ctor(String, Object[])
L_0417: ldarg.0
L_0418: call BattleTech.AttackDirector get_Director()
L_041d: callvirt BattleTech.CombatGameState get_Combat()
L_0422: callvirt BattleTech.CombatGameConstants get_Constants()
L_0427: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_042c: ldfld System.Single floatieSizeMedium
L_0431: ldc.i4.6
L_0432: ldloc.s 20 (UnityEngine.Vector3)
L_0434: ldfld System.Single x
L_0439: ldloc.s 20 (UnityEngine.Vector3)
L_043b: ldfld System.Single y
L_0440: ldloc.s 20 (UnityEngine.Vector3)
L_0442: ldfld System.Single z
L_0447: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_044c: stloc.s 21 (BattleTech.FloatieMessage)
L_044e: ldarg.0
L_044f: call BattleTech.AttackDirector get_Director()
L_0454: callvirt BattleTech.CombatGameState get_Combat()
L_0459: callvirt MessageCenter get_MessageCenter()
L_045e: ldloc.s 21 (BattleTech.FloatieMessage)
L_0460: callvirt Void PublishMessage(MessageCenterMessage)
L_0465: br Label13
L_046a: Label12
L_046a: ldarg.0
L_046b: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0470: brfalse Label14
L_0475: ldarg.0
L_0476: ldfld BattleTech.ICombatant chosenTarget
L_047b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0480: ldloc.0
L_0481: ldfld BattleTech.WeaponHitInfo hitInfo
L_0486: ldloc.3
L_0487: ldloc.s 4 (BattleTech.Weapon)
L_0489: ldarg.0
L_048a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_048f: ldarg.0
L_0490: ldfld System.Single cumulativeDamage
L_0495: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_049a: ldloc.0
L_049b: ldflda BattleTech.WeaponHitInfo hitInfo
L_04a0: ldfld System.String attackerId
L_04a5: ldloc.0
L_04a6: ldflda BattleTech.WeaponHitInfo hitInfo
L_04ab: ldfld System.String targetId
L_04b0: ldstr "MISS!"
L_04b5: call System.Object[] Empty[Object]()
L_04ba: newobj Void .ctor(String, Object[])
L_04bf: ldarg.0
L_04c0: call BattleTech.AttackDirector get_Director()
L_04c5: callvirt BattleTech.CombatGameState get_Combat()
L_04ca: callvirt BattleTech.CombatGameConstants get_Constants()
L_04cf: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04d4: ldfld System.Single floatieSizeMedium
L_04d9: ldc.i4.5
L_04da: ldloc.s 20 (UnityEngine.Vector3)
L_04dc: ldfld System.Single x
L_04e1: ldloc.s 20 (UnityEngine.Vector3)
L_04e3: ldfld System.Single y
L_04e8: ldloc.s 20 (UnityEngine.Vector3)
L_04ea: ldfld System.Single z
L_04ef: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_04f4: stloc.s 22 (BattleTech.FloatieMessage)
L_04f6: ldarg.0
L_04f7: call BattleTech.AttackDirector get_Director()
L_04fc: callvirt BattleTech.CombatGameState get_Combat()
L_0501: callvirt MessageCenter get_MessageCenter()
L_0506: ldloc.s 22 (BattleTech.FloatieMessage)
L_0508: callvirt Void PublishMessage(MessageCenterMessage)
L_050d: br Label15
L_0512: Label14
L_0512: ldloc.s 4 (BattleTech.Weapon)
L_0514: callvirt Int32 get_ShotsWhenFired()
L_0519: ldc.i4.1
L_051a: bgt Label16
L_051f: ldc.i4.5
L_0520: br Label17
L_0525: Label16
L_0525: ldc.i4.4
L_0526: Label17
L_0526: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0528: ldloc.0
L_0529: ldflda BattleTech.WeaponHitInfo hitInfo
L_052e: ldfld System.String attackerId
L_0533: ldloc.0
L_0534: ldflda BattleTech.WeaponHitInfo hitInfo
L_0539: ldfld System.String targetId
L_053e: ldstr "MISS!"
L_0543: call System.Object[] Empty[Object]()
L_0548: newobj Void .ctor(String, Object[])
L_054d: ldarg.0
L_054e: call BattleTech.AttackDirector get_Director()
L_0553: callvirt BattleTech.CombatGameState get_Combat()
L_0558: callvirt BattleTech.CombatGameConstants get_Constants()
L_055d: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0562: ldfld System.Single floatieSizeMedium
L_0567: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0569: ldloc.s 20 (UnityEngine.Vector3)
L_056b: ldfld System.Single x
L_0570: ldloc.s 20 (UnityEngine.Vector3)
L_0572: ldfld System.Single y
L_0577: ldloc.s 20 (UnityEngine.Vector3)
L_0579: ldfld System.Single z
L_057e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0583: stloc.s 24 (BattleTech.FloatieMessage)
L_0585: ldarg.0
L_0586: call BattleTech.AttackDirector get_Director()
L_058b: callvirt BattleTech.CombatGameState get_Combat()
L_0590: callvirt MessageCenter get_MessageCenter()
L_0595: ldloc.s 24 (BattleTech.FloatieMessage)
L_0597: callvirt Void PublishMessage(MessageCenterMessage)
L_059c: Label13
L_059c: Label15
L_059c: ldloc.s 10 (System.Boolean)
L_059e: brfalse Label18
L_05a3: ldloc.0
L_05a4: ldflda BattleTech.WeaponHitInfo hitInfo
L_05a9: ldfld System.String attackerId
L_05ae: ldloc.0
L_05af: ldflda BattleTech.WeaponHitInfo hitInfo
L_05b4: ldfld System.String targetId
L_05b9: ldstr "STRAY SHOT"
L_05be: call System.Object[] Empty[Object]()
L_05c3: newobj Void .ctor(String, Object[])
L_05c8: ldarg.0
L_05c9: call BattleTech.AttackDirector get_Director()
L_05ce: callvirt BattleTech.CombatGameState get_Combat()
L_05d3: callvirt BattleTech.CombatGameConstants get_Constants()
L_05d8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05dd: ldfld System.Single floatieSizeLarge
L_05e2: ldc.i4.5
L_05e3: ldloc.s 6 (UnityEngine.Vector3)
L_05e5: ldfld System.Single x
L_05ea: ldloc.s 6 (UnityEngine.Vector3)
L_05ec: ldfld System.Single y
L_05f1: ldloc.s 6 (UnityEngine.Vector3)
L_05f3: ldfld System.Single z
L_05f8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05fd: stloc.s 25 (BattleTech.FloatieMessage)
L_05ff: ldarg.0
L_0600: call BattleTech.AttackDirector get_Director()
L_0605: callvirt BattleTech.CombatGameState get_Combat()
L_060a: callvirt MessageCenter get_MessageCenter()
L_060f: ldloc.s 25 (BattleTech.FloatieMessage)
L_0611: callvirt Void PublishMessage(MessageCenterMessage)
L_0616: ldloc.s 11 (BattleTech.ICombatant)
L_0618: brfalse Label19
L_061d: ldloc.s 11 (BattleTech.ICombatant)
L_061f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0624: ldnull
L_0625: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_062a: brfalse Label20
L_062f: ldloc.s 11 (BattleTech.ICombatant)
L_0631: callvirt BattleTech.GameRepresentation get_GameRep()
L_0636: ldloc.0
L_0637: ldfld BattleTech.WeaponHitInfo hitInfo
L_063c: ldloc.3
L_063d: ldloc.s 4 (BattleTech.Weapon)
L_063f: ldarg.0
L_0640: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0645: ldarg.0
L_0646: ldfld System.Single cumulativeDamage
L_064b: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0650: Label20
L_0650: ldloc.s 11 (BattleTech.ICombatant)
L_0652: ldloc.s 5 (System.Int32)
L_0654: callvirt Single ArmorForLocation(Int32)
L_0659: ldloc.s 8 (System.Single)
L_065b: bge.un Label21
L_0660: ldloc.0
L_0661: ldflda BattleTech.WeaponHitInfo hitInfo
L_0666: ldfld System.String attackerId
L_066b: ldloc.s 11 (BattleTech.ICombatant)
L_066d: callvirt System.String get_GUID()
L_0672: ldstr "{0}"
L_0677: ldc.i4.1
L_0678: newarr System.Object
L_067d: dup
L_067e: ldc.i4.0
L_067f: ldc.r4 1
L_0684: ldloc.s 8 (System.Single)
L_0686: call Single Max(Single, Single)
L_068b: conv.i4
L_068c: box System.Int32
L_0691: stelem.ref
L_0692: newobj Void .ctor(String, Object[])
L_0697: ldarg.0
L_0698: call BattleTech.AttackDirector get_Director()
L_069d: callvirt BattleTech.CombatGameState get_Combat()
L_06a2: callvirt BattleTech.CombatGameConstants get_Constants()
L_06a7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06ac: ldfld System.Single floatieSizeMedium
L_06b1: ldc.i4.8
L_06b2: ldloc.s 6 (UnityEngine.Vector3)
L_06b4: ldfld System.Single x
L_06b9: ldloc.s 6 (UnityEngine.Vector3)
L_06bb: ldfld System.Single y
L_06c0: ldloc.s 6 (UnityEngine.Vector3)
L_06c2: ldfld System.Single z
L_06c7: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06cc: stloc.s 26 (BattleTech.FloatieMessage)
L_06ce: ldarg.0
L_06cf: call BattleTech.AttackDirector get_Director()
L_06d4: callvirt BattleTech.CombatGameState get_Combat()
L_06d9: callvirt MessageCenter get_MessageCenter()
L_06de: ldloc.s 26 (BattleTech.FloatieMessage)
L_06e0: callvirt Void PublishMessage(MessageCenterMessage)
L_06e5: br Label22
L_06ea: Label21
L_06ea: ldloc.0
L_06eb: ldflda BattleTech.WeaponHitInfo hitInfo
L_06f0: ldfld System.String attackerId
L_06f5: ldloc.s 11 (BattleTech.ICombatant)
L_06f7: callvirt System.String get_GUID()
L_06fc: ldstr "{0}"
L_0701: ldc.i4.1
L_0702: newarr System.Object
L_0707: dup
L_0708: ldc.i4.0
L_0709: ldc.r4 1
L_070e: ldloc.s 8 (System.Single)
L_0710: call Single Max(Single, Single)
L_0715: conv.i4
L_0716: box System.Int32
L_071b: stelem.ref
L_071c: newobj Void .ctor(String, Object[])
L_0721: ldarg.0
L_0722: call BattleTech.AttackDirector get_Director()
L_0727: callvirt BattleTech.CombatGameState get_Combat()
L_072c: callvirt BattleTech.CombatGameConstants get_Constants()
L_0731: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0736: ldfld System.Single floatieSizeMedium
L_073b: ldc.i4.7
L_073c: ldloc.s 6 (UnityEngine.Vector3)
L_073e: ldfld System.Single x
L_0743: ldloc.s 6 (UnityEngine.Vector3)
L_0745: ldfld System.Single y
L_074a: ldloc.s 6 (UnityEngine.Vector3)
L_074c: ldfld System.Single z
L_0751: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0756: stloc.s 27 (BattleTech.FloatieMessage)
L_0758: ldarg.0
L_0759: call BattleTech.AttackDirector get_Director()
L_075e: callvirt BattleTech.CombatGameState get_Combat()
L_0763: callvirt MessageCenter get_MessageCenter()
L_0768: ldloc.s 27 (BattleTech.FloatieMessage)
L_076a: callvirt Void PublishMessage(MessageCenterMessage)
L_076f: Label7
L_076f: Label10
L_076f: Label11
L_076f: Label18
L_076f: Label19
L_076f: Label22
L_076f: ldloc.s 4 (BattleTech.Weapon)
L_0771: callvirt BattleTech.WeaponType get_Type()
L_0776: ldc.i4.3
L_0777: beq Label23
L_077c: ldloc.s 4 (BattleTech.Weapon)
L_077e: callvirt BattleTech.WeaponType get_Type()
L_0783: ldc.i4.7
L_0784: beq Label24
L_0789: call BattleTech.CameraControl get_Instance()
L_078e: ldloc.s 8 (System.Single)
L_0790: ldarg.0
L_0791: call BattleTech.AttackDirector get_Director()
L_0796: callvirt BattleTech.CombatGameState get_Combat()
L_079b: callvirt BattleTech.CombatGameConstants get_Constants()
L_07a0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07a5: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07aa: mul
L_07ab: ldarg.0
L_07ac: call BattleTech.AttackDirector get_Director()
L_07b1: callvirt BattleTech.CombatGameState get_Combat()
L_07b6: callvirt BattleTech.CombatGameConstants get_Constants()
L_07bb: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07c0: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07c5: add
L_07c6: ldc.r4 1
L_07cb: ldloc.s 6 (UnityEngine.Vector3)
L_07cd: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07d2: Label5
L_07d2: Label23
L_07d2: Label24
L_07d2: ldloc.s 13 (System.Boolean)
L_07d4: brtrue Label25
L_07d9: ldarg.0
L_07da: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07df: ldloc.0
L_07e0: callvirt Void StoreMessage(MessageCenterMessage)
L_07e5: br Label34
L_07ea: Label25
L_07ea: ldsfld HBS.Logging.ILog logger
L_07ef: callvirt Boolean get_IsLogEnabled()
L_07f4: brfalse Label26
L_07f9: ldsfld HBS.Logging.ILog logger
L_07fe: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_0803: ldc.i4.4
L_0804: newarr System.Object
L_0809: dup
L_080a: ldc.i4.0
L_080b: ldarg.0
L_080c: ldfld System.Int32 id
L_0811: box System.Int32
L_0816: stelem.ref
L_0817: dup
L_0818: ldc.i4.1
L_0819: ldloc.1
L_081a: box System.Int32
L_081f: stelem.ref
L_0820: dup
L_0821: ldc.i4.2
L_0822: ldloc.2
L_0823: box System.Int32
L_0828: stelem.ref
L_0829: dup
L_082a: ldc.i4.3
L_082b: ldloc.3
L_082c: box System.Int32
L_0831: stelem.ref
L_0832: call System.String Format(System.String, System.Object[])
L_0837: callvirt Void Log(System.Object)
L_083c: ldsfld HBS.Logging.ILog logger
L_0841: callvirt Boolean get_IsDebugEnabled()
L_0846: brfalse Label27
L_084b: ldsfld HBS.Logging.ILog logger
L_0850: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0855: ldloc.s 4 (BattleTech.Weapon)
L_0857: callvirt System.String get_Name()
L_085c: ldarg.0
L_085d: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0862: constrained. BattleTech.MeleeAttackType
L_0868: callvirt System.String ToString()
L_086d: ldloca.s 5 (System.Int32)
L_086f: call System.String ToString()
L_0874: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0879: callvirt Void LogDebug(System.Object)
L_087e: Label26
L_087e: Label27
L_087e: ldloc.s 14 (System.Boolean)
L_0880: brfalse Label28
L_0885: ldarg.0
L_0886: ldarg.0
L_0887: ldfld System.Single cumulativeDamage
L_088c: ldloc.s 8 (System.Single)
L_088e: add
L_088f: stfld System.Single cumulativeDamage
L_0894: ldarg.0
L_0895: ldfld BattleTech.ICombatant chosenTarget
L_089a: ldloc.0
L_089b: ldfld BattleTech.WeaponHitInfo hitInfo
L_08a0: ldloc.s 5 (System.Int32)
L_08a2: ldloc.s 4 (BattleTech.Weapon)
L_08a4: ldloc.s 8 (System.Single)
L_08a6: ldloc.3
L_08a7: ldc.i4.s 12
L_08a9: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08ae: ldarg.0
L_08af: ldfld BattleTech.ICombatant chosenTarget
L_08b4: ldarg.0
L_08b5: ldfld BattleTech.AbstractActor attacker
L_08ba: callvirt System.String get_GUID()
L_08bf: callvirt Void HandleDeath(System.String)
L_08c4: br Label29
L_08c9: Label28
L_08c9: ldloc.s 10 (System.Boolean)
L_08cb: brfalse Label30
L_08d0: ldloc.s 11 (BattleTech.ICombatant)
L_08d2: brfalse Label31
L_08d7: ldloc.s 7 (System.Single)
L_08d9: ldloc.s 9 (System.Single)
L_08db: mul
L_08dc: stloc.s 8 (System.Single)
L_08de: ldloc.s 11 (BattleTech.ICombatant)
L_08e0: isinst BattleTech.AbstractActor
L_08e5: stloc.s 28 (BattleTech.AbstractActor)
L_08e7: ldloc.s 28 (BattleTech.AbstractActor)
L_08e9: brfalse Label32
L_08ee: ldarg.0
L_08ef: ldfld BattleTech.AbstractActor attacker
L_08f4: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_08f9: ldloc.s 28 (BattleTech.AbstractActor)
L_08fb: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0900: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0902: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0904: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0909: stloc.s 29 (BattleTech.LineOfFireLevel)
L_090b: ldloc.s 28 (BattleTech.AbstractActor)
L_090d: ldloc.s 8 (System.Single)
L_090f: ldloc.s 4 (BattleTech.Weapon)
L_0911: callvirt BattleTech.WeaponCategory get_Category()
L_0916: ldloc.s 28 (BattleTech.AbstractActor)
L_0918: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_091d: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_091f: ldc.i4.1
L_0920: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0925: stloc.s 8 (System.Single)
L_0927: ldloc.s 28 (BattleTech.AbstractActor)
L_0929: ldloc.s 8 (System.Single)
L_092b: ldloc.s 4 (BattleTech.Weapon)
L_092d: callvirt BattleTech.WeaponCategory get_Category()
L_0932: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0937: stloc.s 8 (System.Single)
L_0939: Label32
L_0939: ldloc.s 11 (BattleTech.ICombatant)
L_093b: ldloc.0
L_093c: ldfld BattleTech.WeaponHitInfo hitInfo
L_0941: ldloc.0
L_0942: ldflda BattleTech.WeaponHitInfo hitInfo
L_0947: ldloc.3
L_0948: call Int32 ShotHitLocation(Int32)
L_094d: ldloc.s 4 (BattleTech.Weapon)
L_094f: ldloc.s 8 (System.Single)
L_0951: ldloc.3
L_0952: ldc.i4.s 12
L_0954: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0959: ldloc.s 11 (BattleTech.ICombatant)
L_095b: ldarg.0
L_095c: ldfld BattleTech.AbstractActor attacker
L_0961: callvirt System.String get_GUID()
L_0966: callvirt Void HandleDeath(System.String)
L_096b: Label29
L_096b: Label30
L_096b: Label31
L_096b: ldarg.0
L_096c: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0971: ldloc.0
L_0972: callvirt Void MessageComplete(MessageCenterMessage)
L_0977: Label33
L_0977: Label34
L_0977: Label0
L_0977: ret
DONE

### Patch BattleTech.AbstractActor, Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.String
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Single
L_0000: ldc.r4 0
L_0005: stloc 5 (System.Single)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: ldarg.2
L_000a: ldarg.s 4
L_000c: ldarg.s 5
L_000e: call Single GetReducedDamage(Single, BattleTech.WeaponCategory, BattleTech.LineOfFireLevel, Boolean)
L_0013: stloc.0
L_0014: ldarg.3
L_0015: brtrue Label1
L_001a: ldloc.0
L_001b: br Label19
L_0020: Label1
L_0020: ldc.r4 1
L_0025: stloc.1
L_0026: ldloc.1
L_0027: stloc.2
L_0028: ldnull
L_0029: stloc.3
L_002a: ldloc.1
L_002b: ldarg.3
L_002c: ldfld System.Single allDamageTakenMultiplier
L_0031: mul
L_0032: stloc.1
L_0033: ldsfld System.String Empty
L_0038: stloc.s 4 (System.String)
L_003a: ldarg.s 5
L_003c: brfalse Label2
L_0041: ldsfld HBS.Logging.ILog damageLogger
L_0046: callvirt Boolean get_IsLogEnabled()
L_004b: brfalse Label3
L_0050: ldloc.2
L_0051: ldloc.1
L_0052: call Boolean Approximately(Single, Single)
L_0057: brtrue Label4
L_005c: ldstr "{0}'s allDamageTakenMultiplier"
L_0061: ldarg.3
L_0062: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0067: callvirt System.String get_Name()
L_006c: call System.String Format(System.String, System.Object)
L_0071: stloc.3
L_0072: ldarg.0
L_0073: ldstr "!!! Damage Multiplier (part two) now {0} from {1}"
L_0078: ldloc.1
L_0079: box System.Single
L_007e: ldloc.3
L_007f: call System.String Format(System.String, System.Object, System.Object)
L_0084: call System.String BuildLogMessage(System.String)
L_0089: stloc.s 4 (System.String)
L_008b: ldsfld HBS.Logging.ILog damageLogger
L_0090: ldloc.s 4 (System.String)
L_0092: callvirt Void Log(System.Object)
L_0097: Label2
L_0097: Label3
L_0097: Label4
L_0097: ldloc.1
L_0098: stloc.2
L_0099: ldarg.2
L_009a: ldc.i4.1
L_009b: sub
L_009c: switch Labels5,6,7,8,9,10
L_00b9: br Label11
L_00be: Label8
L_00be: ldloc.1
L_00bf: ldarg.3
L_00c0: ldfld System.Single antipersonnelDamageTakenMultiplier
L_00c5: mul
L_00c6: stloc.1
L_00c7: ldstr "{0}'s DamageReductionMultiplierAntipersonnel"
L_00cc: ldarg.3
L_00cd: callvirt BattleTech.BaseDescriptionDef get_Description()
L_00d2: callvirt System.String get_Name()
L_00d7: call System.String Format(System.String, System.Object)
L_00dc: stloc.3
L_00dd: br Label12
L_00e2: Label5
L_00e2: ldloc.1
L_00e3: ldarg.3
L_00e4: ldfld System.Single ballisticDamageTakenMultiplier
L_00e9: mul
L_00ea: stloc.1
L_00eb: ldstr "{0}'s DamageReductionMultiplierBallistic"
L_00f0: ldarg.3
L_00f1: callvirt BattleTech.BaseDescriptionDef get_Description()
L_00f6: callvirt System.String get_Name()
L_00fb: call System.String Format(System.String, System.Object)
L_0100: stloc.3
L_0101: br Label13
L_0106: Label6
L_0106: ldloc.1
L_0107: ldarg.3
L_0108: ldfld System.Single energyDamageTakenMultiplier
L_010d: mul
L_010e: stloc.1
L_010f: ldstr "{0}'s DamageReductionMultiplierEnergy"
L_0114: ldarg.3
L_0115: callvirt BattleTech.BaseDescriptionDef get_Description()
L_011a: callvirt System.String get_Name()
L_011f: call System.String Format(System.String, System.Object)
L_0124: stloc.3
L_0125: br Label14
L_012a: Label10
L_012a: ldstr "{0}'s DamageReductionMultiplierMelee"
L_012f: ldarg.3
L_0130: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0135: callvirt System.String get_Name()
L_013a: call System.String Format(System.String, System.Object)
L_013f: stloc.3
L_0140: br Label15
L_0145: Label7
L_0145: ldloc.1
L_0146: ldarg.3
L_0147: ldfld System.Single missileDamageTakenMultiplier
L_014c: mul
L_014d: stloc.1
L_014e: ldstr "{0}'s DamageReductionMultiplierMissile"
L_0153: ldarg.3
L_0154: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0159: callvirt System.String get_Name()
L_015e: call System.String Format(System.String, System.Object)
L_0163: stloc.3
L_0164: Label9
L_0164: Label11
L_0164: Label12
L_0164: Label13
L_0164: Label14
L_0164: Label15
L_0164: ldarg.s 5
L_0166: brfalse Label16
L_016b: ldsfld HBS.Logging.ILog damageLogger
L_0170: callvirt Boolean get_IsLogEnabled()
L_0175: brfalse Label17
L_017a: ldloc.2
L_017b: ldloc.1
L_017c: call Boolean Approximately(Single, Single)
L_0181: brtrue Label18
L_0186: ldarg.0
L_0187: ldstr "!!! Damage Multiplier (part two) now {0} from {1}"
L_018c: ldloc.1
L_018d: box System.Single
L_0192: ldloc.3
L_0193: call System.String Format(System.String, System.Object, System.Object)
L_0198: call System.String BuildLogMessage(System.String)
L_019d: stloc.s 4 (System.String)
L_019f: ldsfld HBS.Logging.ILog damageLogger
L_01a4: ldloc.s 4 (System.String)
L_01a6: ldarg.0
L_01a7: call BattleTech.GameRepresentation get_GameRep()
L_01ac: callvirt Void Log(System.Object, UnityEngine.Object)
L_01b1: Label16
L_01b1: Label17
L_01b1: Label18
L_01b1: ldloc.0
L_01b2: ldloc.1
L_01b3: mul
L_01b4: Label19
L_01b4: stloc 5 (System.Single)
L_01b6: ldarg.0
L_01b7: ldarg 1
L_01bd: ldarg 2
L_01c3: ldarg 3
L_01c9: ldarg 4
L_01cf: ldarg 5
L_01d5: ldloca 5 (System.Single)
L_01d7: call Void Postfix(BattleTech.AbstractActor, Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean, Single ByRef)
L_01dc: ldloc 5 (System.Single)
L_01de: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarga 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldarga 1
L_0029: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_002e: brfalse Label0
L_0033: ldarg.1
L_0034: castclass BattleTech.AttackSequenceImpactMessage
L_0039: stloc.0
L_003a: ldloc.0
L_003b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0040: ldfld System.Int32 attackSequenceId
L_0045: ldarg.0
L_0046: ldfld System.Int32 id
L_004b: beq Label1
L_0050: br Label33
L_0055: Label1
L_0055: ldloc.0
L_0056: ldflda BattleTech.WeaponHitInfo hitInfo
L_005b: ldfld System.Int32 attackGroupIndex
L_0060: stloc.1
L_0061: ldloc.0
L_0062: ldflda BattleTech.WeaponHitInfo hitInfo
L_0067: ldfld System.Int32 attackWeaponIndex
L_006c: stloc.2
L_006d: ldloc.0
L_006e: ldfld System.Int32 hitIndex
L_0073: stloc.3
L_0074: ldarg.0
L_0075: ldloc.1
L_0076: ldloc.2
L_0077: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_007c: stloc.s 4 (BattleTech.Weapon)
L_007e: ldloc.0
L_007f: ldflda BattleTech.WeaponHitInfo hitInfo
L_0084: ldloc.3
L_0085: call Int32 ShotHitLocation(Int32)
L_008a: stloc.s 5 (System.Int32)
L_008c: ldloc.0
L_008d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0092: ldfld UnityEngine.Vector3[] hitPositions
L_0097: ldloc.3
L_0098: ldelem UnityEngine.Vector3
L_009d: stloc.s 6 (UnityEngine.Vector3)
L_009f: ldloc.0
L_00a0: ldfld System.Single hitDamage
L_00a5: stloc.s 7 (System.Single)
L_00a7: ldloc.s 7 (System.Single)
L_00a9: stloc.s 8 (System.Single)
L_00ab: ldarg.0
L_00ac: call BattleTech.AttackDirector get_Director()
L_00b1: callvirt BattleTech.CombatGameState get_Combat()
L_00b6: callvirt BattleTech.ToHit get_ToHit()
L_00bb: ldloc.0
L_00bc: ldflda BattleTech.WeaponHitInfo hitInfo
L_00c1: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00c6: ldloc.3
L_00c7: ldelem.i4
L_00c8: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00cd: stloc.s 9 (System.Single)
L_00cf: ldloc.s 7 (System.Single)
L_00d1: ldloc.s 9 (System.Single)
L_00d3: mul
L_00d4: stloc.s 8 (System.Single)
L_00d6: ldloc.0
L_00d7: ldflda BattleTech.WeaponHitInfo hitInfo
L_00dc: ldfld System.String[] secondaryTargetIds
L_00e1: ldloc.3
L_00e2: ldelem.ref
L_00e3: call Boolean IsNullOrEmpty(System.String)
L_00e8: ldc.i4.0
L_00e9: ceq
L_00eb: stloc.s 10 (System.Boolean)
L_00ed: ldnull
L_00ee: stloc.s 11 (BattleTech.ICombatant)
L_00f0: ldloc.s 10 (System.Boolean)
L_00f2: brfalse Label2
L_00f7: ldarg.0
L_00f8: call BattleTech.AttackDirector get_Director()
L_00fd: callvirt BattleTech.CombatGameState get_Combat()
L_0102: ldloc.0
L_0103: ldflda BattleTech.WeaponHitInfo hitInfo
L_0108: ldfld System.String[] secondaryTargetIds
L_010d: ldloc.3
L_010e: ldelem.ref
L_010f: ldc.i4.0
L_0110: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0115: stloc.s 11 (BattleTech.ICombatant)
L_0117: Label2
L_0117: ldarg.0
L_0118: ldfld BattleTech.ICombatant chosenTarget
L_011d: isinst BattleTech.AbstractActor
L_0122: stloc.s 12 (BattleTech.AbstractActor)
L_0124: ldloc.s 12 (BattleTech.AbstractActor)
L_0126: brfalse Label3
L_012b: ldarg.0
L_012c: ldfld BattleTech.AbstractActor attacker
L_0131: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0136: ldloc.s 12 (BattleTech.AbstractActor)
L_0138: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_013d: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_013f: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0141: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0146: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0148: ldloc.s 12 (BattleTech.AbstractActor)
L_014a: ldloc.s 8 (System.Single)
L_014c: ldloc.s 4 (BattleTech.Weapon)
L_014e: callvirt BattleTech.WeaponCategory get_Category()
L_0153: ldloc.s 12 (BattleTech.AbstractActor)
L_0155: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_015a: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_015c: ldc.i4.1
L_015d: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0162: stloc.s 8 (System.Single)
L_0164: ldloc.s 12 (BattleTech.AbstractActor)
L_0166: ldloc.s 8 (System.Single)
L_0168: ldloc.s 4 (BattleTech.Weapon)
L_016a: callvirt BattleTech.WeaponCategory get_Category()
L_016f: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0174: stloc.s 8 (System.Single)
L_0176: Label3
L_0176: ldloc.s 8 (System.Single)
L_0178: ldc.r4 0
L_017d: bgt.un Label4
L_0182: ldsfld HBS.Logging.ILog attackLogger
L_0187: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_018c: ldloc.s 7 (System.Single)
L_018e: box System.Single
L_0193: ldloc.s 8 (System.Single)
L_0195: box System.Single
L_019a: call System.String Format(System.String, System.Object, System.Object)
L_019f: callvirt Void LogWarning(System.Object)
L_01a4: ldc.r4 0
L_01a9: stloc.s 8 (System.Single)
L_01ab: Label4
L_01ab: ldarg.0
L_01ac: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01b1: ldloc.0
L_01b2: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01b7: stloc.s 13 (System.Boolean)
L_01b9: ldloc.0
L_01ba: ldflda BattleTech.WeaponHitInfo hitInfo
L_01bf: ldloc.3
L_01c0: call Boolean DidShotHitChosenTarget(Int32)
L_01c5: stloc.s 14 (System.Boolean)
L_01c7: ldloc.0
L_01c8: ldfld System.Boolean hasPlayedImpact
L_01cd: brtrue Label5
L_01d2: ldsfld HBS.Logging.ILog logger
L_01d7: callvirt Boolean get_IsDebugEnabled()
L_01dc: brfalse Label6
L_01e1: ldsfld HBS.Logging.ILog logger
L_01e6: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01eb: ldc.i4.5
L_01ec: newarr System.Object
L_01f1: dup
L_01f2: ldc.i4.0
L_01f3: ldarg.0
L_01f4: ldfld System.Int32 id
L_01f9: box System.Int32
L_01fe: stelem.ref
L_01ff: dup
L_0200: ldc.i4.1
L_0201: ldloc.1
L_0202: box System.Int32
L_0207: stelem.ref
L_0208: dup
L_0209: ldc.i4.2
L_020a: ldloc.2
L_020b: box System.Int32
L_0210: stelem.ref
L_0211: dup
L_0212: ldc.i4.3
L_0213: ldloc.3
L_0214: box System.Int32
L_0219: stelem.ref
L_021a: dup
L_021b: ldc.i4.4
L_021c: ldloc.s 13 (System.Boolean)
L_021e: box System.Boolean
L_0223: stelem.ref
L_0224: call System.String Format(System.String, System.Object[])
L_0229: callvirt Void LogDebug(System.Object)
L_022e: Label6
L_022e: ldloc.0
L_022f: ldc.i4.1
L_0230: stfld System.Boolean hasPlayedImpact
L_0235: ldarg.0
L_0236: ldfld BattleTech.ICombatant chosenTarget
L_023b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0240: ldnull
L_0241: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0246: brfalse Label7
L_024b: ldloc.s 14 (System.Boolean)
L_024d: brfalse Label8
L_0252: ldarg.0
L_0253: ldfld BattleTech.ICombatant chosenTarget
L_0258: callvirt BattleTech.GameRepresentation get_GameRep()
L_025d: ldloc.0
L_025e: ldfld BattleTech.WeaponHitInfo hitInfo
L_0263: ldloc.3
L_0264: ldloc.s 4 (BattleTech.Weapon)
L_0266: ldarg.0
L_0267: ldfld BattleTech.MeleeAttackType meleeAttackType
L_026c: ldarg.0
L_026d: ldfld System.Single cumulativeDamage
L_0272: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0277: ldloc.s 6 (UnityEngine.Vector3)
L_0279: stloc.s 17 (UnityEngine.Vector3)
L_027b: ldarg.0
L_027c: ldfld BattleTech.ICombatant chosenTarget
L_0281: ldloc.s 5 (System.Int32)
L_0283: callvirt Single ArmorForLocation(Int32)
L_0288: ldloc.s 8 (System.Single)
L_028a: bge.un Label9
L_028f: ldloc.0
L_0290: ldflda BattleTech.WeaponHitInfo hitInfo
L_0295: ldfld System.String attackerId
L_029a: ldarg.0
L_029b: ldfld BattleTech.ICombatant chosenTarget
L_02a0: callvirt System.String get_GUID()
L_02a5: ldstr "{0}"
L_02aa: ldc.i4.1
L_02ab: newarr System.Object
L_02b0: dup
L_02b1: ldc.i4.0
L_02b2: ldc.r4 1
L_02b7: ldloc.s 8 (System.Single)
L_02b9: call Single Max(Single, Single)
L_02be: conv.i4
L_02bf: box System.Int32
L_02c4: stelem.ref
L_02c5: newobj Void .ctor(String, Object[])
L_02ca: ldarg.0
L_02cb: call BattleTech.AttackDirector get_Director()
L_02d0: callvirt BattleTech.CombatGameState get_Combat()
L_02d5: callvirt BattleTech.CombatGameConstants get_Constants()
L_02da: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02df: ldfld System.Single floatieSizeMedium
L_02e4: ldc.i4.8
L_02e5: ldloc.s 17 (UnityEngine.Vector3)
L_02e7: ldfld System.Single x
L_02ec: ldloc.s 17 (UnityEngine.Vector3)
L_02ee: ldfld System.Single y
L_02f3: ldloc.s 17 (UnityEngine.Vector3)
L_02f5: ldfld System.Single z
L_02fa: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02ff: stloc.s 18 (BattleTech.FloatieMessage)
L_0301: ldarg.0
L_0302: call BattleTech.AttackDirector get_Director()
L_0307: callvirt BattleTech.CombatGameState get_Combat()
L_030c: callvirt MessageCenter get_MessageCenter()
L_0311: ldloc.s 18 (BattleTech.FloatieMessage)
L_0313: callvirt Void PublishMessage(MessageCenterMessage)
L_0318: br Label10
L_031d: Label9
L_031d: ldloc.0
L_031e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0323: ldfld System.String attackerId
L_0328: ldarg.0
L_0329: ldfld BattleTech.ICombatant chosenTarget
L_032e: callvirt System.String get_GUID()
L_0333: ldstr "{0}"
L_0338: ldc.i4.1
L_0339: newarr System.Object
L_033e: dup
L_033f: ldc.i4.0
L_0340: ldc.r4 1
L_0345: ldloc.s 8 (System.Single)
L_0347: call Single Max(Single, Single)
L_034c: conv.i4
L_034d: box System.Int32
L_0352: stelem.ref
L_0353: newobj Void .ctor(String, Object[])
L_0358: ldarg.0
L_0359: call BattleTech.AttackDirector get_Director()
L_035e: callvirt BattleTech.CombatGameState get_Combat()
L_0363: callvirt BattleTech.CombatGameConstants get_Constants()
L_0368: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_036d: ldfld System.Single floatieSizeMedium
L_0372: ldc.i4.7
L_0373: ldloc.s 17 (UnityEngine.Vector3)
L_0375: ldfld System.Single x
L_037a: ldloc.s 17 (UnityEngine.Vector3)
L_037c: ldfld System.Single y
L_0381: ldloc.s 17 (UnityEngine.Vector3)
L_0383: ldfld System.Single z
L_0388: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_038d: stloc.s 19 (BattleTech.FloatieMessage)
L_038f: ldarg.0
L_0390: call BattleTech.AttackDirector get_Director()
L_0395: callvirt BattleTech.CombatGameState get_Combat()
L_039a: callvirt MessageCenter get_MessageCenter()
L_039f: ldloc.s 19 (BattleTech.FloatieMessage)
L_03a1: callvirt Void PublishMessage(MessageCenterMessage)
L_03a6: br Label11
L_03ab: Label8
L_03ab: ldarg.0
L_03ac: ldfld BattleTech.ICombatant chosenTarget
L_03b1: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03b6: call UnityEngine.Vector3 get_insideUnitSphere()
L_03bb: ldc.r4 5
L_03c0: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03c5: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03ca: stloc.s 20 (UnityEngine.Vector3)
L_03cc: ldloc.0
L_03cd: ldflda BattleTech.WeaponHitInfo hitInfo
L_03d2: ldfld System.Boolean[] dodgeSuccesses
L_03d7: ldloc.3
L_03d8: ldelem.u1
L_03d9: brfalse Label12
L_03de: ldarg.0
L_03df: ldfld BattleTech.ICombatant chosenTarget
L_03e4: callvirt BattleTech.GameRepresentation get_GameRep()
L_03e9: ldloc.0
L_03ea: ldfld BattleTech.WeaponHitInfo hitInfo
L_03ef: ldloc.3
L_03f0: ldloc.s 4 (BattleTech.Weapon)
L_03f2: ldarg.0
L_03f3: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03f8: ldarg.0
L_03f9: ldfld System.Single cumulativeDamage
L_03fe: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0403: ldloc.0
L_0404: ldflda BattleTech.WeaponHitInfo hitInfo
L_0409: ldfld System.String attackerId
L_040e: ldarg.0
L_040f: ldfld BattleTech.ICombatant chosenTarget
L_0414: callvirt System.String get_GUID()
L_0419: ldstr "EVADE"
L_041e: call System.Object[] Empty[Object]()
L_0423: newobj Void .ctor(String, Object[])
L_0428: ldarg.0
L_0429: call BattleTech.AttackDirector get_Director()
L_042e: callvirt BattleTech.CombatGameState get_Combat()
L_0433: callvirt BattleTech.CombatGameConstants get_Constants()
L_0438: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_043d: ldfld System.Single floatieSizeMedium
L_0442: ldc.i4.6
L_0443: ldloc.s 20 (UnityEngine.Vector3)
L_0445: ldfld System.Single x
L_044a: ldloc.s 20 (UnityEngine.Vector3)
L_044c: ldfld System.Single y
L_0451: ldloc.s 20 (UnityEngine.Vector3)
L_0453: ldfld System.Single z
L_0458: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_045d: stloc.s 21 (BattleTech.FloatieMessage)
L_045f: ldarg.0
L_0460: call BattleTech.AttackDirector get_Director()
L_0465: callvirt BattleTech.CombatGameState get_Combat()
L_046a: callvirt MessageCenter get_MessageCenter()
L_046f: ldloc.s 21 (BattleTech.FloatieMessage)
L_0471: callvirt Void PublishMessage(MessageCenterMessage)
L_0476: br Label13
L_047b: Label12
L_047b: ldarg.0
L_047c: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0481: brfalse Label14
L_0486: ldarg.0
L_0487: ldfld BattleTech.ICombatant chosenTarget
L_048c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0491: ldloc.0
L_0492: ldfld BattleTech.WeaponHitInfo hitInfo
L_0497: ldloc.3
L_0498: ldloc.s 4 (BattleTech.Weapon)
L_049a: ldarg.0
L_049b: ldfld BattleTech.MeleeAttackType meleeAttackType
L_04a0: ldarg.0
L_04a1: ldfld System.Single cumulativeDamage
L_04a6: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_04ab: ldloc.0
L_04ac: ldflda BattleTech.WeaponHitInfo hitInfo
L_04b1: ldfld System.String attackerId
L_04b6: ldloc.0
L_04b7: ldflda BattleTech.WeaponHitInfo hitInfo
L_04bc: ldfld System.String targetId
L_04c1: ldstr "MISS!"
L_04c6: call System.Object[] Empty[Object]()
L_04cb: newobj Void .ctor(String, Object[])
L_04d0: ldarg.0
L_04d1: call BattleTech.AttackDirector get_Director()
L_04d6: callvirt BattleTech.CombatGameState get_Combat()
L_04db: callvirt BattleTech.CombatGameConstants get_Constants()
L_04e0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04e5: ldfld System.Single floatieSizeMedium
L_04ea: ldc.i4.5
L_04eb: ldloc.s 20 (UnityEngine.Vector3)
L_04ed: ldfld System.Single x
L_04f2: ldloc.s 20 (UnityEngine.Vector3)
L_04f4: ldfld System.Single y
L_04f9: ldloc.s 20 (UnityEngine.Vector3)
L_04fb: ldfld System.Single z
L_0500: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0505: stloc.s 22 (BattleTech.FloatieMessage)
L_0507: ldarg.0
L_0508: call BattleTech.AttackDirector get_Director()
L_050d: callvirt BattleTech.CombatGameState get_Combat()
L_0512: callvirt MessageCenter get_MessageCenter()
L_0517: ldloc.s 22 (BattleTech.FloatieMessage)
L_0519: callvirt Void PublishMessage(MessageCenterMessage)
L_051e: br Label15
L_0523: Label14
L_0523: ldloc.s 4 (BattleTech.Weapon)
L_0525: callvirt Int32 get_ShotsWhenFired()
L_052a: ldc.i4.1
L_052b: bgt Label16
L_0530: ldc.i4.5
L_0531: br Label17
L_0536: Label16
L_0536: ldc.i4.4
L_0537: Label17
L_0537: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0539: ldloc.0
L_053a: ldflda BattleTech.WeaponHitInfo hitInfo
L_053f: ldfld System.String attackerId
L_0544: ldloc.0
L_0545: ldflda BattleTech.WeaponHitInfo hitInfo
L_054a: ldfld System.String targetId
L_054f: ldstr "MISS!"
L_0554: call System.Object[] Empty[Object]()
L_0559: newobj Void .ctor(String, Object[])
L_055e: ldarg.0
L_055f: call BattleTech.AttackDirector get_Director()
L_0564: callvirt BattleTech.CombatGameState get_Combat()
L_0569: callvirt BattleTech.CombatGameConstants get_Constants()
L_056e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0573: ldfld System.Single floatieSizeMedium
L_0578: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_057a: ldloc.s 20 (UnityEngine.Vector3)
L_057c: ldfld System.Single x
L_0581: ldloc.s 20 (UnityEngine.Vector3)
L_0583: ldfld System.Single y
L_0588: ldloc.s 20 (UnityEngine.Vector3)
L_058a: ldfld System.Single z
L_058f: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0594: stloc.s 24 (BattleTech.FloatieMessage)
L_0596: ldarg.0
L_0597: call BattleTech.AttackDirector get_Director()
L_059c: callvirt BattleTech.CombatGameState get_Combat()
L_05a1: callvirt MessageCenter get_MessageCenter()
L_05a6: ldloc.s 24 (BattleTech.FloatieMessage)
L_05a8: callvirt Void PublishMessage(MessageCenterMessage)
L_05ad: Label13
L_05ad: Label15
L_05ad: ldloc.s 10 (System.Boolean)
L_05af: brfalse Label18
L_05b4: ldloc.0
L_05b5: ldflda BattleTech.WeaponHitInfo hitInfo
L_05ba: ldfld System.String attackerId
L_05bf: ldloc.0
L_05c0: ldflda BattleTech.WeaponHitInfo hitInfo
L_05c5: ldfld System.String targetId
L_05ca: ldstr "STRAY SHOT"
L_05cf: call System.Object[] Empty[Object]()
L_05d4: newobj Void .ctor(String, Object[])
L_05d9: ldarg.0
L_05da: call BattleTech.AttackDirector get_Director()
L_05df: callvirt BattleTech.CombatGameState get_Combat()
L_05e4: callvirt BattleTech.CombatGameConstants get_Constants()
L_05e9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05ee: ldfld System.Single floatieSizeLarge
L_05f3: ldc.i4.5
L_05f4: ldloc.s 6 (UnityEngine.Vector3)
L_05f6: ldfld System.Single x
L_05fb: ldloc.s 6 (UnityEngine.Vector3)
L_05fd: ldfld System.Single y
L_0602: ldloc.s 6 (UnityEngine.Vector3)
L_0604: ldfld System.Single z
L_0609: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_060e: stloc.s 25 (BattleTech.FloatieMessage)
L_0610: ldarg.0
L_0611: call BattleTech.AttackDirector get_Director()
L_0616: callvirt BattleTech.CombatGameState get_Combat()
L_061b: callvirt MessageCenter get_MessageCenter()
L_0620: ldloc.s 25 (BattleTech.FloatieMessage)
L_0622: callvirt Void PublishMessage(MessageCenterMessage)
L_0627: ldloc.s 11 (BattleTech.ICombatant)
L_0629: brfalse Label19
L_062e: ldloc.s 11 (BattleTech.ICombatant)
L_0630: callvirt BattleTech.GameRepresentation get_GameRep()
L_0635: ldnull
L_0636: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_063b: brfalse Label20
L_0640: ldloc.s 11 (BattleTech.ICombatant)
L_0642: callvirt BattleTech.GameRepresentation get_GameRep()
L_0647: ldloc.0
L_0648: ldfld BattleTech.WeaponHitInfo hitInfo
L_064d: ldloc.3
L_064e: ldloc.s 4 (BattleTech.Weapon)
L_0650: ldarg.0
L_0651: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0656: ldarg.0
L_0657: ldfld System.Single cumulativeDamage
L_065c: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0661: Label20
L_0661: ldloc.s 11 (BattleTech.ICombatant)
L_0663: ldloc.s 5 (System.Int32)
L_0665: callvirt Single ArmorForLocation(Int32)
L_066a: ldloc.s 8 (System.Single)
L_066c: bge.un Label21
L_0671: ldloc.0
L_0672: ldflda BattleTech.WeaponHitInfo hitInfo
L_0677: ldfld System.String attackerId
L_067c: ldloc.s 11 (BattleTech.ICombatant)
L_067e: callvirt System.String get_GUID()
L_0683: ldstr "{0}"
L_0688: ldc.i4.1
L_0689: newarr System.Object
L_068e: dup
L_068f: ldc.i4.0
L_0690: ldc.r4 1
L_0695: ldloc.s 8 (System.Single)
L_0697: call Single Max(Single, Single)
L_069c: conv.i4
L_069d: box System.Int32
L_06a2: stelem.ref
L_06a3: newobj Void .ctor(String, Object[])
L_06a8: ldarg.0
L_06a9: call BattleTech.AttackDirector get_Director()
L_06ae: callvirt BattleTech.CombatGameState get_Combat()
L_06b3: callvirt BattleTech.CombatGameConstants get_Constants()
L_06b8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06bd: ldfld System.Single floatieSizeMedium
L_06c2: ldc.i4.8
L_06c3: ldloc.s 6 (UnityEngine.Vector3)
L_06c5: ldfld System.Single x
L_06ca: ldloc.s 6 (UnityEngine.Vector3)
L_06cc: ldfld System.Single y
L_06d1: ldloc.s 6 (UnityEngine.Vector3)
L_06d3: ldfld System.Single z
L_06d8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06dd: stloc.s 26 (BattleTech.FloatieMessage)
L_06df: ldarg.0
L_06e0: call BattleTech.AttackDirector get_Director()
L_06e5: callvirt BattleTech.CombatGameState get_Combat()
L_06ea: callvirt MessageCenter get_MessageCenter()
L_06ef: ldloc.s 26 (BattleTech.FloatieMessage)
L_06f1: callvirt Void PublishMessage(MessageCenterMessage)
L_06f6: br Label22
L_06fb: Label21
L_06fb: ldloc.0
L_06fc: ldflda BattleTech.WeaponHitInfo hitInfo
L_0701: ldfld System.String attackerId
L_0706: ldloc.s 11 (BattleTech.ICombatant)
L_0708: callvirt System.String get_GUID()
L_070d: ldstr "{0}"
L_0712: ldc.i4.1
L_0713: newarr System.Object
L_0718: dup
L_0719: ldc.i4.0
L_071a: ldc.r4 1
L_071f: ldloc.s 8 (System.Single)
L_0721: call Single Max(Single, Single)
L_0726: conv.i4
L_0727: box System.Int32
L_072c: stelem.ref
L_072d: newobj Void .ctor(String, Object[])
L_0732: ldarg.0
L_0733: call BattleTech.AttackDirector get_Director()
L_0738: callvirt BattleTech.CombatGameState get_Combat()
L_073d: callvirt BattleTech.CombatGameConstants get_Constants()
L_0742: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0747: ldfld System.Single floatieSizeMedium
L_074c: ldc.i4.7
L_074d: ldloc.s 6 (UnityEngine.Vector3)
L_074f: ldfld System.Single x
L_0754: ldloc.s 6 (UnityEngine.Vector3)
L_0756: ldfld System.Single y
L_075b: ldloc.s 6 (UnityEngine.Vector3)
L_075d: ldfld System.Single z
L_0762: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0767: stloc.s 27 (BattleTech.FloatieMessage)
L_0769: ldarg.0
L_076a: call BattleTech.AttackDirector get_Director()
L_076f: callvirt BattleTech.CombatGameState get_Combat()
L_0774: callvirt MessageCenter get_MessageCenter()
L_0779: ldloc.s 27 (BattleTech.FloatieMessage)
L_077b: callvirt Void PublishMessage(MessageCenterMessage)
L_0780: Label7
L_0780: Label10
L_0780: Label11
L_0780: Label18
L_0780: Label19
L_0780: Label22
L_0780: ldloc.s 4 (BattleTech.Weapon)
L_0782: callvirt BattleTech.WeaponType get_Type()
L_0787: ldc.i4.3
L_0788: beq Label23
L_078d: ldloc.s 4 (BattleTech.Weapon)
L_078f: callvirt BattleTech.WeaponType get_Type()
L_0794: ldc.i4.7
L_0795: beq Label24
L_079a: call BattleTech.CameraControl get_Instance()
L_079f: ldloc.s 8 (System.Single)
L_07a1: ldarg.0
L_07a2: call BattleTech.AttackDirector get_Director()
L_07a7: callvirt BattleTech.CombatGameState get_Combat()
L_07ac: callvirt BattleTech.CombatGameConstants get_Constants()
L_07b1: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07b6: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07bb: mul
L_07bc: ldarg.0
L_07bd: call BattleTech.AttackDirector get_Director()
L_07c2: callvirt BattleTech.CombatGameState get_Combat()
L_07c7: callvirt BattleTech.CombatGameConstants get_Constants()
L_07cc: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07d1: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07d6: add
L_07d7: ldc.r4 1
L_07dc: ldloc.s 6 (UnityEngine.Vector3)
L_07de: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07e3: Label5
L_07e3: Label23
L_07e3: Label24
L_07e3: ldloc.s 13 (System.Boolean)
L_07e5: brtrue Label25
L_07ea: ldarg.0
L_07eb: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07f0: ldloc.0
L_07f1: callvirt Void StoreMessage(MessageCenterMessage)
L_07f6: br Label34
L_07fb: Label25
L_07fb: ldsfld HBS.Logging.ILog logger
L_0800: callvirt Boolean get_IsLogEnabled()
L_0805: brfalse Label26
L_080a: ldsfld HBS.Logging.ILog logger
L_080f: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_0814: ldc.i4.4
L_0815: newarr System.Object
L_081a: dup
L_081b: ldc.i4.0
L_081c: ldarg.0
L_081d: ldfld System.Int32 id
L_0822: box System.Int32
L_0827: stelem.ref
L_0828: dup
L_0829: ldc.i4.1
L_082a: ldloc.1
L_082b: box System.Int32
L_0830: stelem.ref
L_0831: dup
L_0832: ldc.i4.2
L_0833: ldloc.2
L_0834: box System.Int32
L_0839: stelem.ref
L_083a: dup
L_083b: ldc.i4.3
L_083c: ldloc.3
L_083d: box System.Int32
L_0842: stelem.ref
L_0843: call System.String Format(System.String, System.Object[])
L_0848: callvirt Void Log(System.Object)
L_084d: ldsfld HBS.Logging.ILog logger
L_0852: callvirt Boolean get_IsDebugEnabled()
L_0857: brfalse Label27
L_085c: ldsfld HBS.Logging.ILog logger
L_0861: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0866: ldloc.s 4 (BattleTech.Weapon)
L_0868: callvirt System.String get_Name()
L_086d: ldarg.0
L_086e: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0873: constrained. BattleTech.MeleeAttackType
L_0879: callvirt System.String ToString()
L_087e: ldloca.s 5 (System.Int32)
L_0880: call System.String ToString()
L_0885: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_088a: callvirt Void LogDebug(System.Object)
L_088f: Label26
L_088f: Label27
L_088f: ldloc.s 14 (System.Boolean)
L_0891: brfalse Label28
L_0896: ldarg.0
L_0897: ldarg.0
L_0898: ldfld System.Single cumulativeDamage
L_089d: ldloc.s 8 (System.Single)
L_089f: add
L_08a0: stfld System.Single cumulativeDamage
L_08a5: ldarg.0
L_08a6: ldfld BattleTech.ICombatant chosenTarget
L_08ab: ldloc.0
L_08ac: ldfld BattleTech.WeaponHitInfo hitInfo
L_08b1: ldloc.s 5 (System.Int32)
L_08b3: ldloc.s 4 (BattleTech.Weapon)
L_08b5: ldloc.s 8 (System.Single)
L_08b7: ldloc.3
L_08b8: ldc.i4.s 12
L_08ba: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08bf: ldarg.0
L_08c0: ldfld BattleTech.ICombatant chosenTarget
L_08c5: ldarg.0
L_08c6: ldfld BattleTech.AbstractActor attacker
L_08cb: callvirt System.String get_GUID()
L_08d0: callvirt Void HandleDeath(System.String)
L_08d5: br Label29
L_08da: Label28
L_08da: ldloc.s 10 (System.Boolean)
L_08dc: brfalse Label30
L_08e1: ldloc.s 11 (BattleTech.ICombatant)
L_08e3: brfalse Label31
L_08e8: ldloc.s 7 (System.Single)
L_08ea: ldloc.s 9 (System.Single)
L_08ec: mul
L_08ed: stloc.s 8 (System.Single)
L_08ef: ldloc.s 11 (BattleTech.ICombatant)
L_08f1: isinst BattleTech.AbstractActor
L_08f6: stloc.s 28 (BattleTech.AbstractActor)
L_08f8: ldloc.s 28 (BattleTech.AbstractActor)
L_08fa: brfalse Label32
L_08ff: ldarg.0
L_0900: ldfld BattleTech.AbstractActor attacker
L_0905: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_090a: ldloc.s 28 (BattleTech.AbstractActor)
L_090c: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0911: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0913: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0915: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_091a: stloc.s 29 (BattleTech.LineOfFireLevel)
L_091c: ldloc.s 28 (BattleTech.AbstractActor)
L_091e: ldloc.s 8 (System.Single)
L_0920: ldloc.s 4 (BattleTech.Weapon)
L_0922: callvirt BattleTech.WeaponCategory get_Category()
L_0927: ldloc.s 28 (BattleTech.AbstractActor)
L_0929: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_092e: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_0930: ldc.i4.1
L_0931: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0936: stloc.s 8 (System.Single)
L_0938: ldloc.s 28 (BattleTech.AbstractActor)
L_093a: ldloc.s 8 (System.Single)
L_093c: ldloc.s 4 (BattleTech.Weapon)
L_093e: callvirt BattleTech.WeaponCategory get_Category()
L_0943: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0948: stloc.s 8 (System.Single)
L_094a: Label32
L_094a: ldloc.s 11 (BattleTech.ICombatant)
L_094c: ldloc.0
L_094d: ldfld BattleTech.WeaponHitInfo hitInfo
L_0952: ldloc.0
L_0953: ldflda BattleTech.WeaponHitInfo hitInfo
L_0958: ldloc.3
L_0959: call Int32 ShotHitLocation(Int32)
L_095e: ldloc.s 4 (BattleTech.Weapon)
L_0960: ldloc.s 8 (System.Single)
L_0962: ldloc.3
L_0963: ldc.i4.s 12
L_0965: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_096a: ldloc.s 11 (BattleTech.ICombatant)
L_096c: ldarg.0
L_096d: ldfld BattleTech.AbstractActor attacker
L_0972: callvirt System.String get_GUID()
L_0977: callvirt Void HandleDeath(System.String)
L_097c: Label29
L_097c: Label30
L_097c: Label31
L_097c: ldarg.0
L_097d: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0982: ldloc.0
L_0983: callvirt Void MessageComplete(MessageCenterMessage)
L_0988: Label33
L_0988: Label34
L_0988: Label0
L_0988: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void setState(MeleeSequenceState)
L_0000: Local var 0: BattleTech.Mech
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(BattleTech.MechMeleeSequence, System.IConvertible ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechMeleeSequence+MeleeSequenceState state
L_0017: ldarg.1
L_0018: bne.un Label1
L_001d: br Label9
L_0022: Label1
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: stfld BattleTech.MechMeleeSequence+MeleeSequenceState state
L_0029: ldarg.1
L_002a: ldc.i4.1
L_002b: sub
L_002c: switch Labels2,3,4,5
L_0041: br Label10
L_0046: Label2
L_0046: ldarg.0
L_0047: call Void FireWeapons()
L_004c: br Label11
L_0051: Label3
L_0051: ldarg.0
L_0052: call Void ExecuteMove()
L_0057: br Label12
L_005c: Label4
L_005c: ldarg.0
L_005d: call Void ExecuteMelee()
L_0062: br Label13
L_0067: Label5
L_0067: ldarg.0
L_0068: call BattleTech.ICombatant get_MeleeTarget()
L_006d: isinst BattleTech.Mech
L_0072: stloc.0
L_0073: ldloc.0
L_0074: brfalse Label6
L_0079: ldloc.0
L_007a: ldarg.0
L_007b: call BattleTech.Mech get_OwningMech()
L_0080: callvirt Void OnMeleed(BattleTech.Mech)
L_0085: ldloc.0
L_0086: callvirt BattleTech.MechRepresentation get_GameRep()
L_008b: ldnull
L_008c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0091: brfalse Label7
L_0096: ldloc.0
L_0097: callvirt BattleTech.MechRepresentation get_GameRep()
L_009c: ldc.i4.1
L_009d: callvirt Void SetMeleeIdleState(Boolean)
L_00a2: Label6
L_00a2: Label7
L_00a2: ldarg.0
L_00a3: call BattleTech.Mech get_OwningMech()
L_00a8: callvirt BattleTech.MechRepresentation get_GameRep()
L_00ad: ldnull
L_00ae: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00b3: brfalse Label8
L_00b8: ldarg.0
L_00b9: call BattleTech.Mech get_OwningMech()
L_00be: callvirt BattleTech.MechRepresentation get_GameRep()
L_00c3: ldc.i4.1
L_00c4: callvirt Void SetMeleeIdleState(Boolean)
L_00c9: ldarg.0
L_00ca: call BattleTech.Mech get_OwningMech()
L_00cf: callvirt BattleTech.MechRepresentation get_GameRep()
L_00d4: ldc.r4 50
L_00d9: ldc.r4 0
L_00de: ldc.r4 2
L_00e3: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_00e8: Label8
L_00e8: ldarg.0
L_00e9: ldc.i4.1
L_00ea: call Void set_OrdersAreComplete(Boolean)
L_00ef: Label9
L_00ef: Label10
L_00ef: Label11
L_00ef: Label12
L_00ef: Label13
L_00ef: Label0
L_00ef: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void BuildMeleeDirectorSequence()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldarg.0
L_000d: call BattleTech.Mech get_OwningMech()
L_0012: ldarg.0
L_0013: call BattleTech.ICombatant get_MeleeTarget()
L_0018: ldarg.0
L_0019: ldfld BattleTech.ActorMovementSequence moveSequence
L_001e: callvirt UnityEngine.Vector3 get_FinalPos()
L_0023: ldarg.0
L_0024: ldfld BattleTech.ActorMovementSequence moveSequence
L_0029: callvirt UnityEngine.Vector3 get_FinalHeading()
L_002e: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0033: newobj Void .ctor()
L_0038: dup
L_0039: ldarg.0
L_003a: call BattleTech.Mech get_OwningMech()
L_003f: ldfld BattleTech.Weapon MeleeWeapon
L_0044: callvirt Void Add(BattleTech.Weapon)
L_0049: ldarg.0
L_004a: call Boolean get_MoveIsCharge()
L_004f: brtrue Label1
L_0054: ldarg.0
L_0055: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_005a: br Label2
L_005f: Label1
L_005f: ldc.i4.5
L_0060: Label2
L_0060: ldc.i4.0
L_0061: ldc.i4.m1
L_0062: newobj Void .ctor(AbstractActor, ICombatant, Vector3, Quaternion, List`1, MeleeAttackType, Int32, Int32)
L_0067: stfld BattleTech.AttackStackSequence meleeSequence
L_006c: ldarg.0
L_006d: ldfld BattleTech.AttackStackSequence meleeSequence
L_0072: ldc.i4.0
L_0073: stfld System.Boolean willConsumeFiring
L_0078: ldarg.0
L_0079: ldfld BattleTech.AttackStackSequence meleeSequence
L_007e: ldc.i4.1
L_007f: stfld System.Boolean hasOwningSequence
L_0084: ldarg.0
L_0085: ldfld BattleTech.AttackStackSequence meleeSequence
L_008a: ldarg.0
L_008b: call Int32 get_RootSequenceGUID()
L_0090: callvirt Void set_RootSequenceGUID(Int32)
L_0095: ldarg.0
L_0096: call BattleTech.CameraSequence get_cameraSequence()
L_009b: brfalse Label3
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.AttackStackSequence meleeSequence
L_00a6: ldarg.0
L_00a7: call BattleTech.CameraSequence get_cameraSequence()
L_00ac: ldarg.0
L_00ad: call Int32 get_MessageIndex()
L_00b2: callvirt Void SetCamera(BattleTech.CameraSequence, Int32)
L_00b7: Label3
L_00b7: Label0
L_00b7: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void ExecuteMelee()
L_0000: Local var 0: System.Boolean
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "MeleeSequence ExecuteMelee: attack is charge? "
L_000a: ldarg.0
L_000b: call Boolean get_MoveIsCharge()
L_0010: stloc.0
L_0011: ldloca.s 0 (System.Boolean)
L_0013: call System.String ToString()
L_0018: call System.String Concat(System.String, System.String)
L_001d: callvirt Void Log(System.Object)
L_0022: ldarg.0
L_0023: call Void BuildMeleeDirectorSequence()
L_0028: ldarg.0
L_0029: call Void BuildWeaponDirectorSequence()
L_002e: ldarg.0
L_002f: call BattleTech.Mech get_OwningMech()
L_0034: callvirt BattleTech.MechRepresentation get_GameRep()
L_0039: ldnull
L_003a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_003f: brfalse Label1
L_0044: ldarg.0
L_0045: call BattleTech.Mech get_OwningMech()
L_004a: callvirt BattleTech.MechRepresentation get_GameRep()
L_004f: ldc.i4.1
L_0050: ldc.r4 0.5
L_0055: ldarg.0
L_0056: call Int32 get_RootSequenceGUID()
L_005b: ldarg.0
L_005c: call Int32 get_SequenceGUID()
L_0061: ldnull
L_0062: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_0067: Label1
L_0067: ldarg.0
L_0068: call BattleTech.Mech get_OwningMech()
L_006d: callvirt BattleTech.MechRepresentation get_GameRep()
L_0072: ldnull
L_0073: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0078: brfalse Label2
L_007d: ldarg.0
L_007e: call BattleTech.Mech get_OwningMech()
L_0083: callvirt BattleTech.MechRepresentation get_GameRep()
L_0088: ldc.r4 0
L_008d: ldc.r4 50
L_0092: ldc.r4 1
L_0097: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_009c: Label2
L_009c: ldarg.0
L_009d: call BattleTech.CombatGameState get_Combat()
L_00a2: callvirt MessageCenter get_MessageCenter()
L_00a7: ldc.i4.s 40
L_00a9: ldarg.0
L_00aa: ldftn Void OnMeleeComplete(MessageCenterMessage)
L_00b0: newobj Void .ctor(Object, IntPtr)
L_00b5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ba: ldarg.0
L_00bb: call BattleTech.CombatGameState get_Combat()
L_00c0: callvirt MessageCenter get_MessageCenter()
L_00c5: ldc.i4.s 33
L_00c7: ldarg.0
L_00c8: ldftn Void OnMeleeReady(MessageCenterMessage)
L_00ce: newobj Void .ctor(Object, IntPtr)
L_00d3: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00d8: ldarg.0
L_00d9: call BattleTech.CombatGameState get_Combat()
L_00de: callvirt MessageCenter get_MessageCenter()
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.AttackStackSequence meleeSequence
L_00e9: newobj Void .ctor(IStackSequence)
L_00ee: callvirt Void PublishMessage(MessageCenterMessage)
L_00f3: ldarg.0
L_00f4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00f9: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "MeleeSequence CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: call BattleTech.Mech get_OwningMech()
L_0020: callvirt BattleTech.MechRepresentation get_GameRep()
L_0025: ldnull
L_0026: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_002b: pop
L_002c: ldarg.0
L_002d: call BattleTech.ICombatant get_MeleeTarget()
L_0032: ldarg.0
L_0033: ldfld BattleTech.AbstractActor owningActor
L_0038: callvirt System.String get_GUID()
L_003d: callvirt Void HandleDeath(System.String)
L_0042: ldarg.0
L_0043: call BattleTech.ICombatant get_MeleeTarget()
L_0048: callvirt Boolean get_IsDead()
L_004d: brtrue Label1
L_0052: ldarg.0
L_0053: call BattleTech.ICombatant get_MeleeTarget()
L_0058: isinst BattleTech.AbstractActor
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label2
L_0064: ldloc.0
L_0065: callvirt Boolean CheckForInstability()
L_006a: pop
L_006b: ldloc.0
L_006c: ldarg.0
L_006d: call Int32 get_RootSequenceGUID()
L_0072: ldarg.0
L_0073: ldfld BattleTech.AbstractActor owningActor
L_0078: callvirt System.String get_GUID()
L_007d: call UnityEngine.Vector2 get_one()
L_0082: ldnull
L_0083: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0088: Label1
L_0088: Label2
L_0088: Label0
L_0088: ldarg.0
L_0089: call Void Postfix(BattleTech.MechMeleeSequence)
L_008e: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void GenerateMeleePath()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_MoveIsCharge(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.Mech get_OwningMech()
L_000d: callvirt BattleTech.Pathing get_Pathing()
L_0012: callvirt Void SetWalking()
L_0017: ldarg.0
L_0018: call BattleTech.Mech get_OwningMech()
L_001d: callvirt BattleTech.Pathing get_Pathing()
L_0022: ldarg.0
L_0023: call BattleTech.ICombatant get_MeleeTarget()
L_0028: isinst BattleTech.AbstractActor
L_002d: callvirt Void SetMeleeTarget(BattleTech.AbstractActor)
L_0032: ldarg.0
L_0033: call BattleTech.Mech get_OwningMech()
L_0038: callvirt BattleTech.Pathing get_Pathing()
L_003d: ldarg.0
L_003e: call UnityEngine.Vector3 get_DesiredMeleePosition()
L_0043: callvirt Void SelectMeleeDest(UnityEngine.Vector3)
L_0048: ldarg.0
L_0049: call BattleTech.Mech get_OwningMech()
L_004e: callvirt BattleTech.Pathing get_Pathing()
L_0053: ldarg.0
L_0054: call BattleTech.ICombatant get_MeleeTarget()
L_0059: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_005e: ldc.i4.0
L_005f: callvirt Void Update(UnityEngine.Vector3, Boolean)
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: call BattleTech.Mech get_OwningMech()
L_006b: newobj Void .ctor(AbstractActor)
L_0070: stfld BattleTech.ActorMovementSequence moveSequence
L_0075: ldarg.0
L_0076: ldfld BattleTech.ActorMovementSequence moveSequence
L_007b: ldarg.0
L_007c: call Boolean get_MoveIsCharge()
L_0081: stfld System.Boolean IgnoreEndSmoothing
L_0086: ldarg.0
L_0087: ldfld BattleTech.ActorMovementSequence moveSequence
L_008c: ldarg.0
L_008d: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0092: stfld BattleTech.MeleeAttackType meleeType
L_0097: ldarg.0
L_0098: ldfld BattleTech.ActorMovementSequence moveSequence
L_009d: ldc.i4.1
L_009e: stfld System.Boolean hasOwningSequence
L_00a3: ldarg.0
L_00a4: call BattleTech.Mech get_OwningMech()
L_00a9: callvirt BattleTech.Pathing get_Pathing()
L_00ae: callvirt Void ClearMeleeTarget()
L_00b3: ldarg.0
L_00b4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00b9: ret
DONE

### Patch BattleTech.ActorMovementSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.PilotableActorRepresentation
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_OwningActor()
L_0006: callvirt BattleTech.GameRepresentation get_GameRep()
L_000b: ldnull
L_000c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: call Boolean get_isVehicle()
L_001c: brfalse Label2
L_0021: ldarg.0
L_0022: call BattleTech.Vehicle get_OwningVehicle()
L_0027: callvirt BattleTech.VehicleRepresentation get_GameRep()
L_002c: callvirt Void PlayMovementStopAudio()
L_0031: Label2
L_0031: ldarg.0
L_0032: call BattleTech.AbstractActor get_OwningActor()
L_0037: callvirt BattleTech.Team get_team()
L_003c: ldarg.0
L_003d: call BattleTech.AbstractActor get_OwningActor()
L_0042: callvirt BattleTech.CombatGameState get_Combat()
L_0047: callvirt BattleTech.Team get_LocalPlayerTeam()
L_004c: callvirt Boolean IsFriendly(BattleTech.Team)
L_0051: brtrue Label3
L_0056: ldarg.0
L_0057: call BattleTech.AbstractActor get_OwningActor()
L_005c: callvirt BattleTech.CombatGameState get_Combat()
L_0061: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0066: ldarg.0
L_0067: call BattleTech.AbstractActor get_OwningActor()
L_006c: callvirt BattleTech.VisibilityLevel VisibilityToTarget(BattleTech.ICombatant)
L_0071: ldc.i4.s 9
L_0073: bne.un Label4
L_0078: Label3
L_0078: ldarg.0
L_0079: call BattleTech.AbstractActor get_OwningActor()
L_007e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0083: isinst BattleTech.PilotableActorRepresentation
L_0088: stloc.0
L_0089: ldloc.0
L_008a: ldnull
L_008b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0090: brfalse Label5
L_0095: ldloc.0
L_0096: ldarg.0
L_0097: ldfld System.Single throttleAudioValue
L_009c: ldc.r4 0
L_00a1: ldc.r4 2
L_00a6: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_00ab: br Label6
L_00b0: Label4
L_00b0: ldc.i4 389
L_00b5: ldc.r4 0
L_00ba: ldarg.0
L_00bb: call BattleTech.AbstractActor get_OwningActor()
L_00c0: callvirt BattleTech.GameRepresentation get_GameRep()
L_00c5: ldfld AkGameObj audioObject
L_00ca: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_00cf: Label1
L_00cf: Label5
L_00cf: Label6
L_00cf: ldarg.0
L_00d0: call Boolean get_isSprinting()
L_00d5: brfalse Label7
L_00da: ldarg.0
L_00db: call BattleTech.AbstractActor get_OwningActor()
L_00e0: ldarg.0
L_00e1: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_00e6: ldarg.0
L_00e7: call UnityEngine.Vector3 get_FinalPos()
L_00ec: ldarg.0
L_00ed: call UnityEngine.Vector3 get_FinalHeading()
L_00f2: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_00f7: ldarg.0
L_00f8: call Int32 get_SequenceGUID()
L_00fd: ldarg.0
L_00fe: ldfld System.Collections.Generic.List`1[BattleTech.DesignMaskDef] stickyMasks
L_0103: callvirt Void OnSprintComplete(System.Collections.Generic.List`1[BattleTech.WayPoint], UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.DesignMaskDef])
L_0108: br Label8
L_010d: Label7
L_010d: ldarg.0
L_010e: call BattleTech.AbstractActor get_OwningActor()
L_0113: ldarg.0
L_0114: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_0119: ldarg.0
L_011a: call UnityEngine.Vector3 get_FinalPos()
L_011f: ldarg.0
L_0120: call UnityEngine.Vector3 get_FinalHeading()
L_0125: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_012a: ldarg.0
L_012b: call Int32 get_SequenceGUID()
L_0130: ldarg.0
L_0131: ldfld System.Collections.Generic.List`1[BattleTech.DesignMaskDef] stickyMasks
L_0136: ldarg.0
L_0137: call Boolean get_IsMelee()
L_013c: callvirt Void OnMoveComplete(System.Collections.Generic.List`1[BattleTech.WayPoint], UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.DesignMaskDef], Boolean)
L_0141: Label8
L_0141: ldarg.0
L_0142: call UnityEngine.Animator get_ThisAnimator()
L_0147: ldnull
L_0148: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_014d: brfalse Label9
L_0152: ldarg.0
L_0153: call UnityEngine.Animator get_ThisAnimator()
L_0158: ldc.r4 1
L_015d: callvirt Void set_speed(Single)
L_0162: Label9
L_0162: ldarg.0
L_0163: call BattleTech.CombatGameState get_Combat()
L_0168: callvirt MessageCenter get_MessageCenter()
L_016d: ldc.i4.s 112
L_016f: ldarg.0
L_0170: ldftn Void OnBlipAcquired(MessageCenterMessage)
L_0176: newobj Void .ctor(Object, IntPtr)
L_017b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0180: ldarg.0
L_0181: call BattleTech.CombatGameState get_Combat()
L_0186: callvirt MessageCenter get_MessageCenter()
L_018b: ldc.i4.s 78
L_018d: ldarg.0
L_018e: ldftn Void OnPlayerVisChanged(MessageCenterMessage)
L_0194: newobj Void .ctor(Object, IntPtr)
L_0199: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_019e: ldarg.0
L_019f: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01a4: callvirt Void Clear()
L_01a9: ldarg.0
L_01aa: ldfld HBS.Pooling.GameObjectPool`1[FluffyUnderware.Curvy.CurvySpline] availableSplines
L_01af: ldarg.0
L_01b0: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01b5: callvirt Void PoolComponent(FluffyUnderware.Curvy.CurvySpline)
L_01ba: ldarg.0
L_01bb: ldfld System.Boolean adjustedPlayerCamera
L_01c0: brfalse Label10
L_01c5: ldarg.0
L_01c6: call BattleTech.CombatGameState get_Combat()
L_01cb: callvirt BattleTech.Team get_LocalPlayerTeam()
L_01d0: callvirt Boolean get_AreAnyActorsMoving()
L_01d5: brtrue Label11
L_01da: ldarg.0
L_01db: call Void RestorePlayerCamera()
L_01e0: Label10
L_01e0: Label11
L_01e0: ldarg.0
L_01e1: ldc.i4.0
L_01e2: stfld System.Boolean adjustedPlayerCamera
L_01e7: ldarg.0
L_01e8: call Void Postfix(BattleTech.ActorMovementSequence)
L_01ed: ret
DONE

### Patch BattleTech.MechJumpSequence, Void CompleteOrders()
L_0000: ldarg.0
L_0001: call BattleTech.Mech get_OwningMech()
L_0006: ldarg.0
L_0007: call UnityEngine.Vector3 get_FinalPos()
L_000c: ldarg.0
L_000d: call UnityEngine.Quaternion get_FinalHeading()
L_0012: ldarg.0
L_0013: call Int32 get_RootSequenceGUID()
L_0018: callvirt Void OnJumpComplete(UnityEngine.Vector3, UnityEngine.Quaternion, Int32)
L_001d: ldarg.0
L_001e: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0023: callvirt Void Clear()
L_0028: ldarg.0
L_0029: ldfld HBS.Pooling.GameObjectPool`1[FluffyUnderware.Curvy.CurvySpline] availableSplines
L_002e: ldarg.0
L_002f: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0034: callvirt Void PoolComponent(FluffyUnderware.Curvy.CurvySpline)
L_0039: ldarg.0
L_003a: ldfld BattleTech.AbstractActor owningActor
L_003f: callvirt BattleTech.CombatGameState get_Combat()
L_0044: callvirt BattleTech.Data.DataManager get_DataManager()
L_0049: ldstr "JumpjetCurves"
L_004e: ldarg.0
L_004f: ldfld UnityEngine.GameObject jumpjetCurvePrefab
L_0054: callvirt Void PoolGameObject(System.String, UnityEngine.GameObject)
L_0059: ldarg.0
L_005a: call Void Postfix(BattleTech.MechJumpSequence)
L_005f: ret
DONE

### Patch BattleTech.MechDFASequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "DFA CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: ldfld BattleTech.AbstractActor owningActor
L_0020: ldarg.0
L_0021: ldfld BattleTech.AbstractActor owningActor
L_0026: callvirt System.String get_GUID()
L_002b: callvirt Void HandleDeath(System.String)
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor owningActor
L_0036: callvirt Boolean get_IsDead()
L_003b: brtrue Label1
L_0040: ldarg.0
L_0041: ldfld BattleTech.AbstractActor owningActor
L_0046: ldarg.0
L_0047: call Int32 get_RootSequenceGUID()
L_004c: ldarg.0
L_004d: ldfld BattleTech.AbstractActor owningActor
L_0052: callvirt System.String get_GUID()
L_0057: call UnityEngine.Vector2 get_one()
L_005c: ldnull
L_005d: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0062: Label1
L_0062: ldarg.0
L_0063: call BattleTech.ICombatant get_DFATarget()
L_0068: ldarg.0
L_0069: ldfld BattleTech.AbstractActor owningActor
L_006e: callvirt System.String get_GUID()
L_0073: callvirt Void HandleDeath(System.String)
L_0078: ldarg.0
L_0079: call BattleTech.ICombatant get_DFATarget()
L_007e: callvirt Boolean get_IsDead()
L_0083: brtrue Label2
L_0088: ldarg.0
L_0089: call BattleTech.ICombatant get_DFATarget()
L_008e: isinst BattleTech.AbstractActor
L_0093: stloc.0
L_0094: ldloc.0
L_0095: brfalse Label3
L_009a: ldloc.0
L_009b: callvirt Boolean CheckForInstability()
L_00a0: pop
L_00a1: ldloc.0
L_00a2: ldarg.0
L_00a3: call Int32 get_RootSequenceGUID()
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AbstractActor owningActor
L_00ae: callvirt System.String get_GUID()
L_00b3: call UnityEngine.Vector2 get_one()
L_00b8: ldnull
L_00b9: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_00be: Label2
L_00be: Label3
L_00be: Label0
L_00be: ldarg.0
L_00bf: call Void Postfix(BattleTech.MechDFASequence)
L_00c4: ret
DONE

### Patch BattleTech.AbstractActor, Void OnActivationEnd(System.String, Int32)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AbstractActor)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldarg 2
L_0013: call Boolean Prefix(BattleTech.AbstractActor, System.String, Int32)
L_0018: brfalse Label0
L_001d: ldsfld HBS.Logging.ILog attackLogger
L_0022: ldstr "[OnActivationEnd] {1} {2} HasActivatedThisRound {0}"
L_0027: ldarg.0
L_0028: call Boolean get_HasActivatedThisRound()
L_002d: box System.Boolean
L_0032: ldarg.0
L_0033: callvirt System.String get_UnitName()
L_0038: ldarg.0
L_0039: call System.String get_GUID()
L_003e: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0043: callvirt Void LogDebug(System.Object)
L_0048: ldarg.0
L_0049: call Boolean get_HasActivatedThisRound()
L_004e: brfalse Label1
L_0053: br Label10
L_0058: Label1
L_0058: ldarg.0
L_0059: call Void LogActivationComplete()
L_005e: ldarg.0
L_005f: ldc.i4.1
L_0060: call Void set_HasActivatedThisRound(Boolean)
L_0065: ldarg.0
L_0066: ldc.i4.0
L_0067: call Void set_IsCompletingActivation(Boolean)
L_006c: ldarg.0
L_006d: ldc.i4.0
L_006e: call Void set_IsAttacking(Boolean)
L_0073: ldarg.0
L_0074: callvirt Boolean get_IsProne()
L_0079: brfalse Label2
L_007e: ldarg.0
L_007f: call BattleTech.StatCollection get_StatCollection()
L_0084: ldstr "PhaseModifier"
L_0089: ldc.i4.1
L_008a: ldarg.0
L_008b: ldfld BattleTech.StatCollection statCollection
L_0090: ldstr "PhaseModifierSelf"
L_0095: callvirt Int32 GetValue[Int32](System.String)
L_009a: add
L_009b: callvirt Boolean Set[Int32](System.String, Int32)
L_00a0: pop
L_00a1: br Label3
L_00a6: Label2
L_00a6: ldarg.0
L_00a7: call BattleTech.StatCollection get_StatCollection()
L_00ac: ldstr "PhaseModifier"
L_00b1: ldarg.0
L_00b2: ldfld BattleTech.StatCollection statCollection
L_00b7: ldstr "PhaseModifierSelf"
L_00bc: callvirt Int32 GetValue[Int32](System.String)
L_00c1: callvirt Boolean Set[Int32](System.String, Int32)
L_00c6: pop
L_00c7: Label3
L_00c7: ldarg.0
L_00c8: call BattleTech.StatCollection get_StatCollection()
L_00cd: ldstr "PhaseModifierSelf"
L_00d2: ldc.i4.0
L_00d3: callvirt Boolean Set[Int32](System.String, Int32)
L_00d8: pop
L_00d9: ldarg.0
L_00da: call Boolean get_HasMovedThisRound()
L_00df: brtrue Label4
L_00e4: ldarg.0
L_00e5: ldc.r4 0
L_00ea: call Void set_DistMovedThisRound(Single)
L_00ef: ldarg.0
L_00f0: ldc.i4.0
L_00f1: call Void set_JumpedLastRound(Boolean)
L_00f6: ldarg.0
L_00f7: ldc.i4.0
L_00f8: call Void set_MeleeAttackedLastRound(Boolean)
L_00fd: ldarg.0
L_00fe: ldc.i4.0
L_00ff: call Void set_SprintedLastRound(Boolean)
L_0104: ldarg.0
L_0105: ldc.i4.0
L_0106: call Void set_MovedLastRound(Boolean)
L_010b: Label4
L_010b: ldarg.0
L_010c: callvirt BattleTech.Pilot GetPilot()
L_0111: stloc.0
L_0112: ldloc.0
L_0113: brfalse Label5
L_0118: ldloc.0
L_0119: ldarg.1
L_011a: ldarg.2
L_011b: callvirt Void OnActivationEnd(System.String, Int32)
L_0120: Label5
L_0120: ldarg.0
L_0121: ldc.i4.0
L_0122: call Void ResetPathing(Boolean)
L_0127: ldarg.0
L_0128: call BattleTech.CombatGameState get_Combat()
L_012d: callvirt MessageCenter get_MessageCenter()
L_0132: ldarg.0
L_0133: call System.String get_GUID()
L_0138: newobj Void .ctor(String)
L_013d: callvirt Void PublishMessage(MessageCenterMessage)
L_0142: ldarg.0
L_0143: call BattleTech.CombatGameState get_Combat()
L_0148: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call UnityEngine.Vector3 get_CurrentPosition()
L_0154: ldc.i4.6
L_0155: ldc.i4.1
L_0156: call Void UpdateAurasToActor(System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.EffectTriggerType, Boolean)
L_015b: ldc.i4.0
L_015c: stloc.1
L_015d: br Label6
L_0162: Label7
L_0162: ldarg.0
L_0163: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0168: ldloc.1
L_0169: callvirt BattleTech.Ability get_Item(Int32)
L_016e: ldarg.1
L_016f: ldarg.2
L_0170: callvirt Void OnActivationComplete(System.String, Int32)
L_0175: ldloc.1
L_0176: ldc.i4.1
L_0177: add
L_0178: stloc.1
L_0179: Label6
L_0179: ldloc.1
L_017a: ldarg.0
L_017b: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0180: callvirt Int32 get_Count()
L_0185: blt Label7
L_018a: ldarg.0
L_018b: call BattleTech.Team get_team()
L_0190: ldarg.0
L_0191: call System.String get_GUID()
L_0196: ldc.i4.0
L_0197: callvirt Void OnTurnActorActivationComplete(System.String, Boolean)
L_019c: ldarg.0
L_019d: call BattleTech.CombatGameState get_Combat()
L_01a2: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01a7: callvirt Boolean get_IsAnyAttackSequenceActive()
L_01ac: brfalse Label8
L_01b1: ldarg.0
L_01b2: call BattleTech.CombatGameState get_Combat()
L_01b7: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01bc: ldarg.0
L_01bd: callvirt System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] GetAllAttackSequencesWithAttacker(BattleTech.ICombatant)
L_01c2: callvirt Int32 get_Count()
L_01c7: ldc.i4.0
L_01c8: ble Label9
L_01cd: ldsfld HBS.Logging.ILog attackLogger
L_01d2: ldstr "ERROR! There is an attack still active on the Attack Director."
L_01d7: callvirt Void LogError(System.Object)
L_01dc: Label8
L_01dc: Label9
L_01dc: ldarg.0
L_01dd: ldarg.0
L_01de: call BattleTech.CombatGameState get_Combat()
L_01e3: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] GetAllLivingCombatants()
L_01e8: callvirt Void UpdateVisibilityCache(System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01ed: Label10
L_01ed: Label0
L_01ed: ret
DONE

### Patch BattleTech.UI.MoveStatusPreview, Void DisplayPreviewStatus(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.MoveType)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MapEncounterLayerDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.DesignMaskDef
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Boolean
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: Localize.Text
L_0000: Local var 6: Localize.Text
L_0000: Local var 7: Localize.Text
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: call BattleTech.UI.CombatHUD get_HUD()
L_000d: callvirt BattleTech.CombatGameState get_Combat()
L_0012: callvirt BattleTech.EncounterLayerData get_EncounterLayerData()
L_0017: ldarg.2
L_0018: callvirt BattleTech.MapEncounterLayerDataCell GetCellAt(UnityEngine.Vector3)
L_001d: callvirt Void Add(BattleTech.MapEncounterLayerDataCell)
L_0022: ldarg.0
L_0023: ldfld BattleTech.UI.CombatHUDStatusPanel PreviewStatusPanel
L_0028: ldarg.1
L_0029: ldloc.0
L_002a: ldarg.3
L_002b: ldarg.2
L_002c: callvirt Void ShowPreviewStatuses(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.MapEncounterLayerDataCell], BattleTech.MoveType, UnityEngine.Vector3)
L_0031: ldarg.1
L_0032: callvirt BattleTech.CombatGameState get_Combat()
L_0037: callvirt BattleTech.MapMetaData get_MapMetaData()
L_003c: ldloc.0
L_003d: ldc.i4.0
L_003e: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0043: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0048: callvirt BattleTech.DesignMaskDef GetPriorityDesignMask(BattleTech.MapTerrainDataCell)
L_004d: stloc.1
L_004e: ldloc.0
L_004f: ldc.i4.0
L_0050: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0055: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_005a: ldfld BattleTech.TerrainMaskFlags terrainMask
L_005f: call Boolean IsDropshipLandingZone(BattleTech.TerrainMaskFlags)
L_0064: stloc.2
L_0065: ldloc.0
L_0066: ldc.i4.0
L_0067: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_006c: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0071: ldfld BattleTech.TerrainMaskFlags terrainMask
L_0076: call Boolean IsDropPodLandingZone(BattleTech.TerrainMaskFlags)
L_007b: stloc.3
L_007c: ldloc.0
L_007d: ldc.i4.0
L_007e: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0083: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0088: ldfld BattleTech.TerrainMaskFlags terrainMask
L_008d: call Boolean IsDangerousLocation(BattleTech.TerrainMaskFlags)
L_0092: stloc.s 4 (System.Boolean)
L_0094: ldloc.1
L_0095: ldnull
L_0096: cgt.un
L_0098: ldloc.2
L_0099: or
L_009a: ldloc.3
L_009b: or
L_009c: ldloc.s 4 (System.Boolean)
L_009e: or
L_009f: brfalse Label1
L_00a4: newobj Void .ctor()
L_00a9: stloc.s 5 (Localize.Text)
L_00ab: newobj Void .ctor()
L_00b0: stloc.s 6 (Localize.Text)
L_00b2: ldloc.s 4 (System.Boolean)
L_00b4: brfalse Label2
L_00b9: ldarg.0
L_00ba: call BattleTech.UI.CombatHUD get_HUD()
L_00bf: callvirt BattleTech.CombatGameState get_Combat()
L_00c4: callvirt BattleTech.CombatGameConstants get_Constants()
L_00c9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_00ce: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_00d3: callvirt System.String get_Name()
L_00d8: call System.Object[] Empty[Object]()
L_00dd: newobj Void .ctor(String, Object[])
L_00e2: stloc.s 6 (Localize.Text)
L_00e4: ldarg.0
L_00e5: call BattleTech.UI.CombatHUD get_HUD()
L_00ea: callvirt BattleTech.CombatGameState get_Combat()
L_00ef: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f4: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_00f9: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_00fe: callvirt System.String get_Details()
L_0103: call System.Object[] Empty[Object]()
L_0108: newobj Void .ctor(String, Object[])
L_010d: stloc.s 5 (Localize.Text)
L_010f: ldloc.2
L_0110: brfalse Label3
L_0115: ldstr "{0}
{1}"
L_011a: ldc.i4.2
L_011b: newarr System.Object
L_0120: dup
L_0121: ldc.i4.0
L_0122: ldloc.s 5 (Localize.Text)
L_0124: stelem.ref
L_0125: dup
L_0126: ldc.i4.1
L_0127: ldarg.0
L_0128: call BattleTech.UI.CombatHUD get_HUD()
L_012d: callvirt BattleTech.CombatGameState get_Combat()
L_0132: callvirt BattleTech.CombatGameConstants get_Constants()
L_0137: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_013c: ldfld BattleTech.BaseDescriptionDef DrophipLocationDesc
L_0141: callvirt System.String get_Details()
L_0146: stelem.ref
L_0147: newobj Void .ctor(String, Object[])
L_014c: stloc.s 5 (Localize.Text)
L_014e: br Label4
L_0153: Label3
L_0153: ldloc.3
L_0154: brfalse Label5
L_0159: ldstr "{0}
{1}"
L_015e: ldc.i4.2
L_015f: newarr System.Object
L_0164: dup
L_0165: ldc.i4.0
L_0166: ldloc.s 5 (Localize.Text)
L_0168: stelem.ref
L_0169: dup
L_016a: ldc.i4.1
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUD get_HUD()
L_0171: callvirt BattleTech.CombatGameState get_Combat()
L_0176: callvirt BattleTech.CombatGameConstants get_Constants()
L_017b: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0180: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0185: callvirt System.String get_Details()
L_018a: stelem.ref
L_018b: newobj Void .ctor(String, Object[])
L_0190: stloc.s 5 (Localize.Text)
L_0192: br Label6
L_0197: Label2
L_0197: ldloc.2
L_0198: brfalse Label7
L_019d: ldarg.0
L_019e: call BattleTech.UI.CombatHUD get_HUD()
L_01a3: callvirt BattleTech.CombatGameState get_Combat()
L_01a8: callvirt BattleTech.CombatGameConstants get_Constants()
L_01ad: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_01b2: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_01b7: callvirt System.String get_Name()
L_01bc: call System.Object[] Empty[Object]()
L_01c1: newobj Void .ctor(String, Object[])
L_01c6: stloc.s 6 (Localize.Text)
L_01c8: ldarg.0
L_01c9: call BattleTech.UI.CombatHUD get_HUD()
L_01ce: callvirt BattleTech.CombatGameState get_Combat()
L_01d3: callvirt BattleTech.CombatGameConstants get_Constants()
L_01d8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_01dd: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_01e2: callvirt System.String get_Details()
L_01e7: call System.Object[] Empty[Object]()
L_01ec: newobj Void .ctor(String, Object[])
L_01f1: stloc.s 5 (Localize.Text)
L_01f3: ldloc.s 4 (System.Boolean)
L_01f5: brfalse Label8
L_01fa: ldstr "{0}
{1}"
L_01ff: ldc.i4.2
L_0200: newarr System.Object
L_0205: dup
L_0206: ldc.i4.0
L_0207: ldloc.s 5 (Localize.Text)
L_0209: stelem.ref
L_020a: dup
L_020b: ldc.i4.1
L_020c: ldarg.0
L_020d: call BattleTech.UI.CombatHUD get_HUD()
L_0212: callvirt BattleTech.CombatGameState get_Combat()
L_0217: callvirt BattleTech.CombatGameConstants get_Constants()
L_021c: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0221: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_0226: callvirt System.String get_Details()
L_022b: stelem.ref
L_022c: newobj Void .ctor(String, Object[])
L_0231: stloc.s 5 (Localize.Text)
L_0233: br Label9
L_0238: Label7
L_0238: ldloc.3
L_0239: brfalse Label10
L_023e: ldarg.0
L_023f: call BattleTech.UI.CombatHUD get_HUD()
L_0244: callvirt BattleTech.CombatGameState get_Combat()
L_0249: callvirt BattleTech.CombatGameConstants get_Constants()
L_024e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0253: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0258: callvirt System.String get_Name()
L_025d: call System.Object[] Empty[Object]()
L_0262: newobj Void .ctor(String, Object[])
L_0267: stloc.s 6 (Localize.Text)
L_0269: ldarg.0
L_026a: call BattleTech.UI.CombatHUD get_HUD()
L_026f: callvirt BattleTech.CombatGameState get_Combat()
L_0274: callvirt BattleTech.CombatGameConstants get_Constants()
L_0279: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_027e: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0283: callvirt System.String get_Details()
L_0288: call System.Object[] Empty[Object]()
L_028d: newobj Void .ctor(String, Object[])
L_0292: stloc.s 5 (Localize.Text)
L_0294: ldloc.s 4 (System.Boolean)
L_0296: brfalse Label11
L_029b: ldstr "{0}
{1}"
L_02a0: ldc.i4.2
L_02a1: newarr System.Object
L_02a6: dup
L_02a7: ldc.i4.0
L_02a8: ldloc.s 5 (Localize.Text)
L_02aa: stelem.ref
L_02ab: dup
L_02ac: ldc.i4.1
L_02ad: ldarg.0
L_02ae: call BattleTech.UI.CombatHUD get_HUD()
L_02b3: callvirt BattleTech.CombatGameState get_Combat()
L_02b8: callvirt BattleTech.CombatGameConstants get_Constants()
L_02bd: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02c2: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_02c7: callvirt System.String get_Details()
L_02cc: stelem.ref
L_02cd: newobj Void .ctor(String, Object[])
L_02d2: stloc.s 5 (Localize.Text)
L_02d4: br Label12
L_02d9: Label10
L_02d9: ldloc.1
L_02da: brfalse Label13
L_02df: ldloc.1
L_02e0: callvirt BattleTech.BaseDescriptionDef get_Description()
L_02e5: callvirt System.String get_Name()
L_02ea: call System.Object[] Empty[Object]()
L_02ef: newobj Void .ctor(String, Object[])
L_02f4: stloc.s 6 (Localize.Text)
L_02f6: ldarg.0
L_02f7: ldloc.1
L_02f8: call System.String GetDesignMaskDetails(BattleTech.DesignMaskDef)
L_02fd: call System.Object[] Empty[Object]()
L_0302: newobj Void .ctor(String, Object[])
L_0307: stloc.s 5 (Localize.Text)
L_0309: Label4
L_0309: Label5
L_0309: Label6
L_0309: Label8
L_0309: Label9
L_0309: Label11
L_0309: Label12
L_0309: Label13
L_0309: ldnull
L_030a: stloc.s 7 (Localize.Text)
L_030c: ldarg.0
L_030d: call BattleTech.UI.CombatHUDInfoSidePanel get_sidePanel()
L_0312: ldloc.s 6 (Localize.Text)
L_0314: ldloc.s 5 (Localize.Text)
L_0316: ldloc.s 7 (Localize.Text)
L_0318: ldloc.2
L_0319: ldloc.s 4 (System.Boolean)
L_031b: or
L_031c: callvirt Void ForceShowSingleFrame(Localize.Text, Localize.Text, Localize.Text, Boolean)
L_0321: Label1
L_0321: ldarg.3
L_0322: ldc.i4.1
L_0323: sub
L_0324: switch Labels14,15,16,17,18
L_033d: br Label19
L_0342: Label17
L_0342: ldarg.0
L_0343: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_0348: ldarg.0
L_0349: call BattleTech.UI.CombatHUD get_HUD()
L_034e: callvirt BattleTech.UI.CombatHUDActionButton get_JumpButton()
L_0353: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_0358: callvirt System.String get_text()
L_035d: call System.Object[] Empty[Object]()
L_0362: callvirt Void SetText(System.String, System.Object[])
L_0367: br Label20
L_036c: Label15
L_036c: ldarg.0
L_036d: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_0372: ldarg.0
L_0373: call BattleTech.UI.CombatHUD get_HUD()
L_0378: callvirt BattleTech.UI.CombatHUDActionButton get_SprintButton()
L_037d: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_0382: callvirt System.String get_text()
L_0387: call System.Object[] Empty[Object]()
L_038c: callvirt Void SetText(System.String, System.Object[])
L_0391: br Label21
L_0396: Label14
L_0396: ldarg.0
L_0397: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_039c: ldarg.0
L_039d: call BattleTech.UI.CombatHUD get_HUD()
L_03a2: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_03a7: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_03ac: callvirt System.String get_text()
L_03b1: call System.Object[] Empty[Object]()
L_03b6: callvirt Void SetText(System.String, System.Object[])
L_03bb: br Label22
L_03c0: Label18
L_03c0: ldarg.0
L_03c1: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_03c6: ldarg.0
L_03c7: call BattleTech.UI.CombatHUD get_HUD()
L_03cc: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_03d1: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_03d6: callvirt System.String get_text()
L_03db: call System.Object[] Empty[Object]()
L_03e0: callvirt Void SetText(System.String, System.Object[])
L_03e5: br Label23
L_03ea: Label19
L_03ea: ldarg.0
L_03eb: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_03f0: ldstr ""
L_03f5: call System.Object[] Empty[Object]()
L_03fa: callvirt Void SetText(System.String, System.Object[])
L_03ff: Label16
L_03ff: Label20
L_03ff: Label21
L_03ff: Label22
L_03ff: Label23
L_03ff: ldarg.0
L_0400: ldarg 1
L_0406: ldarg 2
L_040c: ldarg 3
L_0412: call Void Postfix(BattleTech.UI.MoveStatusPreview, BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.MoveType)
L_0417: ret
DONE

### Patch BattleTech.MapMetaData, BattleTech.DesignMaskDef GetPriorityDesignMask(BattleTech.MapTerrainDataCell)
L_0000: Local var 0: BattleTech.TerrainMaskFlags
L_0000: Local var 1: BattleTech.DesignMaskDef
L_0000: Local var 2: System.Exception
L_0000: Local var 3: BattleTech.DesignMaskDef
L_0000: ldnull
L_0001: stloc 3 (BattleTech.DesignMaskDef)
L_0002: ldc.i4.0
L_0003: stloc.0
.try
{
	L_0004: ldarg.1
	L_0005: ldarg.0
	L_0006: stfld BattleTech.MapMetaData mapMetaData
	L_000b: ldarg.1
	L_000c: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
	L_0011: stloc.0
	L_0012: ldloc.0
	L_0013: brfalse Label1
	L_0018: ldarg.0
	L_0019: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.DesignMaskDef] designMaskDefs
	L_001e: ldloc.0
	L_001f: callvirt BattleTech.DesignMaskDef get_Item(Int32)
	L_0024: stloc.1
	L_0025: leave Label2
	L_002a: Label1
	L_002a: leave Label3
	L_002f: leave (autogenerated)
} // end try
.catch System.Exception
{
	L_0034: stloc.2
	L_0035: ldsfld HBS.Logging.ILog logger
	L_003a: ldstr "Caught exception while looking for terrainMask[{0}] in the designMaskDefs"
	L_003f: ldloc.0
	L_0040: box BattleTech.TerrainMaskFlags
	L_0045: call System.String Format(System.String, System.Object)
	L_004a: callvirt Void LogError(System.Object)
	L_004f: ldsfld HBS.Logging.ILog logger
	L_0054: ldloc.2
	L_0055: callvirt Void LogException(System.Exception)
	L_005a: leave Label4
	L_005f: leave (autogenerated)
} // end handler
L_0064: Label3
L_0064: Label4
L_0064: ldnull
L_0065: br Label6
L_006a: Label2
L_006a: ldloc.1
L_006b: Label6
L_006b: stloc 3 (BattleTech.DesignMaskDef)
L_006c: ldarg.0
L_006d: ldarg 1
L_0073: ldloca 3 (BattleTech.DesignMaskDef)
L_0075: call Void Postfix(BattleTech.MapMetaData, BattleTech.MapTerrainDataCell, BattleTech.DesignMaskDef ByRef)
L_007a: ldloc 3 (BattleTech.DesignMaskDef)
L_007b: ret
DONE

### Patch BattleTech.MapTerrainDataCell, AudioSwitch_surface_type GetAudioSurfaceType()
L_0000: Local var 0: AudioSwitch_surface_type
L_0000: Local var 1: BattleTech.TerrainMaskFlags
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.DesignMaskDef
L_0000: Local var 4: AudioSwitch_surface_type
L_0000: ldc.i4 0
L_0005: stloc 4 (AudioSwitch_surface_type)
L_0007: ldc.i4.0
L_0008: stloc.0
L_0009: ldarg.0
L_000a: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
L_000f: stloc.1
L_0010: call Boolean get_HasInstance()
L_0015: brfalse Label1
L_001a: call BattleTech.Rendering.Mood.MoodController get_Instance()
L_001f: callvirt Boolean IsRaining()
L_0024: br Label2
L_0029: Label1
L_0029: ldc.i4.0
L_002a: Label2
L_002a: stloc.2
L_002b: ldarg.0
L_002c: ldfld BattleTech.MapEncounterLayerDataCell mapEncounterLayerDataCell
L_0031: callvirt BattleTech.BuildingRaycastHit GetTopmostBuilding()
L_0036: ldnull
L_0037: cgt.un
L_0039: ldarg.0
L_003a: ldfld BattleTech.MapMetaData mapMetaData
L_003f: ldloc.1
L_0040: callvirt BattleTech.DesignMaskDef GetDesignMask(BattleTech.TerrainMaskFlags)
L_0045: stloc.3
L_0046: brfalse Label3
L_004b: ldloc.1
L_004c: ldc.i4.8
L_004d: beq Label4
L_0052: ldloc.1
L_0053: ldc.i4 256
L_0058: beq Label5
L_005d: ldloc.1
L_005e: ldc.i4.s 16
L_0060: beq Label6
L_0065: ldc.i4.7
L_0066: stloc.0
L_0067: br Label7
L_006c: Label3
L_006c: Label4
L_006c: Label5
L_006c: Label6
L_006c: ldloc.1
L_006d: ldc.i4 1024
L_0072: bne.un Label8
L_0077: ldc.i4.8
L_0078: stloc.0
L_0079: br Label9
L_007e: Label8
L_007e: ldloc.2
L_007f: brfalse Label10
L_0084: ldloc.3
L_0085: ldfld AudioSwitch_surface_type audioSwitchRainingSurfaceType
L_008a: stloc.0
L_008b: br Label11
L_0090: Label10
L_0090: ldloc.3
L_0091: ldfld AudioSwitch_surface_type audioSwitchSurfaceType
L_0096: stloc.0
L_0097: Label7
L_0097: Label9
L_0097: Label11
L_0097: ldloc.0
L_0098: stloc 4 (AudioSwitch_surface_type)
L_009a: ldarg.0
L_009b: ldloca 4 (AudioSwitch_surface_type)
L_009d: call Void Postfix(BattleTech.MapTerrainDataCell, AudioSwitch_surface_type ByRef)
L_00a2: ldloc 4 (AudioSwitch_surface_type)
L_00a4: ret
DONE

### Patch BattleTech.MapTerrainDataCell, System.String GetVFXNameModifier()
L_0000: Local var 0: BattleTech.TerrainMaskFlags
L_0000: Local var 1: System.String
L_0000: ldnull
L_0001: stloc 1 (System.String)
L_0002: ldarg.0
L_0003: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
L_0008: stloc.0
L_0009: ldarg.0
L_000a: ldfld BattleTech.MapMetaData mapMetaData
L_000f: ldloc.0
L_0010: callvirt BattleTech.DesignMaskDef GetDesignMask(BattleTech.TerrainMaskFlags)
L_0015: ldfld System.String vfxNameModifier
L_001a: stloc 1 (System.String)
L_001b: ldarg.0
L_001c: ldloca 1 (System.String)
L_001e: call Void Postfix(BattleTech.MapTerrainDataCell, System.String ByRef)
L_0023: ldloc 1 (System.String)
L_0024: ret
DONE

### Patch BattleTech.MapMetaData, Void Load(HBS.Util.SerializationStream, BattleTech.Data.DataManager)
L_0000: Local var 0: BattleTech.Data.LoadRequest
L_0000: Local var 1: System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.TerrainMaskFlags, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.String
L_0000: ldarg.0
L_0001: ldarg.2
L_0002: stfld BattleTech.Data.DataManager dataManager
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: call Void Load(HBS.Util.SerializationStream)
L_000e: ldarg.0
L_000f: newobj Void .ctor()
L_0014: stfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0019: ldarg.0
L_001a: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_001f: ldstr "DesignMaskImpassable"
L_0024: ldc.i4 512
L_0029: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_002e: ldarg.0
L_002f: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0034: ldstr "DesignMaskDestroyedBuilding"
L_0039: ldc.i4 1024
L_003e: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0043: ldarg.0
L_0044: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0049: ldarg.0
L_004a: ldfld System.String waterDesignMaskName
L_004f: ldc.i4.8
L_0050: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0055: ldarg.0
L_0056: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_005b: ldarg.0
L_005c: ldfld System.String deepWaterDesignMaskName
L_0061: ldc.i4 256
L_0066: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_006b: ldarg.0
L_006c: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0071: ldarg.0
L_0072: ldfld System.String roughDesignMaskName
L_0077: ldc.i4.s 32
L_0079: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_007e: ldarg.0
L_007f: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0084: ldarg.0
L_0085: ldfld System.String roadDesignMaskName
L_008a: ldc.i4 128
L_008f: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0094: ldarg.0
L_0095: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_009a: ldarg.0
L_009b: ldfld System.String forestDesignMaskName
L_00a0: ldc.i4.s 16
L_00a2: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00a7: ldarg.0
L_00a8: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ad: ldarg.0
L_00ae: ldfld System.String customDesignMaskName
L_00b3: ldc.i4.s 64
L_00b5: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00ba: ldarg.0
L_00bb: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00c0: ldstr "DesignMaskMapBoundary"
L_00c5: ldc.i4 2048
L_00ca: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00cf: ldarg.0
L_00d0: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00d5: ldstr "DesignMaskDropshipLandingZone"
L_00da: ldc.i4 4096
L_00df: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00e4: ldarg.0
L_00e5: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ea: ldstr "DesignMaskDropPodLandingZone"
L_00ef: ldc.i4 32768
L_00f4: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00f9: ldarg.0
L_00fa: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ff: ldstr "DesignMaskDangerousLocation"
L_0104: ldc.i4 8192
L_0109: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_010e: ldarg.0
L_010f: newobj Void .ctor()
L_0114: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.DesignMaskDef] designMaskDefs
L_0119: ldarg.2
L_011a: ldnull
L_011b: ldc.i4.0
L_011c: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_0121: stloc.0
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0128: callvirt KeyCollection get_Keys()
L_012d: callvirt Enumerator GetEnumerator()
L_0132: stloc.1
.try
{
	L_0133: br Label1
	L_0138: Label2
	L_0138: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_013a: call System.String get_Current()
	L_013f: stloc.2
	L_0140: ldloc.0
	L_0141: ldc.i4.s 22
	L_0143: ldloc.2
	L_0144: ldarg.0
	L_0145: ldftn Void TrackLoadedMaskDef(System.String, BattleTech.DesignMaskDef)
	L_014b: newobj Void .ctor(Object, IntPtr)
	L_0150: ldc.i4.0
	L_0151: callvirt Void AddLoadRequest[DesignMaskDef](BattleTech.BattleTechResourceType, System.String, System.Action`2[System.String,BattleTech.DesignMaskDef], Boolean)
	L_0156: Label1
	L_0156: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_0158: call Boolean MoveNext()
	L_015d: brtrue Label2
	L_0162: leave Label3
	L_0167: leave (autogenerated)
} // end try
.finally
{
	L_016c: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_016e: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags]
	L_0174: callvirt Void Dispose()
	L_0179: endfinally
	L_017a: leave (autogenerated)
} // end handler
L_017b: Label3
L_017b: ldarg.0
L_017c: ldfld System.String biomeDesignMaskName
L_0181: call Boolean IsNullOrEmpty(System.String)
L_0186: brfalse Label4
L_018b: ldsfld HBS.Logging.ILog logger
L_0190: ldstr "NULL or Empty BiomeDesignMaskName from biome {0}. Any active level load will hang indefinitely."
L_0195: ldarg.0
L_0196: ldflda Biome+BIOMESKIN biomeSkin
L_019b: constrained. Biome+BIOMESKIN
L_01a1: callvirt System.String ToString()
L_01a6: call System.String Format(System.String, System.Object)
L_01ab: callvirt Void LogError(System.Object)
L_01b0: br Label5
L_01b5: Label4
L_01b5: ldloc.0
L_01b6: ldc.i4.s 22
L_01b8: ldarg.0
L_01b9: ldfld System.String biomeDesignMaskName
L_01be: ldarg.0
L_01bf: ldftn Void TrackLoadedMaskDef(System.String, BattleTech.DesignMaskDef)
L_01c5: newobj Void .ctor(Object, IntPtr)
L_01ca: ldc.i4.0
L_01cb: callvirt Void AddLoadRequest[DesignMaskDef](BattleTech.BattleTechResourceType, System.String, System.Action`2[System.String,BattleTech.DesignMaskDef], Boolean)
L_01d0: Label5
L_01d0: ldarg.0
L_01d1: ldc.i4.1
L_01d2: stfld System.Boolean loadRequested
L_01d7: ldloc.0
L_01d8: ldc.i4.s 10
L_01da: callvirt Void ProcessRequests(UInt32)
L_01df: ldarg.0
L_01e0: ldarg 1
L_01e6: ldarg 2
L_01ec: call Void Postfix(BattleTech.MapMetaData, HBS.Util.SerializationStream, BattleTech.Data.DataManager)
L_01f1: ret
DONE

### Patch BattleTech.MapMetaData, Void Load(HBS.Util.SerializationStream)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.EncounterLayerIdentifier
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: callvirt System.String GetString()
L_0007: stfld System.String mapName
L_000c: ldarg.0
L_000d: ldarg.1
L_000e: callvirt System.String GetString()
L_0013: stfld System.String biomeDesignMaskName
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: callvirt System.String GetString()
L_001f: stfld System.String waterDesignMaskName
L_0024: ldarg.0
L_0025: ldarg.1
L_0026: callvirt System.String GetString()
L_002b: stfld System.String deepWaterDesignMaskName
L_0030: ldarg.0
L_0031: ldarg.1
L_0032: callvirt System.String GetString()
L_0037: stfld System.String forestDesignMaskName
L_003c: ldarg.0
L_003d: ldarg.1
L_003e: callvirt System.String GetString()
L_0043: stfld System.String roughDesignMaskName
L_0048: ldarg.0
L_0049: ldarg.1
L_004a: callvirt System.String GetString()
L_004f: stfld System.String customDesignMaskName
L_0054: ldarg.0
L_0055: ldarg.1
L_0056: callvirt System.String GetString()
L_005b: stfld System.String roadDesignMaskName
L_0060: ldarg.1
L_0061: callvirt Int32 GetInt()
L_0066: pop
L_0067: ldarg.1
L_0068: callvirt Int32 GetInt()
L_006d: stloc.0
L_006e: ldarg.1
L_006f: callvirt Int32 GetInt()
L_0074: stloc.1
L_0075: ldarg.0
L_0076: ldloc.1
L_0077: ldloc.0
L_0078: newobj Void .ctor(Int32, Int32)
L_007d: stfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0082: ldc.i4.0
L_0083: stloc.3
L_0084: br Label1
L_0089: Label4
L_0089: ldc.i4.0
L_008a: stloc.s 4 (System.Int32)
L_008c: br Label2
L_0091: Label3
L_0091: ldarg.0
L_0092: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0097: ldloc.3
L_0098: ldloc.s 4 (System.Int32)
L_009a: newobj Void .ctor()
L_009f: call Void Set(Int32, Int32, BattleTech.MapTerrainDataCell)
L_00a4: ldarg.0
L_00a5: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00aa: ldloc.3
L_00ab: ldloc.s 4 (System.Int32)
L_00ad: call BattleTech.MapTerrainDataCell Get(Int32, Int32)
L_00b2: ldarg.1
L_00b3: callvirt Void Load(HBS.Util.SerializationStream)
L_00b8: ldarg.0
L_00b9: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00be: ldloc.3
L_00bf: ldloc.s 4 (System.Int32)
L_00c1: call BattleTech.MapTerrainDataCell Get(Int32, Int32)
L_00c6: ldarg.0
L_00c7: stfld BattleTech.MapMetaData mapMetaData
L_00cc: ldloc.s 4 (System.Int32)
L_00ce: ldc.i4.1
L_00cf: add
L_00d0: stloc.s 4 (System.Int32)
L_00d2: Label2
L_00d2: ldloc.s 4 (System.Int32)
L_00d4: ldloc.0
L_00d5: blt Label3
L_00da: ldloc.3
L_00db: ldc.i4.1
L_00dc: add
L_00dd: stloc.3
L_00de: Label1
L_00de: ldloc.3
L_00df: ldloc.1
L_00e0: blt Label4
L_00e5: ldarg.0
L_00e6: newobj Void .ctor()
L_00eb: stfld System.Collections.Generic.List`1[BattleTech.EncounterLayerIdentifier] encounterLayerIdentifierList
L_00f0: ldarg.1
L_00f1: callvirt Int32 GetInt()
L_00f6: stloc.2
L_00f7: ldc.i4.0
L_00f8: stloc.s 5 (System.Int32)
L_00fa: br Label5
L_00ff: Label6
L_00ff: newobj Void .ctor()
L_0104: stloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0106: ldloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0108: ldarg.1
L_0109: callvirt Void Load(HBS.Util.SerializationStream)
L_010e: ldarg.0
L_010f: ldfld System.Collections.Generic.List`1[BattleTech.EncounterLayerIdentifier] encounterLayerIdentifierList
L_0114: ldloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0116: callvirt Void Add(BattleTech.EncounterLayerIdentifier)
L_011b: ldloc.s 5 (System.Int32)
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.s 5 (System.Int32)
L_0121: Label5
L_0121: ldloc.s 5 (System.Int32)
L_0123: ldloc.2
L_0124: blt Label6
L_0129: ldarg.0
L_012a: newobj Void .ctor()
L_012f: stfld HBS.Collections.TagSet mapTags
L_0134: ldarg.0
L_0135: ldfld HBS.Collections.TagSet mapTags
L_013a: ldarg.1
L_013b: callvirt Void Load(HBS.Util.SerializationStream)
.try
{
	L_0140: ldarg.0
	L_0141: ldarg.1
	L_0142: callvirt BIOMESKIN GetEnum[BIOMESKIN]()
	L_0147: stfld Biome+BIOMESKIN biomeSkin
	L_014c: ldstr "MapMetaData - successfully loaded biomeskin "
	L_0151: ldarg.0
	L_0152: ldflda Biome+BIOMESKIN biomeSkin
	L_0157: constrained. Biome+BIOMESKIN
	L_015d: callvirt System.String ToString()
	L_0162: call System.String Concat(System.String, System.String)
	L_0167: call Void Log(System.Object)
	L_016c: leave Label7
	L_0171: leave (autogenerated)
} // end try
.catch System.Object
{
	L_0176: pop
	L_0177: ldstr "PROBLEM - This map needs to be reexported. It doesn't have the enumeration for biomeSkin stored in it's binary data. Loading with a biome that does NOT support Ice..."
	L_017c: call Void LogWarning(System.Object)
	L_0181: ldarg.0
	L_0182: ldc.i4.0
	L_0183: stfld Biome+BIOMESKIN biomeSkin
	L_0188: leave Label8
	L_018d: leave (autogenerated)
} // end handler
L_0192: Label7
L_0192: Label8
L_0192: ldarg.0
L_0193: ldfld Biome+BIOMESKIN biomeSkin
L_0198: stsfld Biome+BIOMESKIN staticBiomeSkin
L_019d: ldarg.0
L_019e: ldfld Biome+BIOMESKIN biomeSkin
L_01a3: call Void RefreshIsWaterIce(BIOMESKIN)
L_01a8: ldarg.0
L_01a9: ldarg 1
L_01af: call Void Postfix(BattleTech.MapMetaData, HBS.Util.SerializationStream)
L_01b4: ret
DONE

### Patch BattleTech.TurnDirector, Void EndCurrentRound()
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.AutoCompleteSequence
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AddSequenceToStackMessage
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "--- ending round "
L_000a: ldarg.0
L_000b: call Int32 get_CurrentRound()
L_0010: box System.Int32
L_0015: ldstr " ---"
L_001a: call System.String Concat(System.Object, System.Object, System.Object)
L_001f: callvirt Void Log(System.Object)
L_0024: ldarg.0
L_0025: call BattleTech.CombatGameState get_Combat()
L_002a: callvirt MessageCenter get_MessageCenter()
L_002f: ldarg.0
L_0030: call Int32 get_CurrentRound()
L_0035: ldsfld System.String Empty
L_003a: newobj Void .ctor(Int32, String)
L_003f: callvirt Void PublishMessage(MessageCenterMessage)
L_0044: newobj Void .ctor()
L_0049: stloc.0
L_004a: ldc.i4.0
L_004b: stloc.2
L_004c: br Label1
L_0051: Label2
L_0051: ldloc.0
L_0052: ldarg.0
L_0053: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_0058: ldloc.2
L_0059: callvirt BattleTech.TurnActor get_Item(Int32)
L_005e: ldarg.0
L_005f: call Int32 get_CurrentRound()
L_0064: callvirt System.Collections.Generic.List`1[BattleTech.IStackSequence] OnRoundEnd(Int32)
L_0069: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.IStackSequence])
L_006e: ldloc.2
L_006f: ldc.i4.1
L_0070: add
L_0071: stloc.2
L_0072: Label1
L_0072: ldloc.2
L_0073: ldarg.0
L_0074: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_0079: callvirt Int32 get_Count()
L_007e: blt Label2
L_0083: ldarg.0
L_0084: call BattleTech.CombatGameState get_Combat()
L_0089: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_008e: ldc.i4.1
L_008f: call Void UpdateAllAuras(System.Collections.Generic.List`1[BattleTech.AbstractActor], Boolean)
L_0094: ldarg.0
L_0095: ldstr "OnRoundEnd"
L_009a: ldarg.0
L_009b: ldftn Void OnRoundEndComplete()
L_00a1: newobj Void .ctor(Object, IntPtr)
L_00a6: call Boolean CheckAndFixStack(System.String, BattleTech.SequenceFinished)
L_00ab: stloc.1
L_00ac: ldloc.0
L_00ad: callvirt Int32 get_Count()
L_00b2: brtrue Label3
L_00b7: ldloc.1
L_00b8: brtrue Label4
L_00bd: ldarg.0
L_00be: call Void OnRoundEndComplete()
L_00c3: br Label8
L_00c8: Label3
L_00c8: ldloc.1
L_00c9: brtrue Label5
L_00ce: ldarg.0
L_00cf: call BattleTech.CombatGameState get_Combat()
L_00d4: ldarg.0
L_00d5: ldftn Void OnRoundEndComplete()
L_00db: newobj Void .ctor(Object, IntPtr)
L_00e0: newobj Void .ctor(CombatGameState, SequenceFinished)
L_00e5: stloc.3
L_00e6: ldarg.0
L_00e7: call BattleTech.CombatGameState get_Combat()
L_00ec: callvirt MessageCenter get_MessageCenter()
L_00f1: ldloc.3
L_00f2: newobj Void .ctor(IStackSequence)
L_00f7: callvirt Void PublishMessage(MessageCenterMessage)
L_00fc: Label5
L_00fc: ldc.i4.0
L_00fd: stloc.s 4 (System.Int32)
L_00ff: br Label6
L_0104: Label7
L_0104: ldloc.0
L_0105: ldloc.s 4 (System.Int32)
L_0107: callvirt BattleTech.IStackSequence get_Item(Int32)
L_010c: newobj Void .ctor(IStackSequence)
L_0111: stloc.s 5 (BattleTech.AddSequenceToStackMessage)
L_0113: ldarg.0
L_0114: call BattleTech.CombatGameState get_Combat()
L_0119: callvirt MessageCenter get_MessageCenter()
L_011e: ldloc.s 5 (BattleTech.AddSequenceToStackMessage)
L_0120: callvirt Void PublishMessage(MessageCenterMessage)
L_0125: ldloc.s 4 (System.Int32)
L_0127: ldc.i4.1
L_0128: add
L_0129: stloc.s 4 (System.Int32)
L_012b: Label6
L_012b: ldloc.s 4 (System.Int32)
L_012d: ldloc.0
L_012e: callvirt Int32 get_Count()
L_0133: blt Label7
L_0138: Label4
L_0138: Label8
L_0138: ldarg.0
L_0139: call Void Postfix(BattleTech.TurnDirector)
L_013e: ret
DONE

### Patch BattleTech.Rendering.Trees.TreeContainer, Void GatherTrees()
L_0000: Local var 0: UnityEngine.TreeInstance[]
L_0000: Local var 1: UnityEngine.TreePrototype[]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Quaternion
L_0000: Local var 5: UnityEngine.Vector3
L_0000: Local var 6: UnityEngine.Matrix4x4
L_0000: Local var 7: BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject
L_0000: Local var 8: System.Int32
L_0000: ldarg.0
L_0001: call UnityEngine.Terrain get_terrain()
L_0006: callvirt UnityEngine.TerrainData get_terrainData()
L_000b: callvirt UnityEngine.TreeInstance[] get_treeInstances()
L_0010: stloc.0
L_0011: ldarg.0
L_0012: call UnityEngine.Terrain get_terrain()
L_0017: callvirt UnityEngine.TerrainData get_terrainData()
L_001c: callvirt UnityEngine.TreePrototype[] get_treePrototypes()
L_0021: stloc.1
L_0022: ldarg.0
L_0023: ldloc.0
L_0024: ldlen
L_0025: conv.i4
L_0026: newobj Void .ctor(Int32)
L_002b: stfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_0030: ldc.i4.0
L_0031: stloc.2
L_0032: br Label1
L_0037: Label5
L_0037: ldloc.1
L_0038: ldloc.0
L_0039: ldloc.2
L_003a: ldelema UnityEngine.TreeInstance
L_003f: ldfld System.Int32 prototypeIndex
L_0044: ldelem.ref
L_0045: callvirt UnityEngine.GameObject get_prefab()
L_004a: ldnull
L_004b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0050: brtrue Label2
L_0055: ldloc.0
L_0056: ldloc.2
L_0057: ldelema UnityEngine.TreeInstance
L_005c: ldfld UnityEngine.Vector3 position
L_0061: stloc.3
L_0062: ldloca.s 3 (UnityEngine.Vector3)
L_0064: ldloc.3
L_0065: ldfld System.Single x
L_006a: ldarg.0
L_006b: call UnityEngine.Terrain get_terrain()
L_0070: callvirt UnityEngine.TerrainData get_terrainData()
L_0075: callvirt UnityEngine.Vector3 get_size()
L_007a: ldfld System.Single x
L_007f: mul
L_0080: ldarg.0
L_0081: call UnityEngine.Terrain get_terrain()
L_0086: callvirt UnityEngine.Transform get_transform()
L_008b: callvirt UnityEngine.Vector3 get_position()
L_0090: ldfld System.Single x
L_0095: add
L_0096: stfld System.Single x
L_009b: ldloca.s 3 (UnityEngine.Vector3)
L_009d: ldloc.3
L_009e: ldfld System.Single y
L_00a3: ldarg.0
L_00a4: call UnityEngine.Terrain get_terrain()
L_00a9: callvirt UnityEngine.TerrainData get_terrainData()
L_00ae: callvirt UnityEngine.Vector3 get_size()
L_00b3: ldfld System.Single y
L_00b8: mul
L_00b9: ldarg.0
L_00ba: call UnityEngine.Terrain get_terrain()
L_00bf: callvirt UnityEngine.Transform get_transform()
L_00c4: callvirt UnityEngine.Vector3 get_position()
L_00c9: ldfld System.Single y
L_00ce: add
L_00cf: stfld System.Single y
L_00d4: ldloca.s 3 (UnityEngine.Vector3)
L_00d6: ldloc.3
L_00d7: ldfld System.Single z
L_00dc: ldarg.0
L_00dd: call UnityEngine.Terrain get_terrain()
L_00e2: callvirt UnityEngine.TerrainData get_terrainData()
L_00e7: callvirt UnityEngine.Vector3 get_size()
L_00ec: ldfld System.Single z
L_00f1: mul
L_00f2: ldarg.0
L_00f3: call UnityEngine.Terrain get_terrain()
L_00f8: callvirt UnityEngine.Transform get_transform()
L_00fd: callvirt UnityEngine.Vector3 get_position()
L_0102: ldfld System.Single z
L_0107: add
L_0108: stfld System.Single z
L_010d: ldc.r4 0
L_0112: ldloc.0
L_0113: ldloc.2
L_0114: ldelema UnityEngine.TreeInstance
L_0119: ldfld System.Single rotation
L_011e: ldc.r4 57.29578
L_0123: mul
L_0124: ldc.r4 0
L_0129: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_012e: stloc.s 4 (UnityEngine.Quaternion)
L_0130: ldloca.s 5 (UnityEngine.Vector3)
L_0132: ldloc.0
L_0133: ldloc.2
L_0134: ldelema UnityEngine.TreeInstance
L_0139: ldfld System.Single widthScale
L_013e: ldloc.0
L_013f: ldloc.2
L_0140: ldelema UnityEngine.TreeInstance
L_0145: ldfld System.Single heightScale
L_014a: ldloc.0
L_014b: ldloc.2
L_014c: ldelema UnityEngine.TreeInstance
L_0151: ldfld System.Single widthScale
L_0156: call Void .ctor(Single, Single, Single)
L_015b: ldloc.3
L_015c: ldloc.s 4 (UnityEngine.Quaternion)
L_015e: ldloc.s 5 (UnityEngine.Vector3)
L_0160: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0165: stloc.s 6 (UnityEngine.Matrix4x4)
L_0167: newobj Void .ctor()
L_016c: stloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_016e: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0170: ldloc.0
L_0171: ldloc.2
L_0172: ldelema UnityEngine.TreeInstance
L_0177: ldfld System.Int32 prototypeIndex
L_017c: stfld System.Int32 treeInstance
L_0181: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0183: ldloc.3
L_0184: stfld UnityEngine.Vector3 position
L_0189: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_018b: ldloc.s 4 (UnityEngine.Quaternion)
L_018d: stfld UnityEngine.Quaternion rotation
L_0192: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0194: ldloc.s 5 (UnityEngine.Vector3)
L_0196: stfld UnityEngine.Vector3 lossyScale
L_019b: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_019d: ldloc.s 6 (UnityEngine.Matrix4x4)
L_019f: stfld UnityEngine.Matrix4x4 trs
L_01a4: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01a6: ldc.i4.8
L_01a7: newarr UnityEngine.Vector3
L_01ac: stfld UnityEngine.Vector3[] distantPosition
L_01b1: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01b3: ldc.i4.8
L_01b4: newarr UnityEngine.Matrix4x4
L_01b9: stfld UnityEngine.Matrix4x4[] distantTrs
L_01be: ldc.i4.0
L_01bf: stloc.s 8 (System.Int32)
L_01c1: br Label3
L_01c6: Label4
L_01c6: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01c8: ldfld UnityEngine.Vector3[] distantPosition
L_01cd: ldloc.s 8 (System.Int32)
L_01cf: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_01d4: ldloc.s 8 (System.Int32)
L_01d6: ldelema UnityEngine.Matrix4x4
L_01db: ldloc.3
L_01dc: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_01e1: stelem UnityEngine.Vector3
L_01e6: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01e8: ldfld UnityEngine.Matrix4x4[] distantTrs
L_01ed: ldloc.s 8 (System.Int32)
L_01ef: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01f1: ldfld UnityEngine.Vector3[] distantPosition
L_01f6: ldloc.s 8 (System.Int32)
L_01f8: ldelem UnityEngine.Vector3
L_01fd: ldloc.s 4 (UnityEngine.Quaternion)
L_01ff: ldloc.s 5 (UnityEngine.Vector3)
L_0201: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0206: stelem UnityEngine.Matrix4x4
L_020b: ldloc.s 8 (System.Int32)
L_020d: ldc.i4.1
L_020e: add
L_020f: stloc.s 8 (System.Int32)
L_0211: Label3
L_0211: ldloc.s 8 (System.Int32)
L_0213: ldc.i4.8
L_0214: blt Label4
L_0219: ldarg.0
L_021a: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_021f: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0221: callvirt Void Add(TreeContainerObject)
L_0226: Label2
L_0226: ldloc.2
L_0227: ldc.i4.1
L_0228: add
L_0229: stloc.2
L_022a: Label1
L_022a: ldloc.2
L_022b: ldloc.0
L_022c: ldlen
L_022d: conv.i4
L_022e: blt Label5
L_0233: ldarg.0
L_0234: call Void Postfix(BattleTech.Rendering.Trees.TreeContainer)
L_0239: ret
DONE

### Patch BattleTech.Rendering.BTCustomRenderer, Void DrawDecals(UnityEngine.Camera)
L_0000: Local var 0: BattleTech.Rendering.BTCustomRenderer+CustomCommandBuffers
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: UnityEngine.Rendering.CommandBuffer
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Matrix4x4[]
L_0000: Local var 5: UnityEngine.Material
L_0000: Local var 6: System.Int32
L_0000: Local var 7: UnityEngine.Matrix4x4[]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call CustomCommandBuffers UseCamera(UnityEngine.Camera)
L_0007: stloc.0
L_0008: ldloc.0
L_0009: brtrue Label1
L_000e: br Label11
L_0013: Label1
L_0013: ldc.i4.0
L_0014: stloc.1
L_0015: ldarg.0
L_0016: call TerrainGenerator get_terrainGenerator()
L_001b: ldnull
L_001c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0021: brfalse Label2
L_0026: ldarg.0
L_0027: call TerrainGenerator get_terrainGenerator()
L_002c: ldfld Biome biome
L_0031: ldfld Biome+BIOMESKIN biomeSkin
L_0036: ldc.i4.s 14
L_0038: bne.un Label3
L_003d: ldc.i4.1
L_003e: stloc.1
L_003f: Label2
L_003f: Label3
L_003f: ldloc.0
L_0040: ldfld UnityEngine.Rendering.CommandBuffer deferredDecalsBuffer
L_0045: stloc.2
L_0046: ldarg.0
L_0047: ldfld System.Boolean skipDecals
L_004c: brtrue Label4
L_0051: ldloc.2
L_0052: ldarg.1
L_0053: call Void ProcessCommandBuffer(UnityEngine.Rendering.CommandBuffer, UnityEngine.Camera)
L_0058: Label4
L_0058: call Boolean get_isPlaying()
L_005d: brfalse Label5
L_0062: ldsfld System.Int32 effectsQuality
L_0067: ldc.i4.0
L_0068: ble Label6
L_006d: call BattleTech.Rendering.FootstepManager get_Instance()
L_0072: ldloca.s 3 (System.Int32)
L_0074: ldloc.1
L_0075: callvirt UnityEngine.Matrix4x4[] ProcessFootsteps(Int32 ByRef, Boolean)
L_007a: stloc.s 4 (UnityEngine.Matrix4x4[])
L_007c: ldloc.1
L_007d: brtrue Label7
L_0082: call BattleTech.Rendering.FootstepManager get_Instance()
L_0087: callvirt UnityEngine.Material get_footstepMaterial()
L_008c: br Label8
L_0091: Label7
L_0091: call BattleTech.Rendering.FootstepManager get_Instance()
L_0096: callvirt UnityEngine.Material get_urbanFootstepMaterial()
L_009b: Label8
L_009b: stloc.s 5 (UnityEngine.Material)
L_009d: ldloc.2
L_009e: ldsfld System.Int32 _FootstepScale
L_00a3: ldloc.1
L_00a4: brtrue Label9
L_00a9: ldc.r4 1
L_00ae: br Label10
L_00b3: Label9
L_00b3: ldc.r4 2
L_00b8: Label10
L_00b8: callvirt Void SetGlobalFloat(Int32, Single)
L_00bd: ldloc.2
L_00be: call UnityEngine.Mesh get_DecalMeshFull()
L_00c3: ldc.i4.0
L_00c4: ldloc.s 5 (UnityEngine.Material)
L_00c6: ldc.i4.0
L_00c7: ldloc.s 4 (UnityEngine.Matrix4x4[])
L_00c9: ldloc.3
L_00ca: ldnull
L_00cb: callvirt Void DrawMeshInstanced(UnityEngine.Mesh, Int32, UnityEngine.Material, Int32, UnityEngine.Matrix4x4[], Int32, UnityEngine.MaterialPropertyBlock)
L_00d0: call BattleTech.Rendering.FootstepManager get_Instance()
L_00d5: ldloca.s 6 (System.Int32)
L_00d7: callvirt UnityEngine.Matrix4x4[] ProcessScorches(Int32 ByRef)
L_00dc: stloc.s 7 (UnityEngine.Matrix4x4[])
L_00de: ldloc.2
L_00df: call UnityEngine.Mesh get_DecalMeshFull()
L_00e4: ldc.i4.0
L_00e5: call BattleTech.Rendering.FootstepManager get_Instance()
L_00ea: callvirt UnityEngine.Material get_scorchMaterial()
L_00ef: ldc.i4.0
L_00f0: ldloc.s 7 (UnityEngine.Matrix4x4[])
L_00f2: ldloc.s 6 (System.Int32)
L_00f4: ldnull
L_00f5: callvirt Void DrawMeshInstanced(UnityEngine.Mesh, Int32, UnityEngine.Material, Int32, UnityEngine.Matrix4x4[], Int32, UnityEngine.MaterialPropertyBlock)
L_00fa: Label5
L_00fa: Label6
L_00fa: Label11
L_00fa: ldarg.0
L_00fb: ldarg 1
L_0101: call Void Postfix(BattleTech.Rendering.BTCustomRenderer, UnityEngine.Camera)
L_0106: ret
DONE

### Patch BattleTech.Rendering.FootstepManager, BattleTech.Rendering.FootstepManager get_Instance()
L_0000: Local var 0: BattleTech.Rendering.FootstepManager
L_0000: ldnull
L_0001: stloc 0 (BattleTech.Rendering.FootstepManager)
L_0002: ldloca 0 (BattleTech.Rendering.FootstepManager)
L_0004: call Boolean Prefix(BattleTech.Rendering.FootstepManager ByRef)
L_0009: brfalse Label0
L_000e: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0013: ldnull
L_0014: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0019: brfalse Label1
L_001e: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0023: br Label3
L_0028: Label1
L_0028: ldtoken BattleTech.Rendering.FootstepManager
L_002d: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0032: call UnityEngine.Object FindObjectOfType(System.Type)
L_0037: castclass BattleTech.Rendering.FootstepManager
L_003c: stsfld BattleTech.Rendering.FootstepManager _instance
L_0041: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0046: ldnull
L_0047: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004c: brfalse Label2
L_0051: ldstr "Footstep Manager"
L_0056: newobj Void .ctor(String)
L_005b: callvirt BattleTech.Rendering.FootstepManager AddComponent[FootstepManager]()
L_0060: stsfld BattleTech.Rendering.FootstepManager _instance
L_0065: Label2
L_0065: ldsfld BattleTech.Rendering.FootstepManager _instance
L_006a: Label3
L_006a: stloc 0 (BattleTech.Rendering.FootstepManager)
L_006b: Label0
L_006b: ldloc 0 (BattleTech.Rendering.FootstepManager)
L_006c: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldsfld HBS.Logging.ILog gameInfoLogger
L_001b: ldstr "CombatGameState Destroyed: {0}"
L_0020: call System.DateTime get_UtcNow()
L_0025: stloc.0
L_0026: ldloca.s 0 (System.DateTime)
L_0028: ldstr "ddd MMM d yyyy HH:mm:ss"
L_002d: call System.String ToString(System.String)
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void Log(System.Object)
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: brfalse Label1
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: newobj Void .ctor()
L_0052: dup
L_0053: call BattleTech.GameInstance get_BattleTechGame()
L_0058: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_005d: callvirt Boolean IsNetworkGameActive()
L_0062: callvirt Void set_IsNetworkGame(Boolean)
L_0067: callvirt Void PublishMessage(MessageCenterMessage)
L_006c: Label1
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: brfalse Label2
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: callvirt Void OnCombatGameDestroyed()
L_0082: ldarg.0
L_0083: ldnull
L_0084: call Void set_StackManager(BattleTech.StackManager)
L_0089: Label2
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: brfalse Label3
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: callvirt Void OnCombatGameDestroyed()
L_009f: Label3
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: brfalse Label4
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label4
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: brfalse Label5
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: ldc.i4.3
L_00c7: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00cc: Label5
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: brfalse Label6
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: callvirt Void Dispose()
L_00e2: Label6
L_00e2: call Boolean get_HasInstance()
L_00e7: brfalse Label7
L_00ec: call HBS.DebugConsole.DebugConsole get_Instance()
L_00f1: ldarg.0
L_00f2: ldftn Void DebugConsoleOnBeforeDump()
L_00f8: newobj Void .ctor(Object, IntPtr)
L_00fd: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0102: Label7
L_0102: call Boolean get_HasInstance()
L_0107: brfalse Label8
L_010c: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0111: callvirt Void OnCombatSceneEnd()
L_0116: Label8
L_0116: ldnull
L_0117: call Void set_destructionConstantsComponent(DestructionConstants)
L_011c: call Void ClearStaticData()
L_0121: call Void ClearStaticData()
L_0126: call Void ClearStaticData()
L_012b: call Void ClearStaticData()
L_0130: call Void ClearStaticData()
L_0135: ldsfld HBS.Logging.ILog gameInfoLogger
L_013a: ldstr "CombatGameState destroyed: {0}"
L_013f: call System.DateTime get_UtcNow()
L_0144: stloc.0
L_0145: ldloca.s 0 (System.DateTime)
L_0147: ldstr "ddd MMM d yyyy HH:mm:ss"
L_014c: call System.String ToString(System.String)
L_0151: call System.String Format(System.String, System.Object)
L_0156: callvirt Void Log(System.Object)
L_015b: Label0
L_015b: ret
DONE

### Patch BattleTech.MapMetaDataExporter, Void GenerateTerrainData(UnityEngine.Terrain, Boolean)
L_0000: Local var 0: BattleTech.MapTerrainDataCell
L_0000: Local var 1: TerrainGenerator
L_0000: Local var 2: BattleTech.SplatMapInfo
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.TerrainValues
L_0000: ldarg.0
L_0001: ldfld BattleTech.MapMetaData mapMetaData
L_0006: brtrue Label1
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: stfld BattleTech.MapMetaData mapMetaData
L_0016: Label1
L_0016: ldarg.0
L_0017: call Void RebuildEncounterLayerList()
L_001c: ldsfld System.Boolean forceSaveMapMetaData
L_0021: brfalse Label2
L_0026: br Label9
L_002b: Label2
L_002b: ldarg.1
L_002c: callvirt TerrainGenerator GetComponent[TerrainGenerator]()
L_0031: stloc.1
L_0032: ldarg.0
L_0033: ldfld BattleTech.MapMetaData mapMetaData
L_0038: ldloc.1
L_0039: ldfld Biome biome
L_003e: ldfld Biome+BIOMESKIN biomeSkin
L_0043: stfld Biome+BIOMESKIN biomeSkin
L_0048: ldarg.1
L_0049: callvirt BattleTech.SplatMapInfo GetComponent[SplatMapInfo]()
L_004e: stloc.2
L_004f: ldloc.2
L_0050: ldnull
L_0051: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0056: brfalse Label3
L_005b: ldsfld HBS.Logging.ILog logger
L_0060: ldstr "Without the SplatMapInfo component on the terrain, we can't have any terrain data from design."
L_0065: ldarg.1
L_0066: callvirt Void LogError(System.Object, UnityEngine.Object)
L_006b: br Label4
L_0070: Label3
L_0070: ldloc.2
L_0071: callvirt Void LoadSplatData()
L_0076: Label4
L_0076: ldarg.0
L_0077: ldfld BattleTech.MapMetaData mapMetaData
L_007c: ldarg.1
L_007d: callvirt UnityEngine.TerrainData get_terrainData()
L_0082: callvirt UnityEngine.Vector3 get_size()
L_0087: ldfld System.Single z
L_008c: conv.i4
L_008d: ldsfld System.Int32 cellSize
L_0092: div
L_0093: ldarg.1
L_0094: callvirt UnityEngine.TerrainData get_terrainData()
L_0099: callvirt UnityEngine.Vector3 get_size()
L_009e: ldfld System.Single x
L_00a3: conv.i4
L_00a4: ldsfld System.Int32 cellSize
L_00a9: div
L_00aa: newobj Void .ctor(Int32, Int32)
L_00af: stfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00b4: ldarg.1
L_00b5: callvirt UnityEngine.TerrainData get_terrainData()
L_00ba: callvirt UnityEngine.Vector3 get_size()
L_00bf: ldfld System.Single z
L_00c4: stloc.3
L_00c5: ldarg.1
L_00c6: callvirt UnityEngine.TerrainData get_terrainData()
L_00cb: callvirt UnityEngine.Vector3 get_size()
L_00d0: ldfld System.Single x
L_00d5: stloc.s 4 (System.Single)
L_00d7: ldsfld System.Int32 cellSize
L_00dc: conv.r4
L_00dd: ldc.r4 2
L_00e2: div
L_00e3: stloc.s 5 (System.Single)
L_00e5: ldloc.s 5 (System.Single)
L_00e7: stloc.s 6 (System.Single)
L_00e9: br Label5
L_00ee: Label8
L_00ee: ldloc.s 5 (System.Single)
L_00f0: stloc.s 7 (System.Single)
L_00f2: br Label6
L_00f7: Label7
L_00f7: newobj Void .ctor()
L_00fc: stloc.0
L_00fd: ldloc.0
L_00fe: ldarg.0
L_00ff: ldfld BattleTech.MapMetaData mapMetaData
L_0104: stfld BattleTech.MapMetaData mapMetaData
L_0109: ldloc.s 7 (System.Single)
L_010b: ldloc.s 5 (System.Single)
L_010d: sub
L_010e: conv.i4
L_010f: stloc.s 8 (System.Int32)
L_0111: ldloc.s 6 (System.Single)
L_0113: ldloc.s 5 (System.Single)
L_0115: sub
L_0116: conv.i4
L_0117: stloc.s 9 (System.Int32)
L_0119: ldarg.1
L_011a: ldloc.s 8 (System.Int32)
L_011c: conv.r4
L_011d: ldloc.s 5 (System.Single)
L_011f: sub
L_0120: ldloc.s 9 (System.Int32)
L_0122: conv.r4
L_0123: ldloc.s 5 (System.Single)
L_0125: sub
L_0126: ldsfld System.Int32 cellSize
L_012b: ldloc.2
L_012c: call BattleTech.TerrainValues CalculateAverageTerrainValues(UnityEngine.Terrain, Single, Single, Int32, BattleTech.SplatMapInfo)
L_0131: stloc.s 10 (BattleTech.TerrainValues)
L_0133: ldloc.0
L_0134: ldloc.s 10 (BattleTech.TerrainValues)
L_0136: ldfld System.Single averageHeight
L_013b: stfld System.Single terrainHeight
L_0140: ldloc.0
L_0141: ldloc.s 10 (BattleTech.TerrainValues)
L_0143: ldfld System.Single averageSteepness
L_0148: stfld System.Single terrainSteepness
L_014d: ldloc.0
L_014e: ldloc.s 10 (BattleTech.TerrainValues)
L_0150: ldfld BattleTech.TerrainMaskFlags terrainMaskFlags
L_0155: stfld BattleTech.TerrainMaskFlags terrainMask
L_015a: ldarg.0
L_015b: ldfld BattleTech.MapMetaData mapMetaData
L_0160: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0165: ldloc.s 9 (System.Int32)
L_0167: ldsfld System.Int32 cellSize
L_016c: div
L_016d: ldloc.s 8 (System.Int32)
L_016f: ldsfld System.Int32 cellSize
L_0174: div
L_0175: ldloc.0
L_0176: call Void Set(Int32, Int32, BattleTech.MapTerrainDataCell)
L_017b: ldloc.s 7 (System.Single)
L_017d: ldsfld System.Int32 cellSize
L_0182: conv.r4
L_0183: add
L_0184: stloc.s 7 (System.Single)
L_0186: Label6
L_0186: ldloc.s 7 (System.Single)
L_0188: ldloc.s 4 (System.Single)
L_018a: blt Label7
L_018f: ldloc.s 6 (System.Single)
L_0191: ldsfld System.Int32 cellSize
L_0196: conv.r4
L_0197: add
L_0198: stloc.s 6 (System.Single)
L_019a: Label5
L_019a: ldloc.s 6 (System.Single)
L_019c: ldloc.3
L_019d: blt Label8
L_01a2: Label9
L_01a2: ldarg.0
L_01a3: ldarg 1
L_01a9: ldarg 2
L_01af: call Void Postfix(BattleTech.MapMetaDataExporter, UnityEngine.Terrain, Boolean)
L_01b4: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, BattleTech.WeaponHitInfo GenerateHitInfo(BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single)
L_0000: Local var 0: BattleTech.WeaponHitInfo
L_0000: Local var 1: System.Single
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: BattleTech.LineOfFireLevel
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.String
L_0000: Local var 6: BattleTech.WeaponType
L_0000: Local var 7: BattleTech.WeaponHitInfo
L_0000: ldloca 7 (BattleTech.WeaponHitInfo)
L_0002: initobj BattleTech.WeaponHitInfo
L_0008: ldarg.0
L_0009: ldarg 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldarg 4
L_0021: ldarg 5
L_0027: ldarg 6
L_002d: ldloca 7 (BattleTech.WeaponHitInfo)
L_002f: call Boolean Prefix(AttackSequence, BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single, BattleTech.WeaponHitInfo ByRef)
L_0034: brfalse Label0
L_0039: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_003b: initobj BattleTech.WeaponHitInfo
L_0041: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0043: ldarg.0
L_0044: ldfld BattleTech.AbstractActor attacker
L_0049: callvirt System.String get_GUID()
L_004e: stfld System.String attackerId
L_0053: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0055: ldarg.0
L_0056: ldfld BattleTech.ICombatant chosenTarget
L_005b: callvirt System.String get_GUID()
L_0060: stfld System.String targetId
L_0065: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0067: ldarg.s 4
L_0069: stfld System.Int32 numberOfShots
L_006e: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0070: ldarg.0
L_0071: ldfld System.Int32 stackItemUID
L_0076: stfld System.Int32 stackItemUID
L_007b: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_007d: ldarg.0
L_007e: ldfld System.Int32 id
L_0083: stfld System.Int32 attackSequenceId
L_0088: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_008a: ldarg.2
L_008b: stfld System.Int32 attackGroupIndex
L_0090: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0092: ldarg.3
L_0093: stfld System.Int32 attackWeaponIndex
L_0098: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_009a: ldarg.s 4
L_009c: newarr System.Single
L_00a1: stfld System.Single[] toHitRolls
L_00a6: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00a8: ldarg.s 4
L_00aa: newarr System.Single
L_00af: stfld System.Single[] locationRolls
L_00b4: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00b6: ldarg.s 4
L_00b8: newarr System.Single
L_00bd: stfld System.Single[] dodgeRolls
L_00c2: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00c4: ldarg.s 4
L_00c6: newarr System.Boolean
L_00cb: stfld System.Boolean[] dodgeSuccesses
L_00d0: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00d2: ldarg.s 4
L_00d4: newarr System.Int32
L_00d9: stfld System.Int32[] hitLocations
L_00de: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00e0: ldarg.s 4
L_00e2: newarr UnityEngine.Vector3
L_00e7: stfld UnityEngine.Vector3[] hitPositions
L_00ec: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00ee: ldarg.s 4
L_00f0: newarr System.Int32
L_00f5: stfld System.Int32[] hitVariance
L_00fa: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00fc: ldarg.s 4
L_00fe: newarr BattleTech.AttackImpactQuality
L_0103: stfld BattleTech.AttackImpactQuality[] hitQualities
L_0108: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_010a: ldarg.s 4
L_010c: newarr System.String
L_0111: stfld System.String[] secondaryTargetIds
L_0116: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0118: ldarg.s 4
L_011a: newarr System.Int32
L_011f: stfld System.Int32[] secondaryHitLocations
L_0124: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0126: ldarg.s 4
L_0128: newarr BattleTech.AttackDirection
L_012d: stfld BattleTech.AttackDirection[] attackDirections
L_0132: ldsfld HBS.Logging.ILog hitLogger
L_0137: callvirt Boolean get_IsLogEnabled()
L_013c: brfalse Label1
L_0141: ldarg.0
L_0142: call BattleTech.AttackDirector get_Director()
L_0147: callvirt BattleTech.CombatGameState get_Combat()
L_014c: callvirt BattleTech.LineOfSight get_LOS()
L_0151: ldarg.0
L_0152: ldfld BattleTech.AbstractActor attacker
L_0157: ldarg.0
L_0158: ldfld UnityEngine.Vector3 attackPosition
L_015d: ldarg.0
L_015e: ldfld BattleTech.ICombatant chosenTarget
L_0163: ldarg.0
L_0164: ldfld BattleTech.ICombatant chosenTarget
L_0169: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_016e: ldarg.0
L_016f: ldfld BattleTech.ICombatant chosenTarget
L_0174: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0179: ldloca.s 2 (UnityEngine.Vector3)
L_017b: callvirt BattleTech.LineOfFireLevel GetLineOfFire(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3 ByRef)
L_0180: stloc.3
L_0181: ldarg.0
L_0182: call BattleTech.AttackDirector get_Director()
L_0187: callvirt BattleTech.CombatGameState get_Combat()
L_018c: callvirt BattleTech.ToHit get_ToHit()
L_0191: ldarg.0
L_0192: ldfld BattleTech.AbstractActor attacker
L_0197: ldarg.1
L_0198: ldarg.0
L_0199: ldfld BattleTech.ICombatant chosenTarget
L_019e: ldarg.0
L_019f: ldfld UnityEngine.Vector3 attackPosition
L_01a4: ldarg.0
L_01a5: ldfld BattleTech.AbstractActor attacker
L_01aa: ldfld UnityEngine.Vector3 HighestLOSPosition
L_01af: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_01b4: ldarg.0
L_01b5: ldfld BattleTech.ICombatant chosenTarget
L_01ba: callvirt UnityEngine.Vector3 get_TargetPosition()
L_01bf: ldloc.3
L_01c0: ldarg.0
L_01c1: ldfld System.Boolean isMoraleAttack
L_01c6: callvirt Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_01cb: stloc.s 4 (System.Single)
L_01cd: ldarg.0
L_01ce: call BattleTech.AttackDirector get_Director()
L_01d3: callvirt BattleTech.CombatGameState get_Combat()
L_01d8: callvirt BattleTech.ToHit get_ToHit()
L_01dd: ldarg.0
L_01de: ldfld BattleTech.AbstractActor attacker
L_01e3: ldarg.1
L_01e4: ldarg.0
L_01e5: ldfld BattleTech.ICombatant chosenTarget
L_01ea: ldarg.0
L_01eb: ldfld UnityEngine.Vector3 attackPosition
L_01f0: ldarg.0
L_01f1: ldfld BattleTech.AbstractActor attacker
L_01f6: ldfld UnityEngine.Vector3 HighestLOSPosition
L_01fb: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0200: ldarg.0
L_0201: ldfld BattleTech.ICombatant chosenTarget
L_0206: callvirt UnityEngine.Vector3 get_TargetPosition()
L_020b: ldloc.3
L_020c: ldarg.0
L_020d: ldfld System.Boolean isMoraleAttack
L_0212: callvirt System.String GetAllModifiersDescription(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0217: stloc.s 5 (System.String)
L_0219: ldarg.0
L_021a: ldfld BattleTech.AbstractActor attacker
L_021f: callvirt BattleTech.Pilot GetPilot()
L_0224: ldsfld HBS.Logging.ILog hitLogger
L_0229: ldstr "======================================== Unit Firing: {0} | Weapon: {1} | Shots: {2}"
L_022e: ldarg.0
L_022f: ldfld BattleTech.AbstractActor attacker
L_0234: callvirt System.String get_DisplayName()
L_0239: ldarg.1
L_023a: callvirt System.String get_Name()
L_023f: ldarg.s 4
L_0241: box System.Int32
L_0246: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_024b: callvirt Void Log(System.Object)
L_0250: ldsfld HBS.Logging.ILog hitLogger
L_0255: ldstr "======================================== Hit Info: GROUP {0} | ID {1}"
L_025a: ldarg.2
L_025b: box System.Int32
L_0260: ldarg.3
L_0261: box System.Int32
L_0266: call System.String Format(System.String, System.Object, System.Object)
L_026b: callvirt Void Log(System.Object)
L_0270: ldsfld HBS.Logging.ILog hitLogger
L_0275: ldstr "======================================== MODIFIERS: {0}... FINAL: [[ {1} ]] "
L_027a: ldloc.s 5 (System.String)
L_027c: ldloc.s 4 (System.Single)
L_027e: box System.Single
L_0283: call System.String Format(System.String, System.Object, System.Object)
L_0288: callvirt Void Log(System.Object)
L_028d: brfalse Label2
L_0292: ldsfld HBS.Logging.ILog hitLogger
L_0297: ldarg.0
L_0298: call BattleTech.AttackDirector get_Director()
L_029d: callvirt BattleTech.CombatGameState get_Combat()
L_02a2: callvirt BattleTech.ToHit get_ToHit()
L_02a7: ldarg.0
L_02a8: ldfld BattleTech.AbstractActor attacker
L_02ad: callvirt System.String GetBaseToHitChanceDesc(BattleTech.AbstractActor)
L_02b2: callvirt Void Log(System.Object)
L_02b7: br Label3
L_02bc: Label2
L_02bc: ldsfld HBS.Logging.ILog hitLogger
L_02c1: ldstr "======================================== Gunnery Check: NO PILOT"
L_02c6: call System.Object[] Empty[Object]()
L_02cb: call System.String Format(System.String, System.Object[])
L_02d0: callvirt Void Log(System.Object)
L_02d5: Label1
L_02d5: Label3
L_02d5: ldarg.0
L_02d6: call BattleTech.AttackDirector get_Director()
L_02db: callvirt BattleTech.CombatGameState get_Combat()
L_02e0: callvirt BattleTech.ToHit get_ToHit()
L_02e5: ldarg.0
L_02e6: ldfld BattleTech.AbstractActor attacker
L_02eb: ldarg.1
L_02ec: ldarg.0
L_02ed: ldfld BattleTech.ICombatant chosenTarget
L_02f2: ldarg.0
L_02f3: ldfld UnityEngine.Vector3 attackPosition
L_02f8: ldarg.0
L_02f9: ldfld BattleTech.ICombatant chosenTarget
L_02fe: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0303: ldarg.0
L_0304: ldfld System.Int32 numTargets
L_0309: ldarg.0
L_030a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_030f: ldarg.0
L_0310: ldfld System.Boolean isMoraleAttack
L_0315: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_031a: stloc.1
L_031b: ldsfld System.Boolean TEST_KNOCKDOWN
L_0320: brfalse Label4
L_0325: ldc.r4 1
L_032a: stloc.1
L_032b: Label4
L_032b: ldsfld HBS.Logging.ILog hitLogger
L_0330: callvirt Boolean get_IsLogEnabled()
L_0335: brfalse Label5
L_033a: ldsfld HBS.Logging.ILog hitLogger
L_033f: ldstr "======================================== HIT CHANCE: [[ {0:P2} ]]"
L_0344: ldloc.1
L_0345: box System.Single
L_034a: call System.String Format(System.String, System.Object)
L_034f: callvirt Void Log(System.Object)
L_0354: Label5
L_0354: ldarg.1
L_0355: callvirt BattleTech.WeaponType get_Type()
L_035a: stloc.s 6 (BattleTech.WeaponType)
L_035c: ldloc.s 6 (BattleTech.WeaponType)
L_035e: ldc.i4.1
L_035f: sub
L_0360: switch Labels6,7,8,9,10,11,12,13,14
L_0389: br Label15
L_038e: Label6
L_038e: Label7
L_038e: Label8
L_038e: Label9
L_038e: Label12
L_038e: Label14
L_038e: ldarg.0
L_038f: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0391: ldarg.2
L_0392: ldarg.3
L_0393: ldarg.1
L_0394: ldloc.1
L_0395: ldarg.s 6
L_0397: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_039c: br Label16
L_03a1: Label13
L_03a1: ldarg.0
L_03a2: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03a4: ldarg.2
L_03a5: ldarg.3
L_03a6: ldarg.1
L_03a7: ldloc.1
L_03a8: ldarg.s 6
L_03aa: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03af: br Label17
L_03b4: Label10
L_03b4: ldarg.0
L_03b5: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03b7: ldarg.2
L_03b8: ldarg.3
L_03b9: ldarg.1
L_03ba: ldloc.1
L_03bb: ldarg.s 6
L_03bd: call Void GetClusteredHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03c2: br Label18
L_03c7: Label11
L_03c7: ldarg.0
L_03c8: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03ca: ldarg.2
L_03cb: ldarg.3
L_03cc: ldarg.1
L_03cd: ldloc.1
L_03ce: ldarg.s 6
L_03d0: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03d5: br Label19
L_03da: Label15
L_03da: ldsfld HBS.Logging.ILog attackLogger
L_03df: ldstr "GenerateHitInfo found invalid weapon type: {0}, using basic hit info"
L_03e4: ldarg.1
L_03e5: callvirt BattleTech.WeaponType get_Type()
L_03ea: box BattleTech.WeaponType
L_03ef: call System.String Format(System.String, System.Object)
L_03f4: callvirt Void LogError(System.Object)
L_03f9: ldarg.0
L_03fa: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03fc: ldarg.2
L_03fd: ldarg.3
L_03fe: ldarg.1
L_03ff: ldloc.1
L_0400: ldarg.s 6
L_0402: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_0407: Label16
L_0407: Label17
L_0407: Label18
L_0407: Label19
L_0407: ldloc.0
L_0408: stloc 7 (BattleTech.WeaponHitInfo)
L_040a: Label0
L_040a: ldloc 7 (BattleTech.WeaponHitInfo)
L_040c: ret
DONE

### Patch BattleTech.ToHit, Single GetEvasivePipsModifier(Int32, BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: ldc.r4 0
L_0005: stloc 4 (System.Single)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldloca 4 (System.Single)
L_0016: call Boolean Prefix(BattleTech.ToHit, Int32, BattleTech.Weapon, Single ByRef)
L_001b: brfalse Label0
L_0020: ldc.r4 0
L_0025: stloc.0
L_0026: ldarg.1
L_0027: ldc.i4.0
L_0028: ble Label1
L_002d: ldarg.1
L_002e: conv.r4
L_002f: ldc.r4 1
L_0034: sub
L_0035: ldarg.2
L_0036: brtrue Label2
L_003b: ldc.r4 0
L_0040: br Label3
L_0045: Label2
L_0045: ldarg.2
L_0046: callvirt BattleTech.WeaponDef get_weaponDef()
L_004b: callvirt Single get_EvasivePipsIgnored()
L_0050: Label3
L_0050: sub
L_0051: call Int32 RoundToInt(Single)
L_0056: stloc.1
L_0057: ldloc.1
L_0058: ldarg.0
L_0059: ldfld BattleTech.CombatGameState combat
L_005e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0063: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0068: ldfld System.Single[] ToHitMovingPipUMs
L_006d: ldlen
L_006e: conv.i4
L_006f: blt Label4
L_0074: ldarg.0
L_0075: ldfld BattleTech.CombatGameState combat
L_007a: callvirt BattleTech.CombatGameConstants get_Constants()
L_007f: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0084: ldfld System.Single[] ToHitMovingPipUMs
L_0089: ldlen
L_008a: conv.i4
L_008b: ldc.i4.1
L_008c: sub
L_008d: stloc.2
L_008e: ldarg.0
L_008f: ldfld BattleTech.CombatGameState combat
L_0094: callvirt BattleTech.CombatGameConstants get_Constants()
L_0099: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_009e: ldfld System.Single[] ToHitMovingPipUMs
L_00a3: ldloc.2
L_00a4: ldelem.r4
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.CombatGameState combat
L_00ab: callvirt BattleTech.CombatGameConstants get_Constants()
L_00b0: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_00b5: ldfld System.Single[] ToHitMovingPipUMs
L_00ba: ldloc.2
L_00bb: ldc.i4.1
L_00bc: sub
L_00bd: ldelem.r4
L_00be: sub
L_00bf: stloc.3
L_00c0: ldloc.0
L_00c1: ldloc.1
L_00c2: ldc.i4.1
L_00c3: add
L_00c4: conv.r4
L_00c5: ldloc.3
L_00c6: mul
L_00c7: add
L_00c8: stloc.0
L_00c9: br Label5
L_00ce: Label4
L_00ce: ldloc.1
L_00cf: ldc.i4.m1
L_00d0: ble Label6
L_00d5: ldloc.0
L_00d6: ldarg.0
L_00d7: ldfld BattleTech.CombatGameState combat
L_00dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_00e1: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_00e6: ldfld System.Single[] ToHitMovingPipUMs
L_00eb: ldloc.1
L_00ec: ldelem.r4
L_00ed: add
L_00ee: stloc.0
L_00ef: Label1
L_00ef: Label5
L_00ef: Label6
L_00ef: ldloc.0
L_00f0: stloc 4 (System.Single)
L_00f2: Label0
L_00f2: ldloc 4 (System.Single)
L_00f4: ret
DONE

### Patch AIUtil, Boolean UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.CombatGameState, UnityEngine.Vector3)
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Vector3
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Boolean UnitHasDirectLOFToTargetFromPosition(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.CombatGameState, UnityEngine.Vector3)
L_0009: brfalse Label1
L_000e: ldc.i4.1
L_000f: br Label8
L_0014: Label1
L_0014: ldarg.3
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_001b: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0020: stloc.1
L_0021: ldloca.s 1 (UnityEngine.Vector3)
L_0023: call Single get_magnitude()
L_0028: stloc.0
L_0029: ldc.i4.0
L_002a: stloc.2
L_002b: br Label2
L_0030: Label7
L_0030: ldarg.0
L_0031: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0036: ldloc.2
L_0037: callvirt BattleTech.Weapon get_Item(Int32)
L_003c: stloc.3
L_003d: ldloc.3
L_003e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0043: brfalse Label3
L_0048: ldloc.3
L_0049: callvirt Boolean get_CanFire()
L_004e: brfalse Label4
L_0053: ldloc.3
L_0054: callvirt Single get_MaxRange()
L_0059: ldloc.0
L_005a: blt Label5
L_005f: ldloc.3
L_0060: ldarg.1
L_0061: ldarg.3
L_0062: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_0067: brfalse Label6
L_006c: ldc.i4.1
L_006d: br Label9
L_0072: Label3
L_0072: Label4
L_0072: Label5
L_0072: Label6
L_0072: ldloc.2
L_0073: ldc.i4.1
L_0074: add
L_0075: stloc.2
L_0076: Label2
L_0076: ldloc.2
L_0077: ldarg.0
L_0078: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_007d: callvirt Int32 get_Count()
L_0082: blt Label7
L_0087: ldc.i4.0
L_0088: Label8
L_0088: Label9
L_0088: ret
DONE

### Patch AIUtil, Boolean UnitHasLOFToUnit(BattleTech.AbstractActor, BattleTech.AbstractActor, BattleTech.CombatGameState)
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Vector3
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.0
L_0001: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0006: ldarg.1
L_0007: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_000c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0011: stloc.1
L_0012: ldloca.s 1 (UnityEngine.Vector3)
L_0014: call Single get_magnitude()
L_0019: stloc.0
L_001a: ldc.i4.0
L_001b: stloc.2
L_001c: br Label1
L_0021: Label7
L_0021: ldarg.0
L_0022: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0027: ldloc.2
L_0028: callvirt BattleTech.Weapon get_Item(Int32)
L_002d: stloc.3
L_002e: ldloc.3
L_002f: callvirt Boolean get_CanFire()
L_0034: brfalse Label2
L_0039: ldloc.3
L_003a: callvirt Single get_MaxRange()
L_003f: ldloc.0
L_0040: blt Label3
L_0045: ldloc.3
L_0046: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_004b: brfalse Label4
L_0050: ldarg.0
L_0051: ldarg.1
L_0052: callvirt Boolean HasLOSToTargetUnit(BattleTech.ICombatant)
L_0057: brfalse Label5
L_005c: ldc.i4.1
L_005d: br Label8
L_0062: Label4
L_0062: Label5
L_0062: ldarg.2
L_0063: callvirt LOFCache get_LOFCache()
L_0068: ldarg.0
L_0069: ldarg.1
L_006a: ldloc.3
L_006b: callvirt Single get_MaxRange()
L_0070: ldarg.0
L_0071: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0076: ldarg.1
L_0077: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_007c: ldarg.0
L_007d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0082: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0087: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_008c: ldc.i4.0
L_008d: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0092: brfalse Label6
L_0097: ldc.i4.1
L_0098: br Label9
L_009d: Label2
L_009d: Label3
L_009d: Label6
L_009d: ldloc.2
L_009e: ldc.i4.1
L_009f: add
L_00a0: stloc.2
L_00a1: Label1
L_00a1: ldloc.2
L_00a2: ldarg.0
L_00a3: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a8: callvirt Int32 get_Count()
L_00ad: blt Label7
L_00b2: ldc.i4.0
L_00b3: Label8
L_00b3: Label9
L_00b3: ret
DONE

### Patch BattleTech.AIRoleAssignment, Single EvaluateSniper(BattleTech.AbstractActor)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldc.i4.0
L_0003: stloc.1
L_0004: br Label1
L_0009: Label5
L_0009: ldarg.0
L_000a: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_000f: ldloc.1
L_0010: callvirt BattleTech.Weapon get_Item(Int32)
L_0015: stloc.2
L_0016: ldloc.2
L_0017: callvirt Boolean get_CanFire()
L_001c: brtrue Label2
L_0021: ldloc.2
L_0022: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0027: brfalse Label3
L_002c: ldc.i4.1
L_002d: stloc.0
L_002e: br Label4
L_0033: Label2
L_0033: Label3
L_0033: ldloc.1
L_0034: ldc.i4.1
L_0035: add
L_0036: stloc.1
L_0037: Label1
L_0037: ldloc.1
L_0038: ldarg.0
L_0039: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_003e: callvirt Int32 get_Count()
L_0043: blt Label5
L_0048: Label4
L_0048: ldarg.0
L_0049: call Single getDamageCentroid(BattleTech.AbstractActor)
L_004e: ldloc.0
L_004f: brtrue Label6
L_0054: ldc.r4 1
L_0059: br Label7
L_005e: Label6
L_005e: ldc.r4 2
L_0063: Label7
L_0063: mul
L_0064: ret
DONE

### Patch BattleTech.AbstractActor, BattleTech.Weapon GetLongestRangeWeapon(Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.Weapon
L_0000: Local var 2: System.Int32
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldnull
L_0007: stloc.1
L_0008: ldc.i4.0
L_0009: stloc.2
L_000a: br Label1
L_000f: Label9
L_000f: ldarg.0
L_0010: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0015: ldloc.2
L_0016: callvirt BattleTech.Weapon get_Item(Int32)
L_001b: callvirt Single get_MaxRange()
L_0020: ldloc.0
L_0021: ble.un Label2
L_0026: ldarg.0
L_0027: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_002c: ldloc.2
L_002d: callvirt BattleTech.Weapon get_Item(Int32)
L_0032: callvirt Boolean get_CanFire()
L_0037: brfalse Label3
L_003c: ldarg.2
L_003d: brfalse Label4
L_0042: ldarg.0
L_0043: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0048: ldloc.2
L_0049: callvirt BattleTech.Weapon get_Item(Int32)
L_004e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0053: brfalse Label5
L_0058: Label4
L_0058: ldarg.1
L_0059: brfalse Label6
L_005e: ldarg.0
L_005f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0064: ldloc.2
L_0065: callvirt BattleTech.Weapon get_Item(Int32)
L_006a: callvirt Boolean get_IsEnabled()
L_006f: brfalse Label7
L_0074: ldarg.0
L_0075: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_007a: ldloc.2
L_007b: callvirt BattleTech.Weapon get_Item(Int32)
L_0080: callvirt Boolean get_WillFire()
L_0085: brfalse Label8
L_008a: Label6
L_008a: ldarg.0
L_008b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0090: ldloc.2
L_0091: callvirt BattleTech.Weapon get_Item(Int32)
L_0096: stloc.1
L_0097: ldloc.1
L_0098: callvirt Single get_MaxRange()
L_009d: stloc.0
L_009e: Label2
L_009e: Label3
L_009e: Label5
L_009e: Label7
L_009e: Label8
L_009e: ldloc.2
L_009f: ldc.i4.1
L_00a0: add
L_00a1: stloc.2
L_00a2: Label1
L_00a2: ldloc.2
L_00a3: ldarg.0
L_00a4: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a9: callvirt Int32 get_Count()
L_00ae: blt Label9
L_00b3: ldloc.1
L_00b4: ret
DONE

### Patch BattleTech.AbstractActor, Boolean HasIndirectLOFToTargetUnit(UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, Boolean)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.Weapon
L_0000: Local var 2: System.Int32
L_0000: ldarg.3
L_0001: isinst BattleTech.AbstractActor
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldarg.0
L_000e: ldloc.0
L_000f: callvirt Boolean HasLOSToTargetUnit(BattleTech.ICombatant)
L_0014: brtrue Label2
L_0019: ldc.i4.0
L_001a: br Label14
L_001f: Label1
L_001f: Label2
L_001f: ldarg.0
L_0020: ldarg.s 4
L_0022: ldc.i4.0
L_0023: call BattleTech.Weapon GetLongestRangeWeapon(Boolean, Boolean)
L_0028: stloc.1
L_0029: ldloc.1
L_002a: brfalse Label3
L_002f: ldarg.1
L_0030: ldarg.3
L_0031: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0036: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_003b: ldloc.1
L_003c: callvirt Single get_MaxRange()
L_0041: ble.un Label4
L_0046: Label3
L_0046: ldc.i4.0
L_0047: br Label15
L_004c: Label4
L_004c: ldarg.0
L_004d: ldarg.3
L_004e: ldloc.1
L_004f: callvirt Single get_MaxRange()
L_0054: ldarg.1
L_0055: ldarg.2
L_0056: ldc.i4.0
L_0057: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005c: brfalse Label5
L_0061: ldc.i4.0
L_0062: br Label16
L_0067: Label5
L_0067: ldc.i4.0
L_0068: stloc.2
L_0069: br Label6
L_006e: Label13
L_006e: ldarg.0
L_006f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0074: ldloc.2
L_0075: callvirt BattleTech.Weapon get_Item(Int32)
L_007a: callvirt Boolean get_IsEnabled()
L_007f: brtrue Label7
L_0084: ldarg.s 4
L_0086: brtrue Label8
L_008b: Label7
L_008b: ldarg.0
L_008c: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0091: ldloc.2
L_0092: callvirt BattleTech.Weapon get_Item(Int32)
L_0097: callvirt Boolean get_IsDisabled()
L_009c: brtrue Label9
L_00a1: ldarg.0
L_00a2: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00a7: ldloc.2
L_00a8: callvirt BattleTech.Weapon get_Item(Int32)
L_00ad: callvirt Boolean get_HasAmmo()
L_00b2: brfalse Label10
L_00b7: ldarg.0
L_00b8: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00bd: ldloc.2
L_00be: callvirt BattleTech.Weapon get_Item(Int32)
L_00c3: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00c8: brfalse Label11
L_00cd: ldarg.0
L_00ce: ldarg.3
L_00cf: ldarg.0
L_00d0: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00d5: ldloc.2
L_00d6: callvirt BattleTech.Weapon get_Item(Int32)
L_00db: callvirt Single get_MaxRange()
L_00e0: ldarg.1
L_00e1: ldarg.2
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00e8: ldloc.2
L_00e9: callvirt BattleTech.Weapon get_Item(Int32)
L_00ee: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00f3: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_00f8: brtrue Label12
L_00fd: ldc.i4.0
L_00fe: br Label17
L_0103: Label8
L_0103: Label9
L_0103: Label10
L_0103: Label11
L_0103: Label12
L_0103: ldloc.2
L_0104: ldc.i4.1
L_0105: add
L_0106: stloc.2
L_0107: Label6
L_0107: ldloc.2
L_0108: ldarg.0
L_0109: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_010e: callvirt Int32 get_Count()
L_0113: blt Label13
L_0118: ldc.i4.1
L_0119: Label14
L_0119: Label15
L_0119: Label16
L_0119: Label17
L_0119: ret
DONE

### Patch BattleTech.AbstractActor, Boolean HasLOFToTargetUnit(BattleTech.ICombatant, BattleTech.Weapon)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: callvirt Single get_MaxRange()
L_0008: ldarg.2
L_0009: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_000e: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, Boolean)
L_0013: ret
DONE

### Patch BattleTech.HostileDamageFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label8
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.1
L_0026: callvirt BattleTech.CombatGameState get_Combat()
L_002b: callvirt LOFCache get_LOFCache()
L_0030: ldarg.1
L_0031: ldarg.s 4
L_0033: ldloc.2
L_0034: callvirt Single get_MaxRange()
L_0039: ldarg.2
L_003a: ldarg.3
L_003b: ldarg.s 5
L_003d: ldarg.s 6
L_003f: ldloc.2
L_0040: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0045: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_004a: brfalse Label3
L_004f: ldloc.2
L_0050: ldarg.s 4
L_0052: ldarg.2
L_0053: ldarg.3
L_0054: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0059: brfalse Label4
L_005e: ldloc.2
L_005f: callvirt Int32 get_ShotsWhenFired()
L_0064: stloc.3
L_0065: ldarg.s 4
L_0067: isinst BattleTech.AbstractActor
L_006c: stloc.s 5 (BattleTech.AbstractActor)
L_006e: ldarg.s 9
L_0070: brfalse Label5
L_0075: ldloc.s 5 (BattleTech.AbstractActor)
L_0077: brfalse Label6
L_007c: ldloc.s 5 (BattleTech.AbstractActor)
L_007e: callvirt Int32 get_EvasivePipsCurrent()
L_0083: stloc.s 8 (System.Int32)
L_0085: ldloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: ldarg.s 5
L_008b: ldloc.s 5 (BattleTech.AbstractActor)
L_008d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0092: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0097: stloc.s 9 (UnityEngine.Vector3)
L_0099: ldloca.s 9 (UnityEngine.Vector3)
L_009b: call Single get_magnitude()
L_00a0: ldarg.s 8
L_00a2: ldarg.s 7
L_00a4: ldc.i4.0
L_00a5: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00aa: callvirt Void set_EvasivePipsCurrent(Int32)
L_00af: ldloc.2
L_00b0: ldarg.s 4
L_00b2: ldc.i4.1
L_00b3: ldarg.2
L_00b4: ldarg.s 5
L_00b6: ldc.i4.1
L_00b7: ldarg.s 7
L_00b9: ldc.i4.0
L_00ba: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00bf: stloc.s 4 (System.Single)
L_00c1: ldloc.s 5 (BattleTech.AbstractActor)
L_00c3: ldloc.s 8 (System.Int32)
L_00c5: callvirt Void set_EvasivePipsCurrent(Int32)
L_00ca: br Label7
L_00cf: Label5
L_00cf: Label6
L_00cf: ldloc.2
L_00d0: ldarg.s 4
L_00d2: ldc.i4.1
L_00d3: ldarg.2
L_00d4: ldarg.s 5
L_00d6: ldc.i4.1
L_00d7: ldarg.s 7
L_00d9: ldc.i4.0
L_00da: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00df: stloc.s 4 (System.Single)
L_00e1: Label7
L_00e1: ldloc.2
L_00e2: ldc.i4.0
L_00e3: ldarg.2
L_00e4: ldarg.s 4
L_00e6: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_00eb: stloc.s 6 (System.Single)
L_00ed: ldc.r4 1
L_00f2: ldloc.2
L_00f3: callvirt Single get_HeatDamagePerShot()
L_00f8: add
L_00f9: stloc.s 7 (System.Single)
L_00fb: ldloc.0
L_00fc: ldloc.3
L_00fd: conv.r4
L_00fe: ldloc.s 4 (System.Single)
L_0100: mul
L_0101: ldloc.s 6 (System.Single)
L_0103: mul
L_0104: ldloc.s 7 (System.Single)
L_0106: mul
L_0107: add
L_0108: stloc.0
L_0109: Label2
L_0109: Label3
L_0109: Label4
L_0109: ldloc.1
L_010a: ldc.i4.1
L_010b: add
L_010c: stloc.1
L_010d: Label1
L_010d: ldloc.1
L_010e: ldarg.1
L_010f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0114: callvirt Int32 get_Count()
L_0119: blt Label8
L_011e: ldloc.0
L_011f: ldarg.1
L_0120: ldfld BehaviorTree BehaviorTree
L_0125: ldc.i4.s 44
L_0127: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_012c: callvirt Single get_FloatVal()
L_0131: mul
L_0132: ret
DONE

### Patch BattleTech.MultiAttack, BattleTech.Weapon FindWeaponToHitTarget(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant)
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.2
L_0001: isinst BattleTech.Mech
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: callvirt Boolean get_IsEvasive()
L_0013: br Label2
L_0018: Label1
L_0018: ldc.i4.0
L_0019: Label2
L_0019: stloc.1
L_001a: ldc.i4.0
L_001b: stloc.2
L_001c: br Label3
L_0021: Label6
L_0021: ldarg.1
L_0022: ldloc.2
L_0023: callvirt BattleTech.Weapon get_Item(Int32)
L_0028: stloc.3
L_0029: ldarg.0
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: callvirt LOFCache get_LOFCache()
L_0034: ldarg.0
L_0035: ldarg.2
L_0036: ldloc.3
L_0037: callvirt Single get_MaxRange()
L_003c: ldarg.0
L_003d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0042: ldarg.0
L_0043: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0048: ldarg.2
L_0049: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_004e: ldarg.2
L_004f: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0054: ldloc.3
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label4
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006b: ldarg.2
L_006c: ldarg.2
L_006d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0072: ldloc.1
L_0073: ldloc.3
L_0074: ldarg.0
L_0075: callvirt Int32 get_MaxTargets()
L_007a: call Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_007f: ldc.r4 0
L_0084: ble.un Label5
L_0089: ldloc.3
L_008a: br Label7
L_008f: Label4
L_008f: Label5
L_008f: ldloc.2
L_0090: ldc.i4.1
L_0091: add
L_0092: stloc.2
L_0093: Label3
L_0093: ldloc.2
L_0094: ldarg.1
L_0095: callvirt Int32 get_Count()
L_009a: blt Label6
L_009f: ldnull
L_00a0: Label7
L_00a0: ret
DONE

### Patch BattleTech.MultiAttack, Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: System.Single
L_0000: ldc.r4 0
L_0005: stloc 3 (System.Single)
L_0006: ldarg.3
L_0007: ldarg.1
L_0008: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_000d: stloc.2
L_000e: ldloca.s 2 (UnityEngine.Vector3)
L_0010: call Single get_magnitude()
L_0015: ldarg.s 5
L_0017: callvirt Single get_MaxRange()
L_001c: ble.un Label1
L_0021: ldc.r4 0
L_0026: br Label3
L_002b: Label1
L_002b: ldarg.0
L_002c: callvirt BattleTech.CombatGameState get_Combat()
L_0031: callvirt LOFCache get_LOFCache()
L_0036: ldarg.0
L_0037: ldarg.2
L_0038: ldarg.s 5
L_003a: callvirt Single get_MaxRange()
L_003f: ldarg.0
L_0040: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0045: ldarg.0
L_0046: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004b: ldarg.2
L_004c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0051: ldarg.2
L_0052: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0057: ldarg.s 5
L_0059: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005e: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0063: brtrue Label2
L_0068: ldc.r4 0
L_006d: br Label4
L_0072: Label2
L_0072: ldarg.s 5
L_0074: callvirt Int32 get_ShotsWhenFired()
L_0079: ldarg.s 5
L_007b: ldarg.2
L_007c: ldarg.s 6
L_007e: ldarg.1
L_007f: ldarg.3
L_0080: ldc.i4.1
L_0081: ldarg.s 4
L_0083: ldc.i4.0
L_0084: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0089: stloc.0
L_008a: ldarg.s 5
L_008c: ldc.i4.0
L_008d: ldarg.1
L_008e: ldarg.2
L_008f: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0094: stloc.1
L_0095: conv.r4
L_0096: ldloc.0
L_0097: mul
L_0098: ldloc.1
L_0099: mul
L_009a: Label3
L_009a: Label4
L_009a: stloc 3 (System.Single)
L_009b: ldarg 0
L_00a1: ldarg 1
L_00a7: ldarg 2
L_00ad: ldarg 3
L_00b3: ldarg 4
L_00b9: ldarg 5
L_00bf: ldarg 6
L_00c5: ldloca 3 (System.Single)
L_00c7: call Void Postfix(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32, Single ByRef)
L_00cc: ldloc 3 (System.Single)
L_00cd: ret
DONE

### Patch BattleTech.MultiAttack, System.Collections.Generic.List`1[BattleTech.Weapon] PartitionWeaponListToKillTarget(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant, Single)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.Collections.Generic.KeyValuePair`2[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.Weapon
L_0000: Local var 6: BattleTech.Mech
L_0000: Local var 7: System.Boolean
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.Weapon
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Collections.Generic.KeyValuePair`2[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.s 4 (System.Int32)
L_0009: br Label1
L_000e: Label5
L_000e: ldarg.1
L_000f: ldloc.s 4 (System.Int32)
L_0011: callvirt BattleTech.Weapon get_Item(Int32)
L_0016: stloc.s 5 (BattleTech.Weapon)
L_0018: ldarg.2
L_0019: isinst BattleTech.Mech
L_001e: stloc.s 6 (BattleTech.Mech)
L_0020: ldarg.0
L_0021: callvirt BattleTech.CombatGameState get_Combat()
L_0026: callvirt LOFCache get_LOFCache()
L_002b: ldarg.0
L_002c: ldarg.2
L_002d: ldloc.s 5 (BattleTech.Weapon)
L_002f: callvirt Single get_MaxRange()
L_0034: ldarg.0
L_0035: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_003a: ldarg.0
L_003b: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0040: ldarg.2
L_0041: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0046: ldarg.2
L_0047: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004c: ldloc.s 5 (BattleTech.Weapon)
L_004e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0053: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0058: brfalse Label2
L_005d: ldloc.s 6 (BattleTech.Mech)
L_005f: brfalse Label3
L_0064: ldloc.s 6 (BattleTech.Mech)
L_0066: callvirt Boolean get_IsEvasive()
L_006b: br Label4
L_0070: Label3
L_0070: ldc.i4.0
L_0071: Label4
L_0071: stloc.s 7 (System.Boolean)
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_007a: ldarg.2
L_007b: ldarg.2
L_007c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0081: ldloc.s 7 (System.Boolean)
L_0083: ldloc.s 5 (BattleTech.Weapon)
L_0085: ldarg.0
L_0086: callvirt Int32 get_MaxTargets()
L_008b: call Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_0090: stloc.s 8 (System.Single)
L_0092: ldloc.0
L_0093: ldloc.s 5 (BattleTech.Weapon)
L_0095: ldloc.s 8 (System.Single)
L_0097: newobj Void .ctor(Weapon, Single)
L_009c: callvirt Void Add(System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_00a1: Label2
L_00a1: ldloc.s 4 (System.Int32)
L_00a3: ldc.i4.1
L_00a4: add
L_00a5: stloc.s 4 (System.Int32)
L_00a7: Label1
L_00a7: ldloc.s 4 (System.Int32)
L_00a9: ldarg.1
L_00aa: callvirt Int32 get_Count()
L_00af: blt Label5
L_00b4: ldloc.0
L_00b5: ldsfld System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]] <>9__3_0
L_00ba: dup
L_00bb: brtrue Label6
L_00c0: pop
L_00c1: ldsfld BattleTech.MultiAttack+<>c <>9
L_00c6: ldftn Int32 <PartitionWeaponListToKillTarget>b__3_0(System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single], System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_00cc: newobj Void .ctor(Object, IntPtr)
L_00d1: dup
L_00d2: stsfld System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]] <>9__3_0
L_00d7: Label6
L_00d7: callvirt Void Sort(System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]])
L_00dc: ldloc.0
L_00dd: callvirt Void Reverse()
L_00e2: ldc.r4 0
L_00e7: stloc.1
L_00e8: ldarg.2
L_00e9: call Single MinHitPoints(BattleTech.ICombatant)
L_00ee: ldarg.3
L_00ef: mul
L_00f0: stloc.2
L_00f1: newobj Void .ctor()
L_00f6: stloc.3
L_00f7: ldc.i4.0
L_00f8: stloc.s 9 (System.Int32)
L_00fa: br Label7
L_00ff: Label9
L_00ff: ldloc.0
L_0100: ldloc.s 9 (System.Int32)
L_0102: callvirt System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single] get_Item(Int32)
L_0107: stloc.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_0109: ldloca.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_010b: call BattleTech.Weapon get_Key()
L_0110: stloc.s 10 (BattleTech.Weapon)
L_0112: ldloc.0
L_0113: ldloc.s 9 (System.Int32)
L_0115: callvirt System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single] get_Item(Int32)
L_011a: stloc.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_011c: ldloca.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_011e: call Single get_Value()
L_0123: stloc.s 11 (System.Single)
L_0125: ldloc.1
L_0126: ldloc.s 11 (System.Single)
L_0128: add
L_0129: stloc.1
L_012a: ldloc.3
L_012b: ldloc.s 10 (BattleTech.Weapon)
L_012d: callvirt Void Add(BattleTech.Weapon)
L_0132: ldloc.1
L_0133: ldloc.2
L_0134: blt.un Label8
L_0139: ldloc.3
L_013a: br Label10
L_013f: Label8
L_013f: ldloc.s 9 (System.Int32)
L_0141: ldc.i4.1
L_0142: add
L_0143: stloc.s 9 (System.Int32)
L_0145: Label7
L_0145: ldloc.s 9 (System.Int32)
L_0147: ldloc.0
L_0148: callvirt Int32 get_Count()
L_014d: blt Label9
L_0152: ldnull
L_0153: Label10
L_0153: ret
DONE

### Patch BattleTech.MultiAttack, Boolean ValidateMultiAttackOrder(MultiTargetAttackOrderInfo, BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: AttackOrderInfo
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[AttackOrderInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: AttackOrderInfo
L_0000: Local var 7: System.String
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: BattleTech.Weapon
L_0000: Local var 10: BattleTech.ICombatant
L_0000: ldstr "Multiattack validation"
L_0005: ldarg.1
L_0006: ldstr "AI.DecisionMaking"
L_000b: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_0010: ldc.i4.0
L_0011: stloc.1
L_0012: br Label1
L_0017: Label5
L_0017: ldarg.0
L_0018: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_001d: ldloc.1
L_001e: callvirt AttackOrderInfo get_Item(Int32)
L_0023: stloc.2
L_0024: ldstr "SubAttack #{0}: target {1} {2}"
L_0029: ldloc.1
L_002a: box System.Int32
L_002f: ldloc.2
L_0030: ldfld BattleTech.ICombatant TargetUnit
L_0035: callvirt System.String get_GUID()
L_003a: ldloc.2
L_003b: ldfld BattleTech.ICombatant TargetUnit
L_0040: callvirt System.String get_DisplayName()
L_0045: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_004a: ldstr "AI.DecisionMaking"
L_004f: call Void LogAI(System.String, System.String)
L_0054: ldloc.2
L_0055: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_005a: callvirt Enumerator GetEnumerator()
L_005f: stloc.3
.try
{
	L_0060: br Label2
	L_0065: Label3
	L_0065: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0067: call BattleTech.Weapon get_Current()
	L_006c: stloc.s 4 (BattleTech.Weapon)
	L_006e: ldstr "  Weapon {0}"
	L_0073: ldloc.s 4 (BattleTech.Weapon)
	L_0075: callvirt System.String get_Name()
	L_007a: call System.String Format(System.String, System.Object)
	L_007f: ldstr "AI.DecisionMaking"
	L_0084: call Void LogAI(System.String, System.String)
	L_0089: Label2
	L_0089: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_008b: call Boolean MoveNext()
	L_0090: brtrue Label3
	L_0095: leave Label4
	L_009a: leave (autogenerated)
} // end try
.finally
{
	L_009f: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_00a1: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_00a7: callvirt Void Dispose()
	L_00ac: endfinally
	L_00ad: leave (autogenerated)
} // end handler
L_00ae: Label4
L_00ae: ldloc.1
L_00af: ldc.i4.1
L_00b0: add
L_00b1: stloc.1
L_00b2: Label1
L_00b2: ldloc.1
L_00b3: ldarg.0
L_00b4: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_00b9: callvirt Int32 get_Count()
L_00be: blt Label5
L_00c3: newobj Void .ctor()
L_00c8: stloc.0
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_00cf: callvirt Enumerator GetEnumerator()
L_00d4: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
.try
{
	L_00d6: br Label6
	L_00db: Label16
	L_00db: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_00dd: call AttackOrderInfo get_Current()
	L_00e2: stloc.s 6 (AttackOrderInfo)
	L_00e4: ldloc.s 6 (AttackOrderInfo)
	L_00e6: ldfld BattleTech.ICombatant TargetUnit
	L_00eb: callvirt System.String get_GUID()
	L_00f0: stloc.s 7 (System.String)
	L_00f2: ldloc.0
	L_00f3: ldloc.s 7 (System.String)
	L_00f5: callvirt Int32 IndexOf(System.String)
	L_00fa: ldc.i4.m1
	L_00fb: beq Label7
	L_0100: ldstr "Multiattack error: Duplicated target GUIDs"
	L_0105: ldarg.1
	L_0106: ldstr "AI.DecisionMaking"
	L_010b: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
	L_0110: ldc.i4.0
	L_0111: stloc.s 8 (System.Boolean)
	L_0113: leave Label8
	L_0118: Label7
	L_0118: ldloc.s 6 (AttackOrderInfo)
	L_011a: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
	L_011f: callvirt Enumerator GetEnumerator()
	L_0124: stloc.3
	.try
	{
		L_0125: br Label9
		L_012a: Label14
		L_012a: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_012c: call BattleTech.Weapon get_Current()
		L_0131: stloc.s 9 (BattleTech.Weapon)
		L_0133: ldloc.s 9 (BattleTech.Weapon)
		L_0135: callvirt Boolean get_CanFire()
		L_013a: brtrue Label10
		L_013f: ldstr "Multiattack error: weapon that cannot fire"
		L_0144: ldarg.1
		L_0145: ldstr "AI.DecisionMaking"
		L_014a: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
		L_014f: ldc.i4.0
		L_0150: stloc.s 8 (System.Boolean)
		L_0152: leave Label11
		L_0157: Label10
		L_0157: ldloc.s 6 (AttackOrderInfo)
		L_0159: ldfld BattleTech.ICombatant TargetUnit
		L_015e: stloc.s 10 (BattleTech.ICombatant)
		L_0160: ldarg.1
		L_0161: callvirt BattleTech.CombatGameState get_Combat()
		L_0166: callvirt LOFCache get_LOFCache()
		L_016b: ldarg.1
		L_016c: ldloc.s 10 (BattleTech.ICombatant)
		L_016e: ldloc.s 9 (BattleTech.Weapon)
		L_0170: callvirt Single get_MaxRange()
		L_0175: ldarg.1
		L_0176: callvirt UnityEngine.Vector3 get_CurrentPosition()
		L_017b: ldarg.1
		L_017c: callvirt UnityEngine.Quaternion get_CurrentRotation()
		L_0181: ldloc.s 10 (BattleTech.ICombatant)
		L_0183: callvirt UnityEngine.Vector3 get_CurrentPosition()
		L_0188: ldloc.s 10 (BattleTech.ICombatant)
		L_018a: callvirt UnityEngine.Quaternion get_CurrentRotation()
		L_018f: ldloc.s 9 (BattleTech.Weapon)
		L_0191: call Boolean IndirectFireCapable(BattleTech.Weapon)
		L_0196: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
		L_019b: brtrue Label12
		L_01a0: ldstr "Multiattack error: weapon that cannot fire"
		L_01a5: ldarg.1
		L_01a6: ldstr "AI.DecisionMaking"
		L_01ab: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
		L_01b0: ldc.i4.0
		L_01b1: stloc.s 8 (System.Boolean)
		L_01b3: leave Label13
		L_01b8: Label9
		L_01b8: Label12
		L_01b8: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_01ba: call Boolean MoveNext()
		L_01bf: brtrue Label14
		L_01c4: leave Label15
		L_01c9: leave (autogenerated)
	} // end try
	.finally
	{
		L_01ce: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_01d0: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
		L_01d6: callvirt Void Dispose()
		L_01db: endfinally
		L_01dc: leave (autogenerated)
	} // end handler
	L_01dd: Label6
	L_01dd: Label15
	L_01dd: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_01df: call Boolean MoveNext()
	L_01e4: brtrue Label16
	L_01e9: leave Label17
	L_01ee: leave (autogenerated)
} // end try
.finally
{
	L_01f3: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_01f5: constrained. System.Collections.Generic.List`1+Enumerator[AttackOrderInfo]
	L_01fb: callvirt Void Dispose()
	L_0200: endfinally
	L_0201: leave (autogenerated)
} // end handler
L_0202: Label17
L_0202: ldstr "Multiattack validates OK"
L_0207: ldarg.1
L_0208: ldstr "AI.DecisionMaking"
L_020d: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_0212: ldc.i4.1
L_0213: br Label21
L_0218: Label8
L_0218: Label11
L_0218: Label13
L_0218: ldloc.s 8 (System.Boolean)
L_021a: Label21
L_021a: ret
DONE

### Patch BattleTech.PreferExposedAlonePositionalFactor, Void InitEvaluationForPhaseForUnit(BattleTech.AbstractActor)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Int32
L_0000: Local var 7: BattleTech.AbstractActor
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Boolean
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.Weapon
L_0000: ldarg.1
L_0001: ldfld BehaviorTree BehaviorTree
L_0006: ldc.i4 224
L_000b: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0010: callvirt Int32 get_IntVal()
L_0015: stloc.0
L_0016: ldarg.1
L_0017: ldfld BehaviorTree BehaviorTree
L_001c: ldc.i4 225
L_0021: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0026: callvirt Int32 get_IntVal()
L_002b: stloc.1
L_002c: ldloc.1
L_002d: ldloc.0
L_002e: ble Label1
L_0033: ldarg.1
L_0034: callvirt BattleTech.CombatGameState get_Combat()
L_0039: callvirt BattleTech.TurnDirector get_TurnDirector()
L_003e: callvirt Int32 get_CurrentRound()
L_0043: ldloc.0
L_0044: sub
L_0045: stloc.2
L_0046: ldarg.0
L_0047: ldloc.2
L_0048: ldarg.1
L_0049: ldfld BehaviorTree BehaviorTree
L_004e: ldc.i4 223
L_0053: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0058: callvirt Int32 get_IntVal()
L_005d: cgt
L_005f: stfld System.Boolean exposureOK
L_0064: br Label2
L_0069: Label1
L_0069: ldarg.1
L_006a: callvirt BattleTech.CombatGameState get_Combat()
L_006f: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0074: callvirt Int32 get_CurrentRound()
L_0079: ldloc.1
L_007a: sub
L_007b: stloc.3
L_007c: ldarg.0
L_007d: ldloc.3
L_007e: ldarg.1
L_007f: ldfld BehaviorTree BehaviorTree
L_0084: ldc.i4 222
L_0089: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_008e: callvirt Int32 get_IntVal()
L_0093: cgt
L_0095: ldc.i4.0
L_0096: ceq
L_0098: stfld System.Boolean exposureOK
L_009d: Label2
L_009d: ldarg.0
L_009e: ldc.i4.0
L_009f: stfld System.Int32 exposedTeammateCount
L_00a4: ldarg.0
L_00a5: newobj Void .ctor()
L_00aa: stfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Single] maxRanges
L_00af: ldarg.0
L_00b0: newobj Void .ctor()
L_00b5: stfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Boolean] isIndirectFireCapable
L_00ba: ldc.i4.0
L_00bb: stloc.s 4 (System.Int32)
L_00bd: br Label3
L_00c2: Label7
L_00c2: ldarg.1
L_00c3: callvirt BattleTech.CombatGameState get_Combat()
L_00c8: callvirt ItemRegistry get_ItemRegistry()
L_00cd: ldarg.1
L_00ce: callvirt Lance get_lance()
L_00d3: ldfld System.Collections.Generic.List`1[System.String] unitGuids
L_00d8: ldloc.s 4 (System.Int32)
L_00da: callvirt System.String get_Item(Int32)
L_00df: callvirt BattleTech.AbstractActor GetItemByGUID[AbstractActor](System.String)
L_00e4: stloc.s 5 (BattleTech.AbstractActor)
L_00e6: ldloc.s 5 (BattleTech.AbstractActor)
L_00e8: brfalse Label4
L_00ed: ldloc.s 5 (BattleTech.AbstractActor)
L_00ef: callvirt Boolean get_IsDead()
L_00f4: brtrue Label5
L_00f9: ldloc.s 5 (BattleTech.AbstractActor)
L_00fb: ldarg.1
L_00fc: callvirt BattleTech.CombatGameState get_Combat()
L_0101: call Boolean IsExposedToHostileFire(BattleTech.AbstractActor, BattleTech.CombatGameState)
L_0106: brfalse Label6
L_010b: ldarg.0
L_010c: ldarg.0
L_010d: ldfld System.Int32 exposedTeammateCount
L_0112: ldc.i4.1
L_0113: add
L_0114: stfld System.Int32 exposedTeammateCount
L_0119: Label4
L_0119: Label5
L_0119: Label6
L_0119: ldloc.s 4 (System.Int32)
L_011b: ldc.i4.1
L_011c: add
L_011d: stloc.s 4 (System.Int32)
L_011f: Label3
L_011f: ldloc.s 4 (System.Int32)
L_0121: ldarg.1
L_0122: callvirt Lance get_lance()
L_0127: ldfld System.Collections.Generic.List`1[System.String] unitGuids
L_012c: callvirt Int32 get_Count()
L_0131: blt Label7
L_0136: ldc.i4.0
L_0137: stloc.s 6 (System.Int32)
L_0139: br Label8
L_013e: Label14
L_013e: ldarg.1
L_013f: ldfld BehaviorTree BehaviorTree
L_0144: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0149: ldloc.s 6 (System.Int32)
L_014b: callvirt BattleTech.ICombatant get_Item(Int32)
L_0150: isinst BattleTech.AbstractActor
L_0155: stloc.s 7 (BattleTech.AbstractActor)
L_0157: ldloc.s 7 (BattleTech.AbstractActor)
L_0159: brfalse Label9
L_015e: ldloc.s 7 (BattleTech.AbstractActor)
L_0160: callvirt Boolean get_IsDead()
L_0165: brtrue Label10
L_016a: ldc.r4 -3.402823E+38
L_016f: stloc.s 8 (System.Single)
L_0171: ldc.i4.0
L_0172: stloc.s 9 (System.Boolean)
L_0174: ldc.i4.0
L_0175: stloc.s 10 (System.Int32)
L_0177: br Label11
L_017c: Label13
L_017c: ldloc.s 7 (BattleTech.AbstractActor)
L_017e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0183: ldloc.s 10 (System.Int32)
L_0185: callvirt BattleTech.Weapon get_Item(Int32)
L_018a: stloc.s 11 (BattleTech.Weapon)
L_018c: ldloc.s 11 (BattleTech.Weapon)
L_018e: callvirt Boolean get_CanFire()
L_0193: brfalse Label12
L_0198: ldloc.s 9 (System.Boolean)
L_019a: ldloc.s 11 (BattleTech.Weapon)
L_019c: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_01a1: or
L_01a2: stloc.s 9 (System.Boolean)
L_01a4: ldloc.s 8 (System.Single)
L_01a6: ldloc.s 11 (BattleTech.Weapon)
L_01a8: callvirt Single get_MaxRange()
L_01ad: call Single Max(Single, Single)
L_01b2: stloc.s 8 (System.Single)
L_01b4: Label12
L_01b4: ldloc.s 10 (System.Int32)
L_01b6: ldc.i4.1
L_01b7: add
L_01b8: stloc.s 10 (System.Int32)
L_01ba: Label11
L_01ba: ldloc.s 10 (System.Int32)
L_01bc: ldloc.s 7 (BattleTech.AbstractActor)
L_01be: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_01c3: callvirt Int32 get_Count()
L_01c8: blt Label13
L_01cd: ldarg.0
L_01ce: ldfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Single] maxRanges
L_01d3: ldloc.s 7 (BattleTech.AbstractActor)
L_01d5: ldloc.s 8 (System.Single)
L_01d7: callvirt Void set_Item(BattleTech.AbstractActor, Single)
L_01dc: ldarg.0
L_01dd: ldfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Boolean] isIndirectFireCapable
L_01e2: ldloc.s 7 (BattleTech.AbstractActor)
L_01e4: ldloc.s 9 (System.Boolean)
L_01e6: callvirt Void set_Item(BattleTech.AbstractActor, Boolean)
L_01eb: Label9
L_01eb: Label10
L_01eb: ldloc.s 6 (System.Int32)
L_01ed: ldc.i4.1
L_01ee: add
L_01ef: stloc.s 6 (System.Int32)
L_01f1: Label8
L_01f1: ldloc.s 6 (System.Int32)
L_01f3: ldarg.1
L_01f4: ldfld BehaviorTree BehaviorTree
L_01f9: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_01fe: callvirt Int32 get_Count()
L_0203: blt Label14
L_0208: ret
DONE

### Patch BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor, Single EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor, UnityEngine.Vector3, Single, BattleTech.MoveType, BattleTech.PathNode)
L_0000: Local var 0: UnityEngine.Quaternion
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: ldarg.0
L_0001: ldfld BattleTech.AbstractActor exposedAlly
L_0006: brtrue Label1
L_000b: ldc.r4 0
L_0010: br Label8
L_0015: Label1
L_0015: ldc.r4 0
L_001a: ldarg.3
L_001b: ldc.r4 0
L_0020: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_0025: stloc.0
L_0026: ldc.r4 -3.402823E+38
L_002b: stloc.1
L_002c: ldc.i4.0
L_002d: stloc.2
L_002e: ldc.i4.0
L_002f: stloc.3
L_0030: br Label2
L_0035: Label4
L_0035: ldarg.1
L_0036: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_003b: ldloc.3
L_003c: callvirt BattleTech.Weapon get_Item(Int32)
L_0041: stloc.s 4 (BattleTech.Weapon)
L_0043: ldloc.s 4 (BattleTech.Weapon)
L_0045: callvirt Boolean get_CanFire()
L_004a: brfalse Label3
L_004f: ldloc.s 4 (BattleTech.Weapon)
L_0051: callvirt Single get_MaxRange()
L_0056: ldloc.1
L_0057: call Single Max(Single, Single)
L_005c: stloc.1
L_005d: ldloc.2
L_005e: ldloc.s 4 (BattleTech.Weapon)
L_0060: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0065: or
L_0066: stloc.2
L_0067: Label3
L_0067: ldloc.3
L_0068: ldc.i4.1
L_0069: add
L_006a: stloc.3
L_006b: Label2
L_006b: ldloc.3
L_006c: ldarg.1
L_006d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0072: callvirt Int32 get_Count()
L_0077: blt Label4
L_007c: ldc.i4.0
L_007d: stloc.2
L_007e: ldc.i4.0
L_007f: stloc.s 5 (System.Int32)
L_0081: br Label5
L_0086: Label7
L_0086: ldarg.1
L_0087: ldfld BehaviorTree BehaviorTree
L_008c: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0091: ldloc.s 5 (System.Int32)
L_0093: callvirt BattleTech.ICombatant get_Item(Int32)
L_0098: stloc.s 6 (BattleTech.ICombatant)
L_009a: ldarg.1
L_009b: ldloc.s 6 (BattleTech.ICombatant)
L_009d: ldloc.1
L_009e: ldarg.2
L_009f: ldloc.0
L_00a0: ldloc.2
L_00a1: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_00a6: brfalse Label6
L_00ab: ldc.r4 1
L_00b0: br Label9
L_00b5: Label6
L_00b5: ldloc.s 5 (System.Int32)
L_00b7: ldc.i4.1
L_00b8: add
L_00b9: stloc.s 5 (System.Int32)
L_00bb: Label5
L_00bb: ldloc.s 5 (System.Int32)
L_00bd: ldarg.1
L_00be: ldfld BehaviorTree BehaviorTree
L_00c3: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00c8: callvirt Int32 get_Count()
L_00cd: blt Label7
L_00d2: ldc.r4 0
L_00d7: Label8
L_00d7: Label9
L_00d7: ret
DONE

### Patch BattleTech.PreferLethalDamageToRearArcFromHostileFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: UnityEngine.Quaternion
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label7
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.3
L_0026: ldarg.1
L_0027: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_002c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0031: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0036: stloc.3
L_0037: ldarg.1
L_0038: callvirt BattleTech.CombatGameState get_Combat()
L_003d: callvirt LOFCache get_LOFCache()
L_0042: ldarg.1
L_0043: ldarg.2
L_0044: ldloc.2
L_0045: callvirt Single get_MaxRange()
L_004a: ldarg.1
L_004b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0050: ldloc.3
L_0051: ldarg.3
L_0052: ldarg.s 4
L_0054: ldloc.2
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label3
L_0064: ldloc.2
L_0065: ldarg.2
L_0066: ldarg.1
L_0067: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006c: ldloc.3
L_006d: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0072: brfalse Label4
L_0077: ldloc.2
L_0078: callvirt Int32 get_ShotsWhenFired()
L_007d: stloc.s 4 (System.Int32)
L_007f: ldarg.2
L_0080: isinst BattleTech.AbstractActor
L_0085: stloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: brfalse Label5
L_008e: ldloc.s 5 (BattleTech.AbstractActor)
L_0090: callvirt Int32 get_EvasivePipsCurrent()
L_0095: stloc.s 9 (System.Int32)
L_0097: ldloc.s 5 (BattleTech.AbstractActor)
L_0099: ldloc.s 5 (BattleTech.AbstractActor)
L_009b: ldarg.3
L_009c: ldloc.s 5 (BattleTech.AbstractActor)
L_009e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a3: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00a8: stloc.s 10 (UnityEngine.Vector3)
L_00aa: ldloca.s 10 (UnityEngine.Vector3)
L_00ac: call Single get_magnitude()
L_00b1: ldarg.s 6
L_00b3: ldarg.s 5
L_00b5: ldc.i4.0
L_00b6: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00bb: callvirt Void set_EvasivePipsCurrent(Int32)
L_00c0: ldloc.2
L_00c1: ldarg.2
L_00c2: ldc.i4.1
L_00c3: ldarg.1
L_00c4: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00c9: ldarg.3
L_00ca: ldc.i4.1
L_00cb: ldarg.s 5
L_00cd: ldc.i4.0
L_00ce: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00d3: stloc.s 6 (System.Single)
L_00d5: ldloc.s 5 (BattleTech.AbstractActor)
L_00d7: ldloc.s 9 (System.Int32)
L_00d9: callvirt Void set_EvasivePipsCurrent(Int32)
L_00de: br Label6
L_00e3: Label5
L_00e3: ldloc.2
L_00e4: ldarg.2
L_00e5: ldc.i4.1
L_00e6: ldarg.1
L_00e7: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00ec: ldarg.3
L_00ed: ldc.i4.1
L_00ee: ldarg.s 5
L_00f0: ldc.i4.0
L_00f1: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00f6: stloc.s 6 (System.Single)
L_00f8: Label6
L_00f8: ldloc.2
L_00f9: ldc.i4.0
L_00fa: ldarg.1
L_00fb: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0100: ldarg.2
L_0101: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0106: stloc.s 7 (System.Single)
L_0108: ldc.r4 1
L_010d: ldloc.2
L_010e: callvirt Single get_HeatDamagePerShot()
L_0113: add
L_0114: stloc.s 8 (System.Single)
L_0116: ldloc.0
L_0117: ldloc.s 4 (System.Int32)
L_0119: conv.r4
L_011a: ldloc.s 6 (System.Single)
L_011c: mul
L_011d: ldloc.s 7 (System.Single)
L_011f: mul
L_0120: ldloc.s 8 (System.Single)
L_0122: mul
L_0123: add
L_0124: stloc.0
L_0125: Label2
L_0125: Label3
L_0125: Label4
L_0125: ldloc.1
L_0126: ldc.i4.1
L_0127: add
L_0128: stloc.1
L_0129: Label1
L_0129: ldloc.1
L_012a: ldarg.1
L_012b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0130: callvirt Int32 get_Count()
L_0135: blt Label7
L_013a: ldloc.0
L_013b: ret
DONE

### Patch BattleTech.PreferNotLethalPositionFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.MoveType)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: UnityEngine.Quaternion
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label7
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.3
L_0026: ldarg.1
L_0027: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_002c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0031: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0036: stloc.3
L_0037: ldarg.1
L_0038: callvirt BattleTech.CombatGameState get_Combat()
L_003d: callvirt LOFCache get_LOFCache()
L_0042: ldarg.1
L_0043: ldarg.2
L_0044: ldloc.2
L_0045: callvirt Single get_MaxRange()
L_004a: ldarg.1
L_004b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0050: ldloc.3
L_0051: ldarg.3
L_0052: ldarg.s 4
L_0054: ldloc.2
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label3
L_0064: ldloc.2
L_0065: ldarg.2
L_0066: ldarg.1
L_0067: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006c: ldloc.3
L_006d: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0072: brfalse Label4
L_0077: ldloc.2
L_0078: callvirt Int32 get_ShotsWhenFired()
L_007d: stloc.s 4 (System.Int32)
L_007f: ldarg.2
L_0080: isinst BattleTech.AbstractActor
L_0085: stloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: brfalse Label5
L_008e: ldloc.s 5 (BattleTech.AbstractActor)
L_0090: callvirt Int32 get_EvasivePipsCurrent()
L_0095: stloc.s 9 (System.Int32)
L_0097: ldloc.s 5 (BattleTech.AbstractActor)
L_0099: ldloc.s 5 (BattleTech.AbstractActor)
L_009b: ldarg.3
L_009c: ldarg.2
L_009d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a2: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00a7: stloc.s 10 (UnityEngine.Vector3)
L_00a9: ldloca.s 10 (UnityEngine.Vector3)
L_00ab: call Single get_magnitude()
L_00b0: ldarg.s 5
L_00b2: ldc.i4.4
L_00b3: ceq
L_00b5: ldarg.s 5
L_00b7: ldc.i4.2
L_00b8: ceq
L_00ba: ldarg.s 5
L_00bc: ldc.i4.5
L_00bd: ceq
L_00bf: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00c4: callvirt Void set_EvasivePipsCurrent(Int32)
L_00c9: ldloc.2
L_00ca: ldarg.2
L_00cb: ldc.i4.1
L_00cc: ldarg.1
L_00cd: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00d2: ldarg.3
L_00d3: ldc.i4.1
L_00d4: ldarg.s 5
L_00d6: ldc.i4.2
L_00d7: ceq
L_00d9: ldc.i4.0
L_00da: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00df: stloc.s 6 (System.Single)
L_00e1: ldloc.s 5 (BattleTech.AbstractActor)
L_00e3: ldloc.s 9 (System.Int32)
L_00e5: callvirt Void set_EvasivePipsCurrent(Int32)
L_00ea: br Label6
L_00ef: Label5
L_00ef: ldloc.2
L_00f0: ldarg.2
L_00f1: ldc.i4.1
L_00f2: ldarg.1
L_00f3: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00f8: ldarg.3
L_00f9: ldc.i4.1
L_00fa: ldarg.s 5
L_00fc: ldc.i4.2
L_00fd: ceq
L_00ff: ldc.i4.0
L_0100: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0105: stloc.s 6 (System.Single)
L_0107: Label6
L_0107: ldloc.2
L_0108: ldc.i4.0
L_0109: ldarg.1
L_010a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_010f: ldarg.2
L_0110: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0115: stloc.s 7 (System.Single)
L_0117: ldc.r4 1
L_011c: ldloc.2
L_011d: callvirt Single get_HeatDamagePerShot()
L_0122: add
L_0123: stloc.s 8 (System.Single)
L_0125: ldloc.0
L_0126: ldloc.s 4 (System.Int32)
L_0128: conv.r4
L_0129: ldloc.s 6 (System.Single)
L_012b: mul
L_012c: ldloc.s 7 (System.Single)
L_012e: mul
L_012f: ldloc.s 8 (System.Single)
L_0131: mul
L_0132: add
L_0133: stloc.0
L_0134: Label2
L_0134: Label3
L_0134: Label4
L_0134: ldloc.1
L_0135: ldc.i4.1
L_0136: add
L_0137: stloc.1
L_0138: Label1
L_0138: ldloc.1
L_0139: ldarg.1
L_013a: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_013f: callvirt Int32 get_Count()
L_0144: blt Label7
L_0149: ldloc.0
L_014a: ret
DONE

### Patch BattleTech.ToHit, Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Single
L_0000: Local var 13: System.Single
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Single
L_0000: Local var 18: System.Single
L_0000: Local var 19: System.Single
L_0000: Local var 20: System.Single
L_0000: Local var 21: System.Single
L_0000: Local var 22: System.Single
L_0000: Local var 23: System.Single
L_0000: ldc.r4 0
L_0005: stloc 23 (System.Single)
L_0007: ldarg.s 6
L_0009: ldc.i4.2
L_000a: bge Label1
L_000f: ldarg.2
L_0010: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0015: br Label2
L_001a: Label1
L_001a: ldc.i4.0
L_001b: Label2
L_001b: stloc.0
L_001c: ldarg.0
L_001d: ldarg.2
L_001e: ldarg.s 4
L_0020: ldarg.s 5
L_0022: call Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_0027: ldarg.0
L_0028: ldarg.1
L_0029: ldarg.3
L_002a: ldarg.s 6
L_002c: call Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_0031: stloc.1
L_0032: ldarg.0
L_0033: ldarg.1
L_0034: call Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_0039: stloc.2
L_003a: ldarg.0
L_003b: ldarg.1
L_003c: call Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0041: stloc.3
L_0042: ldarg.0
L_0043: ldarg.2
L_0044: call Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0049: stloc.s 4 (System.Single)
L_004b: ldarg.0
L_004c: ldarg.1
L_004d: call Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0052: stloc.s 5 (System.Single)
L_0054: ldarg.0
L_0055: ldarg.s 4
L_0057: ldfld System.Single y
L_005c: ldarg.s 5
L_005e: ldfld System.Single y
L_0063: call Single GetHeightModifier(Single, Single)
L_0068: stloc.s 6 (System.Single)
L_006a: ldarg.0
L_006b: ldarg.1
L_006c: call Single GetHeatModifier(BattleTech.AbstractActor)
L_0071: stloc.s 7 (System.Single)
L_0073: ldarg.0
L_0074: ldarg.3
L_0075: ldarg.s 5
L_0077: ldc.i4.0
L_0078: call Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_007d: stloc.s 8 (System.Single)
L_007f: ldarg.0
L_0080: ldarg.s 4
L_0082: ldc.i4.0
L_0083: call Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_0088: stloc.s 9 (System.Single)
L_008a: ldarg.0
L_008b: ldarg.3
L_008c: ldarg.2
L_008d: call Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0092: stloc.s 10 (System.Single)
L_0094: ldarg.0
L_0095: ldarg.1
L_0096: ldarg.2
L_0097: call Single GetSelfDamageModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_009c: stloc.s 11 (System.Single)
L_009e: ldarg.0
L_009f: ldarg.3
L_00a0: call Single GetTargetSizeModifier(BattleTech.ICombatant)
L_00a5: stloc.s 12 (System.Single)
L_00a7: ldarg.0
L_00a8: ldarg.3
L_00a9: ldc.i4.0
L_00aa: call Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_00af: stloc.s 13 (System.Single)
L_00b1: ldarg.0
L_00b2: ldarg.3
L_00b3: ldc.i4.0
L_00b4: call Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_00b9: stloc.s 14 (System.Single)
L_00bb: ldarg.0
L_00bc: ldarg.1
L_00bd: ldarg.2
L_00be: call Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00c3: stloc.s 15 (System.Single)
L_00c5: ldarg.0
L_00c6: ldarg.1
L_00c7: call Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_00cc: stloc.s 16 (System.Single)
L_00ce: ldarg.0
L_00cf: ldarg.3
L_00d0: ldarg.2
L_00d1: call Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_00d6: stloc.s 17 (System.Single)
L_00d8: ldarg.0
L_00d9: ldarg.2
L_00da: call Single GetRefireModifier(BattleTech.Weapon)
L_00df: stloc.s 18 (System.Single)
L_00e1: ldarg.0
L_00e2: ldarg.3
L_00e3: ldloc.0
L_00e4: call Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_00e9: stloc.s 19 (System.Single)
L_00eb: ldarg.0
L_00ec: ldarg.1
L_00ed: ldloc.0
L_00ee: call Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_00f3: stloc.s 20 (System.Single)
L_00f5: ldarg.0
L_00f6: ldarg.3
L_00f7: ldarg.s 7
L_00f9: call Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_00fe: stloc.s 21 (System.Single)
L_0100: ldloc.1
L_0101: add
L_0102: ldloc.2
L_0103: add
L_0104: ldloc.3
L_0105: add
L_0106: ldloc.s 4 (System.Single)
L_0108: add
L_0109: ldloc.s 5 (System.Single)
L_010b: add
L_010c: ldloc.s 6 (System.Single)
L_010e: add
L_010f: ldloc.s 7 (System.Single)
L_0111: add
L_0112: ldloc.s 8 (System.Single)
L_0114: add
L_0115: ldloc.s 9 (System.Single)
L_0117: add
L_0118: ldloc.s 10 (System.Single)
L_011a: add
L_011b: ldloc.s 11 (System.Single)
L_011d: add
L_011e: ldloc.s 12 (System.Single)
L_0120: add
L_0121: ldloc.s 13 (System.Single)
L_0123: add
L_0124: ldloc.s 14 (System.Single)
L_0126: add
L_0127: ldloc.s 15 (System.Single)
L_0129: add
L_012a: ldloc.s 16 (System.Single)
L_012c: add
L_012d: ldloc.s 17 (System.Single)
L_012f: add
L_0130: ldloc.s 18 (System.Single)
L_0132: add
L_0133: ldloc.s 19 (System.Single)
L_0135: add
L_0136: ldloc.s 20 (System.Single)
L_0138: add
L_0139: ldloc.s 21 (System.Single)
L_013b: add
L_013c: stloc.s 22 (System.Single)
L_013e: ldloc.s 22 (System.Single)
L_0140: ldc.r4 0
L_0145: bge.un Label3
L_014a: ldarg.0
L_014b: ldfld BattleTech.CombatGameState combat
L_0150: callvirt BattleTech.CombatGameConstants get_Constants()
L_0155: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_015a: ldfld System.Boolean AllowTotalNegativeModifier
L_015f: brtrue Label4
L_0164: ldc.r4 0
L_0169: stloc.s 22 (System.Single)
L_016b: Label3
L_016b: Label4
L_016b: ldloc.s 22 (System.Single)
L_016d: stloc 23 (System.Single)
L_016f: ldarg.0
L_0170: ldloca 23 (System.Single)
L_0172: ldarg 1
L_0178: ldarg 2
L_017e: ldarg 3
L_0184: ldarg 4
L_018a: ldarg 5
L_0190: ldarg 6
L_0196: ldarg 7
L_019c: call Void Postfix(BattleTech.ToHit, Single ByRef, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_01a1: ldarg.0
L_01a2: ldarg 1
L_01a8: ldarg 2
L_01ae: ldarg 3
L_01b4: ldarg 4
L_01ba: ldarg 5
L_01c0: ldarg 6
L_01c6: ldarg 7
L_01cc: ldloca 23 (System.Single)
L_01ce: call Void Postfix(BattleTech.ToHit, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean, Single ByRef)
L_01d3: ldloc 23 (System.Single)
L_01d5: ret
DONE

### Patch BattleTech.ToHit, System.String GetAllModifiersDescription(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Single
L_0000: Local var 13: System.Single
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Single
L_0000: Local var 18: System.Single
L_0000: Local var 19: System.Single
L_0000: Local var 20: System.Single
L_0000: Local var 21: System.Single
L_0000: Local var 22: System.Single
L_0000: Local var 23: System.Single
L_0000: Local var 24: System.Single
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.String
L_0000: ldnull
L_0001: stloc 26 (System.String)
L_0003: ldstr ""
L_0008: stloc.0
L_0009: ldarg.s 6
L_000b: ldc.i4.2
L_000c: bge Label1
L_0011: ldarg.2
L_0012: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0017: br Label2
L_001c: Label1
L_001c: ldc.i4.0
L_001d: Label2
L_001d: stloc.1
L_001e: ldarg.0
L_001f: ldarg.2
L_0020: ldarg.s 4
L_0022: ldarg.s 5
L_0024: call Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_0029: stloc.2
L_002a: ldarg.0
L_002b: ldarg.1
L_002c: ldarg.3
L_002d: ldarg.s 6
L_002f: call Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_0034: stloc.3
L_0035: ldarg.0
L_0036: ldarg.1
L_0037: call Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_003c: stloc.s 4 (System.Single)
L_003e: ldarg.0
L_003f: ldarg.1
L_0040: call Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0045: stloc.s 5 (System.Single)
L_0047: ldarg.0
L_0048: ldarg.2
L_0049: call Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_004e: stloc.s 6 (System.Single)
L_0050: ldarg.0
L_0051: ldarg.1
L_0052: call Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0057: stloc.s 7 (System.Single)
L_0059: ldarg.0
L_005a: ldarg.s 4
L_005c: ldfld System.Single y
L_0061: ldarg.s 5
L_0063: ldfld System.Single y
L_0068: call Single GetHeightModifier(Single, Single)
L_006d: stloc.s 8 (System.Single)
L_006f: ldarg.0
L_0070: ldarg.1
L_0071: call Single GetHeatModifier(BattleTech.AbstractActor)
L_0076: stloc.s 9 (System.Single)
L_0078: ldarg.0
L_0079: ldarg.3
L_007a: ldarg.s 5
L_007c: ldc.i4.0
L_007d: call Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_0082: stloc.s 10 (System.Single)
L_0084: ldarg.0
L_0085: ldarg.s 4
L_0087: ldc.i4.0
L_0088: call Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_008d: stloc.s 11 (System.Single)
L_008f: ldarg.0
L_0090: ldarg.3
L_0091: ldarg.2
L_0092: call Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0097: stloc.s 12 (System.Single)
L_0099: ldarg.0
L_009a: ldarg.1
L_009b: ldarg.2
L_009c: call Single GetSelfDamageModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00a1: stloc.s 13 (System.Single)
L_00a3: ldarg.0
L_00a4: ldarg.3
L_00a5: call Single GetTargetSizeModifier(BattleTech.ICombatant)
L_00aa: stloc.s 14 (System.Single)
L_00ac: ldarg.0
L_00ad: ldarg.3
L_00ae: ldc.i4.0
L_00af: call Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_00b4: stloc.s 15 (System.Single)
L_00b6: ldarg.0
L_00b7: ldarg.3
L_00b8: ldc.i4.0
L_00b9: call Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_00be: stloc.s 16 (System.Single)
L_00c0: ldarg.0
L_00c1: ldarg.1
L_00c2: ldarg.2
L_00c3: call Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00c8: stloc.s 17 (System.Single)
L_00ca: ldarg.0
L_00cb: ldarg.1
L_00cc: call Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_00d1: stloc.s 18 (System.Single)
L_00d3: ldarg.0
L_00d4: ldarg.3
L_00d5: ldarg.2
L_00d6: call Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_00db: stloc.s 19 (System.Single)
L_00dd: ldarg.0
L_00de: ldarg.2
L_00df: call Single GetRefireModifier(BattleTech.Weapon)
L_00e4: stloc.s 20 (System.Single)
L_00e6: ldarg.0
L_00e7: ldarg.3
L_00e8: ldloc.1
L_00e9: call Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_00ee: stloc.s 21 (System.Single)
L_00f0: ldarg.0
L_00f1: ldarg.1
L_00f2: ldloc.1
L_00f3: call Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_00f8: stloc.s 22 (System.Single)
L_00fa: ldarg.0
L_00fb: ldarg.3
L_00fc: ldarg.s 7
L_00fe: call Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_0103: stloc.s 23 (System.Single)
L_0105: ldloc.2
L_0106: call Boolean FloatIsNearZero(Single)
L_010b: brtrue Label3
L_0110: ldstr "{0}RANGE {1:+#;-#}; "
L_0115: ldloc.0
L_0116: ldloc.2
L_0117: conv.i4
L_0118: box System.Int32
L_011d: call System.String Format(System.String, System.Object, System.Object)
L_0122: stloc.0
L_0123: Label3
L_0123: ldloc.3
L_0124: call Boolean FloatIsNearZero(Single)
L_0129: brtrue Label4
L_012e: ldstr "{0}COVER {1:+#;-#}; "
L_0133: ldloc.0
L_0134: ldloc.2
L_0135: conv.i4
L_0136: box System.Int32
L_013b: call System.String Format(System.String, System.Object, System.Object)
L_0140: stloc.0
L_0141: Label4
L_0141: ldloc.s 4 (System.Single)
L_0143: call Boolean FloatIsNearZero(Single)
L_0148: brtrue Label5
L_014d: ldstr "{0}SELF-MOVED {1:+#;-#}; "
L_0152: ldloc.0
L_0153: ldloc.s 4 (System.Single)
L_0155: conv.i4
L_0156: box System.Int32
L_015b: call System.String Format(System.String, System.Object, System.Object)
L_0160: stloc.0
L_0161: Label5
L_0161: ldloc.s 5 (System.Single)
L_0163: call Boolean FloatIsNearZero(Single)
L_0168: brtrue Label6
L_016d: ldstr "{0}SELF-SPRINTED {1:+#;-#}; "
L_0172: ldloc.0
L_0173: ldloc.s 5 (System.Single)
L_0175: conv.i4
L_0176: box System.Int32
L_017b: call System.String Format(System.String, System.Object, System.Object)
L_0180: stloc.0
L_0181: Label6
L_0181: ldloc.s 6 (System.Single)
L_0183: call Boolean FloatIsNearZero(Single)
L_0188: brtrue Label7
L_018d: ldstr "{0}SELF-ARM MOUNTED {1:+#;-#}; "
L_0192: ldloc.0
L_0193: ldloc.s 6 (System.Single)
L_0195: conv.i4
L_0196: box System.Int32
L_019b: call System.String Format(System.String, System.Object, System.Object)
L_01a0: stloc.0
L_01a1: Label7
L_01a1: ldloc.s 7 (System.Single)
L_01a3: call Boolean FloatIsNearZero(Single)
L_01a8: brtrue Label8
L_01ad: ldstr "{0}STOOD UP {1:+#;-#}; "
L_01b2: ldloc.0
L_01b3: ldloc.s 7 (System.Single)
L_01b5: conv.i4
L_01b6: box System.Int32
L_01bb: call System.String Format(System.String, System.Object, System.Object)
L_01c0: stloc.0
L_01c1: Label8
L_01c1: ldloc.s 8 (System.Single)
L_01c3: call Boolean FloatIsNearZero(Single)
L_01c8: brtrue Label9
L_01cd: ldstr "{0}HEIGHT {1:+#;-#}; "
L_01d2: ldloc.0
L_01d3: ldloc.s 8 (System.Single)
L_01d5: conv.i4
L_01d6: box System.Int32
L_01db: call System.String Format(System.String, System.Object, System.Object)
L_01e0: stloc.0
L_01e1: Label9
L_01e1: ldloc.s 9 (System.Single)
L_01e3: call Boolean FloatIsNearZero(Single)
L_01e8: brtrue Label10
L_01ed: ldstr "{0}HEAT {1:+#;-#}; "
L_01f2: ldloc.0
L_01f3: ldloc.s 9 (System.Single)
L_01f5: conv.i4
L_01f6: box System.Int32
L_01fb: call System.String Format(System.String, System.Object, System.Object)
L_0200: stloc.0
L_0201: Label10
L_0201: ldloc.s 10 (System.Single)
L_0203: call Boolean FloatIsNearZero(Single)
L_0208: brtrue Label11
L_020d: ldstr "{0}TERRAIN {1:+#;-#}; "
L_0212: ldloc.0
L_0213: ldloc.s 10 (System.Single)
L_0215: conv.i4
L_0216: box System.Int32
L_021b: call System.String Format(System.String, System.Object, System.Object)
L_0220: stloc.0
L_0221: Label11
L_0221: ldloc.s 11 (System.Single)
L_0223: call Boolean FloatIsNearZero(Single)
L_0228: brtrue Label12
L_022d: ldstr "{0}TERRAIN SELF {1:+#;-#}; "
L_0232: ldloc.0
L_0233: ldloc.s 11 (System.Single)
L_0235: conv.i4
L_0236: box System.Int32
L_023b: call System.String Format(System.String, System.Object, System.Object)
L_0240: stloc.0
L_0241: Label12
L_0241: ldloc.s 12 (System.Single)
L_0243: call Boolean FloatIsNearZero(Single)
L_0248: brtrue Label13
L_024d: ldstr "{0}TARGET-SPEED {1:+#;-#}; "
L_0252: ldloc.0
L_0253: ldloc.s 12 (System.Single)
L_0255: conv.i4
L_0256: box System.Int32
L_025b: call System.String Format(System.String, System.Object, System.Object)
L_0260: stloc.0
L_0261: Label13
L_0261: ldloc.s 13 (System.Single)
L_0263: call Boolean FloatIsNearZero(Single)
L_0268: brtrue Label14
L_026d: ldstr "{0}SELF-DAMAGE {1:+#;-#}; "
L_0272: ldloc.0
L_0273: ldloc.s 13 (System.Single)
L_0275: conv.i4
L_0276: box System.Int32
L_027b: call System.String Format(System.String, System.Object, System.Object)
L_0280: stloc.0
L_0281: Label14
L_0281: ldloc.s 14 (System.Single)
L_0283: call Boolean FloatIsNearZero(Single)
L_0288: brtrue Label15
L_028d: ldstr "{0}TARGET-SIZE {1:+#;-#}; "
L_0292: ldloc.0
L_0293: ldloc.s 14 (System.Single)
L_0295: conv.i4
L_0296: box System.Int32
L_029b: call System.String Format(System.String, System.Object, System.Object)
L_02a0: stloc.0
L_02a1: Label15
L_02a1: ldloc.s 15 (System.Single)
L_02a3: call Boolean FloatIsNearZero(Single)
L_02a8: brtrue Label16
L_02ad: ldstr "{0}TARGET-SHUTDOWN {1:+#;-#}; "
L_02b2: ldloc.0
L_02b3: ldloc.s 15 (System.Single)
L_02b5: conv.i4
L_02b6: box System.Int32
L_02bb: call System.String Format(System.String, System.Object, System.Object)
L_02c0: stloc.0
L_02c1: Label16
L_02c1: ldloc.s 16 (System.Single)
L_02c3: call Boolean FloatIsNearZero(Single)
L_02c8: brtrue Label17
L_02cd: ldstr "{0}TARGET-PRONE {1:+#;-#}; "
L_02d2: ldloc.0
L_02d3: ldloc.s 16 (System.Single)
L_02d5: conv.i4
L_02d6: box System.Int32
L_02db: call System.String Format(System.String, System.Object, System.Object)
L_02e0: stloc.0
L_02e1: Label17
L_02e1: ldloc.s 17 (System.Single)
L_02e3: call Boolean FloatIsNearZero(Single)
L_02e8: brtrue Label18
L_02ed: ldstr "{0}ATTACKER-EFFECTS {1:+#;-#}; "
L_02f2: ldloc.0
L_02f3: ldloc.s 17 (System.Single)
L_02f5: conv.i4
L_02f6: box System.Int32
L_02fb: call System.String Format(System.String, System.Object, System.Object)
L_0300: stloc.0
L_0301: Label18
L_0301: ldloc.s 18 (System.Single)
L_0303: call Boolean FloatIsNearZero(Single)
L_0308: brtrue Label19
L_030d: ldstr "{0}ATTACKER-SELF-EFFECTS {1:+#;-#}; "
L_0312: ldloc.0
L_0313: ldloc.s 18 (System.Single)
L_0315: conv.i4
L_0316: box System.Int32
L_031b: call System.String Format(System.String, System.Object, System.Object)
L_0320: stloc.0
L_0321: Label19
L_0321: ldloc.s 19 (System.Single)
L_0323: call Boolean FloatIsNearZero(Single)
L_0328: brtrue Label20
L_032d: ldstr "{0}ENEMY-EFFECTS {1:+#;-#}; "
L_0332: ldloc.0
L_0333: ldloc.s 19 (System.Single)
L_0335: conv.i4
L_0336: box System.Int32
L_033b: call System.String Format(System.String, System.Object, System.Object)
L_0340: stloc.0
L_0341: Label20
L_0341: ldloc.s 20 (System.Single)
L_0343: call Boolean FloatIsNearZero(Single)
L_0348: brtrue Label21
L_034d: ldstr "{0}REFIRE {1:+#;-#}; "
L_0352: ldloc.0
L_0353: ldloc.s 20 (System.Single)
L_0355: conv.i4
L_0356: box System.Int32
L_035b: call System.String Format(System.String, System.Object, System.Object)
L_0360: stloc.0
L_0361: Label21
L_0361: ldloc.s 21 (System.Single)
L_0363: call Boolean FloatIsNearZero(Single)
L_0368: brtrue Label22
L_036d: ldstr "{0}DIRECT-FIRE {1:+#;-#}; "
L_0372: ldloc.0
L_0373: ldloc.s 21 (System.Single)
L_0375: conv.i4
L_0376: box System.Int32
L_037b: call System.String Format(System.String, System.Object, System.Object)
L_0380: stloc.0
L_0381: Label22
L_0381: ldloc.s 22 (System.Single)
L_0383: call Boolean FloatIsNearZero(Single)
L_0388: brtrue Label23
L_038d: ldstr "{0}INDIRECT-FIRE {1:+#;-#}; "
L_0392: ldloc.0
L_0393: ldloc.s 22 (System.Single)
L_0395: conv.i4
L_0396: box System.Int32
L_039b: call System.String Format(System.String, System.Object, System.Object)
L_03a0: stloc.0
L_03a1: Label23
L_03a1: ldloc.s 23 (System.Single)
L_03a3: call Boolean FloatIsNearZero(Single)
L_03a8: brtrue Label24
L_03ad: ldstr "{0}CALLED-SHOT {1:+#;-#}; "
L_03b2: ldloc.0
L_03b3: ldloc.s 23 (System.Single)
L_03b5: conv.i4
L_03b6: box System.Int32
L_03bb: call System.String Format(System.String, System.Object, System.Object)
L_03c0: stloc.0
L_03c1: Label24
L_03c1: ldloc.2
L_03c2: ldloc.3
L_03c3: add
L_03c4: ldloc.s 4 (System.Single)
L_03c6: add
L_03c7: ldloc.s 5 (System.Single)
L_03c9: add
L_03ca: ldloc.s 6 (System.Single)
L_03cc: add
L_03cd: ldloc.s 7 (System.Single)
L_03cf: add
L_03d0: ldloc.s 8 (System.Single)
L_03d2: add
L_03d3: ldloc.s 9 (System.Single)
L_03d5: add
L_03d6: ldloc.s 10 (System.Single)
L_03d8: add
L_03d9: ldloc.s 11 (System.Single)
L_03db: add
L_03dc: ldloc.s 12 (System.Single)
L_03de: add
L_03df: ldloc.s 13 (System.Single)
L_03e1: add
L_03e2: ldloc.s 14 (System.Single)
L_03e4: add
L_03e5: ldloc.s 15 (System.Single)
L_03e7: add
L_03e8: ldloc.s 16 (System.Single)
L_03ea: add
L_03eb: ldloc.s 17 (System.Single)
L_03ed: add
L_03ee: ldloc.s 18 (System.Single)
L_03f0: add
L_03f1: ldloc.s 19 (System.Single)
L_03f3: add
L_03f4: ldloc.s 20 (System.Single)
L_03f6: add
L_03f7: ldloc.s 21 (System.Single)
L_03f9: add
L_03fa: ldloc.s 22 (System.Single)
L_03fc: add
L_03fd: ldloc.s 23 (System.Single)
L_03ff: add
L_0400: stloc.s 24 (System.Single)
L_0402: ldloc.s 24 (System.Single)
L_0404: ldc.r4 0
L_0409: bge.un Label25
L_040e: ldarg.0
L_040f: ldfld BattleTech.CombatGameState combat
L_0414: callvirt BattleTech.CombatGameConstants get_Constants()
L_0419: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_041e: ldfld System.Boolean AllowTotalNegativeModifier
L_0423: brtrue Label26
L_0428: ldc.r4 0
L_042d: stloc.s 24 (System.Single)
L_042f: Label25
L_042f: Label26
L_042f: ldarg.0
L_0430: ldarg.1
L_0431: ldarg.2
L_0432: ldarg.3
L_0433: ldarg.s 4
L_0435: ldarg.s 5
L_0437: ldarg.s 6
L_0439: ldarg.s 7
L_043b: call Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0440: stloc.s 25 (System.Single)
L_0442: ldloc.s 25 (System.Single)
L_0444: ldloc.s 24 (System.Single)
L_0446: call Boolean FloatsAreEqual(Single, Single)
L_044b: brtrue Label27
L_0450: ldsfld HBS.Logging.ILog attackLogger
L_0455: ldc.i4.4
L_0456: newarr System.Object
L_045b: dup
L_045c: ldc.i4.0
L_045d: ldstr "ERROR!!! breakdown of Universal Modifier didn't match actual Universal Modifier. Check TargetingRules! current modifier: "
L_0462: stelem.ref
L_0463: dup
L_0464: ldc.i4.1
L_0465: ldloc.s 24 (System.Single)
L_0467: box System.Single
L_046c: stelem.ref
L_046d: dup
L_046e: ldc.i4.2
L_046f: ldstr ", doubleCheck modifier: "
L_0474: stelem.ref
L_0475: dup
L_0476: ldc.i4.3
L_0477: ldloc.s 25 (System.Single)
L_0479: box System.Single
L_047e: stelem.ref
L_047f: call System.String Concat(System.Object[])
L_0484: callvirt Void LogError(System.Object)
L_0489: Label27
L_0489: ldloc.0
L_048a: stloc 26 (System.String)
L_048c: ldarg.0
L_048d: ldloca 26 (System.String)
L_048f: ldarg 1
L_0495: ldarg 2
L_049b: ldarg 3
L_04a1: ldarg 4
L_04a7: ldarg 5
L_04ad: ldarg 6
L_04b3: ldarg 7
L_04b9: call Void Postfix(BattleTech.ToHit, System.String ByRef, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_04be: ldarg.0
L_04bf: ldarg 1
L_04c5: ldarg 2
L_04cb: ldarg 3
L_04d1: ldarg 4
L_04d7: ldarg 5
L_04dd: ldarg 6
L_04e3: ldarg 7
L_04e9: ldloca 26 (System.String)
L_04eb: call Void Postfix(BattleTech.ToHit, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean, System.String ByRef)
L_04f0: ldloc 26 (System.String)
L_04f2: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void UpdateToolTipsFiring(BattleTech.ICombatant)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.LineOfFireLevel
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Single
L_0000: ldarg.1
L_0001: isinst BattleTech.AbstractActor
L_0006: stloc.0
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.CombatHUD HUD
L_000d: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0012: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0017: callvirt BattleTech.FiringPreviewManager get_FiringPreview()
L_001c: ldloc.0
L_001d: callvirt PreviewInfo GetPreviewInfo(BattleTech.ICombatant)
L_0022: ldfld BattleTech.LineOfFireLevel LOFLevel
L_0027: stloc.1
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUD HUD
L_002e: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0033: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0038: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_003d: ldc.i4.8
L_003e: ceq
L_0040: stloc.2
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0047: ldarg.0
L_0048: ldfld BattleTech.CombatGameState Combat
L_004d: callvirt BattleTech.ToHit get_ToHit()
L_0052: ldarg.0
L_0053: ldfld BattleTech.UI.CombatHUD HUD
L_0058: callvirt BattleTech.AbstractActor get_SelectedActor()
L_005d: ldarg.0
L_005e: ldfld BattleTech.Weapon displayedWeapon
L_0063: ldarg.1
L_0064: ldarg.0
L_0065: ldfld BattleTech.UI.CombatHUD HUD
L_006a: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_006f: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0074: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0079: ldarg.1
L_007a: callvirt UnityEngine.Vector3 get_TargetPosition()
L_007f: ldloc.1
L_0080: ldloc.2
L_0081: callvirt Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0086: conv.i4
L_0087: stfld System.Int32 BasicModifierInt
L_008c: ldarg.0
L_008d: ldarg.0
L_008e: ldfld BattleTech.CombatGameState Combat
L_0093: callvirt BattleTech.ToHit get_ToHit()
L_0098: ldarg.0
L_0099: ldfld BattleTech.Weapon displayedWeapon
L_009e: ldarg.0
L_009f: ldfld BattleTech.UI.CombatHUD HUD
L_00a4: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00a9: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_00ae: callvirt UnityEngine.Vector3 get_PreviewPos()
L_00b3: ldarg.1
L_00b4: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00b9: callvirt Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_00be: conv.i4
L_00bf: stfld System.Int32 modifier
L_00c4: ldarg.0
L_00c5: ldfld BattleTech.Weapon displayedWeapon
L_00ca: ldfld BattleTech.AbstractActor parent
L_00cf: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00d4: ldarg.1
L_00d5: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00da: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_00df: stloc.3
L_00e0: ldloc.3
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.Weapon displayedWeapon
L_00e7: callvirt Single get_MinRange()
L_00ec: bge.un Label1
L_00f1: ldarg.0
L_00f2: ldstr "MIN RANGE"
L_00f7: ldarg.0
L_00f8: ldfld System.Int32 modifier
L_00fd: call Void AddToolTipDetail(System.String, Int32)
L_0102: br Label2
L_0107: Label1
L_0107: ldloc.3
L_0108: ldarg.0
L_0109: ldfld BattleTech.Weapon displayedWeapon
L_010e: callvirt Single get_ShortRange()
L_0113: bge.un Label3
L_0118: ldarg.0
L_0119: ldstr "SHORT RANGE"
L_011e: ldarg.0
L_011f: ldfld System.Int32 modifier
L_0124: call Void AddToolTipDetail(System.String, Int32)
L_0129: br Label4
L_012e: Label3
L_012e: ldloc.3
L_012f: ldarg.0
L_0130: ldfld BattleTech.Weapon displayedWeapon
L_0135: callvirt Single get_MediumRange()
L_013a: bge.un Label5
L_013f: ldarg.0
L_0140: ldstr "MEDIUM RANGE"
L_0145: ldarg.0
L_0146: ldfld System.Int32 modifier
L_014b: call Void AddToolTipDetail(System.String, Int32)
L_0150: br Label6
L_0155: Label5
L_0155: ldloc.3
L_0156: ldarg.0
L_0157: ldfld BattleTech.Weapon displayedWeapon
L_015c: callvirt Single get_LongRange()
L_0161: bge.un Label7
L_0166: ldarg.0
L_0167: ldstr "LONG RANGE"
L_016c: ldarg.0
L_016d: ldfld System.Int32 modifier
L_0172: call Void AddToolTipDetail(System.String, Int32)
L_0177: br Label8
L_017c: Label7
L_017c: ldloc.3
L_017d: ldarg.0
L_017e: ldfld BattleTech.Weapon displayedWeapon
L_0183: callvirt Single get_MaxRange()
L_0188: bge.un Label9
L_018d: ldarg.0
L_018e: ldstr "MAX RANGE"
L_0193: ldarg.0
L_0194: ldfld System.Int32 modifier
L_0199: call Void AddToolTipDetail(System.String, Int32)
L_019e: br Label10
L_01a3: Label9
L_01a3: ldarg.0
L_01a4: ldstr "OUT OF RANGE"
L_01a9: ldarg.0
L_01aa: ldfld System.Int32 modifier
L_01af: call Void AddToolTipDetail(System.String, Int32)
L_01b4: Label2
L_01b4: Label4
L_01b4: Label6
L_01b4: Label8
L_01b4: Label10
L_01b4: ldarg.0
L_01b5: ldarg.0
L_01b6: ldfld BattleTech.CombatGameState Combat
L_01bb: callvirt BattleTech.ToHit get_ToHit()
L_01c0: ldarg.0
L_01c1: ldfld BattleTech.UI.CombatHUD HUD
L_01c6: callvirt BattleTech.AbstractActor get_SelectedActor()
L_01cb: ldarg.1
L_01cc: ldloc.1
L_01cd: callvirt Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_01d2: conv.i4
L_01d3: stfld System.Int32 modifier
L_01d8: ldarg.0
L_01d9: ldstr "OBSTRUCTED"
L_01de: ldarg.0
L_01df: ldfld System.Int32 modifier
L_01e4: call Void AddToolTipDetail(System.String, Int32)
L_01e9: ldarg.0
L_01ea: ldarg.0
L_01eb: ldfld BattleTech.CombatGameState Combat
L_01f0: callvirt BattleTech.ToHit get_ToHit()
L_01f5: ldarg.0
L_01f6: ldfld BattleTech.Weapon displayedWeapon
L_01fb: ldfld BattleTech.AbstractActor parent
L_0200: callvirt Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_0205: conv.i4
L_0206: stfld System.Int32 modifier
L_020b: ldarg.0
L_020c: ldstr "MOVED SELF"
L_0211: ldarg.0
L_0212: ldfld System.Int32 modifier
L_0217: call Void AddToolTipDetail(System.String, Int32)
L_021c: ldarg.0
L_021d: ldarg.0
L_021e: ldfld BattleTech.CombatGameState Combat
L_0223: callvirt BattleTech.ToHit get_ToHit()
L_0228: ldarg.0
L_0229: ldfld BattleTech.Weapon displayedWeapon
L_022e: ldfld BattleTech.AbstractActor parent
L_0233: callvirt Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0238: conv.i4
L_0239: stfld System.Int32 modifier
L_023e: ldarg.0
L_023f: ldstr "SPRINTED"
L_0244: ldarg.0
L_0245: ldfld System.Int32 modifier
L_024a: call Void AddToolTipDetail(System.String, Int32)
L_024f: ldarg.0
L_0250: ldarg.0
L_0251: ldfld BattleTech.CombatGameState Combat
L_0256: callvirt BattleTech.ToHit get_ToHit()
L_025b: ldarg.0
L_025c: ldfld BattleTech.Weapon displayedWeapon
L_0261: callvirt Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0266: conv.i4
L_0267: stfld System.Int32 modifier
L_026c: ldarg.0
L_026d: ldstr "ARM MOUNTED"
L_0272: ldarg.0
L_0273: ldfld System.Int32 modifier
L_0278: call Void AddToolTipDetail(System.String, Int32)
L_027d: ldarg.0
L_027e: ldarg.0
L_027f: ldfld BattleTech.CombatGameState Combat
L_0284: callvirt BattleTech.ToHit get_ToHit()
L_0289: ldarg.0
L_028a: ldfld BattleTech.Weapon displayedWeapon
L_028f: ldfld BattleTech.AbstractActor parent
L_0294: callvirt Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0299: conv.i4
L_029a: stfld System.Int32 modifier
L_029f: ldarg.0
L_02a0: ldstr "STOOD UP"
L_02a5: ldarg.0
L_02a6: ldfld System.Int32 modifier
L_02ab: call Void AddToolTipDetail(System.String, Int32)
L_02b0: ldarg.0
L_02b1: ldarg.0
L_02b2: ldfld BattleTech.CombatGameState Combat
L_02b7: callvirt BattleTech.ToHit get_ToHit()
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.CombatHUD HUD
L_02c2: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_02c7: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_02cc: callvirt UnityEngine.Vector3 get_PreviewPos()
L_02d1: ldfld System.Single y
L_02d6: ldarg.1
L_02d7: callvirt UnityEngine.Vector3 get_TargetPosition()
L_02dc: ldfld System.Single y
L_02e1: callvirt Single GetHeightModifier(Single, Single)
L_02e6: conv.i4
L_02e7: stfld System.Int32 modifier
L_02ec: ldarg.0
L_02ed: ldstr "HEIGHT DIFF"
L_02f2: ldarg.0
L_02f3: ldfld System.Int32 modifier
L_02f8: call Void AddToolTipDetail(System.String, Int32)
L_02fd: ldarg.0
L_02fe: ldarg.0
L_02ff: ldfld BattleTech.CombatGameState Combat
L_0304: callvirt BattleTech.ToHit get_ToHit()
L_0309: ldarg.0
L_030a: ldfld BattleTech.Weapon displayedWeapon
L_030f: ldfld BattleTech.AbstractActor parent
L_0314: callvirt Single GetHeatModifier(BattleTech.AbstractActor)
L_0319: conv.i4
L_031a: stfld System.Int32 modifier
L_031f: ldarg.0
L_0320: ldstr "HEAT"
L_0325: ldarg.0
L_0326: ldfld System.Int32 modifier
L_032b: call Void AddToolTipDetail(System.String, Int32)
L_0330: ldloc.0
L_0331: brfalse Label11
L_0336: ldarg.0
L_0337: ldfld BattleTech.Weapon displayedWeapon
L_033c: ldfld BattleTech.AbstractActor parent
L_0341: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0346: brfalse Label12
L_034b: ldarg.0
L_034c: ldarg.0
L_034d: ldfld BattleTech.CombatGameState Combat
L_0352: callvirt BattleTech.ToHit get_ToHit()
L_0357: ldarg.0
L_0358: ldfld BattleTech.UI.CombatHUD HUD
L_035d: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0362: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0367: callvirt UnityEngine.Vector3 get_PreviewPos()
L_036c: ldc.i4.0
L_036d: callvirt Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_0372: conv.i4
L_0373: stfld System.Int32 modifier
L_0378: ldarg.0
L_0379: ldstr "FROM {0}"
L_037e: ldc.i4.1
L_037f: newarr System.Object
L_0384: dup
L_0385: ldc.i4.0
L_0386: ldarg.0
L_0387: ldfld BattleTech.Weapon displayedWeapon
L_038c: ldfld BattleTech.AbstractActor parent
L_0391: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0396: callvirt BattleTech.BaseDescriptionDef get_Description()
L_039b: callvirt System.String get_Name()
L_03a0: stelem.ref
L_03a1: call System.String T(System.String, System.Object[])
L_03a6: ldarg.0
L_03a7: ldfld System.Int32 modifier
L_03ac: call Void AddToolTipDetail(System.String, Int32)
L_03b1: Label12
L_03b1: ldloc.0
L_03b2: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_03b7: brfalse Label13
L_03bc: ldarg.0
L_03bd: ldarg.0
L_03be: ldfld BattleTech.CombatGameState Combat
L_03c3: callvirt BattleTech.ToHit get_ToHit()
L_03c8: ldarg.1
L_03c9: ldarg.1
L_03ca: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03cf: ldc.i4.0
L_03d0: callvirt Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_03d5: conv.i4
L_03d6: stfld System.Int32 modifier
L_03db: ldarg.0
L_03dc: ldstr "INTO {0}"
L_03e1: ldc.i4.1
L_03e2: newarr System.Object
L_03e7: dup
L_03e8: ldc.i4.0
L_03e9: ldloc.0
L_03ea: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_03ef: callvirt BattleTech.BaseDescriptionDef get_Description()
L_03f4: callvirt System.String get_Name()
L_03f9: stelem.ref
L_03fa: call System.String T(System.String, System.Object[])
L_03ff: ldarg.0
L_0400: ldfld System.Int32 modifier
L_0405: call Void AddToolTipDetail(System.String, Int32)
L_040a: Label11
L_040a: Label13
L_040a: ldarg.0
L_040b: ldarg.0
L_040c: ldfld BattleTech.CombatGameState Combat
L_0411: callvirt BattleTech.ToHit get_ToHit()
L_0416: ldarg.1
L_0417: ldarg.0
L_0418: ldfld BattleTech.Weapon displayedWeapon
L_041d: callvirt Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0422: conv.i4
L_0423: stfld System.Int32 modifier
L_0428: ldarg.0
L_0429: ldstr "TARGET MOVED"
L_042e: ldarg.0
L_042f: ldfld System.Int32 modifier
L_0434: call Void AddToolTipDetail(System.String, Int32)
L_0439: ldarg.0
L_043a: ldarg.0
L_043b: ldfld BattleTech.Weapon displayedWeapon
L_0440: ldfld BattleTech.AbstractActor parent
L_0445: castclass BattleTech.Mech
L_044a: ldarg.0
L_044b: ldfld BattleTech.Weapon displayedWeapon
L_0450: call Single GetToHitModifierLocationDamage(BattleTech.Mech, BattleTech.Weapon)
L_0455: conv.i4
L_0456: stfld System.Int32 modifier
L_045b: ldarg.0
L_045c: ldstr "{0} DAMAGED"
L_0461: ldc.i4.1
L_0462: newarr System.Object
L_0467: dup
L_0468: ldc.i4.0
L_0469: ldarg.0
L_046a: ldfld BattleTech.Weapon displayedWeapon
L_046f: callvirt Int32 get_Location()
L_0474: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0479: stelem.ref
L_047a: call System.String T(System.String, System.Object[])
L_047f: ldarg.0
L_0480: ldfld System.Int32 modifier
L_0485: call Void AddToolTipDetail(System.String, Int32)
L_048a: ldarg.0
L_048b: ldarg.0
L_048c: ldfld BattleTech.Weapon displayedWeapon
L_0491: ldfld BattleTech.AbstractActor parent
L_0496: castclass BattleTech.Mech
L_049b: ldarg.0
L_049c: ldfld BattleTech.Weapon displayedWeapon
L_04a1: call Single GetToHitModifierWeaponDamage(BattleTech.Mech, BattleTech.Weapon)
L_04a6: conv.i4
L_04a7: stfld System.Int32 modifier
L_04ac: ldarg.0
L_04ad: ldstr "WEAPON DAMAGED"
L_04b2: ldarg.0
L_04b3: ldfld System.Int32 modifier
L_04b8: call Void AddToolTipDetail(System.String, Int32)
L_04bd: ldarg.0
L_04be: ldarg.0
L_04bf: ldfld BattleTech.CombatGameState Combat
L_04c4: callvirt BattleTech.ToHit get_ToHit()
L_04c9: ldarg.1
L_04ca: callvirt Single GetTargetSizeModifier(BattleTech.ICombatant)
L_04cf: conv.i4
L_04d0: stfld System.Int32 modifier
L_04d5: ldarg.0
L_04d6: ldstr "TARGET SIZE"
L_04db: ldarg.0
L_04dc: ldfld System.Int32 modifier
L_04e1: call Void AddToolTipDetail(System.String, Int32)
L_04e6: ldarg.0
L_04e7: ldarg.0
L_04e8: ldfld BattleTech.CombatGameState Combat
L_04ed: callvirt BattleTech.ToHit get_ToHit()
L_04f2: ldarg.1
L_04f3: ldc.i4.0
L_04f4: callvirt Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_04f9: conv.i4
L_04fa: stfld System.Int32 modifier
L_04ff: ldarg.0
L_0500: ldstr "TARGET SHUTDOWN"
L_0505: ldarg.0
L_0506: ldfld System.Int32 modifier
L_050b: call Void AddToolTipDetail(System.String, Int32)
L_0510: ldarg.0
L_0511: ldarg.0
L_0512: ldfld BattleTech.CombatGameState Combat
L_0517: callvirt BattleTech.ToHit get_ToHit()
L_051c: ldarg.1
L_051d: ldc.i4.0
L_051e: callvirt Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_0523: conv.i4
L_0524: stfld System.Int32 modifier
L_0529: ldarg.0
L_052a: ldstr "TARGET PRONE"
L_052f: ldarg.0
L_0530: ldfld System.Int32 modifier
L_0535: call Void AddToolTipDetail(System.String, Int32)
L_053a: ldarg.0
L_053b: ldarg.0
L_053c: ldfld BattleTech.CombatGameState Combat
L_0541: callvirt BattleTech.ToHit get_ToHit()
L_0546: ldarg.0
L_0547: ldfld BattleTech.UI.CombatHUD HUD
L_054c: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0551: ldarg.0
L_0552: ldfld BattleTech.Weapon displayedWeapon
L_0557: callvirt Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_055c: conv.i4
L_055d: stfld System.Int32 modifier
L_0562: ldarg.0
L_0563: ldstr "WEAPON ACCURACY"
L_0568: ldarg.0
L_0569: ldfld System.Int32 modifier
L_056e: call Void AddToolTipDetail(System.String, Int32)
L_0573: ldarg.0
L_0574: ldarg.0
L_0575: ldfld BattleTech.CombatGameState Combat
L_057a: callvirt BattleTech.ToHit get_ToHit()
L_057f: ldarg.0
L_0580: ldfld BattleTech.UI.CombatHUD HUD
L_0585: callvirt BattleTech.AbstractActor get_SelectedActor()
L_058a: callvirt Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_058f: conv.i4
L_0590: stfld System.Int32 modifier
L_0595: ldarg.0
L_0596: ldfld System.Int32 modifier
L_059b: ldc.i4.0
L_059c: ble Label14
L_05a1: ldarg.0
L_05a2: ldstr "SENSORS IMPAIRED"
L_05a7: ldarg.0
L_05a8: ldfld System.Int32 modifier
L_05ad: call Void AddToolTipDetail(System.String, Int32)
L_05b2: br Label15
L_05b7: Label14
L_05b7: ldarg.0
L_05b8: ldstr "INSPIRED"
L_05bd: ldarg.0
L_05be: ldfld System.Int32 modifier
L_05c3: call Void AddToolTipDetail(System.String, Int32)
L_05c8: Label15
L_05c8: ldarg.0
L_05c9: ldarg.0
L_05ca: ldfld BattleTech.CombatGameState Combat
L_05cf: callvirt BattleTech.ToHit get_ToHit()
L_05d4: ldarg.1
L_05d5: ldarg.0
L_05d6: ldfld BattleTech.Weapon displayedWeapon
L_05db: callvirt Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_05e0: conv.i4
L_05e1: stfld System.Int32 modifier
L_05e6: ldarg.0
L_05e7: ldstr "ENEMY EFFECTS"
L_05ec: ldarg.0
L_05ed: ldfld System.Int32 modifier
L_05f2: call Void AddToolTipDetail(System.String, Int32)
L_05f7: ldarg.0
L_05f8: ldarg.0
L_05f9: ldfld BattleTech.CombatGameState Combat
L_05fe: callvirt BattleTech.ToHit get_ToHit()
L_0603: ldarg.0
L_0604: ldfld BattleTech.Weapon displayedWeapon
L_0609: callvirt Single GetRefireModifier(BattleTech.Weapon)
L_060e: conv.i4
L_060f: stfld System.Int32 modifier
L_0614: ldarg.0
L_0615: ldstr "REFIRE"
L_061a: ldarg.0
L_061b: ldfld System.Int32 modifier
L_0620: call Void AddToolTipDetail(System.String, Int32)
L_0625: ldarg.0
L_0626: ldarg.0
L_0627: ldfld BattleTech.CombatGameState Combat
L_062c: callvirt BattleTech.ToHit get_ToHit()
L_0631: ldarg.1
L_0632: ldloc.1
L_0633: ldc.i4.2
L_0634: bge Label16
L_0639: ldarg.0
L_063a: ldfld BattleTech.Weapon displayedWeapon
L_063f: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0644: br Label17
L_0649: Label16
L_0649: ldc.i4.0
L_064a: Label17
L_064a: callvirt Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_064f: conv.i4
L_0650: stfld System.Int32 modifier
L_0655: ldarg.0
L_0656: ldstr "SENSOR LOCK"
L_065b: ldarg.0
L_065c: ldfld System.Int32 modifier
L_0661: call Void AddToolTipDetail(System.String, Int32)
L_0666: ldarg.0
L_0667: ldarg.0
L_0668: ldfld BattleTech.CombatGameState Combat
L_066d: callvirt BattleTech.ToHit get_ToHit()
L_0672: ldarg.0
L_0673: ldfld BattleTech.Weapon displayedWeapon
L_0678: ldfld BattleTech.AbstractActor parent
L_067d: ldloc.1
L_067e: ldc.i4.2
L_067f: bge Label18
L_0684: ldarg.0
L_0685: ldfld BattleTech.Weapon displayedWeapon
L_068a: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_068f: br Label19
L_0694: Label18
L_0694: ldc.i4.0
L_0695: Label19
L_0695: callvirt Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_069a: conv.i4
L_069b: stfld System.Int32 modifier
L_06a0: ldarg.0
L_06a1: ldstr "INDIRECT FIRE"
L_06a6: ldarg.0
L_06a7: ldfld System.Int32 modifier
L_06ac: call Void AddToolTipDetail(System.String, Int32)
L_06b1: ldarg.0
L_06b2: ldarg.0
L_06b3: ldfld BattleTech.CombatGameState Combat
L_06b8: callvirt BattleTech.ToHit get_ToHit()
L_06bd: ldarg.1
L_06be: ldloc.2
L_06bf: callvirt Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_06c4: conv.i4
L_06c5: stfld System.Int32 modifier
L_06ca: ldarg.0
L_06cb: ldarg.0
L_06cc: ldfld BattleTech.CombatGameState Combat
L_06d1: callvirt BattleTech.CombatGameConstants get_Constants()
L_06d6: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06db: ldfld BattleTech.BaseDescriptionDef MoraleAttackDescription
L_06e0: callvirt System.String get_Name()
L_06e5: ldarg.0
L_06e6: ldfld System.Int32 modifier
L_06eb: call Void AddToolTipDetail(System.String, Int32)
L_06f0: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponTickMarks, Void GetValidSlots(System.Collections.Generic.List`1[BattleTech.UI.CombatHUDWeaponSlot], Single, Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDWeaponSlot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.UI.CombatHUDWeaponTickMarks+<>c__DisplayClass41_0
L_0000: Local var 3: System.Boolean
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: stfld System.Int32 numWeaponsAimingAt
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.CombatHUD HUD
L_000d: callvirt BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0012: callvirt System.Collections.Generic.List`1[BattleTech.UI.CombatHUDWeaponSlot] get_DisplayedWeaponSlots()
L_0017: stloc.0
L_0018: ldc.i4.0
L_0019: stloc.1
L_001a: br Label1
L_001f: Label11
L_001f: newobj Void .ctor()
L_0024: stloc.2
L_0025: ldloc.2
L_0026: ldloc.0
L_0027: ldloc.1
L_0028: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_002d: callvirt BattleTech.Weapon get_DisplayedWeapon()
L_0032: stfld BattleTech.Weapon weapon
L_0037: ldc.i4.0
L_0038: stloc.3
L_0039: ldarg.0
L_003a: ldfld BattleTech.UI.CombatHUD HUD
L_003f: callvirt BattleTech.CombatGameState get_Combat()
L_0044: callvirt BattleTech.CombatGameConstants get_Constants()
L_0049: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_004e: ldfld System.Boolean collapseWeaponTypesInTickMarks
L_0053: brfalse Label2
L_0058: ldarg.1
L_0059: ldloc.2
L_005a: ldftn Boolean <GetValidSlots>b__0(BattleTech.UI.CombatHUDWeaponSlot)
L_0060: newobj Void .ctor(Object, IntPtr)
L_0065: callvirt BattleTech.UI.CombatHUDWeaponSlot Find(System.Predicate`1[BattleTech.UI.CombatHUDWeaponSlot])
L_006a: ldnull
L_006b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0070: stloc.3
L_0071: Label2
L_0071: ldloc.2
L_0072: ldfld BattleTech.Weapon weapon
L_0077: callvirt BattleTech.WeaponType get_Type()
L_007c: ldc.i4.s 9
L_007e: beq Label3
L_0083: ldarg.0
L_0084: ldloc.0
L_0085: ldloc.1
L_0086: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_008b: callvirt Int32 get_TargetIndex()
L_0090: call Boolean shouldShowThisWeapon(Int32)
L_0095: brfalse Label4
L_009a: ldloc.2
L_009b: ldfld BattleTech.Weapon weapon
L_00a0: callvirt Boolean get_IsEnabled()
L_00a5: brfalse Label5
L_00aa: ldloc.2
L_00ab: ldfld BattleTech.Weapon weapon
L_00b0: callvirt Boolean get_WillFire()
L_00b5: brfalse Label6
L_00ba: ldarg.3
L_00bb: brtrue Label7
L_00c0: ldloc.2
L_00c1: ldfld BattleTech.Weapon weapon
L_00c6: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00cb: brfalse Label8
L_00d0: Label7
L_00d0: ldarg.2
L_00d1: ldloc.2
L_00d2: ldfld BattleTech.Weapon weapon
L_00d7: callvirt Single get_MaxRange()
L_00dc: bge.un Label9
L_00e1: ldarg.0
L_00e2: ldarg.0
L_00e3: ldfld System.Int32 numWeaponsAimingAt
L_00e8: ldc.i4.1
L_00e9: add
L_00ea: stfld System.Int32 numWeaponsAimingAt
L_00ef: ldloc.3
L_00f0: brtrue Label10
L_00f5: ldarg.1
L_00f6: ldloc.0
L_00f7: ldloc.1
L_00f8: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_00fd: callvirt Void Add(BattleTech.UI.CombatHUDWeaponSlot)
L_0102: Label3
L_0102: Label4
L_0102: Label5
L_0102: Label6
L_0102: Label8
L_0102: Label9
L_0102: Label10
L_0102: ldloc.1
L_0103: ldc.i4.1
L_0104: add
L_0105: stloc.1
L_0106: Label1
L_0106: ldloc.1
L_0107: ldloc.0
L_0108: callvirt Int32 get_Count()
L_010d: blt Label11
L_0112: ret
DONE

### Patch BattleTech.Weapon, Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean get_IsDisabled()
L_000c: brfalse Label1
L_0011: ldc.i4.0
L_0012: br Label3
L_0017: Label1
L_0017: ldarg.0
L_0018: call Boolean get_HasAmmo()
L_001d: brtrue Label2
L_0022: ldc.i4.0
L_0023: br Label4
L_0028: Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.CombatGameState combat
L_002e: callvirt LOFCache get_LOFCache()
L_0033: ldarg.0
L_0034: ldfld BattleTech.AbstractActor parent
L_0039: ldarg.1
L_003a: ldarg.0
L_003b: call Single get_MaxRange()
L_0040: ldarg.2
L_0041: ldarg.3
L_0042: ldarg.1
L_0043: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0048: ldarg.1
L_0049: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004e: ldarg.0
L_004f: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0054: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0059: Label3
L_0059: Label4
L_0059: stloc 0 (System.Boolean)
L_005a: ldarg.0
L_005b: ldarg 1
L_0061: ldarg 2
L_0067: ldarg 3
L_006d: ldloca 0 (System.Boolean)
L_006f: call Void Postfix(BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean ByRef)
L_0074: ldloc 0 (System.Boolean)
L_0075: ret
DONE

### Patch LOFCache, Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg.1
L_0008: ldarg.2
L_0009: ldarg.3
L_000a: callvirt Single get_MaxRange()
L_000f: ldarg.1
L_0010: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_001b: ldarg.2
L_001c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0021: ldarg.2
L_0022: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0027: ldarg.3
L_0028: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_002d: call Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0032: stloc 0 (System.Boolean)
L_0033: ldarg.0
L_0034: ldarg 1
L_003a: ldarg 2
L_0040: ldarg 3
L_0046: ldloca 0 (System.Boolean)
L_0048: call Void Postfix(LOFCache, BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon, Boolean ByRef)
L_004d: ldloc 0 (System.Boolean)
L_004e: ret
DONE

### Patch BattleTech.WeaponHitInfo, Single ConsolidateInstability(System.String, Single, Single, Single, Single)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: ldc.r4 0
L_0005: stloc 2 (System.Single)
L_0006: ldc.r4 0
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: br Label1
L_0013: Label3
L_0013: ldarg.0
L_0014: ldarg.1
L_0015: ldloc.1
L_0016: call Boolean DidShotHitTarget(System.String, Int32)
L_001b: brfalse Label2
L_0020: ldloc.0
L_0021: ldarg.2
L_0022: add
L_0023: stloc.0
L_0024: Label2
L_0024: ldloc.1
L_0025: ldc.i4.1
L_0026: add
L_0027: stloc.1
L_0028: Label1
L_0028: ldloc.1
L_0029: ldarg.0
L_002a: ldfld System.Int32 numberOfShots
L_002f: blt Label3
L_0034: ldloc.0
L_0035: stloc 2 (System.Single)
L_0036: ldarga 0
L_003c: ldarg 1
L_0042: ldarg 2
L_0048: ldarg 3
L_004e: ldarg 4
L_0054: ldarg 5
L_005a: ldloca 2 (System.Single)
L_005c: call Void Postfix(BattleTech.WeaponHitInfo ByRef, System.String, Single, Single, Single, Single, Single ByRef)
L_0061: ldloc 2 (System.Single)
L_0062: ret
DONE

### Patch BattleTech.AttackDirector, Void ResolveSequenceTookDamage(System.String, AttackSequence)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.Mech
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Boolean
L_0000: Local var 8: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 13: System.Collections.Generic.List`1[[BattleTech.AmmoCategoryValue, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: BattleTech.AmmunitionBox
L_0000: Local var 16: System.Boolean
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.AmmunitionBox
L_0000: Local var 19: System.Nullable`1[[BattleTech.VOEvents, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: br Label1
L_0007: Label52
L_0007: ldarg.0
L_0008: call BattleTech.CombatGameState get_Combat()
L_000d: ldarg.2
L_000e: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0013: ldloc.0
L_0014: callvirt System.String get_Item(Int32)
L_0019: ldc.i4.0
L_001a: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_001f: stloc.1
L_0020: ldloc.1
L_0021: brfalse Label2
L_0026: ldloc.1
L_0027: callvirt BattleTech.Team get_team()
L_002c: callvirt Boolean get_LocalPlayerControlsTeam()
L_0031: brfalse Label3
L_0036: ldloc.1
L_0037: callvirt Boolean get_IsDead()
L_003c: brtrue Label4
L_0041: ldloc.1
L_0042: isinst BattleTech.AbstractActor
L_0047: stloc.3
L_0048: ldloc.3
L_0049: brfalse Label5
L_004e: ldc.i4.0
L_004f: stloc.s 4 (System.Boolean)
L_0051: ldarg.2
L_0052: ldloc.1
L_0053: callvirt System.String get_GUID()
L_0058: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] GetAttackWeaponCrits(System.String)
L_005d: stloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_005f: ldarg.2
L_0060: ldloc.1
L_0061: callvirt System.String get_GUID()
L_0066: callvirt System.Collections.Generic.List`1[BattleTech.AmmunitionBox] GetAttackAmmoCrits(System.String)
L_006b: stloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_006d: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_006f: callvirt Int32 get_Count()
L_0074: ldc.i4.0
L_0075: ble Label6
L_007a: ldc.i4.1
L_007b: stloc.s 4 (System.Boolean)
L_007d: ldc.i4.1
L_007e: stloc.s 7 (System.Boolean)
L_0080: ldloc.3
L_0081: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0086: stloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0088: ldc.i4.0
L_0089: stloc.s 10 (System.Int32)
L_008b: br Label7
L_0090: Label11
L_0090: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0092: ldloc.s 10 (System.Int32)
L_0094: callvirt BattleTech.Weapon get_Item(Int32)
L_0099: callvirt Boolean get_IsDisabled()
L_009e: brtrue Label8
L_00a3: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00a5: ldloc.s 10 (System.Int32)
L_00a7: callvirt BattleTech.Weapon get_Item(Int32)
L_00ac: callvirt Boolean get_HasAmmo()
L_00b1: brfalse Label9
L_00b6: ldc.i4.0
L_00b7: stloc.s 7 (System.Boolean)
L_00b9: br Label10
L_00be: Label8
L_00be: Label9
L_00be: ldloc.s 10 (System.Int32)
L_00c0: ldc.i4.1
L_00c1: add
L_00c2: stloc.s 10 (System.Int32)
L_00c4: Label7
L_00c4: ldloc.s 10 (System.Int32)
L_00c6: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00c8: callvirt Int32 get_Count()
L_00cd: blt Label11
L_00d2: Label10
L_00d2: ldc.i4.0
L_00d3: stloc.s 9 (System.Boolean)
L_00d5: ldc.i4.0
L_00d6: stloc.s 11 (System.Int32)
L_00d8: br Label12
L_00dd: Label15
L_00dd: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00df: ldloc.s 11 (System.Int32)
L_00e1: callvirt BattleTech.Weapon get_Item(Int32)
L_00e6: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_00eb: ldc.i4.2
L_00ec: ble Label13
L_00f1: ldc.i4.1
L_00f2: stloc.s 9 (System.Boolean)
L_00f4: br Label14
L_00f9: Label13
L_00f9: ldloc.s 11 (System.Int32)
L_00fb: ldc.i4.1
L_00fc: add
L_00fd: stloc.s 11 (System.Int32)
L_00ff: Label12
L_00ff: ldloc.s 11 (System.Int32)
L_0101: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0103: callvirt Int32 get_Count()
L_0108: blt Label15
L_010d: Label14
L_010d: ldloc.s 7 (System.Boolean)
L_010f: brfalse Label16
L_0114: ldarg.1
L_0115: ldc.i4.s 103
L_0117: ldloc.3
L_0118: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_011d: br Label17
L_0122: Label16
L_0122: ldloc.s 9 (System.Boolean)
L_0124: brfalse Label18
L_0129: ldarg.1
L_012a: ldc.i4.s 102
L_012c: ldloc.3
L_012d: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0132: br Label19
L_0137: Label18
L_0137: ldarg.1
L_0138: ldc.i4.s 75
L_013a: ldloc.3
L_013b: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0140: br Label20
L_0145: Label6
L_0145: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_0147: callvirt Int32 get_Count()
L_014c: ldc.i4.0
L_014d: ble Label21
L_0152: ldc.i4.1
L_0153: stloc.s 4 (System.Boolean)
L_0155: newobj Void .ctor()
L_015a: stloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_015c: newobj Void .ctor()
L_0161: stloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0163: ldc.i4.0
L_0164: stloc.s 14 (System.Int32)
L_0166: br Label22
L_016b: Label31
L_016b: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_016d: ldloc.s 14 (System.Int32)
L_016f: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_0174: stloc.s 15 (BattleTech.AmmunitionBox)
L_0176: ldc.i4.0
L_0177: stloc.s 16 (System.Boolean)
L_0179: ldc.i4.0
L_017a: stloc.s 17 (System.Int32)
L_017c: br Label23
L_0181: Label28
L_0181: ldloc.3
L_0182: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0187: ldloc.s 17 (System.Int32)
L_0189: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_018e: stloc.s 18 (BattleTech.AmmunitionBox)
L_0190: ldloc.s 18 (BattleTech.AmmunitionBox)
L_0192: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_0197: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0199: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_019e: callvirt Boolean Equals(System.Object)
L_01a3: brfalse Label24
L_01a8: ldloc.s 18 (BattleTech.AmmunitionBox)
L_01aa: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_01af: brtrue Label25
L_01b4: ldloc.s 18 (BattleTech.AmmunitionBox)
L_01b6: callvirt Int32 get_CurrentAmmo()
L_01bb: ldc.i4.0
L_01bc: ble Label26
L_01c1: ldc.i4.1
L_01c2: stloc.s 16 (System.Boolean)
L_01c4: br Label27
L_01c9: Label24
L_01c9: Label25
L_01c9: Label26
L_01c9: ldloc.s 17 (System.Int32)
L_01cb: ldc.i4.1
L_01cc: add
L_01cd: stloc.s 17 (System.Int32)
L_01cf: Label23
L_01cf: ldloc.s 17 (System.Int32)
L_01d1: ldloc.3
L_01d2: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_01d7: callvirt Int32 get_Count()
L_01dc: blt Label28
L_01e1: Label27
L_01e1: ldloc.s 16 (System.Boolean)
L_01e3: brtrue Label29
L_01e8: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_01ea: ldloc.s 15 (BattleTech.AmmunitionBox)
L_01ec: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_01f1: callvirt Int64 get_AmmoCategoryID()
L_01f6: callvirt Boolean Contains(Int64)
L_01fb: brtrue Label30
L_0200: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_0202: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0204: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_0209: callvirt Int64 get_AmmoCategoryID()
L_020e: callvirt Void Add(Int64)
L_0213: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0215: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0217: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_021c: callvirt Void Add(BattleTech.AmmoCategoryValue)
L_0221: Label29
L_0221: Label30
L_0221: ldloc.s 14 (System.Int32)
L_0223: ldc.i4.1
L_0224: add
L_0225: stloc.s 14 (System.Int32)
L_0227: Label22
L_0227: ldloc.s 14 (System.Int32)
L_0229: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_022b: callvirt Int32 get_Count()
L_0230: blt Label31
L_0235: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_0237: callvirt Int32 get_Count()
L_023c: ldc.i4.1
L_023d: ble Label32
L_0242: ldarg.1
L_0243: ldc.i4.s 52
L_0245: ldloc.3
L_0246: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_024b: br Label33
L_0250: Label32
L_0250: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0252: callvirt Int32 get_Count()
L_0257: ldc.i4.0
L_0258: ble Label34
L_025d: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_025f: ldc.i4.0
L_0260: callvirt BattleTech.AmmoCategoryValue get_Item(Int32)
L_0265: callvirt System.Nullable`1[BattleTech.VOEvents] GetVOEventsEnum()
L_026a: stloc.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_026c: ldloca.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_026e: call Boolean get_HasValue()
L_0273: brfalse Label35
L_0278: ldarg.1
L_0279: ldloca.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_027b: call BattleTech.VOEvents get_Value()
L_0280: ldarg.2
L_0281: ldfld BattleTech.AbstractActor attacker
L_0286: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_028b: br Label36
L_0290: Label35
L_0290: ldarg.1
L_0291: ldc.i4.s 52
L_0293: ldarg.2
L_0294: ldfld BattleTech.AbstractActor attacker
L_0299: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_029e: br Label37
L_02a3: Label21
L_02a3: ldarg.2
L_02a4: ldloc.1
L_02a5: callvirt System.String get_GUID()
L_02aa: callvirt Boolean GetAttackDestroyedLeg(System.String)
L_02af: brfalse Label38
L_02b4: ldc.i4.1
L_02b5: stloc.s 4 (System.Boolean)
L_02b7: br Label39
L_02bc: Label38
L_02bc: ldarg.2
L_02bd: ldloc.1
L_02be: callvirt System.String get_GUID()
L_02c3: callvirt Int32 GetAttackCritsCount(System.String)
L_02c8: ldc.i4.0
L_02c9: ble Label40
L_02ce: ldc.i4.1
L_02cf: stloc.s 4 (System.Boolean)
L_02d1: ldarg.1
L_02d2: ldc.i4.s 75
L_02d4: ldloc.3
L_02d5: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_02da: br Label41
L_02df: Label40
L_02df: ldarg.2
L_02e0: ldloc.1
L_02e1: callvirt System.String get_GUID()
L_02e6: callvirt Single GetStructureDamageDealt(System.String)
L_02eb: ldc.r4 0
L_02f0: ble.un Label42
L_02f5: ldc.i4.1
L_02f6: stloc.s 4 (System.Boolean)
L_02f8: ldarg.1
L_02f9: ldc.i4.s 77
L_02fb: ldloc.3
L_02fc: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0301: br Label43
L_0306: Label42
L_0306: ldarg.2
L_0307: ldfld System.Single cumulativeDamage
L_030c: ldarg.0
L_030d: call BattleTech.CombatGameState get_Combat()
L_0312: callvirt BattleTech.CombatGameConstants get_Constants()
L_0317: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_031c: ldfld System.Single HeavyDamageThreshold
L_0321: bge Label44
L_0326: ldarg.2
L_0327: ldloc.1
L_0328: callvirt System.String get_GUID()
L_032d: callvirt Boolean GetLowArmorStruck(System.String)
L_0332: brfalse Label45
L_0337: Label44
L_0337: ldc.i4.1
L_0338: stloc.s 4 (System.Boolean)
L_033a: ldarg.1
L_033b: ldc.i4.s 76
L_033d: ldloc.3
L_033e: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0343: br Label46
L_0348: Label45
L_0348: ldarg.2
L_0349: ldfld System.Single cumulativeDamage
L_034e: ldc.r4 0
L_0353: ble.un Label47
L_0358: ldarg.1
L_0359: ldc.i4.s 74
L_035b: ldloc.3
L_035c: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0361: Label17
L_0361: Label19
L_0361: Label20
L_0361: Label33
L_0361: Label34
L_0361: Label36
L_0361: Label37
L_0361: Label39
L_0361: Label41
L_0361: Label43
L_0361: Label46
L_0361: Label47
L_0361: ldloc.s 4 (System.Boolean)
L_0363: brfalse Label48
L_0368: ldc.i4.0
L_0369: ldloc.3
L_036a: call Void SetPilotVOSwitch[AudioSwitch_dialog_dark_light](AudioSwitch_dialog_dark_light, BattleTech.AbstractActor)
L_036f: Label2
L_036f: Label3
L_036f: Label4
L_036f: Label5
L_036f: Label48
L_036f: ldloc.1
L_0370: isinst BattleTech.Mech
L_0375: stloc.2
L_0376: ldarg.2
L_0377: ldloc.1
L_0378: callvirt System.String get_GUID()
L_037d: callvirt Boolean GetAttackDidHeatDamage(System.String)
L_0382: brfalse Label49
L_0387: ldloc.2
L_0388: brfalse Label50
L_038d: ldloc.2
L_038e: callvirt Int32 get_TempHeat()
L_0393: ldc.i4.0
L_0394: ble Label51
L_0399: ldarg.0
L_039a: call BattleTech.CombatGameState get_Combat()
L_039f: callvirt MessageCenter get_MessageCenter()
L_03a4: ldarg.2
L_03a5: ldfld BattleTech.AbstractActor attacker
L_03aa: callvirt System.String get_GUID()
L_03af: ldloc.2
L_03b0: callvirt System.String get_GUID()
L_03b5: ldstr "+{0} HEAT"
L_03ba: ldc.i4.1
L_03bb: newarr System.Object
L_03c0: dup
L_03c1: ldc.i4.0
L_03c2: ldloc.2
L_03c3: callvirt Int32 get_TempHeat()
L_03c8: box System.Int32
L_03cd: stelem.ref
L_03ce: newobj Void .ctor(String, Object[])
L_03d3: ldc.i4.2
L_03d4: newobj Void .ctor(String, String, Text, MessageNature)
L_03d9: callvirt Void PublishMessage(MessageCenterMessage)
L_03de: ldloc.2
L_03df: ldarg.2
L_03e0: ldfld System.Int32 id
L_03e5: ldc.i4.0
L_03e6: ldc.i4.0
L_03e7: ldarg.2
L_03e8: ldfld BattleTech.AbstractActor attacker
L_03ed: callvirt System.String get_GUID()
L_03f2: callvirt Void GenerateAndPublishHeatSequence(Int32, Boolean, Boolean, System.String)
L_03f7: Label49
L_03f7: Label50
L_03f7: Label51
L_03f7: ldloc.0
L_03f8: ldc.i4.1
L_03f9: add
L_03fa: stloc.0
L_03fb: Label1
L_03fb: ldloc.0
L_03fc: ldarg.2
L_03fd: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0402: callvirt Int32 get_Count()
L_0407: blt Label52
L_040c: ldarg.0
L_040d: ldarg 1
L_0413: ldarg 2
L_0419: call Void Postfix(BattleTech.AttackDirector, System.String, AttackSequence)
L_041e: ret
DONE

### Patch BattleTech.Mech, Void ResolveWeaponDamage(BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: BattleTech.LineOfFireLevel
L_0000: Local var 3: System.Single
L_0000: Local var 4: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 5: System.Collections.Generic.Dictionary`2+Enumerator[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Collections.Generic.KeyValuePair`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: BattleTech.ChassisLocations
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: callvirt BattleTech.AttackDirector get_AttackDirector()
L_000b: ldarg.1
L_000c: ldfld System.Int32 attackSequenceId
L_0011: callvirt AttackSequence GetAttackSequence(Int32)
L_0016: stloc.0
L_0017: ldarg.2
L_0018: ldfld BattleTech.AbstractActor parent
L_001d: brtrue Label1
L_0022: ldarg.2
L_0023: callvirt Single get_DamagePerShot()
L_0028: stloc.1
L_0029: br Label2
L_002e: Label1
L_002e: ldarg.2
L_002f: ldarg.2
L_0030: ldfld BattleTech.AbstractActor parent
L_0035: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_003a: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_003f: stloc.1
L_0040: Label2
L_0040: ldarg.0
L_0041: call BattleTech.CombatGameState get_Combat()
L_0046: ldarg.1
L_0047: ldfld System.String attackerId
L_004c: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0051: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0056: ldarg.0
L_0057: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_005c: stloc.s 4 (BattleTech.VisibilityLevelAndAttribution)
L_005e: ldloca.s 4 (BattleTech.VisibilityLevelAndAttribution)
L_0060: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0065: stloc.2
L_0066: ldarg.0
L_0067: ldloc.1
L_0068: ldarg.2
L_0069: callvirt BattleTech.WeaponCategory get_Category()
L_006e: ldarg.0
L_006f: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0074: ldloc.2
L_0075: ldc.i4.0
L_0076: call Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_007b: stloc.1
L_007c: ldarga.s 1
L_007e: ldarg.0
L_007f: call System.String get_GUID()
L_0084: ldloc.1
L_0085: call System.Collections.Generic.Dictionary`2[System.Int32,System.Single] ConsolidateCriticalHitInfo(System.String, Single)
L_008a: callvirt Enumerator GetEnumerator()
L_008f: stloc.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
.try
{
	L_0091: br Label3
	L_0096: Label8
	L_0096: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_0098: call System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single] get_Current()
	L_009d: stloc.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_009f: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00a1: call Int32 get_Key()
	L_00a6: brfalse Label4
	L_00ab: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00ad: call Int32 get_Key()
	L_00b2: ldc.i4 65536
	L_00b7: beq Label5
	L_00bc: ldarg.0
	L_00bd: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00bf: call Int32 get_Key()
	L_00c4: callvirt Single ArmorForLocation(Int32)
	L_00c9: ldc.r4 0
	L_00ce: bgt.un Label6
	L_00d3: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00d5: call Int32 get_Key()
	L_00da: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
	L_00df: stloc.s 7 (BattleTech.ChassisLocations)
	L_00e1: ldarg.0
	L_00e2: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00e4: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
	L_00e9: brtrue Label7
	L_00ee: ldarg.0
	L_00ef: ldarg.1
	L_00f0: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00f2: ldarg.2
	L_00f3: call Void CheckForCrit(BattleTech.WeaponHitInfo, BattleTech.ChassisLocations, BattleTech.Weapon)
	L_00f8: Label3
	L_00f8: Label4
	L_00f8: Label5
	L_00f8: Label6
	L_00f8: Label7
	L_00f8: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_00fa: call Boolean MoveNext()
	L_00ff: brtrue Label8
	L_0104: leave Label9
	L_0109: leave (autogenerated)
} // end try
.finally
{
	L_010e: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_0110: constrained. System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single]
	L_0116: callvirt Void Dispose()
	L_011b: endfinally
	L_011c: leave (autogenerated)
} // end handler
L_011d: Label9
L_011d: ldarg.2
L_011e: call Single HeatDamagePerShot(BattleTech.Weapon)
L_0123: ldc.r4 0
L_0128: ble.un Label10
L_012d: ldc.i4.0
L_012e: stloc.s 8 (System.Boolean)
L_0130: ldc.i4.0
L_0131: stloc.s 9 (System.Int32)
L_0133: br Label11
L_0138: Label15
L_0138: ldarga.s 1
L_013a: ldarg.0
L_013b: call System.String get_GUID()
L_0140: ldloc.s 9 (System.Int32)
L_0142: call Boolean DidShotHitTarget(System.String, Int32)
L_0147: brfalse Label12
L_014c: ldarga.s 1
L_014e: ldloc.s 9 (System.Int32)
L_0150: call Int32 ShotHitLocation(Int32)
L_0155: brfalse Label13
L_015a: ldarga.s 1
L_015c: ldloc.s 9 (System.Int32)
L_015e: call Int32 ShotHitLocation(Int32)
L_0163: ldc.i4 65536
L_0168: beq Label14
L_016d: ldc.i4.1
L_016e: stloc.s 8 (System.Boolean)
L_0170: ldarg.0
L_0171: ldstr "Heat Damage from {0}"
L_0176: ldarg.2
L_0177: callvirt BattleTech.DescriptionDef get_Description()
L_017c: callvirt System.String get_Name()
L_0181: call System.String Format(System.String, System.Object)
L_0186: ldarg.2
L_0187: ldarg.1
L_0188: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_018d: ldloc.s 9 (System.Int32)
L_018f: ldelem.i4
L_0190: callvirt Single HeatDamagePerShotAdjusted(BattleTech.AttackImpactQuality)
L_0195: conv.i4
L_0196: callvirt Void AddExternalHeat(System.String, Int32)
L_019b: Label12
L_019b: Label13
L_019b: Label14
L_019b: ldloc.s 9 (System.Int32)
L_019d: ldc.i4.1
L_019e: add
L_019f: stloc.s 9 (System.Int32)
L_01a1: Label11
L_01a1: ldloc.s 9 (System.Int32)
L_01a3: ldarg.1
L_01a4: ldfld System.Int32 numberOfShots
L_01a9: blt Label15
L_01ae: ldloc.s 8 (System.Boolean)
L_01b0: brfalse Label16
L_01b5: ldloc.0
L_01b6: brfalse Label17
L_01bb: ldloc.0
L_01bc: ldarg.0
L_01bd: call System.String get_GUID()
L_01c2: callvirt Void FlagAttackDidHeatDamage(System.String)
L_01c7: Label10
L_01c7: Label16
L_01c7: Label17
L_01c7: ldarga.s 1
L_01c9: ldarg.0
L_01ca: call System.String get_GUID()
L_01cf: ldarg.2
L_01d0: callvirt Single Instability()
L_01d5: ldarg.0
L_01d6: call BattleTech.CombatGameState get_Combat()
L_01db: callvirt BattleTech.CombatGameConstants get_Constants()
L_01e0: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_01e5: ldfld System.Single GlancingBlowDamageMultiplier
L_01ea: ldarg.0
L_01eb: call BattleTech.CombatGameState get_Combat()
L_01f0: callvirt BattleTech.CombatGameConstants get_Constants()
L_01f5: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_01fa: ldfld System.Single NormalBlowDamageMultiplier
L_01ff: ldarg.0
L_0200: call BattleTech.CombatGameState get_Combat()
L_0205: callvirt BattleTech.CombatGameConstants get_Constants()
L_020a: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_020f: ldfld System.Single SolidBlowDamageMultiplier
L_0214: call Single ConsolidateInstability(System.String, Single, Single, Single, Single)
L_0219: stloc.3
L_021a: ldloc.3
L_021b: ldarg.0
L_021c: call BattleTech.StatCollection get_StatCollection()
L_0221: ldstr "ReceivedInstabilityMultiplier"
L_0226: callvirt Single GetValue[Single](System.String)
L_022b: mul
L_022c: stloc.3
L_022d: ldloc.3
L_022e: ldarg.0
L_022f: call Single get_EntrenchedMultiplier()
L_0234: mul
L_0235: stloc.3
L_0236: ldarg.0
L_0237: ldloc.3
L_0238: ldc.i4.1
L_0239: ldarg.1
L_023a: ldfld System.String attackerId
L_023f: call Void AddAbsoluteInstability(Single, BattleTech.StabilityChangeSource, System.String)
L_0244: ldarg.0
L_0245: ldarg 1
L_024b: ldarg 2
L_0251: ldarg 3
L_0257: call Void Postfix(BattleTech.Mech, BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_025c: ldarg.0
L_025d: ldarg 1
L_0263: ldarg 2
L_0269: ldarg 3
L_026f: call Void Postfix(BattleTech.Mech, BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_0274: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceResolveDamage(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceResolveDamageMessage
L_0000: Local var 1: BattleTech.WeaponHitInfo
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.ICombatant
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.AbstractActor
L_0000: Local var 12: System.Int32
L_0000: Local var 13: BattleTech.EffectData[]
L_0000: Local var 14: System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 15: System.Int32
L_0000: Local var 16: BattleTech.EffectData
L_0000: Local var 17: System.String
L_0000: Local var 18: System.Int32
L_0000: Local var 19: BattleTech.EffectData
L_0000: Local var 20: System.String
L_0000: ldarga 1
L_0006: ldarg.0
L_0007: call Boolean Prefix(MessageCenterMessage ByRef, AttackSequence)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_001d: brfalse Label0
L_0022: ldarg.1
L_0023: castclass BattleTech.AttackSequenceResolveDamageMessage
L_0028: stloc.0
L_0029: ldloc.0
L_002a: ldfld BattleTech.WeaponHitInfo hitInfo
L_002f: stloc.1
L_0030: ldloc.1
L_0031: ldfld System.Int32 attackSequenceId
L_0036: ldarg.0
L_0037: ldfld System.Int32 id
L_003c: beq Label1
L_0041: br Label21
L_0046: Label1
L_0046: ldarg.0
L_0047: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_004c: ldloc.0
L_004d: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceResolveDamageMessage)
L_0052: brtrue Label2
L_0057: ldarg.0
L_0058: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_005d: ldloc.0
L_005e: callvirt Void StoreMessage(MessageCenterMessage)
L_0063: br Label22
L_0068: Label2
L_0068: ldsfld HBS.Logging.ILog logger
L_006d: callvirt Boolean get_IsLogEnabled()
L_0072: brfalse Label3
L_0077: ldsfld HBS.Logging.ILog logger
L_007c: ldstr "[OnAttackSequenceResolveDamage]  ID {0}, Group {1}, Weapon {2}, AttackerId [{3}], TargetId [{4}]"
L_0081: ldc.i4.5
L_0082: newarr System.Object
L_0087: dup
L_0088: ldc.i4.0
L_0089: ldarg.0
L_008a: ldfld System.Int32 id
L_008f: box System.Int32
L_0094: stelem.ref
L_0095: dup
L_0096: ldc.i4.1
L_0097: ldloc.1
L_0098: ldfld System.Int32 attackGroupIndex
L_009d: box System.Int32
L_00a2: stelem.ref
L_00a3: dup
L_00a4: ldc.i4.2
L_00a5: ldloc.1
L_00a6: ldfld System.Int32 attackWeaponIndex
L_00ab: box System.Int32
L_00b0: stelem.ref
L_00b1: dup
L_00b2: ldc.i4.3
L_00b3: ldloc.1
L_00b4: ldfld System.String attackerId
L_00b9: stelem.ref
L_00ba: dup
L_00bb: ldc.i4.4
L_00bc: ldloc.1
L_00bd: ldfld System.String targetId
L_00c2: stelem.ref
L_00c3: call System.String Format(System.String, System.Object[])
L_00c8: callvirt Void Log(System.Object)
L_00cd: Label3
L_00cd: ldloc.0
L_00ce: ldflda BattleTech.WeaponHitInfo hitInfo
L_00d3: ldfld System.Int32 attackGroupIndex
L_00d8: stloc.2
L_00d9: ldloc.0
L_00da: ldflda BattleTech.WeaponHitInfo hitInfo
L_00df: ldfld System.Int32 attackWeaponIndex
L_00e4: stloc.3
L_00e5: ldarg.0
L_00e6: ldloc.2
L_00e7: ldloc.3
L_00e8: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_00ed: stloc.s 4 (BattleTech.Weapon)
L_00ef: ldarg.0
L_00f0: ldfld System.Int32 BogusAssMeleeAttackType
L_00f5: ldc.i4.6
L_00f6: bne.un Label4
L_00fb: ldarg.0
L_00fc: ldfld BattleTech.AbstractActor attacker
L_0101: callvirt BattleTech.StatCollection get_StatCollection()
L_0106: ldstr "DFASelfDamage"
L_010b: callvirt Single GetValue[Single](System.String)
L_0110: stloc.s 7 (System.Single)
L_0112: ldarg.0
L_0113: ldfld BattleTech.AbstractActor attacker
L_0118: ldloc.0
L_0119: ldfld BattleTech.WeaponHitInfo hitInfo
L_011e: ldc.i4.s 64
L_0120: ldloc.s 4 (BattleTech.Weapon)
L_0122: ldloc.s 7 (System.Single)
L_0124: ldc.i4.0
L_0125: ldc.i4.6
L_0126: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_012b: ldarg.0
L_012c: ldfld BattleTech.AbstractActor attacker
L_0131: ldloc.0
L_0132: ldfld BattleTech.WeaponHitInfo hitInfo
L_0137: ldc.i4 128
L_013c: ldloc.s 4 (BattleTech.Weapon)
L_013e: ldloc.s 7 (System.Single)
L_0140: ldc.i4.0
L_0141: ldc.i4.6
L_0142: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0147: ldsfld HBS.Logging.ILog damageLogger
L_014c: callvirt Boolean get_IsLogEnabled()
L_0151: brfalse Label5
L_0156: ldsfld HBS.Logging.ILog damageLogger
L_015b: ldstr "@@@@@@@@ {0} takes {1} damage to its legs from the DFA attack!"
L_0160: ldarg.0
L_0161: ldfld BattleTech.AbstractActor attacker
L_0166: callvirt System.String get_DisplayName()
L_016b: ldloc.s 7 (System.Single)
L_016d: box System.Single
L_0172: call System.String Format(System.String, System.Object, System.Object)
L_0177: callvirt Void Log(System.Object)
L_017c: Label4
L_017c: Label5
L_017c: newobj Void .ctor()
L_0181: stloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0183: ldarg.0
L_0184: ldfld BattleTech.ICombatant chosenTarget
L_0189: ldloc.0
L_018a: ldfld BattleTech.WeaponHitInfo hitInfo
L_018f: callvirt Void ResolveWeaponDamage(BattleTech.WeaponHitInfo)
L_0194: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0196: ldarg.0
L_0197: ldfld BattleTech.ICombatant chosenTarget
L_019c: callvirt Void Add(BattleTech.ICombatant)
L_01a1: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.ICombatant chosenTarget
L_01a9: callvirt System.String get_GUID()
L_01ae: call Int32 GetFirstHitLocationForTarget(System.String)
L_01b3: ldc.i4.0
L_01b4: blt Label6
L_01b9: ldarg.0
L_01ba: ldc.i4.0
L_01bb: call Void set_attackCompletelyMissed(Boolean)
L_01c0: Label6
L_01c0: ldc.i4.0
L_01c1: stloc.s 8 (System.Int32)
L_01c3: br Label7
L_01c8: Label10
L_01c8: ldarg.0
L_01c9: call BattleTech.AttackDirector get_Director()
L_01ce: callvirt BattleTech.CombatGameState get_Combat()
L_01d3: ldloc.0
L_01d4: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d9: ldfld System.String[] secondaryTargetIds
L_01de: ldloc.s 8 (System.Int32)
L_01e0: ldelem.ref
L_01e1: ldc.i4.0
L_01e2: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01e7: stloc.s 9 (BattleTech.ICombatant)
L_01e9: ldloc.s 9 (BattleTech.ICombatant)
L_01eb: brfalse Label8
L_01f0: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01f2: ldloc.s 9 (BattleTech.ICombatant)
L_01f4: callvirt Boolean Contains(BattleTech.ICombatant)
L_01f9: brtrue Label9
L_01fe: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0200: ldloc.s 9 (BattleTech.ICombatant)
L_0202: callvirt Void Add(BattleTech.ICombatant)
L_0207: ldloc.s 9 (BattleTech.ICombatant)
L_0209: ldloc.0
L_020a: ldfld BattleTech.WeaponHitInfo hitInfo
L_020f: callvirt Void ResolveWeaponDamage(BattleTech.WeaponHitInfo)
L_0214: Label8
L_0214: Label9
L_0214: ldloc.s 8 (System.Int32)
L_0216: ldc.i4.1
L_0217: add
L_0218: stloc.s 8 (System.Int32)
L_021a: Label7
L_021a: ldloc.s 8 (System.Int32)
L_021c: ldloc.0
L_021d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0222: ldfld System.String[] secondaryTargetIds
L_0227: ldlen
L_0228: conv.i4
L_0229: blt Label10
L_022e: ldarg.0
L_022f: call BattleTech.AttackDirector get_Director()
L_0234: ldloc.1
L_0235: ldfld System.Int32 attackSequenceId
L_023a: callvirt AttackSequence GetAttackSequence(Int32)
L_023f: stloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_0241: ldc.i4.0
L_0242: stloc.s 10 (System.Int32)
L_0244: br Label11
L_0249: Label20
L_0249: ldarg.0
L_024a: call BattleTech.AttackDirector get_Director()
L_024f: callvirt BattleTech.CombatGameState get_Combat()
L_0254: ldloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_0256: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_025b: ldloc.s 10 (System.Int32)
L_025d: callvirt System.String get_Item(Int32)
L_0262: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0267: stloc.s 11 (BattleTech.AbstractActor)
L_0269: ldloc.s 11 (BattleTech.AbstractActor)
L_026b: brfalse Label12
L_0270: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_0272: ldloc.s 11 (BattleTech.AbstractActor)
L_0274: callvirt System.String get_GUID()
L_0279: call Int32 GetFirstHitLocationForTarget(System.String)
L_027e: stloc.s 12 (System.Int32)
L_0280: ldloc.s 12 (System.Int32)
L_0282: ldc.i4.0
L_0283: blt Label13
L_0288: ldloc.s 11 (BattleTech.AbstractActor)
L_028a: callvirt Boolean get_IsDead()
L_028f: brtrue Label14
L_0294: ldloc.s 4 (BattleTech.Weapon)
L_0296: callvirt BattleTech.WeaponDef get_weaponDef()
L_029b: callvirt BattleTech.EffectData[] get_statusEffects()
L_02a0: stloc.s 13 (BattleTech.EffectData[])
L_02a2: ldc.i4.0
L_02a3: stloc.s 15 (System.Int32)
L_02a5: br Label15
L_02aa: Label17
L_02aa: ldloc.s 13 (BattleTech.EffectData[])
L_02ac: ldloc.s 15 (System.Int32)
L_02ae: ldelem.ref
L_02af: stloc.s 16 (BattleTech.EffectData)
L_02b1: ldloc.s 16 (BattleTech.EffectData)
L_02b3: ldflda BattleTech.EffectTargetingData targetingData
L_02b8: ldfld BattleTech.EffectTriggerType effectTriggerType
L_02bd: ldc.i4.2
L_02be: bne.un Label16
L_02c3: ldstr "OnHitEffect_{0}_{1}"
L_02c8: ldarg.0
L_02c9: ldfld BattleTech.AbstractActor attacker
L_02ce: callvirt System.String get_GUID()
L_02d3: ldloc.0
L_02d4: ldflda BattleTech.WeaponHitInfo hitInfo
L_02d9: ldfld System.Int32 attackSequenceId
L_02de: box System.Int32
L_02e3: call System.String Format(System.String, System.Object, System.Object)
L_02e8: stloc.s 17 (System.String)
L_02ea: ldarg.0
L_02eb: call BattleTech.AttackDirector get_Director()
L_02f0: callvirt BattleTech.CombatGameState get_Combat()
L_02f5: callvirt BattleTech.EffectManager get_EffectManager()
L_02fa: ldloc.s 16 (BattleTech.EffectData)
L_02fc: ldloc.s 17 (System.String)
L_02fe: ldarg.0
L_02ff: ldfld System.Int32 stackItemUID
L_0304: ldarg.0
L_0305: ldfld BattleTech.AbstractActor attacker
L_030a: ldloc.s 11 (BattleTech.AbstractActor)
L_030c: ldloc.1
L_030d: ldloc.s 12 (System.Int32)
L_030f: ldc.i4.0
L_0310: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_0315: pop
L_0316: ldarg.0
L_0317: call BattleTech.AttackDirector get_Director()
L_031c: callvirt BattleTech.CombatGameState get_Combat()
L_0321: callvirt MessageCenter get_MessageCenter()
L_0326: ldloc.s 11 (BattleTech.AbstractActor)
L_0328: callvirt System.String get_GUID()
L_032d: ldloc.s 11 (BattleTech.AbstractActor)
L_032f: callvirt System.String get_GUID()
L_0334: ldloc.s 16 (BattleTech.EffectData)
L_0336: ldfld BattleTech.BaseDescriptionDef Description
L_033b: callvirt System.String get_Name()
L_0340: ldc.i4.2
L_0341: newobj Void .ctor(String, String, String, MessageNature)
L_0346: callvirt Void PublishMessage(MessageCenterMessage)
L_034b: Label16
L_034b: ldloc.s 15 (System.Int32)
L_034d: ldc.i4.1
L_034e: add
L_034f: stloc.s 15 (System.Int32)
L_0351: Label15
L_0351: ldloc.s 15 (System.Int32)
L_0353: ldloc.s 13 (BattleTech.EffectData[])
L_0355: ldlen
L_0356: conv.i4
L_0357: blt Label17
L_035c: ldloc.s 11 (BattleTech.AbstractActor)
L_035e: ldc.i4.3
L_035f: callvirt System.Collections.Generic.List`1[BattleTech.EffectData] GetComponentStatusEffectsForTriggerType(BattleTech.EffectTriggerType)
L_0364: stloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_0366: ldc.i4.0
L_0367: stloc.s 18 (System.Int32)
L_0369: br Label18
L_036e: Label19
L_036e: ldloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_0370: ldloc.s 18 (System.Int32)
L_0372: callvirt BattleTech.EffectData get_Item(Int32)
L_0377: stloc.s 19 (BattleTech.EffectData)
L_0379: ldstr "OnDamagedEffect_{0}_{1}"
L_037e: ldloc.s 11 (BattleTech.AbstractActor)
L_0380: callvirt System.String get_GUID()
L_0385: ldloc.0
L_0386: ldflda BattleTech.WeaponHitInfo hitInfo
L_038b: ldfld System.Int32 attackSequenceId
L_0390: box System.Int32
L_0395: call System.String Format(System.String, System.Object, System.Object)
L_039a: stloc.s 20 (System.String)
L_039c: ldarg.0
L_039d: call BattleTech.AttackDirector get_Director()
L_03a2: callvirt BattleTech.CombatGameState get_Combat()
L_03a7: callvirt BattleTech.EffectManager get_EffectManager()
L_03ac: ldloc.s 19 (BattleTech.EffectData)
L_03ae: ldloc.s 20 (System.String)
L_03b0: ldarg.0
L_03b1: ldfld System.Int32 stackItemUID
L_03b6: ldloc.s 11 (BattleTech.AbstractActor)
L_03b8: ldarg.0
L_03b9: ldfld BattleTech.AbstractActor attacker
L_03be: ldloc.1
L_03bf: ldloc.s 12 (System.Int32)
L_03c1: ldc.i4.0
L_03c2: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_03c7: pop
L_03c8: ldloc.s 18 (System.Int32)
L_03ca: ldc.i4.1
L_03cb: add
L_03cc: stloc.s 18 (System.Int32)
L_03ce: Label18
L_03ce: ldloc.s 18 (System.Int32)
L_03d0: ldloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_03d2: callvirt Int32 get_Count()
L_03d7: blt Label19
L_03dc: Label12
L_03dc: Label13
L_03dc: Label14
L_03dc: ldloc.s 10 (System.Int32)
L_03de: ldc.i4.1
L_03df: add
L_03e0: stloc.s 10 (System.Int32)
L_03e2: Label11
L_03e2: ldloc.s 10 (System.Int32)
L_03e4: ldloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_03e6: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_03eb: callvirt Int32 get_Count()
L_03f0: blt Label20
L_03f5: ldarg.0
L_03f6: ldfld BattleTech.AbstractActor attacker
L_03fb: ldarg.0
L_03fc: ldfld BattleTech.AbstractActor attacker
L_0401: callvirt System.String get_GUID()
L_0406: callvirt Void HandleDeath(System.String)
L_040b: ldarg.0
L_040c: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0411: ldloc.0
L_0412: callvirt Void MessageComplete(MessageCenterMessage)
L_0417: Label21
L_0417: Label22
L_0417: Label0
L_0417: ret
DONE

### Patch BattleTech.UI.CombatHUDActionButton, Void ExecuteClick()
L_0000: Local var 0: BattleTech.UI.SelectionState
L_0000: Local var 1: System.Boolean
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.CombatHUDActionButton)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: callvirt Boolean get_IsValidButton()
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: call ButtonState get_state()
L_001c: ldc.i4.2
L_001d: beq Label2
L_0022: ldarg.0
L_0023: call BattleTech.UI.CombatHUD get_HUD()
L_0028: callvirt BattleTech.AbstractActor get_SelectedActor()
L_002d: brfalse Label3
L_0032: ldarg.0
L_0033: call BattleTech.Ability get_Ability()
L_0038: brfalse Label4
L_003d: ldarg.0
L_003e: call BattleTech.Ability get_Ability()
L_0043: callvirt BattleTech.AbilityDef get_Def()
L_0048: callvirt ActivationTiming get_ActivationTime()
L_004d: ldc.i4.1
L_004e: bne.un Label5
L_0053: Label1
L_0053: Label2
L_0053: Label3
L_0053: ldc.i4 197
L_0058: call AkGameObj get_GlobalAudioObject()
L_005d: ldnull
L_005e: ldnull
L_005f: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_0064: pop
L_0065: br Label19
L_006a: Label4
L_006a: Label5
L_006a: ldarg.0
L_006b: ldc.i4.0
L_006c: call Void set_isAutoHighlighted(Boolean)
L_0071: ldarg.0
L_0072: call BattleTech.UI.SelectionType get_SelectionType()
L_0077: brtrue Label6
L_007c: ldarg.0
L_007d: call System.String get_GUID()
L_0082: ldstr "BTN_Restart"
L_0087: call Boolean op_Equality(System.String, System.String)
L_008c: brfalse Label7
L_0091: ldarg.0
L_0092: call BattleTech.UI.CombatHUD get_HUD()
L_0097: ldarg.0
L_0098: call System.String get_GUID()
L_009d: callvirt System.String ToString()
L_00a2: ldc.i4 223
L_00a7: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00ac: br Label20
L_00b1: Label7
L_00b1: ldarg.0
L_00b2: call BattleTech.Ability get_Ability()
L_00b7: brfalse Label8
L_00bc: ldarg.0
L_00bd: call Void ToggleAbilityState()
L_00c2: br Label21
L_00c7: Label8
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUD get_HUD()
L_00cd: ldarg.0
L_00ce: call System.String get_GUID()
L_00d3: callvirt System.String ToString()
L_00d8: ldc.i4 193
L_00dd: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00e2: br Label22
L_00e7: Label6
L_00e7: ldarg.0
L_00e8: call BattleTech.UI.CombatHUD get_HUD()
L_00ed: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00f2: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_00f7: stloc.0
L_00f8: ldarg.0
L_00f9: call Boolean get_IsActive()
L_00fe: brtrue Label9
L_0103: ldloc.0
L_0104: brfalse Label10
L_0109: ldloc.0
L_010a: callvirt BattleTech.IStackSequence get_Orders()
L_010f: ldnull
L_0110: cgt.un
L_0112: br Label11
L_0117: Label10
L_0117: ldc.i4.0
L_0118: Label11
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldc.i4.1
L_011b: call Void set_IsActive(Boolean)
L_0120: ldarg.0
L_0121: call BattleTech.UI.SelectionType get_SelectionType()
L_0126: ldc.i4.s 30
L_0128: bne.un Label12
L_012d: ldloc.1
L_012e: brtrue Label13
L_0133: ldarg.0
L_0134: call BattleTech.UI.CombatHUD get_HUD()
L_0139: ldarg.0
L_013a: call System.String get_GUID()
L_013f: callvirt System.String ToString()
L_0144: ldc.i4 193
L_0149: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_014e: Label12
L_014e: Label13
L_014e: ldarg.0
L_014f: call BattleTech.UI.SelectionType get_SelectionType()
L_0154: ldc.i4.3
L_0155: bne.un Label14
L_015a: ldc.i4 200
L_015f: call AkGameObj get_GlobalAudioObject()
L_0164: ldnull
L_0165: ldnull
L_0166: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_016b: pop
L_016c: br Label23
L_0171: Label14
L_0171: ldarg.0
L_0172: call BattleTech.UI.SelectionType get_SelectionType()
L_0177: ldc.i4.6
L_0178: bne.un Label15
L_017d: ldc.i4 196
L_0182: call AkGameObj get_GlobalAudioObject()
L_0187: ldnull
L_0188: ldnull
L_0189: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_018e: pop
L_018f: br Label24
L_0194: Label15
L_0194: ldc.i4 193
L_0199: call AkGameObj get_GlobalAudioObject()
L_019e: ldnull
L_019f: ldnull
L_01a0: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_01a5: pop
L_01a6: br Label25
L_01ab: Label9
L_01ab: ldloc.0
L_01ac: brfalse Label16
L_01b1: ldloc.0
L_01b2: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_01b7: ldarg.0
L_01b8: call BattleTech.UI.SelectionType get_SelectionType()
L_01bd: bne.un Label17
L_01c2: ldarg.0
L_01c3: call BattleTech.UI.CombatHUD get_HUD()
L_01c8: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01cd: callvirt Boolean get_CanActiveStateBePopped()
L_01d2: brfalse Label18
L_01d7: ldarg.0
L_01d8: ldc.i4.0
L_01d9: call Void set_IsActive(Boolean)
L_01de: ldc.i4 193
L_01e3: call AkGameObj get_GlobalAudioObject()
L_01e8: ldnull
L_01e9: ldnull
L_01ea: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_01ef: pop
L_01f0: Label16
L_01f0: Label17
L_01f0: Label18
L_01f0: Label19
L_01f0: Label20
L_01f0: Label21
L_01f0: Label22
L_01f0: Label23
L_01f0: Label24
L_01f0: Label25
L_01f0: Label0
L_01f0: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void OnPointerDown(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: callvirt InputButton get_button()
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0022: ldc.i4.2
L_0023: beq Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_002e: ldc.i4.1
L_002f: beq Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.Weapon displayedWeapon
L_003a: callvirt Boolean get_IsDisabled()
L_003f: brtrue Label4
L_0044: ldarg.0
L_0045: ldfld BattleTech.Weapon displayedWeapon
L_004a: callvirt Boolean get_HasAmmo()
L_004f: brfalse Label5
L_0054: ldarg.0
L_0055: ldfld SVGImporter.SVGImage MainImage
L_005a: ldarg.0
L_005b: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0060: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_0065: callvirt UnityEngine.Color get_PressedBGColor()
L_006a: callvirt Void set_color(UnityEngine.Color)
L_006f: ldarg.0
L_0070: ldarg.0
L_0071: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0076: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_007b: callvirt UnityEngine.Color get_PressedTextColor()
L_0080: ldc.i4.1
L_0081: call Void ShowTextColor(UnityEngine.Color, Boolean)
L_0086: ldarg.0
L_0087: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_008c: ldfld SVGImporter.SVGImage childImage
L_0091: ldarg.0
L_0092: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0097: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_009c: callvirt UnityEngine.Color get_PressedToggleColor()
L_00a1: callvirt Void set_color(UnityEngine.Color)
L_00a6: Label1
L_00a6: Label2
L_00a6: Label3
L_00a6: Label4
L_00a6: Label5
L_00a6: Label0
L_00a6: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void OnPointerUp(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: callvirt InputButton get_button()
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0022: ldc.i4.2
L_0023: beq Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_002e: ldc.i4.1
L_002f: beq Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.Weapon displayedWeapon
L_003a: callvirt Boolean get_IsDisabled()
L_003f: brtrue Label4
L_0044: ldarg.0
L_0045: ldfld BattleTech.CombatGameState Combat
L_004a: callvirt BattleTech.StackManager get_StackManager()
L_004f: callvirt BattleTech.AttackStackSequence GetAnyAttackSequence()
L_0054: brfalse Label5
L_0059: Label4
L_0059: ldarg.0
L_005a: ldfld BattleTech.UI.CombatHUD HUD
L_005f: ldstr "WeaponSlot"
L_0064: ldc.i4 286
L_0069: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_006e: br Label6
L_0073: Label5
L_0073: ldarg.0
L_0074: ldfld BattleTech.UI.CombatHUD HUD
L_0079: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_007e: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0083: brfalse Label7
L_0088: ldarg.0
L_0089: ldfld BattleTech.UI.CombatHUD HUD
L_008e: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0093: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0098: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_009d: ldc.i4.s 9
L_009f: bne.un Label8
L_00a4: ldarg.0
L_00a5: call Void CycleWeapon()
L_00aa: br Label9
L_00af: Label7
L_00af: Label8
L_00af: ldarg.0
L_00b0: ldfld BattleTech.Weapon displayedWeapon
L_00b5: callvirt Boolean get_IsEnabled()
L_00ba: brtrue Label10
L_00bf: ldarg.0
L_00c0: ldfld BattleTech.UI.CombatHUD HUD
L_00c5: ldstr "WeaponSlot"
L_00ca: ldc.i4 285
L_00cf: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00d4: ldarg.0
L_00d5: ldfld BattleTech.Weapon displayedWeapon
L_00da: callvirt Void EnableWeapon()
L_00df: ldarg.0
L_00e0: ldfld BattleTech.UI.CombatHUD HUD
L_00e5: callvirt Void OnWeaponModified()
L_00ea: br Label11
L_00ef: Label10
L_00ef: ldarg.0
L_00f0: ldfld BattleTech.UI.CombatHUD HUD
L_00f5: ldstr "WeaponSlot"
L_00fa: ldc.i4 287
L_00ff: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_0104: ldarg.0
L_0105: ldfld BattleTech.Weapon displayedWeapon
L_010a: callvirt Void DisableWeapon()
L_010f: ldarg.0
L_0110: ldfld BattleTech.UI.CombatHUD HUD
L_0115: callvirt Void OnWeaponModified()
L_011a: Label6
L_011a: Label9
L_011a: Label11
L_011a: ldarg.0
L_011b: ldnull
L_011c: call Void RefreshDisplayedWeapon(BattleTech.ICombatant)
L_0121: Label1
L_0121: Label2
L_0121: Label3
L_0121: Label0
L_0121: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void RefreshHighlighted()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld BattleTech.Weapon displayedWeapon
L_0011: callvirt Boolean get_IsDisabled()
L_0016: brtrue Label1
L_001b: ldarg.0
L_001c: ldfld BattleTech.Weapon displayedWeapon
L_0021: callvirt Boolean get_HasAmmo()
L_0026: brfalse Label2
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0031: brtrue Label3
L_0036: ldarg.0
L_0037: ldfld SVGImporter.SVGImage MainImage
L_003c: ldarg.0
L_003d: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0042: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_0047: callvirt UnityEngine.Color get_HighlightedBGColor()
L_004c: callvirt Void set_color(UnityEngine.Color)
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0058: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_005d: callvirt UnityEngine.Color get_HighlightedTextColor()
L_0062: ldc.i4.1
L_0063: call Void ShowTextColor(UnityEngine.Color, Boolean)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_006e: ldfld SVGImporter.SVGImage childImage
L_0073: ldarg.0
L_0074: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0079: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_007e: callvirt UnityEngine.Color get_HighlightedToggleColor()
L_0083: callvirt Void set_color(UnityEngine.Color)
L_0088: Label1
L_0088: Label2
L_0088: Label3
L_0088: Label0
L_0088: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean MechCanUseAmmo(BattleTech.AmmunitionBoxDef)
L_0000: Local var 0: BattleTech.AmmoCategoryValue
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: callvirt BattleTech.AmmunitionDef get_Ammo()
L_000c: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0011: stloc.0
L_0012: ldloc.0
L_0013: callvirt Boolean get_IsBallistic()
L_0018: brfalse Label1
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0023: ldfld System.Int32 totalBallisticHardpoints
L_0028: ldc.i4.0
L_0029: cgt
L_002b: br Label5
L_0030: Label1
L_0030: ldloc.0
L_0031: callvirt Boolean get_IsSupport()
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0041: ldfld System.Int32 totalSmallHardpoints
L_0046: ldc.i4.0
L_0047: cgt
L_0049: br Label6
L_004e: Label2
L_004e: ldloc.0
L_004f: callvirt Boolean get_IsMissile()
L_0054: brfalse Label3
L_0059: ldarg.0
L_005a: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_005f: ldfld System.Int32 totalMissileHardpoints
L_0064: ldc.i4.0
L_0065: cgt
L_0067: br Label7
L_006c: Label3
L_006c: ldloc.0
L_006d: callvirt Boolean get_IsEnergy()
L_0072: brfalse Label4
L_0077: ldarg.0
L_0078: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_007d: ldfld System.Int32 totalEnergyHardpoints
L_0082: ldc.i4.0
L_0083: cgt
L_0085: br Label8
L_008a: Label4
L_008a: ldc.i4.1
L_008b: Label5
L_008b: Label6
L_008b: Label7
L_008b: Label8
L_008b: stloc 1 (System.Boolean)
L_008c: ldarg.0
L_008d: ldarg 1
L_0093: ldloca 1 (System.Boolean)
L_0095: call Void Postfix(BattleTech.UI.MechLabPanel, BattleTech.AmmunitionBoxDef, Boolean ByRef)
L_009a: ldloc 1 (System.Boolean)
L_009b: ret
DONE

### Patch BattleTech.Weapon, Boolean get_WillFire()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean Prefix(BattleTech.Weapon)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Boolean get_HasFired()
L_0017: ldc.i4.0
L_0018: ceq
L_001a: stloc.0
L_001b: ldarg.0
L_001c: call Boolean get_CanFire()
L_0021: ldloc.0
L_0022: and
L_0023: stloc 1 (System.Boolean)
L_0024: Label0
L_0024: ldloc 1 (System.Boolean)
L_0025: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void Cleanup()
L_0000: ldarg.0
L_0001: call BattleTech.AttackDirector get_Director()
L_0006: callvirt BattleTech.CombatGameState get_Combat()
L_000b: callvirt MessageCenter get_MessageCenter()
L_0010: dup
L_0011: ldc.i4.s 32
L_0013: ldarg.0
L_0014: ldftn Void OnAttackSequenceGroupBegin(MessageCenterMessage)
L_001a: newobj Void .ctor(Object, IntPtr)
L_001f: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0024: dup
L_0025: ldc.i4.s 33
L_0027: ldarg.0
L_0028: ldftn Void OnAttackSequenceFire(MessageCenterMessage)
L_002e: newobj Void .ctor(Object, IntPtr)
L_0033: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0038: dup
L_0039: ldc.i4.s 34
L_003b: ldarg.0
L_003c: ldftn Void OnAttackSequenceWeaponPreFireComplete(MessageCenterMessage)
L_0042: newobj Void .ctor(Object, IntPtr)
L_0047: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_004c: dup
L_004d: ldc.i4.s 35
L_004f: ldarg.0
L_0050: ldftn Void OnAttackSequenceImpact(MessageCenterMessage)
L_0056: newobj Void .ctor(Object, IntPtr)
L_005b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0060: dup
L_0061: ldc.i4.s 36
L_0063: ldarg.0
L_0064: ldftn Void OnAttackSequenceResolveDamage(MessageCenterMessage)
L_006a: newobj Void .ctor(Object, IntPtr)
L_006f: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0074: dup
L_0075: ldc.i4.s 37
L_0077: ldarg.0
L_0078: ldftn Void OnAttackSequenceWeaponComplete(MessageCenterMessage)
L_007e: newobj Void .ctor(Object, IntPtr)
L_0083: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0088: ldc.i4.s 38
L_008a: ldarg.0
L_008b: ldftn Void OnAttackSequenceGroupEnd(MessageCenterMessage)
L_0091: newobj Void .ctor(Object, IntPtr)
L_0096: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_009b: ldarg.0
L_009c: call Void Postfix(AttackSequence)
L_00a1: ret
DONE

### Patch BattleTech.CombatGameState, Void RebuildAllLists()
L_0000: ldarg.0
L_0001: call Void RebuildAllActors()
L_0006: ldarg.0
L_0007: call Void RebuildAllMiscCombatants()
L_000c: ldarg.0
L_000d: call Void RebuildAllMechs()
L_0012: ldarg.0
L_0013: call Void RebuildAllCombatants()
L_0018: ldarg.0
L_0019: ldc.i4.0
L_001a: stfld System.Boolean combatantAdded
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.CombatGameState)
L_0025: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldsfld HBS.Logging.ILog gameInfoLogger
L_001b: ldstr "CombatGameState Destroyed: {0}"
L_0020: call System.DateTime get_UtcNow()
L_0025: stloc.0
L_0026: ldloca.s 0 (System.DateTime)
L_0028: ldstr "ddd MMM d yyyy HH:mm:ss"
L_002d: call System.String ToString(System.String)
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void Log(System.Object)
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: brfalse Label1
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: newobj Void .ctor()
L_0052: dup
L_0053: call BattleTech.GameInstance get_BattleTechGame()
L_0058: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_005d: callvirt Boolean IsNetworkGameActive()
L_0062: callvirt Void set_IsNetworkGame(Boolean)
L_0067: callvirt Void PublishMessage(MessageCenterMessage)
L_006c: Label1
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: brfalse Label2
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: callvirt Void OnCombatGameDestroyed()
L_0082: ldarg.0
L_0083: ldnull
L_0084: call Void set_StackManager(BattleTech.StackManager)
L_0089: Label2
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: brfalse Label3
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: callvirt Void OnCombatGameDestroyed()
L_009f: Label3
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: brfalse Label4
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label4
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: brfalse Label5
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: ldc.i4.3
L_00c7: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00cc: Label5
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: brfalse Label6
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: callvirt Void Dispose()
L_00e2: Label6
L_00e2: call Boolean get_HasInstance()
L_00e7: brfalse Label7
L_00ec: call HBS.DebugConsole.DebugConsole get_Instance()
L_00f1: ldarg.0
L_00f2: ldftn Void DebugConsoleOnBeforeDump()
L_00f8: newobj Void .ctor(Object, IntPtr)
L_00fd: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0102: Label7
L_0102: call Boolean get_HasInstance()
L_0107: brfalse Label8
L_010c: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0111: callvirt Void OnCombatSceneEnd()
L_0116: Label8
L_0116: ldnull
L_0117: call Void set_destructionConstantsComponent(DestructionConstants)
L_011c: call Void ClearStaticData()
L_0121: call Void ClearStaticData()
L_0126: call Void ClearStaticData()
L_012b: call Void ClearStaticData()
L_0130: call Void ClearStaticData()
L_0135: ldsfld HBS.Logging.ILog gameInfoLogger
L_013a: ldstr "CombatGameState destroyed: {0}"
L_013f: call System.DateTime get_UtcNow()
L_0144: stloc.0
L_0145: ldloca.s 0 (System.DateTime)
L_0147: ldstr "ddd MMM d yyyy HH:mm:ss"
L_014c: call System.String ToString(System.String)
L_0151: call System.String Format(System.String, System.Object)
L_0156: callvirt Void Log(System.Object)
L_015b: Label0
L_015b: ldarg.0
L_015c: call Void Postfix(BattleTech.CombatGameState)
L_0161: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_Combat(BattleTech.CombatGameState)
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: newobj Void .ctor(CombatGameState)
L_001f: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0024: ldarg.0
L_0025: ldarg.0
L_0026: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_002b: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0030: ldarg.0
L_0031: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0036: ldnull
L_0037: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_003c: brfalse Label1
L_0041: ldsfld HBS.Logging.ILog uiLogger
L_0046: ldstr "Couldn't find Selection Handler."
L_004b: callvirt Void LogWarning(System.Object)
L_0050: br Label2
L_0055: Label1
L_0055: ldarg.0
L_0056: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_005b: ldarg.1
L_005c: ldarg.0
L_005d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0062: Label2
L_0062: ldarg.0
L_0063: ldarg.0
L_0064: ldc.i4.1
L_0065: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_006a: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_006f: ldarg.0
L_0070: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0075: ldnull
L_0076: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_007b: brfalse Label3
L_0080: ldsfld HBS.Logging.ILog uiLogger
L_0085: ldstr "Couldn't find MechTray under the CombatHUD."
L_008a: callvirt Void LogWarning(System.Object)
L_008f: br Label4
L_0094: Label3
L_0094: ldarg.0
L_0095: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_009a: ldarg.1
L_009b: callvirt MessageCenter get_MessageCenter()
L_00a0: ldarg.0
L_00a1: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_00a6: Label4
L_00a6: ldarg.0
L_00a7: ldarg.0
L_00a8: ldc.i4.1
L_00a9: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_00ae: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00b3: ldarg.0
L_00b4: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00b9: ldnull
L_00ba: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00bf: brfalse Label5
L_00c4: ldsfld HBS.Logging.ILog uiLogger
L_00c9: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00ce: callvirt Void LogWarning(System.Object)
L_00d3: br Label6
L_00d8: Label5
L_00d8: ldarg.0
L_00d9: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00de: ldarg.1
L_00df: ldarg.0
L_00e0: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00e5: ldarg.0
L_00e6: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00eb: ldarg.1
L_00ec: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00f1: callvirt Void RefreshTeam(BattleTech.Team)
L_00f6: Label6
L_00f6: ldarg.0
L_00f7: ldarg.0
L_00f8: ldc.i4.1
L_00f9: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00fe: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_0103: ldarg.0
L_0104: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0109: ldnull
L_010a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_010f: brfalse Label7
L_0114: ldsfld HBS.Logging.ILog uiLogger
L_0119: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_011e: callvirt Void LogWarning(System.Object)
L_0123: br Label8
L_0128: Label7
L_0128: ldarg.0
L_0129: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_012e: ldnull
L_012f: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0134: ldarg.0
L_0135: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_013a: ldarg.1
L_013b: ldarg.0
L_013c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0141: Label8
L_0141: ldarg.0
L_0142: call BattleTech.UI.UIManager get_Instance()
L_0147: ldstr ""
L_014c: ldc.i4.1
L_014d: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0152: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0157: ldarg.0
L_0158: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_015d: ldnull
L_015e: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0163: brfalse Label9
L_0168: ldsfld HBS.Logging.ILog uiLogger
L_016d: ldstr "Error creating PhaseTrack!"
L_0172: callvirt Void LogWarning(System.Object)
L_0177: br Label10
L_017c: Label9
L_017c: ldarg.0
L_017d: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0182: ldarg.1
L_0183: ldarg.0
L_0184: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0189: Label10
L_0189: ldarg.0
L_018a: call BattleTech.UI.UIManager get_Instance()
L_018f: ldstr ""
L_0194: ldc.i4.1
L_0195: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_019a: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_019f: ldarg.0
L_01a0: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01a5: ldnull
L_01a6: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01ab: brfalse Label11
L_01b0: ldsfld HBS.Logging.ILog uiLogger
L_01b5: ldstr "Error creating Turn Event Notification!"
L_01ba: callvirt Void LogError(System.Object)
L_01bf: br Label12
L_01c4: Label11
L_01c4: ldarg.0
L_01c5: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01ca: ldarg.1
L_01cb: ldarg.0
L_01cc: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01d1: Label12
L_01d1: ldarg.1
L_01d2: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01d7: callvirt Boolean IsNetworkGameActive()
L_01dc: brfalse Label13
L_01e1: ldarg.0
L_01e2: call BattleTech.UI.UIManager get_Instance()
L_01e7: ldstr ""
L_01ec: ldc.i4.1
L_01ed: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01f2: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01f7: ldarg.0
L_01f8: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01fd: ldnull
L_01fe: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0203: brfalse Label14
L_0208: ldsfld HBS.Logging.ILog uiLogger
L_020d: ldstr "Error creating multiplayer UI!"
L_0212: callvirt Void LogError(System.Object)
L_0217: br Label15
L_021c: Label14
L_021c: ldarg.0
L_021d: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0222: ldarg.0
L_0223: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0228: Label13
L_0228: Label15
L_0228: ldarg.0
L_0229: call BattleTech.UI.UIManager get_Instance()
L_022e: ldstr ""
L_0233: ldc.i4.1
L_0234: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0239: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_023e: ldarg.0
L_023f: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0244: ldnull
L_0245: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_024a: brfalse Label16
L_024f: ldsfld HBS.Logging.ILog uiLogger
L_0254: ldstr "Error creating Targeting Computer!"
L_0259: callvirt Void LogError(System.Object)
L_025e: br Label17
L_0263: Label16
L_0263: ldarg.0
L_0264: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0269: ldarg.0
L_026a: callvirt Void Init(BattleTech.UI.CombatHUD)
L_026f: Label17
L_026f: ldarg.0
L_0270: call BattleTech.UI.UIManager get_Instance()
L_0275: ldstr ""
L_027a: ldc.i4.1
L_027b: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_0280: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0285: ldarg.0
L_0286: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_028b: ldnull
L_028c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0291: brfalse Label18
L_0296: ldsfld HBS.Logging.ILog uiLogger
L_029b: ldstr "Error creating Called Shot Popup!"
L_02a0: callvirt Void LogError(System.Object)
L_02a5: br Label19
L_02aa: Label18
L_02aa: ldarg.0
L_02ab: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_02b0: ldarg.0
L_02b1: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02b6: Label19
L_02b6: ldarg.0
L_02b7: call BattleTech.UI.UIManager get_Instance()
L_02bc: ldstr ""
L_02c1: ldc.i4.1
L_02c2: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02c7: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02cc: ldarg.0
L_02cd: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02d2: ldnull
L_02d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02d8: brfalse Label20
L_02dd: ldsfld HBS.Logging.ILog uiLogger
L_02e2: ldstr "Error creating Attack Mode Selector!"
L_02e7: callvirt Void LogError(System.Object)
L_02ec: br Label21
L_02f1: Label20
L_02f1: ldarg.0
L_02f2: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f7: ldarg.1
L_02f8: ldarg.0
L_02f9: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02fe: ldarg.0
L_02ff: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0304: ldc.i4.0
L_0305: callvirt Void set_Visible(Boolean)
L_030a: Label21
L_030a: ldarg.0
L_030b: ldarg.0
L_030c: call UnityEngine.GameObject get_gameObject()
L_0311: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0316: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_031b: ldarg.0
L_031c: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0321: ldnull
L_0322: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0327: brfalse Label22
L_032c: ldsfld HBS.Logging.ILog uiLogger
L_0331: ldstr "Error finding InWorldElementMgr!"
L_0336: callvirt Void LogError(System.Object)
L_033b: br Label23
L_0340: Label22
L_0340: ldarg.0
L_0341: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0346: ldarg.1
L_0347: ldarg.0
L_0348: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_034d: Label23
L_034d: ldarg.0
L_034e: call BattleTech.UI.UIManager get_Instance()
L_0353: ldstr ""
L_0358: ldc.i4.1
L_0359: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_035e: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0363: ldarg.0
L_0364: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0369: ldnull
L_036a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_036f: brfalse Label24
L_0374: ldsfld HBS.Logging.ILog uiLogger
L_0379: ldstr "Error creating Objective Status Notification!"
L_037e: callvirt Void LogError(System.Object)
L_0383: Label24
L_0383: ldarg.0
L_0384: call BattleTech.UI.UIManager get_Instance()
L_0389: ldstr ""
L_038e: ldc.i4.1
L_038f: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0394: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0399: ldarg.0
L_039a: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_039f: ldnull
L_03a0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03a5: brfalse Label25
L_03aa: ldsfld HBS.Logging.ILog uiLogger
L_03af: ldstr "Error creating Objective List!"
L_03b4: callvirt Void LogError(System.Object)
L_03b9: br Label26
L_03be: Label25
L_03be: ldarg.0
L_03bf: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03c4: ldarg.1
L_03c5: ldarg.0
L_03c6: ldarg.0
L_03c7: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03cc: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03d1: Label26
L_03d1: call BattleTech.UI.UIManager get_Instance()
L_03d6: ldstr ""
L_03db: ldc.i4.1
L_03dc: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03e1: stloc.0
L_03e2: ldloc.0
L_03e3: callvirt Void Init()
L_03e8: ldloc.0
L_03e9: ldc.i4.0
L_03ea: callvirt Void set_Visible(Boolean)
L_03ef: ldarg.0
L_03f0: call BattleTech.UI.UIManager get_Instance()
L_03f5: ldstr ""
L_03fa: ldc.i4.1
L_03fb: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_0400: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_0405: ldarg.0
L_0406: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_040b: ldnull
L_040c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0411: brfalse Label27
L_0416: ldsfld HBS.Logging.ILog uiLogger
L_041b: ldstr "Error creating DialogSideStack!"
L_0420: callvirt Void LogError(System.Object)
L_0425: br Label28
L_042a: Label27
L_042a: ldarg.0
L_042b: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0430: ldarg.1
L_0431: ldarg.0
L_0432: ldloc.0
L_0433: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0438: Label28
L_0438: ldarg.0
L_0439: call BattleTech.UI.UIManager get_Instance()
L_043e: ldstr ""
L_0443: ldc.i4.1
L_0444: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0449: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_044e: ldarg.0
L_044f: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0454: ldnull
L_0455: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_045a: brfalse Label29
L_045f: ldsfld HBS.Logging.ILog uiLogger
L_0464: ldstr "Error creating DialogWidget!"
L_0469: callvirt Void LogError(System.Object)
L_046e: br Label30
L_0473: Label29
L_0473: ldarg.0
L_0474: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0479: ldarg.1
L_047a: callvirt Void Init(BattleTech.CombatGameState)
L_047f: Label30
L_047f: ldarg.0
L_0480: call BattleTech.UI.UIManager get_Instance()
L_0485: ldstr ""
L_048a: ldc.i4.1
L_048b: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_0490: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0495: ldarg.0
L_0496: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_049b: ldnull
L_049c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04a1: brfalse Label31
L_04a6: ldsfld HBS.Logging.ILog uiLogger
L_04ab: ldstr "Error creating RetreatEscMenu!"
L_04b0: callvirt Void LogError(System.Object)
L_04b5: br Label32
L_04ba: Label31
L_04ba: ldarg.0
L_04bb: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04c0: ldarg.1
L_04c1: ldarg.0
L_04c2: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04c7: Label32
L_04c7: ldarg.0
L_04c8: call BattleTech.UI.UIManager get_Instance()
L_04cd: ldstr ""
L_04d2: ldc.i4.1
L_04d3: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04d8: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04dd: ldarg.0
L_04de: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04e3: ldnull
L_04e4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04e9: brfalse Label33
L_04ee: ldsfld HBS.Logging.ILog uiLogger
L_04f3: ldstr "Error creating mission end screen!"
L_04f8: callvirt Void LogError(System.Object)
L_04fd: br Label34
L_0502: Label33
L_0502: ldarg.0
L_0503: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_0508: callvirt Void Init()
L_050d: Label34
L_050d: ldarg.0
L_050e: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0513: ldnull
L_0514: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0519: brfalse Label35
L_051e: ldarg.0
L_051f: call BattleTech.UI.UIManager get_Instance()
L_0524: ldstr ""
L_0529: ldc.i4.1
L_052a: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_052f: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0534: ldarg.0
L_0535: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_053a: ldnull
L_053b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0540: brfalse Label36
L_0545: ldsfld HBS.Logging.ILog uiLogger
L_054a: ldstr "Error creating combat chat module"
L_054f: callvirt Void LogError(System.Object)
L_0554: br Label37
L_0559: Label36
L_0559: ldarg.0
L_055a: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_055f: callvirt Void CombatInit()
L_0564: ldloc.0
L_0565: callvirt Void BumpUp()
L_056a: Label35
L_056a: Label37
L_056a: ldarg.0
L_056b: call BattleTech.UI.UIManager get_Instance()
L_0570: ldstr "DebugHUD"
L_0575: ldc.i4.1
L_0576: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_057b: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_0580: ldarg.0
L_0581: call BattleTech.UI.DebugHUD get_debugHUD()
L_0586: ldnull
L_0587: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_058c: brfalse Label38
L_0591: ldsfld HBS.Logging.ILog uiLogger
L_0596: ldstr "Error creating combat debug hud"
L_059b: callvirt Void LogError(System.Object)
L_05a0: br Label39
L_05a5: Label38
L_05a5: ldarg.0
L_05a6: call BattleTech.UI.DebugHUD get_debugHUD()
L_05ab: ldarg.1
L_05ac: ldarg.0
L_05ad: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05b2: Label39
L_05b2: newobj Void .ctor()
L_05b7: stloc.1
L_05b8: ldarg.0
L_05b9: ldc.i4.1
L_05ba: ldloc.1
L_05bb: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05c0: ldc.i4.0
L_05c1: stloc.2
L_05c2: br Label40
L_05c7: Label42
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: callvirt Boolean get_IsInitialized()
L_05d3: brtrue Label41
L_05d8: ldloc.1
L_05d9: ldloc.2
L_05da: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05df: ldarg.0
L_05e0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05e5: Label41
L_05e5: ldloc.2
L_05e6: ldc.i4.1
L_05e7: add
L_05e8: stloc.2
L_05e9: Label40
L_05e9: ldloc.2
L_05ea: ldloc.1
L_05eb: callvirt Int32 get_Count()
L_05f0: blt Label42
L_05f5: ldarg.0
L_05f6: ldfld BattleTech.UI.UIManager uiManager
L_05fb: ldc.i4.1
L_05fc: callvirt Void SetUIRootInteractable(Boolean)
L_0601: ldarg.1
L_0602: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0607: callvirt Int32 get_CurrentRound()
L_060c: brfalse Label43
L_0611: ldarg.0
L_0612: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0617: ldarg.1
L_0618: callvirt BattleTech.TurnDirector get_TurnDirector()
L_061d: callvirt Int32 get_CurrentRound()
L_0622: callvirt Void SetRoundFromLoad(Int32)
L_0627: Label43
L_0627: ldarg.0
L_0628: ldc.i4.1
L_0629: call Void SubscribeToMessages(Boolean)
L_062e: Label0
L_062e: ldarg.0
L_062f: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0634: ldarg.0
L_0635: ldarg 1
L_063b: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_0640: ret
DONE

### Patch BattleTech.Weapon, Int32 DecrementAmmo(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: Local var 3: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 3 (System.Int32)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldloca 3 (System.Int32)
L_000f: call Boolean Prefix(BattleTech.Weapon, Int32, Int32 ByRef)
L_0014: brfalse Label0
L_0019: ldarg.0
L_001a: call Int32 get_ShotsWhenFired()
L_001f: stloc.0
L_0020: ldarg.0
L_0021: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0026: callvirt Boolean get_Is_NotSet()
L_002b: brtrue Label1
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor parent
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.AbstractActor parent
L_0041: callvirt BattleTech.UnitType get_UnitType()
L_0046: ldc.i4.4
L_0047: bne.un Label3
L_004c: Label1
L_004c: ldloc.0
L_004d: br Label12
L_0052: Label2
L_0052: Label3
L_0052: ldarg.0
L_0053: call Int32 get_InternalAmmo()
L_0058: ldloc.0
L_0059: blt Label4
L_005e: ldarg.0
L_005f: call BattleTech.StatCollection get_StatCollection()
L_0064: ldarg.0
L_0065: call System.String get_uid()
L_006a: ldarg.1
L_006b: ldstr "InternalAmmo"
L_0070: ldc.i4.2
L_0071: ldloc.0
L_0072: ldc.i4.m1
L_0073: ldc.i4.1
L_0074: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0079: pop
L_007a: ldc.i4.0
L_007b: stloc.0
L_007c: br Label5
L_0081: Label4
L_0081: ldloc.0
L_0082: ldarg.0
L_0083: call Int32 get_InternalAmmo()
L_0088: sub
L_0089: stloc.0
L_008a: ldarg.0
L_008b: call BattleTech.StatCollection get_StatCollection()
L_0090: ldarg.0
L_0091: call System.String get_uid()
L_0096: ldarg.1
L_0097: ldstr "InternalAmmo"
L_009c: ldc.i4.0
L_009d: ldc.i4.0
L_009e: ldc.i4.m1
L_009f: ldc.i4.1
L_00a0: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00a5: pop
L_00a6: Label5
L_00a6: ldloc.0
L_00a7: ldc.i4.0
L_00a8: ble Label6
L_00ad: ldc.i4.0
L_00ae: stloc.1
L_00af: br Label7
L_00b4: Label11
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_00ba: ldloc.1
L_00bb: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: callvirt Int32 get_CurrentAmmo()
L_00c7: ldloc.0
L_00c8: blt Label8
L_00cd: ldloc.2
L_00ce: callvirt BattleTech.StatCollection get_StatCollection()
L_00d3: ldarg.0
L_00d4: call System.String get_uid()
L_00d9: ldarg.1
L_00da: ldstr "CurrentAmmo"
L_00df: ldc.i4.2
L_00e0: ldloc.0
L_00e1: ldc.i4.m1
L_00e2: ldc.i4.1
L_00e3: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00e8: pop
L_00e9: ldc.i4.0
L_00ea: stloc.0
L_00eb: br Label9
L_00f0: Label8
L_00f0: ldloc.0
L_00f1: ldloc.2
L_00f2: callvirt Int32 get_CurrentAmmo()
L_00f7: sub
L_00f8: stloc.0
L_00f9: ldloc.2
L_00fa: callvirt BattleTech.StatCollection get_StatCollection()
L_00ff: ldarg.0
L_0100: call System.String get_uid()
L_0105: ldarg.1
L_0106: ldstr "CurrentAmmo"
L_010b: ldc.i4.0
L_010c: ldc.i4.0
L_010d: ldc.i4.m1
L_010e: ldc.i4.1
L_010f: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0114: pop
L_0115: Label9
L_0115: ldloc.0
L_0116: ldc.i4.0
L_0117: ble Label10
L_011c: ldloc.1
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.1
L_0120: Label7
L_0120: ldloc.1
L_0121: ldarg.0
L_0122: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0127: callvirt Int32 get_Count()
L_012c: blt Label11
L_0131: Label6
L_0131: Label10
L_0131: ldarg.0
L_0132: call Int32 get_ShotsWhenFired()
L_0137: ldloc.0
L_0138: sub
L_0139: Label12
L_0139: stloc 3 (System.Int32)
L_013a: Label0
L_013a: ldloc 3 (System.Int32)
L_013b: ret
DONE

### Patch BattleTech.Weapon, Void SetAmmoBoxes(System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Weapon, System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_000c: brfalse Label0
L_0011: newobj Void .ctor()
L_0016: stloc.0
L_0017: ldarg.1
L_0018: callvirt Enumerator GetEnumerator()
L_001d: stloc.1
.try
{
	L_001e: br Label1
	L_0023: Label3
	L_0023: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_0025: call BattleTech.AmmunitionBox get_Current()
	L_002a: stloc.2
	L_002b: ldloc.2
	L_002c: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
	L_0031: ldarg.0
	L_0032: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
	L_0037: callvirt Boolean Equals(System.Object)
	L_003c: brfalse Label2
	L_0041: ldloc.0
	L_0042: ldloc.2
	L_0043: callvirt Void Add(BattleTech.AmmunitionBox)
	L_0048: Label1
	L_0048: Label2
	L_0048: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_004a: call Boolean MoveNext()
	L_004f: brtrue Label3
	L_0054: leave Label4
	L_0059: leave (autogenerated)
} // end try
.finally
{
	L_005e: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_0060: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox]
	L_0066: callvirt Void Dispose()
	L_006b: endfinally
	L_006c: leave (autogenerated)
} // end handler
L_006d: Label4
L_006d: ldarg.0
L_006e: ldloc.0
L_006f: stfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0074: Label0
L_0074: ret
DONE

### Patch BattleTech.Weapon, Int32 get_CurrentAmmo()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Int32)
L_0006: ldarg.0
L_0007: ldloca 2 (System.Int32)
L_0009: call Boolean Prefix(BattleTech.Weapon, Int32 ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Int32 get_InternalAmmo()
L_0019: stloc.0
L_001a: ldc.i4.0
L_001b: stloc.1
L_001c: br Label1
L_0021: Label2
L_0021: ldloc.0
L_0022: ldarg.0
L_0023: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0028: ldloc.1
L_0029: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_002e: callvirt Int32 get_CurrentAmmo()
L_0033: add
L_0034: stloc.0
L_0035: ldloc.1
L_0036: ldc.i4.1
L_0037: add
L_0038: stloc.1
L_0039: Label1
L_0039: ldloc.1
L_003a: ldarg.0
L_003b: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0040: callvirt Int32 get_Count()
L_0045: blt Label2
L_004a: ldloc.0
L_004b: stloc 2 (System.Int32)
L_004c: Label0
L_004c: ldloc 2 (System.Int32)
L_004d: ret
DONE

### Patch BattleTech.MechValidationRules, Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: Local var 4: BattleTech.WeaponDef
L_0000: Local var 5: BattleTech.AmmunitionBoxDef
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: System.Int64
L_0000: Local var 8: BattleTech.AmmoCategoryValue
L_0000: Local var 9: System.Int64
L_0000: Local var 10: BattleTech.AmmoCategoryValue
L_0000: ldarg 0
L_0006: ldarg 1
L_000c: ldarg 2
L_0012: ldarg 3
L_0018: ldarg 4
L_001e: call Boolean Prefix(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0023: brfalse Label0
L_0028: newobj Void .ctor()
L_002d: stloc.0
L_002e: newobj Void .ctor()
L_0033: stloc.1
L_0034: ldc.i4.0
L_0035: stloc.2
L_0036: br Label1
L_003b: Label14
L_003b: ldarg.1
L_003c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0041: ldloc.2
L_0042: ldelem.ref
L_0043: stloc.3
L_0044: ldloc.3
L_0045: callvirt Void RefreshComponentDef()
L_004a: ldloc.3
L_004b: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0050: ldc.i4.1
L_0051: bne.un Label2
L_0056: ldloc.3
L_0057: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_005c: brfalse Label3
L_0061: ldloc.3
L_0062: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0067: ldc.i4.3
L_0068: beq Label4
L_006d: ldloc.3
L_006e: ldarg.2
L_006f: ldarg.3
L_0070: call Boolean MechComponentUnderMaintenance(BattleTech.MechComponentRef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab)
L_0075: brfalse Label5
L_007a: Label3
L_007a: Label4
L_007a: ldloc.3
L_007b: callvirt BattleTech.MechComponentDef get_Def()
L_0080: isinst BattleTech.WeaponDef
L_0085: stloc.s 4 (BattleTech.WeaponDef)
L_0087: ldloc.s 4 (BattleTech.WeaponDef)
L_0089: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_008e: callvirt Boolean get_Is_NotSet()
L_0093: brtrue Label6
L_0098: ldloc.s 4 (BattleTech.WeaponDef)
L_009a: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_009f: callvirt Boolean get_UsesInternalAmmo()
L_00a4: brtrue Label7
L_00a9: ldloc.0
L_00aa: ldloc.s 4 (BattleTech.WeaponDef)
L_00ac: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b1: callvirt Int64 get_AmmoCategoryID()
L_00b6: callvirt Boolean Contains(Int64)
L_00bb: brtrue Label8
L_00c0: ldloc.0
L_00c1: ldloc.s 4 (BattleTech.WeaponDef)
L_00c3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00c8: callvirt Int64 get_AmmoCategoryID()
L_00cd: callvirt Void Add(Int64)
L_00d2: br Label9
L_00d7: Label2
L_00d7: ldloc.3
L_00d8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00dd: ldc.i4.2
L_00de: bne.un Label10
L_00e3: ldloc.3
L_00e4: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00e9: brfalse Label11
L_00ee: ldloc.3
L_00ef: ldarg.2
L_00f0: ldarg.3
L_00f1: call Boolean MechComponentUnderMaintenance(BattleTech.MechComponentRef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab)
L_00f6: brfalse Label12
L_00fb: Label11
L_00fb: ldloc.3
L_00fc: callvirt BattleTech.MechComponentDef get_Def()
L_0101: isinst BattleTech.AmmunitionBoxDef
L_0106: stloc.s 5 (BattleTech.AmmunitionBoxDef)
L_0108: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_010a: ldarg.0
L_010b: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_0110: ldloc.1
L_0111: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_0113: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0118: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_011d: callvirt Int64 get_AmmoCategoryID()
L_0122: callvirt Boolean Contains(Int64)
L_0127: brtrue Label13
L_012c: ldloc.1
L_012d: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_012f: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0134: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0139: callvirt Int64 get_AmmoCategoryID()
L_013e: callvirt Void Add(Int64)
L_0143: Label5
L_0143: Label6
L_0143: Label7
L_0143: Label8
L_0143: Label9
L_0143: Label10
L_0143: Label12
L_0143: Label13
L_0143: ldloc.2
L_0144: ldc.i4.1
L_0145: add
L_0146: stloc.2
L_0147: Label1
L_0147: ldloc.2
L_0148: ldarg.1
L_0149: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_014e: ldlen
L_014f: conv.i4
L_0150: blt Label14
L_0155: ldloc.0
L_0156: callvirt Enumerator GetEnumerator()
L_015b: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
.try
{
	L_015d: br Label15
	L_0162: Label17
	L_0162: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_0164: call Int64 get_Current()
	L_0169: stloc.s 7 (System.Int64)
	L_016b: ldloc.s 7 (System.Int64)
	L_016d: conv.i4
	L_016e: call BattleTech.AmmoCategoryValue GetAmmoCategoryByID(Int32)
	L_0173: stloc.s 8 (BattleTech.AmmoCategoryValue)
	L_0175: ldloc.1
	L_0176: ldloc.s 7 (System.Int64)
	L_0178: callvirt Boolean Contains(Int64)
	L_017d: brtrue Label16
	L_0182: ldarg.s 4
	L_0184: ldc.i4.5
	L_0185: ldstr "MISSING AMMO: This 'Mech does not have an undamaged {0} Ammo Bin"
	L_018a: ldc.i4.1
	L_018b: newarr System.Object
	L_0190: dup
	L_0191: ldc.i4.0
	L_0192: ldloc.s 8 (BattleTech.AmmoCategoryValue)
	L_0194: callvirt System.String get_Name()
	L_0199: stelem.ref
	L_019a: newobj Void .ctor(String, Object[])
	L_019f: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_01a4: Label15
	L_01a4: Label16
	L_01a4: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01a6: call Boolean MoveNext()
	L_01ab: brtrue Label17
	L_01b0: leave Label18
	L_01b5: leave (autogenerated)
} // end try
.finally
{
	L_01ba: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01bc: constrained. System.Collections.Generic.List`1+Enumerator[System.Int64]
	L_01c2: callvirt Void Dispose()
	L_01c7: endfinally
	L_01c8: leave (autogenerated)
} // end handler
L_01c9: Label18
L_01c9: ldloc.1
L_01ca: callvirt Enumerator GetEnumerator()
L_01cf: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
.try
{
	L_01d1: br Label19
	L_01d6: Label21
	L_01d6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01d8: call Int64 get_Current()
	L_01dd: stloc.s 9 (System.Int64)
	L_01df: ldloc.s 9 (System.Int64)
	L_01e1: conv.i4
	L_01e2: call BattleTech.AmmoCategoryValue GetAmmoCategoryByID(Int32)
	L_01e7: stloc.s 10 (BattleTech.AmmoCategoryValue)
	L_01e9: ldloc.0
	L_01ea: ldloc.s 9 (System.Int64)
	L_01ec: callvirt Boolean Contains(Int64)
	L_01f1: brtrue Label20
	L_01f6: ldarg.s 4
	L_01f8: ldc.i4.6
	L_01f9: ldstr "EXTRA AMMO: This 'Mech carries unusable {0} Ammo"
	L_01fe: ldc.i4.1
	L_01ff: newarr System.Object
	L_0204: dup
	L_0205: ldc.i4.0
	L_0206: ldloc.s 10 (BattleTech.AmmoCategoryValue)
	L_0208: callvirt System.String get_Name()
	L_020d: stelem.ref
	L_020e: newobj Void .ctor(String, Object[])
	L_0213: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_0218: Label19
	L_0218: Label20
	L_0218: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_021a: call Boolean MoveNext()
	L_021f: brtrue Label21
	L_0224: leave Label22
	L_0229: leave (autogenerated)
} // end try
.finally
{
	L_022e: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_0230: constrained. System.Collections.Generic.List`1+Enumerator[System.Int64]
	L_0236: callvirt Void Dispose()
	L_023b: endfinally
	L_023c: leave (autogenerated)
} // end handler
L_023d: Label22
L_023d: Label0
L_023d: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void Init(BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: UnityEngine.Transform[]
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldfld BattleTech.AbstractActor parent
L_0007: ldarg.2
L_0008: ldarg.3
L_0009: ldc.i4.0
L_000a: ldarg.s 4
L_000c: call Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_mechComponent(BattleTech.MechComponent)
L_0018: ldarg.0
L_0019: ldarg.s 5
L_001b: call Void set_mountedLocation(Int32)
L_0020: ldnull
L_0021: stloc.0
L_0022: ldarg.1
L_0023: callvirt BattleTech.WeaponDef get_weaponDef()
L_0028: callvirt System.String get_WeaponEffectID()
L_002d: call Boolean IsNullOrEmpty(System.String)
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: call BattleTech.ICombatant get_parentCombatant()
L_003d: callvirt BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.Data.DataManager get_DataManager()
L_0047: ldarg.1
L_0048: callvirt BattleTech.WeaponDef get_weaponDef()
L_004d: callvirt System.String get_WeaponEffectID()
L_0052: ldc.i4.s 45
L_0054: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0056: initobj System.Nullable`1[UnityEngine.Vector3]
L_005c: ldloc.2
L_005d: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_005f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0065: ldloc.3
L_0066: ldnull
L_0067: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_006c: stloc.0
L_006d: Label1
L_006d: ldloc.0
L_006e: ldnull
L_006f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0074: brfalse Label2
L_0079: ldstr "Error instantiating WeaponEffect [{0}], Weapon [{1}], Parent[{2}] "
L_007e: ldarg.1
L_007f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0084: callvirt System.String get_WeaponEffectID()
L_0089: ldarg.1
L_008a: callvirt System.String get_Name()
L_008f: ldarg.s 4
L_0091: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0096: ldarg.0
L_0097: call Void LogError(System.Object, UnityEngine.Object)
L_009c: br Label12
L_00a1: Label2
L_00a1: ldloc.0
L_00a2: callvirt UnityEngine.Transform get_transform()
L_00a7: ldarg.0
L_00a8: call UnityEngine.Transform get_transform()
L_00ad: callvirt Void set_parent(UnityEngine.Transform)
L_00b2: ldloc.0
L_00b3: callvirt UnityEngine.Transform get_transform()
L_00b8: call UnityEngine.Vector3 get_zero()
L_00bd: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00c2: ldloc.0
L_00c3: callvirt UnityEngine.Transform get_transform()
L_00c8: call UnityEngine.Quaternion get_identity()
L_00cd: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00d2: ldarg.0
L_00d3: ldloc.0
L_00d4: callvirt WeaponEffect GetComponent[WeaponEffect]()
L_00d9: stfld WeaponEffect weaponEffect
L_00de: ldarg.0
L_00df: ldfld WeaponEffect weaponEffect
L_00e4: ldnull
L_00e5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ea: brfalse Label3
L_00ef: ldstr "Error finding WeaponEffect on GO [{0}], Weapon [{1}], Parent[{2}] "
L_00f4: ldarg.1
L_00f5: callvirt BattleTech.WeaponDef get_weaponDef()
L_00fa: callvirt System.String get_WeaponEffectID()
L_00ff: ldarg.1
L_0100: callvirt System.String get_Name()
L_0105: ldarg.s 4
L_0107: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_010c: ldarg.0
L_010d: call Void LogError(System.Object, UnityEngine.Object)
L_0112: br Label13
L_0117: Label3
L_0117: ldc.i4.0
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldfld UnityEngine.Transform[] vfxTransforms
L_011f: brfalse Label4
L_0124: ldarg.0
L_0125: ldfld UnityEngine.Transform[] vfxTransforms
L_012a: ldlen
L_012b: conv.i4
L_012c: ldc.i4.1
L_012d: bge Label5
L_0132: Label4
L_0132: ldc.i4.1
L_0133: stloc.1
L_0134: br Label6
L_0139: Label5
L_0139: ldarg.0
L_013a: ldfld UnityEngine.Transform[] vfxTransforms
L_013f: stloc.s 4 (UnityEngine.Transform[])
L_0141: ldc.i4.0
L_0142: stloc.s 5 (System.Int32)
L_0144: br Label7
L_0149: Label10
L_0149: ldloc.s 4 (UnityEngine.Transform[])
L_014b: ldloc.s 5 (System.Int32)
L_014d: ldelem.ref
L_014e: ldnull
L_014f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0154: brfalse Label8
L_0159: ldc.i4.1
L_015a: stloc.1
L_015b: br Label9
L_0160: Label8
L_0160: ldloc.s 5 (System.Int32)
L_0162: ldc.i4.1
L_0163: add
L_0164: stloc.s 5 (System.Int32)
L_0166: Label7
L_0166: ldloc.s 5 (System.Int32)
L_0168: ldloc.s 4 (UnityEngine.Transform[])
L_016a: ldlen
L_016b: conv.i4
L_016c: blt Label10
L_0171: Label6
L_0171: Label9
L_0171: ldloc.1
L_0172: brfalse Label11
L_0177: ldc.i4.5
L_0178: newarr System.String
L_017d: dup
L_017e: ldc.i4.0
L_017f: ldstr "WeaponRepresentation for ["
L_0184: stelem.ref
L_0185: dup
L_0186: ldc.i4.1
L_0187: ldarg.1
L_0188: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_018d: ldfld System.String prefabName
L_0192: stelem.ref
L_0193: dup
L_0194: ldc.i4.2
L_0195: ldstr "] on "
L_019a: stelem.ref
L_019b: dup
L_019c: ldc.i4.3
L_019d: ldarg.s 4
L_019f: stelem.ref
L_01a0: dup
L_01a1: ldc.i4.4
L_01a2: ldstr " had no vfxTransforms. Using WeaponRepresentation position as fallback"
L_01a7: stelem.ref
L_01a8: call System.String Concat(System.String[])
L_01ad: call Void LogError(System.Object)
L_01b2: ldarg.0
L_01b3: ldc.i4.1
L_01b4: newarr UnityEngine.Transform
L_01b9: dup
L_01ba: ldc.i4.0
L_01bb: ldarg.0
L_01bc: call UnityEngine.GameObject get_gameObject()
L_01c1: callvirt UnityEngine.Transform get_transform()
L_01c6: stelem.ref
L_01c7: stfld UnityEngine.Transform[] vfxTransforms
L_01cc: Label11
L_01cc: ldarg.0
L_01cd: ldfld WeaponEffect weaponEffect
L_01d2: ldarg.1
L_01d3: callvirt Void Init(BattleTech.Weapon)
L_01d8: Label12
L_01d8: Label13
L_01d8: ldarg.0
L_01d9: ldarg 1
L_01df: ldarg 2
L_01e5: ldarg 3
L_01eb: ldarg 4
L_01f1: ldarg 5
L_01f7: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_01fc: ldarg.0
L_01fd: ldarg 1
L_0203: ldarg 2
L_0209: ldarg 3
L_020f: ldarg 4
L_0215: ldarg 5
L_021b: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0220: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void PlayWeaponEffect(BattleTech.WeaponHitInfo)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.WeaponRepresentation, BattleTech.WeaponHitInfo)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld WeaponEffect weaponEffect
L_0017: ldnull
L_0018: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_001d: brfalse Label1
L_0022: ldarg.0
L_0023: ldfld WeaponEffect weaponEffect
L_0028: ldarg.1
L_0029: ldc.i4.0
L_002a: ldc.i4.0
L_002b: callvirt Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0030: Label1
L_0030: Label0
L_0030: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void ResetWeaponEffect()
L_0000: ldarg.0
L_0001: ldfld WeaponEffect weaponEffect
L_0006: ldnull
L_0007: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldfld WeaponEffect weaponEffect
L_0017: callvirt Void Reset()
L_001c: Label1
L_001c: ldarg.0
L_001d: call Void Postfix(BattleTech.WeaponRepresentation)
L_0022: ret
DONE

### Patch BattleTech.CombatGameState, Void ShutdownCombatState()
L_0000: call BattleTech.GameInstance get_BattleTechGame()
L_0005: callvirt BattleTech.CombatGameState get_Combat()
L_000a: brfalse Label1
L_000f: call BattleTech.GameInstance get_BattleTechGame()
L_0014: callvirt BattleTech.CombatGameState get_Combat()
L_0019: callvirt Void ClearStackManager()
L_001e: Label1
L_001e: call Void ShutdownCombatAudio()
L_0023: call BattleTech.UI.UIManager get_Instance()
L_0028: callvirt Void PoolAllModules()
L_002d: call Boolean get_HasInstance()
L_0032: brfalse Label2
L_0037: call BattleTech.Rendering.UI.UICameraRenderer get_Instance()
L_003c: callvirt Void DisableRenderTexture()
L_0041: Label2
L_0041: ldnull
L_0042: call Void Postfix(BattleTech.CombatGameState)
L_0047: ret
DONE

### Patch MissileEffect, Void PlayProjectile()
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: callvirt Void PlayMuzzleFlash()
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld UnityEngine.Vector3 preFireEndPos
L_0018: stfld UnityEngine.Vector3 startPos
L_001d: ldarg.0
L_001e: ldarg.0
L_001f: ldfld UnityEngine.Vector3 startPos
L_0024: stfld UnityEngine.Vector3 currentPos
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 startPos
L_002f: ldarg.0
L_0030: ldfld UnityEngine.Vector3 endPos
L_0035: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld System.Single projectileSpeed
L_0041: ldc.r4 0
L_0046: ble.un Label1
L_004b: ldarg.0
L_004c: ldloc.0
L_004d: ldarg.0
L_004e: ldfld System.Single projectileSpeed
L_0053: div
L_0054: stfld System.Single duration
L_0059: br Label2
L_005e: Label1
L_005e: ldarg.0
L_005f: ldc.r4 1
L_0064: stfld System.Single duration
L_0069: Label2
L_0069: ldarg.0
L_006a: ldfld System.Single duration
L_006f: ldc.r4 4
L_0074: ble.un Label3
L_0079: ldarg.0
L_007a: ldc.r4 4
L_007f: stfld System.Single duration
L_0084: Label3
L_0084: ldarg.0
L_0085: ldc.r4 1
L_008a: ldarg.0
L_008b: ldfld System.Single duration
L_0090: div
L_0091: stfld System.Single rate
L_0096: ldarg.0
L_0097: ldfld System.Boolean isIndirect
L_009c: brfalse Label4
L_00a1: ldarg.0
L_00a2: call Void GenerateIndirectMissilePath()
L_00a7: br Label5
L_00ac: Label4
L_00ac: ldarg.0
L_00ad: call Void GenerateMissilePath()
L_00b2: Label5
L_00b2: ldarg.0
L_00b3: call Void PlayProjectile()
L_00b8: ldarg.0
L_00b9: ldarg.0
L_00ba: ldfld UnityEngine.Vector3 preFireEndPos
L_00bf: stfld UnityEngine.Vector3 startPos
L_00c4: ldarg.0
L_00c5: ldfld System.Boolean isSRM
L_00ca: brfalse Label6
L_00cf: ldc.i4 380
L_00d4: ldarg.0
L_00d5: ldfld AkGameObj projectileAudioObject
L_00da: ldnull
L_00db: ldnull
L_00dc: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_00e1: pop
L_00e2: ldarg.0
L_00e3: ldfld System.Int32 hitIndex
L_00e8: ldarg.0
L_00e9: ldflda BattleTech.WeaponHitInfo hitInfo
L_00ee: ldfld System.Int32 numberOfShots
L_00f3: blt Label7
L_00f8: ldc.i4 379
L_00fd: ldarg.0
L_00fe: ldfld AkGameObj parentAudioObject
L_0103: ldnull
L_0104: ldnull
L_0105: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_010a: pop
L_010b: br Label9
L_0110: Label7
L_0110: ldc.i4 378
L_0115: ldarg.0
L_0116: ldfld AkGameObj parentAudioObject
L_011b: ldnull
L_011c: ldnull
L_011d: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0122: pop
L_0123: br Label10
L_0128: Label6
L_0128: ldc.i4 365
L_012d: ldarg.0
L_012e: ldfld AkGameObj projectileAudioObject
L_0133: ldnull
L_0134: ldnull
L_0135: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_013a: pop
L_013b: ldarg.0
L_013c: ldfld System.Int32 hitIndex
L_0141: ldarg.0
L_0142: ldflda BattleTech.WeaponHitInfo hitInfo
L_0147: ldfld System.Int32 numberOfShots
L_014c: blt Label8
L_0151: ldc.i4 364
L_0156: ldarg.0
L_0157: ldfld AkGameObj parentAudioObject
L_015c: ldnull
L_015d: ldnull
L_015e: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0163: pop
L_0164: br Label11
L_0169: Label8
L_0169: ldc.i4 363
L_016e: ldarg.0
L_016f: ldfld AkGameObj parentAudioObject
L_0174: ldnull
L_0175: ldnull
L_0176: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_017b: pop
L_017c: Label9
L_017c: Label10
L_017c: Label11
L_017c: Label0
L_017c: ret
DONE

### Patch WeaponEffect, Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0000: Local var 0: BattleTech.ICombatant
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: UnityEngine.Vector3
L_0000: ldloca 3 (UnityEngine.Vector3)
L_0002: initobj UnityEngine.Vector3
L_0008: ldarg.0
L_0009: ldarga 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldloca 3 (UnityEngine.Vector3)
L_001d: call Boolean Prefix(WeaponEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, UnityEngine.Vector3 ByRef)
L_0022: brfalse Label0
L_0027: ldarg.0
L_0028: ldc.r4 0
L_002d: stfld System.Single t
L_0032: ldarg.0
L_0033: ldarg.2
L_0034: stfld System.Int32 hitIndex
L_0039: ldarg.0
L_003a: ldarg.3
L_003b: stfld System.Int32 emitterIndex
L_0040: ldarg.0
L_0041: ldarg.1
L_0042: stfld BattleTech.WeaponHitInfo hitInfo
L_0047: ldarg.0
L_0048: ldarg.0
L_0049: ldfld BattleTech.WeaponRepresentation weaponRep
L_004e: ldfld UnityEngine.Transform[] vfxTransforms
L_0053: ldarg.3
L_0054: ldelem.ref
L_0055: stfld UnityEngine.Transform startingTransform
L_005a: ldarg.0
L_005b: ldarg.0
L_005c: ldfld UnityEngine.Transform startingTransform
L_0061: callvirt UnityEngine.Vector3 get_position()
L_0066: stfld UnityEngine.Vector3 startPos
L_006b: ldarga.s 1
L_006d: ldarg.2
L_006e: call Boolean DidShotHitChosenTarget(Int32)
L_0073: brfalse Label1
L_0078: ldarg.0
L_0079: ldfld BattleTech.CombatGameState Combat
L_007e: ldarga.s 1
L_0080: ldarg.2
L_0081: call System.String ShotTargetId(Int32)
L_0086: ldc.i4.0
L_0087: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_008c: stloc.0
L_008d: ldloc.0
L_008e: brfalse Label2
L_0093: ldnull
L_0094: stloc.1
L_0095: ldc.i4.0
L_0096: stloc.2
L_0097: ldarg.1
L_0098: ldfld UnityEngine.Vector3[] hitPositions
L_009d: ldarg.2
L_009e: ldloc.0
L_009f: ldarg.0
L_00a0: ldfld BattleTech.WeaponRepresentation weaponRep
L_00a5: callvirt BattleTech.ICombatant get_parentCombatant()
L_00aa: isinst BattleTech.AbstractActor
L_00af: ldarg.0
L_00b0: ldfld UnityEngine.Vector3 startPos
L_00b5: ldarg.0
L_00b6: ldfld BattleTech.Weapon weapon
L_00bb: ldarg.1
L_00bc: ldfld System.Int32[] hitLocations
L_00c1: ldarg.2
L_00c2: ldelema System.Int32
L_00c7: ldarg.1
L_00c8: ldfld BattleTech.AttackDirection[] attackDirections
L_00cd: ldarg.2
L_00ce: ldelema BattleTech.AttackDirection
L_00d3: ldloca.s 1 (System.String)
L_00d5: ldloca.s 2 (System.Int32)
L_00d7: callvirt UnityEngine.Vector3 GetImpactPosition(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, Int32 ByRef, BattleTech.AttackDirection ByRef, System.String ByRef, Int32 ByRef)
L_00dc: stelem UnityEngine.Vector3
L_00e1: Label1
L_00e1: Label2
L_00e1: ldarg.0
L_00e2: ldarg.1
L_00e3: ldfld UnityEngine.Vector3[] hitPositions
L_00e8: ldarg.2
L_00e9: ldelem UnityEngine.Vector3
L_00ee: stfld UnityEngine.Vector3 endPos
L_00f3: ldarg.0
L_00f4: ldarg.0
L_00f5: ldfld UnityEngine.Vector3 startPos
L_00fa: stfld UnityEngine.Vector3 currentPos
L_00ff: ldarg.0
L_0100: ldc.i4.0
L_0101: call Void set_FiringComplete(Boolean)
L_0106: ldarg.0
L_0107: callvirt Void InitProjectile()
L_010c: ldarg.0
L_010d: ldc.i4.1
L_010e: stfld WeaponEffect+WeaponEffectState currentState
L_0113: Label0
L_0113: ldarg.0
L_0114: ldarga 1
L_011a: ldarg 2
L_0120: ldarg 3
L_0126: ldloca 3 (UnityEngine.Vector3)
L_0128: call Void Postfix(WeaponEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, UnityEngine.Vector3 ByRef)
L_012d: ret
DONE

### Patch WeaponEffect, Void PlayImpact()
L_0000: Local var 0: System.String
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: System.String
L_0000: Local var 3: UnityEngine.GameObject
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: UnityEngine.ParticleSystem
L_0000: Local var 8: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 9: AutoPoolObject
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0011: ldarg.0
L_0012: ldfld System.Int32 hitIndex
L_0017: call Boolean DidShotHitAnything(Int32)
L_001c: brfalse Label1
L_0021: ldarg.0
L_0022: ldfld System.String impactVFXBase
L_0027: call Boolean IsNullOrEmpty(System.String)
L_002c: brtrue Label2
L_0031: ldstr ""
L_0036: stloc.0
L_0037: ldarg.0
L_0038: ldfld BattleTech.CombatGameState Combat
L_003d: ldarg.0
L_003e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0043: ldarg.0
L_0044: ldfld System.Int32 hitIndex
L_0049: call System.String ShotTargetId(Int32)
L_004e: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0053: stloc.1
L_0054: ldloc.1
L_0055: brfalse Label3
L_005a: ldarg.0
L_005b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0060: ldarg.0
L_0061: ldfld System.Int32 hitIndex
L_0066: call Int32 ShotHitLocation(Int32)
L_006b: ldc.i4 65536
L_0070: beq Label4
L_0075: ldarg.0
L_0076: ldfld BattleTech.Weapon weapon
L_007b: ldarg.0
L_007c: ldfld BattleTech.Weapon weapon
L_0081: ldfld BattleTech.AbstractActor parent
L_0086: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_008b: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_0090: ldloc.1
L_0091: ldarg.0
L_0092: ldflda BattleTech.WeaponHitInfo hitInfo
L_0097: ldarg.0
L_0098: ldfld System.Int32 hitIndex
L_009d: call Int32 ShotHitLocation(Int32)
L_00a2: callvirt Single ArmorForLocation(Int32)
L_00a7: ble.un Label5
L_00ac: ldstr "_crit"
L_00b1: stloc.0
L_00b2: br Label6
L_00b7: Label3
L_00b7: Label4
L_00b7: Label5
L_00b7: ldarg.0
L_00b8: ldfld System.String[] impactVFXVariations
L_00bd: brfalse Label7
L_00c2: ldarg.0
L_00c3: ldfld System.String[] impactVFXVariations
L_00c8: ldlen
L_00c9: brfalse Label8
L_00ce: ldc.i4.0
L_00cf: ldarg.0
L_00d0: ldfld System.String[] impactVFXVariations
L_00d5: ldlen
L_00d6: conv.i4
L_00d7: call Int32 Range(Int32, Int32)
L_00dc: stloc.s 4 (System.Int32)
L_00de: ldstr "_"
L_00e3: ldarg.0
L_00e4: ldfld System.String[] impactVFXVariations
L_00e9: ldloc.s 4 (System.Int32)
L_00eb: ldelem.ref
L_00ec: call System.String Concat(System.String, System.String)
L_00f1: stloc.0
L_00f2: Label6
L_00f2: Label7
L_00f2: Label8
L_00f2: ldstr "{0}{1}"
L_00f7: ldarg.0
L_00f8: ldfld System.String impactVFXBase
L_00fd: ldloc.0
L_00fe: call System.String Format(System.String, System.Object, System.Object)
L_0103: stloc.2
L_0104: ldarg.0
L_0105: ldfld BattleTech.Weapon weapon
L_010a: ldfld BattleTech.AbstractActor parent
L_010f: callvirt BattleTech.CombatGameState get_Combat()
L_0114: callvirt BattleTech.Data.DataManager get_DataManager()
L_0119: ldloc.2
L_011a: ldc.i4.s 45
L_011c: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_011e: initobj System.Nullable`1[UnityEngine.Vector3]
L_0124: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0126: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0128: initobj System.Nullable`1[UnityEngine.Quaternion]
L_012e: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0130: ldnull
L_0131: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0136: stloc.3
L_0137: ldloc.3
L_0138: ldnull
L_0139: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_013e: brfalse Label9
L_0143: ldsfld HBS.Logging.ILog logger
L_0148: ldarg.0
L_0149: ldfld BattleTech.Weapon weapon
L_014e: callvirt System.String get_Name()
L_0153: ldstr " WeaponEffect.PlayImpact had an invalid VFX name: "
L_0158: ldloc.2
L_0159: call System.String Concat(System.String, System.String, System.String)
L_015e: callvirt Void LogError(System.Object)
L_0163: br Label10
L_0168: Label9
L_0168: ldloc.3
L_0169: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_016e: stloc.s 7 (UnityEngine.ParticleSystem)
L_0170: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0172: ldc.i4.1
L_0173: callvirt Void Stop(Boolean)
L_0178: ldloc.s 7 (UnityEngine.ParticleSystem)
L_017a: ldc.i4.1
L_017b: callvirt Void Clear(Boolean)
L_0180: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0182: callvirt UnityEngine.Transform get_transform()
L_0187: ldarg.0
L_0188: ldfld UnityEngine.Vector3 endPos
L_018d: callvirt Void set_position(UnityEngine.Vector3)
L_0192: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0194: callvirt UnityEngine.Transform get_transform()
L_0199: ldarg.0
L_019a: ldfld UnityEngine.Transform startingTransform
L_019f: callvirt UnityEngine.Vector3 get_position()
L_01a4: callvirt Void LookAt(UnityEngine.Vector3)
L_01a9: ldloc.s 7 (UnityEngine.ParticleSystem)
L_01ab: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_01b0: ldloc.s 7 (UnityEngine.ParticleSystem)
L_01b2: ldc.i4.1
L_01b3: callvirt Void Play(Boolean)
L_01b8: ldloc.3
L_01b9: ldc.i4.1
L_01ba: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_01bf: stloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01c1: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01c3: ldnull
L_01c4: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01c9: brfalse Label11
L_01ce: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01d0: callvirt Void StopAnimation()
L_01d5: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01d7: callvirt Void PlayAnimation()
L_01dc: Label11
L_01dc: ldloc.3
L_01dd: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_01e2: stloc.s 9 (AutoPoolObject)
L_01e4: ldloc.s 9 (AutoPoolObject)
L_01e6: ldnull
L_01e7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01ec: brfalse Label12
L_01f1: ldloc.3
L_01f2: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_01f7: stloc.s 9 (AutoPoolObject)
L_01f9: Label12
L_01f9: ldloc.s 9 (AutoPoolObject)
L_01fb: ldarg.0
L_01fc: ldfld BattleTech.Weapon weapon
L_0201: ldfld BattleTech.AbstractActor parent
L_0206: callvirt BattleTech.CombatGameState get_Combat()
L_020b: callvirt BattleTech.Data.DataManager get_DataManager()
L_0210: ldloc.2
L_0211: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0213: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_0218: Label1
L_0218: Label2
L_0218: Label10
L_0218: ldarg.0
L_0219: callvirt Void PlayImpactDamageOverlay()
L_021e: ldarg.0
L_021f: ldfld UnityEngine.GameObject projectileMeshObject
L_0224: ldnull
L_0225: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_022a: brfalse Label13
L_022f: ldarg.0
L_0230: ldfld UnityEngine.GameObject projectileMeshObject
L_0235: ldc.i4.0
L_0236: callvirt Void SetActive(Boolean)
L_023b: Label13
L_023b: ldarg.0
L_023c: ldfld UnityEngine.GameObject projectileLightObject
L_0241: ldnull
L_0242: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0247: brfalse Label14
L_024c: ldarg.0
L_024d: ldfld UnityEngine.GameObject projectileLightObject
L_0252: ldc.i4.0
L_0253: callvirt Void SetActive(Boolean)
L_0258: Label14
L_0258: ldarg.0
L_0259: ldc.r4 0
L_025e: callvirt Void OnImpact(Single)
L_0263: Label0
L_0263: ret
DONE

### Patch WeaponEffect, Void PlayImpactAudio()
L_0000: Local var 0: AudioSwitch_surface_type
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.AbstractActor
L_0000: Local var 3: BattleTech.MapTerrainDataCell
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0011: ldarg.0
L_0012: ldfld System.Int32 hitIndex
L_0017: call Boolean DidShotHitAnything(Int32)
L_001c: brfalse Label1
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldfld BattleTech.Weapon weapon
L_0029: ldfld BattleTech.AbstractActor parent
L_002e: callvirt BattleTech.CombatGameState get_Combat()
L_0033: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0038: ldarg.0
L_0039: ldfld BattleTech.WeaponHitInfo hitInfo
L_003e: ldarg.0
L_003f: ldfld System.Int32 hitIndex
L_0044: callvirt BattleTech.ICombatant GetHitInfoTarget(BattleTech.WeaponHitInfo, Int32)
L_0049: stloc.1
L_004a: ldloc.1
L_004b: brfalse Label2
L_0050: ldloc.1
L_0051: isinst BattleTech.AbstractActor
L_0056: stloc.2
L_0057: ldloc.2
L_0058: brfalse Label3
L_005d: ldc.i4.2
L_005e: stloc.0
L_005f: ldloc.2
L_0060: ldarg.0
L_0061: ldflda BattleTech.WeaponHitInfo hitInfo
L_0066: ldarg.0
L_0067: ldfld System.Int32 hitIndex
L_006c: call Int32 ShotHitLocation(Int32)
L_0071: callvirt Single ArmorForLocation(Int32)
L_0076: ldc.r4 0
L_007b: bgt.un Label4
L_0080: ldc.i4.s 16
L_0082: stloc.0
L_0083: br Label5
L_0088: Label3
L_0088: ldc.i4.7
L_0089: stloc.0
L_008a: br Label6
L_008f: Label2
L_008f: ldarg.0
L_0090: ldfld BattleTech.Weapon weapon
L_0095: ldfld BattleTech.AbstractActor parent
L_009a: callvirt BattleTech.CombatGameState get_Combat()
L_009f: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00a4: ldarg.0
L_00a5: ldflda BattleTech.WeaponHitInfo hitInfo
L_00aa: ldfld UnityEngine.Vector3[] hitPositions
L_00af: ldarg.0
L_00b0: ldfld System.Int32 hitIndex
L_00b5: ldelem UnityEngine.Vector3
L_00ba: callvirt BattleTech.MapTerrainDataCell GetCellAt(UnityEngine.Vector3)
L_00bf: stloc.3
L_00c0: ldloc.3
L_00c1: brfalse Label7
L_00c6: ldloc.3
L_00c7: callvirt AudioSwitch_surface_type GetAudioSurfaceType()
L_00cc: stloc.0
L_00cd: Label4
L_00cd: Label5
L_00cd: Label6
L_00cd: Label7
L_00cd: ldloc.0
L_00ce: ldarg.0
L_00cf: ldfld AkGameObj projectileAudioObject
L_00d4: call Void SetSwitch[AudioSwitch_surface_type](AudioSwitch_surface_type, AkGameObj)
L_00d9: ldc.i4 335
L_00de: ldarg.0
L_00df: ldfld AkGameObj projectileAudioObject
L_00e4: ldnull
L_00e5: ldnull
L_00e6: call UInt32 PostEvent[AudioEventList_impact](AudioEventList_impact, AkGameObj, EventCallback, System.Object)
L_00eb: pop
L_00ec: Label1
L_00ec: Label0
L_00ec: ret
DONE

### Patch WeaponEffect, Void OnImpact(Single)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(WeaponEffect, Single ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.WeaponHitInfo hitInfo
L_0017: ldarg.0
L_0018: ldfld System.Int32 hitIndex
L_001d: ldarg.1
L_001e: newobj Void .ctor(WeaponHitInfo, Int32, Single)
L_0023: stloc.0
L_0024: ldarg.0
L_0025: ldfld BattleTech.CombatGameState Combat
L_002a: callvirt MessageCenter get_MessageCenter()
L_002f: ldloc.0
L_0030: callvirt Void PublishMessage(MessageCenterMessage)
L_0035: Label0
L_0035: ldarg.0
L_0036: ldarga 1
L_003c: call Void Postfix(WeaponEffect, Single ByRef)
L_0041: ret
DONE

### Patch WeaponEffect, Void OnComplete()
L_0000: Local var 0: BattleTech.AttackSequenceResolveDamageMessage
L_0000: Local var 1: AutoPoolObject
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld WeaponEffect+WeaponEffectState currentState
L_0011: ldc.i4.4
L_0012: bne.un Label1
L_0017: br Label5
L_001c: Label1
L_001c: ldarg.0
L_001d: ldc.i4.4
L_001e: stfld WeaponEffect+WeaponEffectState currentState
L_0023: ldarg.0
L_0024: ldfld System.Boolean subEffect
L_0029: brtrue Label2
L_002e: ldarg.0
L_002f: ldfld BattleTech.WeaponHitInfo hitInfo
L_0034: newobj Void .ctor(WeaponHitInfo)
L_0039: stloc.0
L_003a: ldarg.0
L_003b: ldfld BattleTech.CombatGameState Combat
L_0040: callvirt MessageCenter get_MessageCenter()
L_0045: ldloc.0
L_0046: callvirt Void PublishMessage(MessageCenterMessage)
L_004b: Label2
L_004b: ldarg.0
L_004c: call Void PublishNextWeaponMessage()
L_0051: ldarg.0
L_0052: call Void PublishWeaponCompleteMessage()
L_0057: ldarg.0
L_0058: ldfld UnityEngine.GameObject projectilePrefab
L_005d: ldnull
L_005e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0063: brfalse Label3
L_0068: ldarg.0
L_0069: ldfld UnityEngine.GameObject projectile
L_006e: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_0073: stloc.1
L_0074: ldloc.1
L_0075: ldnull
L_0076: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_007b: brfalse Label4
L_0080: ldarg.0
L_0081: ldfld UnityEngine.GameObject projectile
L_0086: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_008b: stloc.1
L_008c: Label4
L_008c: ldloc.1
L_008d: ldarg.0
L_008e: ldfld BattleTech.Weapon weapon
L_0093: ldfld BattleTech.AbstractActor parent
L_0098: callvirt BattleTech.CombatGameState get_Combat()
L_009d: callvirt BattleTech.Data.DataManager get_DataManager()
L_00a2: ldarg.0
L_00a3: ldfld System.String activeProjectileName
L_00a8: ldc.r4 4
L_00ad: callvirt Void Init(BattleTech.Data.DataManager, System.String, Single)
L_00b2: ldarg.0
L_00b3: ldnull
L_00b4: stfld UnityEngine.GameObject projectile
L_00b9: Label3
L_00b9: Label5
L_00b9: Label0
L_00b9: ret
DONE

### Patch WeaponEffect, Void PublishNextWeaponMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponPreFireCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean subEffect
L_0011: brtrue Label1
L_0016: ldarg.0
L_0017: ldfld System.Boolean hasSentNextWeaponMessage
L_001c: brtrue Label2
L_0021: ldarg.0
L_0022: ldflda BattleTech.WeaponHitInfo hitInfo
L_0027: ldfld System.Int32 stackItemUID
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 attackSequenceId
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackGroupIndex
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackWeaponIndex
L_004d: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_0052: stloc.0
L_0053: ldarg.0
L_0054: ldfld BattleTech.CombatGameState Combat
L_0059: callvirt MessageCenter get_MessageCenter()
L_005e: ldloc.0
L_005f: callvirt Void PublishMessage(MessageCenterMessage)
L_0064: Label1
L_0064: Label2
L_0064: ldarg.0
L_0065: ldc.r4 -1
L_006a: stfld System.Single attackSequenceNextDelayTimer
L_006f: ldarg.0
L_0070: ldc.i4.1
L_0071: stfld System.Boolean hasSentNextWeaponMessage
L_0076: Label0
L_0076: ret
DONE

### Patch WeaponEffect, Void PublishWeaponCompleteMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(WeaponEffect)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: ldfld System.Boolean subEffect
L_001c: brtrue Label1
L_0021: ldarg.0
L_0022: call Boolean get_FiringComplete()
L_0027: brtrue Label2
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 stackItemUID
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackSequenceId
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackGroupIndex
L_004d: ldarg.0
L_004e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0053: ldfld System.Int32 attackWeaponIndex
L_0058: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_005d: stloc.0
L_005e: ldarg.0
L_005f: ldfld BattleTech.CombatGameState Combat
L_0064: callvirt MessageCenter get_MessageCenter()
L_0069: ldloc.0
L_006a: callvirt Void PublishMessage(MessageCenterMessage)
L_006f: Label1
L_006f: Label2
L_006f: ldarg.0
L_0070: ldc.i4.1
L_0071: call Void set_FiringComplete(Boolean)
L_0076: Label0
L_0076: ldarg.0
L_0077: call Void Postfix(WeaponEffect)
L_007c: ret
DONE

### Patch BallisticEffect, Void OnBulletImpact(BulletEffect)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BallisticEffect, BulletEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldc.r4 0
L_0017: callvirt Void OnImpact(Single)
L_001c: ldarg.0
L_001d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0022: ldarg.0
L_0023: ldfld System.Int32 hitIndex
L_0028: call Boolean DidShotHitAnything(Int32)
L_002d: brfalse Label1
L_0032: ldarg.1
L_0033: ldfld System.Int32 bulletIdx
L_0038: ldarg.0
L_0039: ldfld BattleTech.Weapon weapon
L_003e: callvirt Int32 get_ProjectilesPerShot()
L_0043: ldc.i4.1
L_0044: sub
L_0045: bge Label2
L_004a: ldarg.0
L_004b: ldfld BattleTech.CombatGameState Combat
L_0050: ldarg.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldarg.0
L_0057: ldfld System.Int32 hitIndex
L_005c: call System.String ShotTargetId(Int32)
L_0061: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0066: stloc.0
L_0067: ldloc.0
L_0068: brfalse Label3
L_006d: ldloc.0
L_006e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0073: ldnull
L_0074: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0079: brfalse Label4
L_007e: ldloc.0
L_007f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0084: ldarg.0
L_0085: ldfld BattleTech.WeaponHitInfo hitInfo
L_008a: ldarg.0
L_008b: ldfld System.Int32 hitIndex
L_0090: ldarg.0
L_0091: ldfld BattleTech.Weapon weapon
L_0096: ldc.i4.0
L_0097: ldc.r4 0
L_009c: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_00a1: Label1
L_00a1: Label2
L_00a1: Label3
L_00a1: Label4
L_00a1: Label0
L_00a1: ret
DONE

### Patch BallisticEffect, Void SetupBullets()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: BulletEffect
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: call Boolean Prefix(BallisticEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldc.i4.0
L_000d: stfld System.Int32 currentBullet
L_0012: ldarg.0
L_0013: ldfld System.Single shotDelay
L_0018: ldc.r4 0
L_001d: bgt.un Label1
L_0022: ldarg.0
L_0023: ldc.r4 0.5
L_0028: stfld System.Single shotDelay
L_002d: Label1
L_002d: ldarg.0
L_002e: ldc.r4 1
L_0033: ldarg.0
L_0034: ldfld System.Single shotDelay
L_0039: div
L_003a: stfld System.Single rate
L_003f: ldarg.0
L_0040: call Void ClearBullets()
L_0045: ldc.i4.0
L_0046: stloc.0
L_0047: br Label2
L_004c: Label5
L_004c: ldarg.0
L_004d: ldfld BattleTech.CombatGameState Combat
L_0052: callvirt BattleTech.Data.DataManager get_DataManager()
L_0057: ldarg.0
L_0058: ldfld UnityEngine.GameObject bulletPrefab
L_005d: callvirt System.String get_name()
L_0062: ldc.i4.s 45
L_0064: ldloca.s 3 (System.Nullable`1[UnityEngine.Vector3])
L_0066: initobj System.Nullable`1[UnityEngine.Vector3]
L_006c: ldloc.3
L_006d: ldloca.s 4 (System.Nullable`1[UnityEngine.Quaternion])
L_006f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0075: ldloc.s 4 (System.Nullable`1[UnityEngine.Quaternion])
L_0077: ldnull
L_0078: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_007d: stloc.1
L_007e: ldloc.1
L_007f: ldnull
L_0080: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0085: brfalse Label3
L_008a: ldsfld HBS.Logging.ILog logger
L_008f: ldstr "Error instantiating BulletObject "
L_0094: ldarg.0
L_0095: ldfld UnityEngine.GameObject bulletPrefab
L_009a: callvirt System.String get_name()
L_009f: call System.String Concat(System.String, System.String)
L_00a4: ldarg.0
L_00a5: callvirt Void LogError(System.Object, UnityEngine.Object)
L_00aa: br Label6
L_00af: Label3
L_00af: ldloc.1
L_00b0: callvirt UnityEngine.Transform get_transform()
L_00b5: ldnull
L_00b6: callvirt Void set_parent(UnityEngine.Transform)
L_00bb: ldloc.1
L_00bc: callvirt BulletEffect GetComponent[BulletEffect]()
L_00c1: stloc.2
L_00c2: ldloc.2
L_00c3: ldnull
L_00c4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00c9: brfalse Label4
L_00ce: ldsfld HBS.Logging.ILog logger
L_00d3: ldstr "Error finding BulletEffect on GO "
L_00d8: ldarg.0
L_00d9: ldfld UnityEngine.GameObject bulletPrefab
L_00de: callvirt System.String get_name()
L_00e3: call System.String Concat(System.String, System.String)
L_00e8: ldarg.0
L_00e9: callvirt Void LogError(System.Object, UnityEngine.Object)
L_00ee: br Label7
L_00f3: Label4
L_00f3: ldarg.0
L_00f4: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_00f9: ldloc.2
L_00fa: callvirt Void Add(BulletEffect)
L_00ff: ldloc.2
L_0100: ldarg.0
L_0101: ldfld BattleTech.Weapon weapon
L_0106: ldarg.0
L_0107: callvirt Void Init(BattleTech.Weapon, BallisticEffect)
L_010c: ldloc.0
L_010d: ldc.i4.1
L_010e: add
L_010f: stloc.0
L_0110: Label2
L_0110: ldloc.0
L_0111: ldarg.0
L_0112: ldfld BattleTech.Weapon weapon
L_0117: callvirt Int32 get_ProjectilesPerShot()
L_011c: blt Label5
L_0121: Label6
L_0121: Label7
L_0121: Label0
L_0121: ret
DONE

### Patch BallisticEffect, Void FireNextBullet()
L_0000: Local var 0: System.String
L_0000: ldarg.0
L_0001: call Boolean Prefix(BallisticEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Int32 currentBullet
L_0011: ldc.i4.0
L_0012: blt Label1
L_0017: ldarg.0
L_0018: ldfld System.Int32 currentBullet
L_001d: ldarg.0
L_001e: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_0023: callvirt Int32 get_Count()
L_0028: bge Label2
L_002d: ldarg.0
L_002e: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_0033: ldarg.0
L_0034: ldfld System.Int32 currentBullet
L_0039: callvirt BulletEffect get_Item(Int32)
L_003e: dup
L_003f: ldarg.0
L_0040: ldfld System.Int32 currentBullet
L_0045: stfld System.Int32 bulletIdx
L_004a: ldarg.0
L_004b: ldfld BattleTech.WeaponHitInfo hitInfo
L_0050: ldc.i4.0
L_0051: ldc.i4.0
L_0052: callvirt Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0057: ldarg.0
L_0058: callvirt Void PlayMuzzleFlash()
L_005d: ldstr ""
L_0062: stloc.0
L_0063: ldarg.0
L_0064: ldfld System.Int32 currentBullet
L_0069: brtrue Label3
L_006e: ldarg.0
L_006f: ldfld System.String firstShotSFX
L_0074: stloc.0
L_0075: br Label4
L_007a: Label3
L_007a: ldarg.0
L_007b: ldfld System.Int32 currentBullet
L_0080: ldarg.0
L_0081: ldfld BattleTech.Weapon weapon
L_0086: callvirt Int32 get_ProjectilesPerShot()
L_008b: ldc.i4.1
L_008c: sub
L_008d: bne.un Label5
L_0092: ldarg.0
L_0093: ldfld System.String lastShotSFX
L_0098: stloc.0
L_0099: br Label6
L_009e: Label5
L_009e: ldarg.0
L_009f: ldfld System.String middleShotSFX
L_00a4: stloc.0
L_00a5: Label4
L_00a5: Label6
L_00a5: ldloc.0
L_00a6: call Boolean IsNullOrEmpty(System.String)
L_00ab: brtrue Label7
L_00b0: ldloc.0
L_00b1: ldarg.0
L_00b2: ldfld AkGameObj parentAudioObject
L_00b7: ldnull
L_00b8: ldnull
L_00b9: call UInt32 PostEvent(System.String, AkGameObj, EventCallback, System.Object)
L_00be: pop
L_00bf: Label7
L_00bf: ldarg.0
L_00c0: ldarg.0
L_00c1: ldfld System.Int32 currentBullet
L_00c6: ldc.i4.1
L_00c7: add
L_00c8: stfld System.Int32 currentBullet
L_00cd: ldarg.0
L_00ce: ldc.r4 0
L_00d3: stfld System.Single t
L_00d8: ldarg.0
L_00d9: ldfld System.Int32 currentBullet
L_00de: ldarg.0
L_00df: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_00e4: callvirt Int32 get_Count()
L_00e9: blt Label8
L_00ee: ldarg.0
L_00ef: ldc.i4.3
L_00f0: stfld WeaponEffect+WeaponEffectState currentState
L_00f5: Label1
L_00f5: Label2
L_00f5: Label8
L_00f5: Label0
L_00f5: ret
DONE

### Patch BallisticEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldflda System.Int32 hitIndex
L_0006: ldarg.0
L_0007: call Boolean Prefix(Int32 ByRef, BallisticEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld BattleTech.Weapon weapon
L_0018: ldarg.0
L_0019: ldfld BattleTech.Weapon weapon
L_001e: ldfld BattleTech.AbstractActor parent
L_0023: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0028: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_002d: ldarg.0
L_002e: ldfld BattleTech.Weapon weapon
L_0033: callvirt Int32 get_ShotsWhenFired()
L_0038: conv.r4
L_0039: mul
L_003a: callvirt Void OnImpact(Single)
L_003f: ldarg.0
L_0040: call Void OnComplete()
L_0045: Label0
L_0045: ldarg.0
L_0046: call Void Postfix(WeaponEffect)
L_004b: ret
DONE

### Patch BulletEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: call Void OnComplete()
L_0006: ldarg.0
L_0007: call Void Postfix(WeaponEffect)
L_000c: ret
DONE

### Patch MissileEffect, Void PlayProjectile()
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(MissileEffect)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: callvirt Void PlayMuzzleFlash()
L_001c: ldarg.0
L_001d: ldarg.0
L_001e: ldfld UnityEngine.Vector3 preFireEndPos
L_0023: stfld UnityEngine.Vector3 startPos
L_0028: ldarg.0
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 startPos
L_002f: stfld UnityEngine.Vector3 currentPos
L_0034: ldarg.0
L_0035: ldfld UnityEngine.Vector3 startPos
L_003a: ldarg.0
L_003b: ldfld UnityEngine.Vector3 endPos
L_0040: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_0045: stloc.0
L_0046: ldarg.0
L_0047: ldfld System.Single projectileSpeed
L_004c: ldc.r4 0
L_0051: ble.un Label1
L_0056: ldarg.0
L_0057: ldloc.0
L_0058: ldarg.0
L_0059: ldfld System.Single projectileSpeed
L_005e: div
L_005f: stfld System.Single duration
L_0064: br Label2
L_0069: Label1
L_0069: ldarg.0
L_006a: ldc.r4 1
L_006f: stfld System.Single duration
L_0074: Label2
L_0074: ldarg.0
L_0075: ldfld System.Single duration
L_007a: ldc.r4 4
L_007f: ble.un Label3
L_0084: ldarg.0
L_0085: ldc.r4 4
L_008a: stfld System.Single duration
L_008f: Label3
L_008f: ldarg.0
L_0090: ldc.r4 1
L_0095: ldarg.0
L_0096: ldfld System.Single duration
L_009b: div
L_009c: stfld System.Single rate
L_00a1: ldarg.0
L_00a2: ldfld System.Boolean isIndirect
L_00a7: brfalse Label4
L_00ac: ldarg.0
L_00ad: call Void GenerateIndirectMissilePath()
L_00b2: br Label5
L_00b7: Label4
L_00b7: ldarg.0
L_00b8: call Void GenerateMissilePath()
L_00bd: Label5
L_00bd: ldarg.0
L_00be: call Void PlayProjectile()
L_00c3: ldarg.0
L_00c4: ldarg.0
L_00c5: ldfld UnityEngine.Vector3 preFireEndPos
L_00ca: stfld UnityEngine.Vector3 startPos
L_00cf: ldarg.0
L_00d0: ldfld System.Boolean isSRM
L_00d5: brfalse Label6
L_00da: ldc.i4 380
L_00df: ldarg.0
L_00e0: ldfld AkGameObj projectileAudioObject
L_00e5: ldnull
L_00e6: ldnull
L_00e7: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_00ec: pop
L_00ed: ldarg.0
L_00ee: ldfld System.Int32 hitIndex
L_00f3: ldarg.0
L_00f4: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f9: ldfld System.Int32 numberOfShots
L_00fe: blt Label7
L_0103: ldc.i4 379
L_0108: ldarg.0
L_0109: ldfld AkGameObj parentAudioObject
L_010e: ldnull
L_010f: ldnull
L_0110: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0115: pop
L_0116: br Label9
L_011b: Label7
L_011b: ldc.i4 378
L_0120: ldarg.0
L_0121: ldfld AkGameObj parentAudioObject
L_0126: ldnull
L_0127: ldnull
L_0128: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_012d: pop
L_012e: br Label10
L_0133: Label6
L_0133: ldc.i4 365
L_0138: ldarg.0
L_0139: ldfld AkGameObj projectileAudioObject
L_013e: ldnull
L_013f: ldnull
L_0140: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0145: pop
L_0146: ldarg.0
L_0147: ldfld System.Int32 hitIndex
L_014c: ldarg.0
L_014d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0152: ldfld System.Int32 numberOfShots
L_0157: blt Label8
L_015c: ldc.i4 364
L_0161: ldarg.0
L_0162: ldfld AkGameObj parentAudioObject
L_0167: ldnull
L_0168: ldnull
L_0169: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_016e: pop
L_016f: br Label11
L_0174: Label8
L_0174: ldc.i4 363
L_0179: ldarg.0
L_017a: ldfld AkGameObj parentAudioObject
L_017f: ldnull
L_0180: ldnull
L_0181: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0186: pop
L_0187: Label9
L_0187: Label10
L_0187: Label11
L_0187: Label0
L_0187: ret
DONE

### Patch MissileEffect, Void SpawnImpactExplosion(System.String)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: UnityEngine.ParticleSystem
L_0000: Local var 2: BattleTech.Rendering.BTLight
L_0000: Local var 3: BattleTech.Rendering.BTWindZone
L_0000: Local var 4: AutoPoolObject
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(MissileEffect, System.String)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.Weapon weapon
L_0017: ldfld BattleTech.AbstractActor parent
L_001c: callvirt BattleTech.CombatGameState get_Combat()
L_0021: callvirt BattleTech.Data.DataManager get_DataManager()
L_0026: ldarg.1
L_0027: ldc.i4.s 45
L_0029: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_002b: initobj System.Nullable`1[UnityEngine.Vector3]
L_0031: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0033: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0035: initobj System.Nullable`1[UnityEngine.Quaternion]
L_003b: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_003d: ldnull
L_003e: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0043: stloc.0
L_0044: ldloc.0
L_0045: ldnull
L_0046: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004b: brfalse Label1
L_0050: ldsfld HBS.Logging.ILog logger
L_0055: ldstr "Missile impact had an invalid explosion prefab : "
L_005a: ldarg.1
L_005b: call System.String Concat(System.String, System.String)
L_0060: callvirt Void LogError(System.Object)
L_0065: br Label7
L_006a: Label1
L_006a: ldloc.0
L_006b: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_0070: stloc.1
L_0071: ldloc.0
L_0072: ldc.i4.1
L_0073: callvirt BattleTech.Rendering.BTLight GetComponentInChildren[BTLight](Boolean)
L_0078: stloc.2
L_0079: ldloc.0
L_007a: ldc.i4.1
L_007b: callvirt BattleTech.Rendering.BTWindZone GetComponentInChildren[BTWindZone](Boolean)
L_0080: stloc.3
L_0081: ldloc.1
L_0082: ldc.i4.1
L_0083: callvirt Void Stop(Boolean)
L_0088: ldloc.1
L_0089: ldc.i4.1
L_008a: callvirt Void Clear(Boolean)
L_008f: ldloc.1
L_0090: callvirt UnityEngine.Transform get_transform()
L_0095: ldarg.0
L_0096: ldfld UnityEngine.Vector3 endPos
L_009b: callvirt Void set_position(UnityEngine.Vector3)
L_00a0: ldloc.1
L_00a1: callvirt UnityEngine.Transform get_transform()
L_00a6: ldarg.0
L_00a7: ldfld UnityEngine.Vector3 preFireEndPos
L_00ac: callvirt Void LookAt(UnityEngine.Vector3)
L_00b1: ldloc.1
L_00b2: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_00b7: ldloc.1
L_00b8: ldc.i4.1
L_00b9: callvirt Void Play(Boolean)
L_00be: ldloc.2
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label2
L_00ca: ldloc.2
L_00cb: ldc.i4.1
L_00cc: stfld System.Boolean contributeVolumetrics
L_00d1: ldloc.2
L_00d2: ldc.r4 1000
L_00d7: stfld System.Single volumetricsMultiplier
L_00dc: ldloc.2
L_00dd: ldarg.0
L_00de: ldfld System.Single impactLightIntensity
L_00e3: stfld System.Single intensity
L_00e8: ldloc.2
L_00e9: ldc.r4 0
L_00ee: ldc.r4 0.5
L_00f3: callvirt Void FadeIntensity(Single, Single)
L_00f8: ldloc.2
L_00f9: ldc.i4.1
L_00fa: callvirt Void RefreshLightSettings(Boolean)
L_00ff: Label2
L_00ff: ldloc.3
L_0100: ldnull
L_0101: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0106: brfalse Label3
L_010b: ldloc.3
L_010c: callvirt Void PlayAnimCurve()
L_0111: Label3
L_0111: ldloc.0
L_0112: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_0117: stloc.s 4 (AutoPoolObject)
L_0119: ldloc.s 4 (AutoPoolObject)
L_011b: ldnull
L_011c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0121: brfalse Label4
L_0126: ldloc.0
L_0127: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_012c: stloc.s 4 (AutoPoolObject)
L_012e: Label4
L_012e: ldloc.s 4 (AutoPoolObject)
L_0130: ldarg.0
L_0131: ldfld BattleTech.Weapon weapon
L_0136: ldfld BattleTech.AbstractActor parent
L_013b: callvirt BattleTech.CombatGameState get_Combat()
L_0140: callvirt BattleTech.Data.DataManager get_DataManager()
L_0145: ldarg.1
L_0146: ldloc.1
L_0147: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_014c: ldloc.0
L_014d: callvirt UnityEngine.Transform get_transform()
L_0152: call UnityEngine.Quaternion get_rotationUniform()
L_0157: callvirt Void set_rotation(UnityEngine.Quaternion)
L_015c: ldarg.0
L_015d: ldfld System.Boolean isSRM
L_0162: brfalse Label5
L_0167: ldc.i4 322
L_016c: ldarg.0
L_016d: ldfld AkGameObj projectileAudioObject
L_0172: ldnull
L_0173: ldnull
L_0174: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0179: pop
L_017a: br Label6
L_017f: Label5
L_017f: ldc.i4 323
L_0184: ldarg.0
L_0185: ldfld AkGameObj projectileAudioObject
L_018a: ldnull
L_018b: ldnull
L_018c: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0191: pop
L_0192: Label6
L_0192: ldarg.0
L_0193: callvirt Void DestroyFlimsyObjects()
L_0198: Label7
L_0198: Label0
L_0198: ret
DONE

### Patch MissileEffect, Void GenerateMissilePath()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: UnityEngine.Vector3[]
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld MissileLauncherEffect parentLauncher
L_0011: ldfld System.Single missileCurveStrength
L_0016: stloc.0
L_0017: ldc.i4.2
L_0018: ldarg.0
L_0019: ldfld MissileLauncherEffect parentLauncher
L_001e: ldfld System.Int32 missileCurveFrequency
L_0023: call Int32 Range(Int32, Int32)
L_0028: stloc.1
L_0029: ldloc.0
L_002a: ldarg.0
L_002b: ldfld System.Single ArcMinForce
L_0030: blt Label1
L_0035: ldarg.0
L_0036: ldfld MissileLauncherEffect parentLauncher
L_003b: ldfld System.Int32 missileCurveFrequency
L_0040: ldc.i4.1
L_0041: bge Label2
L_0046: Label1
L_0046: ldc.r4 0
L_004b: stloc.0
L_004c: ldc.i4.2
L_004d: stloc.1
L_004e: Label2
L_004e: ldarg.0
L_004f: ldfld System.Boolean isSRM
L_0054: brfalse Label3
L_0059: ldarg.0
L_005a: ldflda BattleTech.WeaponHitInfo hitInfo
L_005f: ldarg.0
L_0060: ldfld System.Int32 hitIndex
L_0065: call Boolean DidShotHitChosenTarget(Int32)
L_006a: brtrue Label4
L_006f: ldloc.0
L_0070: ldc.r4 5
L_0075: ldc.r4 12
L_007a: call Single Range(Single, Single)
L_007f: add
L_0080: stloc.0
L_0081: ldloc.1
L_0082: ldc.i4.3
L_0083: ldc.i4.s 9
L_0085: call Int32 Range(Int32, Int32)
L_008a: add
L_008b: stloc.1
L_008c: Label3
L_008c: Label4
L_008c: ldc.r4 1
L_0091: ldloc.1
L_0092: conv.r4
L_0093: div
L_0094: stloc.2
L_0095: ldarg.0
L_0096: ldfld UnityEngine.Vector3 startPos
L_009b: pop
L_009c: call UnityEngine.Vector3 get_up()
L_00a1: stloc.3
L_00a2: ldarg.0
L_00a3: ldfld UnityEngine.Vector3 endPos
L_00a8: ldarg.0
L_00a9: ldfld UnityEngine.Vector3 startPos
L_00ae: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00b3: stloc.s 4 (UnityEngine.Vector3)
L_00b5: ldloc.1
L_00b6: ldc.i4.1
L_00b7: add
L_00b8: newarr UnityEngine.Vector3
L_00bd: stloc.s 5 (UnityEngine.Vector3[])
L_00bf: ldloc.s 5 (UnityEngine.Vector3[])
L_00c1: ldc.i4.0
L_00c2: ldarg.0
L_00c3: ldfld UnityEngine.Vector3 startPos
L_00c8: stelem UnityEngine.Vector3
L_00cd: ldarg.0
L_00ce: ldfld System.Boolean isSRM
L_00d3: brtrue Label5
L_00d8: ldc.r4 25
L_00dd: br Label6
L_00e2: Label5
L_00e2: ldc.r4 0
L_00e7: Label6
L_00e7: stloc.s 6 (System.Single)
L_00e9: ldc.i4.1
L_00ea: stloc.s 7 (System.Int32)
L_00ec: br Label7
L_00f1: Label10
L_00f1: ldarg.0
L_00f2: ldfld UnityEngine.Vector3 startPos
L_00f7: ldarg.0
L_00f8: ldfld UnityEngine.Vector3 endPos
L_00fd: ldloc.2
L_00fe: ldloc.s 7 (System.Int32)
L_0100: conv.r4
L_0101: mul
L_0102: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_0107: ldloc.0
L_0108: neg
L_0109: ldloc.0
L_010a: call Single Range(Single, Single)
L_010f: stloc.s 8 (System.Single)
L_0111: call UnityEngine.Vector3 get_up()
L_0116: ldloc.s 8 (System.Single)
L_0118: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_011d: stloc.3
L_011e: ldc.i4.0
L_011f: ldc.i4 360
L_0124: call Int32 Range(Int32, Int32)
L_0129: conv.r4
L_012a: ldloc.s 4 (UnityEngine.Vector3)
L_012c: call UnityEngine.Quaternion AngleAxis(Single, UnityEngine.Vector3)
L_0131: ldloc.3
L_0132: call UnityEngine.Vector3 op_Multiply(UnityEngine.Quaternion, UnityEngine.Vector3)
L_0137: stloc.3
L_0138: ldloc.3
L_0139: ldfld System.Single y
L_013e: ldc.r4 0
L_0143: bge.un Label8
L_0148: ldloca.s 3 (UnityEngine.Vector3)
L_014a: ldc.r4 0
L_014f: stfld System.Single y
L_0154: Label8
L_0154: ldloc.3
L_0155: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_015a: stloc.s 9 (UnityEngine.Vector3)
L_015c: ldarg.0
L_015d: ldfld BattleTech.CombatGameState Combat
L_0162: callvirt BattleTech.MapMetaData get_MapMetaData()
L_0167: ldloc.s 9 (UnityEngine.Vector3)
L_0169: ldc.i4.0
L_016a: callvirt Single GetLerpedHeightAt(UnityEngine.Vector3, Boolean)
L_016f: stloc.s 10 (System.Single)
L_0171: ldloc.s 9 (UnityEngine.Vector3)
L_0173: ldfld System.Single y
L_0178: ldloc.s 10 (System.Single)
L_017a: bge.un Label9
L_017f: ldloca.s 9 (UnityEngine.Vector3)
L_0181: ldloc.s 10 (System.Single)
L_0183: ldloc.s 6 (System.Single)
L_0185: add
L_0186: stfld System.Single y
L_018b: Label9
L_018b: ldloc.s 5 (UnityEngine.Vector3[])
L_018d: ldloc.s 7 (System.Int32)
L_018f: ldloc.s 9 (UnityEngine.Vector3)
L_0191: stelem UnityEngine.Vector3
L_0196: ldloc.s 7 (System.Int32)
L_0198: ldc.i4.1
L_0199: add
L_019a: stloc.s 7 (System.Int32)
L_019c: Label7
L_019c: ldloc.s 7 (System.Int32)
L_019e: ldloc.1
L_019f: blt Label10
L_01a4: ldloc.s 5 (UnityEngine.Vector3[])
L_01a6: ldloc.1
L_01a7: ldarg.0
L_01a8: ldfld UnityEngine.Vector3 endPos
L_01ad: stelem UnityEngine.Vector3
L_01b2: ldarg.0
L_01b3: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01b8: ldc.i4.3
L_01b9: callvirt Void set_Interpolation(FluffyUnderware.Curvy.CurvyInterpolation)
L_01be: ldarg.0
L_01bf: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01c4: callvirt Void Clear()
L_01c9: ldarg.0
L_01ca: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01cf: ldc.i4.0
L_01d0: callvirt Void set_Closed(Boolean)
L_01d5: ldarg.0
L_01d6: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01db: ldloc.s 5 (UnityEngine.Vector3[])
L_01dd: callvirt FluffyUnderware.Curvy.CurvySplineSegment[] Add(UnityEngine.Vector3[])
L_01e2: pop
L_01e3: Label0
L_01e3: ret
DONE

### Patch MissileEffect, Void GenerateIndirectMissilePath()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: UnityEngine.Vector3[]
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: UnityEngine.Vector3
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Int32
L_0000: Local var 11: UnityEngine.Vector3
L_0000: Local var 12: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld MissileLauncherEffect parentLauncher
L_0011: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_0016: callvirt Int32 get_Count()
L_001b: brtrue Label1
L_0020: ldarg.0
L_0021: ldfld MissileLauncherEffect parentLauncher
L_0026: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_002b: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0030: ldfld System.Int32 IndirectFireMaxPoints
L_0035: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_003a: ldfld System.Single IndirectFireMinArcHeight
L_003f: ldarg.0
L_0040: ldfld UnityEngine.Vector3 startPos
L_0045: ldarg.0
L_0046: ldfld UnityEngine.Vector3 endPos
L_004b: call BattleTech.GameInstance get_BattleTechGame()
L_0050: callvirt BattleTech.CombatGameState get_Combat()
L_0055: callvirt BattleTech.MapMetaData get_MapMetaData()
L_005a: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_005f: ldfld System.Single IndirectFireBuffer
L_0064: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0069: ldfld System.Single IndirectFireMaxArcHeight
L_006e: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0073: ldfld System.Int32 IndirectFireCheckFreq
L_0078: ldc.i4.0
L_0079: call UnityEngine.Vector3[] GetPointsForArcDodgeBuildings(Int32, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.MapMetaData, Single, Single, Int32, Boolean)
L_007e: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.Vector3])
L_0083: Label1
L_0083: ldarg.0
L_0084: ldfld MissileLauncherEffect parentLauncher
L_0089: ldfld System.Single missileCurveStrength
L_008e: stloc.0
L_008f: ldc.i4.2
L_0090: ldarg.0
L_0091: ldfld MissileLauncherEffect parentLauncher
L_0096: ldfld System.Int32 missileCurveFrequency
L_009b: call Int32 Range(Int32, Int32)
L_00a0: ldarg.0
L_00a1: ldfld System.Int32 IndirectArcMinPoints
L_00a6: call Int32 Max(Int32, Int32)
L_00ab: stloc.1
L_00ac: ldloc.0
L_00ad: ldarg.0
L_00ae: ldfld System.Single ArcMinForce
L_00b3: bge.un Label2
L_00b8: ldc.r4 0
L_00bd: stloc.0
L_00be: Label2
L_00be: ldloc.1
L_00bf: newarr UnityEngine.Vector3
L_00c4: stloc.2
L_00c5: ldloc.2
L_00c6: ldc.i4.0
L_00c7: ldarg.0
L_00c8: ldfld UnityEngine.Vector3 startPos
L_00cd: stelem UnityEngine.Vector3
L_00d2: call UnityEngine.Vector3 get_up()
L_00d7: stloc.3
L_00d8: ldarg.0
L_00d9: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00de: ldc.i4.3
L_00df: callvirt Void set_Interpolation(FluffyUnderware.Curvy.CurvyInterpolation)
L_00e4: ldarg.0
L_00e5: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00ea: callvirt Void Clear()
L_00ef: ldarg.0
L_00f0: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00f5: ldc.i4.0
L_00f6: callvirt Void set_Closed(Boolean)
L_00fb: ldarg.0
L_00fc: ldfld UnityEngine.Vector3 endPos
L_0101: ldarg.0
L_0102: ldfld UnityEngine.Vector3 startPos
L_0107: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_010c: stloc.s 4 (UnityEngine.Vector3)
L_010e: ldarg.0
L_010f: ldfld UnityEngine.Vector3 startPos
L_0114: ldarg.0
L_0115: ldfld MissileLauncherEffect parentLauncher
L_011a: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_011f: ldc.i4.0
L_0120: callvirt UnityEngine.Vector3 get_Item(Int32)
L_0125: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_012a: stloc.s 5 (UnityEngine.Vector3)
L_012c: ldarg.0
L_012d: ldfld UnityEngine.Vector3 endPos
L_0132: ldarg.0
L_0133: ldfld MissileLauncherEffect parentLauncher
L_0138: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_013d: ldarg.0
L_013e: ldfld MissileLauncherEffect parentLauncher
L_0143: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_0148: callvirt Int32 get_Count()
L_014d: ldc.i4.1
L_014e: sub
L_014f: callvirt UnityEngine.Vector3 get_Item(Int32)
L_0154: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0159: stloc.s 6 (UnityEngine.Vector3)
L_015b: ldc.i4.1
L_015c: stloc.s 7 (System.Int32)
L_015e: br Label3
L_0163: Label6
L_0163: ldloc.s 7 (System.Int32)
L_0165: conv.r4
L_0166: ldloc.1
L_0167: ldc.i4.1
L_0168: sub
L_0169: conv.r4
L_016a: div
L_016b: stloc.s 8 (System.Single)
L_016d: ldloc.s 8 (System.Single)
L_016f: ldarg.0
L_0170: ldfld MissileLauncherEffect parentLauncher
L_0175: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_017a: callvirt Int32 get_Count()
L_017f: conv.r4
L_0180: mul
L_0181: call Int32 FloorToInt(Single)
L_0186: stloc.s 9 (System.Int32)
L_0188: ldloc.s 9 (System.Int32)
L_018a: ldc.i4.1
L_018b: add
L_018c: stloc.s 10 (System.Int32)
L_018e: ldloc.s 10 (System.Int32)
L_0190: ldarg.0
L_0191: ldfld MissileLauncherEffect parentLauncher
L_0196: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_019b: callvirt Int32 get_Count()
L_01a0: blt Label4
L_01a5: ldarg.0
L_01a6: ldfld MissileLauncherEffect parentLauncher
L_01ab: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01b0: ldloc.s 9 (System.Int32)
L_01b2: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01b7: stloc.s 11 (UnityEngine.Vector3)
L_01b9: br Label5
L_01be: Label4
L_01be: ldarg.0
L_01bf: ldfld MissileLauncherEffect parentLauncher
L_01c4: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01c9: ldloc.s 9 (System.Int32)
L_01cb: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01d0: ldarg.0
L_01d1: ldfld MissileLauncherEffect parentLauncher
L_01d6: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01db: ldloc.s 10 (System.Int32)
L_01dd: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01e2: ldloc.s 8 (System.Single)
L_01e4: ldarg.0
L_01e5: ldfld MissileLauncherEffect parentLauncher
L_01ea: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01ef: callvirt Int32 get_Count()
L_01f4: conv.r4
L_01f5: mul
L_01f6: ldc.r4 1
L_01fb: rem
L_01fc: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_0201: stloc.s 11 (UnityEngine.Vector3)
L_0203: Label5
L_0203: ldloc.s 11 (UnityEngine.Vector3)
L_0205: ldloc.s 5 (UnityEngine.Vector3)
L_0207: ldc.r4 1
L_020c: ldloc.s 8 (System.Single)
L_020e: sub
L_020f: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0214: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0219: stloc.s 11 (UnityEngine.Vector3)
L_021b: ldloc.s 11 (UnityEngine.Vector3)
L_021d: ldloc.s 6 (UnityEngine.Vector3)
L_021f: ldloc.s 8 (System.Single)
L_0221: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0226: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_022b: stloc.s 11 (UnityEngine.Vector3)
L_022d: ldloc.0
L_022e: neg
L_022f: ldloc.0
L_0230: call Single Range(Single, Single)
L_0235: stloc.s 12 (System.Single)
L_0237: call UnityEngine.Vector3 get_up()
L_023c: ldloc.s 12 (System.Single)
L_023e: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0243: stloc.3
L_0244: ldc.i4.0
L_0245: ldc.i4 360
L_024a: call Int32 Range(Int32, Int32)
L_024f: conv.r4
L_0250: ldloc.s 4 (UnityEngine.Vector3)
L_0252: call UnityEngine.Quaternion AngleAxis(Single, UnityEngine.Vector3)
L_0257: ldloc.3
L_0258: call UnityEngine.Vector3 op_Multiply(UnityEngine.Quaternion, UnityEngine.Vector3)
L_025d: stloc.3
L_025e: ldloc.s 11 (UnityEngine.Vector3)
L_0260: ldloc.3
L_0261: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0266: stloc.s 11 (UnityEngine.Vector3)
L_0268: ldloc.2
L_0269: ldloc.s 7 (System.Int32)
L_026b: ldloc.s 11 (UnityEngine.Vector3)
L_026d: stelem UnityEngine.Vector3
L_0272: ldloc.s 7 (System.Int32)
L_0274: ldc.i4.1
L_0275: add
L_0276: stloc.s 7 (System.Int32)
L_0278: Label3
L_0278: ldloc.s 7 (System.Int32)
L_027a: ldloc.1
L_027b: ldc.i4.1
L_027c: sub
L_027d: blt Label6
L_0282: ldloc.2
L_0283: ldloc.1
L_0284: ldc.i4.1
L_0285: sub
L_0286: ldarg.0
L_0287: ldfld UnityEngine.Vector3 endPos
L_028c: stelem UnityEngine.Vector3
L_0291: ldarg.0
L_0292: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0297: ldloc.2
L_0298: callvirt FluffyUnderware.Curvy.CurvySplineSegment[] Add(UnityEngine.Vector3[])
L_029d: pop
L_029e: Label0
L_029e: ret
DONE

### Patch MissileEffect, Void Update()
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Quaternion
L_0000: ldarg.0
L_0001: call Void Update()
L_0006: ldarg.0
L_0007: ldfld WeaponEffect+WeaponEffectState currentState
L_000c: ldc.i4.1
L_000d: bne.un Label1
L_0012: ldarg.0
L_0013: ldfld System.Single t
L_0018: ldc.r4 1
L_001d: bge.un Label2
L_0022: ldarg.0
L_0023: ldarg.0
L_0024: ldfld UnityEngine.Vector3 startPos
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 preFireEndPos
L_002f: ldarg.0
L_0030: ldfld System.Single t
L_0035: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_003a: stfld UnityEngine.Vector3 currentPos
L_003f: ldarg.0
L_0040: ldfld UnityEngine.Transform projectileTransform
L_0045: ldarg.0
L_0046: ldfld UnityEngine.Vector3 currentPos
L_004b: callvirt Void set_position(UnityEngine.Vector3)
L_0050: ldarg.0
L_0051: ldfld UnityEngine.Vector3 currentPos
L_0056: ldarg.0
L_0057: ldfld UnityEngine.Vector3 preFireEndPos
L_005c: call Boolean op_Inequality(UnityEngine.Vector3, UnityEngine.Vector3)
L_0061: brfalse Label3
L_0066: ldarg.0
L_0067: ldfld UnityEngine.Transform projectileTransform
L_006c: ldarg.0
L_006d: ldfld UnityEngine.Vector3 preFireEndPos
L_0072: callvirt Void LookAt(UnityEngine.Vector3)
L_0077: Label1
L_0077: Label2
L_0077: Label3
L_0077: ldarg.0
L_0078: ldfld WeaponEffect+WeaponEffectState currentState
L_007d: ldc.i4.2
L_007e: bne.un Label4
L_0083: ldarg.0
L_0084: ldfld System.Single t
L_0089: ldc.r4 1
L_008e: bge.un Label5
L_0093: ldarg.0
L_0094: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0099: callvirt Int32 get_Count()
L_009e: ldc.i4.0
L_009f: ble Label6
L_00a4: ldarg.0
L_00a5: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00aa: callvirt Single get_Length()
L_00af: ldarg.0
L_00b0: ldfld System.Single t
L_00b5: mul
L_00b6: stloc.0
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00be: ldloc.0
L_00bf: callvirt UnityEngine.Vector3 InterpolateByDistance(Single)
L_00c4: stfld UnityEngine.Vector3 currentPos
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.Transform projectileTransform
L_00cf: ldarg.0
L_00d0: ldfld UnityEngine.Vector3 currentPos
L_00d5: callvirt Void set_position(UnityEngine.Vector3)
L_00da: ldarg.0
L_00db: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00e0: ldarg.0
L_00e1: ldfld System.Single t
L_00e6: ldc.i4.0
L_00e7: callvirt UnityEngine.Quaternion GetOrientationFast(Single, Boolean)
L_00ec: stloc.1
L_00ed: ldarg.0
L_00ee: ldfld UnityEngine.Transform projectileTransform
L_00f3: ldloc.1
L_00f4: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00f9: Label5
L_00f9: Label6
L_00f9: ldarg.0
L_00fa: ldfld System.Single t
L_00ff: ldc.r4 1
L_0104: blt.un Label7
L_0109: ldarg.0
L_010a: callvirt Void PlayImpact()
L_010f: ldarg.0
L_0110: callvirt Void OnComplete()
L_0115: Label4
L_0115: Label7
L_0115: ldarg.0
L_0116: call Void Postfix(MissileEffect)
L_011b: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateToHitInfo()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 6: System.Int32[]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0006: callvirt Int32 get_Count()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldloc.0
L_000e: newarr System.Nullable`1[BattleTech.WeaponHitInfo][]
L_0013: stfld System.Nullable`1[BattleTech.WeaponHitInfo][][] weaponHitInfo
L_0018: ldc.r4 0
L_001d: stloc.1
L_001e: ldc.i4.0
L_001f: stloc.2
L_0020: br Label1
L_0025: Label6
L_0025: ldarg.0
L_0026: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_002b: ldloc.2
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0031: stloc.3
L_0032: ldloc.3
L_0033: callvirt Int32 get_Count()
L_0038: stloc.s 4 (System.Int32)
L_003a: ldloc.s 4 (System.Int32)
L_003c: newarr System.Nullable`1[BattleTech.WeaponHitInfo]
L_0041: stloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_0043: ldarg.0
L_0044: ldfld System.Int32[][] numberOfShots
L_0049: ldloc.2
L_004a: ldelem.ref
L_004b: stloc.s 6 (System.Int32[])
L_004d: ldc.i4.0
L_004e: stloc.s 7 (System.Int32)
L_0050: br Label2
L_0055: Label5
L_0055: ldloc.3
L_0056: ldloc.s 7 (System.Int32)
L_0058: callvirt BattleTech.Weapon get_Item(Int32)
L_005d: stloc.s 8 (BattleTech.Weapon)
L_005f: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_0061: ldloc.s 7 (System.Int32)
L_0063: ldelema System.Nullable`1[BattleTech.WeaponHitInfo]
L_0068: initobj System.Nullable`1[BattleTech.WeaponHitInfo]
L_006e: ldloc.s 6 (System.Int32[])
L_0070: ldloc.s 7 (System.Int32)
L_0072: ldelem.i4
L_0073: stloc.s 9 (System.Int32)
L_0075: ldloc.s 9 (System.Int32)
L_0077: ldc.i4.m1
L_0078: beq Label3
L_007d: ldloc.s 9 (System.Int32)
L_007f: brfalse Label4
L_0084: ldarg.0
L_0085: ldloc.s 8 (BattleTech.Weapon)
L_0087: ldloc.2
L_0088: ldloc.s 7 (System.Int32)
L_008a: ldloc.s 9 (System.Int32)
L_008c: ldarg.0
L_008d: ldfld System.Boolean indirectFire
L_0092: ldloc.1
L_0093: call BattleTech.WeaponHitInfo GenerateHitInfo(BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single)
L_0098: stloc.s 10 (BattleTech.WeaponHitInfo)
L_009a: ldarg.0
L_009b: ldloc.s 10 (BattleTech.WeaponHitInfo)
L_009d: call Void AddAllAffectedTargets(BattleTech.WeaponHitInfo)
L_00a2: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_00a4: ldloc.s 7 (System.Int32)
L_00a6: ldloc.s 10 (BattleTech.WeaponHitInfo)
L_00a8: newobj Void .ctor(WeaponHitInfo)
L_00ad: stelem System.Nullable`1[BattleTech.WeaponHitInfo]
L_00b2: Label3
L_00b2: Label4
L_00b2: ldloc.s 7 (System.Int32)
L_00b4: ldc.i4.1
L_00b5: add
L_00b6: stloc.s 7 (System.Int32)
L_00b8: Label2
L_00b8: ldloc.s 7 (System.Int32)
L_00ba: ldloc.s 4 (System.Int32)
L_00bc: blt Label5
L_00c1: ldarg.0
L_00c2: ldfld System.Nullable`1[BattleTech.WeaponHitInfo][][] weaponHitInfo
L_00c7: ldloc.2
L_00c8: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_00ca: stelem.ref
L_00cb: ldloc.2
L_00cc: ldc.i4.1
L_00cd: add
L_00ce: stloc.2
L_00cf: Label1
L_00cf: ldloc.2
L_00d0: ldloc.0
L_00d1: blt Label6
L_00d6: ldarg.0
L_00d7: call Void Postfix(AttackSequence)
L_00dc: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: castclass BattleTech.AttackCompleteMessage
L_0017: stloc.0
L_0018: ldloc.0
L_0019: ldfld System.Int32 sequenceId
L_001e: stloc.1
L_001f: ldarg.0
L_0020: ldloc.1
L_0021: call AttackSequence GetAttackSequence(Int32)
L_0026: stloc.2
L_0027: ldloc.2
L_0028: brtrue Label1
L_002d: ldsfld HBS.Logging.ILog logger
L_0032: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_0037: ldloc.1
L_0038: box System.Int32
L_003d: call System.String Format(System.String, System.Object)
L_0042: callvirt Void LogError(System.Object)
L_0047: ldstr "OnAttackComplete received invalid sequenceID: "
L_004c: ldloc.1
L_004d: box System.Int32
L_0052: call System.String Concat(System.Object, System.Object)
L_0057: newobj Void .ctor(String)
L_005c: throw
L_005d: Label1
L_005d: ldsfld HBS.Logging.ILog logger
L_0062: callvirt Boolean get_IsLogEnabled()
L_0067: brfalse Label2
L_006c: ldsfld HBS.Logging.ILog logger
L_0071: ldstr "[OnAttackComplete] ID {0}"
L_0076: ldloc.1
L_0077: box System.Int32
L_007c: call System.String Format(System.String, System.Object)
L_0081: callvirt Void Log(System.Object)
L_0086: Label2
L_0086: ldloc.2
L_0087: ldfld BattleTech.AbstractActor attacker
L_008c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0091: ldnull
L_0092: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0097: brfalse Label3
L_009c: ldloc.2
L_009d: ldfld BattleTech.AbstractActor attacker
L_00a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_00a7: ldc.i4.0
L_00a8: ldc.r4 0.5
L_00ad: ldloc.0
L_00ae: ldfld System.Int32 stackItemUID
L_00b3: ldloc.0
L_00b4: ldfld System.Int32 sequenceId
L_00b9: ldnull
L_00ba: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00bf: ldloc.2
L_00c0: ldfld BattleTech.AbstractActor attacker
L_00c5: callvirt BattleTech.GameRepresentation get_GameRep()
L_00ca: ldc.i4.0
L_00cb: callvirt Void SetVFXColliderEnabled(Boolean)
L_00d0: ldloc.2
L_00d1: ldfld BattleTech.AbstractActor attacker
L_00d6: callvirt BattleTech.GameRepresentation get_GameRep()
L_00db: isinst BattleTech.MechRepresentation
L_00e0: stloc.3
L_00e1: ldloc.3
L_00e2: ldnull
L_00e3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00e8: brfalse Label4
L_00ed: ldloc.3
L_00ee: ldc.i4.1
L_00ef: callvirt Void ToggleRandomIdles(Boolean)
L_00f4: Label4
L_00f4: ldloc.2
L_00f5: ldfld BattleTech.AbstractActor attacker
L_00fa: callvirt BattleTech.Team get_team()
L_00ff: callvirt System.String get_GUID()
L_0104: ldarg.0
L_0105: call BattleTech.CombatGameState get_Combat()
L_010a: callvirt System.String get_LocalPlayerTeamGuid()
L_010f: call Boolean op_Equality(System.String, System.String)
L_0114: brfalse Label5
L_0119: ldloc.2
L_011a: ldfld BattleTech.AbstractActor attacker
L_011f: callvirt BattleTech.Team get_team()
L_0124: ldloc.2
L_0125: ldfld BattleTech.ICombatant chosenTarget
L_012a: callvirt BattleTech.Team get_team()
L_012f: ldloc.2
L_0130: ldfld System.Single previousTeamHealthDifference
L_0135: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_013a: Label3
L_013a: Label5
L_013a: ldloc.2
L_013b: ldfld BattleTech.ICombatant chosenTarget
L_0140: callvirt BattleTech.GameRepresentation get_GameRep()
L_0145: ldnull
L_0146: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_014b: brfalse Label6
L_0150: ldloc.2
L_0151: ldfld BattleTech.ICombatant chosenTarget
L_0156: callvirt BattleTech.GameRepresentation get_GameRep()
L_015b: isinst BattleTech.MechRepresentation
L_0160: stloc.s 4 (BattleTech.MechRepresentation)
L_0162: ldloc.s 4 (BattleTech.MechRepresentation)
L_0164: ldnull
L_0165: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_016a: brfalse Label7
L_016f: ldloc.s 4 (BattleTech.MechRepresentation)
L_0171: ldc.i4.1
L_0172: callvirt Void ToggleRandomIdles(Boolean)
L_0177: Label7
L_0177: ldloc.2
L_0178: ldfld BattleTech.ICombatant chosenTarget
L_017d: callvirt BattleTech.Team get_team()
L_0182: callvirt System.String get_GUID()
L_0187: ldarg.0
L_0188: call BattleTech.CombatGameState get_Combat()
L_018d: callvirt System.String get_LocalPlayerTeamGuid()
L_0192: call Boolean op_Equality(System.String, System.String)
L_0197: brfalse Label8
L_019c: ldloc.2
L_019d: ldfld BattleTech.ICombatant chosenTarget
L_01a2: callvirt BattleTech.Team get_team()
L_01a7: ldloc.2
L_01a8: ldfld BattleTech.AbstractActor attacker
L_01ad: callvirt BattleTech.Team get_team()
L_01b2: ldloc.2
L_01b3: ldfld System.Single previousTeamHealthDifference
L_01b8: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01bd: Label6
L_01bd: Label8
L_01bd: ldc.i4.0
L_01be: stloc.s 5 (System.Int32)
L_01c0: br Label9
L_01c5: Label13
L_01c5: ldarg.0
L_01c6: call BattleTech.CombatGameState get_Combat()
L_01cb: ldloc.2
L_01cc: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01d1: ldloc.s 5 (System.Int32)
L_01d3: callvirt System.String get_Item(Int32)
L_01d8: ldc.i4.0
L_01d9: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01de: stloc.s 6 (BattleTech.ICombatant)
L_01e0: ldloc.s 6 (BattleTech.ICombatant)
L_01e2: brfalse Label10
L_01e7: ldloc.s 6 (BattleTech.ICombatant)
L_01e9: callvirt BattleTech.GameRepresentation get_GameRep()
L_01ee: ldnull
L_01ef: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f4: brtrue Label11
L_01f9: ldloc.s 6 (BattleTech.ICombatant)
L_01fb: callvirt BattleTech.GameRepresentation get_GameRep()
L_0200: isinst BattleTech.MechRepresentation
L_0205: stloc.s 7 (BattleTech.MechRepresentation)
L_0207: ldloc.s 7 (BattleTech.MechRepresentation)
L_0209: ldnull
L_020a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_020f: brfalse Label12
L_0214: ldloc.s 7 (BattleTech.MechRepresentation)
L_0216: ldc.i4.1
L_0217: callvirt Void ToggleRandomIdles(Boolean)
L_021c: Label10
L_021c: Label11
L_021c: Label12
L_021c: ldloc.s 5 (System.Int32)
L_021e: ldc.i4.1
L_021f: add
L_0220: stloc.s 5 (System.Int32)
L_0222: Label9
L_0222: ldloc.s 5 (System.Int32)
L_0224: ldloc.2
L_0225: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_022a: callvirt Int32 get_Count()
L_022f: blt Label13
L_0234: ldarg.0
L_0235: ldloc.2
L_0236: call Void RecordAttackSequenceStats(AttackSequence)
L_023b: ldarg.0
L_023c: call BattleTech.CombatGameState get_Combat()
L_0241: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0246: ldloc.2
L_0247: callvirt Void RecordAttackSequence(AttackSequence)
L_024c: ldarg.0
L_024d: ldloc.1
L_024e: call Boolean RemoveAttackSequence(Int32)
L_0253: pop
L_0254: Label0
L_0254: ldarg.0
L_0255: ldarg 1
L_025b: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_0260: ret
DONE

### Patch BattleTech.AttackDirectorHelpers.MessageCoordinator, Void Initialize(AttackSequence, System.Nullable`1[BattleTech.WeaponHitInfo][][])
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.AttackDirector+AttackSequence attackSequence
L_0007: ldc.i4.0
L_0008: stloc.0
L_0009: br Label1
L_000e: Label8
L_000e: ldarg.2
L_000f: ldloc.0
L_0010: ldelem.ref
L_0011: stloc.1
L_0012: ldc.i4.0
L_0013: stloc.2
L_0014: br Label2
L_0019: Label7
L_0019: ldloc.1
L_001a: ldloc.2
L_001b: ldelem System.Nullable`1[BattleTech.WeaponHitInfo]
L_0020: stloc.3
L_0021: ldsfld HBS.Logging.ILog logger
L_0026: callvirt Boolean get_IsDebugEnabled()
L_002b: brfalse Label3
L_0030: ldsfld HBS.Logging.ILog logger
L_0035: ldstr "Initializing Group {0} Weapon {1}"
L_003a: ldloc.0
L_003b: box System.Int32
L_0040: ldloc.2
L_0041: box System.Int32
L_0046: call System.String Format(System.String, System.Object, System.Object)
L_004b: callvirt Void LogDebug(System.Object)
L_0050: Label3
L_0050: ldloca.s 3 (System.Nullable`1[BattleTech.WeaponHitInfo])
L_0052: call Boolean get_HasValue()
L_0057: brtrue Label4
L_005c: ldsfld HBS.Logging.ILog logger
L_0061: callvirt Boolean get_IsDebugEnabled()
L_0066: brfalse Label5
L_006b: ldsfld HBS.Logging.ILog logger
L_0070: ldstr "Group {0} Weapon {1} has no value"
L_0075: ldloc.0
L_0076: box System.Int32
L_007b: ldloc.2
L_007c: box System.Int32
L_0081: call System.String Format(System.String, System.Object, System.Object)
L_0086: callvirt Void LogDebug(System.Object)
L_008b: br Label6
L_0090: Label4
L_0090: ldarg.0
L_0091: ldloca.s 3 (System.Nullable`1[BattleTech.WeaponHitInfo])
L_0093: call BattleTech.WeaponHitInfo get_Value()
L_0098: call Void AddExpectedMessages(BattleTech.WeaponHitInfo)
L_009d: Label5
L_009d: Label6
L_009d: ldloc.2
L_009e: ldc.i4.1
L_009f: add
L_00a0: stloc.2
L_00a1: Label2
L_00a1: ldloc.2
L_00a2: ldloc.1
L_00a3: ldlen
L_00a4: conv.i4
L_00a5: blt Label7
L_00aa: ldloc.0
L_00ab: ldc.i4.1
L_00ac: add
L_00ad: stloc.0
L_00ae: Label1
L_00ae: ldloc.0
L_00af: ldarg.2
L_00b0: ldlen
L_00b1: conv.i4
L_00b2: blt Label8
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirectorHelpers.ExpectedMessage] expectedMessages
L_00be: callvirt Int32 get_Count()
L_00c3: stfld System.Int32 expectedMessageCount
L_00c8: ldarg.0
L_00c9: ldarg 2
L_00cf: call Void Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator, System.Nullable`1[BattleTech.WeaponHitInfo][][])
L_00d4: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: Local var 30: CustomAmmoCategoriesPatches.ImpactAOEState
L_0000: ldnull
L_0001: stloc 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_0003: ldarg.0
L_0004: ldloca 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_0006: ldarga 1
L_000c: call Boolean Prefix(AttackSequence, CustomAmmoCategoriesPatches.ImpactAOEState ByRef, MessageCenterMessage ByRef)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: ldarg 1
L_001d: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_0022: brfalse Label0
L_0027: ldarg.0
L_0028: ldarga 1
L_002e: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_0033: brfalse Label0
L_0038: ldarg.0
L_0039: ldarga 1
L_003f: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_0044: brfalse Label0
L_0049: ldarg.1
L_004a: castclass BattleTech.AttackSequenceImpactMessage
L_004f: stloc.0
L_0050: ldloc.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldfld System.Int32 attackSequenceId
L_005b: ldarg.0
L_005c: ldfld System.Int32 id
L_0061: beq Label1
L_0066: br Label33
L_006b: Label1
L_006b: ldloc.0
L_006c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0071: ldfld System.Int32 attackGroupIndex
L_0076: stloc.1
L_0077: ldloc.0
L_0078: ldflda BattleTech.WeaponHitInfo hitInfo
L_007d: ldfld System.Int32 attackWeaponIndex
L_0082: stloc.2
L_0083: ldloc.0
L_0084: ldfld System.Int32 hitIndex
L_0089: stloc.3
L_008a: ldarg.0
L_008b: ldloc.1
L_008c: ldloc.2
L_008d: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_0092: stloc.s 4 (BattleTech.Weapon)
L_0094: ldloc.0
L_0095: ldflda BattleTech.WeaponHitInfo hitInfo
L_009a: ldloc.3
L_009b: call Int32 ShotHitLocation(Int32)
L_00a0: stloc.s 5 (System.Int32)
L_00a2: ldloc.0
L_00a3: ldflda BattleTech.WeaponHitInfo hitInfo
L_00a8: ldfld UnityEngine.Vector3[] hitPositions
L_00ad: ldloc.3
L_00ae: ldelem UnityEngine.Vector3
L_00b3: stloc.s 6 (UnityEngine.Vector3)
L_00b5: ldloc.0
L_00b6: ldfld System.Single hitDamage
L_00bb: stloc.s 7 (System.Single)
L_00bd: ldloc.s 7 (System.Single)
L_00bf: stloc.s 8 (System.Single)
L_00c1: ldarg.0
L_00c2: call BattleTech.AttackDirector get_Director()
L_00c7: callvirt BattleTech.CombatGameState get_Combat()
L_00cc: callvirt BattleTech.ToHit get_ToHit()
L_00d1: ldloc.0
L_00d2: ldflda BattleTech.WeaponHitInfo hitInfo
L_00d7: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00dc: ldloc.3
L_00dd: ldelem.i4
L_00de: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00e3: stloc.s 9 (System.Single)
L_00e5: ldloc.s 7 (System.Single)
L_00e7: ldloc.s 9 (System.Single)
L_00e9: mul
L_00ea: stloc.s 8 (System.Single)
L_00ec: ldloc.0
L_00ed: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f2: ldfld System.String[] secondaryTargetIds
L_00f7: ldloc.3
L_00f8: ldelem.ref
L_00f9: call Boolean IsNullOrEmpty(System.String)
L_00fe: ldc.i4.0
L_00ff: ceq
L_0101: stloc.s 10 (System.Boolean)
L_0103: ldnull
L_0104: stloc.s 11 (BattleTech.ICombatant)
L_0106: ldloc.s 10 (System.Boolean)
L_0108: brfalse Label2
L_010d: ldarg.0
L_010e: call BattleTech.AttackDirector get_Director()
L_0113: callvirt BattleTech.CombatGameState get_Combat()
L_0118: ldloc.0
L_0119: ldflda BattleTech.WeaponHitInfo hitInfo
L_011e: ldfld System.String[] secondaryTargetIds
L_0123: ldloc.3
L_0124: ldelem.ref
L_0125: ldc.i4.0
L_0126: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_012b: stloc.s 11 (BattleTech.ICombatant)
L_012d: Label2
L_012d: ldarg.0
L_012e: ldfld BattleTech.ICombatant chosenTarget
L_0133: isinst BattleTech.AbstractActor
L_0138: stloc.s 12 (BattleTech.AbstractActor)
L_013a: ldloc.s 12 (BattleTech.AbstractActor)
L_013c: brfalse Label3
L_0141: ldarg.0
L_0142: ldfld BattleTech.AbstractActor attacker
L_0147: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_014c: ldloc.s 12 (BattleTech.AbstractActor)
L_014e: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0153: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0155: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0157: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_015c: stloc.s 15 (BattleTech.LineOfFireLevel)
L_015e: ldloc.s 12 (BattleTech.AbstractActor)
L_0160: ldloc.s 8 (System.Single)
L_0162: ldloc.s 4 (BattleTech.Weapon)
L_0164: callvirt BattleTech.WeaponCategory get_Category()
L_0169: ldloc.s 12 (BattleTech.AbstractActor)
L_016b: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0170: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_0172: ldc.i4.1
L_0173: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0178: stloc.s 8 (System.Single)
L_017a: ldloc.s 12 (BattleTech.AbstractActor)
L_017c: ldloc.s 8 (System.Single)
L_017e: ldloc.s 4 (BattleTech.Weapon)
L_0180: callvirt BattleTech.WeaponCategory get_Category()
L_0185: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_018a: stloc.s 8 (System.Single)
L_018c: Label3
L_018c: ldloc.s 8 (System.Single)
L_018e: ldc.r4 0
L_0193: bgt.un Label4
L_0198: ldsfld HBS.Logging.ILog attackLogger
L_019d: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_01a2: ldloc.s 7 (System.Single)
L_01a4: box System.Single
L_01a9: ldloc.s 8 (System.Single)
L_01ab: box System.Single
L_01b0: call System.String Format(System.String, System.Object, System.Object)
L_01b5: callvirt Void LogWarning(System.Object)
L_01ba: ldc.r4 0
L_01bf: stloc.s 8 (System.Single)
L_01c1: Label4
L_01c1: ldarg.0
L_01c2: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01c7: ldloc.0
L_01c8: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01cd: stloc.s 13 (System.Boolean)
L_01cf: ldloc.0
L_01d0: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d5: ldloc.3
L_01d6: call Boolean DidShotHitChosenTarget(Int32)
L_01db: stloc.s 14 (System.Boolean)
L_01dd: ldloc.0
L_01de: ldfld System.Boolean hasPlayedImpact
L_01e3: brtrue Label5
L_01e8: ldsfld HBS.Logging.ILog logger
L_01ed: callvirt Boolean get_IsDebugEnabled()
L_01f2: brfalse Label6
L_01f7: ldsfld HBS.Logging.ILog logger
L_01fc: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_0201: ldc.i4.5
L_0202: newarr System.Object
L_0207: dup
L_0208: ldc.i4.0
L_0209: ldarg.0
L_020a: ldfld System.Int32 id
L_020f: box System.Int32
L_0214: stelem.ref
L_0215: dup
L_0216: ldc.i4.1
L_0217: ldloc.1
L_0218: box System.Int32
L_021d: stelem.ref
L_021e: dup
L_021f: ldc.i4.2
L_0220: ldloc.2
L_0221: box System.Int32
L_0226: stelem.ref
L_0227: dup
L_0228: ldc.i4.3
L_0229: ldloc.3
L_022a: box System.Int32
L_022f: stelem.ref
L_0230: dup
L_0231: ldc.i4.4
L_0232: ldloc.s 13 (System.Boolean)
L_0234: box System.Boolean
L_0239: stelem.ref
L_023a: call System.String Format(System.String, System.Object[])
L_023f: callvirt Void LogDebug(System.Object)
L_0244: Label6
L_0244: ldloc.0
L_0245: ldc.i4.1
L_0246: stfld System.Boolean hasPlayedImpact
L_024b: ldarg.0
L_024c: ldfld BattleTech.ICombatant chosenTarget
L_0251: callvirt BattleTech.GameRepresentation get_GameRep()
L_0256: ldnull
L_0257: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_025c: brfalse Label7
L_0261: ldloc.s 14 (System.Boolean)
L_0263: brfalse Label8
L_0268: ldarg.0
L_0269: ldfld BattleTech.ICombatant chosenTarget
L_026e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0273: ldloc.0
L_0274: ldfld BattleTech.WeaponHitInfo hitInfo
L_0279: ldloc.3
L_027a: ldloc.s 4 (BattleTech.Weapon)
L_027c: ldarg.0
L_027d: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0282: ldarg.0
L_0283: ldfld System.Single cumulativeDamage
L_0288: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_028d: ldloc.s 6 (UnityEngine.Vector3)
L_028f: stloc.s 17 (UnityEngine.Vector3)
L_0291: ldarg.0
L_0292: ldfld BattleTech.ICombatant chosenTarget
L_0297: ldloc.s 5 (System.Int32)
L_0299: callvirt Single ArmorForLocation(Int32)
L_029e: ldloc.s 8 (System.Single)
L_02a0: bge.un Label9
L_02a5: ldloc.0
L_02a6: ldflda BattleTech.WeaponHitInfo hitInfo
L_02ab: ldfld System.String attackerId
L_02b0: ldarg.0
L_02b1: ldfld BattleTech.ICombatant chosenTarget
L_02b6: callvirt System.String get_GUID()
L_02bb: ldstr "{0}"
L_02c0: ldc.i4.1
L_02c1: newarr System.Object
L_02c6: dup
L_02c7: ldc.i4.0
L_02c8: ldc.r4 1
L_02cd: ldloc.s 8 (System.Single)
L_02cf: call Single Max(Single, Single)
L_02d4: conv.i4
L_02d5: box System.Int32
L_02da: stelem.ref
L_02db: newobj Void .ctor(String, Object[])
L_02e0: ldarg.0
L_02e1: call BattleTech.AttackDirector get_Director()
L_02e6: callvirt BattleTech.CombatGameState get_Combat()
L_02eb: callvirt BattleTech.CombatGameConstants get_Constants()
L_02f0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02f5: ldfld System.Single floatieSizeMedium
L_02fa: ldc.i4.8
L_02fb: ldloc.s 17 (UnityEngine.Vector3)
L_02fd: ldfld System.Single x
L_0302: ldloc.s 17 (UnityEngine.Vector3)
L_0304: ldfld System.Single y
L_0309: ldloc.s 17 (UnityEngine.Vector3)
L_030b: ldfld System.Single z
L_0310: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0315: stloc.s 18 (BattleTech.FloatieMessage)
L_0317: ldarg.0
L_0318: call BattleTech.AttackDirector get_Director()
L_031d: callvirt BattleTech.CombatGameState get_Combat()
L_0322: callvirt MessageCenter get_MessageCenter()
L_0327: ldloc.s 18 (BattleTech.FloatieMessage)
L_0329: callvirt Void PublishMessage(MessageCenterMessage)
L_032e: br Label10
L_0333: Label9
L_0333: ldloc.0
L_0334: ldflda BattleTech.WeaponHitInfo hitInfo
L_0339: ldfld System.String attackerId
L_033e: ldarg.0
L_033f: ldfld BattleTech.ICombatant chosenTarget
L_0344: callvirt System.String get_GUID()
L_0349: ldstr "{0}"
L_034e: ldc.i4.1
L_034f: newarr System.Object
L_0354: dup
L_0355: ldc.i4.0
L_0356: ldc.r4 1
L_035b: ldloc.s 8 (System.Single)
L_035d: call Single Max(Single, Single)
L_0362: conv.i4
L_0363: box System.Int32
L_0368: stelem.ref
L_0369: newobj Void .ctor(String, Object[])
L_036e: ldarg.0
L_036f: call BattleTech.AttackDirector get_Director()
L_0374: callvirt BattleTech.CombatGameState get_Combat()
L_0379: callvirt BattleTech.CombatGameConstants get_Constants()
L_037e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0383: ldfld System.Single floatieSizeMedium
L_0388: ldc.i4.7
L_0389: ldloc.s 17 (UnityEngine.Vector3)
L_038b: ldfld System.Single x
L_0390: ldloc.s 17 (UnityEngine.Vector3)
L_0392: ldfld System.Single y
L_0397: ldloc.s 17 (UnityEngine.Vector3)
L_0399: ldfld System.Single z
L_039e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_03a3: stloc.s 19 (BattleTech.FloatieMessage)
L_03a5: ldarg.0
L_03a6: call BattleTech.AttackDirector get_Director()
L_03ab: callvirt BattleTech.CombatGameState get_Combat()
L_03b0: callvirt MessageCenter get_MessageCenter()
L_03b5: ldloc.s 19 (BattleTech.FloatieMessage)
L_03b7: callvirt Void PublishMessage(MessageCenterMessage)
L_03bc: br Label11
L_03c1: Label8
L_03c1: ldarg.0
L_03c2: ldfld BattleTech.ICombatant chosenTarget
L_03c7: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03cc: call UnityEngine.Vector3 get_insideUnitSphere()
L_03d1: ldc.r4 5
L_03d6: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03db: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03e0: stloc.s 20 (UnityEngine.Vector3)
L_03e2: ldloc.0
L_03e3: ldflda BattleTech.WeaponHitInfo hitInfo
L_03e8: ldfld System.Boolean[] dodgeSuccesses
L_03ed: ldloc.3
L_03ee: ldelem.u1
L_03ef: brfalse Label12
L_03f4: ldarg.0
L_03f5: ldfld BattleTech.ICombatant chosenTarget
L_03fa: callvirt BattleTech.GameRepresentation get_GameRep()
L_03ff: ldloc.0
L_0400: ldfld BattleTech.WeaponHitInfo hitInfo
L_0405: ldloc.3
L_0406: ldloc.s 4 (BattleTech.Weapon)
L_0408: ldarg.0
L_0409: ldfld BattleTech.MeleeAttackType meleeAttackType
L_040e: ldarg.0
L_040f: ldfld System.Single cumulativeDamage
L_0414: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0419: ldloc.0
L_041a: ldflda BattleTech.WeaponHitInfo hitInfo
L_041f: ldfld System.String attackerId
L_0424: ldarg.0
L_0425: ldfld BattleTech.ICombatant chosenTarget
L_042a: callvirt System.String get_GUID()
L_042f: ldstr "EVADE"
L_0434: call System.Object[] Empty[Object]()
L_0439: newobj Void .ctor(String, Object[])
L_043e: ldarg.0
L_043f: call BattleTech.AttackDirector get_Director()
L_0444: callvirt BattleTech.CombatGameState get_Combat()
L_0449: callvirt BattleTech.CombatGameConstants get_Constants()
L_044e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0453: ldfld System.Single floatieSizeMedium
L_0458: ldc.i4.6
L_0459: ldloc.s 20 (UnityEngine.Vector3)
L_045b: ldfld System.Single x
L_0460: ldloc.s 20 (UnityEngine.Vector3)
L_0462: ldfld System.Single y
L_0467: ldloc.s 20 (UnityEngine.Vector3)
L_0469: ldfld System.Single z
L_046e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0473: stloc.s 21 (BattleTech.FloatieMessage)
L_0475: ldarg.0
L_0476: call BattleTech.AttackDirector get_Director()
L_047b: callvirt BattleTech.CombatGameState get_Combat()
L_0480: callvirt MessageCenter get_MessageCenter()
L_0485: ldloc.s 21 (BattleTech.FloatieMessage)
L_0487: callvirt Void PublishMessage(MessageCenterMessage)
L_048c: br Label13
L_0491: Label12
L_0491: ldarg.0
L_0492: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0497: brfalse Label14
L_049c: ldarg.0
L_049d: ldfld BattleTech.ICombatant chosenTarget
L_04a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_04a7: ldloc.0
L_04a8: ldfld BattleTech.WeaponHitInfo hitInfo
L_04ad: ldloc.3
L_04ae: ldloc.s 4 (BattleTech.Weapon)
L_04b0: ldarg.0
L_04b1: ldfld BattleTech.MeleeAttackType meleeAttackType
L_04b6: ldarg.0
L_04b7: ldfld System.Single cumulativeDamage
L_04bc: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_04c1: ldloc.0
L_04c2: ldflda BattleTech.WeaponHitInfo hitInfo
L_04c7: ldfld System.String attackerId
L_04cc: ldloc.0
L_04cd: ldflda BattleTech.WeaponHitInfo hitInfo
L_04d2: ldfld System.String targetId
L_04d7: ldstr "MISS!"
L_04dc: call System.Object[] Empty[Object]()
L_04e1: newobj Void .ctor(String, Object[])
L_04e6: ldarg.0
L_04e7: call BattleTech.AttackDirector get_Director()
L_04ec: callvirt BattleTech.CombatGameState get_Combat()
L_04f1: callvirt BattleTech.CombatGameConstants get_Constants()
L_04f6: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04fb: ldfld System.Single floatieSizeMedium
L_0500: ldc.i4.5
L_0501: ldloc.s 20 (UnityEngine.Vector3)
L_0503: ldfld System.Single x
L_0508: ldloc.s 20 (UnityEngine.Vector3)
L_050a: ldfld System.Single y
L_050f: ldloc.s 20 (UnityEngine.Vector3)
L_0511: ldfld System.Single z
L_0516: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_051b: stloc.s 22 (BattleTech.FloatieMessage)
L_051d: ldarg.0
L_051e: call BattleTech.AttackDirector get_Director()
L_0523: callvirt BattleTech.CombatGameState get_Combat()
L_0528: callvirt MessageCenter get_MessageCenter()
L_052d: ldloc.s 22 (BattleTech.FloatieMessage)
L_052f: callvirt Void PublishMessage(MessageCenterMessage)
L_0534: br Label15
L_0539: Label14
L_0539: ldloc.s 4 (BattleTech.Weapon)
L_053b: callvirt Int32 get_ShotsWhenFired()
L_0540: ldc.i4.1
L_0541: bgt Label16
L_0546: ldc.i4.5
L_0547: br Label17
L_054c: Label16
L_054c: ldc.i4.4
L_054d: Label17
L_054d: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_054f: ldloc.0
L_0550: ldflda BattleTech.WeaponHitInfo hitInfo
L_0555: ldfld System.String attackerId
L_055a: ldloc.0
L_055b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0560: ldfld System.String targetId
L_0565: ldstr "MISS!"
L_056a: call System.Object[] Empty[Object]()
L_056f: newobj Void .ctor(String, Object[])
L_0574: ldarg.0
L_0575: call BattleTech.AttackDirector get_Director()
L_057a: callvirt BattleTech.CombatGameState get_Combat()
L_057f: callvirt BattleTech.CombatGameConstants get_Constants()
L_0584: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0589: ldfld System.Single floatieSizeMedium
L_058e: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0590: ldloc.s 20 (UnityEngine.Vector3)
L_0592: ldfld System.Single x
L_0597: ldloc.s 20 (UnityEngine.Vector3)
L_0599: ldfld System.Single y
L_059e: ldloc.s 20 (UnityEngine.Vector3)
L_05a0: ldfld System.Single z
L_05a5: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05aa: stloc.s 24 (BattleTech.FloatieMessage)
L_05ac: ldarg.0
L_05ad: call BattleTech.AttackDirector get_Director()
L_05b2: callvirt BattleTech.CombatGameState get_Combat()
L_05b7: callvirt MessageCenter get_MessageCenter()
L_05bc: ldloc.s 24 (BattleTech.FloatieMessage)
L_05be: callvirt Void PublishMessage(MessageCenterMessage)
L_05c3: Label13
L_05c3: Label15
L_05c3: ldloc.s 10 (System.Boolean)
L_05c5: brfalse Label18
L_05ca: ldloc.0
L_05cb: ldflda BattleTech.WeaponHitInfo hitInfo
L_05d0: ldfld System.String attackerId
L_05d5: ldloc.0
L_05d6: ldflda BattleTech.WeaponHitInfo hitInfo
L_05db: ldfld System.String targetId
L_05e0: ldstr "STRAY SHOT"
L_05e5: call System.Object[] Empty[Object]()
L_05ea: newobj Void .ctor(String, Object[])
L_05ef: ldarg.0
L_05f0: call BattleTech.AttackDirector get_Director()
L_05f5: callvirt BattleTech.CombatGameState get_Combat()
L_05fa: callvirt BattleTech.CombatGameConstants get_Constants()
L_05ff: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0604: ldfld System.Single floatieSizeLarge
L_0609: ldc.i4.5
L_060a: ldloc.s 6 (UnityEngine.Vector3)
L_060c: ldfld System.Single x
L_0611: ldloc.s 6 (UnityEngine.Vector3)
L_0613: ldfld System.Single y
L_0618: ldloc.s 6 (UnityEngine.Vector3)
L_061a: ldfld System.Single z
L_061f: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0624: stloc.s 25 (BattleTech.FloatieMessage)
L_0626: ldarg.0
L_0627: call BattleTech.AttackDirector get_Director()
L_062c: callvirt BattleTech.CombatGameState get_Combat()
L_0631: callvirt MessageCenter get_MessageCenter()
L_0636: ldloc.s 25 (BattleTech.FloatieMessage)
L_0638: callvirt Void PublishMessage(MessageCenterMessage)
L_063d: ldloc.s 11 (BattleTech.ICombatant)
L_063f: brfalse Label19
L_0644: ldloc.s 11 (BattleTech.ICombatant)
L_0646: callvirt BattleTech.GameRepresentation get_GameRep()
L_064b: ldnull
L_064c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0651: brfalse Label20
L_0656: ldloc.s 11 (BattleTech.ICombatant)
L_0658: callvirt BattleTech.GameRepresentation get_GameRep()
L_065d: ldloc.0
L_065e: ldfld BattleTech.WeaponHitInfo hitInfo
L_0663: ldloc.3
L_0664: ldloc.s 4 (BattleTech.Weapon)
L_0666: ldarg.0
L_0667: ldfld BattleTech.MeleeAttackType meleeAttackType
L_066c: ldarg.0
L_066d: ldfld System.Single cumulativeDamage
L_0672: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0677: Label20
L_0677: ldloc.s 11 (BattleTech.ICombatant)
L_0679: ldloc.s 5 (System.Int32)
L_067b: callvirt Single ArmorForLocation(Int32)
L_0680: ldloc.s 8 (System.Single)
L_0682: bge.un Label21
L_0687: ldloc.0
L_0688: ldflda BattleTech.WeaponHitInfo hitInfo
L_068d: ldfld System.String attackerId
L_0692: ldloc.s 11 (BattleTech.ICombatant)
L_0694: callvirt System.String get_GUID()
L_0699: ldstr "{0}"
L_069e: ldc.i4.1
L_069f: newarr System.Object
L_06a4: dup
L_06a5: ldc.i4.0
L_06a6: ldc.r4 1
L_06ab: ldloc.s 8 (System.Single)
L_06ad: call Single Max(Single, Single)
L_06b2: conv.i4
L_06b3: box System.Int32
L_06b8: stelem.ref
L_06b9: newobj Void .ctor(String, Object[])
L_06be: ldarg.0
L_06bf: call BattleTech.AttackDirector get_Director()
L_06c4: callvirt BattleTech.CombatGameState get_Combat()
L_06c9: callvirt BattleTech.CombatGameConstants get_Constants()
L_06ce: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06d3: ldfld System.Single floatieSizeMedium
L_06d8: ldc.i4.8
L_06d9: ldloc.s 6 (UnityEngine.Vector3)
L_06db: ldfld System.Single x
L_06e0: ldloc.s 6 (UnityEngine.Vector3)
L_06e2: ldfld System.Single y
L_06e7: ldloc.s 6 (UnityEngine.Vector3)
L_06e9: ldfld System.Single z
L_06ee: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06f3: stloc.s 26 (BattleTech.FloatieMessage)
L_06f5: ldarg.0
L_06f6: call BattleTech.AttackDirector get_Director()
L_06fb: callvirt BattleTech.CombatGameState get_Combat()
L_0700: callvirt MessageCenter get_MessageCenter()
L_0705: ldloc.s 26 (BattleTech.FloatieMessage)
L_0707: callvirt Void PublishMessage(MessageCenterMessage)
L_070c: br Label22
L_0711: Label21
L_0711: ldloc.0
L_0712: ldflda BattleTech.WeaponHitInfo hitInfo
L_0717: ldfld System.String attackerId
L_071c: ldloc.s 11 (BattleTech.ICombatant)
L_071e: callvirt System.String get_GUID()
L_0723: ldstr "{0}"
L_0728: ldc.i4.1
L_0729: newarr System.Object
L_072e: dup
L_072f: ldc.i4.0
L_0730: ldc.r4 1
L_0735: ldloc.s 8 (System.Single)
L_0737: call Single Max(Single, Single)
L_073c: conv.i4
L_073d: box System.Int32
L_0742: stelem.ref
L_0743: newobj Void .ctor(String, Object[])
L_0748: ldarg.0
L_0749: call BattleTech.AttackDirector get_Director()
L_074e: callvirt BattleTech.CombatGameState get_Combat()
L_0753: callvirt BattleTech.CombatGameConstants get_Constants()
L_0758: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_075d: ldfld System.Single floatieSizeMedium
L_0762: ldc.i4.7
L_0763: ldloc.s 6 (UnityEngine.Vector3)
L_0765: ldfld System.Single x
L_076a: ldloc.s 6 (UnityEngine.Vector3)
L_076c: ldfld System.Single y
L_0771: ldloc.s 6 (UnityEngine.Vector3)
L_0773: ldfld System.Single z
L_0778: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_077d: stloc.s 27 (BattleTech.FloatieMessage)
L_077f: ldarg.0
L_0780: call BattleTech.AttackDirector get_Director()
L_0785: callvirt BattleTech.CombatGameState get_Combat()
L_078a: callvirt MessageCenter get_MessageCenter()
L_078f: ldloc.s 27 (BattleTech.FloatieMessage)
L_0791: callvirt Void PublishMessage(MessageCenterMessage)
L_0796: Label7
L_0796: Label10
L_0796: Label11
L_0796: Label18
L_0796: Label19
L_0796: Label22
L_0796: ldloc.s 4 (BattleTech.Weapon)
L_0798: callvirt BattleTech.WeaponType get_Type()
L_079d: ldc.i4.3
L_079e: beq Label23
L_07a3: ldloc.s 4 (BattleTech.Weapon)
L_07a5: callvirt BattleTech.WeaponType get_Type()
L_07aa: ldc.i4.7
L_07ab: beq Label24
L_07b0: call BattleTech.CameraControl get_Instance()
L_07b5: ldloc.s 8 (System.Single)
L_07b7: ldarg.0
L_07b8: call BattleTech.AttackDirector get_Director()
L_07bd: callvirt BattleTech.CombatGameState get_Combat()
L_07c2: callvirt BattleTech.CombatGameConstants get_Constants()
L_07c7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07cc: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07d1: mul
L_07d2: ldarg.0
L_07d3: call BattleTech.AttackDirector get_Director()
L_07d8: callvirt BattleTech.CombatGameState get_Combat()
L_07dd: callvirt BattleTech.CombatGameConstants get_Constants()
L_07e2: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07e7: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07ec: add
L_07ed: ldc.r4 1
L_07f2: ldloc.s 6 (UnityEngine.Vector3)
L_07f4: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07f9: Label5
L_07f9: Label23
L_07f9: Label24
L_07f9: ldloc.s 13 (System.Boolean)
L_07fb: brtrue Label25
L_0800: ldarg.0
L_0801: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0806: ldloc.0
L_0807: callvirt Void StoreMessage(MessageCenterMessage)
L_080c: br Label34
L_0811: Label25
L_0811: ldsfld HBS.Logging.ILog logger
L_0816: callvirt Boolean get_IsLogEnabled()
L_081b: brfalse Label26
L_0820: ldsfld HBS.Logging.ILog logger
L_0825: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_082a: ldc.i4.4
L_082b: newarr System.Object
L_0830: dup
L_0831: ldc.i4.0
L_0832: ldarg.0
L_0833: ldfld System.Int32 id
L_0838: box System.Int32
L_083d: stelem.ref
L_083e: dup
L_083f: ldc.i4.1
L_0840: ldloc.1
L_0841: box System.Int32
L_0846: stelem.ref
L_0847: dup
L_0848: ldc.i4.2
L_0849: ldloc.2
L_084a: box System.Int32
L_084f: stelem.ref
L_0850: dup
L_0851: ldc.i4.3
L_0852: ldloc.3
L_0853: box System.Int32
L_0858: stelem.ref
L_0859: call System.String Format(System.String, System.Object[])
L_085e: callvirt Void Log(System.Object)
L_0863: ldsfld HBS.Logging.ILog logger
L_0868: callvirt Boolean get_IsDebugEnabled()
L_086d: brfalse Label27
L_0872: ldsfld HBS.Logging.ILog logger
L_0877: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_087c: ldloc.s 4 (BattleTech.Weapon)
L_087e: callvirt System.String get_Name()
L_0883: ldarg.0
L_0884: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0889: constrained. BattleTech.MeleeAttackType
L_088f: callvirt System.String ToString()
L_0894: ldloca.s 5 (System.Int32)
L_0896: call System.String ToString()
L_089b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_08a0: callvirt Void LogDebug(System.Object)
L_08a5: Label26
L_08a5: Label27
L_08a5: ldloc.s 14 (System.Boolean)
L_08a7: brfalse Label28
L_08ac: ldarg.0
L_08ad: ldarg.0
L_08ae: ldfld System.Single cumulativeDamage
L_08b3: ldloc.s 8 (System.Single)
L_08b5: add
L_08b6: stfld System.Single cumulativeDamage
L_08bb: ldarg.0
L_08bc: ldfld BattleTech.ICombatant chosenTarget
L_08c1: ldloc.0
L_08c2: ldfld BattleTech.WeaponHitInfo hitInfo
L_08c7: ldloc.s 5 (System.Int32)
L_08c9: ldloc.s 4 (BattleTech.Weapon)
L_08cb: ldloc.s 8 (System.Single)
L_08cd: ldloc.3
L_08ce: ldc.i4.s 12
L_08d0: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08d5: ldarg.0
L_08d6: ldfld BattleTech.ICombatant chosenTarget
L_08db: ldarg.0
L_08dc: ldfld BattleTech.AbstractActor attacker
L_08e1: callvirt System.String get_GUID()
L_08e6: callvirt Void HandleDeath(System.String)
L_08eb: br Label29
L_08f0: Label28
L_08f0: ldloc.s 10 (System.Boolean)
L_08f2: brfalse Label30
L_08f7: ldloc.s 11 (BattleTech.ICombatant)
L_08f9: brfalse Label31
L_08fe: ldloc.s 7 (System.Single)
L_0900: ldloc.s 9 (System.Single)
L_0902: mul
L_0903: stloc.s 8 (System.Single)
L_0905: ldloc.s 11 (BattleTech.ICombatant)
L_0907: isinst BattleTech.AbstractActor
L_090c: stloc.s 28 (BattleTech.AbstractActor)
L_090e: ldloc.s 28 (BattleTech.AbstractActor)
L_0910: brfalse Label32
L_0915: ldarg.0
L_0916: ldfld BattleTech.AbstractActor attacker
L_091b: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0920: ldloc.s 28 (BattleTech.AbstractActor)
L_0922: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0927: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0929: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_092b: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0930: stloc.s 29 (BattleTech.LineOfFireLevel)
L_0932: ldloc.s 28 (BattleTech.AbstractActor)
L_0934: ldloc.s 8 (System.Single)
L_0936: ldloc.s 4 (BattleTech.Weapon)
L_0938: callvirt BattleTech.WeaponCategory get_Category()
L_093d: ldloc.s 28 (BattleTech.AbstractActor)
L_093f: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0944: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_0946: ldc.i4.1
L_0947: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_094c: stloc.s 8 (System.Single)
L_094e: ldloc.s 28 (BattleTech.AbstractActor)
L_0950: ldloc.s 8 (System.Single)
L_0952: ldloc.s 4 (BattleTech.Weapon)
L_0954: callvirt BattleTech.WeaponCategory get_Category()
L_0959: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_095e: stloc.s 8 (System.Single)
L_0960: Label32
L_0960: ldloc.s 11 (BattleTech.ICombatant)
L_0962: ldloc.0
L_0963: ldfld BattleTech.WeaponHitInfo hitInfo
L_0968: ldloc.0
L_0969: ldflda BattleTech.WeaponHitInfo hitInfo
L_096e: ldloc.3
L_096f: call Int32 ShotHitLocation(Int32)
L_0974: ldloc.s 4 (BattleTech.Weapon)
L_0976: ldloc.s 8 (System.Single)
L_0978: ldloc.3
L_0979: ldc.i4.s 12
L_097b: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0980: ldloc.s 11 (BattleTech.ICombatant)
L_0982: ldarg.0
L_0983: ldfld BattleTech.AbstractActor attacker
L_0988: callvirt System.String get_GUID()
L_098d: callvirt Void HandleDeath(System.String)
L_0992: Label29
L_0992: Label30
L_0992: Label31
L_0992: ldarg.0
L_0993: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0998: ldloc.0
L_0999: callvirt Void MessageComplete(MessageCenterMessage)
L_099e: Label33
L_099e: Label34
L_099e: Label0
L_099e: ldarg.0
L_099f: ldloca 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_09a1: ldarga 1
L_09a7: call Void Postfix(AttackSequence, CustomAmmoCategoriesPatches.ImpactAOEState ByRef, MessageCenterMessage ByRef)
L_09ac: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.3
L_0043: brfalse Label1
L_0048: ldarg.3
L_0049: ldc.i4 65536
L_004e: bne.un Label2
L_0053: Label1
L_0053: ldc.i4.0
L_0054: br Label23
L_0059: Label2
L_0059: ldsfld HBS.Logging.ILog attackSequenceLogger
L_005e: callvirt Boolean get_IsDebugEnabled()
L_0063: brfalse Label3
L_0068: ldsfld HBS.Logging.ILog attackSequenceLogger
L_006d: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_0072: ldc.i4.6
L_0073: newarr System.Object
L_0078: dup
L_0079: ldc.i4.0
L_007a: ldarg.2
L_007b: ldfld System.Int32 attackWeaponIndex
L_0080: box System.Int32
L_0085: stelem.ref
L_0086: dup
L_0087: ldc.i4.1
L_0088: ldarga.s 3
L_008a: constrained. BattleTech.ArmorLocation
L_0090: callvirt System.String ToString()
L_0095: stelem.ref
L_0096: dup
L_0097: ldc.i4.2
L_0098: ldarg.s 5
L_009a: box System.Single
L_009f: stelem.ref
L_00a0: dup
L_00a1: ldc.i4.3
L_00a2: ldarg.2
L_00a3: ldfld System.Int32 attackGroupIndex
L_00a8: box System.Int32
L_00ad: stelem.ref
L_00ae: dup
L_00af: ldc.i4.4
L_00b0: ldarg.0
L_00b1: call System.String get_GUID()
L_00b6: stelem.ref
L_00b7: dup
L_00b8: ldc.i4.5
L_00b9: ldarg.s 6
L_00bb: box System.Int32
L_00c0: stelem.ref
L_00c1: call System.String Format(System.String, System.Object[])
L_00c6: callvirt Void LogDebug(System.Object)
L_00cb: Label3
L_00cb: ldarg.0
L_00cc: call BattleTech.CombatGameState get_Combat()
L_00d1: callvirt BattleTech.AttackDirector get_AttackDirector()
L_00d6: ldarg.2
L_00d7: ldfld System.Int32 attackSequenceId
L_00dc: callvirt AttackSequence GetAttackSequence(Int32)
L_00e1: stloc.0
L_00e2: ldsfld HBS.Logging.ILog damageLogger
L_00e7: callvirt Boolean get_IsLogEnabled()
L_00ec: brfalse Label4
L_00f1: ldsfld HBS.Logging.ILog damageLogger
L_00f6: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_00fb: ldc.i4.5
L_00fc: newarr System.Object
L_0101: dup
L_0102: ldc.i4.0
L_0103: ldarg.0
L_0104: callvirt BattleTech.DescriptionDef get_Description()
L_0109: callvirt System.String get_Name()
L_010e: stelem.ref
L_010f: dup
L_0110: ldc.i4.1
L_0111: ldarg.s 5
L_0113: box System.Single
L_0118: stelem.ref
L_0119: dup
L_011a: ldc.i4.2
L_011b: ldarga.s 3
L_011d: constrained. BattleTech.ArmorLocation
L_0123: callvirt System.String ToString()
L_0128: stelem.ref
L_0129: dup
L_012a: ldc.i4.3
L_012b: ldarg.s 4
L_012d: callvirt System.String get_Name()
L_0132: stelem.ref
L_0133: dup
L_0134: ldc.i4.4
L_0135: ldarg.2
L_0136: ldfld System.Int32 attackWeaponIndex
L_013b: box System.Int32
L_0140: stelem.ref
L_0141: call System.String Format(System.String, System.Object[])
L_0146: callvirt Void Log(System.Object)
L_014b: Label4
L_014b: ldloc.0
L_014c: brfalse Label5
L_0151: ldloc.0
L_0152: ldarg.0
L_0153: call System.String get_GUID()
L_0158: callvirt Void FlagAttackDidDamage(System.String)
L_015d: ldarg.0
L_015e: call BattleTech.CombatGameState get_Combat()
L_0163: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0168: ldarg.0
L_0169: call System.String get_GUID()
L_016e: ldarg.1
L_016f: ldarg.2
L_0170: ldarg.3
L_0171: ldarg.s 4
L_0173: ldarg.s 5
L_0175: ldarg.s 6
L_0177: ldarg.s 7
L_0179: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_017e: Label5
L_017e: ldarg.s 5
L_0180: stloc.1
L_0181: ldarg.0
L_0182: ldarg.3
L_0183: call Single GetCurrentArmor(BattleTech.ArmorLocation)
L_0188: stloc.2
L_0189: ldloc.2
L_018a: ldc.r4 0
L_018f: ble.un Label6
L_0194: ldarg.s 5
L_0196: ldloc.2
L_0197: call Single Min(Single, Single)
L_019c: stloc.s 7 (System.Single)
L_019e: ldsfld HBS.Logging.ILog attackLogger
L_01a3: callvirt Boolean get_IsLogEnabled()
L_01a8: brfalse Label7
L_01ad: ldsfld HBS.Logging.ILog attackLogger
L_01b2: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01b7: ldc.i4.5
L_01b8: newarr System.Object
L_01bd: dup
L_01be: ldc.i4.0
L_01bf: ldarg.2
L_01c0: ldfld System.Int32 attackSequenceId
L_01c5: box System.Int32
L_01ca: stelem.ref
L_01cb: dup
L_01cc: ldc.i4.1
L_01cd: ldarg.2
L_01ce: ldfld System.Int32 attackWeaponIndex
L_01d3: box System.Int32
L_01d8: stelem.ref
L_01d9: dup
L_01da: ldc.i4.2
L_01db: ldarg.1
L_01dc: box System.Int32
L_01e1: stelem.ref
L_01e2: dup
L_01e3: ldc.i4.3
L_01e4: ldarga.s 3
L_01e6: constrained. BattleTech.ArmorLocation
L_01ec: callvirt System.String ToString()
L_01f1: stelem.ref
L_01f2: dup
L_01f3: ldc.i4.4
L_01f4: ldloc.s 7 (System.Single)
L_01f6: box System.Single
L_01fb: stelem.ref
L_01fc: call System.String Format(System.String, System.Object[])
L_0201: callvirt Void Log(System.Object)
L_0206: Label7
L_0206: ldsfld HBS.Logging.ILog damageLogger
L_020b: callvirt Boolean get_IsLogEnabled()
L_0210: brfalse Label8
L_0215: ldloc.2
L_0216: ldloc.s 7 (System.Single)
L_0218: sub
L_0219: stloc.s 8 (System.Single)
L_021b: ldsfld HBS.Logging.ILog damageLogger
L_0220: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_0225: ldloc.s 7 (System.Single)
L_0227: box System.Single
L_022c: ldloc.2
L_022d: box System.Single
L_0232: ldloc.s 8 (System.Single)
L_0234: box System.Single
L_0239: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_023e: callvirt Void Log(System.Object)
L_0243: Label8
L_0243: ldarg.0
L_0244: ldarg.3
L_0245: ldloc.s 7 (System.Single)
L_0247: ldarg.2
L_0248: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_024d: ldarg.s 5
L_024f: ldloc.s 7 (System.Single)
L_0251: sub
L_0252: stloc.1
L_0253: Label6
L_0253: ldloc.1
L_0254: ldc.r4 0
L_0259: bgt.un Label9
L_025e: ldarg.0
L_025f: call BattleTech.CombatGameState get_Combat()
L_0264: callvirt MessageCenter get_MessageCenter()
L_0269: ldarg.2
L_026a: ldfld System.String attackerId
L_026f: ldarg.0
L_0270: call System.String get_GUID()
L_0275: ldarg.s 5
L_0277: ldarg.3
L_0278: newobj Void .ctor(String, String, Single, ArmorLocation)
L_027d: callvirt Void PublishMessage(MessageCenterMessage)
L_0282: ldc.i4.1
L_0283: br Label24
L_0288: Label9
L_0288: ldarg.3
L_0289: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_028e: stloc.3
L_028f: call UnityEngine.Vector3 get_one()
L_0294: stloc.s 4 (UnityEngine.Vector3)
L_0296: ldarg.0
L_0297: call BattleTech.MechRepresentation get_GameRep()
L_029c: ldnull
L_029d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02a2: brfalse Label10
L_02a7: ldarg.s 4
L_02a9: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02ae: ldnull
L_02af: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02b4: brfalse Label11
L_02b9: ldarg.s 4
L_02bb: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02c0: ldfld UnityEngine.Transform[] vfxTransforms
L_02c5: ldc.i4.0
L_02c6: ldelem.ref
L_02c7: callvirt UnityEngine.Vector3 get_position()
L_02cc: stloc.s 9 (UnityEngine.Vector3)
L_02ce: ldarg.0
L_02cf: call BattleTech.MechRepresentation get_GameRep()
L_02d4: ldloc.3
L_02d5: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_02da: callvirt UnityEngine.Vector3 get_position()
L_02df: ldloc.s 9 (UnityEngine.Vector3)
L_02e1: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_02e6: stloc.s 4 (UnityEngine.Vector3)
L_02e8: ldloca.s 4 (UnityEngine.Vector3)
L_02ea: call Void Normalize()
L_02ef: ldloca.s 4 (UnityEngine.Vector3)
L_02f1: ldc.r4 0.5
L_02f6: stfld System.Single y
L_02fb: ldloc.s 4 (UnityEngine.Vector3)
L_02fd: ldarg.s 5
L_02ff: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0304: stloc.s 4 (UnityEngine.Vector3)
L_0306: Label10
L_0306: Label11
L_0306: ldarg.0
L_0307: ldloc.3
L_0308: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_030d: stloc.s 5 (System.Single)
L_030f: ldloc.s 5 (System.Single)
L_0311: ldc.r4 0
L_0316: ble.un Label12
L_031b: ldloc.1
L_031c: ldloc.s 5 (System.Single)
L_031e: call Single Min(Single, Single)
L_0323: stloc.s 10 (System.Single)
L_0325: ldsfld HBS.Logging.ILog attackLogger
L_032a: callvirt Boolean get_IsLogEnabled()
L_032f: brfalse Label13
L_0334: ldsfld HBS.Logging.ILog attackLogger
L_0339: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_033e: ldc.i4.5
L_033f: newarr System.Object
L_0344: dup
L_0345: ldc.i4.0
L_0346: ldarg.2
L_0347: ldfld System.Int32 attackSequenceId
L_034c: box System.Int32
L_0351: stelem.ref
L_0352: dup
L_0353: ldc.i4.1
L_0354: ldarg.2
L_0355: ldfld System.Int32 attackWeaponIndex
L_035a: box System.Int32
L_035f: stelem.ref
L_0360: dup
L_0361: ldc.i4.2
L_0362: ldarg.1
L_0363: box System.Int32
L_0368: stelem.ref
L_0369: dup
L_036a: ldc.i4.3
L_036b: ldloca.s 3 (BattleTech.ChassisLocations)
L_036d: constrained. BattleTech.ChassisLocations
L_0373: callvirt System.String ToString()
L_0378: stelem.ref
L_0379: dup
L_037a: ldc.i4.4
L_037b: ldloc.s 10 (System.Single)
L_037d: box System.Single
L_0382: stelem.ref
L_0383: call System.String Format(System.String, System.Object[])
L_0388: callvirt Void Log(System.Object)
L_038d: Label13
L_038d: ldsfld HBS.Logging.ILog damageLogger
L_0392: callvirt Boolean get_IsLogEnabled()
L_0397: brfalse Label14
L_039c: ldloc.s 5 (System.Single)
L_039e: ldloc.s 10 (System.Single)
L_03a0: sub
L_03a1: stloc.s 11 (System.Single)
L_03a3: ldsfld HBS.Logging.ILog damageLogger
L_03a8: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03ad: ldloc.s 10 (System.Single)
L_03af: box System.Single
L_03b4: ldloc.s 5 (System.Single)
L_03b6: box System.Single
L_03bb: ldloc.s 11 (System.Single)
L_03bd: box System.Single
L_03c2: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03c7: callvirt Void Log(System.Object)
L_03cc: Label14
L_03cc: ldarg.0
L_03cd: ldloc.3
L_03ce: ldloc.s 10 (System.Single)
L_03d0: ldarg.2
L_03d1: call Void ApplyStructureStatDamage(BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_03d6: ldloc.1
L_03d7: ldloc.s 10 (System.Single)
L_03d9: sub
L_03da: stloc.1
L_03db: ldarg.0
L_03dc: ldloc.3
L_03dd: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_03e2: brfalse Label15
L_03e7: ldloc.s 10 (System.Single)
L_03e9: ldc.r4 0.01
L_03ee: ble.un Label16
L_03f3: ldarg.0
L_03f4: ldarg.2
L_03f5: ldarg.1
L_03f6: ldloc.3
L_03f7: ldloc.s 4 (UnityEngine.Vector3)
L_03f9: ldarg.s 8
L_03fb: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_0400: br Label17
L_0405: Label12
L_0405: ldarg.0
L_0406: callvirt Boolean get_IsDead()
L_040b: brfalse Label18
L_0410: ldloc.1
L_0411: ldc.r4 0
L_0416: ble.un Label19
L_041b: ldarg.0
L_041c: ldarg.2
L_041d: ldfld System.String attackerId
L_0422: ldloc.3
L_0423: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_0428: ldc.i4.8
L_0429: ldstr "{0}"
L_042e: ldc.r4 1
L_0433: ldloc.1
L_0434: call Single Max(Single, Single)
L_0439: conv.i4
L_043a: box System.Int32
L_043f: call System.String Format(System.String, System.Object)
L_0444: ldarg.0
L_0445: call BattleTech.CombatGameState get_Combat()
L_044a: callvirt BattleTech.CombatGameConstants get_Constants()
L_044f: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0454: ldfld System.Single floatieSizeMedium
L_0459: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_045e: Label15
L_045e: Label16
L_045e: Label17
L_045e: Label18
L_045e: Label19
L_045e: ldarg.0
L_045f: call BattleTech.CombatGameState get_Combat()
L_0464: callvirt MessageCenter get_MessageCenter()
L_0469: ldarg.2
L_046a: ldfld System.String attackerId
L_046f: ldarg.0
L_0470: call System.String get_GUID()
L_0475: ldarg.s 5
L_0477: ldarg.3
L_0478: newobj Void .ctor(String, String, Single, ArmorLocation)
L_047d: callvirt Void PublishMessage(MessageCenterMessage)
L_0482: ldloc.1
L_0483: ldc.r4 0
L_0488: bgt.un Label20
L_048d: ldc.i4.1
L_048e: br Label25
L_0493: Label20
L_0493: ldarg.3
L_0494: ldarg.2
L_0495: ldfld BattleTech.AttackDirection[] attackDirections
L_049a: ldarg.s 6
L_049c: ldelem.i4
L_049d: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04a2: stloc.s 6 (BattleTech.ArmorLocation)
L_04a4: ldsfld HBS.Logging.ILog attackLogger
L_04a9: callvirt Boolean get_IsLogEnabled()
L_04ae: brfalse Label21
L_04b3: ldsfld HBS.Logging.ILog attackLogger
L_04b8: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04bd: ldc.i4.6
L_04be: newarr System.Object
L_04c3: dup
L_04c4: ldc.i4.0
L_04c5: ldarg.2
L_04c6: ldfld System.Int32 attackSequenceId
L_04cb: box System.Int32
L_04d0: stelem.ref
L_04d1: dup
L_04d2: ldc.i4.1
L_04d3: ldarg.2
L_04d4: ldfld System.Int32 attackWeaponIndex
L_04d9: box System.Int32
L_04de: stelem.ref
L_04df: dup
L_04e0: ldc.i4.2
L_04e1: ldarg.1
L_04e2: box System.Int32
L_04e7: stelem.ref
L_04e8: dup
L_04e9: ldc.i4.3
L_04ea: ldloca.s 3 (BattleTech.ChassisLocations)
L_04ec: constrained. BattleTech.ChassisLocations
L_04f2: callvirt System.String ToString()
L_04f7: stelem.ref
L_04f8: dup
L_04f9: ldc.i4.4
L_04fa: ldloc.1
L_04fb: box System.Single
L_0500: stelem.ref
L_0501: dup
L_0502: ldc.i4.5
L_0503: ldloca.s 6 (BattleTech.ArmorLocation)
L_0505: constrained. BattleTech.ArmorLocation
L_050b: callvirt System.String ToString()
L_0510: stelem.ref
L_0511: call System.String Format(System.String, System.Object[])
L_0516: callvirt Void Log(System.Object)
L_051b: Label21
L_051b: ldsfld HBS.Logging.ILog damageLogger
L_0520: callvirt Boolean get_IsLogEnabled()
L_0525: brfalse Label22
L_052a: ldsfld HBS.Logging.ILog damageLogger
L_052f: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_0534: ldloca.s 3 (BattleTech.ChassisLocations)
L_0536: constrained. BattleTech.ChassisLocations
L_053c: callvirt System.String ToString()
L_0541: ldloc.1
L_0542: box System.Single
L_0547: ldloca.s 6 (BattleTech.ArmorLocation)
L_0549: constrained. BattleTech.ArmorLocation
L_054f: callvirt System.String ToString()
L_0554: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0559: callvirt Void Log(System.Object)
L_055e: Label22
L_055e: ldarg.0
L_055f: ldarg.1
L_0560: ldarg.2
L_0561: ldloc.s 6 (BattleTech.ArmorLocation)
L_0563: ldarg.s 4
L_0565: ldloc.1
L_0566: ldarg.s 6
L_0568: ldarg.s 7
L_056a: ldarg.s 8
L_056c: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0571: Label23
L_0571: Label24
L_0571: Label25
L_0571: stloc 12 (System.Boolean)
L_0573: Label0
L_0573: ldloc 12 (System.Boolean)
L_0575: ret
DONE

### Patch WeaponEffect, Void DestroyFlimsyObjects()
L_0000: Local var 0: UnityEngine.Collider[]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: System.Single
L_0000: Local var 4: DestructibleObject
L_0000: Local var 5: BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy
L_0000: Local var 6: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean shotsDestroyFlimsyObjects
L_0011: brtrue Label1
L_0016: br Label7
L_001b: Label1
L_001b: ldarg.0
L_001c: ldfld UnityEngine.Vector3 endPos
L_0021: ldc.r4 15
L_0026: ldc.i4.s -5
L_0028: ldc.i4.1
L_0029: call UnityEngine.Collider[] OverlapSphere(UnityEngine.Vector3, Single, Int32, UnityEngine.QueryTriggerInteraction)
L_002e: stloc.0
L_002f: ldc.i4.0
L_0030: stloc.1
L_0031: br Label2
L_0036: Label6
L_0036: ldloc.0
L_0037: ldloc.1
L_0038: ldelem.ref
L_0039: dup
L_003a: callvirt UnityEngine.Transform get_transform()
L_003f: callvirt UnityEngine.Vector3 get_position()
L_0044: ldarg.0
L_0045: ldfld UnityEngine.Vector3 endPos
L_004a: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_004f: stloc.s 6 (UnityEngine.Vector3)
L_0051: ldloca.s 6 (UnityEngine.Vector3)
L_0053: call UnityEngine.Vector3 get_normalized()
L_0058: stloc.2
L_0059: ldarg.0
L_005a: ldfld BattleTech.Weapon weapon
L_005f: callvirt Single get_DamagePerShot()
L_0064: ldarg.0
L_0065: ldfld BattleTech.CombatGameState Combat
L_006a: callvirt BattleTech.CombatGameConstants get_Constants()
L_006f: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_0074: ldfld System.Single FlimsyDestructionForceMultiplier
L_0079: add
L_007a: stloc.3
L_007b: dup
L_007c: callvirt UnityEngine.GameObject get_gameObject()
L_0081: callvirt DestructibleObject GetComponent[DestructibleObject]()
L_0086: stloc.s 4 (DestructibleObject)
L_0088: callvirt UnityEngine.GameObject get_gameObject()
L_008d: callvirt BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy GetComponent[DestructibleUrbanFlimsy]()
L_0092: stloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_0094: ldloc.s 4 (DestructibleObject)
L_0096: ldnull
L_0097: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_009c: brfalse Label3
L_00a1: ldloc.s 4 (DestructibleObject)
L_00a3: ldfld System.Boolean isFlimsy
L_00a8: brfalse Label4
L_00ad: ldloc.s 4 (DestructibleObject)
L_00af: ldarg.0
L_00b0: ldfld UnityEngine.Vector3 endPos
L_00b5: ldloc.2
L_00b6: ldloc.3
L_00b7: callvirt Void TakeDamage(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_00bc: ldloc.s 4 (DestructibleObject)
L_00be: ldloc.2
L_00bf: ldloc.3
L_00c0: callvirt Void Collapse(UnityEngine.Vector3, Single)
L_00c5: Label3
L_00c5: Label4
L_00c5: ldloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_00c7: ldnull
L_00c8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00cd: brfalse Label5
L_00d2: ldloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_00d4: ldloc.2
L_00d5: ldloc.3
L_00d6: callvirt Void PlayDestruction(UnityEngine.Vector3, Single)
L_00db: Label5
L_00db: ldloc.1
L_00dc: ldc.i4.1
L_00dd: add
L_00de: stloc.1
L_00df: Label2
L_00df: ldloc.1
L_00e0: ldloc.0
L_00e1: ldlen
L_00e2: conv.i4
L_00e3: blt Label6
L_00e8: Label7
L_00e8: Label0
L_00e8: ret
DONE

### Patch MissileEffect, Void PlayImpact()
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.String
L_0000: Local var 5: BattleTech.MapTerrainDataCell
L_0000: Local var 6: AudioSwitch_surface_type
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call Void PlayImpactAudio()
L_0006: ldarg.0
L_0007: ldfld System.Boolean isSRM
L_000c: brfalse Label1
L_0011: ldc.i4 381
L_0016: ldarg.0
L_0017: ldfld AkGameObj projectileAudioObject
L_001c: ldnull
L_001d: ldnull
L_001e: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0023: pop
L_0024: br Label2
L_0029: Label1
L_0029: ldc.i4 366
L_002e: ldarg.0
L_002f: ldfld AkGameObj projectileAudioObject
L_0034: ldnull
L_0035: ldnull
L_0036: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_003b: pop
L_003c: Label2
L_003c: ldarg.0
L_003d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0042: ldarg.0
L_0043: ldfld System.Int32 hitIndex
L_0048: call Boolean DidShotHitAnything(Int32)
L_004d: brfalse Label3
L_0052: ldarg.0
L_0053: ldfld System.String impactVFXBase
L_0058: call Boolean IsNullOrEmpty(System.String)
L_005d: brtrue Label4
L_0062: ldstr ""
L_0067: stloc.0
L_0068: ldc.i4.0
L_0069: stloc.1
L_006a: ldsfld System.String Empty
L_006f: stloc.2
L_0070: ldarg.0
L_0071: ldfld BattleTech.CombatGameState Combat
L_0076: ldarg.0
L_0077: ldflda BattleTech.WeaponHitInfo hitInfo
L_007c: ldarg.0
L_007d: ldfld System.Int32 hitIndex
L_0082: call System.String ShotTargetId(Int32)
L_0087: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_008c: stloc.3
L_008d: ldarg.0
L_008e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0093: ldfld System.Int32[] hitLocations
L_0098: ldarg.0
L_0099: ldfld System.Int32 hitIndex
L_009e: ldelem.i4
L_009f: ldc.i4 65536
L_00a4: bne.un Label5
L_00a9: ldc.i4.1
L_00aa: stloc.1
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.Weapon weapon
L_00b1: ldfld BattleTech.AbstractActor parent
L_00b6: callvirt BattleTech.CombatGameState get_Combat()
L_00bb: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00c0: ldarg.0
L_00c1: ldfld UnityEngine.Vector3 endPos
L_00c6: callvirt BattleTech.MapTerrainDataCell GetCellAt(UnityEngine.Vector3)
L_00cb: stloc.s 5 (BattleTech.MapTerrainDataCell)
L_00cd: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00cf: brfalse Label6
L_00d4: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00d6: callvirt System.String GetVFXNameModifier()
L_00db: stloc.2
L_00dc: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00de: callvirt AudioSwitch_surface_type GetAudioSurfaceType()
L_00e3: stloc.s 6 (AudioSwitch_surface_type)
L_00e5: ldloc.s 6 (AudioSwitch_surface_type)
L_00e7: switch Labels7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
L_012c: br Label23
L_0131: Label13
L_0131: ldstr "_brush"
L_0136: stloc.0
L_0137: br Label24
L_013c: Label14
L_013c: ldstr "_concrete"
L_0141: stloc.0
L_0142: br Label25
L_0147: Label15
L_0147: ldstr "_debris_glass"
L_014c: stloc.0
L_014d: br Label26
L_0152: Label7
L_0152: ldstr "_dirt"
L_0157: stloc.0
L_0158: br Label27
L_015d: Label16
L_015d: ldstr "_gravel"
L_0162: stloc.0
L_0163: br Label28
L_0168: Label17
L_0168: ldstr "_ice"
L_016d: stloc.0
L_016e: br Label29
L_0173: Label18
L_0173: ldstr "_lava"
L_0178: stloc.0
L_0179: br Label30
L_017e: Label9
L_017e: ldstr "_metal"
L_0183: stloc.0
L_0184: br Label31
L_0189: Label19
L_0189: ldstr "_mud"
L_018e: stloc.0
L_018f: br Label32
L_0194: Label20
L_0194: ldstr "_sand"
L_0199: stloc.0
L_019a: br Label33
L_019f: Label11
L_019f: ldstr "_snow"
L_01a4: stloc.0
L_01a5: br Label34
L_01aa: Label21
L_01aa: Label22
L_01aa: ldstr "_water"
L_01af: stloc.0
L_01b0: br Label35
L_01b5: Label12
L_01b5: ldstr "_wood"
L_01ba: stloc.0
L_01bb: br Label36
L_01c0: Label8
L_01c0: Label10
L_01c0: Label23
L_01c0: ldstr "_dirt"
L_01c5: stloc.0
L_01c6: br Label37
L_01cb: Label5
L_01cb: ldloc.3
L_01cc: brfalse Label38
L_01d1: ldarg.0
L_01d2: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d7: ldarg.0
L_01d8: ldfld System.Int32 hitIndex
L_01dd: call Int32 ShotHitLocation(Int32)
L_01e2: ldc.i4 65536
L_01e7: beq Label39
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.Weapon weapon
L_01f2: ldarg.0
L_01f3: ldfld BattleTech.Weapon weapon
L_01f8: ldfld BattleTech.AbstractActor parent
L_01fd: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0202: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_0207: ldloc.3
L_0208: ldarg.0
L_0209: ldflda BattleTech.WeaponHitInfo hitInfo
L_020e: ldarg.0
L_020f: ldfld System.Int32 hitIndex
L_0214: call Int32 ShotHitLocation(Int32)
L_0219: callvirt Single ArmorForLocation(Int32)
L_021e: ble.un Label40
L_0223: ldstr "_crit"
L_0228: stloc.0
L_0229: br Label41
L_022e: Label38
L_022e: Label39
L_022e: Label40
L_022e: ldarg.0
L_022f: ldfld System.String[] impactVFXVariations
L_0234: brfalse Label42
L_0239: ldarg.0
L_023a: ldfld System.String[] impactVFXVariations
L_023f: ldlen
L_0240: brfalse Label43
L_0245: ldc.i4.0
L_0246: ldarg.0
L_0247: ldfld System.String[] impactVFXVariations
L_024c: ldlen
L_024d: conv.i4
L_024e: call Int32 Range(Int32, Int32)
L_0253: stloc.s 7 (System.Int32)
L_0255: ldstr "_"
L_025a: ldarg.0
L_025b: ldfld System.String[] impactVFXVariations
L_0260: ldloc.s 7 (System.Int32)
L_0262: ldelem.ref
L_0263: call System.String Concat(System.String, System.String)
L_0268: stloc.0
L_0269: Label6
L_0269: Label24
L_0269: Label25
L_0269: Label26
L_0269: Label27
L_0269: Label28
L_0269: Label29
L_0269: Label30
L_0269: Label31
L_0269: Label32
L_0269: Label33
L_0269: Label34
L_0269: Label35
L_0269: Label36
L_0269: Label37
L_0269: Label41
L_0269: Label42
L_0269: Label43
L_0269: ldstr "{0}{1}{2}"
L_026e: ldarg.0
L_026f: ldfld System.String impactVFXBase
L_0274: ldloc.0
L_0275: ldloc.2
L_0276: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_027b: stloc.s 4 (System.String)
L_027d: ldarg.0
L_027e: ldloc.s 4 (System.String)
L_0280: call Void SpawnImpactExplosion(System.String)
L_0285: ldloc.1
L_0286: brfalse Label44
L_028b: ldc.r4 20
L_0290: ldc.r4 25
L_0295: call Single Range(Single, Single)
L_029a: ldarg.0
L_029b: ldfld System.Boolean isSRM
L_02a0: brtrue Label45
L_02a5: ldc.r4 1
L_02aa: br Label46
L_02af: Label45
L_02af: ldc.r4 0.75
L_02b4: Label46
L_02b4: mul
L_02b5: stloc.s 8 (System.Single)
L_02b7: ldloca.s 9 (UnityEngine.Vector3)
L_02b9: ldc.r4 0
L_02be: ldc.r4 1
L_02c3: call Single Range(Single, Single)
L_02c8: ldc.r4 0
L_02cd: ldc.r4 0
L_02d2: ldc.r4 1
L_02d7: call Single Range(Single, Single)
L_02dc: call Void .ctor(Single, Single, Single)
L_02e1: call BattleTech.Rendering.FootstepManager get_Instance()
L_02e6: ldarg.0
L_02e7: ldfld UnityEngine.Vector3 endPos
L_02ec: ldloca.s 9 (UnityEngine.Vector3)
L_02ee: call UnityEngine.Vector3 get_normalized()
L_02f3: ldloc.s 8 (System.Single)
L_02f5: ldloc.s 8 (System.Single)
L_02f7: ldloc.s 8 (System.Single)
L_02f9: newobj Void .ctor(Single, Single, Single)
L_02fe: ldc.i4.0
L_02ff: callvirt Boolean AddScorch(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0304: pop
L_0305: Label3
L_0305: Label4
L_0305: Label44
L_0305: ldarg.0
L_0306: callvirt Void PlayImpactDamageOverlay()
L_030b: ldarg.0
L_030c: ldfld UnityEngine.GameObject projectileMeshObject
L_0311: ldnull
L_0312: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0317: brfalse Label47
L_031c: ldarg.0
L_031d: ldfld UnityEngine.GameObject projectileMeshObject
L_0322: ldc.i4.0
L_0323: callvirt Void SetActive(Boolean)
L_0328: Label47
L_0328: ldarg.0
L_0329: ldfld UnityEngine.GameObject projectileLightObject
L_032e: ldnull
L_032f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0334: brfalse Label48
L_0339: ldarg.0
L_033a: ldfld UnityEngine.GameObject projectileLightObject
L_033f: ldc.i4.0
L_0340: callvirt Void SetActive(Boolean)
L_0345: Label48
L_0345: ldarg.0
L_0346: ldc.r4 0
L_034b: callvirt Void OnImpact(Single)
L_0350: ldarg.0
L_0351: call Void Postfix(WeaponEffect)
L_0356: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldsfld HBS.Logging.ILog gameInfoLogger
L_0026: ldstr "CombatGameState Destroyed: {0}"
L_002b: call System.DateTime get_UtcNow()
L_0030: stloc.0
L_0031: ldloca.s 0 (System.DateTime)
L_0033: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0038: call System.String ToString(System.String)
L_003d: call System.String Format(System.String, System.Object)
L_0042: callvirt Void Log(System.Object)
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: brfalse Label1
L_0052: ldarg.0
L_0053: call MessageCenter get_MessageCenter()
L_0058: newobj Void .ctor()
L_005d: dup
L_005e: call BattleTech.GameInstance get_BattleTechGame()
L_0063: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0068: callvirt Boolean IsNetworkGameActive()
L_006d: callvirt Void set_IsNetworkGame(Boolean)
L_0072: callvirt Void PublishMessage(MessageCenterMessage)
L_0077: Label1
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: brfalse Label2
L_0082: ldarg.0
L_0083: call BattleTech.StackManager get_StackManager()
L_0088: callvirt Void OnCombatGameDestroyed()
L_008d: ldarg.0
L_008e: ldnull
L_008f: call Void set_StackManager(BattleTech.StackManager)
L_0094: Label2
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: brfalse Label3
L_009f: ldarg.0
L_00a0: call BattleTech.TurnDirector get_TurnDirector()
L_00a5: callvirt Void OnCombatGameDestroyed()
L_00aa: Label3
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: brfalse Label4
L_00b5: ldarg.0
L_00b6: call BattleTech.InvocationHandler get_InvocationHandler()
L_00bb: callvirt Void OnCombatGameDestroyed()
L_00c0: Label4
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: brfalse Label5
L_00cb: ldarg.0
L_00cc: call MessageCenter get_MessageCenter()
L_00d1: ldc.i4.3
L_00d2: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00d7: Label5
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: brfalse Label6
L_00e2: ldarg.0
L_00e3: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00e8: callvirt Void Dispose()
L_00ed: Label6
L_00ed: call Boolean get_HasInstance()
L_00f2: brfalse Label7
L_00f7: call HBS.DebugConsole.DebugConsole get_Instance()
L_00fc: ldarg.0
L_00fd: ldftn Void DebugConsoleOnBeforeDump()
L_0103: newobj Void .ctor(Object, IntPtr)
L_0108: callvirt Void remove_OnBeforeDump(DumpHandler)
L_010d: Label7
L_010d: call Boolean get_HasInstance()
L_0112: brfalse Label8
L_0117: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_011c: callvirt Void OnCombatSceneEnd()
L_0121: Label8
L_0121: ldnull
L_0122: call Void set_destructionConstantsComponent(DestructionConstants)
L_0127: call Void ClearStaticData()
L_012c: call Void ClearStaticData()
L_0131: call Void ClearStaticData()
L_0136: call Void ClearStaticData()
L_013b: call Void ClearStaticData()
L_0140: ldsfld HBS.Logging.ILog gameInfoLogger
L_0145: ldstr "CombatGameState destroyed: {0}"
L_014a: call System.DateTime get_UtcNow()
L_014f: stloc.0
L_0150: ldloca.s 0 (System.DateTime)
L_0152: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0157: call System.String ToString(System.String)
L_015c: call System.String Format(System.String, System.Object)
L_0161: callvirt Void Log(System.Object)
L_0166: Label0
L_0166: ldarg.0
L_0167: call Void Postfix(BattleTech.CombatGameState)
L_016c: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateRandomCache()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single[][]
L_0000: Local var 5: System.Int32[]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Int32[][]
L_0000: Local var 13: System.Int32[]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Int32[]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32[]
L_0000: Local var 20: System.Int32
L_0000: Local var 21: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(AttackSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0011: callvirt Int32 get_Count()
L_0016: stloc.0
L_0017: ldarg.0
L_0018: ldloc.0
L_0019: newarr System.Single[][]
L_001e: stfld System.Single[][][] randomCache
L_0023: ldarg.0
L_0024: ldloc.0
L_0025: newarr System.Int32[]
L_002a: stfld System.Int32[][] randomCacheValuesUsed
L_002f: ldc.i4.0
L_0030: stloc.1
L_0031: br Label1
L_0036: Label4
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_003c: ldloc.1
L_003d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0042: stloc.2
L_0043: ldloc.2
L_0044: callvirt Int32 get_Count()
L_0049: stloc.3
L_004a: ldloc.3
L_004b: newarr System.Single[]
L_0050: stloc.s 4 (System.Single[][])
L_0052: ldloc.3
L_0053: newarr System.Int32
L_0058: stloc.s 5 (System.Int32[])
L_005a: ldc.i4.0
L_005b: stloc.s 6 (System.Int32)
L_005d: br Label2
L_0062: Label3
L_0062: ldloc.2
L_0063: ldloc.s 6 (System.Int32)
L_0065: callvirt BattleTech.Weapon get_Item(Int32)
L_006a: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_006f: stloc.s 7 (System.Int32)
L_0071: ldc.i4.6
L_0072: ldloc.s 7 (System.Int32)
L_0074: mul
L_0075: ldc.i4.2
L_0076: add
L_0077: ldc.i4.5
L_0078: add
L_0079: stloc.s 8 (System.Int32)
L_007b: ldloc.s 4 (System.Single[][])
L_007d: ldloc.s 6 (System.Int32)
L_007f: ldarg.0
L_0080: call BattleTech.AttackDirector get_Director()
L_0085: callvirt BattleTech.CombatGameState get_Combat()
L_008a: callvirt NetworkRandom get_NetworkRandom()
L_008f: ldloc.s 8 (System.Int32)
L_0091: callvirt Single[] GetRandomCache(Int32)
L_0096: stelem.ref
L_0097: ldloc.s 5 (System.Int32[])
L_0099: ldloc.s 6 (System.Int32)
L_009b: ldc.i4.0
L_009c: stelem.i4
L_009d: ldloc.s 6 (System.Int32)
L_009f: ldc.i4.1
L_00a0: add
L_00a1: stloc.s 6 (System.Int32)
L_00a3: Label2
L_00a3: ldloc.s 6 (System.Int32)
L_00a5: ldloc.3
L_00a6: blt Label3
L_00ab: ldarg.0
L_00ac: ldfld System.Single[][][] randomCache
L_00b1: ldloc.1
L_00b2: ldloc.s 4 (System.Single[][])
L_00b4: stelem.ref
L_00b5: ldarg.0
L_00b6: ldfld System.Int32[][] randomCacheValuesUsed
L_00bb: ldloc.1
L_00bc: ldloc.s 5 (System.Int32[])
L_00be: stelem.ref
L_00bf: ldloc.1
L_00c0: ldc.i4.1
L_00c1: add
L_00c2: stloc.1
L_00c3: Label1
L_00c3: ldloc.1
L_00c4: ldloc.0
L_00c5: blt Label4
L_00ca: ldarg.0
L_00cb: ldloc.0
L_00cc: newarr System.Int32[][]
L_00d1: stfld System.Int32[][][] varianceCache
L_00d6: ldarg.0
L_00d7: ldloc.0
L_00d8: newarr System.Int32[]
L_00dd: stfld System.Int32[][] varianceCacheValuesUsed
L_00e2: ldc.i4.0
L_00e3: stloc.s 9 (System.Int32)
L_00e5: br Label5
L_00ea: Label12
L_00ea: ldarg.0
L_00eb: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_00f0: ldloc.s 9 (System.Int32)
L_00f2: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_00f7: stloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00f9: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00fb: callvirt Int32 get_Count()
L_0100: stloc.s 11 (System.Int32)
L_0102: ldloc.s 11 (System.Int32)
L_0104: newarr System.Int32[]
L_0109: stloc.s 12 (System.Int32[][])
L_010b: ldloc.s 11 (System.Int32)
L_010d: newarr System.Int32
L_0112: stloc.s 13 (System.Int32[])
L_0114: ldc.i4.0
L_0115: stloc.s 14 (System.Int32)
L_0117: br Label6
L_011c: Label11
L_011c: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_011e: ldloc.s 14 (System.Int32)
L_0120: callvirt BattleTech.Weapon get_Item(Int32)
L_0125: dup
L_0126: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_012b: stloc.s 15 (System.Int32)
L_012d: callvirt Int32 get_DamageVariance()
L_0132: stloc.s 16 (System.Int32)
L_0134: ldloc.s 15 (System.Int32)
L_0136: newarr System.Int32
L_013b: stloc.s 17 (System.Int32[])
L_013d: ldc.i4.0
L_013e: stloc.s 18 (System.Int32)
L_0140: br Label7
L_0145: Label10
L_0145: ldarg.0
L_0146: call BattleTech.AttackDirector get_Director()
L_014b: callvirt BattleTech.CombatGameState get_Combat()
L_0150: callvirt NetworkRandom get_NetworkRandom()
L_0155: ldloc.s 16 (System.Int32)
L_0157: callvirt Int32[] GetFudgeCache(Int32)
L_015c: stloc.s 19 (System.Int32[])
L_015e: ldc.i4.0
L_015f: stloc.s 20 (System.Int32)
L_0161: ldc.i4.0
L_0162: stloc.s 21 (System.Int32)
L_0164: br Label8
L_0169: Label9
L_0169: ldloc.s 20 (System.Int32)
L_016b: ldloc.s 19 (System.Int32[])
L_016d: ldloc.s 21 (System.Int32)
L_016f: ldelem.i4
L_0170: add
L_0171: stloc.s 20 (System.Int32)
L_0173: ldloc.s 21 (System.Int32)
L_0175: ldc.i4.1
L_0176: add
L_0177: stloc.s 21 (System.Int32)
L_0179: Label8
L_0179: ldloc.s 21 (System.Int32)
L_017b: ldloc.s 16 (System.Int32)
L_017d: blt Label9
L_0182: ldloc.s 17 (System.Int32[])
L_0184: ldloc.s 18 (System.Int32)
L_0186: ldloc.s 20 (System.Int32)
L_0188: stelem.i4
L_0189: ldloc.s 18 (System.Int32)
L_018b: ldc.i4.1
L_018c: add
L_018d: stloc.s 18 (System.Int32)
L_018f: Label7
L_018f: ldloc.s 18 (System.Int32)
L_0191: ldloc.s 15 (System.Int32)
L_0193: blt Label10
L_0198: ldloc.s 12 (System.Int32[][])
L_019a: ldloc.s 14 (System.Int32)
L_019c: ldloc.s 17 (System.Int32[])
L_019e: stelem.ref
L_019f: ldloc.s 13 (System.Int32[])
L_01a1: ldloc.s 14 (System.Int32)
L_01a3: ldc.i4.0
L_01a4: stelem.i4
L_01a5: ldloc.s 14 (System.Int32)
L_01a7: ldc.i4.1
L_01a8: add
L_01a9: stloc.s 14 (System.Int32)
L_01ab: Label6
L_01ab: ldloc.s 14 (System.Int32)
L_01ad: ldloc.s 11 (System.Int32)
L_01af: blt Label11
L_01b4: ldarg.0
L_01b5: ldfld System.Int32[][][] varianceCache
L_01ba: ldloc.s 9 (System.Int32)
L_01bc: ldloc.s 12 (System.Int32[][])
L_01be: stelem.ref
L_01bf: ldarg.0
L_01c0: ldfld System.Int32[][] varianceCacheValuesUsed
L_01c5: ldloc.s 9 (System.Int32)
L_01c7: ldloc.s 13 (System.Int32[])
L_01c9: stelem.ref
L_01ca: ldloc.s 9 (System.Int32)
L_01cc: ldc.i4.1
L_01cd: add
L_01ce: stloc.s 9 (System.Int32)
L_01d0: Label5
L_01d0: ldloc.s 9 (System.Int32)
L_01d2: ldloc.0
L_01d3: blt Label12
L_01d8: Label0
L_01d8: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldarg.0
L_0022: call Boolean Prefix(BattleTech.CombatGameState)
L_0027: brfalse Label0
L_002c: ldsfld HBS.Logging.ILog gameInfoLogger
L_0031: ldstr "CombatGameState Destroyed: {0}"
L_0036: call System.DateTime get_UtcNow()
L_003b: stloc.0
L_003c: ldloca.s 0 (System.DateTime)
L_003e: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0043: call System.String ToString(System.String)
L_0048: call System.String Format(System.String, System.Object)
L_004d: callvirt Void Log(System.Object)
L_0052: ldarg.0
L_0053: call MessageCenter get_MessageCenter()
L_0058: brfalse Label1
L_005d: ldarg.0
L_005e: call MessageCenter get_MessageCenter()
L_0063: newobj Void .ctor()
L_0068: dup
L_0069: call BattleTech.GameInstance get_BattleTechGame()
L_006e: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0073: callvirt Boolean IsNetworkGameActive()
L_0078: callvirt Void set_IsNetworkGame(Boolean)
L_007d: callvirt Void PublishMessage(MessageCenterMessage)
L_0082: Label1
L_0082: ldarg.0
L_0083: call BattleTech.StackManager get_StackManager()
L_0088: brfalse Label2
L_008d: ldarg.0
L_008e: call BattleTech.StackManager get_StackManager()
L_0093: callvirt Void OnCombatGameDestroyed()
L_0098: ldarg.0
L_0099: ldnull
L_009a: call Void set_StackManager(BattleTech.StackManager)
L_009f: Label2
L_009f: ldarg.0
L_00a0: call BattleTech.TurnDirector get_TurnDirector()
L_00a5: brfalse Label3
L_00aa: ldarg.0
L_00ab: call BattleTech.TurnDirector get_TurnDirector()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label3
L_00b5: ldarg.0
L_00b6: call BattleTech.InvocationHandler get_InvocationHandler()
L_00bb: brfalse Label4
L_00c0: ldarg.0
L_00c1: call BattleTech.InvocationHandler get_InvocationHandler()
L_00c6: callvirt Void OnCombatGameDestroyed()
L_00cb: Label4
L_00cb: ldarg.0
L_00cc: call MessageCenter get_MessageCenter()
L_00d1: brfalse Label5
L_00d6: ldarg.0
L_00d7: call MessageCenter get_MessageCenter()
L_00dc: ldc.i4.3
L_00dd: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00e2: Label5
L_00e2: ldarg.0
L_00e3: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00e8: brfalse Label6
L_00ed: ldarg.0
L_00ee: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00f3: callvirt Void Dispose()
L_00f8: Label6
L_00f8: call Boolean get_HasInstance()
L_00fd: brfalse Label7
L_0102: call HBS.DebugConsole.DebugConsole get_Instance()
L_0107: ldarg.0
L_0108: ldftn Void DebugConsoleOnBeforeDump()
L_010e: newobj Void .ctor(Object, IntPtr)
L_0113: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0118: Label7
L_0118: call Boolean get_HasInstance()
L_011d: brfalse Label8
L_0122: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0127: callvirt Void OnCombatSceneEnd()
L_012c: Label8
L_012c: ldnull
L_012d: call Void set_destructionConstantsComponent(DestructionConstants)
L_0132: call Void ClearStaticData()
L_0137: call Void ClearStaticData()
L_013c: call Void ClearStaticData()
L_0141: call Void ClearStaticData()
L_0146: call Void ClearStaticData()
L_014b: ldsfld HBS.Logging.ILog gameInfoLogger
L_0150: ldstr "CombatGameState destroyed: {0}"
L_0155: call System.DateTime get_UtcNow()
L_015a: stloc.0
L_015b: ldloca.s 0 (System.DateTime)
L_015d: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0162: call System.String ToString(System.String)
L_0167: call System.String Format(System.String, System.Object)
L_016c: callvirt Void Log(System.Object)
L_0171: Label0
L_0171: ldarg.0
L_0172: call Void Postfix(BattleTech.CombatGameState)
L_0177: ret
DONE

### Patch BattleTech.UI.SelectionState, Boolean get_CanDeselect()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean Prefix(BattleTech.UI.SelectionState, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call BattleTech.CombatGameState get_Combat()
L_0019: callvirt BattleTech.TurnDirector get_TurnDirector()
L_001e: callvirt Boolean get_IsInterleaved()
L_0023: brfalse Label1
L_0028: ldarg.0
L_0029: call BattleTech.AbstractActor get_SelectedActor()
L_002e: callvirt Boolean get_HasBegunActivation()
L_0033: brtrue Label2
L_0038: ldarg.0
L_0039: call BattleTech.AbstractActor get_SelectedActor()
L_003e: callvirt Boolean get_StoodUpThisRound()
L_0043: ldc.i4.0
L_0044: ceq
L_0046: br Label5
L_004b: Label2
L_004b: ldc.i4.0
L_004c: br Label6
L_0051: Label1
L_0051: ldarg.0
L_0052: call BattleTech.AbstractActor get_SelectedActor()
L_0057: callvirt Boolean get_HasBegunActivation()
L_005c: brfalse Label3
L_0061: ldarg.0
L_0062: call BattleTech.IStackSequence get_Orders()
L_0067: brfalse Label4
L_006c: ldarg.0
L_006d: callvirt Boolean get_ConsumesFiring()
L_0072: br Label7
L_0077: Label4
L_0077: ldc.i4.0
L_0078: br Label8
L_007d: Label3
L_007d: ldc.i4.1
L_007e: Label5
L_007e: Label6
L_007e: Label7
L_007e: Label8
L_007e: stloc 0 (System.Boolean)
L_007f: Label0
L_007f: ldloc 0 (System.Boolean)
L_0080: ret
DONE

### Patch BattleTech.UI.SelectionStateMoveBase, Boolean CreateMoveOrders(Boolean)
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: MessageCenterMessage
L_0000: Local var 2: System.Boolean
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label8
L_0018: Label1
L_0018: ldnull
L_0019: stloc.1
L_001a: ldarg.0
L_001b: call BattleTech.UI.CombatHUD get_HUD()
L_0020: callvirt BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_0025: ldc.i4.2
L_0026: callvirt Boolean ConfirmAbilities(ActivationTiming)
L_002b: stloc.2
L_002c: ldloc.2
L_002d: brtrue Label2
L_0032: ldarg.0
L_0033: call BattleTech.UI.CombatHUD get_HUD()
L_0038: callvirt BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_003d: callvirt BattleTech.UI.CombatHUDActionButton get_DoneWithMechButton()
L_0042: callvirt Boolean get_IsTutorialSuppressed()
L_0047: brfalse Label3
L_004c: ldarg.0
L_004d: call BattleTech.FiringPreviewManager get_FiringPreview()
L_0052: ldarg.0
L_0053: call BattleTech.AbstractActor get_SelectedActor()
L_0058: ldarg.0
L_0059: callvirt UnityEngine.Vector3 get_PreviewPos()
L_005e: ldarg.0
L_005f: callvirt UnityEngine.Quaternion get_PreviewRot()
L_0064: ldc.i4.0
L_0065: ldc.i4.0
L_0066: callvirt Void Recalc(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean)
L_006b: ldarg.0
L_006c: call BattleTech.FiringPreviewManager get_FiringPreview()
L_0071: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] get_AllPossibleTargets()
L_0076: callvirt Int32 get_Count()
L_007b: ldc.i4.1
L_007c: bge Label4
L_0081: ldc.i4.1
L_0082: stloc.2
L_0083: Label2
L_0083: Label3
L_0083: Label4
L_0083: ldarg.1
L_0084: brfalse Label5
L_0089: ldloc.0
L_008a: ldnull
L_008b: ldloc.2
L_008c: newobj Void .ctor(Mech, ICombatant, Boolean)
L_0091: stloc.1
L_0092: br Label6
L_0097: Label5
L_0097: ldloc.0
L_0098: ldloc.2
L_0099: newobj Void .ctor(Mech, Boolean)
L_009e: stloc.1
L_009f: Label6
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: call BattleTech.CombatGameState get_Combat()
L_00a6: callvirt MessageCenter get_MessageCenter()
L_00ab: ldloc.1
L_00ac: call Void PublishInvocation(MessageCenter, MessageCenterMessage)
L_00b1: ldarg.0
L_00b2: callvirt Void OnInactivate()
L_00b7: ldarg.0
L_00b8: call BattleTech.UI.CombatHUD get_HUD()
L_00bd: ldc.i4 218
L_00c2: callvirt Void PlayAudioEvent(AudioEventList_ui)
L_00c7: ldarg.0
L_00c8: call BattleTech.CombatGameState get_Combat()
L_00cd: callvirt BattleTech.TurnDirector get_TurnDirector()
L_00d2: call Boolean IsInterleaved(BattleTech.TurnDirector)
L_00d7: brtrue Label7
L_00dc: ldarg.0
L_00dd: call BattleTech.UI.CombatHUD get_HUD()
L_00e2: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00e7: callvirt Void AutoSelectActor()
L_00ec: Label7
L_00ec: ldc.i4.1
L_00ed: Label8
L_00ed: ret
DONE

### Patch BattleTech.AbstractActorMovementInvocation, Boolean Invoke(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.ActorMovementSequence
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "Invoking a MOVE!"
L_000a: callvirt Void Log(System.Object)
L_000f: ldarg.1
L_0010: ldarg.0
L_0011: call System.String get_ActorGUID()
L_0016: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_001b: stloc.0
L_001c: ldloc.0
L_001d: brtrue Label1
L_0022: ldsfld HBS.Logging.ILog logger
L_0027: ldstr "MechMovement.Invoke Actor with GUID {0} not found!"
L_002c: ldarg.0
L_002d: call System.String get_ActorGUID()
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void LogError(System.Object)
L_003c: ldc.i4.0
L_003d: br Label6
L_0042: Label1
L_0042: ldnull
L_0043: stloc.1
L_0044: ldarg.0
L_0045: call System.String get_MeleeTargetGUID()
L_004a: call Boolean IsNullOrEmpty(System.String)
L_004f: brtrue Label2
L_0054: ldarg.1
L_0055: ldarg.0
L_0056: call System.String get_MeleeTargetGUID()
L_005b: ldc.i4.0
L_005c: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0061: stloc.1
L_0062: ldloc.1
L_0063: brtrue Label3
L_0068: ldsfld HBS.Logging.ILog logger
L_006d: ldstr "MechMovement.Invoke ICombatant with GUID {0} not found!"
L_0072: ldarg.0
L_0073: call System.String get_MeleeTargetGUID()
L_0078: call System.String Format(System.String, System.Object)
L_007d: callvirt Void LogError(System.Object)
L_0082: ldc.i4.0
L_0083: br Label7
L_0088: Label2
L_0088: Label3
L_0088: ldarg.1
L_0089: callvirt BattleTech.TurnDirector get_TurnDirector()
L_008e: callvirt Boolean get_IsInterleaved()
L_0093: brtrue Label4
L_0098: ldarg.0
L_0099: call BattleTech.MoveType get_MoveType()
L_009e: ldc.i4.2
L_009f: beq Label5
L_00a4: ldloc.0
L_00a5: ldc.i4.1
L_00a6: call Void AutoBrace(BattleTech.AbstractActor, Boolean)
L_00ab: Label4
L_00ab: Label5
L_00ab: ldloc.0
L_00ac: ldarg.0
L_00ad: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_00b2: ldarg.0
L_00b3: call UnityEngine.Vector3 get_FinalOrientation()
L_00b8: ldarg.0
L_00b9: call BattleTech.MoveType get_MoveType()
L_00be: ldloc.1
L_00bf: ldarg.0
L_00c0: call Boolean get_AbilityConsumesFiring()
L_00c5: newobj Void .ctor(AbstractActor, List`1, Vector3, MoveType, ICombatant, Boolean)
L_00ca: stloc.2
L_00cb: ldarg.0
L_00cc: ldarg.1
L_00cd: callvirt MessageCenter get_MessageCenter()
L_00d2: ldloc.2
L_00d3: ldarg.0
L_00d4: call Void PublishStackSequence(MessageCenter, BattleTech.IStackSequence, BattleTech.InvocationMessage)
L_00d9: ldc.i4.1
L_00da: Label6
L_00da: Label7
L_00da: ret
DONE

### Patch BattleTech.AbstractActor, Void ResolveAttackSequence(System.String, Int32, Int32, BattleTech.AttackDirection)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Effect, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.AbstractActor)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldarg 1
L_0012: ldarg 2
L_0018: ldarg 3
L_001e: ldarg 4
L_0024: call Boolean Prefix(BattleTech.AbstractActor, System.String, Int32, Int32, BattleTech.AttackDirection)
L_0029: brfalse Label0
L_002e: ldarg.0
L_002f: call Int32 get_EvasivePipsCurrent()
L_0034: stloc.0
L_0035: ldarg.0
L_0036: ldc.i4.1
L_0037: call Void ConsumeEvasivePip(Boolean)
L_003c: ldarg.0
L_003d: call Int32 get_EvasivePipsCurrent()
L_0042: ldloc.0
L_0043: bge Label1
L_0048: ldarg.0
L_0049: callvirt Boolean get_IsDead()
L_004e: brtrue Label2
L_0053: ldarg.0
L_0054: call Boolean get_IsFlaggedForDeath()
L_0059: brtrue Label3
L_005e: ldarg.0
L_005f: call BattleTech.CombatGameState get_Combat()
L_0064: callvirt MessageCenter get_MessageCenter()
L_0069: ldarg.0
L_006a: call System.String get_GUID()
L_006f: ldarg.0
L_0070: call System.String get_GUID()
L_0075: ldstr "-1 EVASION"
L_007a: ldc.i4.2
L_007b: newobj Void .ctor(String, String, String, MessageNature)
L_0080: callvirt Void PublishMessage(MessageCenterMessage)
L_0085: Label1
L_0085: Label2
L_0085: Label3
L_0085: ldarg.0
L_0086: call BattleTech.CombatGameState get_Combat()
L_008b: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0090: ldarg.2
L_0091: callvirt AttackSequence GetAttackSequence(Int32)
L_0096: stloc.1
L_0097: ldloc.1
L_0098: brfalse Label4
L_009d: ldloc.1
L_009e: ldarg.0
L_009f: call System.String get_GUID()
L_00a4: callvirt Boolean GetAttackDidDamage(System.String)
L_00a9: brtrue Label5
L_00ae: br Label13
L_00b3: Label5
L_00b3: ldarg.0
L_00b4: call BattleTech.CombatGameState get_Combat()
L_00b9: callvirt BattleTech.EffectManager get_EffectManager()
L_00be: ldarg.0
L_00bf: callvirt System.Collections.Generic.List`1[BattleTech.Effect] GetAllEffectsTargeting(System.Object)
L_00c4: ldsfld System.Predicate`1[BattleTech.Effect] <>9__690_0
L_00c9: dup
L_00ca: brtrue Label6
L_00cf: pop
L_00d0: ldsfld BattleTech.AbstractActor+<>c <>9
L_00d5: ldftn Boolean <ResolveAttackSequence>b__690_0(BattleTech.Effect)
L_00db: newobj Void .ctor(Object, IntPtr)
L_00e0: dup
L_00e1: stsfld System.Predicate`1[BattleTech.Effect] <>9__690_0
L_00e6: Label6
L_00e6: callvirt System.Collections.Generic.List`1[BattleTech.Effect] FindAll(System.Predicate`1[BattleTech.Effect])
L_00eb: stloc.2
L_00ec: ldc.i4.0
L_00ed: stloc.3
L_00ee: br Label7
L_00f3: Label8
L_00f3: ldloc.2
L_00f4: ldloc.3
L_00f5: callvirt BattleTech.Effect get_Item(Int32)
L_00fa: ldloc.1
L_00fb: ldfld BattleTech.AbstractActor attacker
L_0100: ldarg.0
L_0101: callvirt Void OnEffectTakeDamage(BattleTech.AbstractActor, BattleTech.AbstractActor)
L_0106: ldloc.3
L_0107: ldc.i4.1
L_0108: add
L_0109: stloc.3
L_010a: Label7
L_010a: ldloc.3
L_010b: ldloc.2
L_010c: callvirt Int32 get_Count()
L_0111: blt Label8
L_0116: ldloc.1
L_0117: ldfld System.Boolean isMelee
L_011c: brfalse Label9
L_0121: ldloc.1
L_0122: ldfld BattleTech.AbstractActor attacker
L_0127: callvirt BattleTech.StatCollection get_StatCollection()
L_012c: ldstr "MeleeHitPushBackPhases"
L_0131: callvirt Int32 GetValue[Int32](System.String)
L_0136: stloc.s 4 (System.Int32)
L_0138: ldloc.s 4 (System.Int32)
L_013a: ldc.i4.0
L_013b: ble Label10
L_0140: ldc.i4.0
L_0141: stloc.s 5 (System.Int32)
L_0143: br Label11
L_0148: Label12
L_0148: ldarg.0
L_0149: ldarg.1
L_014a: ldarg.3
L_014b: ldc.i4.0
L_014c: call Void ForceUnitOnePhaseDown(System.String, Int32, Boolean)
L_0151: ldloc.s 5 (System.Int32)
L_0153: ldc.i4.1
L_0154: add
L_0155: stloc.s 5 (System.Int32)
L_0157: Label11
L_0157: ldloc.s 5 (System.Int32)
L_0159: ldloc.s 4 (System.Int32)
L_015b: blt Label12
L_0160: Label4
L_0160: Label9
L_0160: Label10
L_0160: Label13
L_0160: Label0
L_0160: ldarg.0
L_0161: ldarg 1
L_0167: ldarg 2
L_016d: ldarg 3
L_0173: ldarg 4
L_0179: call Void Postfix(BattleTech.AbstractActor, System.String, Int32, Int32, BattleTech.AttackDirection)
L_017e: ret
DONE

### Patch BattleTech.UI.SelectionState, BattleTech.UI.SelectionState GetNewSelectionStateByType(BattleTech.UI.SelectionType, BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDActionButton, BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.UI.SelectionState
L_0000: ldnull
L_0001: stloc 0 (BattleTech.UI.SelectionState)
L_0002: ldarg 0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldloca 0 (BattleTech.UI.SelectionState)
L_0022: call Boolean Prefix(BattleTech.UI.SelectionType, BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDActionButton, BattleTech.AbstractActor, BattleTech.UI.SelectionState ByRef)
L_0027: brfalse Label0
L_002c: ldarg.0
L_002d: switch Labels1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33
L_00b6: br Label34
L_00bb: Label11
L_00bb: ldarg.1
L_00bc: ldarg.2
L_00bd: ldarg.3
L_00be: ldarg.s 4
L_00c0: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00c5: br Label35
L_00ca: Label2
L_00ca: ldarg.1
L_00cb: ldarg.2
L_00cc: ldarg.3
L_00cd: ldarg.s 4
L_00cf: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00d4: br Label36
L_00d9: Label8
L_00d9: ldarg.1
L_00da: ldarg.2
L_00db: ldarg.3
L_00dc: ldarg.s 4
L_00de: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00e3: br Label37
L_00e8: Label9
L_00e8: ldarg.1
L_00e9: ldarg.2
L_00ea: ldarg.3
L_00eb: ldarg.s 4
L_00ed: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00f2: br Label38
L_00f7: Label10
L_00f7: ldarg.1
L_00f8: ldarg.2
L_00f9: ldarg.3
L_00fa: ldarg.s 4
L_00fc: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0101: br Label39
L_0106: Label18
L_0106: ldarg.1
L_0107: ldarg.2
L_0108: ldarg.3
L_0109: ldarg.s 4
L_010b: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0110: br Label40
L_0115: Label21
L_0115: ldarg.1
L_0116: ldarg.2
L_0117: ldarg.3
L_0118: ldarg.s 4
L_011a: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_011f: br Label41
L_0124: Label32
L_0124: ldarg.1
L_0125: ldarg.2
L_0126: ldarg.3
L_0127: ldarg.s 4
L_0129: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_012e: br Label42
L_0133: Label22
L_0133: ldarg.1
L_0134: ldarg.2
L_0135: ldarg.3
L_0136: ldarg.s 4
L_0138: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_013d: br Label43
L_0142: Label4
L_0142: ldarg.1
L_0143: ldarg.2
L_0144: ldarg.3
L_0145: ldarg.s 4
L_0147: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_014c: br Label44
L_0151: Label6
L_0151: ldarg.1
L_0152: ldarg.2
L_0153: ldarg.3
L_0154: ldarg.s 4
L_0156: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_015b: br Label45
L_0160: Label7
L_0160: ldarg.1
L_0161: ldarg.2
L_0162: ldarg.3
L_0163: ldarg.s 4
L_0165: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_016a: br Label46
L_016f: Label23
L_016f: ldarg.1
L_0170: ldarg.2
L_0171: ldarg.3
L_0172: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0177: br Label47
L_017c: Label24
L_017c: ldarg.1
L_017d: ldarg.2
L_017e: ldarg.3
L_017f: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0184: br Label48
L_0189: Label16
L_0189: ldarg.1
L_018a: ldarg.2
L_018b: ldarg.3
L_018c: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0191: br Label49
L_0196: Label19
L_0196: ldarg.1
L_0197: ldarg.2
L_0198: ldarg.3
L_0199: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_019e: br Label50
L_01a3: Label17
L_01a3: ldarg.1
L_01a4: ldarg.2
L_01a5: ldarg.3
L_01a6: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01ab: br Label51
L_01b0: Label26
L_01b0: ldarg.1
L_01b1: ldarg.2
L_01b2: ldarg.3
L_01b3: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01b8: br Label52
L_01bd: Label25
L_01bd: ldarg.1
L_01be: ldarg.2
L_01bf: ldarg.3
L_01c0: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01c5: br Label53
L_01ca: Label27
L_01ca: ldarg.1
L_01cb: ldarg.2
L_01cc: ldarg.3
L_01cd: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01d2: br Label54
L_01d7: Label28
L_01d7: ldarg.1
L_01d8: ldarg.2
L_01d9: ldarg.3
L_01da: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01df: br Label55
L_01e4: Label29
L_01e4: ldarg.1
L_01e5: ldarg.2
L_01e6: ldarg.3
L_01e7: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01ec: br Label56
L_01f1: Label3
L_01f1: ldarg.1
L_01f2: ldarg.2
L_01f3: ldarg.3
L_01f4: ldarg.s 4
L_01f6: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_01fb: br Label57
L_0200: Label31
L_0200: ldarg.1
L_0201: ldarg.2
L_0202: ldarg.3
L_0203: ldarg.s 4
L_0205: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_020a: br Label58
L_020f: Label33
L_020f: ldarg.1
L_0210: ldarg.2
L_0211: ldarg.3
L_0212: ldarg.s 4
L_0214: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0219: br Label59
L_021e: Label1
L_021e: ldnull
L_021f: br Label60
L_0224: Label5
L_0224: Label12
L_0224: Label13
L_0224: Label14
L_0224: Label15
L_0224: Label20
L_0224: Label30
L_0224: Label34
L_0224: ldstr "Error:: Need to update GetNewSelectionStateByType for type "
L_0229: ldarg.0
L_022a: box BattleTech.UI.SelectionType
L_022f: ldstr "!"
L_0234: call System.String Concat(System.Object, System.Object, System.Object)
L_0239: call Void LogError(System.Object)
L_023e: ldnull
L_023f: Label35
L_023f: Label36
L_023f: Label37
L_023f: Label38
L_023f: Label39
L_023f: Label40
L_023f: Label41
L_023f: Label42
L_023f: Label43
L_023f: Label44
L_023f: Label45
L_023f: Label46
L_023f: Label47
L_023f: Label48
L_023f: Label49
L_023f: Label50
L_023f: Label51
L_023f: Label52
L_023f: Label53
L_023f: Label54
L_023f: Label55
L_023f: Label56
L_023f: Label57
L_023f: Label58
L_023f: Label59
L_023f: Label60
L_023f: stloc 0 (BattleTech.UI.SelectionState)
L_0240: Label0
L_0240: ldloc 0 (BattleTech.UI.SelectionState)
L_0241: ret
DONE

### Patch BattleTech.UI.CombatSelectionHandler, Boolean TrySelectActor(BattleTech.AbstractActor, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldarg 2
L_0013: call Boolean Prefix(BattleTech.UI.CombatSelectionHandler, BattleTech.AbstractActor, Boolean)
L_0018: brfalse Label0
L_001d: ldarg.1
L_001e: brtrue Label1
L_0023: ldc.i4.0
L_0024: br Label33
L_0029: Label1
L_0029: ldarg.0
L_002a: call BattleTech.CombatGameState get_Combat()
L_002f: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0034: callvirt Boolean get_IsActive()
L_0039: brtrue Label2
L_003e: ldc.i4.0
L_003f: br Label34
L_0044: Label2
L_0044: ldarg.1
L_0045: callvirt Boolean get_HasBegunActivation()
L_004a: brfalse Label3
L_004f: ldarg.1
L_0050: callvirt Boolean get_HasActivatedThisRound()
L_0055: brtrue Label4
L_005a: ldc.i4.0
L_005b: br Label35
L_0060: Label3
L_0060: Label4
L_0060: ldarg.0
L_0061: call BattleTech.AbstractActor get_SelectedActor()
L_0066: brfalse Label5
L_006b: ldarg.0
L_006c: call Boolean get_IsSelectedActorChangeable()
L_0071: brfalse Label6
L_0076: Label5
L_0076: ldarg.1
L_0077: callvirt BattleTech.Team get_team()
L_007c: ldarg.0
L_007d: call BattleTech.CombatGameState get_Combat()
L_0082: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0087: bne.un Label7
L_008c: ldarg.1
L_008d: ldarg.0
L_008e: call BattleTech.AbstractActor get_SelectedActor()
L_0093: beq Label8
L_0098: ldarg.0
L_0099: call Boolean get_IsCommandButtonActive()
L_009e: brfalse Label9
L_00a3: ldarg.0
L_00a4: call Void UninvokeCommandTray()
L_00a9: br Label10
L_00ae: Label9
L_00ae: ldarg.0
L_00af: call Void ClearSelectionStack()
L_00b4: Label10
L_00b4: ldarg.0
L_00b5: call System.Collections.Generic.List`1[BattleTech.UI.CombatHUDActionButton] get_ActivatedAbilityButtons()
L_00ba: callvirt Void Clear()
L_00bf: ldarg.0
L_00c0: call BattleTech.CombatGameState get_Combat()
L_00c5: callvirt MessageCenter get_MessageCenter()
L_00ca: ldarg.1
L_00cb: callvirt System.String get_GUID()
L_00d0: newobj Void .ctor(String)
L_00d5: callvirt Void PublishMessage(MessageCenterMessage)
L_00da: ldarg.1
L_00db: callvirt Boolean get_IsAvailableThisPhase()
L_00e0: brfalse Label11
L_00e5: ldarg.1
L_00e6: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_00eb: brtrue Label12
L_00f0: ldarg.1
L_00f1: callvirt Boolean get_IsShutDown()
L_00f6: brtrue Label13
L_00fb: ldarg.1
L_00fc: callvirt Boolean get_IsProne()
L_0101: brfalse Label14
L_0106: Label13
L_0106: ldarg.1
L_0107: callvirt Boolean get_IsShutDown()
L_010c: brfalse Label15
L_0111: ldarg.0
L_0112: ldarg.0
L_0113: call BattleTech.CombatGameState get_Combat()
L_0118: ldarg.0
L_0119: call BattleTech.UI.CombatHUD get_HUD()
L_011e: ldnull
L_011f: ldarg.1
L_0120: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0125: call Void addNewState(BattleTech.UI.SelectionState)
L_012a: br Label16
L_012f: Label15
L_012f: ldarg.1
L_0130: callvirt Boolean get_IsProne()
L_0135: brfalse Label17
L_013a: ldarg.0
L_013b: ldarg.0
L_013c: call BattleTech.CombatGameState get_Combat()
L_0141: ldarg.0
L_0142: call BattleTech.UI.CombatHUD get_HUD()
L_0147: ldnull
L_0148: ldarg.1
L_0149: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_014e: call Void addNewState(BattleTech.UI.SelectionState)
L_0153: br Label18
L_0158: Label14
L_0158: ldarg.0
L_0159: call BattleTech.UI.CombatHUD get_HUD()
L_015e: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_0163: callvirt Boolean get_IsTutorialSuppressed()
L_0168: brfalse Label19
L_016d: ldarg.0
L_016e: call BattleTech.UI.CombatHUD get_HUD()
L_0173: callvirt BattleTech.UI.CombatHUDActionButton get_SprintButton()
L_0178: ldfld System.Boolean isTutorialHighlighted
L_017d: brfalse Label20
L_0182: ldarg.0
L_0183: ldarg.1
L_0184: call Void AddSprintState(BattleTech.AbstractActor)
L_0189: br Label21
L_018e: Label20
L_018e: ldarg.0
L_018f: call BattleTech.UI.CombatHUD get_HUD()
L_0194: callvirt BattleTech.UI.CombatHUDActionButton get_JumpButton()
L_0199: ldfld System.Boolean isTutorialHighlighted
L_019e: brfalse Label22
L_01a3: ldarg.0
L_01a4: ldarg.1
L_01a5: call Void AddJumpState(BattleTech.AbstractActor)
L_01aa: br Label23
L_01af: Label22
L_01af: ldarg.0
L_01b0: ldarg.1
L_01b1: call Void AddFireState(BattleTech.AbstractActor)
L_01b6: br Label24
L_01bb: Label19
L_01bb: ldarg.0
L_01bc: call BattleTech.CombatGameState get_Combat()
L_01c1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_01c6: callvirt Boolean get_IsInterleaved()
L_01cb: brtrue Label25
L_01d0: ldarg.1
L_01d1: callvirt Boolean get_CanSprint()
L_01d6: brtrue Label26
L_01db: Label25
L_01db: ldarg.0
L_01dc: ldarg.1
L_01dd: call Void AddMoveState(BattleTech.AbstractActor)
L_01e2: br Label27
L_01e7: Label26
L_01e7: ldarg.0
L_01e8: ldarg.1
L_01e9: call Void AddSprintState(BattleTech.AbstractActor)
L_01ee: Label16
L_01ee: Label17
L_01ee: Label18
L_01ee: Label21
L_01ee: Label23
L_01ee: Label24
L_01ee: Label27
L_01ee: ldarg.2
L_01ef: brfalse Label28
L_01f4: ldc.i4.s 64
L_01f6: ldarg.1
L_01f7: ldnull
L_01f8: ldnull
L_01f9: ldc.i4.1
L_01fa: call Boolean PlayPilotVO(BattleTech.VOEvents, BattleTech.AbstractActor, EventCallback, System.Object, Boolean)
L_01ff: pop
L_0200: Label28
L_0200: ldarg.1
L_0201: callvirt BattleTech.Pathing get_Pathing()
L_0206: callvirt Boolean get_ArePathGridsComplete()
L_020b: brtrue Label29
L_0210: ldarg.1
L_0211: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_0216: brtrue Label30
L_021b: ldarg.0
L_021c: call BattleTech.CombatGameState get_Combat()
L_0221: callvirt BattleTech.PathingManager get_PathingManager()
L_0226: ldarg.1
L_0227: callvirt BattleTech.Pathing get_Pathing()
L_022c: callvirt Void AddNewBlockingPath(BattleTech.Pathing)
L_0231: br Label31
L_0236: Label11
L_0236: Label12
L_0236: ldarg.0
L_0237: ldarg.0
L_0238: call BattleTech.CombatGameState get_Combat()
L_023d: ldarg.0
L_023e: call BattleTech.UI.CombatHUD get_HUD()
L_0243: ldnull
L_0244: ldarg.1
L_0245: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_024a: call Void addNewState(BattleTech.UI.SelectionState)
L_024f: Label29
L_024f: Label30
L_024f: Label31
L_024f: call BattleTech.Save.CloudUserSettings get_CloudSettings()
L_0254: ldfld System.Boolean autoCenterOnSelection
L_0259: brfalse Label32
L_025e: call BattleTech.CameraControl get_Instance()
L_0263: ldarg.1
L_0264: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0269: ldc.r4 0.95
L_026e: callvirt Void SetMovingToGroundPos(UnityEngine.Vector3, Single)
L_0273: Label32
L_0273: ldarg.0
L_0274: call Void logSelectionStack()
L_0279: ldc.i4.1
L_027a: br Label36
L_027f: Label6
L_027f: Label7
L_027f: Label8
L_027f: ldc.i4.0
L_0280: Label33
L_0280: Label34
L_0280: Label35
L_0280: Label36
L_0280: stloc 0 (System.Boolean)
L_0281: Label0
L_0281: ldloc 0 (System.Boolean)
L_0282: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnAttackEnd(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceEndMessage
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: ldarg.1
L_0001: isinst BattleTech.AttackSequenceEndMessage
L_0006: stloc.0
L_0007: ldarg.0
L_0008: call BattleTech.CombatGameState get_Combat()
L_000d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0012: ldloc.0
L_0013: ldfld System.Int32 sequenceId
L_0018: callvirt AttackSequence GetAttackSequence(Int32)
L_001d: stloc.1
L_001e: ldloc.1
L_001f: brfalse Label1
L_0024: ldloc.1
L_0025: ldfld BattleTech.ICombatant chosenTarget
L_002a: ldarg.0
L_002b: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0030: callvirt BattleTech.ICombatant get_DisplayedCombatant()
L_0035: bne.un Label2
L_003a: ldarg.0
L_003b: ldarg.0
L_003c: ldloc.1
L_003d: ldfld BattleTech.ICombatant chosenTarget
L_0042: call System.Collections.IEnumerator DelayActorUnTargeted(BattleTech.ICombatant)
L_0047: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_004c: pop
L_004d: Label1
L_004d: Label2
L_004d: ldarg.0
L_004e: call BattleTech.CombatGameState get_Combat()
L_0053: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0058: stloc.2
L_0059: ldc.i4.0
L_005a: stloc.3
L_005b: br Label3
L_0060: Label4
L_0060: ldarg.0
L_0061: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0066: ldnull
L_0067: ldloc.2
L_0068: ldloc.3
L_0069: callvirt BattleTech.AbstractActor get_Item(Int32)
L_006e: ldc.i4.0
L_006f: ldc.r4 0
L_0074: ldc.i4.0
L_0075: ldc.i4.0
L_0076: callvirt Void ShowAttackDirection(BattleTech.AbstractActor, BattleTech.AbstractActor, BattleTech.AttackDirection, Single, BattleTech.MeleeAttackType, Int32)
L_007b: ldloc.3
L_007c: ldc.i4.1
L_007d: add
L_007e: stloc.3
L_007f: Label3
L_007f: ldloc.3
L_0080: ldloc.2
L_0081: callvirt Int32 get_Count()
L_0086: blt Label4
L_008b: ldarg.0
L_008c: ldarg 1
L_0092: call Void Postfix(BattleTech.UI.CombatHUD, MessageCenterMessage)
L_0097: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: Local var 8: BattleTech.AbstractActor
L_0000: ldnull
L_0001: stloc 8 (BattleTech.AbstractActor)
L_0003: ldarg.0
L_0004: ldarg 1
L_000a: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage)
L_000f: brfalse Label0
L_0014: ldarg.0
L_0015: ldarg 1
L_001b: ldloca 8 (BattleTech.AbstractActor)
L_001d: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage, BattleTech.AbstractActor ByRef)
L_0022: brfalse Label0
L_0027: ldarg.1
L_0028: castclass BattleTech.AttackCompleteMessage
L_002d: stloc.0
L_002e: ldloc.0
L_002f: ldfld System.Int32 sequenceId
L_0034: stloc.1
L_0035: ldarg.0
L_0036: ldloc.1
L_0037: call AttackSequence GetAttackSequence(Int32)
L_003c: stloc.2
L_003d: ldloc.2
L_003e: brtrue Label1
L_0043: ldsfld HBS.Logging.ILog logger
L_0048: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_004d: ldloc.1
L_004e: box System.Int32
L_0053: call System.String Format(System.String, System.Object)
L_0058: callvirt Void LogError(System.Object)
L_005d: ldstr "OnAttackComplete received invalid sequenceID: "
L_0062: ldloc.1
L_0063: box System.Int32
L_0068: call System.String Concat(System.Object, System.Object)
L_006d: newobj Void .ctor(String)
L_0072: throw
L_0073: Label1
L_0073: ldsfld HBS.Logging.ILog logger
L_0078: callvirt Boolean get_IsLogEnabled()
L_007d: brfalse Label2
L_0082: ldsfld HBS.Logging.ILog logger
L_0087: ldstr "[OnAttackComplete] ID {0}"
L_008c: ldloc.1
L_008d: box System.Int32
L_0092: call System.String Format(System.String, System.Object)
L_0097: callvirt Void Log(System.Object)
L_009c: Label2
L_009c: ldloc.2
L_009d: ldfld BattleTech.AbstractActor attacker
L_00a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_00a7: ldnull
L_00a8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00ad: brfalse Label3
L_00b2: ldloc.2
L_00b3: ldfld BattleTech.AbstractActor attacker
L_00b8: callvirt BattleTech.GameRepresentation get_GameRep()
L_00bd: ldc.i4.0
L_00be: ldc.r4 0.5
L_00c3: ldloc.0
L_00c4: ldfld System.Int32 stackItemUID
L_00c9: ldloc.0
L_00ca: ldfld System.Int32 sequenceId
L_00cf: ldnull
L_00d0: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00d5: ldloc.2
L_00d6: ldfld BattleTech.AbstractActor attacker
L_00db: callvirt BattleTech.GameRepresentation get_GameRep()
L_00e0: ldc.i4.0
L_00e1: callvirt Void SetVFXColliderEnabled(Boolean)
L_00e6: ldloc.2
L_00e7: ldfld BattleTech.AbstractActor attacker
L_00ec: callvirt BattleTech.GameRepresentation get_GameRep()
L_00f1: isinst BattleTech.MechRepresentation
L_00f6: stloc.3
L_00f7: ldloc.3
L_00f8: ldnull
L_00f9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label4
L_0103: ldloc.3
L_0104: ldc.i4.1
L_0105: callvirt Void ToggleRandomIdles(Boolean)
L_010a: Label4
L_010a: ldloc.2
L_010b: ldfld BattleTech.AbstractActor attacker
L_0110: callvirt BattleTech.Team get_team()
L_0115: callvirt System.String get_GUID()
L_011a: ldarg.0
L_011b: call BattleTech.CombatGameState get_Combat()
L_0120: callvirt System.String get_LocalPlayerTeamGuid()
L_0125: call Boolean op_Equality(System.String, System.String)
L_012a: brfalse Label5
L_012f: ldloc.2
L_0130: ldfld BattleTech.AbstractActor attacker
L_0135: callvirt BattleTech.Team get_team()
L_013a: ldloc.2
L_013b: ldfld BattleTech.ICombatant chosenTarget
L_0140: callvirt BattleTech.Team get_team()
L_0145: ldloc.2
L_0146: ldfld System.Single previousTeamHealthDifference
L_014b: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_0150: Label3
L_0150: Label5
L_0150: ldloc.2
L_0151: ldfld BattleTech.ICombatant chosenTarget
L_0156: callvirt BattleTech.GameRepresentation get_GameRep()
L_015b: ldnull
L_015c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0161: brfalse Label6
L_0166: ldloc.2
L_0167: ldfld BattleTech.ICombatant chosenTarget
L_016c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0171: isinst BattleTech.MechRepresentation
L_0176: stloc.s 4 (BattleTech.MechRepresentation)
L_0178: ldloc.s 4 (BattleTech.MechRepresentation)
L_017a: ldnull
L_017b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0180: brfalse Label7
L_0185: ldloc.s 4 (BattleTech.MechRepresentation)
L_0187: ldc.i4.1
L_0188: callvirt Void ToggleRandomIdles(Boolean)
L_018d: Label7
L_018d: ldloc.2
L_018e: ldfld BattleTech.ICombatant chosenTarget
L_0193: callvirt BattleTech.Team get_team()
L_0198: callvirt System.String get_GUID()
L_019d: ldarg.0
L_019e: call BattleTech.CombatGameState get_Combat()
L_01a3: callvirt System.String get_LocalPlayerTeamGuid()
L_01a8: call Boolean op_Equality(System.String, System.String)
L_01ad: brfalse Label8
L_01b2: ldloc.2
L_01b3: ldfld BattleTech.ICombatant chosenTarget
L_01b8: callvirt BattleTech.Team get_team()
L_01bd: ldloc.2
L_01be: ldfld BattleTech.AbstractActor attacker
L_01c3: callvirt BattleTech.Team get_team()
L_01c8: ldloc.2
L_01c9: ldfld System.Single previousTeamHealthDifference
L_01ce: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01d3: Label6
L_01d3: Label8
L_01d3: ldc.i4.0
L_01d4: stloc.s 5 (System.Int32)
L_01d6: br Label9
L_01db: Label13
L_01db: ldarg.0
L_01dc: call BattleTech.CombatGameState get_Combat()
L_01e1: ldloc.2
L_01e2: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01e7: ldloc.s 5 (System.Int32)
L_01e9: callvirt System.String get_Item(Int32)
L_01ee: ldc.i4.0
L_01ef: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01f4: stloc.s 6 (BattleTech.ICombatant)
L_01f6: ldloc.s 6 (BattleTech.ICombatant)
L_01f8: brfalse Label10
L_01fd: ldloc.s 6 (BattleTech.ICombatant)
L_01ff: callvirt BattleTech.GameRepresentation get_GameRep()
L_0204: ldnull
L_0205: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_020a: brtrue Label11
L_020f: ldloc.s 6 (BattleTech.ICombatant)
L_0211: callvirt BattleTech.GameRepresentation get_GameRep()
L_0216: isinst BattleTech.MechRepresentation
L_021b: stloc.s 7 (BattleTech.MechRepresentation)
L_021d: ldloc.s 7 (BattleTech.MechRepresentation)
L_021f: ldnull
L_0220: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0225: brfalse Label12
L_022a: ldloc.s 7 (BattleTech.MechRepresentation)
L_022c: ldc.i4.1
L_022d: callvirt Void ToggleRandomIdles(Boolean)
L_0232: Label10
L_0232: Label11
L_0232: Label12
L_0232: ldloc.s 5 (System.Int32)
L_0234: ldc.i4.1
L_0235: add
L_0236: stloc.s 5 (System.Int32)
L_0238: Label9
L_0238: ldloc.s 5 (System.Int32)
L_023a: ldloc.2
L_023b: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0240: callvirt Int32 get_Count()
L_0245: blt Label13
L_024a: ldarg.0
L_024b: ldloc.2
L_024c: call Void RecordAttackSequenceStats(AttackSequence)
L_0251: ldarg.0
L_0252: call BattleTech.CombatGameState get_Combat()
L_0257: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_025c: ldloc.2
L_025d: callvirt Void RecordAttackSequence(AttackSequence)
L_0262: ldarg.0
L_0263: ldloc.1
L_0264: call Boolean RemoveAttackSequence(Int32)
L_0269: pop
L_026a: Label0
L_026a: ldarg.0
L_026b: ldarg 1
L_0271: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_0276: ldarg.0
L_0277: ldarg 1
L_027d: ldloca 8 (BattleTech.AbstractActor)
L_027f: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage, BattleTech.AbstractActor ByRef)
L_0284: ret
DONE

### Patch BattleTech.UI.CombatHUDActionButton, Void ActivateCommandAbility(System.String, UnityEngine.Vector3)
L_0000: Local var 0: MessageCenterMessage
L_0000: ldarg.0
L_0001: call BattleTech.Ability get_Ability()
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.Ability get_Ability()
L_0011: callvirt BattleTech.AbilityDef get_Def()
L_0016: callvirt ActivationTiming get_ActivationTime()
L_001b: ldc.i4.4
L_001c: bne.un Label2
L_0021: ldarg.1
L_0022: ldarg.1
L_0023: ldarg.0
L_0024: call BattleTech.Ability get_Ability()
L_0029: callvirt BattleTech.AbilityDef get_Def()
L_002e: callvirt System.String get_Id()
L_0033: ldarg.2
L_0034: call UnityEngine.Vector3 get_zero()
L_0039: newobj Void .ctor(String, String, String, Vector3, Vector3)
L_003e: stloc.0
L_003f: ldloc.0
L_0040: ldc.i4.1
L_0041: callvirt Void set_IsNetRouted(Boolean)
L_0046: ldarg.0
L_0047: call BattleTech.CombatGameState get_Combat()
L_004c: callvirt MessageCenter get_MessageCenter()
L_0051: ldloc.0
L_0052: callvirt Void PublishMessage(MessageCenterMessage)
L_0057: ldarg.1
L_0058: ldarg.1
L_0059: ldarg.0
L_005a: call BattleTech.Ability get_Ability()
L_005f: callvirt BattleTech.AbilityDef get_Def()
L_0064: callvirt System.String get_Id()
L_0069: ldarg.2
L_006a: call UnityEngine.Vector3 get_zero()
L_006f: newobj Void .ctor(String, String, String, Vector3, Vector3)
L_0074: stloc.0
L_0075: ldloc.0
L_0076: ldc.i4.1
L_0077: callvirt Void set_IsNetRouted(Boolean)
L_007c: ldarg.0
L_007d: call BattleTech.CombatGameState get_Combat()
L_0082: callvirt MessageCenter get_MessageCenter()
L_0087: ldloc.0
L_0088: callvirt Void PublishMessage(MessageCenterMessage)
L_008d: ldarg.0
L_008e: callvirt Void DisableButton()
L_0093: Label1
L_0093: Label2
L_0093: ldarg.0
L_0094: ldarg 1
L_009a: ldarg 2
L_00a0: call Void Postfix(BattleTech.UI.CombatHUDActionButton, System.String, UnityEngine.Vector3)
L_00a5: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.UI.CombatHUDSidePanelHoverElement
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.CombatGameState Combat
L_0007: ldarg.0
L_0008: ldarg.2
L_0009: stfld BattleTech.UI.CombatHUD HUD
L_000e: ldarg.0
L_000f: ldarg.0
L_0010: ldfld UnityEngine.GameObject[] PortraitHolders
L_0015: ldlen
L_0016: conv.i4
L_0017: newarr BattleTech.UI.CombatHUDPortrait
L_001c: stfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: br Label1
L_0028: Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_002e: ldloc.0
L_002f: ldarg.0
L_0030: ldfld UnityEngine.GameObject[] PortraitHolders
L_0035: ldloc.0
L_0036: ldelem.ref
L_0037: ldc.i4.1
L_0038: callvirt BattleTech.UI.CombatHUDPortrait GetComponentInChildren[CombatHUDPortrait](Boolean)
L_003d: stelem.ref
L_003e: ldarg.0
L_003f: ldfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_0044: ldloc.0
L_0045: ldelem.ref
L_0046: ldarg.1
L_0047: ldarg.2
L_0048: ldarg.0
L_0049: ldfld UnityEngine.GameObject[] PortraitHolders
L_004e: ldloc.0
L_004f: ldelem.ref
L_0050: callvirt UnityEngine.UI.LayoutElement GetComponent[LayoutElement]()
L_0055: ldarg.0
L_0056: ldfld BattleTech.UI.HBSDOTweenToggle[] portraitTweens
L_005b: ldloc.0
L_005c: ldelem.ref
L_005d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, UnityEngine.UI.LayoutElement, BattleTech.UI.HBSDOTweenToggle)
L_0062: ldloc.0
L_0063: ldc.i4.1
L_0064: add
L_0065: stloc.0
L_0066: Label1
L_0066: ldloc.0
L_0067: ldarg.0
L_0068: ldfld UnityEngine.GameObject[] PortraitHolders
L_006d: ldlen
L_006e: conv.i4
L_006f: blt Label2
L_0074: ldarg.0
L_0075: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_007a: ldlen
L_007b: conv.i4
L_007c: ldc.i4.s 11
L_007e: beq Label3
L_0083: ldsfld HBS.Logging.ILog uiLogger
L_0088: ldstr "Error: should be exactly 11 action buttons!"
L_008d: callvirt Void LogError(System.Object)
L_0092: Label3
L_0092: ldarg.0
L_0093: ldarg.0
L_0094: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_0099: ldlen
L_009a: conv.i4
L_009b: newarr BattleTech.UI.CombatHUDActionButton
L_00a0: call Void set_ActionButtons(BattleTech.UI.CombatHUDActionButton[])
L_00a5: ldc.i4.0
L_00a6: stloc.1
L_00a7: br Label4
L_00ac: Label7
L_00ac: ldarg.0
L_00ad: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00b2: ldloc.1
L_00b3: ldarg.0
L_00b4: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_00b9: ldloc.1
L_00ba: ldelem.ref
L_00bb: ldc.i4.1
L_00bc: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_00c1: stelem.ref
L_00c2: ldarg.0
L_00c3: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00c8: ldloc.1
L_00c9: ldelem.ref
L_00ca: ldc.i4.1
L_00cb: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement GetComponentInChildren[CombatHUDSidePanelHoverElement](Boolean)
L_00d0: stloc.2
L_00d1: ldloc.2
L_00d2: ldnull
L_00d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00d8: brfalse Label5
L_00dd: ldarg.0
L_00de: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00e3: ldloc.1
L_00e4: ldelem.ref
L_00e5: callvirt UnityEngine.GameObject get_gameObject()
L_00ea: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement AddComponent[CombatHUDSidePanelHoverElement]()
L_00ef: stloc.2
L_00f0: Label5
L_00f0: ldloc.2
L_00f1: ldarg.2
L_00f2: callvirt Void Init(BattleTech.UI.CombatHUD)
L_00f7: ldloc.1
L_00f8: ldc.i4.s 9
L_00fa: bge Label6
L_00ff: ldarg.0
L_0100: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0105: ldloc.1
L_0106: ldelem.ref
L_0107: ldarg.1
L_0108: ldarg.2
L_0109: call BattleTech.BTInput get_Instance()
L_010e: call System.Collections.Generic.List`1[InControl.PlayerAction] Combat_Abilities(BattleTech.BTInput)
L_0113: ldloc.1
L_0114: callvirt InControl.PlayerAction get_Item(Int32)
L_0119: ldc.i4.1
L_011a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_011f: Label6
L_011f: ldloc.1
L_0120: ldc.i4.1
L_0121: add
L_0122: stloc.1
L_0123: Label4
L_0123: ldloc.1
L_0124: ldarg.0
L_0125: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_012a: ldlen
L_012b: conv.i4
L_012c: blt Label7
L_0131: ldarg.0
L_0132: ldarg.0
L_0133: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0138: ldc.i4.0
L_0139: ldelem.ref
L_013a: call Void set_FireButton(BattleTech.UI.CombatHUDActionButton)
L_013f: ldarg.0
L_0140: ldarg.0
L_0141: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0146: ldc.i4.1
L_0147: ldelem.ref
L_0148: call Void set_MoveButton(BattleTech.UI.CombatHUDActionButton)
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0154: ldc.i4.2
L_0155: ldelem.ref
L_0156: call Void set_SprintButton(BattleTech.UI.CombatHUDActionButton)
L_015b: ldarg.0
L_015c: ldarg.0
L_015d: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0162: ldc.i4.3
L_0163: ldelem.ref
L_0164: call Void set_JumpButton(BattleTech.UI.CombatHUDActionButton)
L_0169: ldarg.0
L_016a: ldarg.0
L_016b: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0170: ldc.i4.s 9
L_0172: ldelem.ref
L_0173: call Void set_DoneWithMechButton(BattleTech.UI.CombatHUDActionButton)
L_0178: ldarg.0
L_0179: ldarg.0
L_017a: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_017f: ldc.i4.s 10
L_0181: ldelem.ref
L_0182: call Void set_EjectButton(BattleTech.UI.CombatHUDActionButton)
L_0187: ldarg.0
L_0188: ldfld UnityEngine.GameObject MeleeButtonHolder
L_018d: ldc.i4.1
L_018e: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_0193: ldarg.1
L_0194: ldarg.2
L_0195: call BattleTech.BTInput get_Instance()
L_019a: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_019f: ldc.i4.1
L_01a0: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01a5: ldarg.0
L_01a6: ldfld UnityEngine.GameObject DFAButtonHolder
L_01ab: ldc.i4.1
L_01ac: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01b1: ldarg.1
L_01b2: ldarg.2
L_01b3: call BattleTech.BTInput get_Instance()
L_01b8: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_01bd: ldc.i4.1
L_01be: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01c3: ldarg.0
L_01c4: ldarg.0
L_01c5: ldfld UnityEngine.GameObject CommandButtonHolder
L_01ca: ldc.i4.1
L_01cb: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01d0: call Void set_CommandButton(BattleTech.UI.CombatHUDActionButton)
L_01d5: ldarg.0
L_01d6: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_01db: ldarg.1
L_01dc: ldarg.2
L_01dd: call BattleTech.BTInput get_Instance()
L_01e2: call InControl.PlayerAction Combat_CommandAbility(BattleTech.BTInput)
L_01e7: ldc.i4.1
L_01e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01ed: ldarg.0
L_01ee: ldarg.0
L_01ef: ldfld UnityEngine.GameObject EquipmentButtonHolder
L_01f4: ldc.i4.1
L_01f5: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01fa: call Void set_EquipmentButton(BattleTech.UI.CombatHUDActionButton)
L_01ff: ldarg.0
L_0200: call BattleTech.UI.CombatHUDActionButton get_EquipmentButton()
L_0205: ldarg.1
L_0206: ldarg.2
L_0207: call BattleTech.BTInput get_Instance()
L_020c: call InControl.PlayerAction Key_None(BattleTech.BTInput)
L_0211: ldc.i4.1
L_0212: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_0217: ldarg.0
L_0218: call BattleTech.UI.CombatHUDActionButton get_DoneWithMechButton()
L_021d: ldarg.1
L_021e: ldarg.2
L_021f: call BattleTech.BTInput get_Instance()
L_0224: call InControl.PlayerAction Combat_DoneWithMech(BattleTech.BTInput)
L_0229: ldc.i4.1
L_022a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_022f: ldarg.0
L_0230: call BattleTech.UI.CombatHUDActionButton get_EjectButton()
L_0235: ldarg.1
L_0236: ldarg.2
L_0237: call BattleTech.BTInput get_Instance()
L_023c: call InControl.PlayerAction Key_None(BattleTech.BTInput)
L_0241: ldc.i4.1
L_0242: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_0247: ldarg.0
L_0248: ldfld BattleTech.UI.CombatHUDMechTrayOtherTeamIndicator otherTurnIndicator
L_024d: ldarg.2
L_024e: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0253: ldarg.0
L_0254: ldc.i4.3
L_0255: newarr BattleTech.UI.CombatHUDActionButton
L_025a: call Void set_AbilityButtons(BattleTech.UI.CombatHUDActionButton[])
L_025f: ldc.i4.0
L_0260: stloc.3
L_0261: br Label8
L_0266: Label9
L_0266: ldarg.0
L_0267: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_026c: ldloc.3
L_026d: ldarg.0
L_026e: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0273: ldloc.3
L_0274: ldc.i4.4
L_0275: add
L_0276: ldelem.ref
L_0277: stelem.ref
L_0278: ldloc.3
L_0279: ldc.i4.1
L_027a: add
L_027b: stloc.3
L_027c: Label8
L_027c: ldloc.3
L_027d: ldc.i4.3
L_027e: blt Label9
L_0283: ldarg.0
L_0284: ldc.i4.2
L_0285: newarr BattleTech.UI.CombatHUDActionButton
L_028a: call Void set_MoraleButtons(BattleTech.UI.CombatHUDActionButton[])
L_028f: ldc.i4.0
L_0290: stloc.s 4 (System.Int32)
L_0292: br Label10
L_0297: Label11
L_0297: ldarg.0
L_0298: call BattleTech.UI.CombatHUDActionButton[] get_MoraleButtons()
L_029d: ldloc.s 4 (System.Int32)
L_029f: ldarg.0
L_02a0: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_02a5: ldloc.s 4 (System.Int32)
L_02a7: ldc.i4.7
L_02a8: add
L_02a9: ldelem.ref
L_02aa: stelem.ref
L_02ab: ldloc.s 4 (System.Int32)
L_02ad: ldc.i4.1
L_02ae: add
L_02af: stloc.s 4 (System.Int32)
L_02b1: Label10
L_02b1: ldloc.s 4 (System.Int32)
L_02b3: ldc.i4.2
L_02b4: blt Label11
L_02b9: ldarg.0
L_02ba: ldarg.0
L_02bb: ldfld UnityEngine.GameObject RestartButtonHolder
L_02c0: ldc.i4.1
L_02c1: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_02c6: call Void set_RestartButton(BattleTech.UI.CombatHUDActionButton)
L_02cb: ldarg.0
L_02cc: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_02d1: ldarg.1
L_02d2: ldarg.2
L_02d3: call BattleTech.BTInput get_Instance()
L_02d8: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_02dd: ldc.i4.1
L_02de: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_02e3: ldarg.0
L_02e4: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_02e9: ldc.i4.0
L_02ea: ldnull
L_02eb: call BattleTech.UI.UIManager get_Instance()
L_02f0: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_02f5: ldfld SVGImporter.SVGAsset RestartButtonIcon
L_02fa: ldstr "BTN_Restart"
L_02ff: call BattleTech.UI.UIManager get_Instance()
L_0304: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0309: ldfld System.String Tooltip_Restart
L_030e: ldnull
L_030f: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0314: ldarg.0
L_0315: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_031a: ldfld BattleTech.UI.TMProWrapper.LocalizableText Text
L_031f: ldstr "RESTART"
L_0324: call System.Object[] Empty[Object]()
L_0329: callvirt Void SetText(System.String, System.Object[])
L_032e: ldarg.0
L_032f: ldfld UnityEngine.GameObject RestartButtonHolder
L_0334: callvirt UnityEngine.GameObject get_gameObject()
L_0339: ldc.i4.0
L_033a: callvirt Void SetActive(Boolean)
L_033f: ldarg.0
L_0340: ldarg.0
L_0341: ldc.i4.1
L_0342: call BattleTech.UI.CombatHUDMoraleBar GetComponentInChildren[CombatHUDMoraleBar](Boolean)
L_0347: call Void set_moraleDisplay(BattleTech.UI.CombatHUDMoraleBar)
L_034c: ldarg.0
L_034d: call BattleTech.UI.CombatHUDMoraleBar get_moraleDisplay()
L_0352: ldarg.1
L_0353: ldarg.2
L_0354: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0359: ldarg.0
L_035a: ldc.i4.1
L_035b: call Void SubscribeMessages(Boolean)
L_0360: ldarg.0
L_0361: call UnityEngine.Transform get_transform()
L_0366: ldarg.0
L_0367: ldfld UnityEngine.Vector3 TrayPosDown
L_036c: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0371: ldarg.0
L_0372: ldarg.0
L_0373: ldfld UnityEngine.Vector3 TrayPosDown
L_0378: call Void set_targetTrayPos(UnityEngine.Vector3)
L_037d: ldarg.0
L_037e: ldarg.0
L_037f: ldfld UnityEngine.Vector3 TrayPosDown
L_0384: call Void set_lastTrayPos(UnityEngine.Vector3)
L_0389: ldarg.0
L_038a: ldarg 1
L_0390: ldarg 2
L_0396: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_039b: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void InitAbilityButtons(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Ability
L_0000: ldarg.1
L_0001: isinst BattleTech.Mech
L_0006: callvirt BattleTech.Pilot GetPilot()
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brfalse Label1
L_0012: ldloc.0
L_0013: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_ActiveAbilities()
L_0018: newobj Void .ctor(IEnumerable`1)
L_001d: stloc.1
L_001e: ldc.i4.0
L_001f: stloc.3
L_0020: br Label2
L_0025: Label3
L_0025: ldarg.0
L_0026: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_002b: ldloc.3
L_002c: ldelem.ref
L_002d: ldloc.1
L_002e: ldloc.3
L_002f: callvirt BattleTech.Ability get_Item(Int32)
L_0034: callvirt BattleTech.AbilityDef get_Def()
L_0039: callvirt TargetingType get_Targeting()
L_003e: ldc.i4.0
L_003f: call BattleTech.UI.SelectionType GetSelectionTypeFromTargeting(TargetingType, Boolean)
L_0044: ldloc.1
L_0045: ldloc.3
L_0046: callvirt BattleTech.Ability get_Item(Int32)
L_004b: ldloc.1
L_004c: ldloc.3
L_004d: callvirt BattleTech.Ability get_Item(Int32)
L_0052: callvirt BattleTech.AbilityDef get_Def()
L_0057: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_005c: ldloc.1
L_005d: ldloc.3
L_005e: callvirt BattleTech.Ability get_Item(Int32)
L_0063: callvirt BattleTech.AbilityDef get_Def()
L_0068: callvirt BattleTech.BaseDescriptionDef get_Description()
L_006d: callvirt System.String get_Id()
L_0072: ldloc.1
L_0073: ldloc.3
L_0074: callvirt BattleTech.Ability get_Item(Int32)
L_0079: callvirt BattleTech.AbilityDef get_Def()
L_007e: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0083: callvirt System.String get_Name()
L_0088: ldarg.1
L_0089: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_008e: ldarg.0
L_008f: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0094: ldloc.3
L_0095: ldelem.ref
L_0096: ldc.i4.1
L_0097: stfld System.Boolean isClickable
L_009c: ldloc.3
L_009d: ldc.i4.1
L_009e: add
L_009f: stloc.3
L_00a0: Label2
L_00a0: ldloc.3
L_00a1: ldloc.1
L_00a2: callvirt Int32 get_Count()
L_00a7: blt Label3
L_00ac: ldloc.0
L_00ad: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_PassiveAbilities()
L_00b2: ldsfld System.Predicate`1[BattleTech.Ability] <>9__121_0
L_00b7: dup
L_00b8: brtrue Label4
L_00bd: pop
L_00be: ldsfld BattleTech.UI.CombatHUDMechwarriorTray+<>c <>9
L_00c3: ldftn Boolean <InitAbilityButtons>b__121_0(BattleTech.Ability)
L_00c9: newobj Void .ctor(Object, IntPtr)
L_00ce: dup
L_00cf: stsfld System.Predicate`1[BattleTech.Ability] <>9__121_0
L_00d4: Label4
L_00d4: callvirt System.Collections.Generic.List`1[BattleTech.Ability] FindAll(System.Predicate`1[BattleTech.Ability])
L_00d9: stloc.2
L_00da: ldloc.1
L_00db: callvirt Int32 get_Count()
L_00e0: stloc.s 4 (System.Int32)
L_00e2: br Label5
L_00e7: Label8
L_00e7: ldloc.s 4 (System.Int32)
L_00e9: ldloc.1
L_00ea: callvirt Int32 get_Count()
L_00ef: ldloc.2
L_00f0: callvirt Int32 get_Count()
L_00f5: add
L_00f6: bge Label6
L_00fb: ldloc.s 4 (System.Int32)
L_00fd: ldloc.1
L_00fe: callvirt Int32 get_Count()
L_0103: sub
L_0104: stloc.s 5 (System.Int32)
L_0106: ldarg.0
L_0107: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_010c: ldloc.s 4 (System.Int32)
L_010e: ldelem.ref
L_010f: ldc.i4.0
L_0110: ldloc.2
L_0111: ldloc.s 5 (System.Int32)
L_0113: callvirt BattleTech.Ability get_Item(Int32)
L_0118: ldloc.2
L_0119: ldloc.s 5 (System.Int32)
L_011b: callvirt BattleTech.Ability get_Item(Int32)
L_0120: callvirt BattleTech.AbilityDef get_Def()
L_0125: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_012a: ldloc.2
L_012b: ldloc.s 5 (System.Int32)
L_012d: callvirt BattleTech.Ability get_Item(Int32)
L_0132: callvirt BattleTech.AbilityDef get_Def()
L_0137: callvirt BattleTech.BaseDescriptionDef get_Description()
L_013c: callvirt System.String get_Id()
L_0141: ldloc.2
L_0142: ldloc.s 5 (System.Int32)
L_0144: callvirt BattleTech.Ability get_Item(Int32)
L_0149: callvirt BattleTech.AbilityDef get_Def()
L_014e: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0153: callvirt System.String get_Name()
L_0158: ldarg.1
L_0159: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_015e: ldarg.0
L_015f: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0164: ldloc.s 4 (System.Int32)
L_0166: ldelem.ref
L_0167: ldc.i4.0
L_0168: stfld System.Boolean isClickable
L_016d: ldarg.0
L_016e: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0173: ldloc.s 4 (System.Int32)
L_0175: ldelem.ref
L_0176: callvirt Void RefreshUIColors()
L_017b: br Label7
L_0180: Label6
L_0180: ldarg.0
L_0181: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0186: ldloc.s 4 (System.Int32)
L_0188: ldelem.ref
L_0189: ldc.i4.0
L_018a: ldnull
L_018b: ldnull
L_018c: ldstr ""
L_0191: ldstr ""
L_0196: ldnull
L_0197: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_019c: ldarg.0
L_019d: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01a2: ldloc.s 4 (System.Int32)
L_01a4: ldelem.ref
L_01a5: ldc.i4.0
L_01a6: stfld System.Boolean isClickable
L_01ab: ldarg.0
L_01ac: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01b1: ldloc.s 4 (System.Int32)
L_01b3: ldelem.ref
L_01b4: callvirt Void RefreshUIColors()
L_01b9: Label7
L_01b9: ldloc.s 4 (System.Int32)
L_01bb: ldc.i4.1
L_01bc: add
L_01bd: stloc.s 4 (System.Int32)
L_01bf: Label5
L_01bf: ldloc.s 4 (System.Int32)
L_01c1: ldarg.0
L_01c2: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01c7: ldlen
L_01c8: conv.i4
L_01c9: blt Label8
L_01ce: Label1
L_01ce: ldarg.1
L_01cf: callvirt BattleTech.Team get_team()
L_01d4: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_01d9: callvirt Int32 get_Count()
L_01de: ldc.i4.0
L_01df: ble Label9
L_01e4: ldarg.1
L_01e5: callvirt BattleTech.Team get_team()
L_01ea: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_01ef: ldc.i4.0
L_01f0: callvirt BattleTech.Ability get_Item(Int32)
L_01f5: stloc.s 6 (BattleTech.Ability)
L_01f7: ldarg.0
L_01f8: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_01fd: ldloc.s 6 (BattleTech.Ability)
L_01ff: callvirt BattleTech.AbilityDef get_Def()
L_0204: callvirt TargetingType get_Targeting()
L_0209: ldc.i4.0
L_020a: call BattleTech.UI.SelectionType GetSelectionTypeFromTargeting(TargetingType, Boolean)
L_020f: ldloc.s 6 (BattleTech.Ability)
L_0211: ldloc.s 6 (BattleTech.Ability)
L_0213: callvirt BattleTech.AbilityDef get_Def()
L_0218: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_021d: ldloc.s 6 (BattleTech.Ability)
L_021f: callvirt BattleTech.AbilityDef get_Def()
L_0224: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0229: callvirt System.String get_Id()
L_022e: ldloc.s 6 (BattleTech.Ability)
L_0230: callvirt BattleTech.AbilityDef get_Def()
L_0235: callvirt BattleTech.BaseDescriptionDef get_Description()
L_023a: callvirt System.String get_Name()
L_023f: ldnull
L_0240: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0245: br Label10
L_024a: Label9
L_024a: ldarg.0
L_024b: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0250: ldc.i4.0
L_0251: ldnull
L_0252: ldnull
L_0253: ldstr ""
L_0258: ldstr ""
L_025d: ldnull
L_025e: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0263: Label10
L_0263: ldarg.0
L_0264: ldarg 1
L_026a: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.AbstractActor)
L_026f: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void ResetAbilityButtons(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: ldarg.1
L_0001: callvirt BattleTech.Pilot GetPilot()
L_0006: stloc.0
L_0007: ldarg.1
L_0008: callvirt Boolean get_HasActivatedThisRound()
L_000d: brtrue Label1
L_0012: ldarg.1
L_0013: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_0018: brtrue Label2
L_001d: ldarg.0
L_001e: ldfld BattleTech.CombatGameState Combat
L_0023: callvirt BattleTech.StackManager get_StackManager()
L_0028: callvirt Boolean get_IsAnyOrderActive()
L_002d: brfalse Label3
L_0032: ldarg.0
L_0033: ldfld BattleTech.CombatGameState Combat
L_0038: callvirt BattleTech.TurnDirector get_TurnDirector()
L_003d: callvirt Boolean get_IsInterleaved()
L_0042: br Label4
L_0047: Label3
L_0047: ldc.i4.0
L_0048: br Label5
L_004d: Label1
L_004d: Label2
L_004d: ldc.i4.1
L_004e: Label4
L_004e: Label5
L_004e: stloc.1
L_004f: ldloc.0
L_0050: brfalse Label6
L_0055: ldloc.0
L_0056: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_ActiveAbilities()
L_005b: newobj Void .ctor(IEnumerable`1)
L_0060: stloc.2
L_0061: ldloc.2
L_0062: ldloc.0
L_0063: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_PassiveAbilities()
L_0068: ldsfld System.Predicate`1[BattleTech.Ability] <>9__122_0
L_006d: dup
L_006e: brtrue Label7
L_0073: pop
L_0074: ldsfld BattleTech.UI.CombatHUDMechwarriorTray+<>c <>9
L_0079: ldftn Boolean <ResetAbilityButtons>b__122_0(BattleTech.Ability)
L_007f: newobj Void .ctor(Object, IntPtr)
L_0084: dup
L_0085: stsfld System.Predicate`1[BattleTech.Ability] <>9__122_0
L_008a: Label7
L_008a: callvirt System.Collections.Generic.List`1[BattleTech.Ability] FindAll(System.Predicate`1[BattleTech.Ability])
L_008f: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.Ability])
L_0094: ldc.i4.0
L_0095: stloc.3
L_0096: br Label8
L_009b: Label11
L_009b: ldloc.3
L_009c: ldloc.2
L_009d: callvirt Int32 get_Count()
L_00a2: bge Label9
L_00a7: ldarg.0
L_00a8: ldarg.1
L_00a9: ldarg.0
L_00aa: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00af: ldloc.3
L_00b0: ldelem.ref
L_00b1: ldloc.2
L_00b2: ldloc.3
L_00b3: callvirt BattleTech.Ability get_Item(Int32)
L_00b8: ldloc.1
L_00b9: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_00be: br Label10
L_00c3: Label9
L_00c3: ldarg.0
L_00c4: ldarg.1
L_00c5: ldarg.0
L_00c6: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00cb: ldloc.3
L_00cc: ldelem.ref
L_00cd: ldnull
L_00ce: ldc.i4.0
L_00cf: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_00d4: Label10
L_00d4: ldloc.3
L_00d5: ldc.i4.1
L_00d6: add
L_00d7: stloc.3
L_00d8: Label8
L_00d8: ldloc.3
L_00d9: ldarg.0
L_00da: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00df: ldlen
L_00e0: conv.i4
L_00e1: blt Label11
L_00e6: ldarg.1
L_00e7: callvirt BattleTech.Team get_team()
L_00ec: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_00f1: callvirt Int32 get_Count()
L_00f6: ldc.i4.0
L_00f7: ble Label12
L_00fc: ldarg.0
L_00fd: ldarg.1
L_00fe: ldarg.0
L_00ff: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0104: ldarg.1
L_0105: callvirt BattleTech.Team get_team()
L_010a: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_010f: ldc.i4.0
L_0110: callvirt BattleTech.Ability get_Item(Int32)
L_0115: ldloc.1
L_0116: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_011b: br Label13
L_0120: Label12
L_0120: ldarg.0
L_0121: ldarg.1
L_0122: ldarg.0
L_0123: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0128: ldnull
L_0129: ldc.i4.0
L_012a: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_012f: Label6
L_012f: Label13
L_012f: ldarg.0
L_0130: ldarg 1
L_0136: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.AbstractActor)
L_013b: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldarg.0
L_0022: call Boolean Prefix(BattleTech.CombatGameState)
L_0027: brfalse Label0
L_002c: ldarg.0
L_002d: call Boolean Prefix(BattleTech.CombatGameState)
L_0032: brfalse Label0
L_0037: ldsfld HBS.Logging.ILog gameInfoLogger
L_003c: ldstr "CombatGameState Destroyed: {0}"
L_0041: call System.DateTime get_UtcNow()
L_0046: stloc.0
L_0047: ldloca.s 0 (System.DateTime)
L_0049: ldstr "ddd MMM d yyyy HH:mm:ss"
L_004e: call System.String ToString(System.String)
L_0053: call System.String Format(System.String, System.Object)
L_0058: callvirt Void Log(System.Object)
L_005d: ldarg.0
L_005e: call MessageCenter get_MessageCenter()
L_0063: brfalse Label1
L_0068: ldarg.0
L_0069: call MessageCenter get_MessageCenter()
L_006e: newobj Void .ctor()
L_0073: dup
L_0074: call BattleTech.GameInstance get_BattleTechGame()
L_0079: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_007e: callvirt Boolean IsNetworkGameActive()
L_0083: callvirt Void set_IsNetworkGame(Boolean)
L_0088: callvirt Void PublishMessage(MessageCenterMessage)
L_008d: Label1
L_008d: ldarg.0
L_008e: call BattleTech.StackManager get_StackManager()
L_0093: brfalse Label2
L_0098: ldarg.0
L_0099: call BattleTech.StackManager get_StackManager()
L_009e: callvirt Void OnCombatGameDestroyed()
L_00a3: ldarg.0
L_00a4: ldnull
L_00a5: call Void set_StackManager(BattleTech.StackManager)
L_00aa: Label2
L_00aa: ldarg.0
L_00ab: call BattleTech.TurnDirector get_TurnDirector()
L_00b0: brfalse Label3
L_00b5: ldarg.0
L_00b6: call BattleTech.TurnDirector get_TurnDirector()
L_00bb: callvirt Void OnCombatGameDestroyed()
L_00c0: Label3
L_00c0: ldarg.0
L_00c1: call BattleTech.InvocationHandler get_InvocationHandler()
L_00c6: brfalse Label4
L_00cb: ldarg.0
L_00cc: call BattleTech.InvocationHandler get_InvocationHandler()
L_00d1: callvirt Void OnCombatGameDestroyed()
L_00d6: Label4
L_00d6: ldarg.0
L_00d7: call MessageCenter get_MessageCenter()
L_00dc: brfalse Label5
L_00e1: ldarg.0
L_00e2: call MessageCenter get_MessageCenter()
L_00e7: ldc.i4.3
L_00e8: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00ed: Label5
L_00ed: ldarg.0
L_00ee: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00f3: brfalse Label6
L_00f8: ldarg.0
L_00f9: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00fe: callvirt Void Dispose()
L_0103: Label6
L_0103: call Boolean get_HasInstance()
L_0108: brfalse Label7
L_010d: call HBS.DebugConsole.DebugConsole get_Instance()
L_0112: ldarg.0
L_0113: ldftn Void DebugConsoleOnBeforeDump()
L_0119: newobj Void .ctor(Object, IntPtr)
L_011e: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0123: Label7
L_0123: call Boolean get_HasInstance()
L_0128: brfalse Label8
L_012d: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0132: callvirt Void OnCombatSceneEnd()
L_0137: Label8
L_0137: ldnull
L_0138: call Void set_destructionConstantsComponent(DestructionConstants)
L_013d: call Void ClearStaticData()
L_0142: call Void ClearStaticData()
L_0147: call Void ClearStaticData()
L_014c: call Void ClearStaticData()
L_0151: call Void ClearStaticData()
L_0156: ldsfld HBS.Logging.ILog gameInfoLogger
L_015b: ldstr "CombatGameState destroyed: {0}"
L_0160: call System.DateTime get_UtcNow()
L_0165: stloc.0
L_0166: ldloca.s 0 (System.DateTime)
L_0168: ldstr "ddd MMM d yyyy HH:mm:ss"
L_016d: call System.String ToString(System.String)
L_0172: call System.String Format(System.String, System.Object)
L_0177: callvirt Void Log(System.Object)
L_017c: Label0
L_017c: ldarg.0
L_017d: call Void Postfix(BattleTech.CombatGameState)
L_0182: ret
DONE

### Patch AttackEvaluator, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Single
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Weapon
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.Weapon
L_0000: Local var 12: System.Single
### Harmony id=io.github.denadan.CustomComponents, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CustomComponents.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomComponents\CustomComponents.dll
### At 2019-09-15 05.05.12
### Patch BattleTech.SimGameState, Void InitCompanyStats()
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.SimGameState+SimGameType
L_0000: Local var 2: BattleTech.DropshipType
L_0000: ldarg.0
L_0001: call BattleTech.StatCollection get_CompanyStats()
L_0006: ldarg.0
L_0007: call BattleTech.SimGameConstants get_Constants()
L_000c: callvirt BattleTech.StoryConstantsDef get_Story()
L_0011: ldfld System.String SystemMissionCompleteCountStat
L_0016: ldc.i4.0
L_0017: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_001c: pop
L_001d: ldarg.0
L_001e: ldfld BattleTech.StatCollection companyStats
L_0023: ldstr "Funds"
L_0028: ldc.i4.0
L_0029: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_002e: pop
L_002f: ldarg.0
L_0030: ldfld BattleTech.StatCollection companyStats
L_0035: ldstr "FundsEverGained"
L_003a: ldc.i4.0
L_003b: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0040: pop
L_0041: ldarg.0
L_0042: ldfld BattleTech.StatCollection companyStats
L_0047: ldstr "TaskDuration"
L_004c: ldc.i4.0
L_004d: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0052: pop
L_0053: ldarg.0
L_0054: ldfld BattleTech.StatCollection companyStats
L_0059: ldstr "TravelTime"
L_005e: ldc.i4.s 99
L_0060: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0065: pop
L_0066: ldarg.0
L_0067: ldfld BattleTech.StatCollection companyStats
L_006c: ldstr "Travel"
L_0071: ldc.i4.0
L_0072: callvirt BattleTech.Statistic AddStatistic[SimGameTravelStatus](System.String, BattleTech.SimGameTravelStatus)
L_0077: pop
L_0078: ldarg.0
L_0079: ldfld BattleTech.StatCollection companyStats
L_007e: ldstr "UpgradeValue"
L_0083: ldarg.0
L_0084: call BattleTech.SimGameConstants get_Constants()
L_0089: callvirt BattleTech.StoryConstantsDef get_Story()
L_008e: ldfld System.Int32 DailyUpgradeValue
L_0093: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0098: pop
L_0099: ldarg.0
L_009a: ldfld BattleTech.StatCollection companyStats
L_009f: ldstr "MechTechSkill"
L_00a4: ldarg.0
L_00a5: call BattleTech.SimGameConstants get_Constants()
L_00aa: callvirt BattleTech.StoryConstantsDef get_Story()
L_00af: ldfld System.Int32 StartingMechTechSkill
L_00b4: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00b9: pop
L_00ba: ldarg.0
L_00bb: ldfld BattleTech.StatCollection companyStats
L_00c0: ldstr "MedTechSkill"
L_00c5: ldarg.0
L_00c6: call BattleTech.SimGameConstants get_Constants()
L_00cb: callvirt BattleTech.StoryConstantsDef get_Story()
L_00d0: ldfld System.Int32 StartingMedTechSkill
L_00d5: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00da: pop
L_00db: ldarg.0
L_00dc: ldfld BattleTech.StatCollection companyStats
L_00e1: ldstr "ExperiencePerDay"
L_00e6: ldarg.0
L_00e7: call BattleTech.SimGameConstants get_Constants()
L_00ec: callvirt BattleTech.StoryConstantsDef get_Story()
L_00f1: ldfld System.Int32 StartingPassiveXPGain
L_00f6: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00fb: pop
L_00fc: ldarg.0
L_00fd: ldfld BattleTech.StatCollection companyStats
L_0102: ldstr "ExperiencePerDayCap"
L_0107: ldarg.0
L_0108: call BattleTech.SimGameConstants get_Constants()
L_010d: callvirt BattleTech.StoryConstantsDef get_Story()
L_0112: ldfld System.Int32 StartingPassiveXPGainCap
L_0117: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_011c: pop
L_011d: ldarg.0
L_011e: call SimGameType get_SimGameMode()
L_0123: stloc.1
L_0124: ldloc.1
L_0125: ldc.i4.2
L_0126: bne.un Label1
L_012b: ldarg.0
L_012c: call BattleTech.SimGameConstants get_Constants()
L_0131: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0136: ldfld System.Int32 StartingGlobalContractDifficulty
L_013b: conv.r4
L_013c: stloc.0
L_013d: br Label2
L_0142: Label1
L_0142: ldarg.0
L_0143: call BattleTech.SimGameConstants get_Constants()
L_0148: callvirt BattleTech.StoryConstantsDef get_Story()
L_014d: ldfld System.Single StartingGlobalContractDifficulty
L_0152: stloc.0
L_0153: Label2
L_0153: ldarg.0
L_0154: ldfld BattleTech.StatCollection companyStats
L_0159: ldstr "Difficulty"
L_015e: ldloc.0
L_015f: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0164: pop
L_0165: ldarg.0
L_0166: ldfld BattleTech.StatCollection companyStats
L_016b: ldstr "ShipType"
L_0170: ldc.i4.0
L_0171: stloc.2
L_0172: ldloca.s 2 (BattleTech.DropshipType)
L_0174: constrained. BattleTech.DropshipType
L_017a: callvirt System.String ToString()
L_017f: callvirt BattleTech.Statistic AddStatistic[String](System.String, System.String)
L_0184: pop
L_0185: ldarg.0
L_0186: ldfld BattleTech.StatCollection companyStats
L_018b: ldarg.0
L_018c: call BattleTech.SimGameConstants get_Constants()
L_0191: callvirt BattleTech.StoryConstantsDef get_Story()
L_0196: ldfld System.String MechBayPodsID
L_019b: ldarg.0
L_019c: call BattleTech.SimGameConstants get_Constants()
L_01a1: callvirt BattleTech.StoryConstantsDef get_Story()
L_01a6: ldfld System.Int32 StartingMechPods
L_01ab: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_01b0: pop
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.StatCollection companyStats
L_01b7: ldarg.0
L_01b8: call BattleTech.SimGameConstants get_Constants()
L_01bd: callvirt BattleTech.StoryConstantsDef get_Story()
L_01c2: ldfld System.String BarracksPodsID
L_01c7: ldarg.0
L_01c8: call BattleTech.SimGameConstants get_Constants()
L_01cd: callvirt BattleTech.StoryConstantsDef get_Story()
L_01d2: ldfld System.Int32 StartingBarrackPods
L_01d7: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_01dc: pop
L_01dd: ldarg.0
L_01de: ldfld BattleTech.StatCollection companyStats
L_01e3: ldarg.0
L_01e4: call BattleTech.SimGameConstants get_Constants()
L_01e9: callvirt BattleTech.StoryConstantsDef get_Story()
L_01ee: ldfld System.String DriveTravelID
L_01f3: ldarg.0
L_01f4: call BattleTech.SimGameConstants get_Constants()
L_01f9: callvirt BattleTech.StoryConstantsDef get_Story()
L_01fe: ldfld System.Single StartingDriveMod
L_0203: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0208: pop
L_0209: ldarg.0
L_020a: ldfld BattleTech.StatCollection companyStats
L_020f: ldstr "COMPANY_MechKills"
L_0214: ldc.i4.0
L_0215: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_021a: pop
L_021b: ldarg.0
L_021c: ldfld BattleTech.StatCollection companyStats
L_0221: ldstr "COMPANY_OtherKills"
L_0226: ldc.i4.0
L_0227: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_022c: pop
L_022d: ldarg.0
L_022e: ldfld BattleTech.StatCollection companyStats
L_0233: ldstr "COMPANY_MissionsAttempted"
L_0238: ldc.i4.0
L_0239: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_023e: pop
L_023f: ldarg.0
L_0240: ldfld BattleTech.StatCollection companyStats
L_0245: ldstr "COMPANY_MissionsSucceeded"
L_024a: ldc.i4.0
L_024b: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0250: pop
L_0251: ldarg.0
L_0252: ldfld BattleTech.StatCollection companyStats
L_0257: ldstr "COMPANY_MissionsGoodFaith"
L_025c: ldc.i4.0
L_025d: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0262: pop
L_0263: ldarg.0
L_0264: ldfld BattleTech.StatCollection companyStats
L_0269: ldstr "COMPANY_MissionFailures"
L_026e: ldc.i4.0
L_026f: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0274: pop
L_0275: ldarg.0
L_0276: ldfld BattleTech.StatCollection companyStats
L_027b: ldstr "COMPANY_MissionAggregateDifficulty"
L_0280: ldc.i4.0
L_0281: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0286: pop
L_0287: ldarg.0
L_0288: ldfld BattleTech.StatCollection companyStats
L_028d: ldstr "COMPANY_MonthlyStartingFunds"
L_0292: ldc.i4.0
L_0293: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0298: pop
L_0299: ldarg.0
L_029a: ldfld BattleTech.StatCollection companyStats
L_029f: ldstr "COMPANY_MonthlyStartingMorale"
L_02a4: ldc.i4.0
L_02a5: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02aa: pop
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.StatCollection companyStats
L_02b1: ldstr "COMPANY_MechWarriorsHired"
L_02b6: ldc.i4.0
L_02b7: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02bc: pop
L_02bd: ldarg.0
L_02be: ldfld BattleTech.StatCollection companyStats
L_02c3: ldstr "COMPANY_MechWarriorsFired"
L_02c8: ldc.i4.0
L_02c9: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02ce: pop
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.StatCollection companyStats
L_02d5: ldstr "COMPANY_MechsAdded"
L_02da: ldc.i4.0
L_02db: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02e0: pop
L_02e1: ldarg.0
L_02e2: ldfld BattleTech.StatCollection companyStats
L_02e7: ldstr "COMPANY_NotificationViewed_LowFunds"
L_02ec: ldarg.0
L_02ed: call BattleTech.SimGameConstants get_Constants()
L_02f2: callvirt BattleTech.StoryConstantsDef get_Story()
L_02f7: ldfld System.Int32 NotifLowFundsRecurrence
L_02fc: neg
L_02fd: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0302: pop
L_0303: ldarg.0
L_0304: ldfld BattleTech.StatCollection companyStats
L_0309: ldstr "COMPANY_NotificationViewed_ArgoUpgradeNeeded"
L_030e: ldarg.0
L_030f: call BattleTech.SimGameConstants get_Constants()
L_0314: callvirt BattleTech.StoryConstantsDef get_Story()
L_0319: ldfld System.Int32 NotifArgoUpgradesRecurrence
L_031e: neg
L_031f: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0324: pop
L_0325: ldarg.0
L_0326: ldfld BattleTech.StatCollection companyStats
L_032b: ldstr "COMPANY_NotificationViewed_BattleMechRepairsNeeded"
L_0330: ldarg.0
L_0331: call BattleTech.SimGameConstants get_Constants()
L_0336: callvirt BattleTech.StoryConstantsDef get_Story()
L_033b: ldfld System.Int32 NotifMechRepairsNeededRecurrence
L_0340: neg
L_0341: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0346: pop
L_0347: ldarg.0
L_0348: call Void InitCompanyStatValidators()
L_034d: ldarg.0
L_034e: call Void OnNewQuarterBegin()
L_0353: ldarg.0
L_0354: call Void Postfix(BattleTech.SimGameState)
L_0359: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg 1
L_0018: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: call Void set_Combat(BattleTech.CombatGameState)
L_0029: ldarg.0
L_002a: ldarg.1
L_002b: newobj Void .ctor(CombatGameState)
L_0030: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0035: ldarg.0
L_0036: ldarg.0
L_0037: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_003c: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0047: ldnull
L_0048: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004d: brfalse Label1
L_0052: ldsfld HBS.Logging.ILog uiLogger
L_0057: ldstr "Couldn't find Selection Handler."
L_005c: callvirt Void LogWarning(System.Object)
L_0061: br Label2
L_0066: Label1
L_0066: ldarg.0
L_0067: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_006c: ldarg.1
L_006d: ldarg.0
L_006e: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0073: Label2
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: ldc.i4.1
L_0076: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_007b: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_0080: ldarg.0
L_0081: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0086: ldnull
L_0087: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_008c: brfalse Label3
L_0091: ldsfld HBS.Logging.ILog uiLogger
L_0096: ldstr "Couldn't find MechTray under the CombatHUD."
L_009b: callvirt Void LogWarning(System.Object)
L_00a0: br Label4
L_00a5: Label3
L_00a5: ldarg.0
L_00a6: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_00ab: ldarg.1
L_00ac: callvirt MessageCenter get_MessageCenter()
L_00b1: ldarg.0
L_00b2: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_00b7: Label4
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldc.i4.1
L_00ba: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_00bf: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00c4: ldarg.0
L_00c5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00ca: ldnull
L_00cb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00d0: brfalse Label5
L_00d5: ldsfld HBS.Logging.ILog uiLogger
L_00da: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00df: callvirt Void LogWarning(System.Object)
L_00e4: br Label6
L_00e9: Label5
L_00e9: ldarg.0
L_00ea: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00ef: ldarg.1
L_00f0: ldarg.0
L_00f1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00f6: ldarg.0
L_00f7: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00fc: ldarg.1
L_00fd: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0102: callvirt Void RefreshTeam(BattleTech.Team)
L_0107: Label6
L_0107: ldarg.0
L_0108: ldarg.0
L_0109: ldc.i4.1
L_010a: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_010f: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_0114: ldarg.0
L_0115: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011a: ldnull
L_011b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0120: brfalse Label7
L_0125: ldsfld HBS.Logging.ILog uiLogger
L_012a: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_012f: callvirt Void LogWarning(System.Object)
L_0134: br Label8
L_0139: Label7
L_0139: ldarg.0
L_013a: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_013f: ldnull
L_0140: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0145: ldarg.0
L_0146: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_014b: ldarg.1
L_014c: ldarg.0
L_014d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0152: Label8
L_0152: ldarg.0
L_0153: call BattleTech.UI.UIManager get_Instance()
L_0158: ldstr ""
L_015d: ldc.i4.1
L_015e: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0163: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0168: ldarg.0
L_0169: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_016e: ldnull
L_016f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0174: brfalse Label9
L_0179: ldsfld HBS.Logging.ILog uiLogger
L_017e: ldstr "Error creating PhaseTrack!"
L_0183: callvirt Void LogWarning(System.Object)
L_0188: br Label10
L_018d: Label9
L_018d: ldarg.0
L_018e: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0193: ldarg.1
L_0194: ldarg.0
L_0195: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_019a: Label10
L_019a: ldarg.0
L_019b: call BattleTech.UI.UIManager get_Instance()
L_01a0: ldstr ""
L_01a5: ldc.i4.1
L_01a6: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_01ab: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_01b0: ldarg.0
L_01b1: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b6: ldnull
L_01b7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01bc: brfalse Label11
L_01c1: ldsfld HBS.Logging.ILog uiLogger
L_01c6: ldstr "Error creating Turn Event Notification!"
L_01cb: callvirt Void LogError(System.Object)
L_01d0: br Label12
L_01d5: Label11
L_01d5: ldarg.0
L_01d6: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01db: ldarg.1
L_01dc: ldarg.0
L_01dd: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01e2: Label12
L_01e2: ldarg.1
L_01e3: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01e8: callvirt Boolean IsNetworkGameActive()
L_01ed: brfalse Label13
L_01f2: ldarg.0
L_01f3: call BattleTech.UI.UIManager get_Instance()
L_01f8: ldstr ""
L_01fd: ldc.i4.1
L_01fe: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_0203: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_0208: ldarg.0
L_0209: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_020e: ldnull
L_020f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0214: brfalse Label14
L_0219: ldsfld HBS.Logging.ILog uiLogger
L_021e: ldstr "Error creating multiplayer UI!"
L_0223: callvirt Void LogError(System.Object)
L_0228: br Label15
L_022d: Label14
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0233: ldarg.0
L_0234: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0239: Label13
L_0239: Label15
L_0239: ldarg.0
L_023a: call BattleTech.UI.UIManager get_Instance()
L_023f: ldstr ""
L_0244: ldc.i4.1
L_0245: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_024a: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_024f: ldarg.0
L_0250: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0255: ldnull
L_0256: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_025b: brfalse Label16
L_0260: ldsfld HBS.Logging.ILog uiLogger
L_0265: ldstr "Error creating Targeting Computer!"
L_026a: callvirt Void LogError(System.Object)
L_026f: br Label17
L_0274: Label16
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_027a: ldarg.0
L_027b: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0280: Label17
L_0280: ldarg.0
L_0281: call BattleTech.UI.UIManager get_Instance()
L_0286: ldstr ""
L_028b: ldc.i4.1
L_028c: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_0291: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0296: ldarg.0
L_0297: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029c: ldnull
L_029d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02a2: brfalse Label18
L_02a7: ldsfld HBS.Logging.ILog uiLogger
L_02ac: ldstr "Error creating Called Shot Popup!"
L_02b1: callvirt Void LogError(System.Object)
L_02b6: br Label19
L_02bb: Label18
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_02c1: ldarg.0
L_02c2: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02c7: Label19
L_02c7: ldarg.0
L_02c8: call BattleTech.UI.UIManager get_Instance()
L_02cd: ldstr ""
L_02d2: ldc.i4.1
L_02d3: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02d8: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02dd: ldarg.0
L_02de: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e3: ldnull
L_02e4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02e9: brfalse Label20
L_02ee: ldsfld HBS.Logging.ILog uiLogger
L_02f3: ldstr "Error creating Attack Mode Selector!"
L_02f8: callvirt Void LogError(System.Object)
L_02fd: br Label21
L_0302: Label20
L_0302: ldarg.0
L_0303: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0308: ldarg.1
L_0309: ldarg.0
L_030a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_030f: ldarg.0
L_0310: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0315: ldc.i4.0
L_0316: callvirt Void set_Visible(Boolean)
L_031b: Label21
L_031b: ldarg.0
L_031c: ldarg.0
L_031d: call UnityEngine.GameObject get_gameObject()
L_0322: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0327: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_032c: ldarg.0
L_032d: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0332: ldnull
L_0333: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0338: brfalse Label22
L_033d: ldsfld HBS.Logging.ILog uiLogger
L_0342: ldstr "Error finding InWorldElementMgr!"
L_0347: callvirt Void LogError(System.Object)
L_034c: br Label23
L_0351: Label22
L_0351: ldarg.0
L_0352: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0357: ldarg.1
L_0358: ldarg.0
L_0359: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_035e: Label23
L_035e: ldarg.0
L_035f: call BattleTech.UI.UIManager get_Instance()
L_0364: ldstr ""
L_0369: ldc.i4.1
L_036a: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_036f: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0374: ldarg.0
L_0375: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_037a: ldnull
L_037b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0380: brfalse Label24
L_0385: ldsfld HBS.Logging.ILog uiLogger
L_038a: ldstr "Error creating Objective Status Notification!"
L_038f: callvirt Void LogError(System.Object)
L_0394: Label24
L_0394: ldarg.0
L_0395: call BattleTech.UI.UIManager get_Instance()
L_039a: ldstr ""
L_039f: ldc.i4.1
L_03a0: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_03a5: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_03aa: ldarg.0
L_03ab: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b0: ldnull
L_03b1: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03b6: brfalse Label25
L_03bb: ldsfld HBS.Logging.ILog uiLogger
L_03c0: ldstr "Error creating Objective List!"
L_03c5: callvirt Void LogError(System.Object)
L_03ca: br Label26
L_03cf: Label25
L_03cf: ldarg.0
L_03d0: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03d5: ldarg.1
L_03d6: ldarg.0
L_03d7: ldarg.0
L_03d8: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03dd: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03e2: Label26
L_03e2: call BattleTech.UI.UIManager get_Instance()
L_03e7: ldstr ""
L_03ec: ldc.i4.1
L_03ed: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03f2: stloc.0
L_03f3: ldloc.0
L_03f4: callvirt Void Init()
L_03f9: ldloc.0
L_03fa: ldc.i4.0
L_03fb: callvirt Void set_Visible(Boolean)
L_0400: ldarg.0
L_0401: call BattleTech.UI.UIManager get_Instance()
L_0406: ldstr ""
L_040b: ldc.i4.1
L_040c: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_0411: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_0416: ldarg.0
L_0417: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041c: ldnull
L_041d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0422: brfalse Label27
L_0427: ldsfld HBS.Logging.ILog uiLogger
L_042c: ldstr "Error creating DialogSideStack!"
L_0431: callvirt Void LogError(System.Object)
L_0436: br Label28
L_043b: Label27
L_043b: ldarg.0
L_043c: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0441: ldarg.1
L_0442: ldarg.0
L_0443: ldloc.0
L_0444: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0449: Label28
L_0449: ldarg.0
L_044a: call BattleTech.UI.UIManager get_Instance()
L_044f: ldstr ""
L_0454: ldc.i4.1
L_0455: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_045a: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_045f: ldarg.0
L_0460: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0465: ldnull
L_0466: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_046b: brfalse Label29
L_0470: ldsfld HBS.Logging.ILog uiLogger
L_0475: ldstr "Error creating DialogWidget!"
L_047a: callvirt Void LogError(System.Object)
L_047f: br Label30
L_0484: Label29
L_0484: ldarg.0
L_0485: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_048a: ldarg.1
L_048b: callvirt Void Init(BattleTech.CombatGameState)
L_0490: Label30
L_0490: ldarg.0
L_0491: call BattleTech.UI.UIManager get_Instance()
L_0496: ldstr ""
L_049b: ldc.i4.1
L_049c: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_04a1: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_04a6: ldarg.0
L_04a7: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04ac: ldnull
L_04ad: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04b2: brfalse Label31
L_04b7: ldsfld HBS.Logging.ILog uiLogger
L_04bc: ldstr "Error creating RetreatEscMenu!"
L_04c1: callvirt Void LogError(System.Object)
L_04c6: br Label32
L_04cb: Label31
L_04cb: ldarg.0
L_04cc: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04d1: ldarg.1
L_04d2: ldarg.0
L_04d3: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04d8: Label32
L_04d8: ldarg.0
L_04d9: call BattleTech.UI.UIManager get_Instance()
L_04de: ldstr ""
L_04e3: ldc.i4.1
L_04e4: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04e9: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04ee: ldarg.0
L_04ef: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f4: ldnull
L_04f5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04fa: brfalse Label33
L_04ff: ldsfld HBS.Logging.ILog uiLogger
L_0504: ldstr "Error creating mission end screen!"
L_0509: callvirt Void LogError(System.Object)
L_050e: br Label34
L_0513: Label33
L_0513: ldarg.0
L_0514: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_0519: callvirt Void Init()
L_051e: Label34
L_051e: ldarg.0
L_051f: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0524: ldnull
L_0525: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_052a: brfalse Label35
L_052f: ldarg.0
L_0530: call BattleTech.UI.UIManager get_Instance()
L_0535: ldstr ""
L_053a: ldc.i4.1
L_053b: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_0540: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0545: ldarg.0
L_0546: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054b: ldnull
L_054c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0551: brfalse Label36
L_0556: ldsfld HBS.Logging.ILog uiLogger
L_055b: ldstr "Error creating combat chat module"
L_0560: callvirt Void LogError(System.Object)
L_0565: br Label37
L_056a: Label36
L_056a: ldarg.0
L_056b: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0570: callvirt Void CombatInit()
L_0575: ldloc.0
L_0576: callvirt Void BumpUp()
L_057b: Label35
L_057b: Label37
L_057b: ldarg.0
L_057c: call BattleTech.UI.UIManager get_Instance()
L_0581: ldstr "DebugHUD"
L_0586: ldc.i4.1
L_0587: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_058c: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_0591: ldarg.0
L_0592: call BattleTech.UI.DebugHUD get_debugHUD()
L_0597: ldnull
L_0598: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_059d: brfalse Label38
L_05a2: ldsfld HBS.Logging.ILog uiLogger
L_05a7: ldstr "Error creating combat debug hud"
L_05ac: callvirt Void LogError(System.Object)
L_05b1: br Label39
L_05b6: Label38
L_05b6: ldarg.0
L_05b7: call BattleTech.UI.DebugHUD get_debugHUD()
L_05bc: ldarg.1
L_05bd: ldarg.0
L_05be: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05c3: Label39
L_05c3: newobj Void .ctor()
L_05c8: stloc.1
L_05c9: ldarg.0
L_05ca: ldc.i4.1
L_05cb: ldloc.1
L_05cc: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05d1: ldc.i4.0
L_05d2: stloc.2
L_05d3: br Label40
L_05d8: Label42
L_05d8: ldloc.1
L_05d9: ldloc.2
L_05da: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05df: callvirt Boolean get_IsInitialized()
L_05e4: brtrue Label41
L_05e9: ldloc.1
L_05ea: ldloc.2
L_05eb: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05f0: ldarg.0
L_05f1: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05f6: Label41
L_05f6: ldloc.2
L_05f7: ldc.i4.1
L_05f8: add
L_05f9: stloc.2
L_05fa: Label40
L_05fa: ldloc.2
L_05fb: ldloc.1
L_05fc: callvirt Int32 get_Count()
L_0601: blt Label42
L_0606: ldarg.0
L_0607: ldfld BattleTech.UI.UIManager uiManager
L_060c: ldc.i4.1
L_060d: callvirt Void SetUIRootInteractable(Boolean)
L_0612: ldarg.1
L_0613: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0618: callvirt Int32 get_CurrentRound()
L_061d: brfalse Label43
L_0622: ldarg.0
L_0623: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0628: ldarg.1
L_0629: callvirt BattleTech.TurnDirector get_TurnDirector()
L_062e: callvirt Int32 get_CurrentRound()
L_0633: callvirt Void SetRoundFromLoad(Int32)
L_0638: Label43
L_0638: ldarg.0
L_0639: ldc.i4.1
L_063a: call Void SubscribeToMessages(Boolean)
L_063f: Label0
L_063f: ldarg.0
L_0640: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0645: ldarg.0
L_0646: ldarg 1
L_064c: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_0651: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_InventoryGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_InventoryGear, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_InventoryWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_InventoryWeapon, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryItemElement, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.MechComponentRef componentRef
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.MechComponentRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryItemElement_NotListView, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.MechComponentRef componentRef
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement_NotListView, BattleTech.MechComponentRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_InventoryGear_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_InventoryGear_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_InventoryWeapon_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_InventoryWeapon_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.LanceMechEquipmentListItem, Void SetData(System.String, BattleTech.ComponentDamageLevel, BattleTech.UI.UIColor, BattleTech.UI.UIColor)
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.TMProWrapper.LocalizableText itemText
L_0006: ldarg.1
L_0007: call System.Object[] Empty[Object]()
L_000c: callvirt Void SetText(System.String, System.Object[])
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0017: ldarg.3
L_0018: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0023: ldarg.s 4
L_0025: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_002a: ldarg.2
L_002b: ldc.i4.2
L_002c: ble Label1
L_0031: ldarg.0
L_0032: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0037: ldc.i4.7
L_0038: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_003d: br Label3
L_0042: Label1
L_0042: ldarg.2
L_0043: ldc.i4.0
L_0044: ble Label2
L_0049: ldarg.0
L_004a: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_004f: ldc.i4.6
L_0050: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0055: br Label4
L_005a: Label2
L_005a: ldarg.0
L_005b: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0060: ldc.i4.1
L_0061: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0066: Label3
L_0066: Label4
L_0066: ldarg 2
L_006c: call Void SetColor(BattleTech.ComponentDamageLevel)
L_0071: ret
DONE

### Patch BattleTech.UI.LanceMechEquipmentListItem, Void SetTooltipData(BattleTech.MechComponentDef)
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_0006: ldnull
L_0007: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: call BattleTech.UI.Tooltips.HBSTooltip GetComponent[HBSTooltip]()
L_0018: stfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_001d: Label1
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_0023: ldnull
L_0024: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0029: brfalse Label2
L_002e: ldarg.1
L_002f: brfalse Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_003a: ldarg.1
L_003b: call System.Object MechComponentDefHandlerForTooltip(BattleTech.MechComponentDef)
L_0040: call BattleTech.UI.Tooltips.HBSTooltipStateData GetStateDataFromObject(System.Object)
L_0045: callvirt Void SetDefaultStateData(BattleTech.UI.Tooltips.HBSTooltipStateData)
L_004a: Label2
L_004a: Label3
L_004a: ldarg.0
L_004b: ldarg 1
L_0051: ldarg.0
L_0052: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0057: ldarg.0
L_0058: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_005d: call Void SetColor(BattleTech.UI.LanceMechEquipmentListItem, BattleTech.MechComponentDef, BattleTech.UI.UIColorRefTracker, BattleTech.UI.UIColorRefTracker)
L_0062: ret
DONE

### Patch BattleTech.MechComponentDef, BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.AmmunitionBoxDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmunitionDef
L_0000: Local var 5: BattleTech.UI.UIColor
L_0000: ldc.i4 0
L_0005: stloc 5 (BattleTech.UI.UIColor)
L_0007: ldc.i4.1
L_0008: stloc.0
L_0009: ldarg.0
L_000a: brtrue Label1
L_000f: ldloc.0
L_0010: br Label18
L_0015: Label1
L_0015: ldarg.0
L_0016: isinst BattleTech.WeaponDef
L_001b: stloc.1
L_001c: ldarg.0
L_001d: isinst BattleTech.AmmunitionBoxDef
L_0022: stloc.2
L_0023: ldloc.2
L_0024: brfalse Label2
L_0029: ldloc.2
L_002a: ldarg.0
L_002b: callvirt BattleTech.Data.DataManager get_DataManager()
L_0030: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_0035: Label2
L_0035: ldarg.0
L_0036: callvirt BattleTech.ComponentType get_ComponentType()
L_003b: ldc.i4.1
L_003c: bne.un Label3
L_0041: ldloc.1
L_0042: callvirt BattleTech.WeaponCategory get_Category()
L_0047: stloc.3
L_0048: ldloc.3
L_0049: ldc.i4.1
L_004a: sub
L_004b: switch Labels4,5,6,7
L_0060: br Label8
L_0065: Label4
L_0065: call BattleTech.UI.UIManager get_Instance()
L_006a: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_006f: ldflda BattleTech.UI.UIColorRef Ballistic
L_0074: ldfld BattleTech.UI.UIColor UIColor
L_0079: stloc.0
L_007a: br Label9
L_007f: Label5
L_007f: call BattleTech.UI.UIManager get_Instance()
L_0084: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0089: ldflda BattleTech.UI.UIColorRef Energy
L_008e: ldfld BattleTech.UI.UIColor UIColor
L_0093: stloc.0
L_0094: br Label10
L_0099: Label6
L_0099: call BattleTech.UI.UIManager get_Instance()
L_009e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00a3: ldflda BattleTech.UI.UIColorRef Missile
L_00a8: ldfld BattleTech.UI.UIColor UIColor
L_00ad: stloc.0
L_00ae: br Label11
L_00b3: Label7
L_00b3: call BattleTech.UI.UIManager get_Instance()
L_00b8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00bd: ldflda BattleTech.UI.UIColorRef Small
L_00c2: ldfld BattleTech.UI.UIColor UIColor
L_00c7: stloc.0
L_00c8: br Label12
L_00cd: Label8
L_00cd: call BattleTech.UI.UIManager get_Instance()
L_00d2: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00d7: ldflda BattleTech.UI.UIColorRef Equipment
L_00dc: ldfld BattleTech.UI.UIColor UIColor
L_00e1: stloc.0
L_00e2: br Label13
L_00e7: Label3
L_00e7: ldarg.0
L_00e8: callvirt BattleTech.ComponentType get_ComponentType()
L_00ed: ldc.i4.2
L_00ee: bne.un Label14
L_00f3: ldloc.2
L_00f4: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00f9: stloc.s 4 (BattleTech.AmmunitionDef)
L_00fb: ldloc.s 4 (BattleTech.AmmunitionDef)
L_00fd: brfalse Label15
L_0102: ldloc.s 4 (BattleTech.AmmunitionDef)
L_0104: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0109: callvirt BattleTech.UI.UIColor GetUIColor()
L_010e: stloc.0
L_010f: br Label16
L_0114: Label15
L_0114: call BattleTech.UI.UIManager get_Instance()
L_0119: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_011e: ldflda BattleTech.UI.UIColorRef Equipment
L_0123: ldfld BattleTech.UI.UIColor UIColor
L_0128: stloc.0
L_0129: br Label17
L_012e: Label14
L_012e: call BattleTech.UI.UIManager get_Instance()
L_0133: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0138: ldflda BattleTech.UI.UIColorRef Equipment
L_013d: ldfld BattleTech.UI.UIColor UIColor
L_0142: stloc.0
L_0143: Label9
L_0143: Label10
L_0143: Label11
L_0143: Label12
L_0143: Label13
L_0143: Label16
L_0143: Label17
L_0143: ldloc.0
L_0144: Label18
L_0144: stloc 5 (BattleTech.UI.UIColor)
L_0146: ldarg 0
L_014c: ldloca 5 (BattleTech.UI.UIColor)
L_014e: call Void Postfix(BattleTech.MechComponentDef, BattleTech.UI.UIColor ByRef)
L_0153: ldloc 5 (BattleTech.UI.UIColor)
L_0155: ret
DONE

### Patch BattleTech.MechComponentRef, BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.AmmunitionBoxDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmunitionDef
L_0000: Local var 5: BattleTech.UI.UIColor
L_0000: ldc.i4 0
L_0005: stloc 5 (BattleTech.UI.UIColor)
L_0007: ldc.i4.1
L_0008: stloc.0
L_0009: ldarg.0
L_000a: brtrue Label1
L_000f: ldloc.0
L_0010: br Label18
L_0015: Label1
L_0015: ldarg.0
L_0016: callvirt BattleTech.MechComponentDef get_Def()
L_001b: isinst BattleTech.WeaponDef
L_0020: stloc.1
L_0021: ldarg.0
L_0022: callvirt BattleTech.MechComponentDef get_Def()
L_0027: isinst BattleTech.AmmunitionBoxDef
L_002c: stloc.2
L_002d: ldloc.2
L_002e: brfalse Label2
L_0033: ldloc.2
L_0034: ldarg.0
L_0035: callvirt BattleTech.Data.DataManager get_DataManager()
L_003a: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_003f: Label2
L_003f: ldarg.0
L_0040: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0045: ldc.i4.1
L_0046: bne.un Label3
L_004b: ldloc.1
L_004c: callvirt BattleTech.WeaponCategory get_Category()
L_0051: stloc.3
L_0052: ldloc.3
L_0053: ldc.i4.1
L_0054: sub
L_0055: switch Labels4,5,6,7
L_006a: br Label8
L_006f: Label4
L_006f: call BattleTech.UI.UIManager get_Instance()
L_0074: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0079: ldflda BattleTech.UI.UIColorRef Ballistic
L_007e: ldfld BattleTech.UI.UIColor UIColor
L_0083: stloc.0
L_0084: br Label9
L_0089: Label5
L_0089: call BattleTech.UI.UIManager get_Instance()
L_008e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0093: ldflda BattleTech.UI.UIColorRef Energy
L_0098: ldfld BattleTech.UI.UIColor UIColor
L_009d: stloc.0
L_009e: br Label10
L_00a3: Label6
L_00a3: call BattleTech.UI.UIManager get_Instance()
L_00a8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00ad: ldflda BattleTech.UI.UIColorRef Missile
L_00b2: ldfld BattleTech.UI.UIColor UIColor
L_00b7: stloc.0
L_00b8: br Label11
L_00bd: Label7
L_00bd: call BattleTech.UI.UIManager get_Instance()
L_00c2: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00c7: ldflda BattleTech.UI.UIColorRef Small
L_00cc: ldfld BattleTech.UI.UIColor UIColor
L_00d1: stloc.0
L_00d2: br Label12
L_00d7: Label8
L_00d7: call BattleTech.UI.UIManager get_Instance()
L_00dc: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00e1: ldflda BattleTech.UI.UIColorRef Equipment
L_00e6: ldfld BattleTech.UI.UIColor UIColor
L_00eb: stloc.0
L_00ec: br Label13
L_00f1: Label3
L_00f1: ldarg.0
L_00f2: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00f7: ldc.i4.2
L_00f8: bne.un Label14
L_00fd: ldloc.2
L_00fe: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0103: stloc.s 4 (BattleTech.AmmunitionDef)
L_0105: ldloc.s 4 (BattleTech.AmmunitionDef)
L_0107: brfalse Label15
L_010c: ldloc.s 4 (BattleTech.AmmunitionDef)
L_010e: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0113: callvirt BattleTech.UI.UIColor GetUIColor()
L_0118: stloc.0
L_0119: br Label16
L_011e: Label15
L_011e: call BattleTech.UI.UIManager get_Instance()
L_0123: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0128: ldflda BattleTech.UI.UIColorRef Equipment
L_012d: ldfld BattleTech.UI.UIColor UIColor
L_0132: stloc.0
L_0133: br Label17
L_0138: Label14
L_0138: call BattleTech.UI.UIManager get_Instance()
L_013d: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0142: ldflda BattleTech.UI.UIColorRef Equipment
L_0147: ldfld BattleTech.UI.UIColor UIColor
L_014c: stloc.0
L_014d: Label9
L_014d: Label10
L_014d: Label11
L_014d: Label12
L_014d: Label13
L_014d: Label16
L_014d: Label17
L_014d: ldloc.0
L_014e: Label18
L_014e: stloc 5 (BattleTech.UI.UIColor)
L_0150: ldnull
L_0151: ldloca 5 (BattleTech.UI.UIColor)
L_0153: ldarg 0
L_0159: call Void Postfix(BattleTech.MechComponentRef, BattleTech.UI.UIColor ByRef, BattleTech.MechComponentRef)
L_015e: ldloc 5 (BattleTech.UI.UIColor)
L_0160: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_SalvageGear, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.SalvageDef salvageDef
L_002c: ldfld BattleTech.ComponentType ComponentType
L_0031: stloc.1
L_0032: ldloc.1
L_0033: ldc.i4.2
L_0034: sub
L_0035: switch Labels1,2,3,4
L_004a: br Label5
L_004f: Label3
L_004f: call BattleTech.UI.UIManager get_Instance()
L_0054: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0059: ldflda BattleTech.UI.UIColorRef Equipment
L_005e: ldfld BattleTech.UI.UIColor UIColor
L_0063: stloc.0
L_0064: br Label6
L_0069: Label4
L_0069: call BattleTech.UI.UIManager get_Instance()
L_006e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0073: ldflda BattleTech.UI.UIColorRef Upgrade
L_0078: ldfld BattleTech.UI.UIColor UIColor
L_007d: stloc.0
L_007e: br Label7
L_0083: Label2
L_0083: call BattleTech.UI.UIManager get_Instance()
L_0088: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_008d: ldflda BattleTech.UI.UIColorRef HeatSink
L_0092: ldfld BattleTech.UI.UIColor UIColor
L_0097: stloc.0
L_0098: br Label8
L_009d: Label1
L_009d: ldarg.0
L_009e: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a3: brfalse Label9
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00ae: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b8: callvirt BattleTech.UI.UIColor GetUIColor()
L_00bd: stloc.0
L_00be: Label5
L_00be: Label6
L_00be: Label7
L_00be: Label8
L_00be: Label9
L_00be: ldarg.1
L_00bf: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c4: stloc.2
L_00c5: ldc.i4.0
L_00c6: stloc.3
L_00c7: br Label10
L_00cc: Label11
L_00cc: ldloc.2
L_00cd: ldloc.3
L_00ce: ldelem.ref
L_00cf: ldloc.0
L_00d0: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00d5: ldloc.3
L_00d6: ldc.i4.1
L_00d7: add
L_00d8: stloc.3
L_00d9: Label10
L_00d9: ldloc.3
L_00da: ldloc.2
L_00db: ldlen
L_00dc: conv.i4
L_00dd: blt Label11
L_00e2: Label0
L_00e2: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_SalvageWeapon, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentDef componentDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageGear_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_SalvageGear_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.SalvageDef salvageDef
L_002c: ldfld BattleTech.ComponentType ComponentType
L_0031: stloc.1
L_0032: ldloc.1
L_0033: ldc.i4.2
L_0034: sub
L_0035: switch Labels1,2,3,4
L_004a: br Label5
L_004f: Label3
L_004f: call BattleTech.UI.UIManager get_Instance()
L_0054: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0059: ldflda BattleTech.UI.UIColorRef Equipment
L_005e: ldfld BattleTech.UI.UIColor UIColor
L_0063: stloc.0
L_0064: br Label6
L_0069: Label4
L_0069: call BattleTech.UI.UIManager get_Instance()
L_006e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0073: ldflda BattleTech.UI.UIColorRef Upgrade
L_0078: ldfld BattleTech.UI.UIColor UIColor
L_007d: stloc.0
L_007e: br Label7
L_0083: Label2
L_0083: call BattleTech.UI.UIManager get_Instance()
L_0088: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_008d: ldflda BattleTech.UI.UIColorRef HeatSink
L_0092: ldfld BattleTech.UI.UIColor UIColor
L_0097: stloc.0
L_0098: br Label8
L_009d: Label1
L_009d: ldarg.0
L_009e: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a3: brfalse Label9
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00ae: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b8: callvirt BattleTech.UI.UIColor GetUIColor()
L_00bd: stloc.0
L_00be: Label5
L_00be: Label6
L_00be: Label7
L_00be: Label8
L_00be: Label9
L_00be: ldarg.1
L_00bf: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c4: stloc.2
L_00c5: ldc.i4.0
L_00c6: stloc.3
L_00c7: br Label10
L_00cc: Label11
L_00cc: ldloc.2
L_00cd: ldloc.3
L_00ce: ldelem.ref
L_00cf: ldloc.0
L_00d0: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00d5: ldloc.3
L_00d6: ldc.i4.1
L_00d7: add
L_00d8: stloc.3
L_00d9: Label10
L_00d9: ldloc.3
L_00da: ldloc.2
L_00db: ldlen
L_00dc: conv.i4
L_00dd: blt Label11
L_00e2: Label0
L_00e2: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageWeapon_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_SalvageWeapon_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentDef componentDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageFullMech, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.InventoryDataObject_SalvageFullMech, BattleTech.UI.InventoryItemElement)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ldarg.1
L_0046: ldfld BattleTech.UI.UIColorRefTracker iconMechBackgroundColor
L_004b: ldc.i4.2
L_004c: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0051: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageFullMech_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.ListElementController_SalvageFullMech_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ldarg.1
L_0046: ldfld BattleTech.UI.UIColorRefTracker iconMechBackgroundColor
L_004b: ldc.i4.2
L_004c: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0051: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageMechPart, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.InventoryDataObject_SalvageMechPart, BattleTech.UI.InventoryItemElement)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageMechPart_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.ListElementController_SalvageMechPart_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_ShopWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.UI.InventoryDataObject_ShopWeapon)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.WeaponDef weaponDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_ShopGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.UI.InventoryDataObject_ShopGear)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.ShopDefItem shopDefItem
L_002c: callvirt BattleTech.ShopItemType get_Type()
L_0031: call BattleTech.ComponentType ShopItemTypeToComponentType(BattleTech.ShopItemType)
L_0036: stloc.1
L_0037: ldloc.1
L_0038: ldc.i4.2
L_0039: sub
L_003a: switch Labels1,2,3,4
L_004f: br Label5
L_0054: Label3
L_0054: call BattleTech.UI.UIManager get_Instance()
L_0059: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_005e: ldflda BattleTech.UI.UIColorRef Equipment
L_0063: ldfld BattleTech.UI.UIColor UIColor
L_0068: stloc.0
L_0069: br Label6
L_006e: Label4
L_006e: call BattleTech.UI.UIManager get_Instance()
L_0073: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0078: ldflda BattleTech.UI.UIColorRef Upgrade
L_007d: ldfld BattleTech.UI.UIColor UIColor
L_0082: stloc.0
L_0083: br Label7
L_0088: Label2
L_0088: call BattleTech.UI.UIManager get_Instance()
L_008d: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0092: ldflda BattleTech.UI.UIColorRef HeatSink
L_0097: ldfld BattleTech.UI.UIColor UIColor
L_009c: stloc.0
L_009d: br Label8
L_00a2: Label1
L_00a2: ldarg.0
L_00a3: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a8: brfalse Label9
L_00ad: ldarg.0
L_00ae: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00b3: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b8: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00bd: callvirt BattleTech.UI.UIColor GetUIColor()
L_00c2: stloc.0
L_00c3: Label5
L_00c3: Label6
L_00c3: Label7
L_00c3: Label8
L_00c3: Label9
L_00c3: ldarg.1
L_00c4: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c9: stloc.2
L_00ca: ldc.i4.0
L_00cb: stloc.3
L_00cc: br Label10
L_00d1: Label11
L_00d1: ldloc.2
L_00d2: ldloc.3
L_00d3: ldelem.ref
L_00d4: ldloc.0
L_00d5: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00da: ldloc.3
L_00db: ldc.i4.1
L_00dc: add
L_00dd: stloc.3
L_00de: Label10
L_00de: ldloc.3
L_00df: ldloc.2
L_00e0: ldlen
L_00e1: conv.i4
L_00e2: blt Label11
L_00e7: Label0
L_00e7: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Get(System.Type, System.String, System.Object, System.Object ByRef, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.s 4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MemberInfoHelper] members
L_002e: ldloc.0
L_002f: callvirt HBS.Reflection.MemberInfoHelper get_Item(System.String)
L_0034: ldarg.3
L_0035: ldarg.s 5
L_0037: callvirt System.Object GetValue(System.Object, System.Object[])
L_003c: stind.ref
L_003d: ldc.i4.1
L_003e: br Label2
L_0043: Label1
L_0043: ldarg.s 4
L_0045: ldnull
L_0046: stind.ref
L_0047: ldc.i4.0
L_0048: Label2
L_0048: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Set(System.Type, System.String, System.Object ByRef, System.Object, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.0
L_0027: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MemberInfoHelper] members
L_002c: ldloc.0
L_002d: callvirt HBS.Reflection.MemberInfoHelper get_Item(System.String)
L_0032: ldarg.3
L_0033: ldarg.s 4
L_0035: ldarg.s 5
L_0037: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_003c: ldc.i4.1
L_003d: br Label2
L_0042: Label1
L_0042: ldc.i4.0
L_0043: Label2
L_0043: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Invoke(System.Type, System.String, System.Object, System.Object ByRef, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMethod(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.s 4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MethodInfoHelper] methods
L_002e: ldloc.0
L_002f: callvirt HBS.Reflection.MethodInfoHelper get_Item(System.String)
L_0034: ldarg.3
L_0035: ldarg.s 5
L_0037: callvirt System.Object Call(System.Object, System.Object[])
L_003c: stind.ref
L_003d: ldc.i4.1
L_003e: br Label2
L_0043: Label1
L_0043: ldarg.s 4
L_0045: ldnull
L_0046: stind.ref
L_0047: ldc.i4.0
L_0048: Label2
L_0048: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean TryCacheMember(System.Type, System.String, System.String ByRef)
L_0000: ldarg.3
L_0001: ldstr "{0}.{1}.{2}"
L_0006: ldarg.1
L_0007: callvirt System.String get_Namespace()
L_000c: ldarg.1
L_000d: call System.String GetName(System.Reflection.MemberInfo)
L_0012: ldarg.2
L_0013: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0018: stind.ref
L_0019: ldarg.0
L_001a: ldarg.1
L_001b: ldarg.2
L_001c: ldarg.3
L_001d: ldind.ref
L_001e: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0023: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean TryCacheMethod(System.Type, System.String, System.String ByRef)
L_0000: ldarg.3
L_0001: ldstr "{0}.{1}.{2}"
L_0006: ldarg.1
L_0007: callvirt System.String get_Namespace()
L_000c: ldarg.1
L_000d: call System.String GetName(System.Reflection.MemberInfo)
L_0012: ldarg.2
L_0013: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0018: stind.ref
L_0019: ldarg.0
L_001a: ldarg.1
L_001b: ldarg.2
L_001c: ldarg.3
L_001d: ldind.ref
L_001e: call Boolean TryCacheMethod(System.Type, System.String, System.String)
L_0023: ret
DONE

### Patch BattleTech.UI.SkirmishMechBayPanel, Void RequestResources()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.SkirmishMechBayPanel)
L_0006: ldarg.0
L_0007: call BattleTech.Data.DataManager get_dataManager()
L_000c: ldarg.0
L_000d: ldftn Void LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest)
L_0013: newobj Void .ctor(Object, IntPtr)
L_0018: ldc.i4.0
L_0019: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_001e: dup
L_001f: ldc.i4.s 13
L_0021: ldc.i4.1
L_0022: newobj Void .ctor(Boolean)
L_0027: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_002c: dup
L_002d: ldc.i4.s 9
L_002f: ldc.i4.1
L_0030: newobj Void .ctor(Boolean)
L_0035: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_003a: ldarg.0
L_003b: newobj Void .ctor()
L_0040: stfld System.Collections.Generic.List`1[BattleTech.Pilot] allPilots
L_0045: ldarg.0
L_0046: newobj Void .ctor()
L_004b: stfld System.Collections.Generic.List`1[BattleTech.PilotDef] allPilotDefs
L_0050: dup
L_0051: ldc.i4.s 43
L_0053: ldarg.0
L_0054: ldftn Void <RequestResources>b__74_0(System.String, BattleTech.PilotDef)
L_005a: newobj Void .ctor(Object, IntPtr)
L_005f: ldc.i4.1
L_0060: newobj Void .ctor(Boolean)
L_0065: callvirt Void AddAllOfTypeLoadRequest[PilotDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.PilotDef], System.Nullable`1[System.Boolean])
L_006a: ldarg.0
L_006b: newobj Void .ctor()
L_0070: stfld System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_0075: dup
L_0076: ldc.i4.s 37
L_0078: ldarg.0
L_0079: ldftn Void <RequestResources>b__74_1(System.String, BattleTech.MechDef)
L_007f: newobj Void .ctor(Object, IntPtr)
L_0084: ldc.i4.1
L_0085: newobj Void .ctor(Boolean)
L_008a: callvirt Void AddAllOfTypeLoadRequest[MechDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.MechDef], System.Nullable`1[System.Boolean])
L_008f: ldarg.0
L_0090: newobj Void .ctor()
L_0095: stfld System.Collections.Generic.List`1[BattleTech.LanceDef] stockLances
L_009a: dup
L_009b: ldc.i4.s 33
L_009d: ldarg.0
L_009e: ldftn Void <RequestResources>b__74_2(System.String, BattleTech.LanceDef)
L_00a4: newobj Void .ctor(Object, IntPtr)
L_00a9: ldc.i4.1
L_00aa: newobj Void .ctor(Boolean)
L_00af: callvirt Void AddAllOfTypeLoadRequest[LanceDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.LanceDef], System.Nullable`1[System.Boolean])
L_00b4: ldc.i4.s 10
L_00b6: callvirt Void ProcessRequests(UInt32)
L_00bb: ret
DONE

### Patch BattleTech.UI.SkirmishSettings_Beta, Void LoadLanceConfiguratorData()
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIManager uiManager
L_0007: call Void Prefix(BattleTech.UI.SkirmishSettings_Beta, BattleTech.UI.UIManager)
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.UIManager uiManager
L_0012: callvirt BattleTech.Data.DataManager get_dataManager()
L_0017: ldarg.0
L_0018: ldftn Void OnLoadComplete(BattleTech.Data.LoadRequest)
L_001e: newobj Void .ctor(Object, IntPtr)
L_0023: ldc.i4.0
L_0024: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_0029: ldarg.0
L_002a: newobj Void .ctor()
L_002f: stfld System.Collections.Generic.List`1[BattleTech.Pilot] allLCPilots
L_0034: ldarg.0
L_0035: newobj Void .ctor()
L_003a: stfld System.Collections.Generic.List`1[BattleTech.PilotDef] allPilots
L_003f: dup
L_0040: ldc.i4.s 43
L_0042: ldarg.0
L_0043: ldftn Void <LoadLanceConfiguratorData>b__24_0(System.String, BattleTech.PilotDef)
L_0049: newobj Void .ctor(Object, IntPtr)
L_004e: ldc.i4.1
L_004f: newobj Void .ctor(Boolean)
L_0054: callvirt Void AddAllOfTypeLoadRequest[PilotDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.PilotDef], System.Nullable`1[System.Boolean])
L_0059: ldarg.0
L_005a: newobj Void .ctor()
L_005f: stfld System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_0064: dup
L_0065: ldc.i4.s 37
L_0067: ldarg.0
L_0068: ldftn Void <LoadLanceConfiguratorData>b__24_1(System.String, BattleTech.MechDef)
L_006e: newobj Void .ctor(Object, IntPtr)
L_0073: ldc.i4.1
L_0074: newobj Void .ctor(Boolean)
L_0079: callvirt Void AddAllOfTypeLoadRequest[MechDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.MechDef], System.Nullable`1[System.Boolean])
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.LanceDef] allLances
L_0089: dup
L_008a: ldc.i4.s 33
L_008c: ldarg.0
L_008d: ldftn Void <LoadLanceConfiguratorData>b__24_2(System.String, BattleTech.LanceDef)
L_0093: newobj Void .ctor(Object, IntPtr)
L_0098: ldc.i4.1
L_0099: newobj Void .ctor(Boolean)
L_009e: callvirt Void AddAllOfTypeLoadRequest[LanceDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.LanceDef], System.Nullable`1[System.Boolean])
L_00a3: dup
L_00a4: ldc.i4.s 9
L_00a6: ldc.i4.0
L_00a7: newobj Void .ctor(Boolean)
L_00ac: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_00b1: ldc.i4.s 10
L_00b3: callvirt Void ProcessRequests(UInt32)
L_00b8: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget, Void ApplySorting(Boolean)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.MechLabInventoryWidget)
L_0006: ldarg.0
L_0007: ldfld System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView] currentSort
L_000c: brtrue Label1
L_0011: br Label7
L_0016: Label1
L_0016: ldarg.0
L_0017: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_001c: ldarg.0
L_001d: ldfld System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView] currentSort
L_0022: callvirt Void Sort(System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView])
L_0027: ldc.i4.0
L_0028: stloc.0
L_0029: br Label2
L_002e: Label5
L_002e: ldarg.0
L_002f: ldfld System.Boolean invertSort
L_0034: brfalse Label3
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_003f: ldloc.0
L_0040: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0045: callvirt UnityEngine.GameObject get_gameObject()
L_004a: callvirt UnityEngine.Transform get_transform()
L_004f: callvirt Void SetAsLastSibling()
L_0054: br Label4
L_0059: Label3
L_0059: ldarg.0
L_005a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_005f: ldloc.0
L_0060: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0065: callvirt UnityEngine.GameObject get_gameObject()
L_006a: callvirt UnityEngine.Transform get_transform()
L_006f: callvirt Void SetAsFirstSibling()
L_0074: Label4
L_0074: ldloc.0
L_0075: ldc.i4.1
L_0076: add
L_0077: stloc.0
L_0078: Label2
L_0078: ldloc.0
L_0079: ldarg.0
L_007a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_007f: callvirt Int32 get_Count()
L_0084: blt Label5
L_0089: ldarg.0
L_008a: call UnityEngine.GameObject get_gameObject()
L_008f: callvirt Boolean get_activeInHierarchy()
L_0094: ldarg.1
L_0095: and
L_0096: brfalse Label6
L_009b: ldarg.0
L_009c: ldarg.0
L_009d: call System.Collections.IEnumerator EndOfFrameScrollBarMovement()
L_00a2: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_00a7: pop
L_00a8: Label6
L_00a8: Label7
L_00a8: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget_ListView, Void ApplySorting()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.MechLabInventoryWidget_ListView)
L_0006: ldarg.0
L_0007: ldfld System.Comparison`1[BattleTech.UI.InventoryDataObject_BASE] currentSort
L_000c: brtrue Label1
L_0011: br Label2
L_0016: Label1
L_0016: ldarg.0
L_0017: ldfld BattleTech.UI.HBSInventoryLoopingListView ListView
L_001c: ldarg.0
L_001d: ldfld System.Collections.Generic.IComparer`1[BattleTech.UI.InventoryDataObject_BASE] currentListItemSorter
L_0022: callvirt Void set_ListViewItemSorter(System.Collections.Generic.IComparer`1[BattleTech.UI.InventoryDataObject_BASE])
L_0027: ldarg.0
L_0028: ldfld BattleTech.UI.HBSInventoryLoopingListView ListView
L_002d: callvirt Void Sort()
L_0032: Label2
L_0032: ret
DONE

### Patch BattleTech.Contract, Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single[]
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: BattleTech.MechComponentDef
L_0000: Local var 6: BattleTech.SalvageDef
L_0000: Local var 7: System.Collections.Generic.List`1[[BattleTech.Data.UpgradeDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: BattleTech.Data.UpgradeDef_MDD
L_0000: ldarga 2
L_0006: call Boolean Prefix(BattleTech.MechComponentDef ByRef)
L_000b: brfalse Label0
L_0010: ldarg.2
L_0011: callvirt HBS.Collections.TagSet get_ComponentTags()
L_0016: ldstr "BLACKLISTED"
L_001b: callvirt Boolean Contains(System.String)
L_0020: brfalse Label1
L_0025: br Label11
L_002a: Label1
L_002a: ldarg.2
L_002b: callvirt BattleTech.ComponentType get_ComponentType()
L_0030: ldc.i4.1
L_0031: bne.un Label2
L_0036: ldarg.0
L_0037: ldarg.1
L_0038: ldarg.2
L_0039: ldarg.3
L_003a: ldarg.s 4
L_003c: ldarg.s 5
L_003e: ldarg.s 6
L_0040: ldarg.s 7
L_0042: call Void AddWeaponToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0047: br Label12
L_004c: Label2
L_004c: ldarg.s 6
L_004e: ldc.r4 0
L_0053: ldc.r4 1
L_0058: callvirt Single Float(Single, Single)
L_005d: stloc.0
L_005e: ldarg.0
L_005f: call BattleTech.Framework.ContractOverride get_Override()
L_0064: ldfld System.Int32 finalDifficulty
L_0069: conv.r4
L_006a: ldarg.s 5
L_006c: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0071: ldfld System.Single VeryRareUpgradeChance
L_0076: add
L_0077: ldarg.s 5
L_0079: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_007e: ldfld System.Single UpgradeChanceDivisor
L_0083: div
L_0084: stloc.1
L_0085: ldarg.0
L_0086: call BattleTech.Framework.ContractOverride get_Override()
L_008b: ldfld System.Int32 finalDifficulty
L_0090: conv.r4
L_0091: ldarg.s 5
L_0093: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0098: ldfld System.Single RareUpgradeChance
L_009d: add
L_009e: ldarg.s 5
L_00a0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00a5: ldfld System.Single UpgradeChanceDivisor
L_00aa: div
L_00ab: stloc.2
L_00ac: ldnull
L_00ad: stloc.3
L_00ae: ldc.i4.0
L_00af: stloc.s 4 (System.Boolean)
L_00b1: ldarg.2
L_00b2: stloc.s 5 (BattleTech.MechComponentDef)
L_00b4: ldloc.0
L_00b5: ldloc.1
L_00b6: bge.un Label3
L_00bb: ldarg.s 5
L_00bd: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00c2: ldfld System.Single[] VeryRareUpgradeLevel
L_00c7: stloc.3
L_00c8: br Label4
L_00cd: Label3
L_00cd: ldloc.0
L_00ce: ldloc.2
L_00cf: bge.un Label5
L_00d4: ldarg.s 5
L_00d6: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00db: ldfld System.Single[] RareUpgradeLevel
L_00e0: stloc.3
L_00e1: Label4
L_00e1: Label5
L_00e1: ldloc.3
L_00e2: brfalse Label6
L_00e7: call BattleTech.Data.MetadataDatabase get_Instance()
L_00ec: ldloc.3
L_00ed: call System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD] GetUpgradesByRarityAndOwnership(BattleTech.Data.MetadataDatabase, Single[])
L_00f2: stloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00f4: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00f6: brfalse Label7
L_00fb: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00fd: callvirt Int32 get_Count()
L_0102: ldc.i4.0
L_0103: ble Label8
L_0108: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_010a: call Void Shuffle[UpgradeDef_MDD](System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_010f: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_0111: ldc.i4.0
L_0112: callvirt BattleTech.Data.UpgradeDef_MDD get_Item(Int32)
L_0117: stloc.s 8 (BattleTech.Data.UpgradeDef_MDD)
L_0119: ldarg.0
L_011a: ldfld BattleTech.Data.DataManager dataManager
L_011f: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_0124: ldloc.s 8 (BattleTech.Data.UpgradeDef_MDD)
L_0126: callvirt System.String get_UpgradeDefID()
L_012b: callvirt BattleTech.UpgradeDef Get(System.String)
L_0130: stloc.s 5 (BattleTech.MechComponentDef)
L_0132: ldc.i4.1
L_0133: stloc.s 4 (System.Boolean)
L_0135: Label6
L_0135: Label7
L_0135: Label8
L_0135: newobj Void .ctor()
L_013a: stloc.s 6 (BattleTech.SalvageDef)
L_013c: ldloc.s 6 (BattleTech.SalvageDef)
L_013e: ldloc.s 5 (BattleTech.MechComponentDef)
L_0140: stfld BattleTech.MechComponentDef MechComponentDef
L_0145: ldloc.s 6 (BattleTech.SalvageDef)
L_0147: ldloc.s 5 (BattleTech.MechComponentDef)
L_0149: callvirt BattleTech.DescriptionDef get_Description()
L_014e: newobj Void .ctor(DescriptionDef)
L_0153: stfld BattleTech.DescriptionDef Description
L_0158: ldloc.s 6 (BattleTech.SalvageDef)
L_015a: ldarg.0
L_015b: call System.String GenerateRewardUID()
L_0160: stfld System.String RewardID
L_0165: ldloc.s 6 (BattleTech.SalvageDef)
L_0167: ldc.i4.1
L_0168: stfld BattleTech.SalvageDef+SalvageType Type
L_016d: ldloc.s 6 (BattleTech.SalvageDef)
L_016f: ldloc.s 5 (BattleTech.MechComponentDef)
L_0171: callvirt BattleTech.ComponentType get_ComponentType()
L_0176: stfld BattleTech.ComponentType ComponentType
L_017b: ldloc.s 6 (BattleTech.SalvageDef)
L_017d: ldc.i4.0
L_017e: stfld System.Boolean Damaged
L_0183: ldloc.s 6 (BattleTech.SalvageDef)
L_0185: ldarg.s 5
L_0187: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_018c: ldfld System.Int32 DefaultComponentWeight
L_0191: stfld System.Int32 Weight
L_0196: ldloc.s 6 (BattleTech.SalvageDef)
L_0198: ldc.i4.1
L_0199: stfld System.Int32 Count
L_019e: ldloc.s 5 (BattleTech.MechComponentDef)
L_01a0: callvirt BattleTech.DescriptionDef get_Description()
L_01a5: callvirt Single get_Rarity()
L_01aa: ldarg.s 5
L_01ac: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_01b1: ldfld System.Single ItemAutoCullLevel
L_01b6: bge.un Label9
L_01bb: ldarg.0
L_01bc: ldloc.s 6 (BattleTech.SalvageDef)
L_01be: call Boolean IsSalvageInContent(BattleTech.SalvageDef)
L_01c3: brfalse Label10
L_01c8: ldarg.0
L_01c9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_01ce: ldloc.s 6 (BattleTech.SalvageDef)
L_01d0: callvirt Void Add(BattleTech.SalvageDef)
L_01d5: br Label13
L_01da: Label9
L_01da: ldsfld HBS.Logging.ILog logger
L_01df: ldstr "CULLED ILLEGAL MECH COMPONENT ({0}) of RARITY ({1}). From Random Upgrade? {2}."
L_01e4: ldloc.s 5 (BattleTech.MechComponentDef)
L_01e6: callvirt BattleTech.DescriptionDef get_Description()
L_01eb: callvirt System.String get_Id()
L_01f0: ldloc.s 5 (BattleTech.MechComponentDef)
L_01f2: callvirt BattleTech.DescriptionDef get_Description()
L_01f7: callvirt Single get_Rarity()
L_01fc: box System.Single
L_0201: ldloc.s 4 (System.Boolean)
L_0203: box System.Boolean
L_0208: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_020d: callvirt Void LogWarning(System.Object)
L_0212: Label10
L_0212: Label11
L_0212: Label12
L_0212: Label13
L_0212: Label0
L_0212: ret
DONE

### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg.0
L_002a: ldarg.s 4
L_002c: stfld System.Boolean loggingSalvageResults
L_0031: ldarg.0
L_0032: call BattleTech.GameInstance get_BattleTechGame()
L_0037: callvirt BattleTech.SimGameState get_Simulation()
L_003c: brtrue Label1
L_0041: ldsfld HBS.Logging.ILog logger
L_0046: ldstr "Can't generate salvage without sim game."
L_004b: callvirt Void LogError(System.Object)
L_0050: br Label57
L_0055: Label1
L_0055: ldarg.0
L_0056: newobj Void .ctor()
L_005b: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0060: ldarg.0
L_0061: newobj Void .ctor()
L_0066: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_006b: ldarg.0
L_006c: newobj Void .ctor()
L_0071: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_0076: ldarg.0
L_0077: newobj Void .ctor()
L_007c: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0081: ldarg.0
L_0082: call BattleTech.GameInstance get_BattleTechGame()
L_0087: callvirt BattleTech.SimGameState get_Simulation()
L_008c: stloc.0
L_008d: ldloc.0
L_008e: callvirt BattleTech.SimGameConstants get_Constants()
L_0093: stloc.1
L_0094: ldc.i4.0
L_0095: stloc.s 8 (System.Int32)
L_0097: br Label2
L_009c: Label9
L_009c: ldarg.3
L_009d: ldloc.s 8 (System.Int32)
L_009f: callvirt BattleTech.UnitResult get_Item(Int32)
L_00a4: ldfld BattleTech.MechDef mech
L_00a9: stloc.s 9 (BattleTech.MechDef)
L_00ab: ldloc.0
L_00ac: callvirt NetworkRandom get_NetworkRandom()
L_00b1: ldc.r4 0
L_00b6: ldc.r4 1
L_00bb: callvirt Single Float(Single, Single)
L_00c0: stloc.s 10 (System.Single)
L_00c2: ldloc.s 10 (System.Single)
L_00c4: ldloc.1
L_00c5: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00ca: ldfld System.Single DestroyedMechRecoveryChance
L_00cf: cgt.un
L_00d1: ldc.i4.0
L_00d2: ceq
L_00d4: stloc.s 11 (System.Boolean)
L_00d6: ldsfld HBS.Logging.ILog logger
L_00db: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_00e0: ldloc.s 8 (System.Int32)
L_00e2: box System.Int32
L_00e7: ldloc.s 9 (BattleTech.MechDef)
L_00e9: callvirt BattleTech.DescriptionDef get_Description()
L_00ee: callvirt System.String get_Name()
L_00f3: ldloc.s 9 (BattleTech.MechDef)
L_00f5: ldc.i4.8
L_00f6: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_00fb: box System.Boolean
L_0100: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0105: callvirt Void LogWarning(System.Object)
L_010a: ldsfld HBS.Logging.ILog logger
L_010f: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_0114: ldloc.s 10 (System.Single)
L_0116: box System.Single
L_011b: ldloc.1
L_011c: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0121: ldfld System.Single DestroyedMechRecoveryChance
L_0126: box System.Single
L_012b: call System.String Format(System.String, System.Object, System.Object)
L_0130: callvirt Void LogWarning(System.Object)
L_0135: ldloc.s 9 (BattleTech.MechDef)
L_0137: ldc.i4.8
L_0138: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_013d: ldc.i4.0
L_013e: ceq
L_0140: ldloc.s 11 (System.Boolean)
L_0142: or
L_0143: brfalse Label3
L_0148: ldsfld HBS.Logging.ILog logger
L_014d: ldstr "Recovery Succeeded"
L_0152: callvirt Void LogWarning(System.Object)
L_0157: ldarg.3
L_0158: ldloc.s 8 (System.Int32)
L_015a: callvirt BattleTech.UnitResult get_Item(Int32)
L_015f: ldc.i4.0
L_0160: stfld System.Boolean mechLost
L_0165: br Label4
L_016a: Label3
L_016a: ldsfld HBS.Logging.ILog logger
L_016f: ldstr "Recovery Failed, Unit Lost"
L_0174: callvirt Void LogWarning(System.Object)
L_0179: ldarg.3
L_017a: ldloc.s 8 (System.Int32)
L_017c: callvirt BattleTech.UnitResult get_Item(Int32)
L_0181: ldc.i4.1
L_0182: stfld System.Boolean mechLost
L_0187: ldloc.s 9 (BattleTech.MechDef)
L_0189: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_018e: stloc.s 12 (BattleTech.MechComponentRef[])
L_0190: ldc.i4.0
L_0191: stloc.s 13 (System.Int32)
L_0193: br Label5
L_0198: Label8
L_0198: ldloc.s 12 (BattleTech.MechComponentRef[])
L_019a: ldloc.s 13 (System.Int32)
L_019c: ldelem.ref
L_019d: stloc.s 14 (BattleTech.MechComponentRef)
L_019f: ldloc.s 9 (BattleTech.MechDef)
L_01a1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01a3: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a8: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_01ad: brtrue Label6
L_01b2: ldloc.s 14 (BattleTech.MechComponentRef)
L_01b4: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01b9: ldc.i4.4
L_01ba: beq Label7
L_01bf: newobj Void .ctor()
L_01c4: stloc.s 15 (BattleTech.SalvageDef)
L_01c6: ldloc.s 15 (BattleTech.SalvageDef)
L_01c8: ldloc.s 14 (BattleTech.MechComponentRef)
L_01ca: callvirt BattleTech.MechComponentDef get_Def()
L_01cf: stfld BattleTech.MechComponentDef MechComponentDef
L_01d4: ldloc.s 15 (BattleTech.SalvageDef)
L_01d6: ldloc.s 14 (BattleTech.MechComponentRef)
L_01d8: callvirt BattleTech.MechComponentDef get_Def()
L_01dd: callvirt BattleTech.DescriptionDef get_Description()
L_01e2: newobj Void .ctor(DescriptionDef)
L_01e7: stfld BattleTech.DescriptionDef Description
L_01ec: ldloc.s 15 (BattleTech.SalvageDef)
L_01ee: ldarg.0
L_01ef: call System.String GenerateRewardUID()
L_01f4: stfld System.String RewardID
L_01f9: ldloc.s 15 (BattleTech.SalvageDef)
L_01fb: ldc.i4.1
L_01fc: stfld BattleTech.SalvageDef+SalvageType Type
L_0201: ldloc.s 15 (BattleTech.SalvageDef)
L_0203: ldloc.s 14 (BattleTech.MechComponentRef)
L_0205: callvirt BattleTech.MechComponentDef get_Def()
L_020a: callvirt BattleTech.ComponentType get_ComponentType()
L_020f: stfld BattleTech.ComponentType ComponentType
L_0214: ldloc.s 15 (BattleTech.SalvageDef)
L_0216: ldc.i4.0
L_0217: stfld System.Boolean Damaged
L_021c: ldloc.s 15 (BattleTech.SalvageDef)
L_021e: ldc.i4.1
L_021f: stfld System.Int32 Count
L_0224: ldarg.0
L_0225: ldloc.s 15 (BattleTech.SalvageDef)
L_0227: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_022c: Label6
L_022c: Label7
L_022c: ldloc.s 13 (System.Int32)
L_022e: ldc.i4.1
L_022f: add
L_0230: stloc.s 13 (System.Int32)
L_0232: Label5
L_0232: ldloc.s 13 (System.Int32)
L_0234: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0236: ldlen
L_0237: conv.i4
L_0238: blt Label8
L_023d: Label4
L_023d: ldloc.s 8 (System.Int32)
L_023f: ldc.i4.1
L_0240: add
L_0241: stloc.s 8 (System.Int32)
L_0243: Label2
L_0243: ldloc.s 8 (System.Int32)
L_0245: ldarg.3
L_0246: callvirt Int32 get_Count()
L_024b: blt Label9
L_0250: ldc.i4.0
L_0251: stloc.s 16 (System.Int32)
L_0253: br Label10
L_0258: Label36
L_0258: ldarg.1
L_0259: ldloc.s 16 (System.Int32)
L_025b: callvirt BattleTech.UnitResult get_Item(Int32)
L_0260: ldfld BattleTech.MechDef mech
L_0265: stloc.s 17 (BattleTech.MechDef)
L_0267: ldarg.1
L_0268: ldloc.s 16 (System.Int32)
L_026a: callvirt BattleTech.UnitResult get_Item(Int32)
L_026f: ldfld BattleTech.Pilot pilot
L_0274: stloc.s 18 (BattleTech.Pilot)
L_0276: ldnull
L_0277: stloc.s 19 (BattleTech.SalvageDef)
L_0279: ldc.i4.0
L_027a: stloc.s 20 (System.Boolean)
L_027c: ldc.i4.0
L_027d: stloc.s 21 (System.Boolean)
L_027f: ldloc.s 17 (BattleTech.MechDef)
L_0281: ldc.i4.8
L_0282: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0287: brfalse Label11
L_028c: ldarg.0
L_028d: ldloc.1
L_028e: ldloc.s 17 (BattleTech.MechDef)
L_0290: ldc.i4.1
L_0291: ldarg.0
L_0292: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0297: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_029c: br Label12
L_02a1: Label11
L_02a1: ldloc.s 17 (BattleTech.MechDef)
L_02a3: ldc.i4.s 64
L_02a5: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02aa: brfalse Label13
L_02af: ldloc.s 17 (BattleTech.MechDef)
L_02b1: ldc.i4 128
L_02b6: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02bb: brfalse Label14
L_02c0: ldc.i4.1
L_02c1: stloc.s 20 (System.Boolean)
L_02c3: ldarg.0
L_02c4: ldloc.1
L_02c5: ldloc.s 17 (BattleTech.MechDef)
L_02c7: ldc.i4.2
L_02c8: ldarg.0
L_02c9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02ce: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02d3: br Label15
L_02d8: Label13
L_02d8: Label14
L_02d8: ldloc.s 18 (BattleTech.Pilot)
L_02da: callvirt Boolean get_IsIncapacitated()
L_02df: brtrue Label16
L_02e4: ldloc.s 17 (BattleTech.MechDef)
L_02e6: ldc.i4.1
L_02e7: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02ec: brfalse Label17
L_02f1: Label16
L_02f1: ldarg.0
L_02f2: ldloc.1
L_02f3: ldloc.s 17 (BattleTech.MechDef)
L_02f5: ldc.i4.3
L_02f6: ldarg.0
L_02f7: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02fc: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0301: Label12
L_0301: Label15
L_0301: ldloc.s 17 (BattleTech.MechDef)
L_0303: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0308: stloc.s 12 (BattleTech.MechComponentRef[])
L_030a: ldc.i4.0
L_030b: stloc.s 13 (System.Int32)
L_030d: br Label18
L_0312: Label21
L_0312: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0314: ldloc.s 13 (System.Int32)
L_0316: ldelem.ref
L_0317: stloc.s 22 (BattleTech.MechComponentRef)
L_0319: ldloc.s 17 (BattleTech.MechDef)
L_031b: ldloc.s 22 (BattleTech.MechComponentRef)
L_031d: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0322: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0327: brtrue Label19
L_032c: ldloc.s 22 (BattleTech.MechComponentRef)
L_032e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0333: ldc.i4.4
L_0334: beq Label20
L_0339: ldarg.0
L_033a: ldarg.0
L_033b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0340: ldloc.s 22 (BattleTech.MechComponentRef)
L_0342: callvirt BattleTech.MechComponentDef get_Def()
L_0347: ldc.i4.0
L_0348: ldc.i4.0
L_0349: ldloc.1
L_034a: ldloc.0
L_034b: callvirt NetworkRandom get_NetworkRandom()
L_0350: ldc.i4.1
L_0351: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0356: Label19
L_0356: Label20
L_0356: ldloc.s 13 (System.Int32)
L_0358: ldc.i4.1
L_0359: add
L_035a: stloc.s 13 (System.Int32)
L_035c: Label18
L_035c: ldloc.s 13 (System.Int32)
L_035e: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0360: ldlen
L_0361: conv.i4
L_0362: blt Label21
L_0367: ldloc.s 21 (System.Boolean)
L_0369: brfalse Label22
L_036e: newobj Void .ctor()
L_0373: stloc.s 19 (BattleTech.SalvageDef)
L_0375: ldloc.s 19 (BattleTech.SalvageDef)
L_0377: ldc.i4.3
L_0378: stfld BattleTech.SalvageDef+SalvageType Type
L_037d: ldloc.s 19 (BattleTech.SalvageDef)
L_037f: ldloc.s 17 (BattleTech.MechDef)
L_0381: callvirt BattleTech.ChassisDef get_Chassis()
L_0386: callvirt BattleTech.DescriptionDef get_Description()
L_038b: newobj Void .ctor(DescriptionDef)
L_0390: stfld BattleTech.DescriptionDef Description
L_0395: ldloc.s 19 (BattleTech.SalvageDef)
L_0397: ldc.i4.1
L_0398: stfld System.Int32 Count
L_039d: ldtoken BattleTech.ChassisLocations
L_03a2: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03a7: call System.Array GetValues(System.Type)
L_03ac: callvirt System.Collections.IEnumerator GetEnumerator()
L_03b1: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03b3: br Label23
	L_03b8: Label30
	L_03b8: ldloc.s 23 (System.Collections.IEnumerator)
	L_03ba: callvirt System.Object get_Current()
	L_03bf: unbox.any BattleTech.ChassisLocations
	L_03c4: stloc.s 24 (BattleTech.ChassisLocations)
	L_03c6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03c8: brfalse Label24
	L_03cd: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03cf: ldc.i4 255
	L_03d4: beq Label25
	L_03d9: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03db: ldc.i4.s 34
	L_03dd: beq Label26
	L_03e2: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03e4: ldc.i4 192
	L_03e9: beq Label27
	L_03ee: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f0: ldc.i4.s 28
	L_03f2: beq Label28
	L_03f7: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f9: ldc.i4.s 62
	L_03fb: beq Label29
	L_0400: ldloc.s 19 (BattleTech.SalvageDef)
	L_0402: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0407: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0409: callvirt Void Add(BattleTech.ChassisLocations)
	L_040e: ldloc.s 19 (BattleTech.SalvageDef)
	L_0410: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_0415: ldloc.s 17 (BattleTech.MechDef)
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_041e: ldfld System.Single CurrentInternalStructure
	L_0423: callvirt Void Add(Single)
	L_0428: Label23
	L_0428: Label24
	L_0428: Label25
	L_0428: Label26
	L_0428: Label27
	L_0428: Label28
	L_0428: Label29
	L_0428: ldloc.s 23 (System.Collections.IEnumerator)
	L_042a: callvirt Boolean MoveNext()
	L_042f: brtrue Label30
	L_0434: leave Label31
	L_0439: leave (autogenerated)
} // end try
.finally
{
	L_043e: ldloc.s 23 (System.Collections.IEnumerator)
	L_0440: isinst System.IDisposable
	L_0445: stloc.s 25 (System.IDisposable)
	L_0447: ldloc.s 25 (System.IDisposable)
	L_0449: brfalse Label32
	L_044e: ldloc.s 25 (System.IDisposable)
	L_0450: callvirt Void Dispose()
	L_0455: Label32
	L_0455: endfinally
	L_0456: leave (autogenerated)
} // end handler
L_0457: Label31
L_0457: ldloc.s 20 (System.Boolean)
L_0459: brfalse Label33
L_045e: ldc.i4.0
L_045f: stloc.s 26 (System.Int32)
L_0461: br Label34
L_0466: Label35
L_0466: ldloc.s 19 (BattleTech.SalvageDef)
L_0468: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_046d: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_046f: ldloc.s 26 (System.Int32)
L_0471: stloc.s 13 (System.Int32)
L_0473: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0475: ldloc.s 13 (System.Int32)
L_0477: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0479: ldloc.s 13 (System.Int32)
L_047b: callvirt Single get_Item(Int32)
L_0480: ldc.r4 2
L_0485: div
L_0486: callvirt Void set_Item(Int32, Single)
L_048b: ldloc.s 26 (System.Int32)
L_048d: ldc.i4.1
L_048e: add
L_048f: stloc.s 26 (System.Int32)
L_0491: Label34
L_0491: ldloc.s 26 (System.Int32)
L_0493: ldloc.s 19 (BattleTech.SalvageDef)
L_0495: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_049a: callvirt Int32 get_Count()
L_049f: blt Label35
L_04a4: Label33
L_04a4: ldloc.s 19 (BattleTech.SalvageDef)
L_04a6: ldloc.1
L_04a7: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04ac: ldfld System.Int32 DefaultChassisWeight
L_04b1: stfld System.Int32 Weight
L_04b6: ldarg.0
L_04b7: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: callvirt Void Add(BattleTech.SalvageDef)
L_04c3: Label17
L_04c3: Label22
L_04c3: ldloc.s 16 (System.Int32)
L_04c5: ldc.i4.1
L_04c6: add
L_04c7: stloc.s 16 (System.Int32)
L_04c9: Label10
L_04c9: ldloc.s 16 (System.Int32)
L_04cb: ldarg.1
L_04cc: callvirt Int32 get_Count()
L_04d1: blt Label36
L_04d6: ldc.i4.0
L_04d7: stloc.s 28 (System.Int32)
L_04d9: br Label37
L_04de: Label42
L_04de: ldarg.2
L_04df: ldloc.s 28 (System.Int32)
L_04e1: callvirt BattleTech.VehicleDef get_Item(Int32)
L_04e6: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_04eb: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_04f0: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_04f2: br Label38
	L_04f7: Label39
	L_04f7: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_04f9: callvirt BattleTech.VehicleComponentRef get_Current()
	L_04fe: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0500: ldarg.0
	L_0501: ldarg.0
	L_0502: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0507: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0509: callvirt BattleTech.MechComponentDef get_Def()
	L_050e: ldc.i4.0
	L_050f: ldc.i4.0
	L_0510: ldloc.1
	L_0511: ldloc.0
	L_0512: callvirt NetworkRandom get_NetworkRandom()
	L_0517: ldc.i4.1
	L_0518: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_051d: Label38
	L_051d: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_051f: callvirt Boolean MoveNext()
	L_0524: brtrue Label39
	L_0529: leave Label40
	L_052e: leave (autogenerated)
} // end try
.finally
{
	L_0533: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0535: brfalse Label41
	L_053a: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_053c: callvirt Void Dispose()
	L_0541: Label41
	L_0541: endfinally
	L_0542: leave (autogenerated)
} // end handler
L_0543: Label40
L_0543: ldloc.s 28 (System.Int32)
L_0545: ldc.i4.1
L_0546: add
L_0547: stloc.s 28 (System.Int32)
L_0549: Label37
L_0549: ldloc.s 28 (System.Int32)
L_054b: ldarg.2
L_054c: callvirt Int32 get_Count()
L_0551: blt Label42
L_0556: ldarg.0
L_0557: ldarg.0
L_0558: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_055d: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0562: ldarg.0
L_0563: call Int32 get_SalvagePotential()
L_0568: stloc.2
L_0569: ldloc.1
L_056a: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_056f: ldfld System.Single VictorySalvageChance
L_0574: stloc.3
L_0575: ldloc.1
L_0576: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_057b: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_0580: stloc.s 4 (System.Single)
L_0582: ldarg.0
L_0583: call ContractState get_State()
L_0588: ldc.i4.5
L_0589: bne.un Label43
L_058e: ldloc.1
L_058f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0594: ldfld System.Single DefeatSalvageChance
L_0599: stloc.3
L_059a: ldloc.1
L_059b: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a0: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05a5: stloc.s 4 (System.Single)
L_05a7: br Label44
L_05ac: Label43
L_05ac: ldarg.0
L_05ad: call ContractState get_State()
L_05b2: ldc.i4.4
L_05b3: bne.un Label45
L_05b8: ldloc.1
L_05b9: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05be: ldfld System.Single RetreatSalvageChance
L_05c3: stloc.3
L_05c4: ldloc.1
L_05c5: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05ca: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05cf: stloc.s 4 (System.Single)
L_05d1: Label44
L_05d1: Label45
L_05d1: ldloc.3
L_05d2: stloc.s 5 (System.Single)
L_05d4: ldloc.2
L_05d5: conv.r4
L_05d6: ldarg.0
L_05d7: call Single get_PercentageContractSalvage()
L_05dc: mul
L_05dd: stloc.s 6 (System.Single)
L_05df: ldloc.2
L_05e0: ldc.i4.0
L_05e1: ble Label46
L_05e6: ldloc.s 6 (System.Single)
L_05e8: ldloc.1
L_05e9: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_05ee: ldfld System.Int32 ContractFloorSalvageBonus
L_05f3: conv.r4
L_05f4: add
L_05f5: stloc.s 6 (System.Single)
L_05f7: Label46
L_05f7: ldc.r4 0
L_05fc: ldloc.s 5 (System.Single)
L_05fe: ldloc.s 4 (System.Single)
L_0600: ldarg.3
L_0601: callvirt Int32 get_Count()
L_0606: conv.r4
L_0607: mul
L_0608: sub
L_0609: call Single Max(Single, Single)
L_060e: stloc.3
L_060f: ldloc.s 6 (System.Single)
L_0611: conv.r4
L_0612: ldloc.3
L_0613: mul
L_0614: call Int32 FloorToInt(Single)
L_0619: stloc.s 7 (System.Int32)
L_061b: ldloc.2
L_061c: ldc.i4.0
L_061d: ble Label47
L_0622: ldloc.2
L_0623: ldloc.1
L_0624: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0629: ldfld System.Int32 ContractFloorSalvageBonus
L_062e: add
L_062f: stloc.2
L_0630: Label47
L_0630: ldarg.0
L_0631: ldloc.s 7 (System.Int32)
L_0633: call Void set_FinalSalvageCount(Int32)
L_0638: ldarg.0
L_0639: ldc.i4.7
L_063a: ldloc.s 7 (System.Int32)
L_063c: conv.r4
L_063d: ldloc.1
L_063e: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0643: ldfld System.Single PrioritySalvageModifier
L_0648: mul
L_0649: call Int32 FloorToInt(Single)
L_064e: call Int32 Min(Int32, Int32)
L_0653: call Void set_FinalPrioritySalvageCount(Int32)
L_0658: ldarg.0
L_0659: ldfld System.Boolean loggingSalvageResults
L_065e: brfalse Label48
L_0663: ldarg.0
L_0664: ldstr "Salvage"
L_0669: call Void PushReport(System.String)
L_066e: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_0673: ldc.i4.6
L_0674: newarr System.Object
L_0679: dup
L_067a: ldc.i4.0
L_067b: ldloc.2
L_067c: box System.Int32
L_0681: stelem.ref
L_0682: dup
L_0683: ldc.i4.1
L_0684: ldloc.s 5 (System.Single)
L_0686: box System.Single
L_068b: stelem.ref
L_068c: dup
L_068d: ldc.i4.2
L_068e: ldarg.3
L_068f: callvirt Int32 get_Count()
L_0694: box System.Int32
L_0699: stelem.ref
L_069a: dup
L_069b: ldc.i4.3
L_069c: ldloc.3
L_069d: box System.Single
L_06a2: stelem.ref
L_06a3: dup
L_06a4: ldc.i4.4
L_06a5: ldloc.s 7 (System.Int32)
L_06a7: box System.Int32
L_06ac: stelem.ref
L_06ad: dup
L_06ae: ldc.i4.5
L_06af: ldarg.0
L_06b0: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06b5: callvirt Int32 get_Count()
L_06ba: box System.Int32
L_06bf: stelem.ref
L_06c0: call System.String Format(System.String, System.Object[])
L_06c5: stloc.s 31 (System.String)
L_06c7: ldarg.0
L_06c8: ldloc.s 31 (System.String)
L_06ca: call Void ReportLog(System.String)
L_06cf: ldarg.0
L_06d0: ldstr "Potential Salvage"
L_06d5: call Void PushReport(System.String)
L_06da: ldarg.0
L_06db: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06e0: callvirt Enumerator GetEnumerator()
L_06e5: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_06e7: br Label49
	L_06ec: Label52
	L_06ec: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_06ee: call BattleTech.SalvageDef get_Current()
	L_06f3: stloc.s 33 (BattleTech.SalvageDef)
	L_06f5: ldarg.0
	L_06f6: ldstr "{0} of type {1} in damage state of {2}"
	L_06fb: ldloc.s 33 (BattleTech.SalvageDef)
	L_06fd: ldfld BattleTech.DescriptionDef Description
	L_0702: callvirt System.String get_Id()
	L_0707: ldloc.s 33 (BattleTech.SalvageDef)
	L_0709: ldfld BattleTech.SalvageDef+SalvageType Type
	L_070e: box BattleTech.SalvageDef+SalvageType
	L_0713: ldloc.s 33 (BattleTech.SalvageDef)
	L_0715: ldfld BattleTech.SalvageDef+SalvageType Type
	L_071a: ldc.i4.3
	L_071b: beq Label50
	L_0720: ldloc.s 33 (BattleTech.SalvageDef)
	L_0722: ldfld System.Boolean Damaged
	L_0727: br Label51
	L_072c: Label50
	L_072c: ldc.i4.1
	L_072d: Label51
	L_072d: box System.Boolean
	L_0732: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0737: call Void ReportLog(System.String)
	L_073c: Label49
	L_073c: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_073e: call Boolean MoveNext()
	L_0743: brtrue Label52
	L_0748: leave Label53
	L_074d: leave (autogenerated)
} // end try
.finally
{
	L_0752: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0754: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_075a: callvirt Void Dispose()
	L_075f: endfinally
	L_0760: leave (autogenerated)
} // end handler
L_0761: Label53
L_0761: ldarg.0
L_0762: call Void PopReport()
L_0767: ldsfld HBS.Logging.ILog logger
L_076c: ldloc.s 31 (System.String)
L_076e: callvirt Void LogWarning(System.Object)
L_0773: Label48
L_0773: ldloc.3
L_0774: ldc.r4 0
L_0779: beq Label54
L_077e: ldloc.s 7 (System.Int32)
L_0780: ldc.i4.1
L_0781: bge Label55
L_0786: Label54
L_0786: ldarg.0
L_0787: ldfld System.Boolean loggingSalvageResults
L_078c: brfalse Label56
L_0791: ldarg.0
L_0792: call Void PopReport()
L_0797: Label55
L_0797: Label56
L_0797: Label57
L_0797: Label0
L_0797: ret
DONE

### Patch BattleTech.SimGameState, Void RespondToDefsLoadComplete(BattleTech.Data.LoadRequest)
L_0000: ldarg.0
L_0001: call Void FixDefaults(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldc.i4 128
L_000c: call Void RemoveInitStateBits(InitStates)
L_0011: ldarg.0
L_0012: call Void _OnDefsLoadComplete()
L_0017: ldarg.0
L_0018: ldc.i4.2
L_0019: call Void SetInitStateBits(InitStates)
L_001e: ret
DONE

### Patch HBS.Util.JSONSerializationUtility, System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Type
L_0000: Local var 2: System.Collections.Generic.Dictionary`2+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: System.String
L_0000: Local var 4: System.Object
L_0000: Local var 5: HBS.Reflection.MemberInfoHelper
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0
L_0000: Local var 8: System.Object[]
L_0000: Local var 9: System.Collections.Generic.KeyValuePair`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 10: System.String
L_0000: Local var 11: System.String
L_0000: Local var 12: System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: System.Object
L_0000: Local var 16: System.Object
L_0000: Local var 17: System.String
L_0000: ldnull
L_0001: stloc 17 (System.String)
L_0003: ldarg 0
L_0009: ldarg 1
L_000f: call Void Prefix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0014: ldstr ""
L_0019: stloc.0
L_001a: ldarg.0
L_001b: callvirt System.Type GetType()
L_0020: stloc.1
L_0021: ldarg.1
L_0022: callvirt Enumerator GetEnumerator()
L_0027: stloc.2
L_0028: ldarg.s 6
L_002a: ldnull
L_002b: cgt.un
L_002d: stloc.s 6 (System.Boolean)
L_002f: br Label1
L_0034: Label34
L_0034: newobj Void .ctor()
L_0039: stloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_003b: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_003d: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_0042: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0044: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0046: call System.String get_Key()
L_004b: stloc.3
L_004c: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_004e: ldarg.2
L_004f: call Boolean IsNullOrEmpty(System.String)
L_0054: brtrue Label2
L_0059: ldstr "{0}.{1}"
L_005e: ldarg.2
L_005f: ldloc.3
L_0060: call System.String Format(System.String, System.Object, System.Object)
L_0065: br Label3
L_006a: Label2
L_006a: ldloc.3
L_006b: Label3
L_006b: stfld System.String memberClassName
L_0070: ldloc.s 6 (System.Boolean)
L_0072: brfalse Label4
L_0077: ldarg.s 5
L_0079: brfalse Label5
L_007e: ldarg.s 6
L_0080: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0082: ldftn Boolean <RehydrateObjectFromDictionary>b__1(System.Func`2[System.String,System.Boolean])
L_0088: newobj Void .ctor(Object, IntPtr)
L_008d: call Boolean All[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_0092: br Label6
L_0097: Label5
L_0097: ldarg.s 6
L_0099: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_009b: ldftn Boolean <RehydrateObjectFromDictionary>b__0(System.Func`2[System.String,System.Boolean])
L_00a1: newobj Void .ctor(Object, IntPtr)
L_00a6: call Boolean Any[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_00ab: Label6
L_00ab: brtrue Label7
L_00b0: Label4
L_00b0: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_00b2: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_00b7: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00b9: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00bb: call System.Object get_Value()
L_00c0: stloc.s 4 (System.Object)
L_00c2: ldsfld HBS.Reflection.ReflectionCache reflectionCache
L_00c7: ldloc.1
L_00c8: ldloc.3
L_00c9: callvirt HBS.Reflection.MemberInfoHelper GetMemberHelper(System.Type, System.String)
L_00ce: stloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d0: ldnull
L_00d1: stloc.s 8 (System.Object[])
L_00d3: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d5: brtrue Label8
L_00da: ldstr "Could not retrieve member {0} from type {1}"
L_00df: ldloc.3
L_00e0: ldloc.1
L_00e1: callvirt System.String get_Name()
L_00e6: call System.String Format(System.String, System.Object, System.Object)
L_00eb: stloc.s 10 (System.String)
L_00ed: ldloc.0
L_00ee: ldloc.s 10 (System.String)
L_00f0: ldstr "
"
L_00f5: call System.String Concat(System.String, System.String, System.String)
L_00fa: stloc.0
L_00fb: ldloc.s 10 (System.String)
L_00fd: call Void LogWarning(System.String)
L_0102: br Label9
L_0107: Label8
L_0107: ldarg.s 4
L_0109: brfalse Label10
L_010e: ldarg.s 4
L_0110: callvirt Void Start()
L_0115: Label10
L_0115: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0117: ldtoken fastJSON.JsonIgnore
L_011c: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0121: ldc.i4.0
L_0122: callvirt System.Object[] GetCustomAttributes(System.Type, Boolean)
L_0127: stloc.s 8 (System.Object[])
L_0129: ldarg.s 4
L_012b: brfalse Label11
L_0130: ldarg.s 4
L_0132: callvirt Void Stop()
L_0137: Label11
L_0137: ldloc.s 8 (System.Object[])
L_0139: brfalse Label12
L_013e: ldloc.s 8 (System.Object[])
L_0140: ldlen
L_0141: brfalse Label13
L_0146: ldstr "Ignoring value [{0}] from type [{1}] because class has it marked with JsonIgnore attribute."
L_014b: ldloc.3
L_014c: ldloc.1
L_014d: callvirt System.String get_Name()
L_0152: call System.String Format(System.String, System.Object, System.Object)
L_0157: stloc.s 11 (System.String)
L_0159: ldloc.0
L_015a: ldloc.s 11 (System.String)
L_015c: ldstr "
"
L_0161: call System.String Concat(System.String, System.String, System.String)
L_0166: stloc.0
L_0167: ldloc.s 11 (System.String)
L_0169: call Void LogWarning(System.String)
L_016e: br Label14
L_0173: Label12
L_0173: Label13
L_0173: ldloc.s 4 (System.Object)
L_0175: isinst System.Collections.Generic.Dictionary`2[System.String,System.Object]
L_017a: stloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_017c: ldarg.s 4
L_017e: brfalse Label15
L_0183: ldarg.s 4
L_0185: callvirt Void Start()
L_018a: Label15
L_018a: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_018c: callvirt System.Type GetMemberType()
L_0191: callvirt System.Type[] GetInterfaces()
L_0196: ldtoken System.Collections.IDictionary
L_019b: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_01a0: call Boolean Contains[Type](System.Collections.Generic.IEnumerable`1[System.Type], System.Type)
L_01a5: stloc.s 13 (System.Boolean)
L_01a7: ldarg.s 4
L_01a9: brfalse Label16
L_01ae: ldarg.s 4
L_01b0: callvirt Void Stop()
L_01b5: Label16
L_01b5: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_01b7: brfalse Label17
L_01bc: ldloc.s 13 (System.Boolean)
L_01be: brtrue Label18
L_01c3: ldarg.s 4
L_01c5: brfalse Label19
L_01ca: ldarg.s 4
L_01cc: callvirt Void Start()
L_01d1: Label19
L_01d1: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01d3: callvirt System.Type GetMemberType()
L_01d8: callvirt Boolean get_IsValueType()
L_01dd: stloc.s 14 (System.Boolean)
L_01df: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01e1: ldarg.0
L_01e2: ldnull
L_01e3: callvirt System.Object GetValue(System.Object, System.Object[])
L_01e8: stloc.s 15 (System.Object)
L_01ea: ldarg.s 4
L_01ec: brfalse Label20
L_01f1: ldarg.s 4
L_01f3: callvirt Void Stop()
L_01f8: Label20
L_01f8: ldloc.s 15 (System.Object)
L_01fa: brtrue Label21
L_01ff: ldarg.s 4
L_0201: brfalse Label22
L_0206: ldarg.s 4
L_0208: callvirt Void Start()
L_020d: Label22
L_020d: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_020f: callvirt System.Type GetMemberType()
L_0214: callvirt Boolean get_IsArray()
L_0219: brfalse Label23
L_021e: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0220: callvirt System.Type GetMemberType()
L_0225: ldc.i4.1
L_0226: newarr System.Object
L_022b: dup
L_022c: ldc.i4.0
L_022d: ldc.i4.1
L_022e: box System.Int32
L_0233: stelem.ref
L_0234: call System.Object CreateInstance(System.Type, System.Object[])
L_0239: stloc.s 15 (System.Object)
L_023b: br Label24
L_0240: Label23
L_0240: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0242: callvirt System.Type GetMemberType()
L_0247: call System.Object CreateInstance(System.Type)
L_024c: stloc.s 15 (System.Object)
L_024e: Label24
L_024e: ldarg.s 4
L_0250: brfalse Label25
L_0255: ldarg.s 4
L_0257: callvirt Void Stop()
L_025c: Label25
L_025c: ldc.i4.1
L_025d: stloc.s 14 (System.Boolean)
L_025f: Label21
L_025f: ldloc.s 15 (System.Object)
L_0261: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0263: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0265: ldfld System.String memberClassName
L_026a: ldarg.3
L_026b: ldarg.s 4
L_026d: ldarg.s 5
L_026f: ldarg.s 6
L_0271: call System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0276: pop
L_0277: ldloc.s 14 (System.Boolean)
L_0279: brfalse Label26
L_027e: ldarg.s 4
L_0280: brfalse Label27
L_0285: ldarg.s 4
L_0287: callvirt Void Start()
L_028c: Label27
L_028c: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_028e: ldarga.s 0
L_0290: ldloc.s 15 (System.Object)
L_0292: call System.Object[] Empty[Object]()
L_0297: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_029c: ldarg.s 4
L_029e: brfalse Label28
L_02a3: ldarg.s 4
L_02a5: callvirt Void Stop()
L_02aa: br Label29
L_02af: Label17
L_02af: Label18
L_02af: ldarg.3
L_02b0: brfalse Label30
L_02b5: ldarg.3
L_02b6: callvirt Void Start()
L_02bb: Label30
L_02bb: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02bd: callvirt System.Type GetMemberType()
L_02c2: ldloc.s 4 (System.Object)
L_02c4: call System.Object ConvertValue(System.Type, System.Object)
L_02c9: stloc.s 16 (System.Object)
L_02cb: ldarg.3
L_02cc: brfalse Label31
L_02d1: ldarg.3
L_02d2: callvirt Void Stop()
L_02d7: Label31
L_02d7: ldarg.s 4
L_02d9: brfalse Label32
L_02de: ldarg.s 4
L_02e0: callvirt Void Start()
L_02e5: Label32
L_02e5: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02e7: ldarga.s 0
L_02e9: ldloc.s 16 (System.Object)
L_02eb: call System.Object[] Empty[Object]()
L_02f0: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_02f5: ldarg.s 4
L_02f7: brfalse Label33
L_02fc: ldarg.s 4
L_02fe: callvirt Void Stop()
L_0303: Label1
L_0303: Label7
L_0303: Label9
L_0303: Label14
L_0303: Label26
L_0303: Label28
L_0303: Label29
L_0303: Label33
L_0303: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_0305: call Boolean MoveNext()
L_030a: brtrue Label34
L_030f: ldloc.0
L_0310: stloc 17 (System.String)
L_0312: ldarg 0
L_0318: ldarg 1
L_031e: call Void Postfix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0323: ldloc 17 (System.String)
L_0325: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: ldarg.0
L_0008: callvirt Void set_DropParent(BattleTech.UI.IMechLabDropTarget)
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0013: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0018: ldarg.1
L_0019: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001e: callvirt Void Add(BattleTech.MechComponentRef)
L_0023: ldarg.1
L_0024: isinst BattleTech.UI.MechLabItemSlotElement
L_0029: stloc.0
L_002a: ldloc.0
L_002b: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0030: ldc.i4.1
L_0031: callvirt Void set_blocksRaycasts(Boolean)
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_003c: ldloc.0
L_003d: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: ldfld System.Int32 usedSlots
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt Int32 get_InventorySize()
L_0059: add
L_005a: stfld System.Int32 usedSlots
L_005f: ldloc.0
L_0060: callvirt UnityEngine.GameObject get_gameObject()
L_0065: callvirt UnityEngine.Transform get_transform()
L_006a: ldarg.0
L_006b: ldfld UnityEngine.Transform inventoryParent
L_0070: ldc.i4.0
L_0071: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_0076: ldloc.0
L_0077: callvirt UnityEngine.GameObject get_gameObject()
L_007c: callvirt UnityEngine.Transform get_transform()
L_0081: call UnityEngine.Vector3 get_one()
L_0086: callvirt Void set_localScale(UnityEngine.Vector3)
L_008b: ldarg.0
L_008c: ldloc.0
L_008d: ldc.i4.0
L_008e: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0093: ldarg.0
L_0094: ldfld BattleTech.UI.MechLabPanel mechLab
L_0099: callvirt Void FlagAsModified()
L_009e: ldc.i4.1
L_009f: stloc 1 (System.Boolean)
L_00a0: ldarg 1
L_00a6: ldarg.0
L_00a7: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00ac: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_00b1: ldloc 1 (System.Boolean)
L_00b2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void RepairAll(Boolean, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brfalse Label1
L_0010: ldarg.0
L_0011: call Boolean get_IsSimGame()
L_0016: brtrue Label2
L_001b: Label1
L_001b: br Label12
L_0020: Label2
L_0020: ldarg.1
L_0021: brtrue Label3
L_0026: ldarg.0
L_0027: ldfld BattleTech.LocationLoadoutDef loadout
L_002c: ldfld System.Single CurrentInternalStructure
L_0031: ldc.r4 0
L_0036: ble.un Label4
L_003b: Label3
L_003b: ldarg.0
L_003c: ldarg.2
L_003d: call Void RepairStructure(Boolean)
L_0042: Label4
L_0042: ldarg.0
L_0043: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0048: callvirt Int32 get_Count()
L_004d: ldc.i4.1
L_004e: sub
L_004f: stloc.0
L_0050: br Label5
L_0055: Label11
L_0055: ldarg.0
L_0056: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_005b: ldloc.0
L_005c: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0061: stloc.1
L_0062: ldloc.1
L_0063: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0068: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_006d: brfalse Label6
L_0072: ldloc.1
L_0073: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0078: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_007d: ldc.i4.5
L_007e: beq Label7
L_0083: ldloc.1
L_0084: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0089: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_008e: ldc.i4.4
L_008f: bne.un Label8
L_0094: ldloc.1
L_0095: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_009a: callvirt Boolean get_IsFixed()
L_009f: brtrue Label9
L_00a4: ldarg.0
L_00a5: ldloc.1
L_00a6: ldc.i4.1
L_00a7: call Boolean OnRemoveItemRepair(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_00ac: pop
L_00ad: ldarg.0
L_00ae: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b3: ldloc.1
L_00b4: call Void ForceItemDropRepair(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_00b9: br Label10
L_00be: Label8
L_00be: Label9
L_00be: ldloc.1
L_00bf: ldc.i4.1
L_00c0: callvirt Void RepairComponent(Boolean)
L_00c5: Label6
L_00c5: Label7
L_00c5: Label10
L_00c5: ldloc.0
L_00c6: ldc.i4.1
L_00c7: sub
L_00c8: stloc.0
L_00c9: Label5
L_00c9: ldloc.0
L_00ca: ldc.i4.0
L_00cb: bge Label11
L_00d0: Label12
L_00d0: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void StripDestroyedComponents()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brtrue Label1
L_0010: br Label6
L_0015: Label1
L_0015: ldarg.0
L_0016: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_001b: callvirt Int32 get_Count()
L_0020: ldc.i4.1
L_0021: sub
L_0022: stloc.0
L_0023: br Label2
L_0028: Label5
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_002e: ldloc.0
L_002f: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0034: stloc.1
L_0035: ldloc.1
L_0036: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_003b: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0040: ldc.i4.4
L_0041: bne.un Label3
L_0046: ldloc.1
L_0047: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004c: callvirt Boolean get_IsFixed()
L_0051: brtrue Label4
L_0056: ldarg.0
L_0057: ldloc.1
L_0058: ldc.i4.1
L_0059: call Boolean OnRemoveItemRepair(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_005e: pop
L_005f: ldarg.0
L_0060: ldfld BattleTech.UI.MechLabPanel mechLab
L_0065: ldloc.1
L_0066: call Void ForceItemDropRepair(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_006b: Label3
L_006b: Label4
L_006b: ldloc.0
L_006c: ldc.i4.1
L_006d: sub
L_006e: stloc.0
L_006f: Label2
L_006f: ldloc.0
L_0070: ldc.i4.0
L_0071: bge Label5
L_0076: Label6
L_0076: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void SetData(BattleTech.LocationLoadoutDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.LocationLoadoutDef loadout
L_0007: ldarg.0
L_0008: call Void ClearInventory()
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0014: ldfld BattleTech.MechDef activeMechDef
L_0019: callvirt BattleTech.ChassisDef get_Chassis()
L_001e: ldarg.1
L_001f: ldfld BattleTech.ChassisLocations Location
L_0024: callvirt BattleTech.LocationDef GetLocationDef(BattleTech.ChassisLocations)
L_0029: stfld BattleTech.LocationDef chassisLocationDef
L_002e: ldarg.0
L_002f: ldarg.1
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: ldc.i4.8
L_0036: beq Label1
L_003b: ldarg.1
L_003c: ldfld BattleTech.ChassisLocations Location
L_0041: ldc.i4.4
L_0042: beq Label2
L_0047: ldarg.1
L_0048: ldfld BattleTech.ChassisLocations Location
L_004d: ldc.i4.s 16
L_004f: ceq
L_0051: br Label3
L_0056: Label1
L_0056: Label2
L_0056: ldc.i4.1
L_0057: Label3
L_0057: stfld System.Boolean useRearArmor
L_005c: ldarg.0
L_005d: ldarg.0
L_005e: ldflda BattleTech.LocationDef chassisLocationDef
L_0063: ldfld System.Int32 InventorySlots
L_0068: stfld System.Int32 maxSlots
L_006d: ldarg.0
L_006e: ldarg.0
L_006f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0074: ldfld BattleTech.MechDef originalMechDef
L_0079: ldarg.1
L_007a: ldfld BattleTech.ChassisLocations Location
L_007f: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0084: ldfld System.Single AssignedArmor
L_0089: stfld System.Single originalArmor
L_008e: ldarg.0
L_008f: ldarg.0
L_0090: ldfld System.Single originalArmor
L_0095: stfld System.Single currentArmor
L_009a: ldarg.0
L_009b: ldarg.0
L_009c: ldflda BattleTech.LocationDef chassisLocationDef
L_00a1: ldfld System.Single MaxArmor
L_00a6: stfld System.Single maxArmor
L_00ab: ldarg.0
L_00ac: ldc.r4 0
L_00b1: stfld System.Single maxRearArmor
L_00b6: ldarg.0
L_00b7: ldc.r4 0
L_00bc: stfld System.Single originalRearArmor
L_00c1: ldarg.0
L_00c2: ldc.r4 0
L_00c7: stfld System.Single currentRearArmor
L_00cc: ldarg.0
L_00cd: ldfld System.Boolean useRearArmor
L_00d2: brfalse Label4
L_00d7: ldarg.0
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.MechLabPanel mechLab
L_00de: ldfld BattleTech.MechDef originalMechDef
L_00e3: ldarg.1
L_00e4: ldfld BattleTech.ChassisLocations Location
L_00e9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ee: ldfld System.Single AssignedRearArmor
L_00f3: stfld System.Single originalRearArmor
L_00f8: ldarg.0
L_00f9: ldarg.0
L_00fa: ldfld System.Single originalRearArmor
L_00ff: stfld System.Single currentRearArmor
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: ldflda BattleTech.LocationDef chassisLocationDef
L_010b: ldfld System.Single MaxRearArmor
L_0110: stfld System.Single maxRearArmor
L_0115: Label4
L_0115: ldarg.0
L_0116: ldc.i4.0
L_0117: stfld System.Int32 usedSlots
L_011c: ldarg.0
L_011d: ldc.i4.0
L_011e: stfld System.Int32 currentBallisticCount
L_0123: ldarg.0
L_0124: ldc.i4.0
L_0125: stfld System.Int32 currentEnergyCount
L_012a: ldarg.0
L_012b: ldc.i4.0
L_012c: stfld System.Int32 currentMissileCount
L_0131: ldarg.0
L_0132: ldc.i4.0
L_0133: stfld System.Int32 currentSmallCount
L_0138: ldarg.0
L_0139: ldc.i4.0
L_013a: stfld System.Int32 totalBallisticHardpoints
L_013f: ldarg.0
L_0140: ldc.i4.0
L_0141: stfld System.Int32 totalEnergyHardpoints
L_0146: ldarg.0
L_0147: ldc.i4.0
L_0148: stfld System.Int32 totalMissileHardpoints
L_014d: ldarg.0
L_014e: ldc.i4.0
L_014f: stfld System.Int32 totalSmallHardpoints
L_0154: ldarg.0
L_0155: ldc.i4.0
L_0156: stfld System.Int32 currentJumpjetCount
L_015b: ldarg.0
L_015c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0161: ldfld BattleTech.MechDef activeMechDef
L_0166: ldarg.1
L_0167: ldfld BattleTech.ChassisLocations Location
L_016c: ldarg.0
L_016d: ldflda System.Int32 totalBallisticHardpoints
L_0172: ldarg.0
L_0173: ldflda System.Int32 totalEnergyHardpoints
L_0178: ldarg.0
L_0179: ldflda System.Int32 totalMissileHardpoints
L_017e: ldarg.0
L_017f: ldflda System.Int32 totalSmallHardpoints
L_0184: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0189: ldc.i4.0
L_018a: stloc.0
L_018b: br Label5
L_0190: Label8
L_0190: ldarg.0
L_0191: ldfld BattleTech.UI.MechLabPanel mechLab
L_0196: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_019b: ldloc.0
L_019c: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01a1: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a6: ldarg.1
L_01a7: ldfld BattleTech.ChassisLocations Location
L_01ac: bne.un Label6
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01bd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_01c2: ldloc.0
L_01c3: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01c8: ldc.i4.0
L_01c9: ldarg.1
L_01ca: ldfld BattleTech.ChassisLocations Location
L_01cf: ldarg.0
L_01d0: ldnull
L_01d1: callvirt BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_01d6: stloc.1
L_01d7: ldloc.1
L_01d8: ldnull
L_01d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01de: brfalse Label7
L_01e3: ldarg.0
L_01e4: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_01e9: ldloc.1
L_01ea: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_01ef: ldarg.0
L_01f0: ldarg.0
L_01f1: ldfld System.Int32 usedSlots
L_01f6: ldarg.0
L_01f7: ldfld BattleTech.UI.MechLabPanel mechLab
L_01fc: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0201: ldloc.0
L_0202: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_0207: callvirt BattleTech.MechComponentDef get_Def()
L_020c: callvirt Int32 get_InventorySize()
L_0211: add
L_0212: stfld System.Int32 usedSlots
L_0217: ldloc.1
L_0218: callvirt UnityEngine.GameObject get_gameObject()
L_021d: callvirt UnityEngine.Transform get_transform()
L_0222: ldarg.0
L_0223: ldfld UnityEngine.Transform inventoryParent
L_0228: ldc.i4.0
L_0229: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_022e: ldloc.1
L_022f: callvirt UnityEngine.GameObject get_gameObject()
L_0234: callvirt UnityEngine.Transform get_transform()
L_0239: call UnityEngine.Vector3 get_one()
L_023e: callvirt Void set_localScale(UnityEngine.Vector3)
L_0243: Label6
L_0243: Label7
L_0243: ldloc.0
L_0244: ldc.i4.1
L_0245: add
L_0246: stloc.0
L_0247: Label5
L_0247: ldloc.0
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0253: callvirt Int32 get_Count()
L_0258: blt Label8
L_025d: ldarg.0
L_025e: call Void RefreshHardpointData()
L_0263: ldarg.0
L_0264: call Void RefreshArmor()
L_0269: ldarg.0
L_026a: ldfld BattleTech.UI.TMProWrapper.LocalizableText structureText
L_026f: ldstr "{0} / {1}"
L_0274: ldc.i4.2
L_0275: newarr System.Object
L_027a: dup
L_027b: ldc.i4.0
L_027c: ldarg.1
L_027d: ldfld System.Single CurrentInternalStructure
L_0282: conv.i4
L_0283: box System.Int32
L_0288: stelem.ref
L_0289: dup
L_028a: ldc.i4.1
L_028b: ldarg.0
L_028c: ldflda BattleTech.LocationDef chassisLocationDef
L_0291: ldfld System.Single InternalStructure
L_0296: conv.i4
L_0297: box System.Int32
L_029c: stelem.ref
L_029d: callvirt Void SetText(System.String, System.Object[])
L_02a2: ldarg.1
L_02a3: ldfld System.Single CurrentInternalStructure
L_02a8: ldc.r4 0
L_02ad: bgt.un Label9
L_02b2: ldarg.0
L_02b3: ldc.i4.1
L_02b4: stfld System.Boolean needsRepair
L_02b9: ldarg.0
L_02ba: ldfld UnityEngine.GameObject destroyedOverlay
L_02bf: ldc.i4.1
L_02c0: callvirt Void SetActive(Boolean)
L_02c5: ldarg.0
L_02c6: ldfld UnityEngine.GameObject damagedOverlay
L_02cb: ldc.i4.0
L_02cc: callvirt Void SetActive(Boolean)
L_02d1: br Label11
L_02d6: Label9
L_02d6: ldarg.1
L_02d7: ldfld System.Single CurrentInternalStructure
L_02dc: ldarg.0
L_02dd: ldflda BattleTech.LocationDef chassisLocationDef
L_02e2: ldfld System.Single InternalStructure
L_02e7: bge.un Label10
L_02ec: ldarg.0
L_02ed: ldc.i4.1
L_02ee: stfld System.Boolean needsRepair
L_02f3: ldarg.0
L_02f4: ldfld UnityEngine.GameObject destroyedOverlay
L_02f9: ldc.i4.0
L_02fa: callvirt Void SetActive(Boolean)
L_02ff: ldarg.0
L_0300: ldfld UnityEngine.GameObject damagedOverlay
L_0305: ldc.i4.1
L_0306: callvirt Void SetActive(Boolean)
L_030b: br Label12
L_0310: Label10
L_0310: ldarg.0
L_0311: ldc.i4.0
L_0312: stfld System.Boolean needsRepair
L_0317: ldarg.0
L_0318: ldfld UnityEngine.GameObject damagedOverlay
L_031d: ldc.i4.0
L_031e: callvirt Void SetActive(Boolean)
L_0323: ldarg.0
L_0324: ldfld UnityEngine.GameObject destroyedOverlay
L_0329: ldc.i4.0
L_032a: callvirt Void SetActive(Boolean)
L_032f: Label11
L_032f: Label12
L_032f: ldarg.0
L_0330: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0335: call Void Postfix(System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_033a: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void StripEquipment()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brtrue Label1
L_0010: br Label5
L_0015: Label1
L_0015: ldarg.0
L_0016: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_001b: callvirt Int32 get_Count()
L_0020: ldc.i4.1
L_0021: sub
L_0022: stloc.0
L_0023: br Label2
L_0028: Label4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_002e: ldloc.0
L_002f: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0034: stloc.1
L_0035: ldloc.1
L_0036: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_003b: callvirt Boolean get_IsFixed()
L_0040: brtrue Label3
L_0045: ldarg.0
L_0046: ldloc.1
L_0047: ldc.i4.1
L_0048: call Boolean OnRemoveItemStrip(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_004d: pop
L_004e: ldarg.0
L_004f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0054: ldloc.1
L_0055: call Void ForceItemDropStrip(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_005a: Label3
L_005a: ldloc.0
L_005b: ldc.i4.1
L_005c: sub
L_005d: stloc.0
L_005e: Label2
L_005e: ldloc.0
L_005f: ldc.i4.0
L_0060: bge Label4
L_0065: Label5
L_0065: ret
DONE

### Patch BattleTech.SimGameState, Void AddMechPart(System.String)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.MechDef
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldarg.1
L_0008: ldstr "MECHPART"
L_000d: ldc.i4.1
L_000e: call Int32 GetItemCount(System.String, System.String, ItemCountType)
L_0013: ldarg.0
L_0014: call BattleTech.SimGameConstants get_Constants()
L_0019: callvirt BattleTech.StoryConstantsDef get_Story()
L_001e: ldfld System.Int32 DefaultMechPartMax
L_0023: stloc.0
L_0024: ldc.i4.1
L_0025: add
L_0026: ldloc.0
L_0027: blt Label1
L_002c: ldc.i4.0
L_002d: stloc.2
L_002e: br Label2
L_0033: Label3
L_0033: ldarg.0
L_0034: ldarg.1
L_0035: ldstr "MECHPART"
L_003a: ldc.i4.0
L_003b: call Void RemoveItemStat(System.String, System.String, Boolean)
L_0040: ldloc.2
L_0041: ldc.i4.1
L_0042: add
L_0043: stloc.2
L_0044: Label2
L_0044: ldloc.2
L_0045: ldloc.0
L_0046: ldc.i4.1
L_0047: sub
L_0048: blt Label3
L_004d: ldarg.0
L_004e: call BattleTech.Data.DataManager get_DataManager()
L_0053: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.MechDef] get_MechDefs()
L_0058: ldarg.1
L_0059: callvirt BattleTech.MechDef Get(System.String)
L_005e: ldarg.0
L_005f: call System.String GenerateSimGameUID()
L_0064: ldarg.0
L_0065: call BattleTech.SimGameConstants get_Constants()
L_006a: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_006f: ldfld System.Boolean EquipMechOnSalvage
L_0074: call BattleTech.MechDef CreateMech(BattleTech.MechDef, System.String, Boolean)
L_0079: stloc.1
L_007a: ldarg.0
L_007b: ldc.i4.0
L_007c: ldloc.1
L_007d: ldc.i4.1
L_007e: ldc.i4.0
L_007f: ldc.i4.1
L_0080: ldnull
L_0081: call Void AddMech(Int32, BattleTech.MechDef, Boolean, Boolean, Boolean, System.String)
L_0086: ldarg.0
L_0087: ldfld BattleTech.UI.SimGameInterruptManager interruptQueue
L_008c: callvirt Boolean DisplayIfAvailable()
L_0091: pop
L_0092: ldarg.0
L_0093: call MessageCenter get_MessageCenter()
L_0098: ldloc.1
L_0099: ldloc.0
L_009a: ldc.i4.1
L_009b: newobj Void .ctor(MechDef, Int32, Boolean)
L_00a0: callvirt Void PublishMessage(MessageCenterMessage)
L_00a5: br Label4
L_00aa: Label1
L_00aa: ldarg.0
L_00ab: ldarg.1
L_00ac: ldstr "MECHPART"
L_00b1: ldc.i4.0
L_00b2: call Void AddItemStat(System.String, System.String, Boolean)
L_00b7: Label4
L_00b7: ret
DONE

### Patch BattleTech.SimGameState, Void ReadyMech(Int32, System.String)
L_0000: Local var 0: System.String[]
L_0000: Local var 1: System.String
L_0000: Local var 2: BattleTech.ChassisDef
L_0000: Local var 3: System.String
L_0000: Local var 4: BattleTech.MechDef
L_0000: Local var 5: BattleTech.MechDef
L_0000: Local var 6: BattleTech.WorkOrderEntry_ReadyMech
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldarg.2
L_0008: ldc.i4.0
L_0009: call Boolean ScrapInactiveMech(System.String, Boolean)
L_000e: brfalse Label1
L_0013: ldarg.0
L_0014: ldarg.2
L_0015: ldtoken BattleTech.MechDef
L_001a: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_001f: call System.String GetItemStatID(System.String, System.Type)
L_0024: starg.s 2
L_0026: ldarg.2
L_0027: ldc.i4.1
L_0028: newarr System.Char
L_002d: dup
L_002e: ldc.i4.0
L_002f: ldc.i4.s 46
L_0031: stelem.i2
L_0032: callvirt System.String[] Split(Char[])
L_0037: stloc.0
L_0038: ldtoken BattleTech.BattleTechResourceType
L_003d: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0042: ldloc.0
L_0043: ldc.i4.1
L_0044: ldelem.ref
L_0045: call System.Object Parse(System.Type, System.String)
L_004a: unbox.any BattleTech.BattleTechResourceType
L_004f: ldc.i4.s 37
L_0051: beq Label2
L_0056: br Label4
L_005b: Label2
L_005b: ldarg.0
L_005c: call BattleTech.Data.DataManager get_DataManager()
L_0061: ldc.i4.s 13
L_0063: ldloc.0
L_0064: ldc.i4.2
L_0065: ldelem.ref
L_0066: callvirt Boolean Exists(BattleTech.BattleTechResourceType, System.String)
L_006b: brtrue Label3
L_0070: br Label5
L_0075: Label3
L_0075: ldarg.0
L_0076: call System.String GenerateSimGameUID()
L_007b: stloc.1
L_007c: ldarg.0
L_007d: call BattleTech.Data.DataManager get_DataManager()
L_0082: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.ChassisDef] get_ChassisDefs()
L_0087: ldloc.0
L_0088: ldc.i4.2
L_0089: ldelem.ref
L_008a: callvirt BattleTech.ChassisDef Get(System.String)
L_008f: stloc.2
L_0090: ldloc.2
L_0091: callvirt BattleTech.DescriptionDef get_Description()
L_0096: callvirt System.String get_Id()
L_009b: ldstr "chassisdef"
L_00a0: ldstr "mechdef"
L_00a5: callvirt System.String Replace(System.String, System.String)
L_00aa: stloc.3
L_00ab: ldarg.0
L_00ac: call BattleTech.Data.DataManager get_DataManager()
L_00b1: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.MechDef] get_MechDefs()
L_00b6: ldloc.3
L_00b7: callvirt BattleTech.MechDef Get(System.String)
L_00bc: stloc.s 4 (BattleTech.MechDef)
L_00be: ldloc.2
L_00bf: ldloc.1
L_00c0: ldloc.s 4 (BattleTech.MechDef)
L_00c2: call BattleTech.MechDef CreateMech(BattleTech.ChassisDef, System.String, BattleTech.MechDef)
L_00c7: stloc.s 5 (BattleTech.MechDef)
L_00c9: ldstr "ReadyMech-{0}"
L_00ce: ldloc.1
L_00cf: call System.String Format(System.String, System.Object)
L_00d4: ldstr "Readying 'Mech - {0}"
L_00d9: ldc.i4.1
L_00da: newarr System.Object
L_00df: dup
L_00e0: ldc.i4.0
L_00e1: ldloc.2
L_00e2: callvirt BattleTech.DescriptionDef get_Description()
L_00e7: callvirt System.String get_Name()
L_00ec: stelem.ref
L_00ed: call System.String T(System.String, System.Object[])
L_00f2: ldarg.0
L_00f3: call BattleTech.SimGameConstants get_Constants()
L_00f8: callvirt BattleTech.StoryConstantsDef get_Story()
L_00fd: ldfld System.Int32 MechReadyTime
L_0102: ldarg.1
L_0103: ldloc.s 5 (BattleTech.MechDef)
L_0105: ldarg.0
L_0106: call BattleTech.SimGameConstants get_Constants()
L_010b: callvirt BattleTech.StoryConstantsDef get_Story()
L_0110: ldfld System.String MechReadiedWorkOrderCompletedText
L_0115: ldc.i4.1
L_0116: newarr System.Object
L_011b: dup
L_011c: ldc.i4.0
L_011d: ldloc.2
L_011e: callvirt BattleTech.DescriptionDef get_Description()
L_0123: callvirt System.String get_Name()
L_0128: stelem.ref
L_0129: call System.String T(System.String, System.Object[])
L_012e: newobj Void .ctor(String, String, Int32, Int32, MechDef, String)
L_0133: stloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_0135: ldarg.0
L_0136: call System.Collections.Generic.List`1[BattleTech.WorkOrderEntry] get_MechLabQueue()
L_013b: ldloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_013d: callvirt Void Add(BattleTech.WorkOrderEntry)
L_0142: ldarg.0
L_0143: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_0148: ldarg.1
L_0149: ldloc.s 5 (BattleTech.MechDef)
L_014b: callvirt Void set_Item(Int32, BattleTech.MechDef)
L_0150: ldarg.0
L_0151: ldfld BattleTech.UI.SGRoomManager RoomManager
L_0156: ldloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_0158: callvirt BattleTech.UI.TaskManagementElement AddWorkQueueEntry(BattleTech.WorkOrderEntry)
L_015d: pop
L_015e: ldarg.0
L_015f: ldc.i4.0
L_0160: call Void UpdateMechLabWorkQueue(Boolean)
L_0165: ldstr "audioeventdef_simgame_vo_barks"
L_016a: ldstr "workqueue_readymech"
L_016f: call AkGameObj get_GlobalAudioObject()
L_0174: ldnull
L_0175: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_017a: pop
L_017b: Label1
L_017b: Label4
L_017b: Label5
L_017b: ret
DONE

### Patch BattleTech.SimGameState, Void ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent)
L_0000: Local var 0: BattleTech.MechDef
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.MechComponentRef
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: BattleTech.ComponentDamageLevel
L_0000: Local var 6: BattleTech.MechComponentRef[]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.MechComponentRef
L_0000: ldarg.1
L_0001: callvirt Boolean get_IsMechLabComplete()
L_0006: brfalse Label1
L_000b: br Label20
L_0010: Label1
L_0010: ldarg.0
L_0011: ldarg.1
L_0012: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_0017: callvirt System.String get_MechID()
L_001c: call BattleTech.MechDef GetMechByID(System.String)
L_0021: stloc.0
L_0022: ldc.i4.0
L_0023: stloc.1
L_0024: ldarg.0
L_0025: ldloc.0
L_0026: ldarg.1
L_0027: callvirt System.String get_ComponentSimGameUID()
L_002c: ldarg.1
L_002d: callvirt System.String get_MechComponentID()
L_0032: ldarg.1
L_0033: callvirt BattleTech.ComponentType get_ComponentType()
L_0038: ldarg.1
L_0039: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_003e: ldarg.1
L_003f: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_0044: ldarg.1
L_0045: callvirt Int32 get_HardpointSlot()
L_004a: ldloca.s 1 (System.Boolean)
L_004c: call BattleTech.MechComponentRef GetMechComponentRefForUID(BattleTech.MechDef, System.String, System.String, BattleTech.ComponentType, BattleTech.ComponentDamageLevel, BattleTech.ChassisLocations, Int32, Boolean ByRef)
L_0051: stloc.2
L_0052: ldloc.0
L_0053: brtrue Label2
L_0058: ldsfld HBS.Logging.ILog logger
L_005d: ldc.i4.5
L_005e: newarr System.String
L_0063: dup
L_0064: ldc.i4.0
L_0065: ldstr "ML_InstallComponent "
L_006a: stelem.ref
L_006b: dup
L_006c: ldc.i4.1
L_006d: ldarg.1
L_006e: callvirt System.String get_ID()
L_0073: stelem.ref
L_0074: dup
L_0075: ldc.i4.2
L_0076: ldstr " had an invalid mechID "
L_007b: stelem.ref
L_007c: dup
L_007d: ldc.i4.3
L_007e: ldarg.1
L_007f: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_0084: callvirt System.String get_MechID()
L_0089: stelem.ref
L_008a: dup
L_008b: ldc.i4.4
L_008c: ldstr ", skipping"
L_0091: stelem.ref
L_0092: call System.String Concat(System.String[])
L_0097: callvirt Void LogError(System.Object)
L_009c: br Label21
L_00a1: Label2
L_00a1: ldloc.2
L_00a2: brtrue Label3
L_00a7: ldsfld HBS.Logging.ILog logger
L_00ac: ldc.i4.5
L_00ad: newarr System.String
L_00b2: dup
L_00b3: ldc.i4.0
L_00b4: ldstr "ML_InstallComponent "
L_00b9: stelem.ref
L_00ba: dup
L_00bb: ldc.i4.1
L_00bc: ldarg.1
L_00bd: callvirt System.String get_ID()
L_00c2: stelem.ref
L_00c3: dup
L_00c4: ldc.i4.2
L_00c5: ldstr " had an invalid mechComponentID "
L_00ca: stelem.ref
L_00cb: dup
L_00cc: ldc.i4.3
L_00cd: ldarg.1
L_00ce: callvirt System.String get_MechComponentID()
L_00d3: stelem.ref
L_00d4: dup
L_00d5: ldc.i4.4
L_00d6: ldstr ", skipping"
L_00db: stelem.ref
L_00dc: call System.String Concat(System.String[])
L_00e1: callvirt Void LogError(System.Object)
L_00e6: br Label22
L_00eb: Label3
L_00eb: ldarg.1
L_00ec: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_00f1: brfalse Label4
L_00f6: ldloc.2
L_00f7: callvirt BattleTech.MechComponentDef get_Def()
L_00fc: callvirt BattleTech.DescriptionDef get_Description()
L_0101: callvirt System.String get_Id()
L_0106: pop
L_0107: ldarg.0
L_0108: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_010d: ldloc.2
L_010e: callvirt Boolean Remove(BattleTech.MechComponentRef)
L_0113: pop
L_0114: ldloc.0
L_0115: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_011a: newobj Void .ctor(IEnumerable`1)
L_011f: stloc.3
L_0120: ldloc.2
L_0121: ldarg.1
L_0122: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_0127: ldarg.1
L_0128: callvirt Int32 get_HardpointSlot()
L_012d: ldloc.2
L_012e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0133: ldc.i4.6
L_0134: beq Label5
L_0139: ldc.i4.0
L_013a: br Label6
L_013f: Label5
L_013f: ldc.i4.3
L_0140: Label6
L_0140: ldloc.2
L_0141: callvirt Boolean get_IsFixed()
L_0146: callvirt Void SetData(BattleTech.ChassisLocations, Int32, BattleTech.ComponentDamageLevel, Boolean)
L_014b: ldloc.3
L_014c: ldloc.2
L_014d: callvirt Void Add(BattleTech.MechComponentRef)
L_0152: ldloc.0
L_0153: ldloc.3
L_0154: callvirt BattleTech.MechComponentRef[] ToArray()
L_0159: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_015e: br Label7
L_0163: Label4
L_0163: ldloc.2
L_0164: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0169: ldc.i4.4
L_016a: beq Label8
L_016f: ldc.i4.0
L_0170: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0172: ldloc.2
L_0173: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0178: brtrue Label9
L_017d: ldc.i4.5
L_017e: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0180: br Label10
L_0185: Label9
L_0185: ldloc.2
L_0186: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_018b: ldc.i4.3
L_018c: bne.un Label11
L_0191: ldc.i4.6
L_0192: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0194: Label10
L_0194: Label11
L_0194: ldloc.2
L_0195: ldarg.1
L_0196: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_019b: ldarg.1
L_019c: callvirt Int32 get_HardpointSlot()
L_01a1: ldloc.s 5 (BattleTech.ComponentDamageLevel)
L_01a3: ldloc.2
L_01a4: callvirt Boolean get_IsFixed()
L_01a9: callvirt Void SetData(BattleTech.ChassisLocations, Int32, BattleTech.ComponentDamageLevel, Boolean)
L_01ae: ldarg.0
L_01af: ldarg.1
L_01b0: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_01b5: ldarg.1
L_01b6: callvirt System.String get_ID()
L_01bb: ldloc.2
L_01bc: callvirt System.String get_SimGameUID()
L_01c1: call Int32 GetWorkOrderComponentReferenceCount(BattleTech.WorkOrderEntry_MechLab, System.String, System.String)
L_01c6: ldc.i4.0
L_01c7: cgt
L_01c9: brfalse Label12
L_01ce: ldarg.0
L_01cf: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_01d4: ldloc.2
L_01d5: callvirt Boolean Contains(BattleTech.MechComponentRef)
L_01da: brtrue Label13
L_01df: ldarg.0
L_01e0: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_01e5: ldloc.2
L_01e6: callvirt Void Add(BattleTech.MechComponentRef)
L_01eb: br Label14
L_01f0: Label12
L_01f0: ldarg.0
L_01f1: ldloc.2
L_01f2: callvirt BattleTech.MechComponentDef get_Def()
L_01f7: callvirt BattleTech.DescriptionDef get_Description()
L_01fc: callvirt System.String get_Id()
L_0201: ldloc.2
L_0202: callvirt BattleTech.MechComponentDef get_Def()
L_0207: call System.Type GetTypeFromComponent(BattleTech.MechComponentDef)
L_020c: ldloc.2
L_020d: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0212: brfalse Label15
L_0217: ldloc.2
L_0218: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_021d: ldc.i4.5
L_021e: ceq
L_0220: ldc.i4.0
L_0221: ceq
L_0223: br Label16
L_0228: Label15
L_0228: ldc.i4.0
L_0229: Label16
L_0229: call Void AddItemStat(System.String, System.Type, Boolean)
L_022e: Label8
L_022e: Label13
L_022e: Label14
L_022e: newobj Void .ctor()
L_0233: stloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0235: ldloc.0
L_0236: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_023b: stloc.s 6 (BattleTech.MechComponentRef[])
L_023d: ldc.i4.0
L_023e: stloc.s 7 (System.Int32)
L_0240: br Label17
L_0245: Label19
L_0245: ldloc.s 6 (BattleTech.MechComponentRef[])
L_0247: ldloc.s 7 (System.Int32)
L_0249: ldelem.ref
L_024a: stloc.s 8 (BattleTech.MechComponentRef)
L_024c: ldloc.s 8 (BattleTech.MechComponentRef)
L_024e: ldloc.2
L_024f: beq Label18
L_0254: ldloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0256: ldloc.s 8 (BattleTech.MechComponentRef)
L_0258: callvirt Void Add(BattleTech.MechComponentRef)
L_025d: Label18
L_025d: ldloc.s 7 (System.Int32)
L_025f: ldc.i4.1
L_0260: add
L_0261: stloc.s 7 (System.Int32)
L_0263: Label17
L_0263: ldloc.s 7 (System.Int32)
L_0265: ldloc.s 6 (BattleTech.MechComponentRef[])
L_0267: ldlen
L_0268: conv.i4
L_0269: blt Label19
L_026e: ldloc.0
L_026f: ldloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0271: callvirt BattleTech.MechComponentRef[] ToArray()
L_0276: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_027b: Label7
L_027b: ldloc.0
L_027c: callvirt Void RefreshBattleValue()
L_0281: ldarg.1
L_0282: ldc.i4.1
L_0283: callvirt Void SetMechLabComplete(Boolean)
L_0288: Label20
L_0288: Label21
L_0288: Label22
L_0288: ldarg 1
L_028e: ldarg.0
L_028f: call Void Postfix(BattleTech.WorkOrderEntry_InstallComponent, BattleTech.SimGameState)
L_0294: ret
DONE

### Patch BattleTech.UI.MechLabItemSlotElement, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0007: ldarg.0
L_0008: ldfld UnityEngine.GameObject fixedEquipmentOverlay
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.IMechLabDropTarget dropParent
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.UIColorRefTracker nameTextColor
L_0019: ldarg.0
L_001a: ldfld BattleTech.UI.UIColorRefTracker iconColor
L_001f: ldarg.0
L_0020: ldfld SVGImporter.SVGImage icon
L_0025: call Boolean ChangeColor(BattleTech.UI.MechLabItemSlotElement, BattleTech.UI.UIColorRefTracker, UnityEngine.GameObject, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.UIColorRefTracker, BattleTech.UI.UIColorRefTracker, SVGImporter.SVGImage)
L_002a: brfalse Label0
L_002f: ldarg.0
L_0030: ldfld BattleTech.MechComponentRef componentRef
L_0035: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0041: ldloc.0
L_0042: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0047: ldarg.0
L_0048: ldfld UnityEngine.GameObject fixedEquipmentOverlay
L_004d: ldarg.0
L_004e: call BattleTech.MechComponentRef get_ComponentRef()
L_0053: callvirt Boolean get_IsFixed()
L_0058: callvirt Void SetActive(Boolean)
L_005d: Label0
L_005d: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.1
L_0001: isinst BattleTech.UI.MechLabItemSlotElement
L_0006: stloc.0
L_0007: nop
L_0008: nop
L_0009: nop
L_000a: nop
L_000b: nop
L_000c: nop
L_000d: Label1
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld System.Int32 usedSlots
L_0014: ldarg.1
L_0015: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001a: callvirt BattleTech.MechComponentDef get_Def()
L_001f: callvirt Int32 get_InventorySize()
L_0024: sub
L_0025: stfld System.Int32 usedSlots
L_002a: ldarg.0
L_002b: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0030: ldloc.0
L_0031: callvirt Boolean Remove(BattleTech.UI.MechLabItemSlotElement)
L_0036: pop
L_0037: ldarg.0
L_0038: ldfld BattleTech.UI.MechLabPanel mechLab
L_003d: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0042: ldarg.1
L_0043: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0048: callvirt Boolean Remove(BattleTech.MechComponentRef)
L_004d: pop
L_004e: ldloc.0
L_004f: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0054: ldc.i4.0
L_0055: callvirt Void set_blocksRaycasts(Boolean)
L_005a: ldarg.0
L_005b: call Void RefreshHardpointData()
L_0060: ldarg.0
L_0061: ldloc.0
L_0062: ldc.i4.1
L_0063: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.MechLabPanel mechLab
L_006e: callvirt Void FlagAsModified()
L_0073: ldc.i4.1
L_0074: ret
DONE

### Patch BattleTech.BaseComponentRef, Void RefreshComponentDef()
L_0000: Local var 0: BattleTech.ComponentType
L_0000: ldarg.0
L_0001: call BattleTech.Data.DataManager get_DataManager()
L_0006: brtrue Label1
L_000b: br Label14
L_0010: Label1
L_0010: ldarg.0
L_0011: call BattleTech.ComponentType get_ComponentDefType()
L_0016: stloc.0
L_0017: ldloc.0
L_0018: ldc.i4.1
L_0019: sub
L_001a: switch Labels2,3,4,5,6,7
L_0037: br Label8
L_003c: Label3
L_003c: ldarg.0
L_003d: call BattleTech.Data.DataManager get_DataManager()
L_0042: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.AmmunitionBoxDef] get_AmmoBoxDefs()
L_0047: ldarg.0
L_0048: call System.String get_ComponentDefID()
L_004d: callvirt Boolean Exists(System.String)
L_0052: brfalse Label9
L_0057: ldarg.0
L_0058: ldarg.0
L_0059: call BattleTech.Data.DataManager get_DataManager()
L_005e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.AmmunitionBoxDef] get_AmmoBoxDefs()
L_0063: ldarg.0
L_0064: call System.String get_ComponentDefID()
L_0069: callvirt BattleTech.AmmunitionBoxDef Get(System.String)
L_006e: call Void set_Def(BattleTech.MechComponentDef)
L_0073: br Label15
L_0078: Label4
L_0078: ldarg.0
L_0079: call BattleTech.Data.DataManager get_DataManager()
L_007e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HeatSinkDef] get_HeatSinkDefs()
L_0083: ldarg.0
L_0084: call System.String get_ComponentDefID()
L_0089: callvirt Boolean Exists(System.String)
L_008e: brfalse Label10
L_0093: ldarg.0
L_0094: ldarg.0
L_0095: call BattleTech.Data.DataManager get_DataManager()
L_009a: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HeatSinkDef] get_HeatSinkDefs()
L_009f: ldarg.0
L_00a0: call System.String get_ComponentDefID()
L_00a5: callvirt BattleTech.HeatSinkDef Get(System.String)
L_00aa: call Void set_Def(BattleTech.MechComponentDef)
L_00af: br Label16
L_00b4: Label5
L_00b4: ldarg.0
L_00b5: call BattleTech.Data.DataManager get_DataManager()
L_00ba: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.JumpJetDef] get_JumpJetDefs()
L_00bf: ldarg.0
L_00c0: call System.String get_ComponentDefID()
L_00c5: callvirt Boolean Exists(System.String)
L_00ca: brfalse Label11
L_00cf: ldarg.0
L_00d0: ldarg.0
L_00d1: call BattleTech.Data.DataManager get_DataManager()
L_00d6: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.JumpJetDef] get_JumpJetDefs()
L_00db: ldarg.0
L_00dc: call System.String get_ComponentDefID()
L_00e1: callvirt BattleTech.JumpJetDef Get(System.String)
L_00e6: call Void set_Def(BattleTech.MechComponentDef)
L_00eb: br Label17
L_00f0: Label6
L_00f0: ldarg.0
L_00f1: call BattleTech.Data.DataManager get_DataManager()
L_00f6: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_00fb: ldarg.0
L_00fc: call System.String get_ComponentDefID()
L_0101: callvirt Boolean Exists(System.String)
L_0106: brfalse Label12
L_010b: ldarg.0
L_010c: ldarg.0
L_010d: call BattleTech.Data.DataManager get_DataManager()
L_0112: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_0117: ldarg.0
L_0118: call System.String get_ComponentDefID()
L_011d: callvirt BattleTech.UpgradeDef Get(System.String)
L_0122: call Void set_Def(BattleTech.MechComponentDef)
L_0127: br Label18
L_012c: Label2
L_012c: ldarg.0
L_012d: call BattleTech.Data.DataManager get_DataManager()
L_0132: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.WeaponDef] get_WeaponDefs()
L_0137: ldarg.0
L_0138: call System.String get_ComponentDefID()
L_013d: callvirt Boolean Exists(System.String)
L_0142: brfalse Label13
L_0147: ldarg.0
L_0148: ldarg.0
L_0149: call BattleTech.Data.DataManager get_DataManager()
L_014e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.WeaponDef] get_WeaponDefs()
L_0153: ldarg.0
L_0154: call System.String get_ComponentDefID()
L_0159: callvirt BattleTech.WeaponDef Get(System.String)
L_015e: call Void set_Def(BattleTech.MechComponentDef)
L_0163: br Label19
L_0168: Label8
L_0168: ldstr "MechDef RefreshComponentDef had invalid component type: "
L_016d: ldarg.0
L_016e: call BattleTech.ComponentType get_ComponentDefType()
L_0173: box BattleTech.ComponentType
L_0178: call System.String Concat(System.Object, System.Object)
L_017d: call Void LogError(System.Object)
L_0182: Label7
L_0182: Label9
L_0182: Label10
L_0182: Label11
L_0182: Label12
L_0182: Label13
L_0182: Label14
L_0182: Label15
L_0182: Label16
L_0182: Label17
L_0182: Label18
L_0182: Label19
L_0182: ldarg.0
L_0183: call Void SetFixed(BattleTech.BaseComponentRef)
L_0188: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0000: Local var 0: BattleTech.UI.IMechLabDraggableItem
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponDef
L_0000: Local var 4: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.WeaponDef
L_0000: Local var 7: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.MechLabPanel mechLab
L_0007: ldarg 1
L_000d: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.MechLabPanel, UnityEngine.EventSystems.PointerEventData)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldfld BattleTech.UI.MechLabPanel mechLab
L_001d: callvirt Boolean get_Initialized()
L_0022: brtrue Label1
L_0027: br Label15
L_002c: Label1
L_002c: ldarg.0
L_002d: ldfld BattleTech.UI.MechLabPanel mechLab
L_0032: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_0037: brtrue Label2
L_003c: br Label16
L_0041: Label2
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.MechLabPanel mechLab
L_0047: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_004c: stloc.0
L_004d: ldarg.0
L_004e: ldloc.0
L_004f: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0054: call Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0059: stloc.1
L_005a: ldloc.1
L_005b: brtrue Label3
L_0060: ldloc.0
L_0061: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0066: callvirt BattleTech.ComponentType get_ComponentDefType()
L_006b: ldc.i4.1
L_006c: bne.un Label4
L_0071: ldarg.0
L_0072: ldfld BattleTech.LocationLoadoutDef loadout
L_0077: ldfld System.Single CurrentInternalStructure
L_007c: ldc.r4 0
L_0081: ble.un Label5
L_0086: ldloc.0
L_0087: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_008c: callvirt BattleTech.MechComponentDef get_Def()
L_0091: isinst BattleTech.WeaponDef
L_0096: stloc.3
L_0097: ldnull
L_0098: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_009a: ldarg.0
L_009b: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00a0: callvirt Int32 get_Count()
L_00a5: ldc.i4.1
L_00a6: sub
L_00a7: stloc.s 5 (System.Int32)
L_00a9: br Label6
L_00ae: Label10
L_00ae: ldarg.0
L_00af: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00b4: ldloc.s 5 (System.Int32)
L_00b6: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00bb: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00c0: callvirt BattleTech.MechComponentDef get_Def()
L_00c5: isinst BattleTech.WeaponDef
L_00ca: stloc.s 6 (BattleTech.WeaponDef)
L_00cc: ldloc.s 6 (BattleTech.WeaponDef)
L_00ce: brfalse Label7
L_00d3: ldloc.s 6 (BattleTech.WeaponDef)
L_00d5: callvirt BattleTech.WeaponCategory get_Category()
L_00da: ldloc.3
L_00db: callvirt BattleTech.WeaponCategory get_Category()
L_00e0: bne.un Label8
L_00e5: ldarg.0
L_00e6: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00eb: ldloc.s 5 (System.Int32)
L_00ed: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00f2: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_00f4: br Label9
L_00f9: Label7
L_00f9: Label8
L_00f9: ldloc.s 5 (System.Int32)
L_00fb: ldc.i4.1
L_00fc: sub
L_00fd: stloc.s 5 (System.Int32)
L_00ff: Label6
L_00ff: ldloc.s 5 (System.Int32)
L_0101: ldc.i4.0
L_0102: bge Label10
L_0107: Label9
L_0107: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0109: ldnull
L_010a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_010f: brfalse Label11
L_0114: ldarg.0
L_0115: ldfld System.Int32 usedSlots
L_011a: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_011c: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0121: callvirt BattleTech.MechComponentDef get_Def()
L_0126: callvirt Int32 get_InventorySize()
L_012b: sub
L_012c: ldloc.3
L_012d: callvirt Int32 get_InventorySize()
L_0132: add
L_0133: ldarg.0
L_0134: ldfld System.Int32 maxSlots
L_0139: bgt Label12
L_013e: ldarg.0
L_013f: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0141: ldc.i4.1
L_0142: call Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0147: pop
L_0148: ldarg.0
L_0149: ldfld BattleTech.UI.MechLabPanel mechLab
L_014e: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0150: callvirt Void ForceItemDrop(BattleTech.UI.MechLabItemSlotElement)
L_0155: ldc.i4.1
L_0156: stloc.1
L_0157: Label3
L_0157: Label4
L_0157: Label5
L_0157: Label11
L_0157: Label12
L_0157: ldloc.1
L_0158: brtrue Label13
L_015d: ldarg.0
L_015e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0163: ldarg.0
L_0164: ldfld Localize.Text _dropErrorMessage
L_0169: callvirt Void ShowDropErrorMessage(Localize.Text)
L_016e: ldarg.0
L_016f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0174: ldarg.1
L_0175: callvirt Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_017a: br Label17
L_017f: Label13
L_017f: ldarg.0
L_0180: ldloc.0
L_0181: ldc.i4.1
L_0182: call Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0187: stloc.2
L_0188: ldarg.0
L_0189: call BattleTech.SimGameState get_Sim()
L_018e: brfalse Label14
L_0193: ldarg.0
L_0194: call BattleTech.SimGameState get_Sim()
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabPanel mechLab
L_019f: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01a4: callvirt System.String get_MechID()
L_01a9: ldloc.0
L_01aa: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01af: ldarg.0
L_01b0: ldfld BattleTech.LocationLoadoutDef loadout
L_01b5: ldfld BattleTech.ChassisLocations Location
L_01ba: ldloc.0
L_01bb: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01c0: callvirt BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_01c5: stloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01c7: ldarg.0
L_01c8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01cd: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01d2: ldloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01d4: callvirt Void AddSubEntry(BattleTech.WorkOrderEntry)
L_01d9: Label14
L_01d9: ldloc.0
L_01da: ldarg.0
L_01db: ldfld BattleTech.LocationLoadoutDef loadout
L_01e0: ldfld BattleTech.ChassisLocations Location
L_01e5: callvirt Void set_MountedLocation(BattleTech.ChassisLocations)
L_01ea: ldarg.0
L_01eb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f0: ldloc.2
L_01f1: callvirt Void ClearDragItem(Boolean)
L_01f6: ldarg.0
L_01f7: call Void RefreshHardpointData()
L_01fc: ldarg.0
L_01fd: ldfld BattleTech.UI.MechLabPanel mechLab
L_0202: ldc.i4.0
L_0203: callvirt Boolean ValidateLoadout(Boolean)
L_0208: pop
L_0209: Label15
L_0209: Label16
L_0209: Label17
L_0209: Label0
L_0209: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnItemGrab(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: Local var 1: BattleTech.MechComponentRef
L_0006: ldnull
L_0007: stloc 1 (BattleTech.MechComponentRef)
L_0008: ldarg 1
L_000e: ldloca 0 (System.Boolean)
L_0010: ldarg.0
L_0011: ldfld BattleTech.UI.MechLabPanel mechLab
L_0016: ldloca 1 (BattleTech.MechComponentRef)
L_0018: call Boolean Prefix(BattleTech.UI.IMechLabDraggableItem, Boolean ByRef, BattleTech.UI.MechLabPanel, BattleTech.MechComponentRef ByRef)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldfld BattleTech.UI.MechLabPanel mechLab
L_0028: ldarg.1
L_0029: ldarg.2
L_002a: callvirt Boolean OnItemGrab(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_002f: stloc 0 (System.Boolean)
L_0030: Label0
L_0030: ldarg 1
L_0036: ldloca 0 (System.Boolean)
L_0038: ldloc 1 (BattleTech.MechComponentRef)
L_0039: ldarg.0
L_003a: ldfld BattleTech.UI.MechLabPanel mechLab
L_003f: ldarg.0
L_0040: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, Boolean ByRef, BattleTech.MechComponentRef, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabLocationWidget)
L_0045: ldloc 0 (System.Boolean)
L_0046: ret
DONE

### Patch BattleTech.MechValidationRules, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0000: Local var 0: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: ldnull
L_0001: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0002: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] InitializeValidationResults()
L_0007: stloc.0
L_0008: ldarg.0
L_0009: switch Labels1,2,3,4
L_001e: br Label5
L_0023: Label1
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0027: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_002c: ldarg.2
L_002d: ldarg.0
L_002e: ldarg.3
L_002f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0031: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0036: ldarg.1
L_0037: ldarg.2
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_003c: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0041: ldarg.1
L_0042: ldarg.2
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0047: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_004c: ldarg.1
L_004d: ldarg.2
L_004e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0050: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0055: br Label6
L_005a: Label2
L_005a: ldarg.1
L_005b: ldarg.2
L_005c: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_005e: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0063: ldarg.1
L_0064: ldarg.2
L_0065: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0067: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_006c: ldarg.2
L_006d: ldarg.0
L_006e: ldarg.3
L_006f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0071: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0076: ldarg.1
L_0077: ldarg.2
L_0078: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_007a: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_007f: ldarg.2
L_0080: ldarg.0
L_0081: ldarg.3
L_0082: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0084: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0089: ldarg.1
L_008a: ldarg.2
L_008b: ldarg.0
L_008c: ldarg.3
L_008d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_008f: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0094: ldarg.1
L_0095: ldarg.2
L_0096: ldarg.0
L_0097: ldarg.3
L_0098: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_009a: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_009f: ldarg.1
L_00a0: ldarg.2
L_00a1: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00a3: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00a8: br Label7
L_00ad: Label3
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00b1: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00b6: ldarg.1
L_00b7: ldarg.2
L_00b8: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ba: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00bf: ldarg.2
L_00c0: ldarg.0
L_00c1: ldarg.3
L_00c2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00c4: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00c9: ldarg.1
L_00ca: ldarg.2
L_00cb: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00cd: call Void ValidateMechIsStockMechDef(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00d2: ldarg.1
L_00d3: ldarg.2
L_00d4: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00d6: call Void ValidateMechHasStockComponents(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00db: ldarg.1
L_00dc: ldarg.2
L_00dd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00df: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00e4: ldarg.2
L_00e5: ldarg.0
L_00e6: ldarg.3
L_00e7: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00e9: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00ee: ldarg.1
L_00ef: ldarg.2
L_00f0: ldarg.0
L_00f1: ldarg.3
L_00f2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00f4: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00f9: ldarg.1
L_00fa: ldarg.2
L_00fb: ldarg.0
L_00fc: ldarg.3
L_00fd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ff: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0104: ldarg.1
L_0105: ldarg.2
L_0106: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0108: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_010d: br Label8
L_0112: Label4
L_0112: ldarg.1
L_0113: ldarg.2
L_0114: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0116: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_011b: ldarg.2
L_011c: ldarg.0
L_011d: ldarg.3
L_011e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0120: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0125: ldarg.1
L_0126: ldarg.2
L_0127: ldarg.0
L_0128: ldarg.3
L_0129: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_012b: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0130: ldarg.1
L_0131: ldarg.2
L_0132: ldarg.0
L_0133: ldarg.3
L_0134: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0136: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_013b: ldarg.1
L_013c: ldarg.2
L_013d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_013f: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0144: Label5
L_0144: Label6
L_0144: Label7
L_0144: Label8
L_0144: ldloc.0
L_0145: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0146: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0147: ldarg 0
L_014d: ldarg 2
L_0153: call Void Postfix(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], BattleTech.MechValidationLevel, BattleTech.MechDef)
L_0158: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0159: ret
DONE

### Patch BattleTech.MechValidationRules, Boolean ValidateMechCanBeFielded(BattleTech.SimGameState, BattleTech.MechDef)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Boolean)
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldc.i4.0
L_000d: br Label2
L_0012: Label1
L_0012: ldarg.0
L_0013: ldarg.1
L_0014: call Boolean ValidateSimGameMechNotInMaintenance(BattleTech.SimGameState, BattleTech.MechDef)
L_0019: ldarg.1
L_001a: call Boolean ValidateMechStructureSimple(BattleTech.MechDef)
L_001f: stloc.0
L_0020: ldarg.1
L_0021: call Boolean ValidateMechPosessesWeaponsSimple(BattleTech.MechDef)
L_0026: stloc.1
L_0027: ldloc.0
L_0028: and
L_0029: ldloc.1
L_002a: and
L_002b: Label2
L_002b: stloc 2 (System.Boolean)
L_002c: ldarg 1
L_0032: ldloca 2 (System.Boolean)
L_0034: call Void Postfix(BattleTech.MechDef, Boolean ByRef)
L_0039: ldloc 2 (System.Boolean)
L_003a: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget, Void ApplyFiltering(Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.InventoryItemElement_NotListView
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmoCategoryValue
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: br Label1
L_0007: Label49
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_000d: ldloc.0
L_000e: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0013: stloc.1
L_0014: ldloc.1
L_0015: ldfld BattleTech.UI.ListElementController_BASE_NotListView controller
L_001a: brfalse Label2
L_001f: ldarg.0
L_0020: ldloc.1
L_0021: call Void ApplyControllerFiltering(BattleTech.UI.InventoryItemElement_NotListView)
L_0026: br Label3
L_002b: Label2
L_002b: ldc.i4.0
L_002c: stloc.2
L_002d: ldloc.1
L_002e: ldfld BattleTech.WeaponDef weaponDef
L_0033: brfalse Label4
L_0038: ldloc.1
L_0039: ldfld BattleTech.WeaponDef weaponDef
L_003e: callvirt BattleTech.WeaponCategory get_Category()
L_0043: stloc.3
L_0044: ldarg.0
L_0045: ldfld System.Boolean filteringWeapons
L_004a: brfalse Label5
L_004f: ldarg.0
L_0050: ldfld System.Boolean filterEnabledWeaponBallistic
L_0055: brfalse Label6
L_005a: ldloc.3
L_005b: ldc.i4.1
L_005c: bne.un Label7
L_0061: ldc.i4.1
L_0062: stloc.2
L_0063: br Label8
L_0068: Label5
L_0068: Label6
L_0068: Label7
L_0068: ldarg.0
L_0069: ldfld System.Boolean filteringWeapons
L_006e: brfalse Label9
L_0073: ldarg.0
L_0074: ldfld System.Boolean filterEnabledWeaponEnergy
L_0079: brfalse Label10
L_007e: ldloc.3
L_007f: ldc.i4.2
L_0080: bne.un Label11
L_0085: ldc.i4.1
L_0086: stloc.2
L_0087: br Label12
L_008c: Label9
L_008c: Label10
L_008c: Label11
L_008c: ldarg.0
L_008d: ldfld System.Boolean filteringWeapons
L_0092: brfalse Label13
L_0097: ldarg.0
L_0098: ldfld System.Boolean filterEnabledWeaponMissile
L_009d: brfalse Label14
L_00a2: ldloc.3
L_00a3: ldc.i4.3
L_00a4: bne.un Label15
L_00a9: ldc.i4.1
L_00aa: stloc.2
L_00ab: br Label16
L_00b0: Label13
L_00b0: Label14
L_00b0: Label15
L_00b0: ldarg.0
L_00b1: ldfld System.Boolean filteringWeapons
L_00b6: brfalse Label17
L_00bb: ldarg.0
L_00bc: ldfld System.Boolean filterEnabledWeaponSmall
L_00c1: brfalse Label18
L_00c6: ldloc.3
L_00c7: ldc.i4.4
L_00c8: bne.un Label19
L_00cd: ldc.i4.1
L_00ce: stloc.2
L_00cf: br Label20
L_00d4: Label4
L_00d4: ldloc.1
L_00d5: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00da: brfalse Label21
L_00df: ldloc.1
L_00e0: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00e5: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00ea: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00ef: stloc.s 4 (BattleTech.AmmoCategoryValue)
L_00f1: ldarg.0
L_00f2: ldfld System.Boolean filteringWeapons
L_00f7: brfalse Label22
L_00fc: ldarg.0
L_00fd: ldfld System.Boolean filterEnabledWeaponBallistic
L_0102: brfalse Label23
L_0107: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0109: callvirt Boolean get_IsBallistic()
L_010e: brfalse Label24
L_0113: ldc.i4.1
L_0114: stloc.2
L_0115: br Label25
L_011a: Label22
L_011a: Label23
L_011a: Label24
L_011a: ldarg.0
L_011b: ldfld System.Boolean filteringWeapons
L_0120: brfalse Label26
L_0125: ldarg.0
L_0126: ldfld System.Boolean filterEnabledWeaponEnergy
L_012b: brfalse Label27
L_0130: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0132: callvirt Boolean get_IsEnergy()
L_0137: brfalse Label28
L_013c: ldc.i4.1
L_013d: stloc.2
L_013e: br Label29
L_0143: Label26
L_0143: Label27
L_0143: Label28
L_0143: ldarg.0
L_0144: ldfld System.Boolean filteringWeapons
L_0149: brfalse Label30
L_014e: ldarg.0
L_014f: ldfld System.Boolean filterEnabledWeaponMissile
L_0154: brfalse Label31
L_0159: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_015b: callvirt Boolean get_IsMissile()
L_0160: brfalse Label32
L_0165: ldc.i4.1
L_0166: stloc.2
L_0167: br Label33
L_016c: Label30
L_016c: Label31
L_016c: Label32
L_016c: ldarg.0
L_016d: ldfld System.Boolean filteringWeapons
L_0172: brfalse Label34
L_0177: ldarg.0
L_0178: ldfld System.Boolean filterEnabledWeaponSmall
L_017d: brfalse Label35
L_0182: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0184: callvirt Boolean get_IsSupport()
L_0189: brfalse Label36
L_018e: ldc.i4.1
L_018f: stloc.2
L_0190: Label25
L_0190: Label29
L_0190: Label33
L_0190: Label34
L_0190: Label35
L_0190: Label36
L_0190: ldarg.0
L_0191: ldfld System.Boolean filteringWeapons
L_0196: brtrue Label37
L_019b: ldc.i4.0
L_019c: stloc.2
L_019d: br Label38
L_01a2: Label21
L_01a2: ldloc.1
L_01a3: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01a8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01ad: ldc.i4.4
L_01ae: bne.un Label39
L_01b3: ldarg.0
L_01b4: ldfld System.Boolean filteringEquipment
L_01b9: brfalse Label40
L_01be: ldarg.0
L_01bf: ldfld System.Boolean filterEnabledJumpjet
L_01c4: brfalse Label41
L_01c9: ldc.i4.1
L_01ca: stloc.2
L_01cb: Label39
L_01cb: Label40
L_01cb: Label41
L_01cb: ldloc.1
L_01cc: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01d1: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01d6: ldc.i4.3
L_01d7: bne.un Label42
L_01dc: ldarg.0
L_01dd: ldfld System.Boolean filteringEquipment
L_01e2: brfalse Label43
L_01e7: ldarg.0
L_01e8: ldfld System.Boolean filterEnabledHeatsink
L_01ed: brfalse Label44
L_01f2: ldc.i4.1
L_01f3: stloc.2
L_01f4: Label42
L_01f4: Label43
L_01f4: Label44
L_01f4: ldloc.1
L_01f5: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01fa: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01ff: ldc.i4.5
L_0200: bne.un Label45
L_0205: ldarg.0
L_0206: ldfld System.Boolean filteringEquipment
L_020b: brfalse Label46
L_0210: ldarg.0
L_0211: ldfld System.Boolean filterEnabledUpgrade
L_0216: brfalse Label47
L_021b: ldc.i4.1
L_021c: stloc.2
L_021d: Label45
L_021d: Label46
L_021d: Label47
L_021d: ldarg.0
L_021e: ldfld System.Boolean filteringWeapons
L_0223: brfalse Label48
L_0228: ldc.i4.0
L_0229: stloc.2
L_022a: Label8
L_022a: Label12
L_022a: Label16
L_022a: Label17
L_022a: Label18
L_022a: Label19
L_022a: Label20
L_022a: Label37
L_022a: Label38
L_022a: Label48
L_022a: ldloc.1
L_022b: callvirt UnityEngine.GameObject get_gameObject()
L_0230: ldloc.2
L_0231: callvirt Void SetActive(Boolean)
L_0236: Label3
L_0236: ldloc.0
L_0237: ldc.i4.1
L_0238: add
L_0239: stloc.0
L_023a: Label1
L_023a: ldloc.0
L_023b: ldarg.0
L_023c: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_0241: callvirt Int32 get_Count()
L_0246: blt Label49
L_024b: ldarg.0
L_024c: ldc.r4 -1
L_0251: call Void RefreshJumpJetOptions(Single)
L_0256: ldarg.0
L_0257: call UnityEngine.GameObject get_gameObject()
L_025c: callvirt Boolean get_activeInHierarchy()
L_0261: ldarg.1
L_0262: and
L_0263: brfalse Label50
L_0268: ldarg.0
L_0269: ldarg.0
L_026a: call System.Collections.IEnumerator EndOfFrameScrollBarMovement()
L_026f: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_0274: pop
L_0275: Label50
L_0275: ldarg.0
L_0276: ldarg.0
L_0277: ldfld System.Single mechTonnage
L_027c: ldarg.0
L_027d: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_0282: call Void Postfix(BattleTech.UI.MechLabInventoryWidget, Single, System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView])
L_0287: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.String
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String
L_0000: Local var 9: BattleTech.ComponentType
L_0000: Local var 10: BattleTech.WeaponType
L_0000: Local var 11: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldnull
L_0001: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0003: ldstr "MechLab - {0} - {1}"
L_0008: ldc.i4.2
L_0009: newarr System.Object
L_000e: dup
L_000f: ldc.i4.0
L_0010: ldarg.3
L_0011: brtrue Label1
L_0016: ldstr "RemoveComponent"
L_001b: br Label2
L_0020: Label1
L_0020: ldstr "InstallComponent"
L_0025: Label2
L_0025: stelem.ref
L_0026: dup
L_0027: ldc.i4.1
L_0028: ldarg.0
L_0029: call System.String GenerateSimGameUID()
L_002e: stelem.ref
L_002f: call System.String T(System.String, System.Object[])
L_0034: stloc.0
L_0035: ldarg.2
L_0036: callvirt System.String get_SimGameUID()
L_003b: stloc.1
L_003c: ldloc.1
L_003d: call Boolean IsNullOrEmpty(System.String)
L_0042: brfalse Label3
L_0047: ldarg.0
L_0048: call System.String GenerateSimGameUID()
L_004d: stloc.1
L_004e: Label3
L_004e: ldarg.2
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt BattleTech.ComponentType get_ComponentType()
L_0059: stloc.s 9 (BattleTech.ComponentType)
L_005b: ldloc.s 9 (BattleTech.ComponentType)
L_005d: ldc.i4.1
L_005e: sub
L_005f: switch Labels4,5,6,7
L_0074: br Label8
L_0079: Label5
L_0079: ldarg.0
L_007a: call BattleTech.SimGameConstants get_Constants()
L_007f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0084: ldfld System.Int32 AmmoInstallTechPoints
L_0089: stloc.2
L_008a: ldarg.0
L_008b: call BattleTech.SimGameConstants get_Constants()
L_0090: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0095: ldfld System.Int32 AmmoInstallCost
L_009a: stloc.3
L_009b: br Label9
L_00a0: Label6
L_00a0: ldarg.0
L_00a1: call BattleTech.SimGameConstants get_Constants()
L_00a6: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00ab: ldfld System.Int32 HeatSinkInstallTechPoints
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: call BattleTech.SimGameConstants get_Constants()
L_00b7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00bc: ldfld System.Int32 HeatSinkInstallCost
L_00c1: stloc.3
L_00c2: br Label10
L_00c7: Label7
L_00c7: ldarg.0
L_00c8: call BattleTech.SimGameConstants get_Constants()
L_00cd: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00d2: ldfld System.Int32 JumpJetInstallTechPoints
L_00d7: stloc.2
L_00d8: ldarg.0
L_00d9: call BattleTech.SimGameConstants get_Constants()
L_00de: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00e3: ldfld System.Int32 JumpJetInstallCost
L_00e8: stloc.3
L_00e9: br Label11
L_00ee: Label4
L_00ee: ldarg.2
L_00ef: callvirt BattleTech.MechComponentDef get_Def()
L_00f4: castclass BattleTech.WeaponDef
L_00f9: callvirt BattleTech.WeaponType get_Type()
L_00fe: stloc.s 10 (BattleTech.WeaponType)
L_0100: ldloc.s 10 (BattleTech.WeaponType)
L_0102: ldc.i4.1
L_0103: sub
L_0104: switch Labels12,13,14,15,16,17,18,19
L_0129: br Label20
L_012e: Label12
L_012e: Label13
L_012e: Label19
L_012e: ldarg.0
L_012f: call BattleTech.SimGameConstants get_Constants()
L_0134: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0139: ldfld System.Int32 BallisticInstallTechPoints
L_013e: stloc.2
L_013f: ldarg.0
L_0140: call BattleTech.SimGameConstants get_Constants()
L_0145: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_014a: ldfld System.Int32 BallisticInstallCost
L_014f: stloc.3
L_0150: br Label21
L_0155: Label16
L_0155: Label17
L_0155: ldarg.0
L_0156: call BattleTech.SimGameConstants get_Constants()
L_015b: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0160: ldfld System.Int32 MissileInstallTechPoints
L_0165: stloc.2
L_0166: ldarg.0
L_0167: call BattleTech.SimGameConstants get_Constants()
L_016c: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0171: ldfld System.Int32 MissileInstallCost
L_0176: stloc.3
L_0177: br Label22
L_017c: Label14
L_017c: Label15
L_017c: ldarg.0
L_017d: call BattleTech.SimGameConstants get_Constants()
L_0182: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0187: ldfld System.Int32 EnergyInstallTechPoints
L_018c: stloc.2
L_018d: ldarg.0
L_018e: call BattleTech.SimGameConstants get_Constants()
L_0193: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0198: ldfld System.Int32 EnergyInstallCost
L_019d: stloc.3
L_019e: br Label23
L_01a3: Label18
L_01a3: ldarg.0
L_01a4: call BattleTech.SimGameConstants get_Constants()
L_01a9: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01ae: ldfld System.Int32 APInstallTechPoints
L_01b3: stloc.2
L_01b4: ldarg.0
L_01b5: call BattleTech.SimGameConstants get_Constants()
L_01ba: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01bf: ldfld System.Int32 APInstallCost
L_01c4: stloc.3
L_01c5: br Label24
L_01ca: Label20
L_01ca: ldarg.0
L_01cb: call BattleTech.SimGameConstants get_Constants()
L_01d0: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01d5: ldfld System.Int32 OtherInstallTechPoints
L_01da: stloc.2
L_01db: ldarg.0
L_01dc: call BattleTech.SimGameConstants get_Constants()
L_01e1: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01e6: ldfld System.Int32 OtherInstallCost
L_01eb: stloc.3
L_01ec: br Label25
L_01f1: Label8
L_01f1: ldarg.0
L_01f2: call BattleTech.SimGameConstants get_Constants()
L_01f7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01fc: ldfld System.Int32 OtherInstallTechPoints
L_0201: stloc.2
L_0202: ldarg.0
L_0203: call BattleTech.SimGameConstants get_Constants()
L_0208: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_020d: ldfld System.Int32 OtherInstallCost
L_0212: stloc.3
L_0213: Label9
L_0213: Label10
L_0213: Label11
L_0213: Label21
L_0213: Label22
L_0213: Label23
L_0213: Label24
L_0213: Label25
L_0213: ldarg.3
L_0214: brtrue Label26
L_0219: ldarg.0
L_021a: call BattleTech.SimGameConstants get_Constants()
L_021f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0224: ldfld System.Int32 UninstallTechPoints
L_0229: stloc.2
L_022a: Label26
L_022a: ldloc.2
L_022b: ldarg.2
L_022c: callvirt BattleTech.MechComponentDef get_Def()
L_0231: callvirt Int32 get_InventorySize()
L_0236: mul
L_0237: stloc.s 4 (System.Int32)
L_0239: ldloc.3
L_023a: ldarg.2
L_023b: callvirt BattleTech.MechComponentDef get_Def()
L_0240: callvirt Int32 get_InventorySize()
L_0245: mul
L_0246: stloc.s 5 (System.Int32)
L_0248: ldstr ""
L_024d: stloc.s 6 (System.String)
L_024f: ldarg.2
L_0250: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0255: ldc.i4.4
L_0256: bne.un Label27
L_025b: ldstr " Destroyed"
L_0260: stloc.s 6 (System.String)
L_0262: ldc.i4.0
L_0263: stloc.s 5 (System.Int32)
L_0265: Label27
L_0265: ldarg.3
L_0266: brtrue Label28
L_026b: ldstr "Remove"
L_0270: call System.String T(System.String)
L_0275: br Label29
L_027a: Label28
L_027a: ldstr "Install"
L_027f: call System.String T(System.String)
L_0284: Label29
L_0284: stloc.s 7 (System.String)
L_0286: ldarg.3
L_0287: brtrue Label30
L_028c: ldstr ""
L_0291: br Label31
L_0296: Label30
L_0296: ldarga.s 3
L_0298: constrained. BattleTech.ChassisLocations
L_029e: callvirt System.String ToString()
L_02a3: Label31
L_02a3: stloc.s 8 (System.String)
L_02a5: ldloc.0
L_02a6: ldstr "{0}{1} {2} Component - {3}"
L_02ab: ldc.i4.4
L_02ac: newarr System.Object
L_02b1: dup
L_02b2: ldc.i4.0
L_02b3: ldloc.s 7 (System.String)
L_02b5: stelem.ref
L_02b6: dup
L_02b7: ldc.i4.1
L_02b8: ldloc.s 6 (System.String)
L_02ba: stelem.ref
L_02bb: dup
L_02bc: ldc.i4.2
L_02bd: ldloc.s 8 (System.String)
L_02bf: stelem.ref
L_02c0: dup
L_02c1: ldc.i4.3
L_02c2: ldarg.2
L_02c3: callvirt BattleTech.MechComponentDef get_Def()
L_02c8: callvirt BattleTech.DescriptionDef get_Description()
L_02cd: callvirt System.String get_Name()
L_02d2: stelem.ref
L_02d3: call System.String T(System.String, System.Object[])
L_02d8: ldarg.1
L_02d9: ldarg.2
L_02da: ldloc.s 4 (System.Int32)
L_02dc: ldloc.1
L_02dd: ldarg.3
L_02de: ldarg.s 4
L_02e0: ldarg.2
L_02e1: callvirt Int32 get_HardpointSlot()
L_02e6: ldloc.s 5 (System.Int32)
L_02e8: ldstr ""
L_02ed: newobj Void .ctor(String, String, String, MechComponentRef, Int32, String, ChassisLocations, ChassisLocations, Int32, Int32, String)
L_02f2: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_02f4: ldarg.0
L_02f5: ldarg 1
L_02fb: ldarg 2
L_0301: ldarg 3
L_0307: ldarg 4
L_030d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_030f: call Void Postfix(BattleTech.SimGameState, System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, BattleTech.WorkOrderEntry_InstallComponent)
L_0314: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0316: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_RepairComponent CreateComponentRepairWorkOrder(BattleTech.MechComponentRef, Boolean)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.WorkOrderEntry_RepairComponent
L_0000: ldnull
L_0001: stloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_0002: ldstr "MechBay - RepairComponent - {0}"
L_0007: ldc.i4.1
L_0008: newarr System.Object
L_000d: dup
L_000e: ldc.i4.0
L_000f: ldarg.0
L_0010: call System.String GenerateSimGameUID()
L_0015: stelem.ref
L_0016: call System.String T(System.String, System.Object[])
L_001b: ldarg.1
L_001c: callvirt System.String get_SimGameUID()
L_0021: stloc.0
L_0022: ldloc.0
L_0023: call Boolean IsNullOrEmpty(System.String)
L_0028: brfalse Label1
L_002d: ldarg.0
L_002e: call System.String GenerateSimGameUID()
L_0033: stloc.0
L_0034: Label1
L_0034: ldarg.0
L_0035: call BattleTech.SimGameConstants get_Constants()
L_003a: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_003f: ldfld System.Int32 ComponentRepairTechPoints
L_0044: ldarg.1
L_0045: callvirt BattleTech.MechComponentDef get_Def()
L_004a: callvirt Int32 get_InventorySize()
L_004f: mul
L_0050: stloc.1
L_0051: ldarg.0
L_0052: call BattleTech.SimGameConstants get_Constants()
L_0057: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_005c: ldfld System.Int32 ComponentRepairCost
L_0061: ldarg.1
L_0062: callvirt BattleTech.MechComponentDef get_Def()
L_0067: callvirt Int32 get_InventorySize()
L_006c: mul
L_006d: stloc.2
L_006e: ldarg.1
L_006f: callvirt Boolean get_IsFixed()
L_0074: brfalse Label2
L_0079: ldc.i4.0
L_007a: stloc.1
L_007b: ldc.i4.0
L_007c: stloc.2
L_007d: Label2
L_007d: ldstr "Repair Component - {0}"
L_0082: ldc.i4.1
L_0083: newarr System.Object
L_0088: dup
L_0089: ldc.i4.0
L_008a: ldarg.1
L_008b: callvirt BattleTech.MechComponentDef get_Def()
L_0090: callvirt BattleTech.DescriptionDef get_Description()
L_0095: callvirt System.String get_Name()
L_009a: stelem.ref
L_009b: call System.String T(System.String, System.Object[])
L_00a0: ldloc.1
L_00a1: ldarg.1
L_00a2: callvirt System.String get_ComponentDefID()
L_00a7: ldarg.1
L_00a8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00ad: ldloc.0
L_00ae: ldarg.1
L_00af: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00b4: ldloc.2
L_00b5: ldstr ""
L_00ba: newobj Void .ctor(String, String, Int32, String, ComponentType, String, ComponentDamageLevel, Int32, String)
L_00bf: stloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00c0: ldarg.0
L_00c1: ldarg 1
L_00c7: ldarg 2
L_00cd: ldloca 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00cf: call Void Postfix(BattleTech.SimGameState, BattleTech.MechComponentRef, Boolean, BattleTech.WorkOrderEntry_RepairComponent ByRef)
L_00d4: ldloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00d5: ret
DONE

### Patch BattleTech.SimGameState, Void Rehydrate(BattleTech.Save.GameInstanceSave)
L_0000: Local var 0: BattleTech.SimGameState+<>c__DisplayClass1122_0
L_0000: Local var 1: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.Flashpoint
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.String
L_0000: Local var 7: BattleTech.SimGameState+<>c__DisplayClass1122_1
L_0000: Local var 8: BattleTech.StarSystem
L_0000: Local var 9: System.Collections.Generic.List`1+Enumerator[[BattleTech.StarSystem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 10: BattleTech.StarSystem
L_0000: Local var 11: System.String
L_0000: Local var 12: BattleTech.ShipModuleUpgrade
L_0000: Local var 13: System.Collections.Generic.List`1+Enumerator[[BattleTech.Save.ContractData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: BattleTech.SimGameState+AddContractData
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Collections.Generic.List`1+Enumerator[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.String
L_0000: Local var 21: System.String[]
L_0000: Local var 22: System.Int32
L_0000: Local var 23: System.String
L_0000: Local var 24: BattleTech.Faction
L_0000: Local var 25: System.String
L_0000: Local var 26: System.String
L_0000: Local var 27: System.Collections.Generic.List`1+Enumerator[[BattleTech.Flashpoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 28: BattleTech.Flashpoint
L_0000: Local var 29: System.Int32
L_0000: Local var 30: System.Int32
L_0000: Local var 31: BattleTech.Faction
L_0000: Local var 32: System.Int32
L_0000: Local var 33: BattleTech.Faction
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: stfld BattleTech.SimGameState <>4__this
L_000d: ldloc.0
L_000e: ldarg.1
L_000f: callvirt BattleTech.Save.SimGameSave get_SimGameSave()
L_0014: stfld BattleTech.Save.SimGameSave save
L_0019: ldloc.0
L_001a: ldarg.1
L_001b: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0020: stfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0025: ldloc.0
L_0026: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_002b: callvirt Void ResetOperateOnAllForAll()
L_0030: ldarg.0
L_0031: ldloc.0
L_0032: ldfld BattleTech.Save.SimGameSave save
L_0037: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_003c: call Void set_SimGameMode(SimGameType)
L_0041: ldarg.0
L_0042: call SimGameType get_SimGameMode()
L_0047: brtrue Label1
L_004c: ldarg.0
L_004d: ldc.i4.1
L_004e: call Void set_SimGameMode(SimGameType)
L_0053: Label1
L_0053: ldarg.0
L_0054: ldloc.0
L_0055: ldfld BattleTech.Save.SimGameSave save
L_005a: callvirt BattleTech.Save.SaveTravelData GetSaveTravelData()
L_005f: stfld BattleTech.Save.SaveTravelData savedTravelData
L_0064: ldloc.0
L_0065: ldfld BattleTech.Save.SimGameSave save
L_006a: callvirt BattleTech.SimGameContext get_SimGameContext()
L_006f: ldarg.0
L_0070: ldloc.0
L_0071: ldfld BattleTech.Save.SimGameSave save
L_0076: ldloc.0
L_0077: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_007c: callvirt Void Rehydrate(BattleTech.SimGameState, BattleTech.Save.SimGameSave, BattleTech.Save.Test.SerializableReferenceContainer)
L_0081: ldarg.0
L_0082: ldarg.0
L_0083: call BattleTech.GameInstance get_BattleTechGame()
L_0088: callvirt BattleTech.GameContext get_GlobalGameContext()
L_008d: newobj Void .ctor(GameContext)
L_0092: stfld BattleTech.SimGameContext Context
L_0097: ldarg.0
L_0098: ldfld BattleTech.SimGameContext Context
L_009d: ldc.i4.s 13
L_009f: ldarg.0
L_00a0: callvirt Void SetObject(BattleTech.GameContextObjectTagEnum, System.Object)
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.SimGameContext Context
L_00ab: ldloc.0
L_00ac: ldfld BattleTech.Save.SimGameSave save
L_00b1: callvirt BattleTech.SimGameContext get_SimGameContext()
L_00b6: callvirt Void MemberwiseCopyFrom(BattleTech.GameContext)
L_00bb: ldarg.0
L_00bc: ldloc.0
L_00bd: ldfld BattleTech.Save.SimGameSave save
L_00c2: callvirt System.String get_CampaignStartDate()
L_00c7: call Void SetCampaignStartDate(System.String)
L_00cc: ldarg.0
L_00cd: ldloc.0
L_00ce: ldfld BattleTech.Save.SimGameSave save
L_00d3: callvirt Int32 get_Day()
L_00d8: call Void set_DaysPassed(Int32)
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.Save.SimGameSave save
L_00e4: callvirt Int32 get_DaysRemainingInQuarter()
L_00e9: call Void set_DayRemainingInQuarter(Int32)
L_00ee: ldarg.0
L_00ef: ldloc.0
L_00f0: ldfld BattleTech.Save.SimGameSave save
L_00f5: callvirt Int32 get_ProRatedRefund()
L_00fa: stfld System.Int32 ProRateRefund
L_00ff: ldarg.0
L_0100: ldloc.0
L_0101: ldfld BattleTech.Save.SimGameSave save
L_0106: callvirt System.Collections.Generic.List`1[System.String] get_ConsumedMilestones()
L_010b: stfld System.Collections.Generic.List`1[System.String] ConsumedMilestones
L_0110: ldarg.0
L_0111: ldloc.0
L_0112: ldfld BattleTech.Save.SimGameSave save
L_0117: callvirt BattleTech.HeraldryDef get_Heraldry()
L_011c: stfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_0121: ldarg.0
L_0122: ldfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_0127: ldarg.0
L_0128: call BattleTech.Data.DataManager get_DataManager()
L_012d: ldnull
L_012e: callvirt Void RequestResources(BattleTech.Data.DataManager, System.Action)
L_0133: ldarg.0
L_0134: call NetworkRandom get_NetworkRandom()
L_0139: ldloc.0
L_013a: ldfld BattleTech.Save.SimGameSave save
L_013f: callvirt Int32 get_Seed()
L_0144: ldloc.0
L_0145: ldfld BattleTech.Save.SimGameSave save
L_014a: callvirt Int32 get_RandomCalls()
L_014f: callvirt Void Synchronize(Int32, Int32)
L_0154: ldarg.0
L_0155: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_015a: brtrue Label2
L_015f: ldarg.0
L_0160: newobj Void .ctor()
L_0165: stfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_016a: br Label3
L_016f: Label2
L_016f: ldarg.0
L_0170: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_0175: callvirt Void Clear()
L_017a: Label3
L_017a: ldarg.0
L_017b: ldloc.0
L_017c: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0181: ldstr "StarSystems"
L_0186: callvirt System.Collections.Generic.List`1[BattleTech.StarSystem] GetItemList[StarSystem](System.String)
L_018b: stfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0190: ldarg.0
L_0191: ldloc.0
L_0192: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0197: ldstr "TargetSystem"
L_019c: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01a1: stfld BattleTech.StarSystem TargetSystem
L_01a6: ldarg.0
L_01a7: ldloc.0
L_01a8: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01ad: ldstr "NearestToTarget"
L_01b2: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01b7: stfld BattleTech.StarSystem NearestToTarget
L_01bc: ldarg.0
L_01bd: ldloc.0
L_01be: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01c3: ldstr "CurSystem"
L_01c8: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01cd: call Void set_CurSystem(BattleTech.StarSystem)
L_01d2: ldloc.0
L_01d3: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01d8: ldloc.0
L_01d9: ldftn Void <Rehydrate>b__0(BattleTech.StarSystem)
L_01df: newobj Void .ctor(Object, IntPtr)
L_01e4: callvirt Void OperateOnAllSourceObjects[StarSystem](System.Action`1[BattleTech.StarSystem])
L_01e9: ldarg.0
L_01ea: call BattleTech.Data.DataManager get_DataManager()
L_01ef: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.StarSystemDef] get_SystemDefs()
L_01f4: callvirt System.Collections.Generic.IEnumerable`1[System.String] get_Keys()
L_01f9: newobj Void .ctor(IEnumerable`1)
L_01fe: stloc.1
L_01ff: ldarg.0
L_0200: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0205: callvirt Int32 get_Count()
L_020a: ldc.i4.1
L_020b: sub
L_020c: stloc.s 4 (System.Int32)
L_020e: br Label4
L_0213: Label7
L_0213: ldarg.0
L_0214: call SimGameType get_SimGameMode()
L_0219: ldc.i4.2
L_021a: bne.un Label5
L_021f: ldarg.0
L_0220: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0225: ldloc.s 4 (System.Int32)
L_0227: callvirt BattleTech.StarSystem get_Item(Int32)
L_022c: callvirt BattleTech.StarSystemDef get_Def()
L_0231: callvirt System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameType] get_StartingSystemModes()
L_0236: ldarg.0
L_0237: call SimGameType get_SimGameMode()
L_023c: callvirt Boolean Contains(SimGameType)
L_0241: brtrue Label6
L_0246: ldarg.0
L_0247: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_024c: ldloc.s 4 (System.Int32)
L_024e: callvirt Void RemoveAt(Int32)
L_0253: Label5
L_0253: Label6
L_0253: ldloc.s 4 (System.Int32)
L_0255: ldc.i4.1
L_0256: sub
L_0257: stloc.s 4 (System.Int32)
L_0259: Label4
L_0259: ldloc.s 4 (System.Int32)
L_025b: ldc.i4.0
L_025c: bge Label7
L_0261: ldloc.1
L_0262: callvirt Enumerator GetEnumerator()
L_0267: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0269: br Label8
	L_026e: Label11
	L_026e: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0270: call System.String get_Current()
	L_0275: stloc.s 6 (System.String)
	L_0277: newobj Void .ctor()
	L_027c: stloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_027e: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_0280: ldarg.0
	L_0281: call BattleTech.Data.DataManager get_DataManager()
	L_0286: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.StarSystemDef] get_SystemDefs()
	L_028b: ldloc.s 6 (System.String)
	L_028d: callvirt BattleTech.StarSystemDef Get(System.String)
	L_0292: stfld BattleTech.StarSystemDef newSystemDef
	L_0297: ldarg.0
	L_0298: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
	L_029d: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_029f: ldftn Boolean <Rehydrate>b__8(BattleTech.StarSystem)
	L_02a5: newobj Void .ctor(Object, IntPtr)
	L_02aa: callvirt BattleTech.StarSystem Find(System.Predicate`1[BattleTech.StarSystem])
	L_02af: brtrue Label9
	L_02b4: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_02b6: ldfld BattleTech.StarSystemDef newSystemDef
	L_02bb: callvirt System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameType] get_StartingSystemModes()
	L_02c0: ldarg.0
	L_02c1: call SimGameType get_SimGameMode()
	L_02c6: callvirt Boolean Contains(SimGameType)
	L_02cb: brfalse Label10
	L_02d0: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_02d2: ldfld BattleTech.StarSystemDef newSystemDef
	L_02d7: ldarg.0
	L_02d8: newobj Void .ctor(StarSystemDef, SimGameState)
	L_02dd: stloc.s 8 (BattleTech.StarSystem)
	L_02df: ldarg.0
	L_02e0: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
	L_02e5: ldloc.s 8 (BattleTech.StarSystem)
	L_02e7: callvirt Void Add(BattleTech.StarSystem)
	L_02ec: Label8
	L_02ec: Label9
	L_02ec: Label10
	L_02ec: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_02ee: call Boolean MoveNext()
	L_02f3: brtrue Label11
	L_02f8: leave Label12
	L_02fd: leave (autogenerated)
} // end try
.finally
{
	L_0302: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0304: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_030a: callvirt Void Dispose()
	L_030f: endfinally
	L_0310: leave (autogenerated)
} // end handler
L_0311: Label12
L_0311: ldarg.0
L_0312: call System.Collections.Generic.List`1[BattleTech.StarSystem] get_StarSystems()
L_0317: callvirt Enumerator GetEnumerator()
L_031c: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
.try
{
	L_031e: br Label13
	L_0323: Label14
	L_0323: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0325: call BattleTech.StarSystem get_Current()
	L_032a: stloc.s 10 (BattleTech.StarSystem)
	L_032c: ldarg.0
	L_032d: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
	L_0332: ldloc.s 10 (BattleTech.StarSystem)
	L_0334: callvirt System.String get_ID()
	L_0339: ldloc.s 10 (BattleTech.StarSystem)
	L_033b: callvirt Void Add(System.String, BattleTech.StarSystem)
	L_0340: Label13
	L_0340: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0342: call Boolean MoveNext()
	L_0347: brtrue Label14
	L_034c: leave Label15
	L_0351: leave (autogenerated)
} // end try
.finally
{
	L_0356: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0358: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem]
	L_035e: callvirt Void Dispose()
	L_0363: endfinally
	L_0364: leave (autogenerated)
} // end handler
L_0365: Label15
L_0365: ldloc.0
L_0366: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_036b: ldloc.0
L_036c: ldftn Void <Rehydrate>b__1(BattleTech.Contract)
L_0372: newobj Void .ctor(Object, IntPtr)
L_0377: callvirt Void OperateOnAllSourceObjects[Contract](System.Action`1[BattleTech.Contract])
L_037c: ldarg.0
L_037d: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0382: callvirt Enumerator GetEnumerator()
L_0387: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
.try
{
	L_0389: br Label16
	L_038e: Label17
	L_038e: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0390: call BattleTech.StarSystem get_Current()
	L_0395: ldarg.0
	L_0396: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
	L_039b: callvirt Void SetContractTargets(System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem])
	L_03a0: Label16
	L_03a0: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_03a2: call Boolean MoveNext()
	L_03a7: brtrue Label17
	L_03ac: leave Label18
	L_03b1: leave (autogenerated)
} // end try
.finally
{
	L_03b6: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_03b8: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem]
	L_03be: callvirt Void Dispose()
	L_03c3: endfinally
	L_03c4: leave (autogenerated)
} // end handler
L_03c5: Label18
L_03c5: ldarg.0
L_03c6: ldloc.0
L_03c7: ldfld BattleTech.Save.SimGameSave save
L_03cc: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_03d1: ldstr "ActiveMechs"
L_03d6: callvirt System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] GetItemDictionary[Int32,MechDef](System.String)
L_03db: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ActiveMechs
L_03e0: ldarg.0
L_03e1: ldloc.0
L_03e2: ldfld BattleTech.Save.SimGameSave save
L_03e7: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_03ec: ldstr "ReadyingMechs"
L_03f1: callvirt System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] GetItemDictionary[Int32,MechDef](System.String)
L_03f6: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_03fb: ldarg.0
L_03fc: ldloc.0
L_03fd: ldfld BattleTech.Save.SimGameSave save
L_0402: callvirt System.Collections.Generic.List`1[System.String] get_LastUsedMechs()
L_0407: stfld System.Collections.Generic.List`1[System.String] LastUsedMechs
L_040c: ldarg.0
L_040d: ldloc.0
L_040e: ldfld BattleTech.Save.SimGameSave save
L_0413: callvirt System.Collections.Generic.List`1[System.String] get_LastUsedPilots()
L_0418: stfld System.Collections.Generic.List`1[System.String] LastUsedPilots
L_041d: ldarg.0
L_041e: ldloc.0
L_041f: ldfld BattleTech.Save.SimGameSave save
L_0424: callvirt System.Collections.Generic.List`1[BattleTech.TechDef] get_MechTechs()
L_0429: call Void set_MechTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_042e: ldarg.0
L_042f: ldloc.0
L_0430: ldfld BattleTech.Save.SimGameSave save
L_0435: callvirt System.Collections.Generic.List`1[BattleTech.TechDef] get_MedTechs()
L_043a: call Void set_MedTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_043f: ldloc.0
L_0440: ldfld BattleTech.Save.SimGameSave save
L_0445: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_044a: ldsfld System.Action`1[BattleTech.Pilot] <>9__1122_2
L_044f: dup
L_0450: brtrue Label19
L_0455: pop
L_0456: ldsfld BattleTech.SimGameState+<>c <>9
L_045b: ldftn Void <Rehydrate>b__1122_2(BattleTech.Pilot)
L_0461: newobj Void .ctor(Object, IntPtr)
L_0466: dup
L_0467: stsfld System.Action`1[BattleTech.Pilot] <>9__1122_2
L_046c: Label19
L_046c: callvirt Void OperateOnAllSourceObjects[Pilot](System.Action`1[BattleTech.Pilot])
L_0471: ldarg.0
L_0472: ldloc.0
L_0473: ldfld BattleTech.Save.SimGameSave save
L_0478: callvirt BattleTech.Save.WeightedPilotListSave get_Graveyard()
L_047d: ldstr "Graveyard"
L_0482: callvirt BattleTech.WeightedList`1[BattleTech.Pilot] GetList(System.String)
L_0487: stfld BattleTech.WeightedList`1[BattleTech.Pilot] Graveyard
L_048c: ldarg.0
L_048d: ldloc.0
L_048e: ldfld BattleTech.Save.SimGameSave save
L_0493: callvirt BattleTech.Save.WeightedPilotListSave get_PilotRoster()
L_0498: ldstr "PilotRoster"
L_049d: callvirt BattleTech.WeightedList`1[BattleTech.Pilot] GetList(System.String)
L_04a2: stfld BattleTech.WeightedList`1[BattleTech.Pilot] PilotRoster
L_04a7: ldarg.0
L_04a8: ldloc.0
L_04a9: ldfld BattleTech.Save.SimGameSave save
L_04ae: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_04b3: ldstr "Commander"
L_04b8: callvirt BattleTech.Pilot GetItem[Pilot](System.String)
L_04bd: stfld BattleTech.Pilot commander
L_04c2: ldarg.0
L_04c3: ldloc.0
L_04c4: ldfld BattleTech.Save.SimGameSave save
L_04c9: callvirt HBS.Collections.TagSet get_CompanyTags()
L_04ce: stfld HBS.Collections.TagSet companyTags
L_04d3: ldarg.0
L_04d4: ldloc.0
L_04d5: ldfld BattleTech.Save.SimGameSave save
L_04da: callvirt BattleTech.StatCollection get_CompanyStats()
L_04df: stfld BattleTech.StatCollection companyStats
L_04e4: ldarg.0
L_04e5: call Void InitCompanyStatValidators()
L_04ea: ldarg.0
L_04eb: ldloc.0
L_04ec: ldfld BattleTech.Save.SimGameSave save
L_04f1: callvirt System.Collections.Generic.List`1[System.String] get_PurchasedShipUpgrades()
L_04f6: stfld System.Collections.Generic.List`1[System.String] purchasedArgoUpgrades
L_04fb: ldarg.0
L_04fc: ldfld System.Collections.Generic.List`1[System.String] purchasedArgoUpgrades
L_0501: callvirt Enumerator GetEnumerator()
L_0506: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0508: br Label20
	L_050d: Label21
	L_050d: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_050f: call System.String get_Current()
	L_0514: stloc.s 11 (System.String)
	L_0516: ldarg.0
	L_0517: call BattleTech.Data.DataManager get_DataManager()
	L_051c: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.ShipModuleUpgrade] get_ShipUpgradeDefs()
	L_0521: ldloc.s 11 (System.String)
	L_0523: callvirt BattleTech.ShipModuleUpgrade Get(System.String)
	L_0528: stloc.s 12 (BattleTech.ShipModuleUpgrade)
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.ShipModuleUpgrade] shipUpgrades
	L_0530: ldloc.s 12 (BattleTech.ShipModuleUpgrade)
	L_0532: callvirt Void Add(BattleTech.ShipModuleUpgrade)
	L_0537: Label20
	L_0537: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0539: call Boolean MoveNext()
	L_053e: brtrue Label21
	L_0543: leave Label22
	L_0548: leave (autogenerated)
} // end try
.finally
{
	L_054d: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_054f: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0555: callvirt Void Dispose()
	L_055a: endfinally
	L_055b: leave (autogenerated)
} // end handler
L_055c: Label22
L_055c: ldloc.0
L_055d: ldfld BattleTech.Save.SimGameSave save
L_0562: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0567: ldloc.0
L_0568: ldftn Void <Rehydrate>b__3(BattleTech.MechDef)
L_056e: newobj Void .ctor(Object, IntPtr)
L_0573: callvirt Void OperateOnAllSourceObjects[MechDef](System.Action`1[BattleTech.MechDef])
L_0578: ldarg.0
L_0579: ldloc.0
L_057a: ldfld BattleTech.Save.SimGameSave save
L_057f: callvirt BattleTech.DropshipType get_CurDropship()
L_0584: call Void set_CurDropship(BattleTech.DropshipType)
L_0589: ldarg.0
L_058a: ldloc.0
L_058b: ldfld BattleTech.Save.SimGameSave save
L_0590: callvirt System.Collections.Generic.List`1[BattleTech.Save.ContractData] get_ContractBits()
L_0595: stfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_059a: ldarg.0
L_059b: ldfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_05a0: brfalse Label23
L_05a5: ldarg.0
L_05a6: ldfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_05ab: callvirt Enumerator GetEnumerator()
L_05b0: stloc.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
.try
{
	L_05b2: br Label24
	L_05b7: Label25
	L_05b7: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05b9: call BattleTech.Save.ContractData get_Current()
	L_05be: newobj Void .ctor(ContractData)
	L_05c3: stloc.s 14 (BattleTech.SimGameState+AddContractData)
	L_05c5: ldarg.0
	L_05c6: ldloc.s 14 (BattleTech.SimGameState+AddContractData)
	L_05c8: call BattleTech.Contract AddContract(AddContractData)
	L_05cd: pop
	L_05ce: Label24
	L_05ce: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05d0: call Boolean MoveNext()
	L_05d5: brtrue Label25
	L_05da: leave Label26
	L_05df: leave (autogenerated)
} // end try
.finally
{
	L_05e4: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05e6: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData]
	L_05ec: callvirt Void Dispose()
	L_05f1: endfinally
	L_05f2: leave (autogenerated)
} // end handler
L_05f3: Label23
L_05f3: Label26
L_05f3: ldarg.0
L_05f4: ldloc.0
L_05f5: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_05fa: ldstr "TemporaryResultTracker"
L_05ff: callvirt System.Collections.Generic.List`1[BattleTech.TemporarySimGameResult] GetItemList[TemporarySimGameResult](System.String)
L_0604: stfld System.Collections.Generic.List`1[BattleTech.TemporarySimGameResult] TemporaryResultTracker
L_0609: ldloc.0
L_060a: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_060f: ldloc.0
L_0610: ldftn Void <Rehydrate>b__4(BattleTech.TemporarySimGameResult)
L_0616: newobj Void .ctor(Object, IntPtr)
L_061b: callvirt Void OperateOnAllSourceObjects[TemporarySimGameResult](System.Action`1[BattleTech.TemporarySimGameResult])
L_0620: ldloc.0
L_0621: ldfld BattleTech.Save.SimGameSave save
L_0626: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_062b: ldloc.0
L_062c: ldftn Void <Rehydrate>b__5(BattleTech.WorkOrderEntry)
L_0632: newobj Void .ctor(Object, IntPtr)
L_0637: callvirt Void OperateOnAllSourceObjects[WorkOrderEntry](System.Action`1[BattleTech.WorkOrderEntry])
L_063c: ldloc.0
L_063d: ldfld BattleTech.Save.SimGameSave save
L_0642: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0647: ldloc.0
L_0648: ldftn Void <Rehydrate>b__6(BattleTech.MechComponentRef)
L_064e: newobj Void .ctor(Object, IntPtr)
L_0653: callvirt Void OperateOnAllSourceObjects[MechComponentRef](System.Action`1[BattleTech.MechComponentRef])
L_0658: ldarg.0
L_0659: ldloc.0
L_065a: ldfld BattleTech.Save.SimGameSave save
L_065f: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0664: ldstr "MechLabQueue"
L_0669: callvirt System.Collections.Generic.List`1[BattleTech.WorkOrderEntry] GetItemList[WorkOrderEntry](System.String)
L_066e: call Void set_MechLabQueue(System.Collections.Generic.List`1[BattleTech.WorkOrderEntry])
L_0673: ldarg.0
L_0674: ldloc.0
L_0675: ldfld BattleTech.Save.SimGameSave save
L_067a: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_067f: ldstr "MedBayQueue"
L_0684: callvirt BattleTech.WorkOrderEntry_MedBayGeneric GetItem[WorkOrderEntry_MedBayGeneric](System.String)
L_0689: stfld BattleTech.WorkOrderEntry_MedBayGeneric MedBayQueue
L_068e: ldarg.0
L_068f: ldloc.0
L_0690: ldfld BattleTech.Save.SimGameSave save
L_0695: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_069a: ldstr "TravelOrder"
L_069f: callvirt BattleTech.WorkOrderEntry_TravelGeneric GetItem[WorkOrderEntry_TravelGeneric](System.String)
L_06a4: call Void set_TravelOrder(BattleTech.WorkOrderEntry_TravelGeneric)
L_06a9: ldarg.0
L_06aa: ldloc.0
L_06ab: ldfld BattleTech.Save.SimGameSave save
L_06b0: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_06b5: ldstr "WorkOrderComponents"
L_06ba: callvirt System.Collections.Generic.List`1[BattleTech.MechComponentRef] GetItemList[MechComponentRef](System.String)
L_06bf: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_06c4: ldarg.0
L_06c5: ldloc.0
L_06c6: ldfld BattleTech.Save.SimGameSave save
L_06cb: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_06d0: ldstr "CurrentUpgradeEntry"
L_06d5: callvirt BattleTech.WorkOrderEntry_ArgoUpgradeGeneric GetItem[WorkOrderEntry_ArgoUpgradeGeneric](System.String)
L_06da: stfld BattleTech.WorkOrderEntry_ArgoUpgradeGeneric CurrentUpgradeEntry
L_06df: ldarg.0
L_06e0: ldloc.0
L_06e1: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_06e6: ldstr "specialEventTracker"
L_06eb: callvirt System.Collections.Generic.List`1[BattleTech.SimGameEventTracker] GetItemList[SimGameEventTracker](System.String)
L_06f0: stfld System.Collections.Generic.List`1[BattleTech.SimGameEventTracker] specialEventTracker
L_06f5: ldarg.0
L_06f6: ldloc.0
L_06f7: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_06fc: ldstr "companyEventTracker"
L_0701: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0706: stfld BattleTech.SimGameEventTracker companyEventTracker
L_070b: ldarg.0
L_070c: ldloc.0
L_070d: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0712: ldstr "mechWarriorEventTracker"
L_0717: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_071c: stfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_0721: ldarg.0
L_0722: ldloc.0
L_0723: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0728: ldstr "deadEventTracker"
L_072d: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0732: stfld BattleTech.SimGameEventTracker deadEventTracker
L_0737: ldarg.0
L_0738: ldloc.0
L_0739: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_073e: ldstr "moraleEventTracker"
L_0743: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0748: stfld BattleTech.SimGameEventTracker moraleEventTracker
L_074d: ldloc.0
L_074e: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0753: ldloc.0
L_0754: ldftn Void <Rehydrate>b__7(BattleTech.SimGameEventTracker)
L_075a: newobj Void .ctor(Object, IntPtr)
L_075f: callvirt Void OperateOnAllSourceObjects[SimGameEventTracker](System.Action`1[BattleTech.SimGameEventTracker])
L_0764: ldarg.0
L_0765: ldloc.0
L_0766: ldfld BattleTech.Save.SimGameSave save
L_076b: callvirt BattleTech.Framework.ContractScope get_contractScope()
L_0770: stfld BattleTech.Framework.ContractScope ContractScope
L_0775: ldarg.0
L_0776: ldloc.0
L_0777: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_077c: ldstr "activeBreadcrumb"
L_0781: callvirt BattleTech.Contract GetItem[Contract](System.String)
L_0786: stfld BattleTech.Contract activeBreadcrumb
L_078b: ldloc.0
L_078c: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0791: ldstr "pendingBreadcrumb"
L_0796: callvirt Boolean HasItem(System.String)
L_079b: brfalse Label27
L_07a0: ldarg.0
L_07a1: ldloc.0
L_07a2: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_07a7: ldstr "pendingBreadcrumb"
L_07ac: callvirt BattleTech.Contract GetItem[Contract](System.String)
L_07b1: stfld BattleTech.Contract pendingBreadcrumb
L_07b6: Label27
L_07b6: ldarg.0
L_07b7: ldloc.0
L_07b8: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_07bd: ldstr "globalContracts"
L_07c2: callvirt System.Collections.Generic.List`1[BattleTech.Contract] GetItemList[Contract](System.String)
L_07c7: stfld System.Collections.Generic.List`1[BattleTech.Contract] globalContracts
L_07cc: ldloc.0
L_07cd: ldfld BattleTech.Save.SimGameSave save
L_07d2: callvirt UInt32 get_UIDCount()
L_07d7: ldarg.0
L_07d8: ldfld System.UInt32 UIDCount
L_07dd: ble.un Label28
L_07e2: ldarg.0
L_07e3: ldloc.0
L_07e4: ldfld BattleTech.Save.SimGameSave save
L_07e9: callvirt UInt32 get_UIDCount()
L_07ee: stfld System.UInt32 UIDCount
L_07f3: Label28
L_07f3: ldloc.0
L_07f4: ldfld BattleTech.Save.SimGameSave save
L_07f9: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_07fe: brfalse Label29
L_0803: ldarg.0
L_0804: newobj Void .ctor()
L_0809: stfld System.Collections.Generic.Dictionary`2[BattleTech.ArgoController+RepairStateLocations,System.Int32] argoLocationRepairStates
L_080e: ldc.i4.0
L_080f: stloc.s 15 (System.Int32)
L_0811: br Label30
L_0816: Label31
L_0816: ldarg.0
L_0817: ldfld System.Collections.Generic.Dictionary`2[BattleTech.ArgoController+RepairStateLocations,System.Int32] argoLocationRepairStates
L_081c: ldloc.0
L_081d: ldfld BattleTech.Save.SimGameSave save
L_0822: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_0827: ldloc.s 15 (System.Int32)
L_0829: callvirt Int32 get_Item(Int32)
L_082e: ldloc.0
L_082f: ldfld BattleTech.Save.SimGameSave save
L_0834: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateValues
L_0839: ldloc.s 15 (System.Int32)
L_083b: callvirt Int32 get_Item(Int32)
L_0840: callvirt Void Add(RepairStateLocations, Int32)
L_0845: ldloc.s 15 (System.Int32)
L_0847: ldc.i4.1
L_0848: add
L_0849: stloc.s 15 (System.Int32)
L_084b: Label30
L_084b: ldloc.s 15 (System.Int32)
L_084d: ldloc.0
L_084e: ldfld BattleTech.Save.SimGameSave save
L_0853: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_0858: callvirt Int32 get_Count()
L_085d: blt Label31
L_0862: Label29
L_0862: ldloc.0
L_0863: ldfld BattleTech.Save.SimGameSave save
L_0868: ldfld System.Collections.Generic.List`1[System.String] UsedRoninIDs
L_086d: brfalse Label32
L_0872: ldarg.0
L_0873: ldloc.0
L_0874: ldfld BattleTech.Save.SimGameSave save
L_0879: ldfld System.Collections.Generic.List`1[System.String] UsedRoninIDs
L_087e: newobj Void .ctor(IEnumerable`1)
L_0883: stfld System.Collections.Generic.List`1[System.String] usedRoninIDs
L_0888: Label32
L_0888: ldloc.0
L_0889: ldfld BattleTech.Save.SimGameSave save
L_088e: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_0893: brfalse Label33
L_0898: ldarg.0
L_0899: newobj Void .ctor()
L_089e: stfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
L_08a3: ldc.i4.0
L_08a4: stloc.s 16 (System.Int32)
L_08a6: br Label34
L_08ab: Label35
L_08ab: ldarg.0
L_08ac: ldfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
L_08b1: ldloc.0
L_08b2: ldfld BattleTech.Save.SimGameSave save
L_08b7: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_08bc: ldloc.s 16 (System.Int32)
L_08be: callvirt Int32 get_Item(Int32)
L_08c3: callvirt Void Add(SimGameCharacterType)
L_08c8: ldloc.s 16 (System.Int32)
L_08ca: ldc.i4.1
L_08cb: add
L_08cc: stloc.s 16 (System.Int32)
L_08ce: Label34
L_08ce: ldloc.s 16 (System.Int32)
L_08d0: ldloc.0
L_08d1: ldfld BattleTech.Save.SimGameSave save
L_08d6: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_08db: callvirt Int32 get_Count()
L_08e0: blt Label35
L_08e5: Label33
L_08e5: ldloc.0
L_08e6: ldfld BattleTech.Save.SimGameSave save
L_08eb: ldfld System.Collections.Generic.List`1[System.Boolean] CharacterStatus
L_08f0: brfalse Label36
L_08f5: ldarg.0
L_08f6: ldloc.0
L_08f7: ldfld BattleTech.Save.SimGameSave save
L_08fc: ldfld System.Collections.Generic.List`1[System.Boolean] CharacterStatus
L_0901: newobj Void .ctor(IEnumerable`1)
L_0906: stfld System.Collections.Generic.List`1[System.Boolean] characterStatus
L_090b: Label36
L_090b: ldloc.0
L_090c: ldfld BattleTech.Save.SimGameSave save
L_0911: ldfld System.Collections.Generic.List`1[System.String] MapDiscardPile
L_0916: brfalse Label37
L_091b: ldarg.0
L_091c: ldloc.0
L_091d: ldfld BattleTech.Save.SimGameSave save
L_0922: ldfld System.Collections.Generic.List`1[System.String] MapDiscardPile
L_0927: newobj Void .ctor(IEnumerable`1)
L_092c: stfld System.Collections.Generic.List`1[System.String] mapDiscardPile
L_0931: Label37
L_0931: ldloc.0
L_0932: ldfld BattleTech.Save.SimGameSave save
L_0937: ldfld System.Collections.Generic.List`1[System.String] ContractDiscardPile
L_093c: brfalse Label38
L_0941: ldarg.0
L_0942: ldloc.0
L_0943: ldfld BattleTech.Save.SimGameSave save
L_0948: ldfld System.Collections.Generic.List`1[System.String] ContractDiscardPile
L_094d: newobj Void .ctor(IEnumerable`1)
L_0952: stfld System.Collections.Generic.List`1[System.String] contractDiscardPile
L_0957: Label38
L_0957: ldloc.0
L_0958: ldfld BattleTech.Save.SimGameSave save
L_095d: ldfld System.Collections.Generic.List`1[System.String] PilotGenCallsignDiscardPile
L_0962: brfalse Label39
L_0967: ldarg.0
L_0968: ldloc.0
L_0969: ldfld BattleTech.Save.SimGameSave save
L_096e: ldfld System.Collections.Generic.List`1[System.String] PilotGenCallsignDiscardPile
L_0973: newobj Void .ctor(IEnumerable`1)
L_0978: stfld System.Collections.Generic.List`1[System.String] pilotGenCallsignDiscardPile
L_097d: Label39
L_097d: ldloc.0
L_097e: ldfld BattleTech.Save.SimGameSave save
L_0983: ldfld System.Collections.Generic.List`1[System.String] PilotGenVoiceDiscardPile
L_0988: brfalse Label40
L_098d: ldarg.0
L_098e: ldloc.0
L_098f: ldfld BattleTech.Save.SimGameSave save
L_0994: ldfld System.Collections.Generic.List`1[System.String] PilotGenVoiceDiscardPile
L_0999: newobj Void .ctor(IEnumerable`1)
L_099e: stfld System.Collections.Generic.List`1[System.String] pilotGenVoiceDiscardPile
L_09a3: Label40
L_09a3: ldloc.0
L_09a4: ldfld BattleTech.Save.SimGameSave save
L_09a9: ldfld System.Collections.Generic.List`1[System.String] PilotGenPortraitDiscardPile
L_09ae: brfalse Label41
L_09b3: ldarg.0
L_09b4: ldloc.0
L_09b5: ldfld BattleTech.Save.SimGameSave save
L_09ba: ldfld System.Collections.Generic.List`1[System.String] PilotGenPortraitDiscardPile
L_09bf: newobj Void .ctor(IEnumerable`1)
L_09c4: stfld System.Collections.Generic.List`1[System.String] pilotGenPortraitDiscardPile
L_09c9: Label41
L_09c9: ldloc.0
L_09ca: ldfld BattleTech.Save.SimGameSave save
L_09cf: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractEmployers
L_09d4: brfalse Label42
L_09d9: ldarg.0
L_09da: newobj Void .ctor()
L_09df: stfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractEmployers
L_09e4: ldloc.0
L_09e5: ldfld BattleTech.Save.SimGameSave save
L_09ea: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractEmployers
L_09ef: callvirt Enumerator GetEnumerator()
L_09f4: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
.try
{
	L_09f6: br Label43
	L_09fb: Label44
	L_09fb: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_09fd: call Int32 get_Current()
	L_0a02: stloc.s 18 (System.Int32)
	L_0a04: ldarg.0
	L_0a05: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractEmployers
	L_0a0a: ldloc.s 18 (System.Int32)
	L_0a0c: callvirt Void Add(BattleTech.Faction)
	L_0a11: Label43
	L_0a11: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a13: call Boolean MoveNext()
	L_0a18: brtrue Label44
	L_0a1d: leave Label45
	L_0a22: leave (autogenerated)
} // end try
.finally
{
	L_0a27: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a29: constrained. System.Collections.Generic.List`1+Enumerator[System.Int32]
	L_0a2f: callvirt Void Dispose()
	L_0a34: endfinally
	L_0a35: leave (autogenerated)
} // end handler
L_0a36: Label42
L_0a36: Label45
L_0a36: ldloc.0
L_0a37: ldfld BattleTech.Save.SimGameSave save
L_0a3c: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractTargets
L_0a41: brfalse Label46
L_0a46: ldarg.0
L_0a47: newobj Void .ctor()
L_0a4c: stfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0a51: ldloc.0
L_0a52: ldfld BattleTech.Save.SimGameSave save
L_0a57: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractTargets
L_0a5c: callvirt Enumerator GetEnumerator()
L_0a61: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
.try
{
	L_0a63: br Label47
	L_0a68: Label48
	L_0a68: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a6a: call Int32 get_Current()
	L_0a6f: stloc.s 19 (System.Int32)
	L_0a71: ldarg.0
	L_0a72: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
	L_0a77: ldloc.s 19 (System.Int32)
	L_0a79: callvirt Void Add(BattleTech.Faction)
	L_0a7e: Label47
	L_0a7e: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a80: call Boolean MoveNext()
	L_0a85: brtrue Label48
	L_0a8a: leave Label49
	L_0a8f: leave (autogenerated)
} // end try
.finally
{
	L_0a94: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a96: constrained. System.Collections.Generic.List`1+Enumerator[System.Int32]
	L_0a9c: callvirt Void Dispose()
	L_0aa1: endfinally
	L_0aa2: leave (autogenerated)
} // end handler
L_0aa3: Label49
L_0aa3: ldloc.0
L_0aa4: ldfld BattleTech.Save.SimGameSave save
L_0aa9: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_0aae: ldc.i4.2
L_0aaf: bne.un Label50
L_0ab4: ldarg.0
L_0ab5: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0aba: ldc.i4.s 9
L_0abc: callvirt Boolean Contains(BattleTech.Faction)
L_0ac1: brtrue Label51
L_0ac6: ldarg.0
L_0ac7: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0acc: ldc.i4.s 9
L_0ace: callvirt Void Add(BattleTech.Faction)
L_0ad3: Label46
L_0ad3: Label50
L_0ad3: Label51
L_0ad3: ldloc.0
L_0ad4: ldfld BattleTech.Save.SimGameSave save
L_0ad9: ldfld System.Collections.Generic.List`1[System.String] DisplayedFactions
L_0ade: brfalse Label52
L_0ae3: ldarg.0
L_0ae4: newobj Void .ctor()
L_0ae9: stfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0aee: ldloc.0
L_0aef: ldfld BattleTech.Save.SimGameSave save
L_0af4: ldfld System.Collections.Generic.List`1[System.String] DisplayedFactions
L_0af9: callvirt Enumerator GetEnumerator()
L_0afe: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0b00: br Label53
	L_0b05: Label54
	L_0b05: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b07: call System.String get_Current()
	L_0b0c: stloc.s 20 (System.String)
	L_0b0e: ldarg.0
	L_0b0f: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
	L_0b14: ldarg.0
	L_0b15: ldloc.s 20 (System.String)
	L_0b17: call BattleTech.Faction GetFactionFromString(System.String)
	L_0b1c: callvirt Void Add(BattleTech.Faction)
	L_0b21: Label53
	L_0b21: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b23: call Boolean MoveNext()
	L_0b28: brtrue Label54
	L_0b2d: leave Label55
	L_0b32: leave (autogenerated)
} // end try
.finally
{
	L_0b37: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b39: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0b3f: callvirt Void Dispose()
	L_0b44: endfinally
	L_0b45: leave (autogenerated)
} // end handler
L_0b46: Label55
L_0b46: ldarg.0
L_0b47: call BattleTech.SimGameConstants get_Constants()
L_0b4c: callvirt BattleTech.StoryConstantsDef get_Story()
L_0b51: ldfld System.String[] StartingDisplayedFactions
L_0b56: stloc.s 21 (System.String[])
L_0b58: ldc.i4.0
L_0b59: stloc.s 22 (System.Int32)
L_0b5b: br Label56
L_0b60: Label58
L_0b60: ldloc.s 21 (System.String[])
L_0b62: ldloc.s 22 (System.Int32)
L_0b64: ldelem.ref
L_0b65: stloc.s 23 (System.String)
L_0b67: ldarg.0
L_0b68: ldloc.s 23 (System.String)
L_0b6a: call BattleTech.Faction GetFactionFromString(System.String)
L_0b6f: stloc.s 24 (BattleTech.Faction)
L_0b71: ldarg.0
L_0b72: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0b77: ldloc.s 24 (BattleTech.Faction)
L_0b79: callvirt Boolean Contains(BattleTech.Faction)
L_0b7e: brtrue Label57
L_0b83: ldarg.0
L_0b84: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0b89: ldloc.s 24 (BattleTech.Faction)
L_0b8b: callvirt Void Add(BattleTech.Faction)
L_0b90: Label57
L_0b90: ldloc.s 22 (System.Int32)
L_0b92: ldc.i4.1
L_0b93: add
L_0b94: stloc.s 22 (System.Int32)
L_0b96: Label56
L_0b96: ldloc.s 22 (System.Int32)
L_0b98: ldloc.s 21 (System.String[])
L_0b9a: ldlen
L_0b9b: conv.i4
L_0b9c: blt Label58
L_0ba1: ldloc.0
L_0ba2: ldfld BattleTech.Save.SimGameSave save
L_0ba7: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_0bac: ldc.i4.2
L_0bad: bne.un Label59
L_0bb2: ldarg.0
L_0bb3: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bb8: ldc.i4.s 10
L_0bba: callvirt Boolean Contains(BattleTech.Faction)
L_0bbf: brtrue Label60
L_0bc4: ldarg.0
L_0bc5: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bca: ldc.i4.s 10
L_0bcc: callvirt Void Add(BattleTech.Faction)
L_0bd1: Label60
L_0bd1: ldarg.0
L_0bd2: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bd7: ldc.i4.s 9
L_0bd9: callvirt Boolean Contains(BattleTech.Faction)
L_0bde: brfalse Label61
L_0be3: ldarg.0
L_0be4: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0be9: ldc.i4.s 9
L_0beb: callvirt Boolean Remove(BattleTech.Faction)
L_0bf0: pop
L_0bf1: Label52
L_0bf1: Label59
L_0bf1: Label61
L_0bf1: ldloc.0
L_0bf2: ldfld BattleTech.Save.SimGameSave save
L_0bf7: ldfld System.Collections.Generic.List`1[System.String] ConversationIDRefsWeHaveSelected
L_0bfc: brfalse Label62
L_0c01: ldarg.0
L_0c02: newobj Void .ctor()
L_0c07: stfld System.Collections.Generic.List`1[System.String] AlreadyClickedConversationResponses
L_0c0c: ldloc.0
L_0c0d: ldfld BattleTech.Save.SimGameSave save
L_0c12: ldfld System.Collections.Generic.List`1[System.String] ConversationIDRefsWeHaveSelected
L_0c17: callvirt Enumerator GetEnumerator()
L_0c1c: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0c1e: br Label63
	L_0c23: Label64
	L_0c23: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c25: call System.String get_Current()
	L_0c2a: stloc.s 25 (System.String)
	L_0c2c: ldarg.0
	L_0c2d: ldfld System.Collections.Generic.List`1[System.String] AlreadyClickedConversationResponses
	L_0c32: ldloc.s 25 (System.String)
	L_0c34: callvirt Void Add(System.String)
	L_0c39: Label63
	L_0c39: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c3b: call Boolean MoveNext()
	L_0c40: brtrue Label64
	L_0c45: leave Label65
	L_0c4a: leave (autogenerated)
} // end try
.finally
{
	L_0c4f: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c51: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0c57: callvirt Void Dispose()
	L_0c5c: endfinally
	L_0c5d: leave (autogenerated)
} // end handler
L_0c5e: Label62
L_0c5e: Label65
L_0c5e: ldloc.0
L_0c5f: ldfld BattleTech.Save.SimGameSave save
L_0c64: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c69: brfalse Label66
L_0c6e: ldarg.0
L_0c6f: newobj Void .ctor()
L_0c74: stfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c79: ldloc.0
L_0c7a: ldfld BattleTech.Save.SimGameSave save
L_0c7f: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c84: callvirt Enumerator GetEnumerator()
L_0c89: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0c8b: br Label67
	L_0c90: Label68
	L_0c90: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c92: call System.String get_Current()
	L_0c97: stloc.s 26 (System.String)
	L_0c99: ldarg.0
	L_0c9a: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
	L_0c9f: ldloc.s 26 (System.String)
	L_0ca1: callvirt Void Add(System.String)
	L_0ca6: Label67
	L_0ca6: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0ca8: call Boolean MoveNext()
	L_0cad: brtrue Label68
	L_0cb2: leave Label69
	L_0cb7: leave (autogenerated)
} // end try
.finally
{
	L_0cbc: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0cbe: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0cc4: callvirt Void Dispose()
	L_0cc9: endfinally
	L_0cca: leave (autogenerated)
} // end handler
L_0ccb: Label66
L_0ccb: Label69
L_0ccb: ldarg.0
L_0ccc: ldloc.0
L_0ccd: ldfld BattleTech.Save.SimGameSave save
L_0cd2: ldfld System.Boolean AllowDebug
L_0cd7: stfld System.Boolean AllowDebug
L_0cdc: ldarg.0
L_0cdd: ldfld BattleTech.SimGameEventTracker companyEventTracker
L_0ce2: ldsfld BattleTech.EventScope[] CompanyTrackerScope
L_0ce7: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0cec: ldarg.0
L_0ced: ldfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_0cf2: ldsfld BattleTech.EventScope[] MechWarriorTrackerScope
L_0cf7: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0cfc: ldarg.0
L_0cfd: ldfld BattleTech.SimGameEventTracker moraleEventTracker
L_0d02: ldsfld BattleTech.EventScope[] MoraleTrackerScope
L_0d07: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0d0c: ldarg.0
L_0d0d: ldfld BattleTech.SimGameEventTracker deadEventTracker
L_0d12: ldsfld BattleTech.EventScope[] DeadTrackerScope
L_0d17: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0d1c: ldarg.0
L_0d1d: ldfld BattleTech.SimGameConstantOverride constantOverrides
L_0d22: ldarg.0
L_0d23: callvirt Void Initialize(BattleTech.SimGameState)
L_0d28: ldarg.0
L_0d29: call SimGameType get_SimGameMode()
L_0d2e: ldc.i4.2
L_0d2f: beq Label70
L_0d34: ldstr "DifficultySettings"
L_0d39: br Label71
L_0d3e: Label70
L_0d3e: ldstr "CareerDifficultySettings"
L_0d43: Label71
L_0d43: stloc.2
L_0d44: ldarg.0
L_0d45: ldfld BattleTech.SimGameDifficulty difficultySettings
L_0d4a: ldarg.0
L_0d4b: ldarg.0
L_0d4c: call BattleTech.Data.DataManager get_DataManager()
L_0d51: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.SimGameDifficultySettingList] get_SimGameDifficultySettingLists()
L_0d56: ldloc.2
L_0d57: callvirt BattleTech.SimGameDifficultySettingList Get(System.String)
L_0d5c: ldc.i4.0
L_0d5d: callvirt Void Initialize(BattleTech.SimGameState, BattleTech.SimGameDifficultySettingList, Boolean)
L_0d62: ldloc.0
L_0d63: ldfld BattleTech.Save.SimGameSave save
L_0d68: ldfld BattleTech.SimGameDifficulty+SimGameDifficultySave DifficultySettings
L_0d6d: brfalse Label72
L_0d72: ldarg.0
L_0d73: ldfld BattleTech.SimGameDifficulty difficultySettings
L_0d78: ldloc.0
L_0d79: ldfld BattleTech.Save.SimGameSave save
L_0d7e: ldfld BattleTech.SimGameDifficulty+SimGameDifficultySave DifficultySettings
L_0d83: callvirt Void Rehydrate(SimGameDifficultySave)
L_0d88: br Label73
L_0d8d: Label72
L_0d8d: ldarg.0
L_0d8e: call BattleTech.SimGameDifficulty get_DifficultySettings()
L_0d93: ldc.i4.1
L_0d94: callvirt Void ApplyAllSettings(Boolean)
L_0d99: ldarg.0
L_0d9a: call BattleTech.SimGameDifficulty get_DifficultySettings()
L_0d9f: callvirt Void RefreshCareerScoreMultiplier()
L_0da4: Label73
L_0da4: ldnull
L_0da5: stloc.3
L_0da6: ldloc.0
L_0da7: ldfld BattleTech.Save.SimGameSave save
L_0dac: ldfld System.Collections.Generic.List`1[System.String] FlashpointDiscardPile
L_0db1: brfalse Label74
L_0db6: ldarg.0
L_0db7: ldloc.0
L_0db8: ldfld BattleTech.Save.SimGameSave save
L_0dbd: ldfld System.Collections.Generic.List`1[System.String] FlashpointDiscardPile
L_0dc2: newobj Void .ctor(IEnumerable`1)
L_0dc7: stfld System.Collections.Generic.List`1[System.String] flashpointDiscardPile
L_0dcc: Label74
L_0dcc: ldloc.0
L_0dcd: ldfld BattleTech.Save.SimGameSave save
L_0dd2: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0dd7: brfalse Label75
L_0ddc: ldloc.0
L_0ddd: ldfld BattleTech.Save.SimGameSave save
L_0de2: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0de7: callvirt Int32 get_Count()
L_0dec: ldc.i4.0
L_0ded: ble Label76
L_0df2: ldarg.0
L_0df3: ldloc.0
L_0df4: ldfld BattleTech.Save.SimGameSave save
L_0df9: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0dfe: stfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_0e03: Label75
L_0e03: Label76
L_0e03: ldloc.0
L_0e04: ldfld BattleTech.Save.SimGameSave save
L_0e09: ldfld System.Boolean InFlashpointCooldownHasValue
L_0e0e: brfalse Label77
L_0e13: ldarg.0
L_0e14: ldloc.0
L_0e15: ldfld BattleTech.Save.SimGameSave save
L_0e1a: ldfld System.Boolean InFlashpointCooldown
L_0e1f: stfld System.Boolean inFlashpointCooldown
L_0e24: Label77
L_0e24: ldloc.0
L_0e25: ldfld BattleTech.Save.SimGameSave save
L_0e2a: ldfld System.Boolean FlashpointCooldownDaysHasValue
L_0e2f: brfalse Label78
L_0e34: ldarg.0
L_0e35: ldloc.0
L_0e36: ldfld BattleTech.Save.SimGameSave save
L_0e3b: ldfld System.Int32 FlashpointCooldownDays
L_0e40: stfld System.Int32 flashpointCooldownDays
L_0e45: Label78
L_0e45: ldloc.0
L_0e46: ldfld BattleTech.Save.SimGameSave save
L_0e4b: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] AvailableFlashpointList
L_0e50: brfalse Label79
L_0e55: ldarg.0
L_0e56: ldloc.0
L_0e57: ldfld BattleTech.Save.SimGameSave save
L_0e5c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] AvailableFlashpointList
L_0e61: newobj Void .ctor(IEnumerable`1)
L_0e66: stfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0e6b: ldarg.0
L_0e6c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0e71: callvirt Enumerator GetEnumerator()
L_0e76: stloc.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
.try
{
	L_0e78: br Label80
	L_0e7d: Label84
	L_0e7d: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0e7f: call BattleTech.Flashpoint get_Current()
	L_0e84: stloc.s 28 (BattleTech.Flashpoint)
	L_0e86: ldloc.s 28 (BattleTech.Flashpoint)
	L_0e88: ldarg.0
	L_0e89: ldloc.0
	L_0e8a: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
	L_0e8f: callvirt Void Rehydrate(BattleTech.SimGameState, BattleTech.Save.Test.SerializableReferenceContainer)
	L_0e94: ldloc.3
	L_0e95: brtrue Label81
	L_0e9a: ldloc.0
	L_0e9b: ldfld BattleTech.Save.SimGameSave save
	L_0ea0: ldfld System.String ActiveFlashpoint
	L_0ea5: call Boolean IsNullOrEmpty(System.String)
	L_0eaa: brtrue Label82
	L_0eaf: ldloc.s 28 (BattleTech.Flashpoint)
	L_0eb1: callvirt BattleTech.FlashpointDef get_Def()
	L_0eb6: ldfld BattleTech.BaseDescriptionDef Description
	L_0ebb: callvirt System.String get_Id()
	L_0ec0: ldloc.0
	L_0ec1: ldfld BattleTech.Save.SimGameSave save
	L_0ec6: ldfld System.String ActiveFlashpoint
	L_0ecb: call Boolean op_Equality(System.String, System.String)
	L_0ed0: brfalse Label83
	L_0ed5: ldloc.s 28 (BattleTech.Flashpoint)
	L_0ed7: stloc.3
	L_0ed8: Label80
	L_0ed8: Label81
	L_0ed8: Label82
	L_0ed8: Label83
	L_0ed8: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0eda: call Boolean MoveNext()
	L_0edf: brtrue Label84
	L_0ee4: leave Label85
	L_0ee9: leave (autogenerated)
} // end try
.finally
{
	L_0eee: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0ef0: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint]
	L_0ef6: callvirt Void Dispose()
	L_0efb: endfinally
	L_0efc: leave (autogenerated)
} // end handler
L_0efd: Label85
L_0efd: ldloc.3
L_0efe: brfalse Label86
L_0f03: ldarg.0
L_0f04: ldloc.3
L_0f05: stfld BattleTech.Flashpoint activeFlashpoint
L_0f0a: Label79
L_0f0a: Label86
L_0f0a: ldloc.0
L_0f0b: ldfld BattleTech.Save.SimGameSave save
L_0f10: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f15: brfalse Label87
L_0f1a: ldarg.0
L_0f1b: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f20: callvirt Void Clear()
L_0f25: ldc.i4.0
L_0f26: stloc.s 29 (System.Int32)
L_0f28: br Label88
L_0f2d: Label89
L_0f2d: ldarg.0
L_0f2e: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f33: ldloc.0
L_0f34: ldfld BattleTech.Save.SimGameSave save
L_0f39: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f3e: ldloc.s 29 (System.Int32)
L_0f40: callvirt System.String get_Item(Int32)
L_0f45: callvirt Void Add(System.String)
L_0f4a: ldloc.s 29 (System.Int32)
L_0f4c: ldc.i4.1
L_0f4d: add
L_0f4e: stloc.s 29 (System.Int32)
L_0f50: Label88
L_0f50: ldloc.s 29 (System.Int32)
L_0f52: ldloc.0
L_0f53: ldfld BattleTech.Save.SimGameSave save
L_0f58: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f5d: callvirt Int32 get_Count()
L_0f62: blt Label89
L_0f67: Label87
L_0f67: ldloc.0
L_0f68: ldfld BattleTech.Save.SimGameSave save
L_0f6d: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
L_0f72: brfalse Label90
L_0f77: ldarg.0
L_0f78: ldfld System.Collections.Generic.List`1[BattleTech.Faction] AlliedFactions
L_0f7d: callvirt Void Clear()
L_0f82: ldc.i4.0
L_0f83: stloc.s 30 (System.Int32)
L_0f85: br Label91
L_0f8a: Label94
L_0f8a: nop
.try
{
	L_0f8b: ldtoken BattleTech.Faction
	L_0f90: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
	L_0f95: ldloc.0
	L_0f96: ldfld BattleTech.Save.SimGameSave save
	L_0f9b: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
	L_0fa0: ldloc.s 30 (System.Int32)
	L_0fa2: callvirt System.String get_Item(Int32)
	L_0fa7: call System.Object Parse(System.Type, System.String)
	L_0fac: unbox.any BattleTech.Faction
	L_0fb1: stloc.s 31 (BattleTech.Faction)
	L_0fb3: ldarg.0
	L_0fb4: ldfld System.Collections.Generic.List`1[BattleTech.Faction] AlliedFactions
	L_0fb9: ldloc.s 31 (BattleTech.Faction)
	L_0fbb: callvirt Void Add(BattleTech.Faction)
	L_0fc0: leave Label92
	L_0fc5: leave (autogenerated)
} // end try
.catch System.Object
{
	L_0fca: pop
	L_0fcb: leave Label93
	L_0fd0: leave (autogenerated)
} // end handler
L_0fd5: Label92
L_0fd5: Label93
L_0fd5: ldloc.s 30 (System.Int32)
L_0fd7: ldc.i4.1
L_0fd8: add
L_0fd9: stloc.s 30 (System.Int32)
L_0fdb: Label91
L_0fdb: ldloc.s 30 (System.Int32)
L_0fdd: ldloc.0
L_0fde: ldfld BattleTech.Save.SimGameSave save
L_0fe3: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
L_0fe8: callvirt Int32 get_Count()
L_0fed: blt Label94
L_0ff2: Label90
L_0ff2: ldloc.0
L_0ff3: ldfld BattleTech.Save.SimGameSave save
L_0ff8: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
L_0ffd: brfalse Label95
L_1002: ldarg.0
L_1003: ldfld System.Collections.Generic.List`1[BattleTech.Faction] CareerModeEndAlliedFactions
L_1008: callvirt Void Clear()
L_100d: ldc.i4.0
L_100e: stloc.s 32 (System.Int32)
L_1010: br Label96
L_1015: Label99
L_1015: nop
.try
{
	L_1016: ldtoken BattleTech.Faction
	L_101b: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
	L_1020: ldloc.0
	L_1021: ldfld BattleTech.Save.SimGameSave save
	L_1026: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
	L_102b: ldloc.s 32 (System.Int32)
	L_102d: callvirt System.String get_Item(Int32)
	L_1032: call System.Object Parse(System.Type, System.String)
	L_1037: unbox.any BattleTech.Faction
	L_103c: stloc.s 33 (BattleTech.Faction)
	L_103e: ldarg.0
	L_103f: ldfld System.Collections.Generic.List`1[BattleTech.Faction] CareerModeEndAlliedFactions
	L_1044: ldloc.s 33 (BattleTech.Faction)
	L_1046: callvirt Void Add(BattleTech.Faction)
	L_104b: leave Label97
	L_1050: leave (autogenerated)
} // end try
.catch System.Object
{
	L_1055: pop
	L_1056: leave Label98
	L_105b: leave (autogenerated)
} // end handler
L_1060: Label97
L_1060: Label98
L_1060: ldloc.s 32 (System.Int32)
L_1062: ldc.i4.1
L_1063: add
L_1064: stloc.s 32 (System.Int32)
L_1066: Label96
L_1066: ldloc.s 32 (System.Int32)
L_1068: ldloc.0
L_1069: ldfld BattleTech.Save.SimGameSave save
L_106e: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
L_1073: callvirt Int32 get_Count()
L_1078: blt Label99
L_107d: Label95
L_107d: ldarg.0
L_107e: ldloc.0
L_107f: ldfld BattleTech.Save.SimGameSave save
L_1084: ldfld System.Boolean CareerModeLocked
L_1089: stfld System.Boolean careerModeLocked
L_108e: ldarg.0
L_108f: ldloc.0
L_1090: ldfld BattleTech.Save.SimGameSave save
L_1095: ldfld System.Int32 CareerModeFlashpointStartDate
L_109a: stfld System.Int32 careerModeFlashpointStartDate
L_109f: ldarg.0
L_10a0: ldc.i4.1
L_10a1: call Void SetFactionValidators(Boolean)
L_10a6: ldarg.0
L_10a7: ldarg.0
L_10a8: ldfld BattleTech.StatCollection companyStats
L_10ad: ldarg.0
L_10ae: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ActiveMechs
L_10b3: ldarg.0
L_10b4: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_10b9: call Void FixMechInMechbay(BattleTech.SimGameState, BattleTech.StatCollection, System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef], System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef])
L_10be: ret
DONE

### Patch BattleTech.UI.SkirmishMechBayPanel, Void LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest)
L_0000: ldarg.0
L_0001: call Void FixDefaults(BattleTech.UI.SkirmishMechBayPanel)
L_0006: ldarg.0
L_0007: ldc.i4.1
L_0008: call Void RefreshMechList(Boolean)
L_000d: ldarg.0
L_000e: call Void RefreshLanceList()
L_0013: ldarg.0
L_0014: ldnull
L_0015: call Void SelectLance(BattleTech.LanceDef)
L_001a: ldarg.0
L_001b: ldnull
L_001c: call Void SelectMech(BattleTech.MechDef)
L_0021: ldarg.0
L_0022: ldc.i4.1
L_0023: stfld System.Boolean initialized
L_0028: ldarg.0
L_0029: ldarg.0
L_002a: ldfld UnityEngine.GameObject mechPageObj
L_002f: callvirt DG.Tweening.DOTweenAnimation GetComponent[DOTweenAnimation]()
L_0034: stfld DG.Tweening.DOTweenAnimation mechPageAnimation
L_0039: ldarg.0
L_003a: ldarg.0
L_003b: ldfld UnityEngine.GameObject lancePageObj
L_0040: callvirt DG.Tweening.DOTweenAnimation GetComponent[DOTweenAnimation]()
L_0045: stfld DG.Tweening.DOTweenAnimation lancePageAnimation
L_004a: ldarg.0
L_004b: ldarg.0
L_004c: ldfld UnityEngine.GameObject lancePageObj
L_0051: callvirt UnityEngine.CanvasGroup GetComponent[CanvasGroup]()
L_0056: stfld UnityEngine.CanvasGroup lancePageCanvasGroup
L_005b: ldarg.0
L_005c: ldc.i4.1
L_005d: call Void ToggleLancePreview(Boolean)
L_0062: ldarg.0
L_0063: ldc.i4.0
L_0064: call Void ToggleMechInfo(Boolean)
L_0069: ldarg.0
L_006a: ldfld BattleTech.UI.HBSRadioSet lanceFiltersRadioSet
L_006f: callvirt Void Reset()
L_0074: ldarg.0
L_0075: ldc.i4.1
L_0076: stfld System.Boolean filterEnabledStock
L_007b: ldarg.0
L_007c: ldfld BattleTech.UI.HBSDOTweenToggle LanceStockToggleObj
L_0081: ldarg.0
L_0082: ldfld System.Boolean filterEnabledStock
L_0087: brtrue Label1
L_008c: ldc.i4.0
L_008d: br Label2
L_0092: Label1
L_0092: ldc.i4.1
L_0093: Label2
L_0093: ldc.i4.0
L_0094: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0099: pop
L_009a: ldarg.0
L_009b: call Void Filter_LanceAll()
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.HBSDOTweenToggle lanceTabBtn
L_00a6: callvirt Void ForceRadioSetSelection()
L_00ab: ldc.i4.1
L_00ac: call Void Hide(Boolean)
L_00b1: ret
DONE

### Patch BattleTech.UI.SkirmishSettings_Beta, Void OnLoadComplete(BattleTech.Data.LoadRequest)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.LanceSizeDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.LanceSizeDef
L_0000: Local var 3: BattleTech.UI.SkirmishSettings_Beta+<>c__DisplayClass25_0
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIManager uiManager
L_0007: ldarg.0
L_0008: ldflda System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_000d: call Void Prefix(BattleTech.UI.SkirmishSettings_Beta, BattleTech.UI.UIManager, System.Collections.Generic.List`1[BattleTech.MechDef] ByRef)
L_0012: ldarg.0
L_0013: newobj Void .ctor()
L_0018: stfld System.Collections.Generic.Dictionary`2[System.Int32,System.Collections.Generic.List`1[BattleTech.LanceDef]] lancesByBV
L_001d: newobj Void .ctor()
L_0022: stloc.0
L_0023: call System.Collections.Generic.List`1[BattleTech.LanceSizeDef] get_LanceSizeDefDefaultDefinitions()
L_0028: callvirt Enumerator GetEnumerator()
L_002d: stloc.1
.try
{
	L_002e: br Label1
	L_0033: Label2
	L_0033: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_0035: call BattleTech.LanceSizeDef get_Current()
	L_003a: stloc.2
	L_003b: newobj Void .ctor()
	L_0040: stloc.3
	L_0041: ldloc.3
	L_0042: ldloc.2
	L_0043: callvirt Int32 get_MaxCBills()
	L_0048: call HBS.Collections.TagSet GetTagsForCBillValue(Int32)
	L_004d: stfld HBS.Collections.TagSet cBillTags
	L_0052: ldarg.0
	L_0053: ldfld System.Collections.Generic.Dictionary`2[System.Int32,System.Collections.Generic.List`1[BattleTech.LanceDef]] lancesByBV
	L_0058: ldloc.2
	L_0059: callvirt Int32 get_MaxCBills()
	L_005e: ldarg.0
	L_005f: ldfld System.Collections.Generic.List`1[BattleTech.LanceDef] allLances
	L_0064: ldloc.3
	L_0065: ldftn Boolean <OnLoadComplete>b__0(BattleTech.LanceDef)
	L_006b: newobj Void .ctor(Object, IntPtr)
	L_0070: callvirt System.Collections.Generic.List`1[BattleTech.LanceDef] FindAll(System.Predicate`1[BattleTech.LanceDef])
	L_0075: callvirt Void Add(Int32, System.Collections.Generic.List`1[BattleTech.LanceDef])
	L_007a: ldloc.0
	L_007b: ldloc.2
	L_007c: ldfld System.String DisplayName
	L_0081: callvirt Void Add(System.String)
	L_0086: Label1
	L_0086: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_0088: call Boolean MoveNext()
	L_008d: brtrue Label2
	L_0092: leave Label3
	L_0097: leave (autogenerated)
} // end try
.finally
{
	L_009c: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_009e: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef]
	L_00a4: callvirt Void Dispose()
	L_00a9: endfinally
	L_00aa: leave (autogenerated)
} // end handler
L_00ab: Label3
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.UI.TMProWrapper.HBS_Dropdown lanceBudgetDropdown
L_00b1: callvirt Void ClearOptions()
L_00b6: ldarg.0
L_00b7: ldfld BattleTech.UI.TMProWrapper.HBS_Dropdown lanceBudgetDropdown
L_00bc: ldloc.0
L_00bd: callvirt Void AddOptions(System.Collections.Generic.List`1[System.String])
L_00c2: ldc.i4.s 41
L_00c4: ldnull
L_00c5: ldnull
L_00c6: call Boolean PlayComputerVO(BattleTech.ComputerVOEvents, EventCallback, System.Object)
L_00cb: pop
L_00cc: ldarg.0
L_00cd: ldfld BattleTech.UI.LancePreviewPanel playerLancePreview
L_00d2: ldc.i4.1
L_00d3: callvirt Void set_Visible(Boolean)
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.LancePreviewPanel opponentLancePreview
L_00de: ldc.i4.1
L_00df: callvirt Void set_Visible(Boolean)
L_00e4: ldarg.0
L_00e5: ldarg.0
L_00e6: ldfld System.Int32 battleValueIndex
L_00eb: call Void InitializeLanceModules(Int32)
L_00f0: ret
DONE

### Patch BattleTech.MechDef, Void InsertFixedEquipmentIntoInventory()
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: Local var 4: System.Guid
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldflda BattleTech.MechComponentRef[] inventory
L_0007: ldarg.0
L_0008: ldfld BattleTech.Data.DataManager dataManager
L_000d: call Boolean FIX(BattleTech.MechDef, BattleTech.MechComponentRef[] ByRef, BattleTech.Data.DataManager)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.ChassisDef get_Chassis()
L_001d: brtrue Label1
L_0022: br Label10
L_0027: Label1
L_0027: ldarg.0
L_0028: call BattleTech.ChassisDef get_Chassis()
L_002d: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_0032: brfalse Label2
L_0037: ldarg.0
L_0038: call BattleTech.ChassisDef get_Chassis()
L_003d: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_0042: ldlen
L_0043: brfalse Label3
L_0048: ldc.i4.0
L_0049: stloc.1
L_004a: br Label4
L_004f: Label7
L_004f: ldarg.0
L_0050: ldfld BattleTech.MechComponentRef[] inventory
L_0055: ldloc.1
L_0056: ldelem.ref
L_0057: callvirt System.String get_SimGameUID()
L_005c: call Boolean IsNullOrEmpty(System.String)
L_0061: brtrue Label5
L_0066: ldarg.0
L_0067: ldfld BattleTech.MechComponentRef[] inventory
L_006c: ldloc.1
L_006d: ldelem.ref
L_006e: callvirt System.String get_SimGameUID()
L_0073: ldstr "FixedEquipment"
L_0078: callvirt Boolean Contains(System.String)
L_007d: brfalse Label6
L_0082: ldarg.0
L_0083: ldfld BattleTech.MechComponentRef[] inventory
L_0088: ldloc.1
L_0089: ldelem.ref
L_008a: ldarg.0
L_008b: ldfld BattleTech.MechComponentRef[] inventory
L_0090: ldloc.1
L_0091: ldelem.ref
L_0092: callvirt Int32 get_HardpointSlot()
L_0097: ldarg.0
L_0098: ldfld BattleTech.MechComponentRef[] inventory
L_009d: ldloc.1
L_009e: ldelem.ref
L_009f: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00a4: ldc.i4.1
L_00a5: callvirt Void SetData(Int32, BattleTech.ComponentDamageLevel, Boolean)
L_00aa: br Label11
L_00af: Label5
L_00af: Label6
L_00af: ldloc.1
L_00b0: ldc.i4.1
L_00b1: add
L_00b2: stloc.1
L_00b3: Label4
L_00b3: ldloc.1
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.MechComponentRef[] inventory
L_00ba: ldlen
L_00bb: conv.i4
L_00bc: blt Label7
L_00c1: newobj Void .ctor()
L_00c6: stloc.0
L_00c7: ldc.i4.0
L_00c8: stloc.2
L_00c9: br Label8
L_00ce: Label9
L_00ce: ldarg.0
L_00cf: call BattleTech.ChassisDef get_Chassis()
L_00d4: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_00d9: ldloc.2
L_00da: ldelem.ref
L_00db: ldnull
L_00dc: newobj Void .ctor(MechComponentRef, String)
L_00e1: stloc.3
L_00e2: ldloc.3
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.Data.DataManager dataManager
L_00e9: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_00ee: ldloc.3
L_00ef: callvirt Void RefreshComponentDef()
L_00f4: ldloc.3
L_00f5: ldstr "FixedEquipment-{0}"
L_00fa: call System.Guid NewGuid()
L_00ff: stloc.s 4 (System.Guid)
L_0101: ldloca.s 4 (System.Guid)
L_0103: constrained. System.Guid
L_0109: callvirt System.String ToString()
L_010e: call System.String Format(System.String, System.Object)
L_0113: callvirt Void SetSimGameUID(System.String)
L_0118: ldloc.0
L_0119: ldloc.3
L_011a: callvirt Void Add(BattleTech.MechComponentRef)
L_011f: ldloc.2
L_0120: ldc.i4.1
L_0121: add
L_0122: stloc.2
L_0123: Label8
L_0123: ldloc.2
L_0124: ldarg.0
L_0125: call BattleTech.ChassisDef get_Chassis()
L_012a: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_012f: ldlen
L_0130: conv.i4
L_0131: blt Label9
L_0136: ldloc.0
L_0137: ldarg.0
L_0138: ldfld BattleTech.MechComponentRef[] inventory
L_013d: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef])
L_0142: ldarg.0
L_0143: ldloc.0
L_0144: callvirt BattleTech.MechComponentRef[] ToArray()
L_0149: stfld BattleTech.MechComponentRef[] inventory
L_014e: Label2
L_014e: Label3
L_014e: Label10
L_014e: Label11
L_014e: Label0
L_014e: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.String
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String
L_0000: Local var 9: BattleTech.ComponentType
L_0000: Local var 10: BattleTech.WeaponType
L_0000: Local var 11: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldnull
L_0001: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0003: ldstr "MechLab - {0} - {1}"
L_0008: ldc.i4.2
L_0009: newarr System.Object
L_000e: dup
L_000f: ldc.i4.0
L_0010: ldarg.3
L_0011: brtrue Label1
L_0016: ldstr "RemoveComponent"
L_001b: br Label2
L_0020: Label1
L_0020: ldstr "InstallComponent"
L_0025: Label2
L_0025: stelem.ref
L_0026: dup
L_0027: ldc.i4.1
L_0028: ldarg.0
L_0029: call System.String GenerateSimGameUID()
L_002e: stelem.ref
L_002f: call System.String T(System.String, System.Object[])
L_0034: stloc.0
L_0035: ldarg.2
L_0036: callvirt System.String get_SimGameUID()
L_003b: stloc.1
L_003c: ldloc.1
L_003d: call Boolean IsNullOrEmpty(System.String)
L_0042: brfalse Label3
L_0047: ldarg.0
L_0048: call System.String GenerateSimGameUID()
L_004d: stloc.1
L_004e: Label3
L_004e: ldarg.2
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt BattleTech.ComponentType get_ComponentType()
L_0059: stloc.s 9 (BattleTech.ComponentType)
L_005b: ldloc.s 9 (BattleTech.ComponentType)
L_005d: ldc.i4.1
L_005e: sub
L_005f: switch Labels4,5,6,7
L_0074: br Label8
L_0079: Label5
L_0079: ldarg.0
L_007a: call BattleTech.SimGameConstants get_Constants()
L_007f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0084: ldfld System.Int32 AmmoInstallTechPoints
L_0089: stloc.2
L_008a: ldarg.0
L_008b: call BattleTech.SimGameConstants get_Constants()
L_0090: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0095: ldfld System.Int32 AmmoInstallCost
L_009a: stloc.3
L_009b: br Label9
L_00a0: Label6
L_00a0: ldarg.0
L_00a1: call BattleTech.SimGameConstants get_Constants()
L_00a6: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00ab: ldfld System.Int32 HeatSinkInstallTechPoints
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: call BattleTech.SimGameConstants get_Constants()
L_00b7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00bc: ldfld System.Int32 HeatSinkInstallCost
L_00c1: stloc.3
L_00c2: br Label10
L_00c7: Label7
L_00c7: ldarg.0
L_00c8: call BattleTech.SimGameConstants get_Constants()
L_00cd: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00d2: ldfld System.Int32 JumpJetInstallTechPoints
L_00d7: stloc.2
L_00d8: ldarg.0
L_00d9: call BattleTech.SimGameConstants get_Constants()
L_00de: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00e3: ldfld System.Int32 JumpJetInstallCost
L_00e8: stloc.3
L_00e9: br Label11
L_00ee: Label4
L_00ee: ldarg.2
L_00ef: callvirt BattleTech.MechComponentDef get_Def()
L_00f4: castclass BattleTech.WeaponDef
L_00f9: callvirt BattleTech.WeaponType get_Type()
L_00fe: stloc.s 10 (BattleTech.WeaponType)
L_0100: ldloc.s 10 (BattleTech.WeaponType)
L_0102: ldc.i4.1
L_0103: sub
L_0104: switch Labels12,13,14,15,16,17,18,19
L_0129: br Label20
L_012e: Label12
L_012e: Label13
L_012e: Label19
L_012e: ldarg.0
L_012f: call BattleTech.SimGameConstants get_Constants()
L_0134: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0139: ldfld System.Int32 BallisticInstallTechPoints
L_013e: stloc.2
L_013f: ldarg.0
L_0140: call BattleTech.SimGameConstants get_Constants()
L_0145: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_014a: ldfld System.Int32 BallisticInstallCost
L_014f: stloc.3
L_0150: br Label21
L_0155: Label16
L_0155: Label17
L_0155: ldarg.0
L_0156: call BattleTech.SimGameConstants get_Constants()
L_015b: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0160: ldfld System.Int32 MissileInstallTechPoints
L_0165: stloc.2
L_0166: ldarg.0
L_0167: call BattleTech.SimGameConstants get_Constants()
L_016c: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0171: ldfld System.Int32 MissileInstallCost
L_0176: stloc.3
L_0177: br Label22
L_017c: Label14
L_017c: Label15
L_017c: ldarg.0
L_017d: call BattleTech.SimGameConstants get_Constants()
L_0182: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0187: ldfld System.Int32 EnergyInstallTechPoints
L_018c: stloc.2
L_018d: ldarg.0
L_018e: call BattleTech.SimGameConstants get_Constants()
L_0193: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0198: ldfld System.Int32 EnergyInstallCost
L_019d: stloc.3
L_019e: br Label23
L_01a3: Label18
L_01a3: ldarg.0
L_01a4: call BattleTech.SimGameConstants get_Constants()
L_01a9: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01ae: ldfld System.Int32 APInstallTechPoints
L_01b3: stloc.2
L_01b4: ldarg.0
L_01b5: call BattleTech.SimGameConstants get_Constants()
L_01ba: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01bf: ldfld System.Int32 APInstallCost
L_01c4: stloc.3
L_01c5: br Label24
L_01ca: Label20
L_01ca: ldarg.0
L_01cb: call BattleTech.SimGameConstants get_Constants()
L_01d0: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01d5: ldfld System.Int32 OtherInstallTechPoints
L_01da: stloc.2
L_01db: ldarg.0
L_01dc: call BattleTech.SimGameConstants get_Constants()
L_01e1: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01e6: ldfld System.Int32 OtherInstallCost
L_01eb: stloc.3
L_01ec: br Label25
L_01f1: Label8
L_01f1: ldarg.0
L_01f2: call BattleTech.SimGameConstants get_Constants()
L_01f7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01fc: ldfld System.Int32 OtherInstallTechPoints
L_0201: stloc.2
L_0202: ldarg.0
L_0203: call BattleTech.SimGameConstants get_Constants()
L_0208: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_020d: ldfld System.Int32 OtherInstallCost
L_0212: stloc.3
L_0213: Label9
L_0213: Label10
L_0213: Label11
L_0213: Label21
L_0213: Label22
L_0213: Label23
L_0213: Label24
L_0213: Label25
L_0213: ldarg.3
L_0214: brtrue Label26
L_0219: ldarg.0
L_021a: call BattleTech.SimGameConstants get_Constants()
L_021f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0224: ldfld System.Int32 UninstallTechPoints
L_0229: stloc.2
L_022a: Label26
L_022a: ldloc.2
L_022b: ldarg.2
L_022c: callvirt BattleTech.MechComponentDef get_Def()
L_0231: callvirt Int32 get_InventorySize()
L_0236: mul
L_0237: stloc.s 4 (System.Int32)
L_0239: ldloc.3
L_023a: ldarg.2
L_023b: callvirt BattleTech.MechComponentDef get_Def()
L_0240: callvirt Int32 get_InventorySize()
L_0245: mul
L_0246: stloc.s 5 (System.Int32)
L_0248: ldstr ""
L_024d: stloc.s 6 (System.String)
L_024f: ldarg.2
L_0250: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0255: ldc.i4.4
L_0256: bne.un Label27
L_025b: ldstr " Destroyed"
L_0260: stloc.s 6 (System.String)
L_0262: ldc.i4.0
L_0263: stloc.s 5 (System.Int32)
L_0265: Label27
L_0265: ldarg.3
L_0266: brtrue Label28
L_026b: ldstr "Remove"
L_0270: call System.String T(System.String)
L_0275: br Label29
L_027a: Label28
L_027a: ldstr "Install"
L_027f: call System.String T(System.String)
L_0284: Label29
L_0284: stloc.s 7 (System.String)
L_0286: ldarg.3
L_0287: brtrue Label30
L_028c: ldstr ""
L_0291: br Label31
L_0296: Label30
L_0296: ldarga.s 3
L_0298: constrained. BattleTech.ChassisLocations
L_029e: callvirt System.String ToString()
L_02a3: Label31
L_02a3: stloc.s 8 (System.String)
L_02a5: ldloc.0
L_02a6: ldstr "{0}{1} {2} Component - {3}"
L_02ab: ldc.i4.4
L_02ac: newarr System.Object
L_02b1: dup
L_02b2: ldc.i4.0
L_02b3: ldloc.s 7 (System.String)
L_02b5: stelem.ref
L_02b6: dup
L_02b7: ldc.i4.1
L_02b8: ldloc.s 6 (System.String)
L_02ba: stelem.ref
L_02bb: dup
L_02bc: ldc.i4.2
L_02bd: ldloc.s 8 (System.String)
L_02bf: stelem.ref
L_02c0: dup
L_02c1: ldc.i4.3
L_02c2: ldarg.2
L_02c3: callvirt BattleTech.MechComponentDef get_Def()
L_02c8: callvirt BattleTech.DescriptionDef get_Description()
L_02cd: callvirt System.String get_Name()
L_02d2: stelem.ref
L_02d3: call System.String T(System.String, System.Object[])
L_02d8: ldarg.1
L_02d9: ldarg.2
L_02da: ldloc.s 4 (System.Int32)
L_02dc: ldloc.1
L_02dd: ldarg.3
L_02de: ldarg.s 4
L_02e0: ldarg.2
L_02e1: callvirt Int32 get_HardpointSlot()
L_02e6: ldloc.s 5 (System.Int32)
L_02e8: ldstr ""
L_02ed: newobj Void .ctor(String, String, String, MechComponentRef, Int32, String, ChassisLocations, ChassisLocations, Int32, Int32, String)
L_02f2: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_02f4: ldarg.0
L_02f5: ldarg 1
L_02fb: ldarg 2
L_0301: ldarg 3
L_0307: ldarg 4
L_030d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_030f: call Void Postfix(BattleTech.SimGameState, System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, BattleTech.WorkOrderEntry_InstallComponent)
L_0314: ldarg.0
L_0315: ldarg 2
L_031b: ldarg 3
L_0321: ldarg 4
L_0327: ldarg 1
L_032d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_032f: call Void FixCost(BattleTech.SimGameState, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, System.String, BattleTech.WorkOrderEntry_InstallComponent)
L_0334: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0336: ret
DONE

### Patch BattleTech.SimGameState, Void RequestDataManagerResources()
L_0000: Local var 0: BattleTech.Data.LoadRequest
L_0000: Local var 1: BattleTech.VersionManifestAddendum
L_0000: Local var 2: BattleTech.VersionManifestAddendum
L_0000: Local var 3: System.String[]
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.String
L_0000: Local var 6: System.String
L_0000: Local var 7: System.Collections.IEnumerator
L_0000: Local var 8: BattleTech.SimGameCrew
L_0000: Local var 9: System.String
L_0000: Local var 10: System.IDisposable
L_0000: Local var 11: System.Collections.Generic.List`1+Enumerator[[BattleTech.Data.PilotDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 12: BattleTech.Data.PilotDef_MDD
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.VersionManifestEntry[]
L_0000: Local var 15: BattleTech.VersionManifestEntry
L_0000: Local var 16: BattleTech.VersionManifestEntry
L_0000: Local var 17: BattleTech.SimGameState+SimGameCharacterType
L_0000: Local var 18: System.String
L_0000: ldarg.0
L_0001: call Void Preload(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: call BattleTech.Data.DataManager get_DataManager()
L_000c: ldarg.0
L_000d: ldftn Void RespondToDefsLoadComplete(BattleTech.Data.LoadRequest)
L_0013: newobj Void .ctor(Object, IntPtr)
L_0018: ldc.i4.1
L_0019: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_001e: stloc.0
L_001f: ldloc.0
L_0020: ldc.i4.s 53
L_0022: ldc.i4.1
L_0023: newobj Void .ctor(Boolean)
L_0028: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_002d: ldloc.0
L_002e: ldc.i4.s 62
L_0030: ldc.i4.0
L_0031: newobj Void .ctor(Boolean)
L_0036: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_003b: ldloc.0
L_003c: ldc.i4.s 18
L_003e: ldc.i4.1
L_003f: newobj Void .ctor(Boolean)
L_0044: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0049: ldloc.0
L_004a: ldc.i4.s 58
L_004c: ldc.i4.0
L_004d: newobj Void .ctor(Boolean)
L_0052: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0057: ldloc.0
L_0058: ldc.i4.s 35
L_005a: ldc.i4.0
L_005b: newobj Void .ctor(Boolean)
L_0060: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0065: ldloc.0
L_0066: ldc.i4.s 49
L_0068: ldc.i4.0
L_0069: newobj Void .ctor(Boolean)
L_006e: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0073: ldloc.0
L_0074: ldc.i4.s 25
L_0076: ldc.i4.1
L_0077: newobj Void .ctor(Boolean)
L_007c: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0081: ldloc.0
L_0082: ldc.i4.s 26
L_0084: ldc.i4.1
L_0085: newobj Void .ctor(Boolean)
L_008a: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_008f: ldarg.0
L_0090: call BattleTech.SimGameConstants get_Constants()
L_0095: callvirt BattleTech.StoryConstantsDef get_Story()
L_009a: ldfld System.String[] StartingMechWarriors
L_009f: stloc.3
L_00a0: ldc.i4.0
L_00a1: stloc.s 4 (System.Int32)
L_00a3: br Label1
L_00a8: Label2
L_00a8: ldloc.3
L_00a9: ldloc.s 4 (System.Int32)
L_00ab: ldelem.ref
L_00ac: stloc.s 5 (System.String)
L_00ae: ldloc.0
L_00af: ldc.i4.s 43
L_00b1: ldloc.s 5 (System.String)
L_00b3: ldc.i4.0
L_00b4: newobj Void .ctor(Boolean)
L_00b9: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_00be: ldloc.s 4 (System.Int32)
L_00c0: ldc.i4.1
L_00c1: add
L_00c2: stloc.s 4 (System.Int32)
L_00c4: Label1
L_00c4: ldloc.s 4 (System.Int32)
L_00c6: ldloc.3
L_00c7: ldlen
L_00c8: conv.i4
L_00c9: blt Label2
L_00ce: ldarg.0
L_00cf: call BattleTech.SimGameConstants get_Constants()
L_00d4: callvirt BattleTech.StoryConstantsDef get_Story()
L_00d9: ldfld System.String[] StartingMechWarriorPortraits
L_00de: stloc.3
L_00df: ldc.i4.0
L_00e0: stloc.s 4 (System.Int32)
L_00e2: br Label3
L_00e7: Label4
L_00e7: ldloc.3
L_00e8: ldloc.s 4 (System.Int32)
L_00ea: ldelem.ref
L_00eb: stloc.s 6 (System.String)
L_00ed: ldloc.0
L_00ee: ldc.i4.s 44
L_00f0: ldloc.s 6 (System.String)
L_00f2: ldc.i4.0
L_00f3: newobj Void .ctor(Boolean)
L_00f8: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_00fd: ldloc.s 4 (System.Int32)
L_00ff: ldc.i4.1
L_0100: add
L_0101: stloc.s 4 (System.Int32)
L_0103: Label3
L_0103: ldloc.s 4 (System.Int32)
L_0105: ldloc.3
L_0106: ldlen
L_0107: conv.i4
L_0108: blt Label4
L_010d: ldloc.0
L_010e: ldc.i4.s 43
L_0110: ldarg.0
L_0111: call BattleTech.SimGameConstants get_Constants()
L_0116: callvirt BattleTech.StoryConstantsDef get_Story()
L_011b: ldfld System.String DefaultCommanderID
L_0120: ldc.i4.0
L_0121: newobj Void .ctor(Boolean)
L_0126: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_012b: ldloc.0
L_012c: ldc.i4.s 37
L_012e: ldc.i4.1
L_012f: newobj Void .ctor(Boolean)
L_0134: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0139: ldloc.0
L_013a: ldc.i4.s 61
L_013c: ldstr "uixTxrIcon_atlas"
L_0141: ldc.i4.0
L_0142: newobj Void .ctor(Boolean)
L_0147: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_014c: ldloc.0
L_014d: ldc.i4.s 61
L_014f: ldstr "uixTxrIcon_atlas"
L_0154: ldc.i4.0
L_0155: newobj Void .ctor(Boolean)
L_015a: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_015f: ldloc.0
L_0160: ldc.i4.s 61
L_0162: ldstr "uixTxrIcon_atlas"
L_0167: ldc.i4.0
L_0168: newobj Void .ctor(Boolean)
L_016d: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0172: ldloc.0
L_0173: ldc.i4.s 61
L_0175: ldstr "uixTxrIcon_atlas"
L_017a: ldc.i4.0
L_017b: newobj Void .ctor(Boolean)
L_0180: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0185: ldloc.0
L_0186: ldc.i4.s 61
L_0188: ldstr "uixTxrIcon_inOrbit"
L_018d: ldc.i4.0
L_018e: newobj Void .ctor(Boolean)
L_0193: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0198: ldloc.0
L_0199: ldc.i4.s 61
L_019b: ldstr "uixTxrIcon_roomArgo"
L_01a0: ldc.i4.0
L_01a1: newobj Void .ctor(Boolean)
L_01a6: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_01ab: ldloc.0
L_01ac: ldc.i4.s 61
L_01ae: ldstr "uixTxrIcon_atlas"
L_01b3: ldc.i4.0
L_01b4: newobj Void .ctor(Boolean)
L_01b9: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_01be: ldloc.0
L_01bf: ldc.i4.s 30
L_01c1: ldc.i4.0
L_01c2: newobj Void .ctor(Boolean)
L_01c7: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_01cc: ldloc.0
L_01cd: ldc.i4.s 51
L_01cf: ldc.i4.0
L_01d0: newobj Void .ctor(Boolean)
L_01d5: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_01da: ldloc.0
L_01db: ldc.i4.s 12
L_01dd: ldc.i4.0
L_01de: newobj Void .ctor(Boolean)
L_01e3: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_01e8: ldloc.0
L_01e9: ldc.i4.s 56
L_01eb: ldc.i4.0
L_01ec: newobj Void .ctor(Boolean)
L_01f1: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_01f6: ldloc.0
L_01f7: ldc.i4.7
L_01f8: ldc.i4.0
L_01f9: newobj Void .ctor(Boolean)
L_01fe: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0203: ldloc.0
L_0204: ldc.i4.s 54
L_0206: ldc.i4.0
L_0207: newobj Void .ctor(Boolean)
L_020c: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0211: ldloc.0
L_0212: ldc.i4.s 57
L_0214: ldc.i4.0
L_0215: newobj Void .ctor(Boolean)
L_021a: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_021f: ldloc.0
L_0220: ldc.i4.0
L_0221: ldc.i4.0
L_0222: newobj Void .ctor(Boolean)
L_0227: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_022c: ldloc.0
L_022d: ldc.i4.s 48
L_022f: ldc.i4.0
L_0230: newobj Void .ctor(Boolean)
L_0235: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_023a: ldloc.0
L_023b: ldc.i4.s 59
L_023d: ldc.i4.0
L_023e: newobj Void .ctor(Boolean)
L_0243: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0248: ldloc.0
L_0249: ldc.i4.s 44
L_024b: ldc.i4.0
L_024c: newobj Void .ctor(Boolean)
L_0251: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0256: ldloc.0
L_0257: ldc.i4.6
L_0258: ldc.i4.0
L_0259: newobj Void .ctor(Boolean)
L_025e: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0263: ldloc.0
L_0264: ldc.i4.s 72
L_0266: ldc.i4.0
L_0267: newobj Void .ctor(Boolean)
L_026c: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_0271: ldloc.0
L_0272: ldc.i4.s 29
L_0274: ldc.i4.0
L_0275: newobj Void .ctor(Boolean)
L_027a: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_027f: ldloc.0
L_0280: ldc.i4.s 69
L_0282: ldc.i4.0
L_0283: newobj Void .ctor(Boolean)
L_0288: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_028d: ldloc.0
L_028e: ldc.i4.s 9
L_0290: ldc.i4.0
L_0291: newobj Void .ctor(Boolean)
L_0296: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_029b: ldloc.0
L_029c: ldc.i4.s 52
L_029e: ldstr "DifficultySettings"
L_02a3: ldc.i4.0
L_02a4: newobj Void .ctor(Boolean)
L_02a9: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_02ae: ldloc.0
L_02af: ldc.i4.s 52
L_02b1: ldstr "CareerDifficultySettings"
L_02b6: ldc.i4.0
L_02b7: newobj Void .ctor(Boolean)
L_02bc: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_02c1: ldtoken BattleTech.SimGameCrew
L_02c6: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_02cb: call System.Array GetValues(System.Type)
L_02d0: callvirt System.Collections.IEnumerator GetEnumerator()
L_02d5: stloc.s 7 (System.Collections.IEnumerator)
.try
{
	L_02d7: br Label5
	L_02dc: Label6
	L_02dc: ldloc.s 7 (System.Collections.IEnumerator)
	L_02de: callvirt System.Object get_Current()
	L_02e3: unbox.any BattleTech.SimGameCrew
	L_02e8: stloc.s 8 (BattleTech.SimGameCrew)
	L_02ea: ldstr "{0}{1}{2}"
	L_02ef: ldstr "castDef_"
	L_02f4: ldloca.s 8 (BattleTech.SimGameCrew)
	L_02f6: constrained. BattleTech.SimGameCrew
	L_02fc: callvirt System.String ToString()
	L_0301: ldstr "Crew_"
	L_0306: call Int32 get_Length()
	L_030b: callvirt System.String Substring(Int32)
	L_0310: ldstr "Default"
	L_0315: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_031a: stloc.s 9 (System.String)
	L_031c: ldloc.0
	L_031d: ldc.i4.s 12
	L_031f: ldloc.s 9 (System.String)
	L_0321: ldc.i4.0
	L_0322: newobj Void .ctor(Boolean)
	L_0327: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
	L_032c: Label5
	L_032c: ldloc.s 7 (System.Collections.IEnumerator)
	L_032e: callvirt Boolean MoveNext()
	L_0333: brtrue Label6
	L_0338: leave Label7
	L_033d: leave (autogenerated)
} // end try
.finally
{
	L_0342: ldloc.s 7 (System.Collections.IEnumerator)
	L_0344: isinst System.IDisposable
	L_0349: stloc.s 10 (System.IDisposable)
	L_034b: ldloc.s 10 (System.IDisposable)
	L_034d: brfalse Label8
	L_0352: ldloc.s 10 (System.IDisposable)
	L_0354: callvirt Void Dispose()
	L_0359: Label8
	L_0359: endfinally
	L_035a: leave (autogenerated)
} // end handler
L_035b: Label7
L_035b: ldloc.0
L_035c: ldc.i4.s 37
L_035e: ldarg.0
L_035f: call BattleTech.SimGameConstants get_Constants()
L_0364: callvirt BattleTech.StoryConstantsDef get_Story()
L_0369: ldfld System.String StartingPlayerMech
L_036e: ldc.i4.0
L_036f: newobj Void .ctor(Boolean)
L_0374: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0379: ldloc.0
L_037a: ldc.i4.s 27
L_037c: ldarg.0
L_037d: call BattleTech.SimGameConstants get_Constants()
L_0382: callvirt BattleTech.PilotConstantsDef get_Pilot()
L_0387: ldfld System.String PilotPortraits
L_038c: ldc.i4.0
L_038d: newobj Void .ctor(Boolean)
L_0392: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0397: ldloc.0
L_0398: ldc.i4.s 27
L_039a: ldarg.0
L_039b: call BattleTech.SimGameConstants get_Constants()
L_03a0: callvirt BattleTech.PilotConstantsDef get_Pilot()
L_03a5: ldfld System.String PilotVoices
L_03aa: ldc.i4.0
L_03ab: newobj Void .ctor(Boolean)
L_03b0: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_03b5: ldloc.0
L_03b6: ldc.i4.s 37
L_03b8: ldarg.0
L_03b9: call BattleTech.SimGameConstants get_Constants()
L_03be: callvirt BattleTech.StoryConstantsDef get_Story()
L_03c3: ldfld System.String StartingPlayerMech
L_03c8: ldc.i4.0
L_03c9: newobj Void .ctor(Boolean)
L_03ce: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_03d3: ldloc.0
L_03d4: ldc.i4.s 27
L_03d6: ldarg.0
L_03d7: call BattleTech.SimGameConstants get_Constants()
L_03dc: callvirt BattleTech.PilotConstantsDef get_Pilot()
L_03e1: ldfld System.String PilotPortraits
L_03e6: ldc.i4.0
L_03e7: newobj Void .ctor(Boolean)
L_03ec: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_03f1: ldloc.0
L_03f2: ldc.i4.s 27
L_03f4: ldarg.0
L_03f5: call BattleTech.SimGameConstants get_Constants()
L_03fa: callvirt BattleTech.PilotConstantsDef get_Pilot()
L_03ff: ldfld System.String PilotVoices
L_0404: ldc.i4.0
L_0405: newobj Void .ctor(Boolean)
L_040a: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_040f: call BattleTech.Data.MetadataDatabase get_Instance()
L_0414: ldc.i4.1
L_0415: call System.Collections.Generic.List`1[BattleTech.Data.PilotDef_MDD] GetRoninPilotDefs(BattleTech.Data.MetadataDatabase, Boolean)
L_041a: callvirt Enumerator GetEnumerator()
L_041f: stloc.s 11 (System.Collections.Generic.List`1+Enumerator[BattleTech.Data.PilotDef_MDD])
.try
{
	L_0421: br Label9
	L_0426: Label10
	L_0426: ldloca.s 11 (System.Collections.Generic.List`1+Enumerator[BattleTech.Data.PilotDef_MDD])
	L_0428: call BattleTech.Data.PilotDef_MDD get_Current()
	L_042d: stloc.s 12 (BattleTech.Data.PilotDef_MDD)
	L_042f: ldloc.0
	L_0430: ldc.i4.s 43
	L_0432: ldloc.s 12 (BattleTech.Data.PilotDef_MDD)
	L_0434: callvirt System.String get_PilotDefID()
	L_0439: ldc.i4.0
	L_043a: newobj Void .ctor(Boolean)
	L_043f: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
	L_0444: Label9
	L_0444: ldloca.s 11 (System.Collections.Generic.List`1+Enumerator[BattleTech.Data.PilotDef_MDD])
	L_0446: call Boolean MoveNext()
	L_044b: brtrue Label10
	L_0450: leave Label11
	L_0455: leave (autogenerated)
} // end try
.finally
{
	L_045a: ldloca.s 11 (System.Collections.Generic.List`1+Enumerator[BattleTech.Data.PilotDef_MDD])
	L_045c: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Data.PilotDef_MDD]
	L_0462: callvirt Void Dispose()
	L_0467: endfinally
	L_0468: leave (autogenerated)
} // end handler
L_0469: Label11
L_0469: ldloc.0
L_046a: ldc.i4.s 63
L_046c: ldstr "uixSvgIcon_mwrank_Ronin"
L_0471: ldc.i4.0
L_0472: newobj Void .ctor(Boolean)
L_0477: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_047c: ldloc.0
L_047d: ldc.i4.s 63
L_047f: ldstr "uixSvgIcon_mwrank_KSBacker"
L_0484: ldc.i4.0
L_0485: newobj Void .ctor(Boolean)
L_048a: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_048f: ldloc.0
L_0490: ldc.i4.s 63
L_0492: ldstr "uixSvgIcon_mwrank_Commander"
L_0497: ldc.i4.0
L_0498: newobj Void .ctor(Boolean)
L_049d: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_04a2: ldc.i4.0
L_04a3: stloc.s 13 (System.Int32)
L_04a5: br Label12
L_04aa: Label13
L_04aa: ldloc.0
L_04ab: ldc.i4.s 63
L_04ad: ldstr "{0}{1}{2}"
L_04b2: ldstr "uixSvgIcon_mwrank_"
L_04b7: ldstr "Rank"
L_04bc: ldloc.s 13 (System.Int32)
L_04be: ldc.i4.1
L_04bf: add
L_04c0: box System.Int32
L_04c5: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_04ca: ldc.i4.0
L_04cb: newobj Void .ctor(Boolean)
L_04d0: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_04d5: ldloc.s 13 (System.Int32)
L_04d7: ldc.i4.1
L_04d8: add
L_04d9: stloc.s 13 (System.Int32)
L_04db: Label12
L_04db: ldloc.s 13 (System.Int32)
L_04dd: ldc.i4.5
L_04de: blt Label13
L_04e3: ldloc.0
L_04e4: ldc.i4.s 63
L_04e6: ldstr "uixSvgIcon_generic_MechPart"
L_04eb: ldc.i4.0
L_04ec: newobj Void .ctor(Boolean)
L_04f1: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_04f6: ldarg.0
L_04f7: call BattleTech.Data.DataManager get_DataManager()
L_04fc: callvirt BattleTech.BattleTechResourceLocator get_ResourceLocator()
L_0501: ldarg.0
L_0502: ldfld System.String CONVERSATION_TEXTURE_ADDENDUM
L_0507: callvirt BattleTech.VersionManifestAddendum GetAddendumByName(System.String)
L_050c: stloc.1
L_050d: ldarg.0
L_050e: call BattleTech.Data.DataManager get_DataManager()
L_0513: callvirt BattleTech.BattleTechResourceLocator get_ResourceLocator()
L_0518: ldc.i4.s 65
L_051a: ldloc.1
L_051b: ldc.i4.0
L_051c: callvirt BattleTech.VersionManifestEntry[] AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType, BattleTech.VersionManifestAddendum, Boolean)
L_0521: stloc.s 14 (BattleTech.VersionManifestEntry[])
L_0523: ldc.i4.0
L_0524: stloc.s 4 (System.Int32)
L_0526: br Label14
L_052b: Label15
L_052b: ldloc.s 14 (BattleTech.VersionManifestEntry[])
L_052d: ldloc.s 4 (System.Int32)
L_052f: ldelem.ref
L_0530: stloc.s 15 (BattleTech.VersionManifestEntry)
L_0532: ldloc.0
L_0533: ldc.i4.s 65
L_0535: ldloc.s 15 (BattleTech.VersionManifestEntry)
L_0537: callvirt System.String get_Id()
L_053c: ldc.i4.0
L_053d: newobj Void .ctor(Boolean)
L_0542: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_0547: ldloc.s 4 (System.Int32)
L_0549: ldc.i4.1
L_054a: add
L_054b: stloc.s 4 (System.Int32)
L_054d: Label14
L_054d: ldloc.s 4 (System.Int32)
L_054f: ldloc.s 14 (BattleTech.VersionManifestEntry[])
L_0551: ldlen
L_0552: conv.i4
L_0553: blt Label15
L_0558: ldarg.0
L_0559: call BattleTech.Data.DataManager get_DataManager()
L_055e: callvirt BattleTech.BattleTechResourceLocator get_ResourceLocator()
L_0563: ldarg.0
L_0564: ldfld System.String PLAYER_CREST_ADDENDUM
L_0569: callvirt BattleTech.VersionManifestAddendum GetAddendumByName(System.String)
L_056e: stloc.2
L_056f: ldarg.0
L_0570: call BattleTech.Data.DataManager get_DataManager()
L_0575: callvirt BattleTech.BattleTechResourceLocator get_ResourceLocator()
L_057a: ldc.i4.s 61
L_057c: ldloc.2
L_057d: ldc.i4.0
L_057e: callvirt BattleTech.VersionManifestEntry[] AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType, BattleTech.VersionManifestAddendum, Boolean)
L_0583: stloc.s 14 (BattleTech.VersionManifestEntry[])
L_0585: ldc.i4.0
L_0586: stloc.s 4 (System.Int32)
L_0588: br Label16
L_058d: Label17
L_058d: ldloc.s 14 (BattleTech.VersionManifestEntry[])
L_058f: ldloc.s 4 (System.Int32)
L_0591: ldelem.ref
L_0592: stloc.s 16 (BattleTech.VersionManifestEntry)
L_0594: ldloc.0
L_0595: ldc.i4.s 61
L_0597: ldloc.s 16 (BattleTech.VersionManifestEntry)
L_0599: callvirt System.String get_Id()
L_059e: ldc.i4.0
L_059f: newobj Void .ctor(Boolean)
L_05a4: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_05a9: ldloc.s 4 (System.Int32)
L_05ab: ldc.i4.1
L_05ac: add
L_05ad: stloc.s 4 (System.Int32)
L_05af: Label16
L_05af: ldloc.s 4 (System.Int32)
L_05b1: ldloc.s 14 (BattleTech.VersionManifestEntry[])
L_05b3: ldlen
L_05b4: conv.i4
L_05b5: blt Label17
L_05ba: ldarg.0
L_05bb: ldarg.0
L_05bc: call BattleTech.SimGameConstants get_Constants()
L_05c1: callvirt BattleTech.HeraldryDef get_Player1sMercUnitHeraldryDef()
L_05c6: stfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_05cb: ldarg.0
L_05cc: ldfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_05d1: ldarg.0
L_05d2: call BattleTech.Data.DataManager get_DataManager()
L_05d7: ldnull
L_05d8: callvirt Void RequestResources(BattleTech.Data.DataManager, System.Action)
L_05dd: ldtoken BattleTech.SimGameState+SimGameCharacterType
L_05e2: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_05e7: call System.Array GetValues(System.Type)
L_05ec: callvirt System.Collections.IEnumerator GetEnumerator()
L_05f1: stloc.s 7 (System.Collections.IEnumerator)
.try
{
	L_05f3: br Label18
	L_05f8: Label21
	L_05f8: ldloc.s 7 (System.Collections.IEnumerator)
	L_05fa: callvirt System.Object get_Current()
	L_05ff: unbox.any BattleTech.SimGameState+SimGameCharacterType
	L_0604: stloc.s 17 (BattleTech.SimGameState+SimGameCharacterType)
	L_0606: ldloc.s 17 (BattleTech.SimGameState+SimGameCharacterType)
	L_0608: brfalse Label19
	L_060d: ldstr "TooltipSimGameCharacter"
	L_0612: ldloca.s 17 (BattleTech.SimGameState+SimGameCharacterType)
	L_0614: constrained. BattleTech.SimGameState+SimGameCharacterType
	L_061a: callvirt System.String ToString()
	L_061f: call System.String Concat(System.String, System.String)
	L_0624: stloc.s 18 (System.String)
	L_0626: ldarg.0
	L_0627: call BattleTech.Data.DataManager get_DataManager()
	L_062c: callvirt BattleTech.BattleTechResourceLocator get_ResourceLocator()
	L_0631: ldloc.s 18 (System.String)
	L_0633: ldc.i4.7
	L_0634: ldc.i4.0
	L_0635: callvirt BattleTech.VersionManifestEntry EntryByID(System.String, BattleTech.BattleTechResourceType, Boolean)
	L_063a: brfalse Label20
	L_063f: ldloc.0
	L_0640: ldc.i4.s 9
	L_0642: ldloc.s 18 (System.String)
	L_0644: ldc.i4.0
	L_0645: newobj Void .ctor(Boolean)
	L_064a: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
	L_064f: Label18
	L_064f: Label19
	L_064f: Label20
	L_064f: ldloc.s 7 (System.Collections.IEnumerator)
	L_0651: callvirt Boolean MoveNext()
	L_0656: brtrue Label21
	L_065b: leave Label22
	L_0660: leave (autogenerated)
} // end try
.finally
{
	L_0665: ldloc.s 7 (System.Collections.IEnumerator)
	L_0667: isinst System.IDisposable
	L_066c: stloc.s 10 (System.IDisposable)
	L_066e: ldloc.s 10 (System.IDisposable)
	L_0670: brfalse Label23
	L_0675: ldloc.s 10 (System.IDisposable)
	L_0677: callvirt Void Dispose()
	L_067c: Label23
	L_067c: endfinally
	L_067d: leave (autogenerated)
} // end handler
L_067e: Label22
L_067e: ldloc.0
L_067f: ldc.i4.s 31
L_0681: ldc.i4.1
L_0682: newobj Void .ctor(Boolean)
L_0687: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_068c: ldloc.0
L_068d: ldc.i4.s 60
L_068f: ldstr "careerModeAllLightChassis"
L_0694: ldc.i4.0
L_0695: newobj Void .ctor(Boolean)
L_069a: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_069f: ldloc.0
L_06a0: ldc.i4.s 60
L_06a2: ldstr "careerModeAllMediumChassis"
L_06a7: ldc.i4.0
L_06a8: newobj Void .ctor(Boolean)
L_06ad: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_06b2: ldloc.0
L_06b3: ldc.i4.s 60
L_06b5: ldstr "careerModeAllHeavyChassis"
L_06ba: ldc.i4.0
L_06bb: newobj Void .ctor(Boolean)
L_06c0: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_06c5: ldloc.0
L_06c6: ldc.i4.s 60
L_06c8: ldstr "careerModeAllAssaultChassis"
L_06cd: ldc.i4.0
L_06ce: newobj Void .ctor(Boolean)
L_06d3: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_06d8: ldloc.0
L_06d9: ldc.i4.s 61
L_06db: ldstr "uixTxrSpot_flashpointExample"
L_06e0: ldc.i4.0
L_06e1: newobj Void .ctor(Boolean)
L_06e6: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_06eb: ldloc.0
L_06ec: ldc.i4.s 61
L_06ee: ldstr "uixTxrSpot_StarmapV2-Example"
L_06f3: ldc.i4.0
L_06f4: newobj Void .ctor(Boolean)
L_06f9: callvirt Void AddBlindLoadRequest(BattleTech.BattleTechResourceType, System.String, System.Nullable`1[System.Boolean])
L_06fe: ldloc.0
L_06ff: ldc.i4.s 10
L_0701: callvirt Void ProcessRequests(UInt32)
L_0706: ret
DONE

### Patch BattleTech.Data.DataManager, Void Clear(Boolean, Boolean, Boolean, Boolean, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg 1
L_0006: call Void Prefix(Boolean)
L_000b: ldarg.s 5
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: newobj Void .ctor()
L_0018: stfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] activeLoadBatches
L_001d: ldarg.0
L_001e: newobj Void .ctor()
L_0023: stfld System.Collections.Generic.Dictionary`2[BattleTech.VersionManifestEntry,System.Collections.Generic.List`1[BattleTech.Data.LoadRequest]] activeBatchManifestMap
L_0028: ldarg.0
L_0029: newobj Void .ctor()
L_002e: stfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+InjectedDependencyLoadRequest] injectedDepenencyLoaders
L_0033: ldarg.0
L_0034: newobj Void .ctor()
L_0039: stfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] loadRequestCache
L_003e: ldc.i4.0
L_003f: stloc.0
L_0040: br Label2
L_0045: Label3
L_0045: ldarg.0
L_0046: ldfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] loadRequestCache
L_004b: ldarg.0
L_004c: newobj Void .ctor(DataManager)
L_0051: callvirt Void Add(BattleTech.Data.LoadRequest)
L_0056: ldloc.0
L_0057: ldc.i4.1
L_0058: add
L_0059: stloc.0
L_005a: Label2
L_005a: ldloc.0
L_005b: ldc.i4.s 100
L_005d: blt Label3
L_0062: ldarg.0
L_0063: newobj Void .ctor()
L_0068: stfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+DependencyLoadRequest] dependencyLoadRequestCache
L_006d: ldc.i4.0
L_006e: stloc.1
L_006f: br Label4
L_0074: Label5
L_0074: ldarg.0
L_0075: ldfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+DependencyLoadRequest] dependencyLoadRequestCache
L_007a: ldarg.0
L_007b: newobj Void .ctor(DataManager)
L_0080: callvirt Void Add(DependencyLoadRequest)
L_0085: ldloc.1
L_0086: ldc.i4.1
L_0087: add
L_0088: stloc.1
L_0089: Label4
L_0089: ldloc.1
L_008a: ldc.i4.s 100
L_008c: blt Label5
L_0091: Label1
L_0091: ldarg.1
L_0092: brfalse Label6
L_0097: ldarg.0
L_0098: call Void ClearBTDefs()
L_009d: Label6
L_009d: ldarg.2
L_009e: brfalse Label7
L_00a3: ldarg.0
L_00a4: call BattleTech.Data.SpriteCache get_SpriteCache()
L_00a9: ldnull
L_00aa: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00af: brfalse Label8
L_00b4: ldarg.0
L_00b5: call BattleTech.Data.SpriteCache get_SpriteCache()
L_00ba: callvirt Void Clear()
L_00bf: Label8
L_00bf: ldarg.0
L_00c0: call BattleTech.Data.TextureManager get_TextureManager()
L_00c5: ldnull
L_00c6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00cb: brfalse Label9
L_00d0: ldarg.0
L_00d1: call BattleTech.Data.TextureManager get_TextureManager()
L_00d6: callvirt Void Clear()
L_00db: Label9
L_00db: ldarg.0
L_00dc: call BattleTech.Data.SVGCache get_SVGCache()
L_00e1: ldnull
L_00e2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00e7: brfalse Label10
L_00ec: ldarg.0
L_00ed: call BattleTech.Data.SVGCache get_SVGCache()
L_00f2: callvirt Void Clear()
L_00f7: Label10
L_00f7: ldarg.0
L_00f8: call BattleTech.Portraits.PortraitManager get_PortraitManager()
L_00fd: ldnull
L_00fe: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0103: brfalse Label11
L_0108: ldarg.0
L_0109: call BattleTech.Portraits.PortraitManager get_PortraitManager()
L_010e: callvirt Void Clear()
L_0113: Label7
L_0113: Label11
L_0113: ldarg.s 4
L_0115: brfalse Label12
L_011a: ldarg.0
L_011b: call BattleTech.Assetbundles.AssetBundleManager get_AssetBundleManager()
L_0120: ldnull
L_0121: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0126: brfalse Label13
L_012b: ldarg.0
L_012c: call BattleTech.Assetbundles.AssetBundleManager get_AssetBundleManager()
L_0131: callvirt Void AutoUnloadAll()
L_0136: Label12
L_0136: Label13
L_0136: ldarg.3
L_0137: brfalse Label14
L_013c: ldarg.0
L_013d: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0142: ldnull
L_0143: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0148: brfalse Label15
L_014d: ldarg.0
L_014e: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0153: ldnull
L_0154: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0159: brfalse Label16
L_015e: ldarg.0
L_015f: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0164: callvirt Void Clear()
L_0169: Label14
L_0169: Label15
L_0169: Label16
L_0169: call UnityEngine.AsyncOperation UnloadUnusedAssets()
L_016e: pop
L_016f: ret
DONE

### Harmony id=io.github.denadan.CustomSalvage, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CustomSalvage.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomSalvage\CustomSalvage.dll
### At 2019-09-15 05.05.13
### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg 1
L_002f: ldarg 2
L_0035: ldarg 3
L_003b: ldarg 4
L_0041: ldarg.0
L_0042: ldarg.0
L_0043: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0048: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_004d: brfalse Label0
L_0052: ldarg.0
L_0053: ldarg.s 4
L_0055: stfld System.Boolean loggingSalvageResults
L_005a: ldarg.0
L_005b: call BattleTech.GameInstance get_BattleTechGame()
L_0060: callvirt BattleTech.SimGameState get_Simulation()
L_0065: brtrue Label1
L_006a: ldsfld HBS.Logging.ILog logger
L_006f: ldstr "Can't generate salvage without sim game."
L_0074: callvirt Void LogError(System.Object)
L_0079: br Label57
L_007e: Label1
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0089: ldarg.0
L_008a: newobj Void .ctor()
L_008f: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0094: ldarg.0
L_0095: newobj Void .ctor()
L_009a: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_009f: ldarg.0
L_00a0: newobj Void .ctor()
L_00a5: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_00aa: ldarg.0
L_00ab: call BattleTech.GameInstance get_BattleTechGame()
L_00b0: callvirt BattleTech.SimGameState get_Simulation()
L_00b5: stloc.0
L_00b6: ldloc.0
L_00b7: callvirt BattleTech.SimGameConstants get_Constants()
L_00bc: stloc.1
L_00bd: ldc.i4.0
L_00be: stloc.s 8 (System.Int32)
L_00c0: br Label2
L_00c5: Label9
L_00c5: ldarg.3
L_00c6: ldloc.s 8 (System.Int32)
L_00c8: callvirt BattleTech.UnitResult get_Item(Int32)
L_00cd: ldfld BattleTech.MechDef mech
L_00d2: stloc.s 9 (BattleTech.MechDef)
L_00d4: ldloc.0
L_00d5: callvirt NetworkRandom get_NetworkRandom()
L_00da: ldc.r4 0
L_00df: ldc.r4 1
L_00e4: callvirt Single Float(Single, Single)
L_00e9: stloc.s 10 (System.Single)
L_00eb: ldloc.s 10 (System.Single)
L_00ed: ldloc.1
L_00ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00f3: ldfld System.Single DestroyedMechRecoveryChance
L_00f8: cgt.un
L_00fa: ldc.i4.0
L_00fb: ceq
L_00fd: stloc.s 11 (System.Boolean)
L_00ff: ldsfld HBS.Logging.ILog logger
L_0104: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_0109: ldloc.s 8 (System.Int32)
L_010b: box System.Int32
L_0110: ldloc.s 9 (BattleTech.MechDef)
L_0112: callvirt BattleTech.DescriptionDef get_Description()
L_0117: callvirt System.String get_Name()
L_011c: ldloc.s 9 (BattleTech.MechDef)
L_011e: ldc.i4.8
L_011f: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0124: box System.Boolean
L_0129: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012e: callvirt Void LogWarning(System.Object)
L_0133: ldsfld HBS.Logging.ILog logger
L_0138: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_013d: ldloc.s 10 (System.Single)
L_013f: box System.Single
L_0144: ldloc.1
L_0145: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_014a: ldfld System.Single DestroyedMechRecoveryChance
L_014f: box System.Single
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: callvirt Void LogWarning(System.Object)
L_015e: ldloc.s 9 (BattleTech.MechDef)
L_0160: ldc.i4.8
L_0161: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0166: ldc.i4.0
L_0167: ceq
L_0169: ldloc.s 11 (System.Boolean)
L_016b: or
L_016c: brfalse Label3
L_0171: ldsfld HBS.Logging.ILog logger
L_0176: ldstr "Recovery Succeeded"
L_017b: callvirt Void LogWarning(System.Object)
L_0180: ldarg.3
L_0181: ldloc.s 8 (System.Int32)
L_0183: callvirt BattleTech.UnitResult get_Item(Int32)
L_0188: ldc.i4.0
L_0189: stfld System.Boolean mechLost
L_018e: br Label4
L_0193: Label3
L_0193: ldsfld HBS.Logging.ILog logger
L_0198: ldstr "Recovery Failed, Unit Lost"
L_019d: callvirt Void LogWarning(System.Object)
L_01a2: ldarg.3
L_01a3: ldloc.s 8 (System.Int32)
L_01a5: callvirt BattleTech.UnitResult get_Item(Int32)
L_01aa: ldc.i4.1
L_01ab: stfld System.Boolean mechLost
L_01b0: ldloc.s 9 (BattleTech.MechDef)
L_01b2: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_01b7: stloc.s 12 (BattleTech.MechComponentRef[])
L_01b9: ldc.i4.0
L_01ba: stloc.s 13 (System.Int32)
L_01bc: br Label5
L_01c1: Label8
L_01c1: ldloc.s 12 (BattleTech.MechComponentRef[])
L_01c3: ldloc.s 13 (System.Int32)
L_01c5: ldelem.ref
L_01c6: stloc.s 14 (BattleTech.MechComponentRef)
L_01c8: ldloc.s 9 (BattleTech.MechDef)
L_01ca: ldloc.s 14 (BattleTech.MechComponentRef)
L_01cc: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d1: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_01d6: brtrue Label6
L_01db: ldloc.s 14 (BattleTech.MechComponentRef)
L_01dd: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01e2: ldc.i4.4
L_01e3: beq Label7
L_01e8: newobj Void .ctor()
L_01ed: stloc.s 15 (BattleTech.SalvageDef)
L_01ef: ldloc.s 15 (BattleTech.SalvageDef)
L_01f1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01f3: callvirt BattleTech.MechComponentDef get_Def()
L_01f8: stfld BattleTech.MechComponentDef MechComponentDef
L_01fd: ldloc.s 15 (BattleTech.SalvageDef)
L_01ff: ldloc.s 14 (BattleTech.MechComponentRef)
L_0201: callvirt BattleTech.MechComponentDef get_Def()
L_0206: callvirt BattleTech.DescriptionDef get_Description()
L_020b: newobj Void .ctor(DescriptionDef)
L_0210: stfld BattleTech.DescriptionDef Description
L_0215: ldloc.s 15 (BattleTech.SalvageDef)
L_0217: ldarg.0
L_0218: call System.String GenerateRewardUID()
L_021d: stfld System.String RewardID
L_0222: ldloc.s 15 (BattleTech.SalvageDef)
L_0224: ldc.i4.1
L_0225: stfld BattleTech.SalvageDef+SalvageType Type
L_022a: ldloc.s 15 (BattleTech.SalvageDef)
L_022c: ldloc.s 14 (BattleTech.MechComponentRef)
L_022e: callvirt BattleTech.MechComponentDef get_Def()
L_0233: callvirt BattleTech.ComponentType get_ComponentType()
L_0238: stfld BattleTech.ComponentType ComponentType
L_023d: ldloc.s 15 (BattleTech.SalvageDef)
L_023f: ldc.i4.0
L_0240: stfld System.Boolean Damaged
L_0245: ldloc.s 15 (BattleTech.SalvageDef)
L_0247: ldc.i4.1
L_0248: stfld System.Int32 Count
L_024d: ldarg.0
L_024e: ldloc.s 15 (BattleTech.SalvageDef)
L_0250: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_0255: Label6
L_0255: Label7
L_0255: ldloc.s 13 (System.Int32)
L_0257: ldc.i4.1
L_0258: add
L_0259: stloc.s 13 (System.Int32)
L_025b: Label5
L_025b: ldloc.s 13 (System.Int32)
L_025d: ldloc.s 12 (BattleTech.MechComponentRef[])
L_025f: ldlen
L_0260: conv.i4
L_0261: blt Label8
L_0266: Label4
L_0266: ldloc.s 8 (System.Int32)
L_0268: ldc.i4.1
L_0269: add
L_026a: stloc.s 8 (System.Int32)
L_026c: Label2
L_026c: ldloc.s 8 (System.Int32)
L_026e: ldarg.3
L_026f: callvirt Int32 get_Count()
L_0274: blt Label9
L_0279: ldc.i4.0
L_027a: stloc.s 16 (System.Int32)
L_027c: br Label10
L_0281: Label36
L_0281: ldarg.1
L_0282: ldloc.s 16 (System.Int32)
L_0284: callvirt BattleTech.UnitResult get_Item(Int32)
L_0289: ldfld BattleTech.MechDef mech
L_028e: stloc.s 17 (BattleTech.MechDef)
L_0290: ldarg.1
L_0291: ldloc.s 16 (System.Int32)
L_0293: callvirt BattleTech.UnitResult get_Item(Int32)
L_0298: ldfld BattleTech.Pilot pilot
L_029d: stloc.s 18 (BattleTech.Pilot)
L_029f: ldnull
L_02a0: stloc.s 19 (BattleTech.SalvageDef)
L_02a2: ldc.i4.0
L_02a3: stloc.s 20 (System.Boolean)
L_02a5: ldc.i4.0
L_02a6: stloc.s 21 (System.Boolean)
L_02a8: ldloc.s 17 (BattleTech.MechDef)
L_02aa: ldc.i4.8
L_02ab: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02b0: brfalse Label11
L_02b5: ldarg.0
L_02b6: ldloc.1
L_02b7: ldloc.s 17 (BattleTech.MechDef)
L_02b9: ldc.i4.1
L_02ba: ldarg.0
L_02bb: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02c0: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02c5: br Label12
L_02ca: Label11
L_02ca: ldloc.s 17 (BattleTech.MechDef)
L_02cc: ldc.i4.s 64
L_02ce: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02d3: brfalse Label13
L_02d8: ldloc.s 17 (BattleTech.MechDef)
L_02da: ldc.i4 128
L_02df: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02e4: brfalse Label14
L_02e9: ldc.i4.1
L_02ea: stloc.s 20 (System.Boolean)
L_02ec: ldarg.0
L_02ed: ldloc.1
L_02ee: ldloc.s 17 (BattleTech.MechDef)
L_02f0: ldc.i4.2
L_02f1: ldarg.0
L_02f2: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02f7: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02fc: br Label15
L_0301: Label13
L_0301: Label14
L_0301: ldloc.s 18 (BattleTech.Pilot)
L_0303: callvirt Boolean get_IsIncapacitated()
L_0308: brtrue Label16
L_030d: ldloc.s 17 (BattleTech.MechDef)
L_030f: ldc.i4.1
L_0310: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0315: brfalse Label17
L_031a: Label16
L_031a: ldarg.0
L_031b: ldloc.1
L_031c: ldloc.s 17 (BattleTech.MechDef)
L_031e: ldc.i4.3
L_031f: ldarg.0
L_0320: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0325: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_032a: Label12
L_032a: Label15
L_032a: ldloc.s 17 (BattleTech.MechDef)
L_032c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0331: stloc.s 12 (BattleTech.MechComponentRef[])
L_0333: ldc.i4.0
L_0334: stloc.s 13 (System.Int32)
L_0336: br Label18
L_033b: Label21
L_033b: ldloc.s 12 (BattleTech.MechComponentRef[])
L_033d: ldloc.s 13 (System.Int32)
L_033f: ldelem.ref
L_0340: stloc.s 22 (BattleTech.MechComponentRef)
L_0342: ldloc.s 17 (BattleTech.MechDef)
L_0344: ldloc.s 22 (BattleTech.MechComponentRef)
L_0346: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_034b: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0350: brtrue Label19
L_0355: ldloc.s 22 (BattleTech.MechComponentRef)
L_0357: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_035c: ldc.i4.4
L_035d: beq Label20
L_0362: ldarg.0
L_0363: ldarg.0
L_0364: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0369: ldloc.s 22 (BattleTech.MechComponentRef)
L_036b: callvirt BattleTech.MechComponentDef get_Def()
L_0370: ldc.i4.0
L_0371: ldc.i4.0
L_0372: ldloc.1
L_0373: ldloc.0
L_0374: callvirt NetworkRandom get_NetworkRandom()
L_0379: ldc.i4.1
L_037a: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_037f: Label19
L_037f: Label20
L_037f: ldloc.s 13 (System.Int32)
L_0381: ldc.i4.1
L_0382: add
L_0383: stloc.s 13 (System.Int32)
L_0385: Label18
L_0385: ldloc.s 13 (System.Int32)
L_0387: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0389: ldlen
L_038a: conv.i4
L_038b: blt Label21
L_0390: ldloc.s 21 (System.Boolean)
L_0392: brfalse Label22
L_0397: newobj Void .ctor()
L_039c: stloc.s 19 (BattleTech.SalvageDef)
L_039e: ldloc.s 19 (BattleTech.SalvageDef)
L_03a0: ldc.i4.3
L_03a1: stfld BattleTech.SalvageDef+SalvageType Type
L_03a6: ldloc.s 19 (BattleTech.SalvageDef)
L_03a8: ldloc.s 17 (BattleTech.MechDef)
L_03aa: callvirt BattleTech.ChassisDef get_Chassis()
L_03af: callvirt BattleTech.DescriptionDef get_Description()
L_03b4: newobj Void .ctor(DescriptionDef)
L_03b9: stfld BattleTech.DescriptionDef Description
L_03be: ldloc.s 19 (BattleTech.SalvageDef)
L_03c0: ldc.i4.1
L_03c1: stfld System.Int32 Count
L_03c6: ldtoken BattleTech.ChassisLocations
L_03cb: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03d0: call System.Array GetValues(System.Type)
L_03d5: callvirt System.Collections.IEnumerator GetEnumerator()
L_03da: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03dc: br Label23
	L_03e1: Label30
	L_03e1: ldloc.s 23 (System.Collections.IEnumerator)
	L_03e3: callvirt System.Object get_Current()
	L_03e8: unbox.any BattleTech.ChassisLocations
	L_03ed: stloc.s 24 (BattleTech.ChassisLocations)
	L_03ef: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f1: brfalse Label24
	L_03f6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f8: ldc.i4 255
	L_03fd: beq Label25
	L_0402: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0404: ldc.i4.s 34
	L_0406: beq Label26
	L_040b: ldloc.s 24 (BattleTech.ChassisLocations)
	L_040d: ldc.i4 192
	L_0412: beq Label27
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: ldc.i4.s 28
	L_041b: beq Label28
	L_0420: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0422: ldc.i4.s 62
	L_0424: beq Label29
	L_0429: ldloc.s 19 (BattleTech.SalvageDef)
	L_042b: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0430: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0432: callvirt Void Add(BattleTech.ChassisLocations)
	L_0437: ldloc.s 19 (BattleTech.SalvageDef)
	L_0439: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_043e: ldloc.s 17 (BattleTech.MechDef)
	L_0440: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0442: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_0447: ldfld System.Single CurrentInternalStructure
	L_044c: callvirt Void Add(Single)
	L_0451: Label23
	L_0451: Label24
	L_0451: Label25
	L_0451: Label26
	L_0451: Label27
	L_0451: Label28
	L_0451: Label29
	L_0451: ldloc.s 23 (System.Collections.IEnumerator)
	L_0453: callvirt Boolean MoveNext()
	L_0458: brtrue Label30
	L_045d: leave Label31
	L_0462: leave (autogenerated)
} // end try
.finally
{
	L_0467: ldloc.s 23 (System.Collections.IEnumerator)
	L_0469: isinst System.IDisposable
	L_046e: stloc.s 25 (System.IDisposable)
	L_0470: ldloc.s 25 (System.IDisposable)
	L_0472: brfalse Label32
	L_0477: ldloc.s 25 (System.IDisposable)
	L_0479: callvirt Void Dispose()
	L_047e: Label32
	L_047e: endfinally
	L_047f: leave (autogenerated)
} // end handler
L_0480: Label31
L_0480: ldloc.s 20 (System.Boolean)
L_0482: brfalse Label33
L_0487: ldc.i4.0
L_0488: stloc.s 26 (System.Int32)
L_048a: br Label34
L_048f: Label35
L_048f: ldloc.s 19 (BattleTech.SalvageDef)
L_0491: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_0496: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0498: ldloc.s 26 (System.Int32)
L_049a: stloc.s 13 (System.Int32)
L_049c: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_049e: ldloc.s 13 (System.Int32)
L_04a0: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_04a2: ldloc.s 13 (System.Int32)
L_04a4: callvirt Single get_Item(Int32)
L_04a9: ldc.r4 2
L_04ae: div
L_04af: callvirt Void set_Item(Int32, Single)
L_04b4: ldloc.s 26 (System.Int32)
L_04b6: ldc.i4.1
L_04b7: add
L_04b8: stloc.s 26 (System.Int32)
L_04ba: Label34
L_04ba: ldloc.s 26 (System.Int32)
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_04c3: callvirt Int32 get_Count()
L_04c8: blt Label35
L_04cd: Label33
L_04cd: ldloc.s 19 (BattleTech.SalvageDef)
L_04cf: ldloc.1
L_04d0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04d5: ldfld System.Int32 DefaultChassisWeight
L_04da: stfld System.Int32 Weight
L_04df: ldarg.0
L_04e0: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04e5: ldloc.s 19 (BattleTech.SalvageDef)
L_04e7: callvirt Void Add(BattleTech.SalvageDef)
L_04ec: Label17
L_04ec: Label22
L_04ec: ldloc.s 16 (System.Int32)
L_04ee: ldc.i4.1
L_04ef: add
L_04f0: stloc.s 16 (System.Int32)
L_04f2: Label10
L_04f2: ldloc.s 16 (System.Int32)
L_04f4: ldarg.1
L_04f5: callvirt Int32 get_Count()
L_04fa: blt Label36
L_04ff: ldc.i4.0
L_0500: stloc.s 28 (System.Int32)
L_0502: br Label37
L_0507: Label42
L_0507: ldarg.2
L_0508: ldloc.s 28 (System.Int32)
L_050a: callvirt BattleTech.VehicleDef get_Item(Int32)
L_050f: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_0514: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_0519: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_051b: br Label38
	L_0520: Label39
	L_0520: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0522: callvirt BattleTech.VehicleComponentRef get_Current()
	L_0527: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0529: ldarg.0
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0530: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0532: callvirt BattleTech.MechComponentDef get_Def()
	L_0537: ldc.i4.0
	L_0538: ldc.i4.0
	L_0539: ldloc.1
	L_053a: ldloc.0
	L_053b: callvirt NetworkRandom get_NetworkRandom()
	L_0540: ldc.i4.1
	L_0541: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_0546: Label38
	L_0546: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0548: callvirt Boolean MoveNext()
	L_054d: brtrue Label39
	L_0552: leave Label40
	L_0557: leave (autogenerated)
} // end try
.finally
{
	L_055c: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_055e: brfalse Label41
	L_0563: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0565: callvirt Void Dispose()
	L_056a: Label41
	L_056a: endfinally
	L_056b: leave (autogenerated)
} // end handler
L_056c: Label40
L_056c: ldloc.s 28 (System.Int32)
L_056e: ldc.i4.1
L_056f: add
L_0570: stloc.s 28 (System.Int32)
L_0572: Label37
L_0572: ldloc.s 28 (System.Int32)
L_0574: ldarg.2
L_0575: callvirt Int32 get_Count()
L_057a: blt Label42
L_057f: ldarg.0
L_0580: ldarg.0
L_0581: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0586: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_058b: ldarg.0
L_058c: call Int32 get_SalvagePotential()
L_0591: stloc.2
L_0592: ldloc.1
L_0593: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0598: ldfld System.Single VictorySalvageChance
L_059d: stloc.3
L_059e: ldloc.1
L_059f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a4: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_05a9: stloc.s 4 (System.Single)
L_05ab: ldarg.0
L_05ac: call ContractState get_State()
L_05b1: ldc.i4.5
L_05b2: bne.un Label43
L_05b7: ldloc.1
L_05b8: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05bd: ldfld System.Single DefeatSalvageChance
L_05c2: stloc.3
L_05c3: ldloc.1
L_05c4: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05c9: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05ce: stloc.s 4 (System.Single)
L_05d0: br Label44
L_05d5: Label43
L_05d5: ldarg.0
L_05d6: call ContractState get_State()
L_05db: ldc.i4.4
L_05dc: bne.un Label45
L_05e1: ldloc.1
L_05e2: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05e7: ldfld System.Single RetreatSalvageChance
L_05ec: stloc.3
L_05ed: ldloc.1
L_05ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05f3: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05f8: stloc.s 4 (System.Single)
L_05fa: Label44
L_05fa: Label45
L_05fa: ldloc.3
L_05fb: stloc.s 5 (System.Single)
L_05fd: ldloc.2
L_05fe: conv.r4
L_05ff: ldarg.0
L_0600: call Single get_PercentageContractSalvage()
L_0605: mul
L_0606: stloc.s 6 (System.Single)
L_0608: ldloc.2
L_0609: ldc.i4.0
L_060a: ble Label46
L_060f: ldloc.s 6 (System.Single)
L_0611: ldloc.1
L_0612: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0617: ldfld System.Int32 ContractFloorSalvageBonus
L_061c: conv.r4
L_061d: add
L_061e: stloc.s 6 (System.Single)
L_0620: Label46
L_0620: ldc.r4 0
L_0625: ldloc.s 5 (System.Single)
L_0627: ldloc.s 4 (System.Single)
L_0629: ldarg.3
L_062a: callvirt Int32 get_Count()
L_062f: conv.r4
L_0630: mul
L_0631: sub
L_0632: call Single Max(Single, Single)
L_0637: stloc.3
L_0638: ldloc.s 6 (System.Single)
L_063a: conv.r4
L_063b: ldloc.3
L_063c: mul
L_063d: call Int32 FloorToInt(Single)
L_0642: stloc.s 7 (System.Int32)
L_0644: ldloc.2
L_0645: ldc.i4.0
L_0646: ble Label47
L_064b: ldloc.2
L_064c: ldloc.1
L_064d: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0652: ldfld System.Int32 ContractFloorSalvageBonus
L_0657: add
L_0658: stloc.2
L_0659: Label47
L_0659: ldarg.0
L_065a: ldloc.s 7 (System.Int32)
L_065c: call Void set_FinalSalvageCount(Int32)
L_0661: ldarg.0
L_0662: ldc.i4.7
L_0663: ldloc.s 7 (System.Int32)
L_0665: conv.r4
L_0666: ldloc.1
L_0667: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_066c: ldfld System.Single PrioritySalvageModifier
L_0671: mul
L_0672: call Int32 FloorToInt(Single)
L_0677: call Int32 Min(Int32, Int32)
L_067c: call Void set_FinalPrioritySalvageCount(Int32)
L_0681: ldarg.0
L_0682: ldfld System.Boolean loggingSalvageResults
L_0687: brfalse Label48
L_068c: ldarg.0
L_068d: ldstr "Salvage"
L_0692: call Void PushReport(System.String)
L_0697: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_069c: ldc.i4.6
L_069d: newarr System.Object
L_06a2: dup
L_06a3: ldc.i4.0
L_06a4: ldloc.2
L_06a5: box System.Int32
L_06aa: stelem.ref
L_06ab: dup
L_06ac: ldc.i4.1
L_06ad: ldloc.s 5 (System.Single)
L_06af: box System.Single
L_06b4: stelem.ref
L_06b5: dup
L_06b6: ldc.i4.2
L_06b7: ldarg.3
L_06b8: callvirt Int32 get_Count()
L_06bd: box System.Int32
L_06c2: stelem.ref
L_06c3: dup
L_06c4: ldc.i4.3
L_06c5: ldloc.3
L_06c6: box System.Single
L_06cb: stelem.ref
L_06cc: dup
L_06cd: ldc.i4.4
L_06ce: ldloc.s 7 (System.Int32)
L_06d0: box System.Int32
L_06d5: stelem.ref
L_06d6: dup
L_06d7: ldc.i4.5
L_06d8: ldarg.0
L_06d9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06de: callvirt Int32 get_Count()
L_06e3: box System.Int32
L_06e8: stelem.ref
L_06e9: call System.String Format(System.String, System.Object[])
L_06ee: stloc.s 31 (System.String)
L_06f0: ldarg.0
L_06f1: ldloc.s 31 (System.String)
L_06f3: call Void ReportLog(System.String)
L_06f8: ldarg.0
L_06f9: ldstr "Potential Salvage"
L_06fe: call Void PushReport(System.String)
L_0703: ldarg.0
L_0704: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0709: callvirt Enumerator GetEnumerator()
L_070e: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_0710: br Label49
	L_0715: Label52
	L_0715: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0717: call BattleTech.SalvageDef get_Current()
	L_071c: stloc.s 33 (BattleTech.SalvageDef)
	L_071e: ldarg.0
	L_071f: ldstr "{0} of type {1} in damage state of {2}"
	L_0724: ldloc.s 33 (BattleTech.SalvageDef)
	L_0726: ldfld BattleTech.DescriptionDef Description
	L_072b: callvirt System.String get_Id()
	L_0730: ldloc.s 33 (BattleTech.SalvageDef)
	L_0732: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0737: box BattleTech.SalvageDef+SalvageType
	L_073c: ldloc.s 33 (BattleTech.SalvageDef)
	L_073e: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0743: ldc.i4.3
	L_0744: beq Label50
	L_0749: ldloc.s 33 (BattleTech.SalvageDef)
	L_074b: ldfld System.Boolean Damaged
	L_0750: br Label51
	L_0755: Label50
	L_0755: ldc.i4.1
	L_0756: Label51
	L_0756: box System.Boolean
	L_075b: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0760: call Void ReportLog(System.String)
	L_0765: Label49
	L_0765: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0767: call Boolean MoveNext()
	L_076c: brtrue Label52
	L_0771: leave Label53
	L_0776: leave (autogenerated)
} // end try
.finally
{
	L_077b: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_077d: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_0783: callvirt Void Dispose()
	L_0788: endfinally
	L_0789: leave (autogenerated)
} // end handler
L_078a: Label53
L_078a: ldarg.0
L_078b: call Void PopReport()
L_0790: ldsfld HBS.Logging.ILog logger
L_0795: ldloc.s 31 (System.String)
L_0797: callvirt Void LogWarning(System.Object)
L_079c: Label48
L_079c: ldloc.3
L_079d: ldc.r4 0
L_07a2: beq Label54
L_07a7: ldloc.s 7 (System.Int32)
L_07a9: ldc.i4.1
L_07aa: bge Label55
L_07af: Label54
L_07af: ldarg.0
L_07b0: ldfld System.Boolean loggingSalvageResults
L_07b5: brfalse Label56
L_07ba: ldarg.0
L_07bb: call Void PopReport()
L_07c0: Label55
L_07c0: Label56
L_07c0: Label57
L_07c0: Label0
L_07c0: ret
DONE

### Patch BattleTech.UI.MechBayChassisInfoWidget, Void OnScrapClicked()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.String
L_0000: ldarg.0
L_0001: ldfld BattleTech.ChassisDef selectedChassis
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.MechBayPanel mechBay
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechBayChassisUnitElement chassisElement
L_0012: ldarg.0
L_0013: call Boolean OnReadyClicked(BattleTech.ChassisDef, BattleTech.UI.MechBayPanel, BattleTech.UI.MechBayChassisUnitElement, BattleTech.UI.MechBayChassisInfoWidget)
L_0018: brfalse Label0
L_001d: ldarg.0
L_001e: ldfld BattleTech.ChassisDef selectedChassis
L_0023: brtrue Label1
L_0028: br Label4
L_002d: Label1
L_002d: ldc.r4 1
L_0032: stloc.0
L_0033: ldarg.0
L_0034: ldfld BattleTech.ChassisDef selectedChassis
L_0039: ldfld System.Int32 MechPartCount
L_003e: ldc.i4.0
L_003f: ble Label2
L_0044: ldarg.0
L_0045: ldfld BattleTech.ChassisDef selectedChassis
L_004a: ldfld System.Int32 MechPartCount
L_004f: ldarg.0
L_0050: ldfld BattleTech.ChassisDef selectedChassis
L_0055: callvirt Int32 get_MechPartMax()
L_005a: bge Label3
L_005f: ldc.r4 1
L_0064: ldarg.0
L_0065: ldfld BattleTech.ChassisDef selectedChassis
L_006a: callvirt Int32 get_MechPartMax()
L_006f: conv.r4
L_0070: div
L_0071: stloc.0
L_0072: Label2
L_0072: Label3
L_0072: ldarg.0
L_0073: ldfld BattleTech.ChassisDef selectedChassis
L_0078: callvirt BattleTech.DescriptionDef get_Description()
L_007d: callvirt Int32 get_Cost()
L_0082: conv.r4
L_0083: ldarg.0
L_0084: ldfld BattleTech.UI.MechBayPanel mechBay
L_0089: callvirt BattleTech.SimGameState get_Sim()
L_008e: callvirt BattleTech.SimGameConstants get_Constants()
L_0093: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0098: ldfld System.Single MechScrapModifier
L_009d: mul
L_009e: ldloc.0
L_009f: mul
L_00a0: call Int32 RoundToInt(Single)
L_00a5: call System.String GetCBillString(Int32)
L_00aa: stloc.1
L_00ab: ldstr "Scrap 'Mech?"
L_00b0: ldstr "Are you sure you want to scrap this 'Mech Chassis? It will be removed permanently from your inventory.

SCRAP VALUE: <color=#F79B26FF>{0}</color>"
L_00b5: ldc.i4.1
L_00b6: newarr System.Object
L_00bb: dup
L_00bc: ldc.i4.0
L_00bd: ldloc.1
L_00be: stelem.ref
L_00bf: call System.String T(System.String, System.Object[])
L_00c4: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_00c9: ldstr "Cancel"
L_00ce: ldnull
L_00cf: ldc.i4.1
L_00d0: ldnull
L_00d1: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_00d6: ldstr "Scrap"
L_00db: ldarg.0
L_00dc: ldftn Void ConfirmScrapClicked()
L_00e2: newobj Void .ctor(Object, IntPtr)
L_00e7: ldc.i4.1
L_00e8: ldnull
L_00e9: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_00ee: callvirt BattleTech.UI.GenericPopupBuilder CancelOnEscape()
L_00f3: call BattleTech.UI.UIManager get_Instance()
L_00f8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00fd: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_0102: newobj Void .ctor(UIColorRef)
L_0107: ldc.r4 0
L_010c: ldc.i4.1
L_010d: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_0112: callvirt BattleTech.UI.GenericPopup Render()
L_0117: pop
L_0118: Label4
L_0118: Label0
L_0118: ret
DONE

### Patch BattleTech.UI.MechBayChassisInfoWidget, Void OnReadyClicked()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: ldfld BattleTech.ChassisDef selectedChassis
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.MechBayPanel mechBay
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechBayChassisUnitElement chassisElement
L_0012: ldarg.0
L_0013: call Boolean OnReadyClicked(BattleTech.ChassisDef, BattleTech.UI.MechBayPanel, BattleTech.UI.MechBayChassisUnitElement, BattleTech.UI.MechBayChassisInfoWidget)
L_0018: brfalse Label0
L_001d: ldarg.0
L_001e: ldfld BattleTech.ChassisDef selectedChassis
L_0023: brtrue Label1
L_0028: br Label6
L_002d: Label1
L_002d: ldarg.0
L_002e: ldfld BattleTech.ChassisDef selectedChassis
L_0033: ldfld System.Int32 MechPartCount
L_0038: ldarg.0
L_0039: ldfld BattleTech.ChassisDef selectedChassis
L_003e: callvirt Int32 get_MechPartMax()
L_0043: bge Label2
L_0048: ldarg.0
L_0049: ldfld BattleTech.ChassisDef selectedChassis
L_004e: callvirt Int32 get_MechPartMax()
L_0053: ldarg.0
L_0054: ldfld BattleTech.ChassisDef selectedChassis
L_0059: ldfld System.Int32 MechPartCount
L_005e: sub
L_005f: stloc.1
L_0060: ldstr "'Mech Chassis Incomplete"
L_0065: ldstr "This chassis requires {0} more part{1} before it can be readied for combat."
L_006a: ldc.i4.2
L_006b: newarr System.Object
L_0070: dup
L_0071: ldc.i4.0
L_0072: ldloc.1
L_0073: box System.Int32
L_0078: stelem.ref
L_0079: dup
L_007a: ldc.i4.1
L_007b: ldloc.1
L_007c: ldc.i4.1
L_007d: beq Label3
L_0082: ldstr "s"
L_0087: br Label4
L_008c: Label3
L_008c: ldstr ""
L_0091: Label4
L_0091: stelem.ref
L_0092: call System.String T(System.String, System.Object[])
L_0097: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_009c: call BattleTech.UI.UIManager get_Instance()
L_00a1: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00a6: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_00ab: newobj Void .ctor(UIColorRef)
L_00b0: ldc.r4 0
L_00b5: ldc.i4.1
L_00b6: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_00bb: callvirt BattleTech.UI.GenericPopup Render()
L_00c0: pop
L_00c1: br Label7
L_00c6: Label2
L_00c6: ldarg.0
L_00c7: ldfld BattleTech.UI.MechBayPanel mechBay
L_00cc: callvirt BattleTech.SimGameState get_Sim()
L_00d1: callvirt Int32 GetFirstFreeMechBay()
L_00d6: ldc.i4.0
L_00d7: bge Label5
L_00dc: ldstr "Cannot Ready 'Mech"
L_00e1: ldstr "There are no available slots in the 'Mech Bay. You must move an active 'Mech into storage before readying this chassis."
L_00e6: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_00eb: call BattleTech.UI.UIManager get_Instance()
L_00f0: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00f5: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_00fa: newobj Void .ctor(UIColorRef)
L_00ff: ldc.r4 0
L_0104: ldc.i4.1
L_0105: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_010a: callvirt BattleTech.UI.GenericPopup Render()
L_010f: pop
L_0110: br Label8
L_0115: Label5
L_0115: ldarg.0
L_0116: ldfld BattleTech.UI.MechBayPanel mechBay
L_011b: callvirt BattleTech.SimGameState get_Sim()
L_0120: callvirt BattleTech.SimGameConstants get_Constants()
L_0125: callvirt BattleTech.StoryConstantsDef get_Story()
L_012a: ldfld System.Int32 MechReadyTime
L_012f: conv.r4
L_0130: ldarg.0
L_0131: ldfld BattleTech.UI.MechBayPanel mechBay
L_0136: callvirt BattleTech.SimGameState get_Sim()
L_013b: callvirt Int32 get_MechTechSkill()
L_0140: conv.r4
L_0141: div
L_0142: call Int32 CeilToInt(Single)
L_0147: stloc.0
L_0148: ldstr "Ready 'Mech?"
L_014d: ldstr "It will take {0} day(s) to ready this BattleMech chassis for combat."
L_0152: ldc.i4.1
L_0153: newarr System.Object
L_0158: dup
L_0159: ldc.i4.0
L_015a: ldloc.0
L_015b: box System.Int32
L_0160: stelem.ref
L_0161: call System.String T(System.String, System.Object[])
L_0166: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_016b: ldstr "Cancel"
L_0170: ldnull
L_0171: ldc.i4.1
L_0172: ldnull
L_0173: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_0178: ldstr "Ready"
L_017d: ldarg.0
L_017e: ldftn Void ConfirmReadyClicked()
L_0184: newobj Void .ctor(Object, IntPtr)
L_0189: ldc.i4.1
L_018a: ldnull
L_018b: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_0190: call BattleTech.UI.UIManager get_Instance()
L_0195: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_019a: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_019f: newobj Void .ctor(UIColorRef)
L_01a4: ldc.r4 0
L_01a9: ldc.i4.1
L_01aa: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_01af: callvirt BattleTech.UI.GenericPopupBuilder CancelOnEscape()
L_01b4: callvirt BattleTech.UI.GenericPopup Render()
L_01b9: pop
L_01ba: Label6
L_01ba: Label7
L_01ba: Label8
L_01ba: Label0
L_01ba: ret
DONE

### Harmony id=io.github.denadan.DynamicShops, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from DynamicShops.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\DynamicShops\DynamicShops.dll
### At 2019-09-15 05.05.14
### Patch BattleTech.Shop, Void Initialize(System.Collections.Generic.List`1[System.String], ShopType, RefreshType)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.String
L_0000: ldarga 1
L_0006: call Void SetType(System.Collections.Generic.List`1[System.String] ByRef)
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: call Void set_ItemCollections(System.Collections.Generic.List`1[BattleTech.ItemCollectionDef])
L_0016: ldarg.1
L_0017: brfalse Label1
L_001c: ldarg.1
L_001d: callvirt Int32 get_Count()
L_0022: brtrue Label2
L_0027: Label1
L_0027: br Label6
L_002c: Label2
L_002c: ldarg.0
L_002d: ldarg.1
L_002e: newobj Void .ctor(IEnumerable`1)
L_0033: stfld System.Collections.Generic.List`1[System.String] pendingCollection
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: stfld BattleTech.Shop+RefreshType requestedShopUpdate
L_003f: ldarg.0
L_0040: ldarg.2
L_0041: call Void set_ThisShopType(ShopType)
L_0046: ldarg.1
L_0047: callvirt Enumerator GetEnumerator()
L_004c: stloc.0
.try
{
	L_004d: br Label3
	L_0052: Label4
	L_0052: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0054: call System.String get_Current()
	L_0059: stloc.1
	L_005a: ldarg.0
	L_005b: ldfld BattleTech.SimGameState Sim
	L_0060: ldloc.1
	L_0061: ldarg.0
	L_0062: ldftn Void OnItemCollectionRetrieved(BattleTech.ItemCollectionDef)
	L_0068: newobj Void .ctor(Object, IntPtr)
	L_006d: ldc.i4.s 31
	L_006f: callvirt Void RequestItem[ItemCollectionDef](System.String, System.Action`1[BattleTech.ItemCollectionDef], BattleTech.BattleTechResourceType)
	L_0074: Label3
	L_0074: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0076: call Boolean MoveNext()
	L_007b: brtrue Label4
	L_0080: leave Label5
	L_0085: leave (autogenerated)
} // end try
.finally
{
	L_008a: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_008c: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0092: callvirt Void Dispose()
	L_0097: endfinally
	L_0098: leave (autogenerated)
} // end handler
L_0099: Label5
L_0099: Label6
L_0099: ret
DONE

### Patch BattleTech.StarSystem, Boolean CanUseFactionStore()
L_0000: Local var 0: BattleTech.Faction
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 1 (System.Boolean)
L_0009: call Boolean Prefix(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Boolean HasFactionStore()
L_0019: brfalse Label1
L_001e: ldarg.0
L_001f: call BattleTech.StarSystemDef get_Def()
L_0024: callvirt BattleTech.Faction get_FactionShopOwner()
L_0029: stloc.0
L_002a: ldarg.0
L_002b: call BattleTech.SimGameState get_Sim()
L_0030: ldloc.0
L_0031: ldnull
L_0032: callvirt Boolean IsFactionAlly(BattleTech.Faction, System.Collections.Generic.List`1[BattleTech.Faction])
L_0037: brfalse Label2
L_003c: ldc.i4.1
L_003d: br Label3
L_0042: Label2
L_0042: ldc.i4.0
L_0043: br Label4
L_0048: Label1
L_0048: ldc.i4.0
L_0049: Label3
L_0049: Label4
L_0049: stloc 1 (System.Boolean)
L_004a: Label0
L_004a: ldloc 1 (System.Boolean)
L_004b: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void RefreshStoreTypeButtons()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.StarSystem theSystem
L_0006: callvirt Boolean HasFactionStore()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldfld BattleTech.StarSystem theSystem
L_0012: callvirt Boolean HasBlackMarketStore()
L_0017: stloc.1
L_0018: ldloc.0
L_0019: ldloc.1
L_001a: or
L_001b: stloc.2
L_001c: ldarg.0
L_001d: ldfld UnityEngine.GameObject SystemStoreButtonHoldingObject
L_0022: ldloc.2
L_0023: callvirt Void SetActive(Boolean)
L_0028: ldarg.0
L_0029: ldfld BattleTech.StarSystem theSystem
L_002e: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_0033: stloc.3
L_0034: ldarg.0
L_0035: ldfld BattleTech.StarSystem theSystem
L_003a: callvirt Boolean CanUseSystemStore()
L_003f: brfalse Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_004a: ldc.i4.0
L_004b: ldc.i4.0
L_004c: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0051: pop
L_0052: ldarg.0
L_0053: ldfld UnityEngine.GameObject LowRepSystemStoreOverlay
L_0058: ldc.i4.0
L_0059: callvirt Void SetActive(Boolean)
L_005e: br Label2
L_0063: Label1
L_0063: ldarg.0
L_0064: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_0069: ldc.i4.5
L_006a: ldc.i4.0
L_006b: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0070: pop
L_0071: ldarg.0
L_0072: ldfld UnityEngine.GameObject LowRepSystemStoreOverlay
L_0077: ldc.i4.1
L_0078: callvirt Void SetActive(Boolean)
L_007d: Label2
L_007d: ldarg.0
L_007e: ldfld UnityEngine.GameObject FactionStoreButtonHoldingObject
L_0083: ldloc.0
L_0084: callvirt Void SetActive(Boolean)
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_008f: ldarg.0
L_0090: ldfld BattleTech.SimGameState simState
L_0095: ldloc.3
L_0096: callvirt Void FillInByFaction(BattleTech.SimGameState, BattleTech.Faction)
L_009b: ldarg.0
L_009c: ldfld BattleTech.StarSystem theSystem
L_00a1: callvirt Boolean HasFactionStore()
L_00a6: brfalse Label3
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.StarSystem theSystem
L_00b1: callvirt Boolean CanUseFactionStore()
L_00b6: brfalse Label4
L_00bb: ldarg.0
L_00bc: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_00c1: ldc.i4.0
L_00c2: ldc.i4.0
L_00c3: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00c8: pop
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00cf: ldc.i4.0
L_00d0: callvirt Void SetActive(Boolean)
L_00d5: br Label5
L_00da: Label4
L_00da: ldarg.0
L_00db: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_00e0: ldc.i4.5
L_00e1: ldc.i4.0
L_00e2: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00e7: pop
L_00e8: ldarg.0
L_00e9: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00ee: ldc.i4.1
L_00ef: callvirt Void SetActive(Boolean)
L_00f4: br Label6
L_00f9: Label3
L_00f9: ldarg.0
L_00fa: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00ff: ldc.i4.0
L_0100: callvirt Void SetActive(Boolean)
L_0105: Label5
L_0105: Label6
L_0105: ldarg.0
L_0106: ldfld UnityEngine.GameObject BlackMarketStoreButtonHoldingObject
L_010b: ldloc.1
L_010c: callvirt Void SetActive(Boolean)
L_0111: ldarg.0
L_0112: ldfld BattleTech.SimGameState simState
L_0117: ldsfld System.String BLACKMARKET_ICON
L_011c: ldarg.0
L_011d: ldftn Void <RefreshStoreTypeButtons>b__64_0(UnityEngine.Sprite)
L_0123: newobj Void .ctor(Object, IntPtr)
L_0128: ldc.i4.s 61
L_012a: callvirt Void RequestItem[Sprite](System.String, System.Action`1[UnityEngine.Sprite], BattleTech.BattleTechResourceType)
L_012f: ldarg.0
L_0130: ldfld BattleTech.StarSystem theSystem
L_0135: callvirt Boolean HasBlackMarketStore()
L_013a: brfalse Label7
L_013f: ldarg.0
L_0140: ldfld BattleTech.StarSystem theSystem
L_0145: callvirt Boolean CanUseBlackMarketStore()
L_014a: brfalse Label8
L_014f: ldarg.0
L_0150: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle BlackMarketStoreButton
L_0155: ldc.i4.0
L_0156: ldc.i4.0
L_0157: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_015c: pop
L_015d: ldarg.0
L_015e: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0163: ldc.i4.0
L_0164: callvirt Void SetActive(Boolean)
L_0169: br Label9
L_016e: Label8
L_016e: ldarg.0
L_016f: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle BlackMarketStoreButton
L_0174: ldc.i4.5
L_0175: ldc.i4.0
L_0176: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_017b: pop
L_017c: ldarg.0
L_017d: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0182: ldc.i4.1
L_0183: callvirt Void SetActive(Boolean)
L_0188: br Label10
L_018d: Label7
L_018d: ldarg.0
L_018e: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0193: ldc.i4.0
L_0194: callvirt Void SetActive(Boolean)
L_0199: Label9
L_0199: Label10
L_0199: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void FillInFactionData()
L_0000: Local var 0: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.StarSystem theSystem
L_0006: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.SG_Stores_StoreImagePanel StoreImagePanel
L_0012: ldc.i4.1
L_0013: ldloc.0
L_0014: callvirt Void FillInData(StoreType, BattleTech.Faction)
L_0019: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void RefreshColorAreas()
L_0000: Local var 0: UnityEngine.Color
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.UI.SG_Shop_Screen+StoreType
L_0000: Local var 3: BattleTech.Faction
L_0000: Local var 4: BattleTech.FactionDef
L_0000: Local var 5: UnityEngine.Color
L_0000: Local var 6: UnityEngine.Color
L_0000: Local var 7: System.Collections.Generic.List`1+Enumerator[[BattleTech.UI.UIColorRefTracker, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldloca.s 0 (UnityEngine.Color)
L_0002: initobj UnityEngine.Color
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: ldarg.0
L_000b: ldfld BattleTech.UI.SG_Shop_Screen+StoreType currentStoreType
L_0010: stloc.2
L_0011: ldloc.2
L_0012: switch Labels1,2,3
L_0023: br Label4
L_0028: Label1
L_0028: ldc.i4.1
L_0029: stloc.1
L_002a: call BattleTech.UI.UIManager get_Instance()
L_002f: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0034: ldflda BattleTech.UI.UIColorRef SystemStoreColor
L_0039: ldfld UnityEngine.Color color
L_003e: stloc.0
L_003f: br Label5
L_0044: Label2
L_0044: ldarg.0
L_0045: ldfld BattleTech.StarSystem theSystem
L_004a: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_004f: stloc.3
L_0050: ldnull
L_0051: stloc.s 4 (BattleTech.FactionDef)
L_0053: ldarg.0
L_0054: ldfld BattleTech.SimGameState simState
L_0059: callvirt System.Collections.Generic.Dictionary`2[BattleTech.Faction,BattleTech.FactionDef] get_FactionsDict()
L_005e: ldloc.3
L_005f: ldloca.s 4 (BattleTech.FactionDef)
L_0061: callvirt Boolean TryGetValue(BattleTech.Faction, BattleTech.FactionDef ByRef)
L_0066: brfalse Label6
L_006b: ldc.i4.1
L_006c: stloc.1
L_006d: ldloca.s 5 (UnityEngine.Color)
L_006f: initobj UnityEngine.Color
L_0075: ldloc.s 4 (BattleTech.FactionDef)
L_0077: ldloca.s 5 (UnityEngine.Color)
L_0079: callvirt Boolean GetFactionStoreColor(UnityEngine.Color ByRef)
L_007e: brfalse Label7
L_0083: ldloc.s 5 (UnityEngine.Color)
L_0085: stloc.0
L_0086: br Label8
L_008b: Label7
L_008b: call BattleTech.UI.UIManager get_Instance()
L_0090: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0095: ldflda BattleTech.UI.UIColorRef FactionStoreColor
L_009a: ldfld UnityEngine.Color color
L_009f: stloc.0
L_00a0: br Label9
L_00a5: Label3
L_00a5: ldc.i4.1
L_00a6: stloc.1
L_00a7: call BattleTech.UI.UIManager get_Instance()
L_00ac: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00b1: ldflda BattleTech.UI.UIColorRef BlackMarketStoreColor
L_00b6: ldfld UnityEngine.Color color
L_00bb: stloc.0
L_00bc: Label4
L_00bc: Label5
L_00bc: Label6
L_00bc: Label8
L_00bc: Label9
L_00bc: ldloc.1
L_00bd: brfalse Label10
L_00c2: ldarg.0
L_00c3: ldfld System.Collections.Generic.List`1[BattleTech.UI.UIColorRefTracker] ColorAffectors
L_00c8: callvirt Enumerator GetEnumerator()
L_00cd: stloc.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
.try
{
	L_00cf: br Label11
	L_00d4: Label12
	L_00d4: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00d6: call BattleTech.UI.UIColorRefTracker get_Current()
	L_00db: ldloc.0
	L_00dc: callvirt Void OverrideWithColor(UnityEngine.Color)
	L_00e1: Label11
	L_00e1: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00e3: call Boolean MoveNext()
	L_00e8: brtrue Label12
	L_00ed: leave Label13
	L_00f2: leave (autogenerated)
} // end try
.finally
{
	L_00f7: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00f9: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker]
	L_00ff: callvirt Void Dispose()
	L_0104: endfinally
	L_0105: leave (autogenerated)
} // end handler
L_0106: Label13
L_0106: ldloc.0
L_0107: stloc.s 6 (UnityEngine.Color)
L_0109: ldloca.s 6 (UnityEngine.Color)
L_010b: ldsfld System.Single CENTER_BG_ALPHASCALAR
L_0110: ldloc.s 6 (UnityEngine.Color)
L_0112: ldfld System.Single a
L_0117: mul
L_0118: stfld System.Single a
L_011d: ldarg.0
L_011e: ldfld BattleTech.UI.UIColorRefTracker LargeBGFillColor
L_0123: ldloc.s 6 (UnityEngine.Color)
L_0125: callvirt Void OverrideWithColor(UnityEngine.Color)
L_012a: Label10
L_012a: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void UpdateHeaderArea()
L_0000: Local var 0: BattleTech.UI.SG_Shop_Screen+StoreType
L_0000: Local var 1: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.SG_Shop_Screen+StoreType currentStoreType
L_0006: stloc.0
L_0007: ldloc.0
L_0008: switch Labels1,2,3
L_0019: br Label4
L_001e: Label1
L_001e: ldarg.0
L_001f: call Void SetHeaderAreaToSystem()
L_0024: br Label5
L_0029: Label2
L_0029: ldarg.0
L_002a: ldfld BattleTech.StarSystem theSystem
L_002f: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_0034: stloc.1
L_0035: ldarg.0
L_0036: ldloc.1
L_0037: call Void SetHeaderAreaToFaction(BattleTech.Faction)
L_003c: br Label6
L_0041: Label3
L_0041: ldarg.0
L_0042: call Void SetHeaderAreaToBlackMarket()
L_0047: Label4
L_0047: Label5
L_0047: Label6
L_0047: ret
DONE

### Patch BattleTech.StarSystem, Boolean CanUseBlackMarketStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean Override_Access(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Boolean HasBlackMarketStore()
L_0019: brfalse Label1
L_001e: ldarg.0
L_001f: call BattleTech.SimGameState get_Sim()
L_0024: callvirt HBS.Collections.TagSet get_CompanyTags()
L_0029: ldarg.0
L_002a: call BattleTech.SimGameState get_Sim()
L_002f: callvirt BattleTech.SimGameConstants get_Constants()
L_0034: callvirt BattleTech.StoryConstantsDef get_Story()
L_0039: ldfld System.String BlackMarketTag
L_003e: callvirt Boolean Contains(System.String)
L_0043: brfalse Label2
L_0048: ldc.i4.1
L_0049: br Label3
L_004e: Label1
L_004e: Label2
L_004e: ldc.i4.0
L_004f: Label3
L_004f: stloc 0 (System.Boolean)
L_0050: Label0
L_0050: ldloc 0 (System.Boolean)
L_0051: ret
DONE

### Patch BattleTech.StarSystem, Boolean HasBlackMarketStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean HasBlackMarketStore(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call BattleTech.Shop get_BlackMarketShop()
L_0019: callvirt Boolean get_IsEmpty()
L_001e: ldc.i4.0
L_001f: ceq
L_0021: stloc 0 (System.Boolean)
L_0022: Label0
L_0022: ldloc 0 (System.Boolean)
L_0023: ret
DONE

### Patch BattleTech.StarSystem, Boolean HasFactionStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call BattleTech.Shop get_FactionShop()
L_000c: callvirt Boolean get_IsEmpty()
L_0011: ldc.i4.0
L_0012: ceq
L_0014: stloc 0 (System.Boolean)
L_0015: ldarg.0
L_0016: call Void ShowShopInfo(BattleTech.StarSystem)
L_001b: ldloc 0 (System.Boolean)
L_001c: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void BeginShop()
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.SimGameState simState
L_0007: callvirt BattleTech.StarSystem get_CurSystem()
L_000c: stfld BattleTech.StarSystem theSystem
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_0017: callvirt Void ForceRadioSetSelection()
L_001c: ldarg.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.StarSystem theSystem
L_0023: callvirt BattleTech.Shop get_SystemShop()
L_0028: ldc.i4.1
L_0029: call Void ChangeToBuy(BattleTech.Shop, Boolean)
L_002e: ldarg.0
L_002f: call Void RefreshStoreTypeButtons()
L_0034: ldarg.0
L_0035: ldarg.0
L_0036: call System.Collections.IEnumerator EndOfFrameSetupStoreButtonsAndColors()
L_003b: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_0040: pop
L_0041: ldarg.0
L_0042: call Void ShowShopInfo(BattleTech.UI.SG_Shop_Screen)
L_0047: ret
DONE

### Patch BattleTech.StarSystem, Void OnSystemChange()
L_0000: ldarg.0
L_0001: call Void ReplaceShops(BattleTech.StarSystem)
L_0006: ldarg.0
L_0007: call Void RefreshShops()
L_000c: ret
DONE

### Harmony id=de.morphyum.FlashpointEnabler, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from RepeatableFlashpoints.FlashpointEnabler.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\FlashpointEnabler\FlashpointEnabler.dll
### At 2019-09-15 05.05.14
### Patch BattleTech.SimGameState, Void CompleteFlashpoint(BattleTech.Flashpoint, BattleTech.FlashpointEndType, System.String, System.String, System.Action)
L_0000: ldarg.1
L_0001: brtrue Label1
L_0006: br Label8
L_000b: Label1
L_000b: ldarg.0
L_000c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0011: ldarg.1
L_0012: callvirt Boolean Contains(BattleTech.Flashpoint)
L_0017: brfalse Label2
L_001c: ldarg.0
L_001d: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0022: ldarg.1
L_0023: callvirt Boolean Remove(BattleTech.Flashpoint)
L_0028: pop
L_0029: Label2
L_0029: ldarg.2
L_002a: ldc.i4.1
L_002b: bne.un Label3
L_0030: ldarg.1
L_0031: ldarg.3
L_0032: ldarg.s 4
L_0034: callvirt Void OnFlashpointSucceeded(System.String, System.String)
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_003f: ldarg.1
L_0040: callvirt BattleTech.FlashpointDef get_Def()
L_0045: ldfld BattleTech.BaseDescriptionDef Description
L_004a: callvirt System.String get_Id()
L_004f: callvirt Void Add(System.String)
L_0054: br Label9
L_0059: Label3
L_0059: ldarg.2
L_005a: ldc.i4.2
L_005b: bne.un Label4
L_0060: ldarg.0
L_0061: ldfld BattleTech.UI.SimGameInterruptManager interruptQueue
L_0066: callvirt Boolean get_FPEnterSystemIsOpen()
L_006b: brfalse Label5
L_0070: ldarg.0
L_0071: ldarg.s 5
L_0073: ldarg.1
L_0074: callvirt BattleTech.FlashpointDef get_Def()
L_0079: ldfld BattleTech.BaseDescriptionDef Description
L_007e: callvirt System.String get_Name()
L_0083: call Void ShowFlashpointFailedPopup(System.Action, System.String)
L_0088: br Label10
L_008d: Label5
L_008d: ldarg.0
L_008e: ldarg.s 5
L_0090: ldarg.1
L_0091: callvirt BattleTech.FlashpointDef get_Def()
L_0096: ldfld BattleTech.BaseDescriptionDef Description
L_009b: callvirt System.String get_Name()
L_00a0: call Void ShowFlashpointFailedNotif(System.Action, System.String)
L_00a5: br Label11
L_00aa: Label4
L_00aa: ldarg.2
L_00ab: ldc.i4.4
L_00ac: bne.un Label6
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_00b7: ldarg.1
L_00b8: callvirt BattleTech.FlashpointDef get_Def()
L_00bd: ldfld BattleTech.BaseDescriptionDef Description
L_00c2: callvirt System.String get_Id()
L_00c7: callvirt Void Add(System.String)
L_00cc: ldarg.0
L_00cd: ldarg.s 5
L_00cf: ldarg.1
L_00d0: callvirt BattleTech.FlashpointDef get_Def()
L_00d5: ldfld BattleTech.BaseDescriptionDef Description
L_00da: callvirt System.String get_Name()
L_00df: call Void ShowFlashpointCompletedWithoutRewardNotif(System.Action, System.String)
L_00e4: br Label12
L_00e9: Label6
L_00e9: ldarg.s 5
L_00eb: brfalse Label7
L_00f0: ldarg.s 5
L_00f2: callvirt Void Invoke()
L_00f7: Label7
L_00f7: Label8
L_00f7: Label9
L_00f7: Label10
L_00f7: Label11
L_00f7: Label12
L_00f7: ldarg.0
L_00f8: ldarg 1
L_00fe: ldarg 2
L_0104: call Void Postfix(BattleTech.SimGameState, BattleTech.Flashpoint, BattleTech.FlashpointEndType)
L_0109: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.Flashpoint GenerateFlashpoint(System.String, System.String, Boolean)
L_0000: Local var 0: BattleTech.SimGameState+<>c__DisplayClass385_0
L_0000: Local var 1: BattleTech.WeightedList`1[[BattleTech.FlashpointDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.FlashpointDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: BattleTech.WeightedList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 4: BattleTech.StarSystem
L_0000: Local var 5: BattleTech.FactionDef
L_0000: Local var 6: BattleTech.StarSystem
L_0000: Local var 7: BattleTech.FactionDef
L_0000: Local var 8: BattleTech.FlashpointDef
L_0000: Local var 9: BattleTech.FlashpointDef
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.FlashpointDef
L_0000: Local var 12: System.String
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Int32
L_0000: Local var 15: BattleTech.FlashpointDef
L_0000: Local var 16: System.Collections.Generic.List`1[[BattleTech.Faction, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Flashpoint
L_0000: ldnull
L_0001: stloc 18 (BattleTech.Flashpoint)
L_0003: ldarg.0
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
### Harmony id=com.joelmeador.FYLS, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from FYLS.Core.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\FYLS\FYLS.dll
### At 2019-09-15 05.05.14
### Patch UnityEngine.Debug, UnityEngine.ILogger get_logger()
L_0000: Local var 0: UnityEngine.ILogger
L_0000: Local var 1: UnityEngine.ILogger
L_0000: ldnull
L_0001: stloc 1 (UnityEngine.ILogger)
L_0002: ldloca 1 (UnityEngine.ILogger)
L_0004: call Boolean Prefix(UnityEngine.ILogger ByRef)
L_0009: brfalse Label0
L_000e: nop
L_000f: ldsfld UnityEngine.ILogger s_Logger
L_0014: stloc.0
L_0015: br Label1
L_001a: Label1
L_001a: ldloc.0
L_001b: stloc 1 (UnityEngine.ILogger)
L_001c: Label0
L_001c: ldloc 1 (UnityEngine.ILogger)
L_001d: ret
DONE

### Patch HBS.Logging.Logger, Void HandleUnityLog(System.String, System.String, UnityEngine.LogType)
L_0000: Local var 0: HBS.Logging.LogLevel
L_0000: Local var 1: HBS.Logging.IStackTrace
L_0000: ldarg 0
L_0006: ldarg 1
L_000c: ldarg 2
L_0012: call Boolean Prefix(System.String, System.String, UnityEngine.LogType)
L_0017: brfalse Label0
L_001c: ldsfld System.Boolean ignoreNextUnityCapture
L_0021: brfalse Label1
L_0026: ldc.i4.0
L_0027: stsfld System.Boolean ignoreNextUnityCapture
L_002c: br Label17
L_0031: Label1
L_0031: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_0036: brtrue Label2
L_003b: ldstr "Unity"
L_0040: call HBS.Logging.ILog GetLogger(System.String)
L_0045: castclass HBS.Logging.Logger+LogImpl
L_004a: stsfld HBS.Logging.Logger+LogImpl unityLog
L_004f: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_0054: ldc.i4.0
L_0055: stfld System.Boolean canIgnoreUnityLogs
L_005a: Label2
L_005a: ldarg.2
L_005b: switch Labels3,4,5,6,7
L_0074: br Label8
L_0079: Label4
L_0079: ldc.i4.3
L_007a: stloc.0
L_007b: br Label9
L_0080: Label3
L_0080: ldc.i4.3
L_0081: stloc.0
L_0082: br Label10
L_0087: Label7
L_0087: ldc.i4.3
L_0088: stloc.0
L_0089: br Label11
L_008e: Label5
L_008e: ldc.i4.2
L_008f: stloc.0
L_0090: br Label12
L_0095: Label6
L_0095: ldc.i4.1
L_0096: stloc.0
L_0097: br Label13
L_009c: Label8
L_009c: ldc.i4.1
L_009d: stloc.0
L_009e: Label9
L_009e: Label10
L_009e: Label11
L_009e: Label12
L_009e: Label13
L_009e: ldnull
L_009f: stloc.1
L_00a0: ldarg.1
L_00a1: call Boolean IsNullOrEmpty(System.String)
L_00a6: brtrue Label14
L_00ab: ldarg.1
L_00ac: ldstr "UnityEngine.Debug:Log"
L_00b1: callvirt Boolean StartsWith(System.String)
L_00b6: brfalse Label15
L_00bb: ldarg.1
L_00bc: ldc.i4.1
L_00bd: newobj Void .ctor(String, Int32)
L_00c2: box HBS.Logging.UnityStackTrace
L_00c7: stloc.1
L_00c8: br Label16
L_00cd: Label15
L_00cd: ldarg.1
L_00ce: ldc.i4.0
L_00cf: newobj Void .ctor(String, Int32)
L_00d4: box HBS.Logging.UnityStackTrace
L_00d9: stloc.1
L_00da: Label14
L_00da: Label16
L_00da: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_00df: ldloc.0
L_00e0: ldarg.0
L_00e1: ldnull
L_00e2: ldnull
L_00e3: ldloc.1
L_00e4: callvirt Void LogAtLevel(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_00e9: Label17
L_00e9: Label0
L_00e9: ldarg 0
L_00ef: ldarg 1
L_00f5: ldarg 2
L_00fb: call Void Postfix(System.String, System.String, UnityEngine.LogType)
L_0100: ret
DONE

### Patch HBS.Logging.Logger+LogImpl, Void LogAtLevel(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0000: Local var 0: System.String
L_0000: Local var 1: HBS.Logging.Logger+LogImpl
L_0000: Local var 2: HBS.Collections.Generic.FastList`1[[HBS.Logging.ILogAppender, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: HBS.Logging.ILogAppender[]
L_0000: Local var 5: System.Int32
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg 5
L_001e: call Boolean Prefix(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0023: brfalse Label0
L_0028: ldarg.0
L_0029: call System.String get_Name()
L_002e: stloc.0
L_002f: ldarg.0
L_0030: ldarg.1
L_0031: call Boolean IsEnabledFor(HBS.Logging.LogLevel)
L_0036: brfalse Label1
L_003b: ldsfld System.Boolean IsUnityApplication
L_0040: brtrue Label2
L_0045: ldsfld HBS.Logging.FormatHelper formatHelper
L_004a: ldloc.0
L_004b: ldarg.1
L_004c: ldarg.2
L_004d: ldarg.s 4
L_004f: ldarg.s 5
L_0051: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_0056: call Void WriteLine(System.String)
L_005b: Label2
L_005b: ldsfld HBS.Logging.ILogAppender unityLogBypassAppender
L_0060: brfalse Label3
L_0065: ldsfld HBS.Logging.ILogAppender unityLogBypassAppender
L_006a: ldloc.0
L_006b: ldarg.1
L_006c: ldarg.2
L_006d: ldarg.3
L_006e: ldarg.s 4
L_0070: ldarg.s 5
L_0072: callvirt Void OnLogMessage(System.String, HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0077: Label3
L_0077: ldsfld System.Boolean IsUnityApplication
L_007c: brfalse Label4
L_0081: ldarg.1
L_0082: switch Labels5,6,7,8
L_0097: br Label9
L_009c: Label5
L_009c: Label6
L_009c: ldarg.0
L_009d: ldfld System.Boolean canIgnoreUnityLogs
L_00a2: stsfld System.Boolean ignoreNextUnityCapture
L_00a7: ldsfld HBS.Logging.FormatHelper formatHelper
L_00ac: ldloc.0
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldarg.s 4
L_00b1: ldarg.s 5
L_00b3: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_00b8: ldarg.3
L_00b9: call Void Log(System.Object, UnityEngine.Object)
L_00be: br Label10
L_00c3: Label7
L_00c3: ldarg.0
L_00c4: ldfld System.Boolean canIgnoreUnityLogs
L_00c9: stsfld System.Boolean ignoreNextUnityCapture
L_00ce: ldsfld HBS.Logging.FormatHelper formatHelper
L_00d3: ldloc.0
L_00d4: ldarg.1
L_00d5: ldarg.2
L_00d6: ldarg.s 4
L_00d8: ldarg.s 5
L_00da: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_00df: ldarg.3
L_00e0: call Void LogWarning(System.Object, UnityEngine.Object)
L_00e5: br Label11
L_00ea: Label8
L_00ea: ldarg.0
L_00eb: ldfld System.Boolean canIgnoreUnityLogs
L_00f0: stsfld System.Boolean ignoreNextUnityCapture
L_00f5: ldsfld HBS.Logging.FormatHelper formatHelper
L_00fa: ldloc.0
L_00fb: ldarg.1
L_00fc: ldarg.2
L_00fd: ldarg.s 4
L_00ff: ldarg.s 5
L_0101: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_0106: ldarg.3
L_0107: call Void LogError(System.Object, UnityEngine.Object)
L_010c: Label4
L_010c: Label9
L_010c: Label10
L_010c: Label11
L_010c: call Boolean get_HasInstance()
L_0111: brfalse Label12
L_0116: call HBS.DebugConsole.DebugConsole get_Instance()
L_011b: ldloc.0
L_011c: ldarg.2
L_011d: callvirt System.String ToString()
L_0122: ldarg.1
L_0123: callvirt Void LogMessage(System.String, System.String, HBS.Logging.LogLevel)
L_0128: Label12
L_0128: ldarg.0
L_0129: stloc.1
L_012a: br Label13
L_012f: Label17
L_012f: ldloc.1
L_0130: ldfld HBS.Collections.Generic.FastList`1[HBS.Logging.ILogAppender] appenders
L_0135: stloc.2
L_0136: ldloc.2
L_0137: brfalse Label14
L_013c: ldloc.2
L_013d: callvirt Int32 get_Count()
L_0142: stloc.3
L_0143: ldloc.2
L_0144: callvirt HBS.Logging.ILogAppender[] get_Buffer()
L_0149: stloc.s 4 (HBS.Logging.ILogAppender[])
L_014b: ldc.i4.0
L_014c: stloc.s 5 (System.Int32)
L_014e: br Label15
L_0153: Label16
L_0153: ldloc.s 4 (HBS.Logging.ILogAppender[])
L_0155: ldloc.s 5 (System.Int32)
L_0157: ldelem.ref
L_0158: ldloc.0
L_0159: ldarg.1
L_015a: ldarg.2
L_015b: ldarg.3
L_015c: ldarg.s 4
L_015e: ldarg.s 5
L_0160: callvirt Void OnLogMessage(System.String, HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0165: ldloc.s 5 (System.Int32)
L_0167: ldc.i4.1
L_0168: add
L_0169: stloc.s 5 (System.Int32)
L_016b: Label15
L_016b: ldloc.s 5 (System.Int32)
L_016d: ldloc.3
L_016e: blt Label16
L_0173: Label14
L_0173: ldloc.1
L_0174: ldfld HBS.Logging.Logger+LogImpl parent
L_0179: stloc.1
L_017a: Label13
L_017a: ldloc.1
L_017b: brtrue Label17
L_0180: Label1
L_0180: Label0
L_0180: ret
DONE

### Harmony id=Battletech.realitymachina.LessHeadInjuries, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from LessHeadInjuries.LessHeadInjuries.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\LessHeadInjuries\RM_LessHeadInjuries.dll
### At 2019-09-15 05.05.14
### Patch BattleTech.GameInstance, Void LaunchContract(BattleTech.Contract, System.String)
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: brfalse Label1
L_000b: br Label7
L_0010: Label1
L_0010: ldarg.1
L_0011: ldstr "LaunchContract"
L_0016: callvirt Void PrintValuesToDisc(System.String)
L_001b: ldarg.2
L_001c: ldstr "bf40fd39-ccf9-47c4-94a6-061809681140"
L_0021: call Boolean op_Equality(System.String, System.String)
L_0026: brfalse Label2
L_002b: ldstr "GameInstance"
L_0030: call HBS.Logging.ILog GetLogger(System.String)
L_0035: ldstr "Launching contract with Player1TeamDefinitionGuid"
L_003a: callvirt Void Log(System.Object)
L_003f: br Label3
L_0044: Label2
L_0044: ldarg.2
L_0045: ldstr "757173dd-b4e1-4bb5-9bee-d78e623cc867"
L_004a: call Boolean op_Equality(System.String, System.String)
L_004f: brfalse Label4
L_0054: ldstr "GameInstance"
L_0059: call HBS.Logging.ILog GetLogger(System.String)
L_005e: ldstr "Launching contract with Player2TeamDefinitionGuid"
L_0063: callvirt Void Log(System.Object)
L_0068: Label3
L_0068: Label4
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_Combat(BattleTech.CombatGameState)
L_0073: ldarg.0
L_0074: call BattleTech.CombatGameState get_Combat()
L_0079: ldarg.1
L_007a: ldarg.0
L_007b: ldarg.2
L_007c: callvirt Void FirstTimeInit(BattleTech.Contract, BattleTech.GameInstance, System.String)
L_0081: ldarg.0
L_0082: call BattleTech.CombatGameState get_Combat()
L_0087: callvirt BattleTech.Contract get_ActiveContract()
L_008c: callvirt Void Begin()
L_0091: ldarg.0
L_0092: call BattleTech.SimGameState get_Simulation()
L_0097: brfalse Label5
L_009c: ldarg.0
L_009d: call BattleTech.SimGameState get_Simulation()
L_00a2: callvirt Boolean get_IsIronmanCampaign()
L_00a7: brfalse Label6
L_00ac: ldarg.0
L_00ad: call BattleTech.SimGameState get_Simulation()
L_00b2: callvirt MessageCenter get_MessageCenter()
L_00b7: ldc.i4.s 64
L_00b9: ldarg.0
L_00ba: ldftn Void HandleCombatIronmanFailure(MessageCenterMessage)
L_00c0: newobj Void .ctor(Object, IntPtr)
L_00c5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ca: Label5
L_00ca: Label6
L_00ca: Label7
L_00ca: call Void Postfix()
L_00cf: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.0
L_0043: ldarg 1
L_0049: ldarg 2
L_004f: ldarg 3
L_0055: ldarg 4
L_005b: ldarg 5
L_0061: ldarg 6
L_0067: ldarg 7
L_006d: ldarg 8
L_0073: call Void Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0078: ldarg.3
L_0079: brfalse Label1
L_007e: ldarg.3
L_007f: ldc.i4 65536
L_0084: bne.un Label2
L_0089: Label1
L_0089: ldc.i4.0
L_008a: br Label23
L_008f: Label2
L_008f: ldsfld HBS.Logging.ILog attackSequenceLogger
L_0094: callvirt Boolean get_IsDebugEnabled()
L_0099: brfalse Label3
L_009e: ldsfld HBS.Logging.ILog attackSequenceLogger
L_00a3: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_00a8: ldc.i4.6
L_00a9: newarr System.Object
L_00ae: dup
L_00af: ldc.i4.0
L_00b0: ldarg.2
L_00b1: ldfld System.Int32 attackWeaponIndex
L_00b6: box System.Int32
L_00bb: stelem.ref
L_00bc: dup
L_00bd: ldc.i4.1
L_00be: ldarga.s 3
L_00c0: constrained. BattleTech.ArmorLocation
L_00c6: callvirt System.String ToString()
L_00cb: stelem.ref
L_00cc: dup
L_00cd: ldc.i4.2
L_00ce: ldarg.s 5
L_00d0: box System.Single
L_00d5: stelem.ref
L_00d6: dup
L_00d7: ldc.i4.3
L_00d8: ldarg.2
L_00d9: ldfld System.Int32 attackGroupIndex
L_00de: box System.Int32
L_00e3: stelem.ref
L_00e4: dup
L_00e5: ldc.i4.4
L_00e6: ldarg.0
L_00e7: call System.String get_GUID()
L_00ec: stelem.ref
L_00ed: dup
L_00ee: ldc.i4.5
L_00ef: ldarg.s 6
L_00f1: box System.Int32
L_00f6: stelem.ref
L_00f7: call System.String Format(System.String, System.Object[])
L_00fc: callvirt Void LogDebug(System.Object)
L_0101: Label3
L_0101: ldarg.0
L_0102: call BattleTech.CombatGameState get_Combat()
L_0107: callvirt BattleTech.AttackDirector get_AttackDirector()
L_010c: ldarg.2
L_010d: ldfld System.Int32 attackSequenceId
L_0112: callvirt AttackSequence GetAttackSequence(Int32)
L_0117: stloc.0
L_0118: ldsfld HBS.Logging.ILog damageLogger
L_011d: callvirt Boolean get_IsLogEnabled()
L_0122: brfalse Label4
L_0127: ldsfld HBS.Logging.ILog damageLogger
L_012c: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_0131: ldc.i4.5
L_0132: newarr System.Object
L_0137: dup
L_0138: ldc.i4.0
L_0139: ldarg.0
L_013a: callvirt BattleTech.DescriptionDef get_Description()
L_013f: callvirt System.String get_Name()
L_0144: stelem.ref
L_0145: dup
L_0146: ldc.i4.1
L_0147: ldarg.s 5
L_0149: box System.Single
L_014e: stelem.ref
L_014f: dup
L_0150: ldc.i4.2
L_0151: ldarga.s 3
L_0153: constrained. BattleTech.ArmorLocation
L_0159: callvirt System.String ToString()
L_015e: stelem.ref
L_015f: dup
L_0160: ldc.i4.3
L_0161: ldarg.s 4
L_0163: callvirt System.String get_Name()
L_0168: stelem.ref
L_0169: dup
L_016a: ldc.i4.4
L_016b: ldarg.2
L_016c: ldfld System.Int32 attackWeaponIndex
L_0171: box System.Int32
L_0176: stelem.ref
L_0177: call System.String Format(System.String, System.Object[])
L_017c: callvirt Void Log(System.Object)
L_0181: Label4
L_0181: ldloc.0
L_0182: brfalse Label5
L_0187: ldloc.0
L_0188: ldarg.0
L_0189: call System.String get_GUID()
L_018e: callvirt Void FlagAttackDidDamage(System.String)
L_0193: ldarg.0
L_0194: call BattleTech.CombatGameState get_Combat()
L_0199: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_019e: ldarg.0
L_019f: call System.String get_GUID()
L_01a4: ldarg.1
L_01a5: ldarg.2
L_01a6: ldarg.3
L_01a7: ldarg.s 4
L_01a9: ldarg.s 5
L_01ab: ldarg.s 6
L_01ad: ldarg.s 7
L_01af: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_01b4: Label5
L_01b4: ldarg.s 5
L_01b6: stloc.1
L_01b7: ldarg.0
L_01b8: ldarg.3
L_01b9: call Single GetCurrentArmor(BattleTech.ArmorLocation)
L_01be: stloc.2
L_01bf: ldloc.2
L_01c0: ldc.r4 0
L_01c5: ble.un Label6
L_01ca: ldarg.s 5
L_01cc: ldloc.2
L_01cd: call Single Min(Single, Single)
L_01d2: stloc.s 7 (System.Single)
L_01d4: ldsfld HBS.Logging.ILog attackLogger
L_01d9: callvirt Boolean get_IsLogEnabled()
L_01de: brfalse Label7
L_01e3: ldsfld HBS.Logging.ILog attackLogger
L_01e8: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01ed: ldc.i4.5
L_01ee: newarr System.Object
L_01f3: dup
L_01f4: ldc.i4.0
L_01f5: ldarg.2
L_01f6: ldfld System.Int32 attackSequenceId
L_01fb: box System.Int32
L_0200: stelem.ref
L_0201: dup
L_0202: ldc.i4.1
L_0203: ldarg.2
L_0204: ldfld System.Int32 attackWeaponIndex
L_0209: box System.Int32
L_020e: stelem.ref
L_020f: dup
L_0210: ldc.i4.2
L_0211: ldarg.1
L_0212: box System.Int32
L_0217: stelem.ref
L_0218: dup
L_0219: ldc.i4.3
L_021a: ldarga.s 3
L_021c: constrained. BattleTech.ArmorLocation
L_0222: callvirt System.String ToString()
L_0227: stelem.ref
L_0228: dup
L_0229: ldc.i4.4
L_022a: ldloc.s 7 (System.Single)
L_022c: box System.Single
L_0231: stelem.ref
L_0232: call System.String Format(System.String, System.Object[])
L_0237: callvirt Void Log(System.Object)
L_023c: Label7
L_023c: ldsfld HBS.Logging.ILog damageLogger
L_0241: callvirt Boolean get_IsLogEnabled()
L_0246: brfalse Label8
L_024b: ldloc.2
L_024c: ldloc.s 7 (System.Single)
L_024e: sub
L_024f: stloc.s 8 (System.Single)
L_0251: ldsfld HBS.Logging.ILog damageLogger
L_0256: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_025b: ldloc.s 7 (System.Single)
L_025d: box System.Single
L_0262: ldloc.2
L_0263: box System.Single
L_0268: ldloc.s 8 (System.Single)
L_026a: box System.Single
L_026f: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0274: callvirt Void Log(System.Object)
L_0279: Label8
L_0279: ldarg.0
L_027a: ldarg.3
L_027b: ldloc.s 7 (System.Single)
L_027d: ldarg.2
L_027e: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_0283: ldarg.s 5
L_0285: ldloc.s 7 (System.Single)
L_0287: sub
L_0288: stloc.1
L_0289: Label6
L_0289: ldloc.1
L_028a: ldc.r4 0
L_028f: bgt.un Label9
L_0294: ldarg.0
L_0295: call BattleTech.CombatGameState get_Combat()
L_029a: callvirt MessageCenter get_MessageCenter()
L_029f: ldarg.2
L_02a0: ldfld System.String attackerId
L_02a5: ldarg.0
L_02a6: call System.String get_GUID()
L_02ab: ldarg.s 5
L_02ad: ldarg.3
L_02ae: newobj Void .ctor(String, String, Single, ArmorLocation)
L_02b3: callvirt Void PublishMessage(MessageCenterMessage)
L_02b8: ldc.i4.1
L_02b9: br Label24
L_02be: Label9
L_02be: ldarg.3
L_02bf: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_02c4: stloc.3
L_02c5: call UnityEngine.Vector3 get_one()
L_02ca: stloc.s 4 (UnityEngine.Vector3)
L_02cc: ldarg.0
L_02cd: call BattleTech.MechRepresentation get_GameRep()
L_02d2: ldnull
L_02d3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02d8: brfalse Label10
L_02dd: ldarg.s 4
L_02df: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02e4: ldnull
L_02e5: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02ea: brfalse Label11
L_02ef: ldarg.s 4
L_02f1: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02f6: ldfld UnityEngine.Transform[] vfxTransforms
L_02fb: ldc.i4.0
L_02fc: ldelem.ref
L_02fd: callvirt UnityEngine.Vector3 get_position()
L_0302: stloc.s 9 (UnityEngine.Vector3)
L_0304: ldarg.0
L_0305: call BattleTech.MechRepresentation get_GameRep()
L_030a: ldloc.3
L_030b: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_0310: callvirt UnityEngine.Vector3 get_position()
L_0315: ldloc.s 9 (UnityEngine.Vector3)
L_0317: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_031c: stloc.s 4 (UnityEngine.Vector3)
L_031e: ldloca.s 4 (UnityEngine.Vector3)
L_0320: call Void Normalize()
L_0325: ldloca.s 4 (UnityEngine.Vector3)
L_0327: ldc.r4 0.5
L_032c: stfld System.Single y
L_0331: ldloc.s 4 (UnityEngine.Vector3)
L_0333: ldarg.s 5
L_0335: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_033a: stloc.s 4 (UnityEngine.Vector3)
L_033c: Label10
L_033c: Label11
L_033c: ldarg.0
L_033d: ldloc.3
L_033e: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_0343: stloc.s 5 (System.Single)
L_0345: ldloc.s 5 (System.Single)
L_0347: ldc.r4 0
L_034c: ble.un Label12
L_0351: ldloc.1
L_0352: ldloc.s 5 (System.Single)
L_0354: call Single Min(Single, Single)
L_0359: stloc.s 10 (System.Single)
L_035b: ldsfld HBS.Logging.ILog attackLogger
L_0360: callvirt Boolean get_IsLogEnabled()
L_0365: brfalse Label13
L_036a: ldsfld HBS.Logging.ILog attackLogger
L_036f: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_0374: ldc.i4.5
L_0375: newarr System.Object
L_037a: dup
L_037b: ldc.i4.0
L_037c: ldarg.2
L_037d: ldfld System.Int32 attackSequenceId
L_0382: box System.Int32
L_0387: stelem.ref
L_0388: dup
L_0389: ldc.i4.1
L_038a: ldarg.2
L_038b: ldfld System.Int32 attackWeaponIndex
L_0390: box System.Int32
L_0395: stelem.ref
L_0396: dup
L_0397: ldc.i4.2
L_0398: ldarg.1
L_0399: box System.Int32
L_039e: stelem.ref
L_039f: dup
L_03a0: ldc.i4.3
L_03a1: ldloca.s 3 (BattleTech.ChassisLocations)
L_03a3: constrained. BattleTech.ChassisLocations
L_03a9: callvirt System.String ToString()
L_03ae: stelem.ref
L_03af: dup
L_03b0: ldc.i4.4
L_03b1: ldloc.s 10 (System.Single)
L_03b3: box System.Single
L_03b8: stelem.ref
L_03b9: call System.String Format(System.String, System.Object[])
L_03be: callvirt Void Log(System.Object)
L_03c3: Label13
L_03c3: ldsfld HBS.Logging.ILog damageLogger
L_03c8: callvirt Boolean get_IsLogEnabled()
L_03cd: brfalse Label14
L_03d2: ldloc.s 5 (System.Single)
L_03d4: ldloc.s 10 (System.Single)
L_03d6: sub
L_03d7: stloc.s 11 (System.Single)
L_03d9: ldsfld HBS.Logging.ILog damageLogger
L_03de: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03e3: ldloc.s 10 (System.Single)
L_03e5: box System.Single
L_03ea: ldloc.s 5 (System.Single)
L_03ec: box System.Single
L_03f1: ldloc.s 11 (System.Single)
L_03f3: box System.Single
L_03f8: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03fd: callvirt Void Log(System.Object)
L_0402: Label14
L_0402: ldarg.0
L_0403: ldloc.3
L_0404: ldloc.s 10 (System.Single)
L_0406: ldarg.2
L_0407: call Void ApplyStructureStatDamage(BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_040c: ldloc.1
L_040d: ldloc.s 10 (System.Single)
L_040f: sub
L_0410: stloc.1
L_0411: ldarg.0
L_0412: ldloc.3
L_0413: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0418: brfalse Label15
L_041d: ldloc.s 10 (System.Single)
L_041f: ldc.r4 0.01
L_0424: ble.un Label16
L_0429: ldarg.0
L_042a: ldarg.2
L_042b: ldarg.1
L_042c: ldloc.3
L_042d: ldloc.s 4 (UnityEngine.Vector3)
L_042f: ldarg.s 8
L_0431: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_0436: br Label17
L_043b: Label12
L_043b: ldarg.0
L_043c: callvirt Boolean get_IsDead()
L_0441: brfalse Label18
L_0446: ldloc.1
L_0447: ldc.r4 0
L_044c: ble.un Label19
L_0451: ldarg.0
L_0452: ldarg.2
L_0453: ldfld System.String attackerId
L_0458: ldloc.3
L_0459: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_045e: ldc.i4.8
L_045f: ldstr "{0}"
L_0464: ldc.r4 1
L_0469: ldloc.1
L_046a: call Single Max(Single, Single)
L_046f: conv.i4
L_0470: box System.Int32
L_0475: call System.String Format(System.String, System.Object)
L_047a: ldarg.0
L_047b: call BattleTech.CombatGameState get_Combat()
L_0480: callvirt BattleTech.CombatGameConstants get_Constants()
L_0485: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_048a: ldfld System.Single floatieSizeMedium
L_048f: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_0494: Label15
L_0494: Label16
L_0494: Label17
L_0494: Label18
L_0494: Label19
L_0494: ldarg.0
L_0495: call BattleTech.CombatGameState get_Combat()
L_049a: callvirt MessageCenter get_MessageCenter()
L_049f: ldarg.2
L_04a0: ldfld System.String attackerId
L_04a5: ldarg.0
L_04a6: call System.String get_GUID()
L_04ab: ldarg.s 5
L_04ad: ldarg.3
L_04ae: newobj Void .ctor(String, String, Single, ArmorLocation)
L_04b3: callvirt Void PublishMessage(MessageCenterMessage)
L_04b8: ldloc.1
L_04b9: ldc.r4 0
L_04be: bgt.un Label20
L_04c3: ldc.i4.1
L_04c4: br Label25
L_04c9: Label20
L_04c9: ldarg.3
L_04ca: ldarg.2
L_04cb: ldfld BattleTech.AttackDirection[] attackDirections
L_04d0: ldarg.s 6
L_04d2: ldelem.i4
L_04d3: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04d8: stloc.s 6 (BattleTech.ArmorLocation)
L_04da: ldsfld HBS.Logging.ILog attackLogger
L_04df: callvirt Boolean get_IsLogEnabled()
L_04e4: brfalse Label21
L_04e9: ldsfld HBS.Logging.ILog attackLogger
L_04ee: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04f3: ldc.i4.6
L_04f4: newarr System.Object
L_04f9: dup
L_04fa: ldc.i4.0
L_04fb: ldarg.2
L_04fc: ldfld System.Int32 attackSequenceId
L_0501: box System.Int32
L_0506: stelem.ref
L_0507: dup
L_0508: ldc.i4.1
L_0509: ldarg.2
L_050a: ldfld System.Int32 attackWeaponIndex
L_050f: box System.Int32
L_0514: stelem.ref
L_0515: dup
L_0516: ldc.i4.2
L_0517: ldarg.1
L_0518: box System.Int32
L_051d: stelem.ref
L_051e: dup
L_051f: ldc.i4.3
L_0520: ldloca.s 3 (BattleTech.ChassisLocations)
L_0522: constrained. BattleTech.ChassisLocations
L_0528: callvirt System.String ToString()
L_052d: stelem.ref
L_052e: dup
L_052f: ldc.i4.4
L_0530: ldloc.1
L_0531: box System.Single
L_0536: stelem.ref
L_0537: dup
L_0538: ldc.i4.5
L_0539: ldloca.s 6 (BattleTech.ArmorLocation)
L_053b: constrained. BattleTech.ArmorLocation
L_0541: callvirt System.String ToString()
L_0546: stelem.ref
L_0547: call System.String Format(System.String, System.Object[])
L_054c: callvirt Void Log(System.Object)
L_0551: Label21
L_0551: ldsfld HBS.Logging.ILog damageLogger
L_0556: callvirt Boolean get_IsLogEnabled()
L_055b: brfalse Label22
L_0560: ldsfld HBS.Logging.ILog damageLogger
L_0565: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_056a: ldloca.s 3 (BattleTech.ChassisLocations)
L_056c: constrained. BattleTech.ChassisLocations
L_0572: callvirt System.String ToString()
L_0577: ldloc.1
L_0578: box System.Single
L_057d: ldloca.s 6 (BattleTech.ArmorLocation)
L_057f: constrained. BattleTech.ArmorLocation
L_0585: callvirt System.String ToString()
L_058a: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_058f: callvirt Void Log(System.Object)
L_0594: Label22
L_0594: ldarg.0
L_0595: ldarg.1
L_0596: ldarg.2
L_0597: ldloc.s 6 (BattleTech.ArmorLocation)
L_0599: ldarg.s 4
L_059b: ldloc.1
L_059c: ldarg.s 6
L_059e: ldarg.s 7
L_05a0: ldarg.s 8
L_05a2: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_05a7: Label23
L_05a7: Label24
L_05a7: Label25
L_05a7: stloc 12 (System.Boolean)
L_05a9: Label0
L_05a9: ldloc 12 (System.Boolean)
L_05ab: ret
DONE

### Patch BattleTech.Pilot, Void SetNeedsInjury(BattleTech.InjuryReason)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Pilot, BattleTech.InjuryReason)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldc.i4.1
L_0013: stfld System.Boolean needsInjury
L_0018: ldarg.0
L_0019: ldfld BattleTech.InjuryReason injuryReason
L_001e: brtrue Label1
L_0023: ldarg.0
L_0024: ldarg.1
L_0025: stfld BattleTech.InjuryReason injuryReason
L_002a: Label1
L_002a: Label0
L_002a: ret
DONE

### Harmony id=io.github.mpstark.LogoReplacement, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from LogoReplacement.Main.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\LogoReplacement\LogoReplacement.dll
### At 2019-09-15 05.05.14
### Patch BattleTech.UI.MainMenu, Void Init()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: UnityEngine.GameObject[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Init()
L_0006: ldarg.0
L_0007: call BattleTech.GameInstance get_BattleTechGame()
L_000c: callvirt BattleTech.ApplicationConstants get_ApplicationConstants()
L_0011: stfld BattleTech.ApplicationConstants appConstants
L_0016: ldarg.0
L_0017: call BattleTech.GameInstance get_BattleTechGame()
L_001c: callvirt MessageCenter get_MessageCenter()
L_0021: stfld MessageCenter _messageCenter
L_0026: ldarg.0
L_0027: call BattleTech.GameInstance get_BattleTechGame()
L_002c: callvirt BattleTech.Save.ProfileManager get_ProfileManager()
L_0031: stfld BattleTech.Save.ProfileManager _profileManager
L_0036: call Boolean get_TestToolsEnabled()
L_003b: stloc.0
L_003c: ldarg.0
L_003d: ldfld UnityEngine.GameObject[] enableInDevelopmentbuildsOnly
L_0042: stloc.1
L_0043: ldc.i4.0
L_0044: stloc.2
L_0045: br Label1
L_004a: Label2
L_004a: ldloc.1
L_004b: ldloc.2
L_004c: ldelem.ref
L_004d: ldloc.0
L_004e: callvirt Void SetActive(Boolean)
L_0053: ldloc.2
L_0054: ldc.i4.1
L_0055: add
L_0056: stloc.2
L_0057: Label1
L_0057: ldloc.2
L_0058: ldloc.1
L_0059: ldlen
L_005a: conv.i4
L_005b: blt Label2
L_0060: ldarg.0
L_0061: call Void TestDLCBanner()
L_0066: call Void Postfix()
L_006b: call Void Postfix()
L_0070: ret
DONE

### Harmony id=MechEngineer.Features.OverrideTonnage, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideTonnage.OverrideTonnageSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.15
### Patch BattleTech.MechValidationRules, Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldarg.1
L_0007: callvirt BattleTech.ChassisDef get_Chassis()
L_000c: callvirt Single get_Tonnage()
L_0011: stloc.1
L_0012: ldarg.1
L_0013: ldloca.s 0 (System.Single)
L_0015: ldloca.s 1 (System.Single)
L_0017: call Void CalculateTonnage(BattleTech.MechDef, Single ByRef, Single ByRef)
L_001c: ldloc.0
L_001d: ldarg.1
L_001e: callvirt BattleTech.ChassisDef get_Chassis()
L_0023: callvirt Single get_Tonnage()
L_0028: sub
L_0029: call Single Abs(Single)
L_002e: conv.r8
L_002f: ldc.r8 9.99999974737875E-05
L_0038: bge.un Label1
L_003d: br Label4
L_0042: Label1
L_0042: ldloc.0
L_0043: ldarg.1
L_0044: callvirt BattleTech.ChassisDef get_Chassis()
L_0049: callvirt Single get_Tonnage()
L_004e: ble.un Label2
L_0053: ldarg.2
L_0054: ldc.i4.2
L_0055: ldstr "OVERWEIGHT: 'Mech weight exceeds maximum tonnage for the Chassis"
L_005a: call System.Object[] Empty[Object]()
L_005f: newobj Void .ctor(String, Object[])
L_0064: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0069: Label2
L_0069: ldloc.0
L_006a: ldarg.1
L_006b: callvirt BattleTech.ChassisDef get_Chassis()
L_0070: callvirt Single get_Tonnage()
L_0075: ldc.r4 1
L_007a: sub
L_007b: bgt.un Label3
L_0080: ldarg.2
L_0081: ldc.i4.3
L_0082: ldstr "UNDERWEIGHT: 'Mech has unused tonnage"
L_0087: call System.Object[] Empty[Object]()
L_008c: newobj Void .ctor(String, Object[])
L_0091: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0096: Label3
L_0096: Label4
L_0096: ret
DONE

### Patch BattleTech.MechValidationRules, Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldarg.1
L_0007: callvirt BattleTech.ChassisDef get_Chassis()
L_000c: callvirt Single get_Tonnage()
L_0011: stloc.1
L_0012: ldarg.1
L_0013: ldloca.s 0 (System.Single)
L_0015: ldloca.s 1 (System.Single)
L_0017: call Void CalculateTonnage(BattleTech.MechDef, Single ByRef, Single ByRef)
L_001c: ldloc.0
L_001d: ldarg.1
L_001e: callvirt BattleTech.ChassisDef get_Chassis()
L_0023: callvirt Single get_Tonnage()
L_0028: sub
L_0029: call Single Abs(Single)
L_002e: conv.r8
L_002f: ldc.r8 9.99999974737875E-05
L_0038: bge.un Label1
L_003d: br Label4
L_0042: Label1
L_0042: ldloc.0
L_0043: ldarg.1
L_0044: callvirt BattleTech.ChassisDef get_Chassis()
L_0049: callvirt Single get_Tonnage()
L_004e: ble.un Label2
L_0053: ldarg.2
L_0054: ldc.i4.2
L_0055: ldstr "OVERWEIGHT: 'Mech weight exceeds maximum tonnage for the Chassis"
L_005a: call System.Object[] Empty[Object]()
L_005f: newobj Void .ctor(String, Object[])
L_0064: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0069: Label2
L_0069: ldloc.0
L_006a: ldarg.1
L_006b: callvirt BattleTech.ChassisDef get_Chassis()
L_0070: callvirt Single get_Tonnage()
L_0075: ldc.r4 1
L_007a: sub
L_007b: bgt.un Label3
L_0080: ldarg.2
L_0081: ldc.i4.3
L_0082: ldstr "UNDERWEIGHT: 'Mech has unused tonnage"
L_0087: call System.Object[] Empty[Object]()
L_008c: newobj Void .ctor(String, Object[])
L_0091: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0096: Label3
L_0096: Label4
L_0096: ret
DONE

### Harmony id=MechEngineer.Features.Engines, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.Engines.EngineSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.15
### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg 1
L_002f: ldarg 2
L_0035: ldarg 3
L_003b: ldarg 4
L_0041: ldarg.0
L_0042: ldarg.0
L_0043: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0048: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_004d: brfalse Label0
L_0052: ldarg.0
L_0053: ldarg.s 4
L_0055: stfld System.Boolean loggingSalvageResults
L_005a: ldarg.0
L_005b: call BattleTech.GameInstance get_BattleTechGame()
L_0060: callvirt BattleTech.SimGameState get_Simulation()
L_0065: brtrue Label1
L_006a: ldsfld HBS.Logging.ILog logger
L_006f: ldstr "Can't generate salvage without sim game."
L_0074: callvirt Void LogError(System.Object)
L_0079: br Label57
L_007e: Label1
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0089: ldarg.0
L_008a: newobj Void .ctor()
L_008f: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0094: ldarg.0
L_0095: newobj Void .ctor()
L_009a: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_009f: ldarg.0
L_00a0: newobj Void .ctor()
L_00a5: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_00aa: ldarg.0
L_00ab: call BattleTech.GameInstance get_BattleTechGame()
L_00b0: callvirt BattleTech.SimGameState get_Simulation()
L_00b5: stloc.0
L_00b6: ldloc.0
L_00b7: callvirt BattleTech.SimGameConstants get_Constants()
L_00bc: stloc.1
L_00bd: ldc.i4.0
L_00be: stloc.s 8 (System.Int32)
L_00c0: br Label2
L_00c5: Label9
L_00c5: ldarg.3
L_00c6: ldloc.s 8 (System.Int32)
L_00c8: callvirt BattleTech.UnitResult get_Item(Int32)
L_00cd: ldfld BattleTech.MechDef mech
L_00d2: stloc.s 9 (BattleTech.MechDef)
L_00d4: ldloc.0
L_00d5: callvirt NetworkRandom get_NetworkRandom()
L_00da: ldc.r4 0
L_00df: ldc.r4 1
L_00e4: callvirt Single Float(Single, Single)
L_00e9: stloc.s 10 (System.Single)
L_00eb: ldloc.s 10 (System.Single)
L_00ed: ldloc.1
L_00ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00f3: ldfld System.Single DestroyedMechRecoveryChance
L_00f8: cgt.un
L_00fa: ldc.i4.0
L_00fb: ceq
L_00fd: stloc.s 11 (System.Boolean)
L_00ff: ldsfld HBS.Logging.ILog logger
L_0104: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_0109: ldloc.s 8 (System.Int32)
L_010b: box System.Int32
L_0110: ldloc.s 9 (BattleTech.MechDef)
L_0112: callvirt BattleTech.DescriptionDef get_Description()
L_0117: callvirt System.String get_Name()
L_011c: ldloc.s 9 (BattleTech.MechDef)
L_011e: ldc.i4.8
L_011f: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0124: box System.Boolean
L_0129: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012e: callvirt Void LogWarning(System.Object)
L_0133: ldsfld HBS.Logging.ILog logger
L_0138: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_013d: ldloc.s 10 (System.Single)
L_013f: box System.Single
L_0144: ldloc.1
L_0145: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_014a: ldfld System.Single DestroyedMechRecoveryChance
L_014f: box System.Single
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: callvirt Void LogWarning(System.Object)
L_015e: ldloc.s 9 (BattleTech.MechDef)
L_0160: ldc.i4.8
L_0161: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0166: ldc.i4.0
L_0167: ceq
L_0169: ldloc.s 11 (System.Boolean)
L_016b: or
L_016c: brfalse Label3
L_0171: ldsfld HBS.Logging.ILog logger
L_0176: ldstr "Recovery Succeeded"
L_017b: callvirt Void LogWarning(System.Object)
L_0180: ldarg.3
L_0181: ldloc.s 8 (System.Int32)
L_0183: callvirt BattleTech.UnitResult get_Item(Int32)
L_0188: ldc.i4.0
L_0189: stfld System.Boolean mechLost
L_018e: br Label4
L_0193: Label3
L_0193: ldsfld HBS.Logging.ILog logger
L_0198: ldstr "Recovery Failed, Unit Lost"
L_019d: callvirt Void LogWarning(System.Object)
L_01a2: ldarg.3
L_01a3: ldloc.s 8 (System.Int32)
L_01a5: callvirt BattleTech.UnitResult get_Item(Int32)
L_01aa: ldc.i4.1
L_01ab: stfld System.Boolean mechLost
L_01b0: ldloc.s 9 (BattleTech.MechDef)
L_01b2: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_01b7: stloc.s 12 (BattleTech.MechComponentRef[])
L_01b9: ldc.i4.0
L_01ba: stloc.s 13 (System.Int32)
L_01bc: br Label5
L_01c1: Label8
L_01c1: ldloc.s 12 (BattleTech.MechComponentRef[])
L_01c3: ldloc.s 13 (System.Int32)
L_01c5: ldelem.ref
L_01c6: stloc.s 14 (BattleTech.MechComponentRef)
L_01c8: ldloc.s 9 (BattleTech.MechDef)
L_01ca: ldloc.s 14 (BattleTech.MechComponentRef)
L_01cc: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d1: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_01d6: brtrue Label6
L_01db: ldloc.s 14 (BattleTech.MechComponentRef)
L_01dd: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01e2: ldc.i4.4
L_01e3: beq Label7
L_01e8: newobj Void .ctor()
L_01ed: stloc.s 15 (BattleTech.SalvageDef)
L_01ef: ldloc.s 15 (BattleTech.SalvageDef)
L_01f1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01f3: callvirt BattleTech.MechComponentDef get_Def()
L_01f8: stfld BattleTech.MechComponentDef MechComponentDef
L_01fd: ldloc.s 15 (BattleTech.SalvageDef)
L_01ff: ldloc.s 14 (BattleTech.MechComponentRef)
L_0201: callvirt BattleTech.MechComponentDef get_Def()
L_0206: callvirt BattleTech.DescriptionDef get_Description()
L_020b: newobj Void .ctor(DescriptionDef)
L_0210: stfld BattleTech.DescriptionDef Description
L_0215: ldloc.s 15 (BattleTech.SalvageDef)
L_0217: ldarg.0
L_0218: call System.String GenerateRewardUID()
L_021d: stfld System.String RewardID
L_0222: ldloc.s 15 (BattleTech.SalvageDef)
L_0224: ldc.i4.1
L_0225: stfld BattleTech.SalvageDef+SalvageType Type
L_022a: ldloc.s 15 (BattleTech.SalvageDef)
L_022c: ldloc.s 14 (BattleTech.MechComponentRef)
L_022e: callvirt BattleTech.MechComponentDef get_Def()
L_0233: callvirt BattleTech.ComponentType get_ComponentType()
L_0238: stfld BattleTech.ComponentType ComponentType
L_023d: ldloc.s 15 (BattleTech.SalvageDef)
L_023f: ldc.i4.0
L_0240: stfld System.Boolean Damaged
L_0245: ldloc.s 15 (BattleTech.SalvageDef)
L_0247: ldc.i4.1
L_0248: stfld System.Int32 Count
L_024d: ldarg.0
L_024e: ldloc.s 15 (BattleTech.SalvageDef)
L_0250: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_0255: Label6
L_0255: Label7
L_0255: ldloc.s 13 (System.Int32)
L_0257: ldc.i4.1
L_0258: add
L_0259: stloc.s 13 (System.Int32)
L_025b: Label5
L_025b: ldloc.s 13 (System.Int32)
L_025d: ldloc.s 12 (BattleTech.MechComponentRef[])
L_025f: ldlen
L_0260: conv.i4
L_0261: blt Label8
L_0266: Label4
L_0266: ldloc.s 8 (System.Int32)
L_0268: ldc.i4.1
L_0269: add
L_026a: stloc.s 8 (System.Int32)
L_026c: Label2
L_026c: ldloc.s 8 (System.Int32)
L_026e: ldarg.3
L_026f: callvirt Int32 get_Count()
L_0274: blt Label9
L_0279: ldc.i4.0
L_027a: stloc.s 16 (System.Int32)
L_027c: br Label10
L_0281: Label36
L_0281: ldarg.1
L_0282: ldloc.s 16 (System.Int32)
L_0284: callvirt BattleTech.UnitResult get_Item(Int32)
L_0289: ldfld BattleTech.MechDef mech
L_028e: stloc.s 17 (BattleTech.MechDef)
L_0290: ldarg.1
L_0291: ldloc.s 16 (System.Int32)
L_0293: callvirt BattleTech.UnitResult get_Item(Int32)
L_0298: ldfld BattleTech.Pilot pilot
L_029d: stloc.s 18 (BattleTech.Pilot)
L_029f: ldnull
L_02a0: stloc.s 19 (BattleTech.SalvageDef)
L_02a2: ldc.i4.0
L_02a3: stloc.s 20 (System.Boolean)
L_02a5: ldc.i4.0
L_02a6: stloc.s 21 (System.Boolean)
L_02a8: ldloc.s 17 (BattleTech.MechDef)
L_02aa: ldc.i4.8
L_02ab: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02b0: brfalse Label11
L_02b5: ldarg.0
L_02b6: ldloc.1
L_02b7: ldloc.s 17 (BattleTech.MechDef)
L_02b9: ldc.i4.1
L_02ba: ldarg.0
L_02bb: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02c0: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02c5: br Label12
L_02ca: Label11
L_02ca: ldloc.s 17 (BattleTech.MechDef)
L_02cc: ldc.i4.s 64
L_02ce: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02d3: brfalse Label13
L_02d8: ldloc.s 17 (BattleTech.MechDef)
L_02da: ldc.i4 128
L_02df: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02e4: brfalse Label14
L_02e9: ldc.i4.1
L_02ea: stloc.s 20 (System.Boolean)
L_02ec: ldarg.0
L_02ed: ldloc.1
L_02ee: ldloc.s 17 (BattleTech.MechDef)
L_02f0: ldc.i4.2
L_02f1: ldarg.0
L_02f2: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02f7: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02fc: br Label15
L_0301: Label13
L_0301: Label14
L_0301: ldloc.s 18 (BattleTech.Pilot)
L_0303: call Boolean IsIncapacitated(BattleTech.Pilot)
L_0308: brtrue Label16
L_030d: ldloc.s 17 (BattleTech.MechDef)
L_030f: ldc.i4.1
L_0310: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0315: brfalse Label17
L_031a: Label16
L_031a: ldarg.0
L_031b: ldloc.1
L_031c: ldloc.s 17 (BattleTech.MechDef)
L_031e: ldc.i4.3
L_031f: ldarg.0
L_0320: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0325: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_032a: Label12
L_032a: Label15
L_032a: ldloc.s 17 (BattleTech.MechDef)
L_032c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0331: stloc.s 12 (BattleTech.MechComponentRef[])
L_0333: ldc.i4.0
L_0334: stloc.s 13 (System.Int32)
L_0336: br Label18
L_033b: Label21
L_033b: ldloc.s 12 (BattleTech.MechComponentRef[])
L_033d: ldloc.s 13 (System.Int32)
L_033f: ldelem.ref
L_0340: stloc.s 22 (BattleTech.MechComponentRef)
L_0342: ldloc.s 17 (BattleTech.MechDef)
L_0344: ldloc.s 22 (BattleTech.MechComponentRef)
L_0346: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_034b: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0350: brtrue Label19
L_0355: ldloc.s 22 (BattleTech.MechComponentRef)
L_0357: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_035c: ldc.i4.4
L_035d: beq Label20
L_0362: ldarg.0
L_0363: ldarg.0
L_0364: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0369: ldloc.s 22 (BattleTech.MechComponentRef)
L_036b: callvirt BattleTech.MechComponentDef get_Def()
L_0370: ldc.i4.0
L_0371: ldc.i4.0
L_0372: ldloc.1
L_0373: ldloc.0
L_0374: callvirt NetworkRandom get_NetworkRandom()
L_0379: ldc.i4.1
L_037a: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_037f: Label19
L_037f: Label20
L_037f: ldloc.s 13 (System.Int32)
L_0381: ldc.i4.1
L_0382: add
L_0383: stloc.s 13 (System.Int32)
L_0385: Label18
L_0385: ldloc.s 13 (System.Int32)
L_0387: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0389: ldlen
L_038a: conv.i4
L_038b: blt Label21
L_0390: ldloc.s 21 (System.Boolean)
L_0392: brfalse Label22
L_0397: newobj Void .ctor()
L_039c: stloc.s 19 (BattleTech.SalvageDef)
L_039e: ldloc.s 19 (BattleTech.SalvageDef)
L_03a0: ldc.i4.3
L_03a1: stfld BattleTech.SalvageDef+SalvageType Type
L_03a6: ldloc.s 19 (BattleTech.SalvageDef)
L_03a8: ldloc.s 17 (BattleTech.MechDef)
L_03aa: callvirt BattleTech.ChassisDef get_Chassis()
L_03af: callvirt BattleTech.DescriptionDef get_Description()
L_03b4: newobj Void .ctor(DescriptionDef)
L_03b9: stfld BattleTech.DescriptionDef Description
L_03be: ldloc.s 19 (BattleTech.SalvageDef)
L_03c0: ldc.i4.1
L_03c1: stfld System.Int32 Count
L_03c6: ldtoken BattleTech.ChassisLocations
L_03cb: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03d0: call System.Array GetValues(System.Type)
L_03d5: callvirt System.Collections.IEnumerator GetEnumerator()
L_03da: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03dc: br Label23
	L_03e1: Label30
	L_03e1: ldloc.s 23 (System.Collections.IEnumerator)
	L_03e3: callvirt System.Object get_Current()
	L_03e8: unbox.any BattleTech.ChassisLocations
	L_03ed: stloc.s 24 (BattleTech.ChassisLocations)
	L_03ef: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f1: brfalse Label24
	L_03f6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f8: ldc.i4 255
	L_03fd: beq Label25
	L_0402: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0404: ldc.i4.s 34
	L_0406: beq Label26
	L_040b: ldloc.s 24 (BattleTech.ChassisLocations)
	L_040d: ldc.i4 192
	L_0412: beq Label27
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: ldc.i4.s 28
	L_041b: beq Label28
	L_0420: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0422: ldc.i4.s 62
	L_0424: beq Label29
	L_0429: ldloc.s 19 (BattleTech.SalvageDef)
	L_042b: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0430: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0432: callvirt Void Add(BattleTech.ChassisLocations)
	L_0437: ldloc.s 19 (BattleTech.SalvageDef)
	L_0439: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_043e: ldloc.s 17 (BattleTech.MechDef)
	L_0440: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0442: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_0447: ldfld System.Single CurrentInternalStructure
	L_044c: callvirt Void Add(Single)
	L_0451: Label23
	L_0451: Label24
	L_0451: Label25
	L_0451: Label26
	L_0451: Label27
	L_0451: Label28
	L_0451: Label29
	L_0451: ldloc.s 23 (System.Collections.IEnumerator)
	L_0453: callvirt Boolean MoveNext()
	L_0458: brtrue Label30
	L_045d: leave Label31
	L_0462: leave (autogenerated)
} // end try
.finally
{
	L_0467: ldloc.s 23 (System.Collections.IEnumerator)
	L_0469: isinst System.IDisposable
	L_046e: stloc.s 25 (System.IDisposable)
	L_0470: ldloc.s 25 (System.IDisposable)
	L_0472: brfalse Label32
	L_0477: ldloc.s 25 (System.IDisposable)
	L_0479: callvirt Void Dispose()
	L_047e: Label32
	L_047e: endfinally
	L_047f: leave (autogenerated)
} // end handler
L_0480: Label31
L_0480: ldloc.s 20 (System.Boolean)
L_0482: brfalse Label33
L_0487: ldc.i4.0
L_0488: stloc.s 26 (System.Int32)
L_048a: br Label34
L_048f: Label35
L_048f: ldloc.s 19 (BattleTech.SalvageDef)
L_0491: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_0496: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0498: ldloc.s 26 (System.Int32)
L_049a: stloc.s 13 (System.Int32)
L_049c: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_049e: ldloc.s 13 (System.Int32)
L_04a0: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_04a2: ldloc.s 13 (System.Int32)
L_04a4: callvirt Single get_Item(Int32)
L_04a9: ldc.r4 2
L_04ae: div
L_04af: callvirt Void set_Item(Int32, Single)
L_04b4: ldloc.s 26 (System.Int32)
L_04b6: ldc.i4.1
L_04b7: add
L_04b8: stloc.s 26 (System.Int32)
L_04ba: Label34
L_04ba: ldloc.s 26 (System.Int32)
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_04c3: callvirt Int32 get_Count()
L_04c8: blt Label35
L_04cd: Label33
L_04cd: ldloc.s 19 (BattleTech.SalvageDef)
L_04cf: ldloc.1
L_04d0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04d5: ldfld System.Int32 DefaultChassisWeight
L_04da: stfld System.Int32 Weight
L_04df: ldarg.0
L_04e0: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04e5: ldloc.s 19 (BattleTech.SalvageDef)
L_04e7: callvirt Void Add(BattleTech.SalvageDef)
L_04ec: Label17
L_04ec: Label22
L_04ec: ldloc.s 16 (System.Int32)
L_04ee: ldc.i4.1
L_04ef: add
L_04f0: stloc.s 16 (System.Int32)
L_04f2: Label10
L_04f2: ldloc.s 16 (System.Int32)
L_04f4: ldarg.1
L_04f5: callvirt Int32 get_Count()
L_04fa: blt Label36
L_04ff: ldc.i4.0
L_0500: stloc.s 28 (System.Int32)
L_0502: br Label37
L_0507: Label42
L_0507: ldarg.2
L_0508: ldloc.s 28 (System.Int32)
L_050a: callvirt BattleTech.VehicleDef get_Item(Int32)
L_050f: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_0514: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_0519: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_051b: br Label38
	L_0520: Label39
	L_0520: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0522: callvirt BattleTech.VehicleComponentRef get_Current()
	L_0527: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0529: ldarg.0
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0530: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0532: callvirt BattleTech.MechComponentDef get_Def()
	L_0537: ldc.i4.0
	L_0538: ldc.i4.0
	L_0539: ldloc.1
	L_053a: ldloc.0
	L_053b: callvirt NetworkRandom get_NetworkRandom()
	L_0540: ldc.i4.1
	L_0541: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_0546: Label38
	L_0546: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0548: callvirt Boolean MoveNext()
	L_054d: brtrue Label39
	L_0552: leave Label40
	L_0557: leave (autogenerated)
} // end try
.finally
{
	L_055c: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_055e: brfalse Label41
	L_0563: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0565: callvirt Void Dispose()
	L_056a: Label41
	L_056a: endfinally
	L_056b: leave (autogenerated)
} // end handler
L_056c: Label40
L_056c: ldloc.s 28 (System.Int32)
L_056e: ldc.i4.1
L_056f: add
L_0570: stloc.s 28 (System.Int32)
L_0572: Label37
L_0572: ldloc.s 28 (System.Int32)
L_0574: ldarg.2
L_0575: callvirt Int32 get_Count()
L_057a: blt Label42
L_057f: ldarg.0
L_0580: ldarg.0
L_0581: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0586: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_058b: ldarg.0
L_058c: call Int32 get_SalvagePotential()
L_0591: stloc.2
L_0592: ldloc.1
L_0593: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0598: ldfld System.Single VictorySalvageChance
L_059d: stloc.3
L_059e: ldloc.1
L_059f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a4: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_05a9: stloc.s 4 (System.Single)
L_05ab: ldarg.0
L_05ac: call ContractState get_State()
L_05b1: ldc.i4.5
L_05b2: bne.un Label43
L_05b7: ldloc.1
L_05b8: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05bd: ldfld System.Single DefeatSalvageChance
L_05c2: stloc.3
L_05c3: ldloc.1
L_05c4: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05c9: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05ce: stloc.s 4 (System.Single)
L_05d0: br Label44
L_05d5: Label43
L_05d5: ldarg.0
L_05d6: call ContractState get_State()
L_05db: ldc.i4.4
L_05dc: bne.un Label45
L_05e1: ldloc.1
L_05e2: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05e7: ldfld System.Single RetreatSalvageChance
L_05ec: stloc.3
L_05ed: ldloc.1
L_05ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05f3: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05f8: stloc.s 4 (System.Single)
L_05fa: Label44
L_05fa: Label45
L_05fa: ldloc.3
L_05fb: stloc.s 5 (System.Single)
L_05fd: ldloc.2
L_05fe: conv.r4
L_05ff: ldarg.0
L_0600: call Single get_PercentageContractSalvage()
L_0605: mul
L_0606: stloc.s 6 (System.Single)
L_0608: ldloc.2
L_0609: ldc.i4.0
L_060a: ble Label46
L_060f: ldloc.s 6 (System.Single)
L_0611: ldloc.1
L_0612: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0617: ldfld System.Int32 ContractFloorSalvageBonus
L_061c: conv.r4
L_061d: add
L_061e: stloc.s 6 (System.Single)
L_0620: Label46
L_0620: ldc.r4 0
L_0625: ldloc.s 5 (System.Single)
L_0627: ldloc.s 4 (System.Single)
L_0629: ldarg.3
L_062a: callvirt Int32 get_Count()
L_062f: conv.r4
L_0630: mul
L_0631: sub
L_0632: call Single Max(Single, Single)
L_0637: stloc.3
L_0638: ldloc.s 6 (System.Single)
L_063a: conv.r4
L_063b: ldloc.3
L_063c: mul
L_063d: call Int32 FloorToInt(Single)
L_0642: stloc.s 7 (System.Int32)
L_0644: ldloc.2
L_0645: ldc.i4.0
L_0646: ble Label47
L_064b: ldloc.2
L_064c: ldloc.1
L_064d: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0652: ldfld System.Int32 ContractFloorSalvageBonus
L_0657: add
L_0658: stloc.2
L_0659: Label47
L_0659: ldarg.0
L_065a: ldloc.s 7 (System.Int32)
L_065c: call Void set_FinalSalvageCount(Int32)
L_0661: ldarg.0
L_0662: ldc.i4.7
L_0663: ldloc.s 7 (System.Int32)
L_0665: conv.r4
L_0666: ldloc.1
L_0667: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_066c: ldfld System.Single PrioritySalvageModifier
L_0671: mul
L_0672: call Int32 FloorToInt(Single)
L_0677: call Int32 Min(Int32, Int32)
L_067c: call Void set_FinalPrioritySalvageCount(Int32)
L_0681: ldarg.0
L_0682: ldfld System.Boolean loggingSalvageResults
L_0687: brfalse Label48
L_068c: ldarg.0
L_068d: ldstr "Salvage"
L_0692: call Void PushReport(System.String)
L_0697: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_069c: ldc.i4.6
L_069d: newarr System.Object
L_06a2: dup
L_06a3: ldc.i4.0
L_06a4: ldloc.2
L_06a5: box System.Int32
L_06aa: stelem.ref
L_06ab: dup
L_06ac: ldc.i4.1
L_06ad: ldloc.s 5 (System.Single)
L_06af: box System.Single
L_06b4: stelem.ref
L_06b5: dup
L_06b6: ldc.i4.2
L_06b7: ldarg.3
L_06b8: callvirt Int32 get_Count()
L_06bd: box System.Int32
L_06c2: stelem.ref
L_06c3: dup
L_06c4: ldc.i4.3
L_06c5: ldloc.3
L_06c6: box System.Single
L_06cb: stelem.ref
L_06cc: dup
L_06cd: ldc.i4.4
L_06ce: ldloc.s 7 (System.Int32)
L_06d0: box System.Int32
L_06d5: stelem.ref
L_06d6: dup
L_06d7: ldc.i4.5
L_06d8: ldarg.0
L_06d9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06de: callvirt Int32 get_Count()
L_06e3: box System.Int32
L_06e8: stelem.ref
L_06e9: call System.String Format(System.String, System.Object[])
L_06ee: stloc.s 31 (System.String)
L_06f0: ldarg.0
L_06f1: ldloc.s 31 (System.String)
L_06f3: call Void ReportLog(System.String)
L_06f8: ldarg.0
L_06f9: ldstr "Potential Salvage"
L_06fe: call Void PushReport(System.String)
L_0703: ldarg.0
L_0704: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0709: callvirt Enumerator GetEnumerator()
L_070e: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_0710: br Label49
	L_0715: Label52
	L_0715: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0717: call BattleTech.SalvageDef get_Current()
	L_071c: stloc.s 33 (BattleTech.SalvageDef)
	L_071e: ldarg.0
	L_071f: ldstr "{0} of type {1} in damage state of {2}"
	L_0724: ldloc.s 33 (BattleTech.SalvageDef)
	L_0726: ldfld BattleTech.DescriptionDef Description
	L_072b: callvirt System.String get_Id()
	L_0730: ldloc.s 33 (BattleTech.SalvageDef)
	L_0732: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0737: box BattleTech.SalvageDef+SalvageType
	L_073c: ldloc.s 33 (BattleTech.SalvageDef)
	L_073e: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0743: ldc.i4.3
	L_0744: beq Label50
	L_0749: ldloc.s 33 (BattleTech.SalvageDef)
	L_074b: ldfld System.Boolean Damaged
	L_0750: br Label51
	L_0755: Label50
	L_0755: ldc.i4.1
	L_0756: Label51
	L_0756: box System.Boolean
	L_075b: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0760: call Void ReportLog(System.String)
	L_0765: Label49
	L_0765: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0767: call Boolean MoveNext()
	L_076c: brtrue Label52
	L_0771: leave Label53
	L_0776: leave (autogenerated)
} // end try
.finally
{
	L_077b: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_077d: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_0783: callvirt Void Dispose()
	L_0788: endfinally
	L_0789: leave (autogenerated)
} // end handler
L_078a: Label53
L_078a: ldarg.0
L_078b: call Void PopReport()
L_0790: ldsfld HBS.Logging.ILog logger
L_0795: ldloc.s 31 (System.String)
L_0797: callvirt Void LogWarning(System.Object)
L_079c: Label48
L_079c: ldloc.3
L_079d: ldc.r4 0
L_07a2: beq Label54
L_07a7: ldloc.s 7 (System.Int32)
L_07a9: ldc.i4.1
L_07aa: bge Label55
L_07af: Label54
L_07af: ldarg.0
L_07b0: ldfld System.Boolean loggingSalvageResults
L_07b5: brfalse Label56
L_07ba: ldarg.0
L_07bb: call Void PopReport()
L_07c0: Label55
L_07c0: Label56
L_07c0: Label57
L_07c0: Label0
L_07c0: ret
DONE

### Patch BattleTech.UI.MechLabMechInfoWidget, Void GetTotalHardpoints()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldarg.0
L_0003: ldfld BattleTech.UI.MechLabPanel mechLab
L_0008: ldfld BattleTech.MechDef activeMechDef
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.MechLabPanel mechLab
L_0019: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_001e: ldfld System.Int32 totalBallisticHardpoints
L_0023: ldarg.0
L_0024: ldfld BattleTech.UI.MechLabPanel mechLab
L_0029: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_002e: ldfld System.Int32 totalBallisticHardpoints
L_0033: add
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.MechLabPanel mechLab
L_003a: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003f: ldfld System.Int32 totalBallisticHardpoints
L_0044: add
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabPanel mechLab
L_004b: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0050: ldfld System.Int32 totalBallisticHardpoints
L_0055: add
L_0056: ldarg.0
L_0057: ldfld BattleTech.UI.MechLabPanel mechLab
L_005c: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0061: ldfld System.Int32 totalBallisticHardpoints
L_0066: add
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechLabPanel mechLab
L_006d: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0072: ldfld System.Int32 totalBallisticHardpoints
L_0077: add
L_0078: ldarg.0
L_0079: ldfld BattleTech.UI.MechLabPanel mechLab
L_007e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0083: ldfld System.Int32 totalBallisticHardpoints
L_0088: add
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.MechLabPanel mechLab
L_008f: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0094: ldfld System.Int32 totalBallisticHardpoints
L_0099: add
L_009a: stfld System.Int32 totalBallisticHardpoints
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a6: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ab: ldfld System.Int32 totalEnergyHardpoints
L_00b0: ldarg.0
L_00b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b6: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_00bb: ldfld System.Int32 totalEnergyHardpoints
L_00c0: add
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.MechLabPanel mechLab
L_00c7: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00cc: ldfld System.Int32 totalEnergyHardpoints
L_00d1: add
L_00d2: ldarg.0
L_00d3: ldfld BattleTech.UI.MechLabPanel mechLab
L_00d8: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00dd: ldfld System.Int32 totalEnergyHardpoints
L_00e2: add
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.UI.MechLabPanel mechLab
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00ee: ldfld System.Int32 totalEnergyHardpoints
L_00f3: add
L_00f4: ldarg.0
L_00f5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00fa: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00ff: ldfld System.Int32 totalEnergyHardpoints
L_0104: add
L_0105: ldarg.0
L_0106: ldfld BattleTech.UI.MechLabPanel mechLab
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldfld System.Int32 totalEnergyHardpoints
L_0115: add
L_0116: ldarg.0
L_0117: ldfld BattleTech.UI.MechLabPanel mechLab
L_011c: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0121: ldfld System.Int32 totalEnergyHardpoints
L_0126: add
L_0127: stfld System.Int32 totalEnergyHardpoints
L_012c: ldarg.0
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0138: ldfld System.Int32 totalMissileHardpoints
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0143: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0148: ldfld System.Int32 totalMissileHardpoints
L_014d: add
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0154: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0159: ldfld System.Int32 totalMissileHardpoints
L_015e: add
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_016a: ldfld System.Int32 totalMissileHardpoints
L_016f: add
L_0170: ldarg.0
L_0171: ldfld BattleTech.UI.MechLabPanel mechLab
L_0176: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_017b: ldfld System.Int32 totalMissileHardpoints
L_0180: add
L_0181: ldarg.0
L_0182: ldfld BattleTech.UI.MechLabPanel mechLab
L_0187: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_018c: ldfld System.Int32 totalMissileHardpoints
L_0191: add
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabPanel mechLab
L_0198: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: add
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a9: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01ae: ldfld System.Int32 totalMissileHardpoints
L_01b3: add
L_01b4: stfld System.Int32 totalMissileHardpoints
L_01b9: ldarg.0
L_01ba: ldarg.0
L_01bb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01c0: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_01c5: ldfld System.Int32 totalSmallHardpoints
L_01ca: ldarg.0
L_01cb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01d0: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_01d5: ldfld System.Int32 totalSmallHardpoints
L_01da: add
L_01db: ldarg.0
L_01dc: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e1: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_01e6: ldfld System.Int32 totalSmallHardpoints
L_01eb: add
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f2: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_01f7: ldfld System.Int32 totalSmallHardpoints
L_01fc: add
L_01fd: ldarg.0
L_01fe: ldfld BattleTech.UI.MechLabPanel mechLab
L_0203: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0208: ldfld System.Int32 totalSmallHardpoints
L_020d: add
L_020e: ldarg.0
L_020f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0214: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0219: ldfld System.Int32 totalSmallHardpoints
L_021e: add
L_021f: ldarg.0
L_0220: ldfld BattleTech.UI.MechLabPanel mechLab
L_0225: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_022a: ldfld System.Int32 totalSmallHardpoints
L_022f: add
L_0230: ldarg.0
L_0231: ldfld BattleTech.UI.MechLabPanel mechLab
L_0236: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_023b: ldfld System.Int32 totalSmallHardpoints
L_0240: add
L_0241: stfld System.Int32 totalSmallHardpoints
L_0246: ldarg.0
L_0247: ldfld BattleTech.UI.MechLabPanel mechLab
L_024c: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0251: ldfld System.Int32 currentJumpjetCount
L_0256: ldarg.0
L_0257: ldfld BattleTech.UI.MechLabPanel mechLab
L_025c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0261: ldfld System.Int32 currentJumpjetCount
L_0266: add
L_0267: ldarg.0
L_0268: ldfld BattleTech.UI.MechLabPanel mechLab
L_026d: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0272: ldfld System.Int32 currentJumpjetCount
L_0277: add
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.MechLabPanel mechLab
L_027e: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0283: ldfld System.Int32 currentJumpjetCount
L_0288: add
L_0289: ldarg.0
L_028a: ldfld BattleTech.UI.MechLabPanel mechLab
L_028f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0294: ldfld System.Int32 currentJumpjetCount
L_0299: add
L_029a: ldarg.0
L_029b: ldfld BattleTech.UI.MechLabPanel mechLab
L_02a0: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_02a5: ldfld System.Int32 currentJumpjetCount
L_02aa: add
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.UI.MechLabPanel mechLab
L_02b1: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_02b6: ldfld System.Int32 currentJumpjetCount
L_02bb: add
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02c2: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_02c7: ldfld System.Int32 currentJumpjetCount
L_02cc: add
L_02cd: stloc.0
L_02ce: ldarg.0
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d5: ldfld BattleTech.MechDef activeMechDef
L_02da: callvirt BattleTech.ChassisDef get_Chassis()
L_02df: callvirt Int32 get_MaxJumpjets()
L_02e4: stfld System.Int32 totalJumpjets
L_02e9: Label1
L_02e9: ldarg.0
L_02ea: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_02ef: ldc.i4.0
L_02f0: ldelem.ref
L_02f1: ldc.i4.1
L_02f2: ldstr "{0}"
L_02f7: ldarg.0
L_02f8: ldfld System.Int32 totalBallisticHardpoints
L_02fd: box System.Int32
L_0302: call System.String Format(System.String, System.Object)
L_0307: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_030c: ldarg.0
L_030d: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0312: ldc.i4.1
L_0313: ldelem.ref
L_0314: ldc.i4.2
L_0315: ldstr "{0}"
L_031a: ldarg.0
L_031b: ldfld System.Int32 totalEnergyHardpoints
L_0320: box System.Int32
L_0325: call System.String Format(System.String, System.Object)
L_032a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_032f: ldarg.0
L_0330: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0335: ldc.i4.2
L_0336: ldelem.ref
L_0337: ldc.i4.3
L_0338: ldstr "{0}"
L_033d: ldarg.0
L_033e: ldfld System.Int32 totalMissileHardpoints
L_0343: box System.Int32
L_0348: call System.String Format(System.String, System.Object)
L_034d: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0352: ldarg.0
L_0353: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0358: ldc.i4.3
L_0359: ldelem.ref
L_035a: ldc.i4.4
L_035b: ldstr "{0}"
L_0360: ldarg.0
L_0361: ldfld System.Int32 totalSmallHardpoints
L_0366: box System.Int32
L_036b: call System.String Format(System.String, System.Object)
L_0370: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0375: ldarg.0
L_0376: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_037b: ldc.i4.4
L_037c: ldelem.ref
L_037d: ldc.i4.5
L_037e: ldstr "{0} / {1}"
L_0383: ldloc.0
L_0384: box System.Int32
L_0389: ldarg.0
L_038a: ldfld System.Int32 totalJumpjets
L_038f: box System.Int32
L_0394: call System.String Format(System.String, System.Object, System.Object)
L_0399: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_039e: ldarg.0
L_039f: ldarg.0
L_03a0: ldfld BattleTech.UI.MechLabPanel mechLab
L_03a5: ldarg.0
L_03a6: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03ab: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabHardpointElement[])
L_03b0: ret
DONE

### Patch BattleTech.MechStatisticsRules, Void CalculateHeatEfficiencyStat(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.MechComponentRef
L_0000: Local var 11: BattleTech.WeaponDef
L_0000: Local var 12: BattleTech.HeatSinkDef
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.UpgradeDef
L_0000: Local var 15: System.Int32
L_0000: ldarg 0
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: ldsfld BattleTech.CombatGameConstants Combat
L_0010: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0015: ldfld System.Int32 InternalHeatSinkCount
L_001a: conv.r4
L_001b: ldsfld BattleTech.CombatGameConstants Combat
L_0020: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0025: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_002a: mul
L_002b: stloc.0
L_002c: ldc.r4 0
L_0031: stloc.1
L_0032: ldc.r4 0
L_0037: stloc.2
L_0038: ldsfld BattleTech.CombatGameConstants Combat
L_003d: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0042: ldfld System.Int32 MaxHeat
L_0047: conv.r4
L_0048: stloc.3
L_0049: ldc.r4 0
L_004e: stloc.s 4 (System.Single)
L_0050: ldc.i4.0
L_0051: stloc.s 5 (System.Int32)
L_0053: ldc.i4.0
L_0054: stloc.s 9 (System.Int32)
L_0056: br Label1
L_005b: Label27
L_005b: ldarg.0
L_005c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0061: ldloc.s 9 (System.Int32)
L_0063: ldelem.ref
L_0064: stloc.s 10 (BattleTech.MechComponentRef)
L_0066: ldloc.s 10 (BattleTech.MechComponentRef)
L_0068: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_006d: brfalse Label2
L_0072: ldloc.s 10 (BattleTech.MechComponentRef)
L_0074: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0079: ldc.i4.5
L_007a: bne.un Label3
L_007f: Label2
L_007f: ldloc.s 10 (BattleTech.MechComponentRef)
L_0081: callvirt BattleTech.MechComponentDef get_Def()
L_0086: brtrue Label4
L_008b: ldloc.s 10 (BattleTech.MechComponentRef)
L_008d: callvirt Void RefreshComponentDef()
L_0092: Label4
L_0092: ldloc.s 10 (BattleTech.MechComponentRef)
L_0094: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0099: ldc.i4.1
L_009a: bne.un Label5
L_009f: ldloc.s 10 (BattleTech.MechComponentRef)
L_00a1: callvirt BattleTech.MechComponentDef get_Def()
L_00a6: isinst BattleTech.WeaponDef
L_00ab: stloc.s 11 (BattleTech.WeaponDef)
L_00ad: ldloc.2
L_00ae: ldloc.s 11 (BattleTech.WeaponDef)
L_00b0: callvirt Int32 get_HeatGenerated()
L_00b5: conv.r4
L_00b6: add
L_00b7: stloc.2
L_00b8: br Label6
L_00bd: Label5
L_00bd: ldloc.s 10 (BattleTech.MechComponentRef)
L_00bf: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00c4: ldc.i4.4
L_00c5: bne.un Label7
L_00ca: ldloc.s 10 (BattleTech.MechComponentRef)
L_00cc: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00d1: ldc.i4.3
L_00d2: bge Label8
L_00d7: ldloc.s 5 (System.Int32)
L_00d9: ldc.i4.1
L_00da: add
L_00db: stloc.s 5 (System.Int32)
L_00dd: br Label9
L_00e2: Label7
L_00e2: ldloc.s 10 (BattleTech.MechComponentRef)
L_00e4: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00e9: ldc.i4.3
L_00ea: bne.un Label10
L_00ef: ldloc.s 10 (BattleTech.MechComponentRef)
L_00f1: callvirt BattleTech.MechComponentDef get_Def()
L_00f6: isinst BattleTech.HeatSinkDef
L_00fb: stloc.s 12 (BattleTech.HeatSinkDef)
L_00fd: ldloc.0
L_00fe: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0100: call Single OverrideDissipationCapacity(BattleTech.HeatSinkDef)
L_0105: add
L_0106: stloc.0
L_0107: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0109: callvirt BattleTech.EffectData[] get_statusEffects()
L_010e: brfalse Label11
L_0113: ldc.i4.0
L_0114: stloc.s 13 (System.Int32)
L_0116: br Label12
L_011b: Label17
L_011b: ldloc.s 12 (BattleTech.HeatSinkDef)
L_011d: callvirt BattleTech.EffectData[] get_statusEffects()
L_0122: ldloc.s 13 (System.Int32)
L_0124: ldelem.ref
L_0125: ldfld BattleTech.EffectType effectType
L_012a: ldc.i4.1
L_012b: bne.un Label13
L_0130: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0132: callvirt BattleTech.EffectData[] get_statusEffects()
L_0137: ldloc.s 13 (System.Int32)
L_0139: ldelem.ref
L_013a: ldfld BattleTech.StatisticEffectData statisticData
L_013f: ldfld System.String statName
L_0144: ldstr "MaxHeat"
L_0149: call Boolean op_Equality(System.String, System.String)
L_014e: brfalse Label14
L_0153: ldloc.3
L_0154: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0156: callvirt BattleTech.EffectData[] get_statusEffects()
L_015b: ldloc.s 13 (System.Int32)
L_015d: ldelem.ref
L_015e: ldfld BattleTech.StatisticEffectData statisticData
L_0163: ldfld System.String modValue
L_0168: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_016d: call Single Parse(System.String, System.IFormatProvider)
L_0172: add
L_0173: stloc.3
L_0174: Label14
L_0174: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0176: callvirt BattleTech.EffectData[] get_statusEffects()
L_017b: ldloc.s 13 (System.Int32)
L_017d: ldelem.ref
L_017e: ldfld BattleTech.StatisticEffectData statisticData
L_0183: ldfld System.String statName
L_0188: ldstr "HeatGenerated"
L_018d: call Boolean op_Equality(System.String, System.String)
L_0192: brfalse Label15
L_0197: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0199: callvirt BattleTech.EffectData[] get_statusEffects()
L_019e: ldloc.s 13 (System.Int32)
L_01a0: ldelem.ref
L_01a1: ldfld BattleTech.StatisticEffectData statisticData
L_01a6: ldfld BattleTech.StatisticEffectData+TargetCollection targetCollection
L_01ab: ldc.i4.2
L_01ac: bne.un Label16
L_01b1: ldloc.s 4 (System.Single)
L_01b3: ldc.r4 1
L_01b8: ldloc.s 12 (BattleTech.HeatSinkDef)
L_01ba: callvirt BattleTech.EffectData[] get_statusEffects()
L_01bf: ldloc.s 13 (System.Int32)
L_01c1: ldelem.ref
L_01c2: ldfld BattleTech.StatisticEffectData statisticData
L_01c7: ldfld System.String modValue
L_01cc: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_01d1: call Single Parse(System.String, System.IFormatProvider)
L_01d6: sub
L_01d7: sub
L_01d8: stloc.s 4 (System.Single)
L_01da: Label13
L_01da: Label15
L_01da: Label16
L_01da: ldloc.s 13 (System.Int32)
L_01dc: ldc.i4.1
L_01dd: add
L_01de: stloc.s 13 (System.Int32)
L_01e0: Label12
L_01e0: ldloc.s 13 (System.Int32)
L_01e2: ldloc.s 12 (BattleTech.HeatSinkDef)
L_01e4: callvirt BattleTech.EffectData[] get_statusEffects()
L_01e9: ldlen
L_01ea: conv.i4
L_01eb: blt Label17
L_01f0: br Label18
L_01f5: Label10
L_01f5: ldloc.s 10 (BattleTech.MechComponentRef)
L_01f7: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01fc: ldc.i4.5
L_01fd: bne.un Label19
L_0202: ldloc.s 10 (BattleTech.MechComponentRef)
L_0204: callvirt BattleTech.MechComponentDef get_Def()
L_0209: isinst BattleTech.UpgradeDef
L_020e: stloc.s 14 (BattleTech.UpgradeDef)
L_0210: ldloc.s 14 (BattleTech.UpgradeDef)
L_0212: callvirt BattleTech.EffectData[] get_statusEffects()
L_0217: brfalse Label20
L_021c: ldc.i4.0
L_021d: stloc.s 15 (System.Int32)
L_021f: br Label21
L_0224: Label26
L_0224: ldloc.s 14 (BattleTech.UpgradeDef)
L_0226: callvirt BattleTech.EffectData[] get_statusEffects()
L_022b: ldloc.s 15 (System.Int32)
L_022d: ldelem.ref
L_022e: ldfld BattleTech.EffectType effectType
L_0233: ldc.i4.1
L_0234: bne.un Label22
L_0239: ldloc.s 14 (BattleTech.UpgradeDef)
L_023b: callvirt BattleTech.EffectData[] get_statusEffects()
L_0240: ldloc.s 15 (System.Int32)
L_0242: ldelem.ref
L_0243: ldfld BattleTech.StatisticEffectData statisticData
L_0248: ldfld System.String statName
L_024d: ldstr "MaxHeat"
L_0252: call Boolean op_Equality(System.String, System.String)
L_0257: brfalse Label23
L_025c: ldloc.3
L_025d: ldloc.s 14 (BattleTech.UpgradeDef)
L_025f: callvirt BattleTech.EffectData[] get_statusEffects()
L_0264: ldloc.s 15 (System.Int32)
L_0266: ldelem.ref
L_0267: ldfld BattleTech.StatisticEffectData statisticData
L_026c: ldfld System.String modValue
L_0271: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_0276: call Single Parse(System.String, System.IFormatProvider)
L_027b: add
L_027c: stloc.3
L_027d: Label23
L_027d: ldloc.s 14 (BattleTech.UpgradeDef)
L_027f: callvirt BattleTech.EffectData[] get_statusEffects()
L_0284: ldloc.s 15 (System.Int32)
L_0286: ldelem.ref
L_0287: ldfld BattleTech.StatisticEffectData statisticData
L_028c: ldfld System.String statName
L_0291: ldstr "HeatGenerated"
L_0296: call Boolean op_Equality(System.String, System.String)
L_029b: brfalse Label24
L_02a0: ldloc.s 14 (BattleTech.UpgradeDef)
L_02a2: callvirt BattleTech.EffectData[] get_statusEffects()
L_02a7: ldloc.s 15 (System.Int32)
L_02a9: ldelem.ref
L_02aa: ldfld BattleTech.StatisticEffectData statisticData
L_02af: ldfld BattleTech.StatisticEffectData+TargetCollection targetCollection
L_02b4: ldc.i4.2
L_02b5: bne.un Label25
L_02ba: ldloc.s 4 (System.Single)
L_02bc: ldc.r4 1
L_02c1: ldloc.s 14 (BattleTech.UpgradeDef)
L_02c3: callvirt BattleTech.EffectData[] get_statusEffects()
L_02c8: ldloc.s 15 (System.Int32)
L_02ca: ldelem.ref
L_02cb: ldfld BattleTech.StatisticEffectData statisticData
L_02d0: ldfld System.String modValue
L_02d5: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_02da: call Single Parse(System.String, System.IFormatProvider)
L_02df: sub
L_02e0: sub
L_02e1: stloc.s 4 (System.Single)
L_02e3: Label22
L_02e3: Label24
L_02e3: Label25
L_02e3: ldloc.s 15 (System.Int32)
L_02e5: ldc.i4.1
L_02e6: add
L_02e7: stloc.s 15 (System.Int32)
L_02e9: Label21
L_02e9: ldloc.s 15 (System.Int32)
L_02eb: ldloc.s 14 (BattleTech.UpgradeDef)
L_02ed: callvirt BattleTech.EffectData[] get_statusEffects()
L_02f2: ldlen
L_02f3: conv.i4
L_02f4: blt Label26
L_02f9: Label3
L_02f9: Label6
L_02f9: Label8
L_02f9: Label9
L_02f9: Label11
L_02f9: Label18
L_02f9: Label19
L_02f9: Label20
L_02f9: ldloc.s 9 (System.Int32)
L_02fb: ldc.i4.1
L_02fc: add
L_02fd: stloc.s 9 (System.Int32)
L_02ff: Label1
L_02ff: ldloc.s 9 (System.Int32)
L_0301: ldarg.0
L_0302: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0307: ldlen
L_0308: conv.i4
L_0309: blt Label27
L_030e: ldloc.s 5 (System.Int32)
L_0310: ldsfld BattleTech.CombatGameConstants Combat
L_0315: callvirt BattleTech.MovementConstants get_MoveConstants()
L_031a: ldfld System.Single[] MoveTable
L_031f: ldlen
L_0320: conv.i4
L_0321: blt Label28
L_0326: ldsfld BattleTech.CombatGameConstants Combat
L_032b: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0330: ldfld System.Single[] MoveTable
L_0335: ldlen
L_0336: conv.i4
L_0337: ldc.i4.1
L_0338: sub
L_0339: stloc.s 5 (System.Int32)
L_033b: Label28
L_033b: ldc.i4.3
L_033c: stloc.s 6 (System.Int32)
L_033e: ldloc.s 5 (System.Int32)
L_0340: ldc.i4.0
L_0341: ble Label29
L_0346: ldloc.1
L_0347: ldloc.s 5 (System.Int32)
L_0349: conv.r4
L_034a: ldsfld BattleTech.CombatGameConstants Combat
L_034f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0354: ldfld System.Single JumpHeatUnitSize
L_0359: mul
L_035a: ldloc.s 6 (System.Int32)
L_035c: conv.r4
L_035d: div
L_035e: add
L_035f: stloc.1
L_0360: br Label30
L_0365: Label29
L_0365: ldc.r4 0
L_036a: stloc.1
L_036b: Label30
L_036b: ldloc.2
L_036c: ldloc.2
L_036d: ldloc.s 4 (System.Single)
L_036f: mul
L_0370: add
L_0371: stloc.2
L_0372: ldloc.0
L_0373: ldsfld BattleTech.CombatGameConstants Combat
L_0378: callvirt BattleTech.HeatConstantsDef get_Heat()
L_037d: ldfld System.Single GlobalHeatSinkMultiplier
L_0382: mul
L_0383: stloc.0
L_0384: ldloc.2
L_0385: ldloc.1
L_0386: add
L_0387: ldsfld BattleTech.CombatGameConstants Combat
L_038c: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0391: ldfld System.Single GlobalHeatIncreaseMultiplier
L_0396: mul
L_0397: stloc.s 7 (System.Single)
L_0399: ldloc.0
L_039a: ldloc.s 7 (System.Single)
L_039c: div
L_039d: ldc.r4 100
L_03a2: mul
L_03a3: ldc.r4 100
L_03a8: call Single Min(Single, Single)
L_03ad: stloc.s 8 (System.Single)
L_03af: ldarg.1
L_03b0: ldloc.s 8 (System.Single)
L_03b2: call BattleTech.GameInstance get_BattleTechGame()
L_03b7: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03bc: ldfld System.Single MinHeatEfficiency
L_03c1: sub
L_03c2: call BattleTech.GameInstance get_BattleTechGame()
L_03c7: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03cc: ldfld System.Single MaxHeatEfficiency
L_03d1: call BattleTech.GameInstance get_BattleTechGame()
L_03d6: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03db: ldfld System.Single MinHeatEfficiency
L_03e0: sub
L_03e1: div
L_03e2: ldc.r4 10
L_03e7: mul
L_03e8: ldloc.3
L_03e9: ldsfld BattleTech.CombatGameConstants Combat
L_03ee: callvirt BattleTech.HeatConstantsDef get_Heat()
L_03f3: ldfld System.Int32 MaxHeat
L_03f8: conv.r4
L_03f9: sub
L_03fa: ldc.r4 2
L_03ff: div
L_0400: add
L_0401: call Single Round(Single)
L_0406: stind.r4
L_0407: ldarg.1
L_0408: ldarg.1
L_0409: ldind.r4
L_040a: ldc.r4 1
L_040f: call Single Max(Single, Single)
L_0414: stind.r4
L_0415: ldarg.2
L_0416: ldc.r4 10
L_041b: stind.r4
L_041c: call Void Postfix()
L_0421: ret
DONE

### Patch BattleTech.MechStatisticsRules, Void CalculateMovementStat(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: ldarg 0
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: ldarg.0
L_000c: callvirt BattleTech.ChassisDef get_Chassis()
L_0011: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0016: call Single OverrideMaxSprintDistance(BattleTech.MovementCapabilitiesDef)
L_001b: stloc.0
L_001c: ldc.r4 0
L_0021: stloc.1
L_0022: ldc.i4.0
L_0023: stloc.2
L_0024: br Label1
L_0029: Label6
L_0029: ldarg.0
L_002a: call BattleTech.MechComponentRef[] OverrideInventory(BattleTech.MechDef)
L_002f: ldloc.2
L_0030: ldelem.ref
L_0031: stloc.3
L_0032: ldloc.3
L_0033: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0038: brfalse Label2
L_003d: ldloc.3
L_003e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0043: ldc.i4.5
L_0044: bne.un Label3
L_0049: Label2
L_0049: ldloc.3
L_004a: callvirt BattleTech.ComponentType get_ComponentDefType()
L_004f: ldc.i4.4
L_0050: bne.un Label4
L_0055: ldloc.1
L_0056: ldc.r4 1
L_005b: add
L_005c: stloc.1
L_005d: br Label5
L_0062: Label4
L_0062: ldloc.3
L_0063: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0068: ldc.i4.5
L_0069: pop
L_006a: pop
L_006b: Label3
L_006b: Label5
L_006b: ldloc.2
L_006c: ldc.i4.1
L_006d: add
L_006e: stloc.2
L_006f: Label1
L_006f: ldloc.2
L_0070: ldarg.0
L_0071: call BattleTech.MechComponentRef[] OverrideInventory(BattleTech.MechDef)
L_0076: ldlen
L_0077: conv.i4
L_0078: blt Label6
L_007d: ldarg.1
L_007e: ldloc.0
L_007f: call BattleTech.GameInstance get_BattleTechGame()
L_0084: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_0089: ldfld System.Single MinSprintFactor
L_008e: sub
L_008f: call BattleTech.GameInstance get_BattleTechGame()
L_0094: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_0099: ldfld System.Single MaxSprintFactor
L_009e: call BattleTech.GameInstance get_BattleTechGame()
L_00a3: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_00a8: ldfld System.Single MinSprintFactor
L_00ad: sub
L_00ae: div
L_00af: ldc.r4 10
L_00b4: mul
L_00b5: ldloc.1
L_00b6: call BattleTech.GameInstance get_BattleTechGame()
L_00bb: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_00c0: ldfld System.Single MinStockJumpFactor
L_00c5: div
L_00c6: add
L_00c7: call Single Floor(Single)
L_00cc: stind.r4
L_00cd: ldarg.1
L_00ce: ldarg.1
L_00cf: ldind.r4
L_00d0: ldc.r4 1
L_00d5: call Single Max(Single, Single)
L_00da: stind.r4
L_00db: ldarg.2
L_00dc: ldc.r4 10
L_00e1: stind.r4
L_00e2: call Void Postfix()
L_00e7: ret
DONE

### Patch BattleTech.Mech, Single GetHeatSinkDissipation()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.MechComponent
L_0000: Local var 3: BattleTech.HeatSinkDef
L_0000: Local var 4: System.Single
L_0000: ldc.r4 0
L_0005: stloc 4 (System.Single)
L_0007: ldc.r4 0
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldarg.0
L_000f: call BattleTech.CombatGameState get_Combat()
L_0014: callvirt BattleTech.CombatGameConstants get_Constants()
L_0019: callvirt BattleTech.HeatConstantsDef get_Heat()
L_001e: ldfld System.Int32 InternalHeatSinkCount
L_0023: conv.r4
L_0024: ldarg.0
L_0025: call BattleTech.CombatGameState get_Combat()
L_002a: callvirt BattleTech.CombatGameConstants get_Constants()
L_002f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0034: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_0039: mul
L_003a: add
L_003b: stloc.0
L_003c: ldc.i4.0
L_003d: stloc.1
L_003e: br Label1
L_0043: Label6
L_0043: ldarg.0
L_0044: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] miscComponents
L_0049: ldloc.1
L_004a: callvirt BattleTech.MechComponent get_Item(Int32)
L_004f: stloc.2
L_0050: ldloc.2
L_0051: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0056: ldc.i4.4
L_0057: beq Label2
L_005c: ldloc.2
L_005d: callvirt BattleTech.ComponentType get_componentType()
L_0062: ldc.i4.3
L_0063: bne.un Label3
L_0068: ldloc.2
L_0069: callvirt BattleTech.MechComponentDef get_componentDef()
L_006e: isinst BattleTech.HeatSinkDef
L_0073: stloc.3
L_0074: ldloc.3
L_0075: brfalse Label4
L_007a: ldloc.0
L_007b: ldloc.3
L_007c: callvirt Single get_DissipationCapacity()
L_0081: add
L_0082: stloc.0
L_0083: br Label5
L_0088: Label4
L_0088: ldsfld HBS.Logging.ILog initLogger
L_008d: ldc.i4.5
L_008e: newarr System.Object
L_0093: dup
L_0094: ldc.i4.0
L_0095: ldstr "Heat sink component on "
L_009a: stelem.ref
L_009b: dup
L_009c: ldc.i4.1
L_009d: ldarg.0
L_009e: call System.String get_DisplayName()
L_00a3: stelem.ref
L_00a4: dup
L_00a5: ldc.i4.2
L_00a6: ldstr "has wrong componentDef in inventory slot "
L_00ab: stelem.ref
L_00ac: dup
L_00ad: ldc.i4.3
L_00ae: ldloc.1
L_00af: box System.Int32
L_00b4: stelem.ref
L_00b5: dup
L_00b6: ldc.i4.4
L_00b7: ldstr "!"
L_00bc: stelem.ref
L_00bd: call System.String Concat(System.Object[])
L_00c2: callvirt Void LogError(System.Object)
L_00c7: Label2
L_00c7: Label3
L_00c7: Label5
L_00c7: ldloc.1
L_00c8: ldc.i4.1
L_00c9: add
L_00ca: stloc.1
L_00cb: Label1
L_00cb: ldloc.1
L_00cc: ldarg.0
L_00cd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] miscComponents
L_00d2: callvirt Int32 get_Count()
L_00d7: blt Label6
L_00dc: ldloc.0
L_00dd: stloc 4 (System.Single)
L_00df: ldarg.0
L_00e0: ldloca 4 (System.Single)
L_00e2: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00e7: ldloc 4 (System.Single)
L_00e9: ret
DONE

### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void InitEffectStats()
L_0006: ldarg.0
L_0007: call Void Postfix(BattleTech.Mech)
L_000c: ret
DONE

### Patch BattleTech.StatTooltipData, Void SetHeatData(BattleTech.MechDef)
L_0000: Local var 0: BattleTech.CombatGameConstants
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.HeatSinkDef
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Single
L_0000: Local var 12: BattleTech.WeaponDef
L_0000: Local var 13: System.Int32
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: call BattleTech.GameInstance get_BattleTechGame()
L_0010: call BattleTech.CombatGameConstants GetInstance(BattleTech.GameInstance)
L_0015: stloc.0
L_0016: ldarg.1
L_0017: callvirt BattleTech.ChassisDef get_Chassis()
L_001c: callvirt Int32 get_Heatsinks()
L_0021: conv.r4
L_0022: ldloc.0
L_0023: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0028: ldfld System.Int32 InternalHeatSinkCount
L_002d: conv.r4
L_002e: ldloc.0
L_002f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0034: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_0039: mul
L_003a: add
L_003b: stloc.1
L_003c: ldc.r4 0
L_0041: stloc.2
L_0042: ldc.r4 0
L_0047: stloc.3
L_0048: ldc.r4 100
L_004d: stloc.s 4 (System.Single)
L_004f: newobj Void .ctor()
L_0054: stloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_0056: ldc.i4.0
L_0057: stloc.s 6 (System.Int32)
L_0059: ldarg.1
L_005a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_005f: ldlen
L_0060: conv.i4
L_0061: stloc.s 7 (System.Int32)
L_0063: ldc.i4.0
L_0064: stloc.s 8 (System.Int32)
L_0066: br Label1
L_006b: Label14
L_006b: ldarg.1
L_006c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0071: ldloc.s 8 (System.Int32)
L_0073: ldelem.ref
L_0074: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0079: ldc.i4.3
L_007a: bne.un Label2
L_007f: ldarg.1
L_0080: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0085: ldloc.s 8 (System.Int32)
L_0087: ldelem.ref
L_0088: callvirt BattleTech.MechComponentDef get_Def()
L_008d: isinst BattleTech.HeatSinkDef
L_0092: stloc.s 9 (BattleTech.HeatSinkDef)
L_0094: ldloc.s 9 (BattleTech.HeatSinkDef)
L_0096: brfalse Label3
L_009b: ldloc.1
L_009c: ldloc.s 9 (BattleTech.HeatSinkDef)
L_009e: call Single DissipationCapacity(BattleTech.HeatSinkDef)
L_00a3: add
L_00a4: stloc.1
L_00a5: ldc.i4.0
L_00a6: stloc.s 10 (System.Int32)
L_00a8: br Label4
L_00ad: Label6
L_00ad: ldarg.0
L_00ae: ldloc.s 9 (BattleTech.HeatSinkDef)
L_00b0: callvirt BattleTech.EffectData[] get_statusEffects()
L_00b5: ldloc.s 10 (System.Int32)
L_00b7: ldelem.ref
L_00b8: ldstr "HeatGenerated"
L_00bd: ldc.i4.2
L_00be: ldc.i4.s 12
L_00c0: ldc.i4.0
L_00c1: call Single GetEffectMod(BattleTech.EffectData, System.String, TargetCollection, StatOperation, BattleTech.WeaponSubType)
L_00c6: stloc.s 11 (System.Single)
L_00c8: ldloc.s 11 (System.Single)
L_00ca: ldc.r4 0
L_00cf: ble.un Label5
L_00d4: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_00d6: ldloc.s 11 (System.Single)
L_00d8: callvirt Void Add(Single)
L_00dd: Label5
L_00dd: ldloc.s 4 (System.Single)
L_00df: ldarg.0
L_00e0: ldloc.s 9 (BattleTech.HeatSinkDef)
L_00e2: callvirt BattleTech.EffectData[] get_statusEffects()
L_00e7: ldloc.s 10 (System.Int32)
L_00e9: ldelem.ref
L_00ea: ldstr "MaxHeat"
L_00ef: ldc.i4.0
L_00f0: ldc.i4.1
L_00f1: ldc.i4.0
L_00f2: call Single GetEffectMod(BattleTech.EffectData, System.String, TargetCollection, StatOperation, BattleTech.WeaponSubType)
L_00f7: add
L_00f8: stloc.s 4 (System.Single)
L_00fa: ldloc.s 10 (System.Int32)
L_00fc: ldc.i4.1
L_00fd: add
L_00fe: stloc.s 10 (System.Int32)
L_0100: Label4
L_0100: ldloc.s 10 (System.Int32)
L_0102: ldloc.s 9 (BattleTech.HeatSinkDef)
L_0104: callvirt BattleTech.EffectData[] get_statusEffects()
L_0109: ldlen
L_010a: conv.i4
L_010b: blt Label6
L_0110: br Label7
L_0115: Label2
L_0115: ldarg.1
L_0116: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_011b: ldloc.s 8 (System.Int32)
L_011d: ldelem.ref
L_011e: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0123: ldc.i4.4
L_0124: bne.un Label8
L_0129: ldarg.1
L_012a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_012f: ldloc.s 8 (System.Int32)
L_0131: ldelem.ref
L_0132: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0137: ldc.i4.4
L_0138: beq Label9
L_013d: ldloc.s 6 (System.Int32)
L_013f: ldc.i4.1
L_0140: add
L_0141: stloc.s 6 (System.Int32)
L_0143: br Label10
L_0148: Label8
L_0148: Label9
L_0148: ldarg.1
L_0149: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_014e: ldloc.s 8 (System.Int32)
L_0150: ldelem.ref
L_0151: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0156: ldc.i4.1
L_0157: bne.un Label11
L_015c: ldarg.1
L_015d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0162: ldloc.s 8 (System.Int32)
L_0164: ldelem.ref
L_0165: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_016a: ldc.i4.4
L_016b: beq Label12
L_0170: ldarg.1
L_0171: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0176: ldloc.s 8 (System.Int32)
L_0178: ldelem.ref
L_0179: callvirt BattleTech.MechComponentDef get_Def()
L_017e: isinst BattleTech.WeaponDef
L_0183: stloc.s 12 (BattleTech.WeaponDef)
L_0185: ldloc.s 12 (BattleTech.WeaponDef)
L_0187: brfalse Label13
L_018c: ldloc.2
L_018d: ldloc.s 12 (BattleTech.WeaponDef)
L_018f: callvirt Int32 get_HeatGenerated()
L_0194: conv.r4
L_0195: add
L_0196: stloc.2
L_0197: Label3
L_0197: Label7
L_0197: Label10
L_0197: Label11
L_0197: Label12
L_0197: Label13
L_0197: ldloc.s 8 (System.Int32)
L_0199: ldc.i4.1
L_019a: add
L_019b: stloc.s 8 (System.Int32)
L_019d: Label1
L_019d: ldloc.s 8 (System.Int32)
L_019f: ldloc.s 7 (System.Int32)
L_01a1: blt Label14
L_01a6: ldc.i4.0
L_01a7: stloc.s 13 (System.Int32)
L_01a9: br Label15
L_01ae: Label16
L_01ae: ldloc.2
L_01af: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_01b1: ldloc.s 13 (System.Int32)
L_01b3: callvirt Single get_Item(Int32)
L_01b8: mul
L_01b9: stloc.2
L_01ba: ldloc.s 13 (System.Int32)
L_01bc: ldc.i4.1
L_01bd: add
L_01be: stloc.s 13 (System.Int32)
L_01c0: Label15
L_01c0: ldloc.s 13 (System.Int32)
L_01c2: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_01c4: callvirt Int32 get_Count()
L_01c9: blt Label16
L_01ce: ldloc.s 6 (System.Int32)
L_01d0: conv.r4
L_01d1: ldloc.0
L_01d2: callvirt BattleTech.HeatConstantsDef get_Heat()
L_01d7: ldfld System.Int32 JumpHeatPerUnit
L_01dc: conv.r4
L_01dd: ldloc.0
L_01de: callvirt BattleTech.HeatConstantsDef get_Heat()
L_01e3: ldfld System.Single JumpHeatUnitSize
L_01e8: mul
L_01e9: mul
L_01ea: ldc.r4 3
L_01ef: div
L_01f0: stloc.3
L_01f1: ldarg.0
L_01f2: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_01f7: ldstr "Heat Sinking"
L_01fc: call System.String T(System.String)
L_0201: ldstr "{0} Heat"
L_0206: ldc.i4.1
L_0207: newarr System.Object
L_020c: dup
L_020d: ldc.i4.0
L_020e: ldloca.s 1 (System.Single)
L_0210: call System.String ToString()
L_0215: stelem.ref
L_0216: call System.String T(System.String, System.Object[])
L_021b: callvirt Void Add(System.String, System.String)
L_0220: ldarg.0
L_0221: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0226: ldstr "Alpha Strike"
L_022b: call System.String T(System.String)
L_0230: ldstr "{0} Heat"
L_0235: ldc.i4.1
L_0236: newarr System.Object
L_023b: dup
L_023c: ldc.i4.0
L_023d: ldloca.s 2 (System.Single)
L_023f: call System.String ToString()
L_0244: stelem.ref
L_0245: call System.String T(System.String, System.Object[])
L_024a: callvirt Void Add(System.String, System.String)
L_024f: ldarg.0
L_0250: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0255: ldstr "Avg. Jump Heat"
L_025a: call System.String T(System.String)
L_025f: ldstr "{0} Heat"
L_0264: ldc.i4.1
L_0265: newarr System.Object
L_026a: dup
L_026b: ldc.i4.0
L_026c: ldloca.s 3 (System.Single)
L_026e: call System.String ToString()
L_0273: stelem.ref
L_0274: call System.String T(System.String, System.Object[])
L_0279: callvirt Void Add(System.String, System.String)
L_027e: ldarg.0
L_027f: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0284: ldstr "Shutdown"
L_0289: call System.String T(System.String)
L_028e: ldstr "{0} Heat"
L_0293: ldc.i4.1
L_0294: newarr System.Object
L_0299: dup
L_029a: ldc.i4.0
L_029b: ldloca.s 4 (System.Single)
L_029d: call System.String ToString()
L_02a2: stelem.ref
L_02a3: call System.String T(System.String, System.Object[])
L_02a8: callvirt Void Add(System.String, System.String)
L_02ad: call Void Postfix()
L_02b2: ret
DONE

### Patch BattleTech.StatTooltipData, Void SetMovementData(BattleTech.MechDef)
L_0000: Local var 0: BattleTech.CombatGameConstants
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: ldsfld BattleTech.CombatGameConstants Combat
L_0005: stloc.0
L_0006: ldarg.1
L_0007: callvirt BattleTech.ChassisDef get_Chassis()
L_000c: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0011: callvirt Single get_MaxWalkDistance()
L_0016: stloc.1
L_0017: ldarg.1
L_0018: callvirt BattleTech.ChassisDef get_Chassis()
L_001d: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0022: callvirt Single get_MaxSprintDistance()
L_0027: stloc.2
L_0028: ldc.i4.0
L_0029: stloc.3
L_002a: ldc.i4.0
L_002b: stloc.s 5 (System.Int32)
L_002d: br Label1
L_0032: Label6
L_0032: ldarg.1
L_0033: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0038: ldloc.s 5 (System.Int32)
L_003a: ldelem.ref
L_003b: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0040: ldc.i4.5
L_0041: bne.un Label2
L_0046: ldarg.1
L_0047: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_004c: ldloc.s 5 (System.Int32)
L_004e: ldelem.ref
L_004f: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0054: ldc.i4.4
L_0055: bne.un Label3
L_005a: Label2
L_005a: ldarg.1
L_005b: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0060: ldloc.s 5 (System.Int32)
L_0062: ldelem.ref
L_0063: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0068: ldc.i4.4
L_0069: bne.un Label4
L_006e: ldarg.1
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: ldloc.s 5 (System.Int32)
L_0076: ldelem.ref
L_0077: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_007c: ldc.i4.4
L_007d: beq Label5
L_0082: ldloc.3
L_0083: ldc.i4.1
L_0084: add
L_0085: stloc.3
L_0086: Label3
L_0086: Label4
L_0086: Label5
L_0086: ldloc.s 5 (System.Int32)
L_0088: ldc.i4.1
L_0089: add
L_008a: stloc.s 5 (System.Int32)
L_008c: Label1
L_008c: ldloc.s 5 (System.Int32)
L_008e: ldarg.1
L_008f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0094: ldlen
L_0095: conv.i4
L_0096: blt Label6
L_009b: ldc.r4 0
L_00a0: stloc.s 4 (System.Single)
L_00a2: ldloc.3
L_00a3: ldc.i4.0
L_00a4: ble Label7
L_00a9: ldloc.3
L_00aa: ldloc.0
L_00ab: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00b0: ldfld System.Single[] MoveTable
L_00b5: ldlen
L_00b6: conv.i4
L_00b7: ble Label8
L_00bc: ldloc.0
L_00bd: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00c2: ldfld System.Single[] MoveTable
L_00c7: ldloc.0
L_00c8: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00cd: ldfld System.Single[] MoveTable
L_00d2: ldlen
L_00d3: conv.i4
L_00d4: ldc.i4.1
L_00d5: sub
L_00d6: ldelem.r4
L_00d7: stloc.s 4 (System.Single)
L_00d9: br Label9
L_00de: Label8
L_00de: ldloc.0
L_00df: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00e4: ldfld System.Single[] MoveTable
L_00e9: ldloc.3
L_00ea: ldelem.r4
L_00eb: stloc.s 4 (System.Single)
L_00ed: Label7
L_00ed: Label9
L_00ed: ldarg.0
L_00ee: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_00f3: ldstr "Max Move"
L_00f8: call System.String T(System.String)
L_00fd: ldstr "{0}m"
L_0102: ldc.i4.1
L_0103: newarr System.Object
L_0108: dup
L_0109: ldc.i4.0
L_010a: ldloca.s 1 (System.Single)
L_010c: call System.String ToString()
L_0111: stelem.ref
L_0112: call System.String T(System.String, System.Object[])
L_0117: callvirt Void Add(System.String, System.String)
L_011c: ldarg.0
L_011d: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0122: ldstr "Max Sprint"
L_0127: call System.String T(System.String)
L_012c: ldstr "{0}m"
L_0131: ldc.i4.1
L_0132: newarr System.Object
L_0137: dup
L_0138: ldc.i4.0
L_0139: ldloca.s 2 (System.Single)
L_013b: call System.String ToString()
L_0140: stelem.ref
L_0141: call System.String T(System.String, System.Object[])
L_0146: callvirt Void Add(System.String, System.String)
L_014b: ldarg.0
L_014c: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0151: ldstr "Max Jump"
L_0156: call System.String T(System.String)
L_015b: ldstr "{0}m"
L_0160: ldc.i4.1
L_0161: newarr System.Object
L_0166: dup
L_0167: ldc.i4.0
L_0168: ldloca.s 4 (System.Single)
L_016a: call System.String ToString()
L_016f: stelem.ref
L_0170: call System.String T(System.String, System.Object[])
L_0175: callvirt Void Add(System.String, System.String)
L_017a: ldarg.0
L_017b: ldarg 1
L_0181: call Void Postfix(BattleTech.StatTooltipData, BattleTech.MechDef)
L_0186: ret
DONE

### Harmony id=MechEngineer.Features.MoveMultiplierStat, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.MoveMultiplierStat.MoveMultiplierStatSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.17
### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void InitEffectStats()
L_000c: ldarg.0
L_000d: call Void Postfix(BattleTech.Mech)
L_0012: ret
DONE

### Patch BattleTech.Mech, Single get_MoveMultiplier()
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.LocationDamageLevel
L_0000: Local var 2: BattleTech.LocationDamageLevel
L_0000: Local var 3: System.Single
L_0000: ldc.r4 0
L_0005: stloc 3 (System.Single)
L_0006: ldc.r4 0
L_000b: stloc.0
L_000c: ldarg.0
L_000d: call Boolean get_IsOverheated()
L_0012: brfalse Label1
L_0017: ldloc.0
L_0018: ldarg.0
L_0019: call BattleTech.CombatGameState get_Combat()
L_001e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0023: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0028: ldfld System.Single OverheatedMovePenalty
L_002d: add
L_002e: stloc.0
L_002f: Label1
L_002f: ldarg.0
L_0030: ldc.i4.s 64
L_0032: call BattleTech.LocationDamageLevel GetLocationDamageLevel(BattleTech.ChassisLocations)
L_0037: stloc.1
L_0038: ldarg.0
L_0039: ldc.i4 128
L_003e: call BattleTech.LocationDamageLevel GetLocationDamageLevel(BattleTech.ChassisLocations)
L_0043: stloc.2
L_0044: ldloc.1
L_0045: ldc.i4.0
L_0046: ble Label2
L_004b: ldarg.0
L_004c: ldc.i4.s 64
L_004e: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0053: brfalse Label3
L_0058: ldloc.0
L_0059: ldarg.0
L_005a: call BattleTech.CombatGameState get_Combat()
L_005f: callvirt BattleTech.CombatGameConstants get_Constants()
L_0064: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0069: ldfld System.Single LegDestroyedPenalty
L_006e: add
L_006f: stloc.0
L_0070: br Label4
L_0075: Label3
L_0075: ldloc.1
L_0076: ldc.i4.1
L_0077: ble Label5
L_007c: ldloc.0
L_007d: ldarg.0
L_007e: call BattleTech.CombatGameState get_Combat()
L_0083: callvirt BattleTech.CombatGameConstants get_Constants()
L_0088: callvirt BattleTech.MovementConstants get_MoveConstants()
L_008d: ldfld System.Single LegDamageRedPenalty
L_0092: add
L_0093: stloc.0
L_0094: br Label6
L_0099: Label5
L_0099: ldloc.0
L_009a: ldarg.0
L_009b: call BattleTech.CombatGameState get_Combat()
L_00a0: callvirt BattleTech.CombatGameConstants get_Constants()
L_00a5: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00aa: ldfld System.Single LegDamageYellowPenalty
L_00af: add
L_00b0: stloc.0
L_00b1: Label2
L_00b1: Label4
L_00b1: Label6
L_00b1: ldloc.2
L_00b2: ldc.i4.0
L_00b3: ble Label7
L_00b8: ldarg.0
L_00b9: ldc.i4 128
L_00be: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_00c3: brfalse Label8
L_00c8: ldloc.0
L_00c9: ldarg.0
L_00ca: call BattleTech.CombatGameState get_Combat()
L_00cf: callvirt BattleTech.CombatGameConstants get_Constants()
L_00d4: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00d9: ldfld System.Single LegDestroyedPenalty
L_00de: add
L_00df: stloc.0
L_00e0: br Label9
L_00e5: Label8
L_00e5: ldloc.2
L_00e6: ldc.i4.1
L_00e7: ble Label10
L_00ec: ldloc.0
L_00ed: ldarg.0
L_00ee: call BattleTech.CombatGameState get_Combat()
L_00f3: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f8: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00fd: ldfld System.Single LegDamageRedPenalty
L_0102: add
L_0103: stloc.0
L_0104: br Label11
L_0109: Label10
L_0109: ldloc.0
L_010a: ldarg.0
L_010b: call BattleTech.CombatGameState get_Combat()
L_0110: callvirt BattleTech.CombatGameConstants get_Constants()
L_0115: callvirt BattleTech.MovementConstants get_MoveConstants()
L_011a: ldfld System.Single LegDamageYellowPenalty
L_011f: add
L_0120: stloc.0
L_0121: Label7
L_0121: Label9
L_0121: Label11
L_0121: ldarg.0
L_0122: call BattleTech.CombatGameState get_Combat()
L_0127: callvirt BattleTech.CombatGameConstants get_Constants()
L_012c: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0131: ldfld System.Single MinMoveSpeed
L_0136: ldc.r4 1
L_013b: ldloc.0
L_013c: sub
L_013d: call Single Max(Single, Single)
L_0142: stloc 3 (System.Single)
L_0143: ldarg.0
L_0144: ldloca 3 (System.Single)
L_0146: call Void Postfix(BattleTech.Mech, Single ByRef)
L_014b: ldarg.0
L_014c: ldloca 3 (System.Single)
L_014e: call Void Postfix(BattleTech.Mech, Single ByRef)
L_0153: ldloc 3 (System.Single)
L_0154: ret
DONE

### Harmony id=MechEngineer.Features.CompressFloatieMessages, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.CompressFloatieMessages.CompressFloatieMessagesSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.17
### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(BattleTech.FloatieMessage)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_000d: call Boolean Prefix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage, System.Collections.Generic.Queue`1[BattleTech.FloatieMessage])
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.UI.CombatHUD get_HUD()
L_001d: callvirt Boolean get_PilotInjuriesSuppressed()
L_0022: brfalse Label1
L_0027: ldarg.1
L_0028: ldfld BattleTech.FloatieMessage+MessageNature nature
L_002d: ldc.i4.s 9
L_002f: bne.un Label2
L_0034: br Label3
L_0039: Label1
L_0039: Label2
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_003f: ldarg.1
L_0040: callvirt Void Enqueue(BattleTech.FloatieMessage)
L_0045: Label3
L_0045: Label0
L_0045: ret
DONE

### Harmony id=MechEngineer.Features.LocationalEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.LocationalEffects.LocationalEffectsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.17
### Patch BattleTech.MechComponent, Void ApplyPassiveEffectToTarget(BattleTech.EffectData, BattleTech.AbstractActor, BattleTech.ICombatant, System.String)
L_0000: Local var 0: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Void Prefix(BattleTech.MechComponent, BattleTech.EffectData ByRef)
L_000c: ldarg.0
L_000d: ldfld BattleTech.CombatGameState combat
L_0012: callvirt BattleTech.EffectManager get_EffectManager()
L_0017: ldarg.1
L_0018: ldarg.s 4
L_001a: ldc.i4.m1
L_001b: ldarg.0
L_001c: ldfld BattleTech.AbstractActor parent
L_0021: ldarg.3
L_0022: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0024: initobj BattleTech.WeaponHitInfo
L_002a: ldloc.0
L_002b: ldc.i4.0
L_002c: ldc.i4.0
L_002d: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_0032: pop
L_0033: ret
DONE

### Harmony id=MechEngineer.Features.CriticalEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.CriticalEffects.CriticalEffectsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.17
### Patch BattleTech.Mech, Void CheckForCrit(BattleTech.WeaponHitInfo, BattleTech.ChassisLocations, BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single[]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponent
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: BattleTech.AmmunitionBox
L_0000: Local var 6: BattleTech.Jumpjet
L_0000: Local var 7: BattleTech.HeatSinkDef
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 10: BattleTech.ComponentDamageLevel
L_0000: ldarg.3
L_0001: brtrue Label1
L_0006: ldsfld HBS.Logging.ILog attackLogger
L_000b: ldstr "CheckForCrit had a null weapon!"
L_0010: callvirt Void LogError(System.Object)
L_0015: br Label29
L_001a: Label1
L_001a: ldsfld HBS.Logging.ILog attackLogger
L_001f: callvirt Boolean get_IsLogEnabled()
L_0024: brfalse Label2
L_0029: ldsfld HBS.Logging.ILog attackLogger
L_002e: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Base crit chance: {3:P2}"
L_0033: ldc.i4.4
L_0034: newarr System.Object
L_0039: dup
L_003a: ldc.i4.0
L_003b: ldarg.1
L_003c: ldfld System.Int32 attackSequenceId
L_0041: box System.Int32
L_0046: stelem.ref
L_0047: dup
L_0048: ldc.i4.1
L_0049: ldarg.1
L_004a: ldfld System.Int32 attackWeaponIndex
L_004f: box System.Int32
L_0054: stelem.ref
L_0055: dup
L_0056: ldc.i4.2
L_0057: ldarga.s 2
L_0059: constrained. BattleTech.ChassisLocations
L_005f: callvirt System.String ToString()
L_0064: stelem.ref
L_0065: dup
L_0066: ldc.i4.3
L_0067: ldarg.0
L_0068: call BattleTech.CombatGameState get_Combat()
L_006d: callvirt BattleTech.CritChanceRules get_CritChance()
L_0072: ldarg.0
L_0073: ldarg.2
L_0074: ldc.i4.1
L_0075: callvirt Single GetBaseCritChance(BattleTech.Mech, BattleTech.ChassisLocations, Boolean)
L_007a: box System.Single
L_007f: stelem.ref
L_0080: call System.String Format(System.String, System.Object[])
L_0085: callvirt Void Log(System.Object)
L_008a: ldsfld HBS.Logging.ILog attackLogger
L_008f: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Modifiers : {3}"
L_0094: ldc.i4.4
L_0095: newarr System.Object
L_009a: dup
L_009b: ldc.i4.0
L_009c: ldarg.1
L_009d: ldfld System.Int32 attackSequenceId
L_00a2: box System.Int32
L_00a7: stelem.ref
L_00a8: dup
L_00a9: ldc.i4.1
L_00aa: ldarg.1
L_00ab: ldfld System.Int32 attackWeaponIndex
L_00b0: box System.Int32
L_00b5: stelem.ref
L_00b6: dup
L_00b7: ldc.i4.2
L_00b8: ldarga.s 2
L_00ba: constrained. BattleTech.ChassisLocations
L_00c0: callvirt System.String ToString()
L_00c5: stelem.ref
L_00c6: dup
L_00c7: ldc.i4.3
L_00c8: ldarg.0
L_00c9: call BattleTech.CombatGameState get_Combat()
L_00ce: callvirt BattleTech.CritChanceRules get_CritChance()
L_00d3: ldarg.0
L_00d4: ldarg.3
L_00d5: callvirt System.String GetCritMultiplierDescription(BattleTech.ICombatant, BattleTech.Weapon)
L_00da: stelem.ref
L_00db: call System.String Format(System.String, System.Object[])
L_00e0: callvirt Void Log(System.Object)
L_00e5: Label2
L_00e5: ldarg.0
L_00e6: call BattleTech.CombatGameState get_Combat()
L_00eb: callvirt BattleTech.CritChanceRules get_CritChance()
L_00f0: ldarg.0
L_00f1: ldarg.2
L_00f2: ldarg.3
L_00f3: ldc.i4.1
L_00f4: callvirt Single GetCritChance(BattleTech.ICombatant, BattleTech.ChassisLocations, BattleTech.Weapon, Boolean)
L_00f9: stloc.0
L_00fa: ldarg.0
L_00fb: call BattleTech.CombatGameState get_Combat()
L_0100: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0105: ldarg.1
L_0106: ldc.i4.2
L_0107: callvirt Single[] GetRandomFromCache(BattleTech.WeaponHitInfo, Int32)
L_010c: stloc.1
L_010d: ldsfld HBS.Logging.ILog attackLogger
L_0112: callvirt Boolean get_IsLogEnabled()
L_0117: brfalse Label3
L_011c: ldsfld HBS.Logging.ILog attackLogger
L_0121: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Final crit chance: {3:P2}"
L_0126: ldc.i4.4
L_0127: newarr System.Object
L_012c: dup
L_012d: ldc.i4.0
L_012e: ldarg.1
L_012f: ldfld System.Int32 attackSequenceId
L_0134: box System.Int32
L_0139: stelem.ref
L_013a: dup
L_013b: ldc.i4.1
L_013c: ldarg.1
L_013d: ldfld System.Int32 attackWeaponIndex
L_0142: box System.Int32
L_0147: stelem.ref
L_0148: dup
L_0149: ldc.i4.2
L_014a: ldarga.s 2
L_014c: constrained. BattleTech.ChassisLocations
L_0152: callvirt System.String ToString()
L_0157: stelem.ref
L_0158: dup
L_0159: ldc.i4.3
L_015a: ldloc.0
L_015b: box System.Single
L_0160: stelem.ref
L_0161: call System.String Format(System.String, System.Object[])
L_0166: callvirt Void Log(System.Object)
L_016b: ldsfld HBS.Logging.ILog attackLogger
L_0170: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Crit roll: {3:P2}"
L_0175: ldc.i4.4
L_0176: newarr System.Object
L_017b: dup
L_017c: ldc.i4.0
L_017d: ldarg.1
L_017e: ldfld System.Int32 attackSequenceId
L_0183: box System.Int32
L_0188: stelem.ref
L_0189: dup
L_018a: ldc.i4.1
L_018b: ldarg.1
L_018c: ldfld System.Int32 attackWeaponIndex
L_0191: box System.Int32
L_0196: stelem.ref
L_0197: dup
L_0198: ldc.i4.2
L_0199: ldarga.s 2
L_019b: constrained. BattleTech.ChassisLocations
L_01a1: callvirt System.String ToString()
L_01a6: stelem.ref
L_01a7: dup
L_01a8: ldc.i4.3
L_01a9: ldloc.1
L_01aa: ldc.i4.0
L_01ab: ldelem.r4
L_01ac: box System.Single
L_01b1: stelem.ref
L_01b2: call System.String Format(System.String, System.Object[])
L_01b7: callvirt Void Log(System.Object)
L_01bc: Label3
L_01bc: ldloc.1
L_01bd: ldc.i4.0
L_01be: ldelem.r4
L_01bf: ldloc.0
L_01c0: bgt.un Label4
L_01c5: ldarg.0
L_01c6: call BattleTech.MechDef get_MechDef()
L_01cb: ldarg.2
L_01cc: callvirt BattleTech.LocationDef GetChassisLocationDef(BattleTech.ChassisLocations)
L_01d1: ldfld System.Int32 InventorySlots
L_01d6: conv.r4
L_01d7: ldloc.1
L_01d8: ldc.i4.1
L_01d9: ldelem.r4
L_01da: mul
L_01db: conv.i4
L_01dc: stloc.2
L_01dd: ldarg.0
L_01de: ldarg.2
L_01df: ldloc.2
L_01e0: call BattleTech.MechComponent GetComponentInSlot(BattleTech.ChassisLocations, Int32)
L_01e5: stloc.3
L_01e6: ldloc.3
L_01e7: brfalse Label5
L_01ec: ldsfld HBS.Logging.ILog attackLogger
L_01f1: callvirt Boolean get_IsLogEnabled()
L_01f6: brfalse Label6
L_01fb: ldsfld HBS.Logging.ILog attackLogger
L_0200: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical Hit! Found {3} in slot {4}"
L_0205: ldc.i4.5
L_0206: newarr System.Object
L_020b: dup
L_020c: ldc.i4.0
L_020d: ldarg.1
L_020e: ldfld System.Int32 attackSequenceId
L_0213: box System.Int32
L_0218: stelem.ref
L_0219: dup
L_021a: ldc.i4.1
L_021b: ldarg.1
L_021c: ldfld System.Int32 attackWeaponIndex
L_0221: box System.Int32
L_0226: stelem.ref
L_0227: dup
L_0228: ldc.i4.2
L_0229: ldarga.s 2
L_022b: constrained. BattleTech.ChassisLocations
L_0231: callvirt System.String ToString()
L_0236: stelem.ref
L_0237: dup
L_0238: ldc.i4.3
L_0239: ldloc.3
L_023a: callvirt System.String get_Name()
L_023f: stelem.ref
L_0240: dup
L_0241: ldc.i4.4
L_0242: ldloc.2
L_0243: box System.Int32
L_0248: stelem.ref
L_0249: call System.String Format(System.String, System.Object[])
L_024e: callvirt Void Log(System.Object)
L_0253: Label6
L_0253: ldloc.3
L_0254: isinst BattleTech.Weapon
L_0259: stloc.s 4 (BattleTech.Weapon)
L_025b: ldloc.3
L_025c: isinst BattleTech.AmmunitionBox
L_0261: stloc.s 5 (BattleTech.AmmunitionBox)
L_0263: ldloc.3
L_0264: isinst BattleTech.Jumpjet
L_0269: stloc.s 6 (BattleTech.Jumpjet)
L_026b: ldloc.3
L_026c: callvirt BattleTech.MechComponentDef get_componentDef()
L_0271: isinst BattleTech.HeatSinkDef
L_0276: stloc.s 7 (BattleTech.HeatSinkDef)
L_0278: ldloc.s 4 (BattleTech.Weapon)
L_027a: ldnull
L_027b: cgt.un
L_027d: stloc.s 8 (System.Boolean)
L_027f: ldarg.0
L_0280: call BattleTech.MechRepresentation get_GameRep()
L_0285: ldnull
L_0286: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_028b: brfalse Label7
L_0290: ldarg.3
L_0291: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_0296: ldnull
L_0297: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_029c: brfalse Label8
L_02a1: ldarg.3
L_02a2: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02a7: callvirt Boolean get_HasWeaponEffect()
L_02ac: brfalse Label9
L_02b1: ldarg.3
L_02b2: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02b7: callvirt WeaponEffect get_WeaponEffect()
L_02bc: ldfld AudioSwitch_weapon_type weaponImpactType
L_02c1: ldarg.0
L_02c2: call BattleTech.MechRepresentation get_GameRep()
L_02c7: ldfld AkGameObj audioObject
L_02cc: call Void SetSwitch[AudioSwitch_weapon_type](AudioSwitch_weapon_type, AkGameObj)
L_02d1: br Label10
L_02d6: Label8
L_02d6: Label9
L_02d6: ldc.i4.4
L_02d7: ldarg.0
L_02d8: call BattleTech.MechRepresentation get_GameRep()
L_02dd: ldfld AkGameObj audioObject
L_02e2: call Void SetSwitch[AudioSwitch_weapon_type](AudioSwitch_weapon_type, AkGameObj)
L_02e7: Label10
L_02e7: ldc.i4.s 17
L_02e9: ldarg.0
L_02ea: call BattleTech.MechRepresentation get_GameRep()
L_02ef: ldfld AkGameObj audioObject
L_02f4: call Void SetSwitch[AudioSwitch_surface_type](AudioSwitch_surface_type, AkGameObj)
L_02f9: ldc.i4 335
L_02fe: ldarg.0
L_02ff: call BattleTech.MechRepresentation get_GameRep()
L_0304: ldfld AkGameObj audioObject
L_0309: ldnull
L_030a: ldnull
L_030b: call UInt32 PostEvent[AudioEventList_impact](AudioEventList_impact, AkGameObj, EventCallback, System.Object)
L_0310: pop
L_0311: ldc.i4 325
L_0316: ldarg.0
L_0317: call BattleTech.MechRepresentation get_GameRep()
L_031c: ldfld AkGameObj audioObject
L_0321: ldnull
L_0322: ldnull
L_0323: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0328: pop
L_0329: ldarg.0
L_032a: call BattleTech.Team get_team()
L_032f: callvirt Boolean get_LocalPlayerControlsTeam()
L_0334: brfalse Label11
L_0339: ldstr "audioeventdef_musictriggers_combat"
L_033e: ldstr "critical_hit_friendly "
L_0343: ldnull
L_0344: ldnull
L_0345: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_034a: pop
L_034b: br Label12
L_0350: Label11
L_0350: ldarg.0
L_0351: call BattleTech.Team get_team()
L_0356: ldarg.0
L_0357: call BattleTech.CombatGameState get_Combat()
L_035c: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0361: callvirt Boolean IsFriendly(BattleTech.Team)
L_0366: brtrue Label13
L_036b: ldstr "audioeventdef_musictriggers_combat"
L_0370: ldstr "critical_hit_enemy"
L_0375: ldnull
L_0376: ldnull
L_0377: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_037c: pop
L_037d: Label12
L_037d: Label13
L_037d: ldloc.s 6 (BattleTech.Jumpjet)
L_037f: brtrue Label14
L_0384: ldloc.s 7 (BattleTech.HeatSinkDef)
L_0386: brtrue Label15
L_038b: ldloc.s 5 (BattleTech.AmmunitionBox)
L_038d: brtrue Label16
L_0392: ldloc.3
L_0393: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0398: ldc.i4.0
L_0399: ble Label17
L_039e: ldarg.0
L_039f: call BattleTech.MechRepresentation get_GameRep()
L_03a4: ldarg.2
L_03a5: callvirt Void PlayComponentCritVFX(Int32)
L_03aa: Label14
L_03aa: Label15
L_03aa: Label16
L_03aa: Label17
L_03aa: ldloc.s 5 (BattleTech.AmmunitionBox)
L_03ac: brfalse Label18
L_03b1: ldloc.3
L_03b2: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_03b7: ldc.i4.0
L_03b8: ble Label19
L_03bd: ldarg.0
L_03be: call BattleTech.MechRepresentation get_GameRep()
L_03c3: ldarg.2
L_03c4: ldarg.0
L_03c5: call BattleTech.CombatGameState get_Combat()
L_03ca: callvirt BattleTech.CombatGameConstants get_Constants()
L_03cf: callvirt BattleTech.VFXNamesDef get_VFXNames()
L_03d4: ldfld BattleTech.VFXNameDef componentDestruction_AmmoExplosion
L_03d9: call System.String op_Implicit(BattleTech.VFXNameDef)
L_03de: ldc.i4.1
L_03df: call UnityEngine.Vector3 get_zero()
L_03e4: ldc.i4.1
L_03e5: ldc.r4 -1
L_03ea: callvirt Void PlayVFX(Int32, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
L_03ef: Label7
L_03ef: Label18
L_03ef: Label19
L_03ef: ldarg.0
L_03f0: call BattleTech.CombatGameState get_Combat()
L_03f5: callvirt BattleTech.AttackDirector get_AttackDirector()
L_03fa: ldarg.1
L_03fb: ldfld System.Int32 attackSequenceId
L_0400: callvirt AttackSequence GetAttackSequence(Int32)
L_0405: stloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0407: ldloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0409: brfalse Label20
L_040e: ldloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0410: ldarg.0
L_0411: call System.String get_GUID()
L_0416: ldloc.s 4 (BattleTech.Weapon)
L_0418: ldloc.s 5 (BattleTech.AmmunitionBox)
L_041a: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
L_041f: Label20
L_041f: ldloc.3
L_0420: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0425: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0427: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_0429: brtrue Label21
L_042e: ldloc.s 8 (System.Boolean)
L_0430: brfalse Label22
L_0435: ldc.i4.2
L_0436: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0438: ldarg.0
L_0439: call BattleTech.CombatGameState get_Combat()
L_043e: callvirt MessageCenter get_MessageCenter()
L_0443: ldarg.0
L_0444: ldstr "{0} CRIT"
L_0449: ldc.i4.1
L_044a: newarr System.Object
L_044f: dup
L_0450: ldc.i4.0
L_0451: ldloc.3
L_0452: callvirt Localize.Text get_UIName()
L_0457: stelem.ref
L_0458: newobj Void .ctor(String, Object[])
L_045d: ldc.i4.s 10
L_045f: ldc.i4.1
L_0460: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_0465: newobj Void .ctor(IStackSequence)
L_046a: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_046f: br Label23
L_0474: Label22
L_0474: ldc.i4.4
L_0475: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0477: ldarg.0
L_0478: call BattleTech.CombatGameState get_Combat()
L_047d: callvirt MessageCenter get_MessageCenter()
L_0482: ldarg.0
L_0483: ldstr "{0} DESTROYED"
L_0488: ldc.i4.1
L_0489: newarr System.Object
L_048e: dup
L_048f: ldc.i4.0
L_0490: ldloc.3
L_0491: callvirt Localize.Text get_UIName()
L_0496: stelem.ref
L_0497: newobj Void .ctor(String, Object[])
L_049c: ldc.i4.s 11
L_049e: ldc.i4.1
L_049f: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_04a4: newobj Void .ctor(IStackSequence)
L_04a9: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_04ae: br Label24
L_04b3: Label21
L_04b3: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_04b5: ldc.i4.4
L_04b6: beq Label25
L_04bb: ldc.i4.4
L_04bc: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_04be: ldarg.0
L_04bf: call BattleTech.CombatGameState get_Combat()
L_04c4: callvirt MessageCenter get_MessageCenter()
L_04c9: ldarg.0
L_04ca: ldstr "{0} DESTROYED"
L_04cf: ldc.i4.1
L_04d0: newarr System.Object
L_04d5: dup
L_04d6: ldc.i4.0
L_04d7: ldloc.3
L_04d8: callvirt Localize.Text get_UIName()
L_04dd: stelem.ref
L_04de: newobj Void .ctor(String, Object[])
L_04e3: ldc.i4.s 11
L_04e5: ldc.i4.1
L_04e6: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_04eb: newobj Void .ctor(IStackSequence)
L_04f0: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_04f5: Label23
L_04f5: Label24
L_04f5: Label25
L_04f5: ldloc.3
L_04f6: ldarg.1
L_04f7: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_04f9: ldc.i4.1
L_04fa: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_04ff: ldsfld HBS.Logging.ILog attackLogger
L_0504: callvirt Boolean get_IsLogEnabled()
L_0509: brfalse Label26
L_050e: ldsfld HBS.Logging.ILog attackLogger
L_0513: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical: {3} new damage state: {4}"
L_0518: ldc.i4.5
L_0519: newarr System.Object
L_051e: dup
L_051f: ldc.i4.0
L_0520: ldarg.1
L_0521: ldfld System.Int32 attackSequenceId
L_0526: box System.Int32
L_052b: stelem.ref
L_052c: dup
L_052d: ldc.i4.1
L_052e: ldarg.1
L_052f: ldfld System.Int32 attackWeaponIndex
L_0534: box System.Int32
L_0539: stelem.ref
L_053a: dup
L_053b: ldc.i4.2
L_053c: ldarga.s 2
L_053e: constrained. BattleTech.ChassisLocations
L_0544: callvirt System.String ToString()
L_0549: stelem.ref
L_054a: dup
L_054b: ldc.i4.3
L_054c: ldloc.3
L_054d: callvirt System.String get_Name()
L_0552: stelem.ref
L_0553: dup
L_0554: ldc.i4.4
L_0555: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_0557: box BattleTech.ComponentDamageLevel
L_055c: stelem.ref
L_055d: call System.String Format(System.String, System.Object[])
L_0562: callvirt Void Log(System.Object)
L_0567: br Label30
L_056c: Label5
L_056c: ldsfld HBS.Logging.ILog attackLogger
L_0571: callvirt Boolean get_IsLogEnabled()
L_0576: brfalse Label27
L_057b: ldsfld HBS.Logging.ILog attackLogger
L_0580: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical Hit! No component in slot {3}"
L_0585: ldc.i4.4
L_0586: newarr System.Object
L_058b: dup
L_058c: ldc.i4.0
L_058d: ldarg.1
L_058e: ldfld System.Int32 attackSequenceId
L_0593: box System.Int32
L_0598: stelem.ref
L_0599: dup
L_059a: ldc.i4.1
L_059b: ldarg.1
L_059c: ldfld System.Int32 attackWeaponIndex
L_05a1: box System.Int32
L_05a6: stelem.ref
L_05a7: dup
L_05a8: ldc.i4.2
L_05a9: ldarga.s 2
L_05ab: constrained. BattleTech.ChassisLocations
L_05b1: callvirt System.String ToString()
L_05b6: stelem.ref
L_05b7: dup
L_05b8: ldc.i4.3
L_05b9: ldloc.2
L_05ba: box System.Int32
L_05bf: stelem.ref
L_05c0: call System.String Format(System.String, System.Object[])
L_05c5: callvirt Void Log(System.Object)
L_05ca: br Label31
L_05cf: Label4
L_05cf: ldsfld HBS.Logging.ILog attackLogger
L_05d4: callvirt Boolean get_IsLogEnabled()
L_05d9: brfalse Label28
L_05de: ldsfld HBS.Logging.ILog attackLogger
L_05e3: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} No crit"
L_05e8: ldarg.1
L_05e9: ldfld System.Int32 attackSequenceId
L_05ee: box System.Int32
L_05f3: ldarg.1
L_05f4: ldfld System.Int32 attackWeaponIndex
L_05f9: box System.Int32
L_05fe: ldarga.s 2
L_0600: constrained. BattleTech.ChassisLocations
L_0606: callvirt System.String ToString()
L_060b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0610: callvirt Void Log(System.Object)
L_0615: Label26
L_0615: Label27
L_0615: Label28
L_0615: Label29
L_0615: Label30
L_0615: Label31
L_0615: ret
DONE

### Patch BattleTech.MechComponent, Int32 get_inventorySize()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: call BattleTech.MechComponentDef get_componentDef()
L_000c: callvirt Int32 get_InventorySize()
L_0011: stloc 0 (System.Int32)
L_0012: ldarg.0
L_0013: ldloca 0 (System.Int32)
L_0015: call Void Postfix(BattleTech.MechComponent, Int32 ByRef)
L_001a: ldloc 0 (System.Int32)
L_001b: ret
DONE

### Patch BattleTech.Mech, Void OnLocationDestroyed(BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.WeaponHitInfo, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: BattleTech.DeathMethod
L_0000: Local var 2: System.String
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: BattleTech.MechComponent
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: BattleTech.AmmunitionBox
L_0000: Local var 10: BattleTech.Pilot
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: beq Label1
L_0007: ldarg.1
L_0008: ldc.i4.8
L_0009: beq Label2
L_000e: ldstr "{0} DESTROYED"
L_0013: ldc.i4.1
L_0014: newarr System.Object
L_0019: dup
L_001a: ldc.i4.0
L_001b: ldarg.1
L_001c: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0021: stelem.ref
L_0022: newobj Void .ctor(String, Object[])
L_0027: stloc.3
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldarg.0
L_0034: ldloc.3
L_0035: ldc.i4.s 12
L_0037: ldc.i4.1
L_0038: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_003d: newobj Void .ctor(IStackSequence)
L_0042: callvirt Void PublishMessage(MessageCenterMessage)
L_0047: Label1
L_0047: Label2
L_0047: ldarg.0
L_0048: call BattleTech.CombatGameState get_Combat()
L_004d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0052: ldarg.3
L_0053: ldfld System.Int32 attackSequenceId
L_0058: callvirt AttackSequence GetAttackSequence(Int32)
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label3
L_0064: ldloc.0
L_0065: ldarg.0
L_0066: call System.String get_GUID()
L_006b: callvirt Void FlagAttackDestroyedAnyLocation(System.String)
L_0070: Label3
L_0070: ldarg.1
L_0071: ldc.i4.s 64
L_0073: beq Label4
L_0078: ldarg.1
L_0079: ldc.i4 128
L_007e: bne.un Label5
L_0083: Label4
L_0083: ldloc.0
L_0084: brfalse Label6
L_0089: ldloc.0
L_008a: ldfld BattleTech.AbstractActor attacker
L_008f: callvirt System.String get_GUID()
L_0094: br Label7
L_0099: Label6
L_0099: ldstr "debug"
L_009e: Label7
L_009e: stloc.s 4 (System.String)
L_00a0: ldloc.0
L_00a1: brfalse Label8
L_00a6: ldloc.0
L_00a7: ldfld System.Int32 attackSequenceIdx
L_00ac: br Label9
L_00b1: Label8
L_00b1: ldc.i4.m1
L_00b2: Label9
L_00b2: stloc.s 5 (System.Int32)
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.StatCollection statCollection
L_00ba: ldloc.s 4 (System.String)
L_00bc: ldloc.s 5 (System.Int32)
L_00be: ldstr "RunSpeed"
L_00c3: ldc.i4.0
L_00c4: ldc.r4 0
L_00c9: ldc.i4.m1
L_00ca: ldc.i4.1
L_00cb: callvirt Int32 ModifyStat[Single](System.String, Int32, System.String, StatOperation, Single, Int32, Boolean)
L_00d0: pop
L_00d1: ldarg.0
L_00d2: callvirt Void FlagForKnockdown()
L_00d7: ldloc.0
L_00d8: brfalse Label10
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.AbstractActor attacker
L_00e4: bne.un Label11
L_00e9: ldloc.0
L_00ea: callvirt Void FlagAttackDestroyedAttackerLeg()
L_00ef: br Label12
L_00f4: Label11
L_00f4: ldloc.0
L_00f5: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00fa: ldarg.0
L_00fb: call System.String get_GUID()
L_0100: callvirt Boolean Contains(System.String)
L_0105: brfalse Label13
L_010a: ldloc.0
L_010b: ldarg.0
L_010c: call System.String get_GUID()
L_0111: callvirt Void FlagAttackDestroyedLeg(System.String)
L_0116: ldloc.0
L_0117: ldarg.0
L_0118: call System.String get_GUID()
L_011d: callvirt Void FlagAttackCausedKnockdown(System.String)
L_0122: Label5
L_0122: Label10
L_0122: Label12
L_0122: Label13
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0128: callvirt Enumerator GetEnumerator()
L_012d: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_012f: br Label14
	L_0134: Label18
	L_0134: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0136: call BattleTech.MechComponent get_Current()
	L_013b: stloc.s 7 (BattleTech.MechComponent)
	L_013d: ldloc.s 7 (BattleTech.MechComponent)
	L_013f: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0144: ldarg.1
	L_0145: bne.un Label15
	L_014a: ldloc.s 7 (BattleTech.MechComponent)
	L_014c: ldarg.3
	L_014d: ldc.i4.4
	L_014e: ldc.i4.0
	L_014f: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
	L_0154: ldsfld HBS.Logging.ILog damageLogger
	L_0159: callvirt Boolean get_IsLogEnabled()
	L_015e: brfalse Label16
	L_0163: ldsfld HBS.Logging.ILog damageLogger
	L_0168: ldstr "====@@@ Component Destroyed: {0}"
	L_016d: ldloc.s 7 (BattleTech.MechComponent)
	L_016f: callvirt System.String get_Name()
	L_0174: call System.String Format(System.String, System.Object)
	L_0179: callvirt Void Log(System.Object)
	L_017e: Label16
	L_017e: ldloc.0
	L_017f: brfalse Label17
	L_0184: ldloc.s 7 (BattleTech.MechComponent)
	L_0186: isinst BattleTech.Weapon
	L_018b: stloc.s 8 (BattleTech.Weapon)
	L_018d: ldloc.s 7 (BattleTech.MechComponent)
	L_018f: isinst BattleTech.AmmunitionBox
	L_0194: stloc.s 9 (BattleTech.AmmunitionBox)
	L_0196: ldloc.0
	L_0197: ldarg.0
	L_0198: call System.String get_GUID()
	L_019d: ldloc.s 8 (BattleTech.Weapon)
	L_019f: ldloc.s 9 (BattleTech.AmmunitionBox)
	L_01a1: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
	L_01a6: Label14
	L_01a6: Label15
	L_01a6: Label17
	L_01a6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01a8: call Boolean MoveNext()
	L_01ad: brtrue Label18
	L_01b2: leave Label19
	L_01b7: leave (autogenerated)
} // end try
.finally
{
	L_01bc: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01be: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_01c4: callvirt Void Dispose()
	L_01c9: endfinally
	L_01ca: leave (autogenerated)
} // end handler
L_01cb: Label19
L_01cb: ldarg.0
L_01cc: ldarg.3
L_01cd: call Void UpdateMinStability(BattleTech.WeaponHitInfo)
L_01d2: ldc.i4.0
L_01d3: stloc.1
L_01d4: ldstr ""
L_01d9: stloc.2
L_01da: ldarg.1
L_01db: ldc.i4.8
L_01dc: bne.un Label20
L_01e1: ldc.i4.2
L_01e2: stloc.1
L_01e3: ldstr "Location Destroyed: "
L_01e8: ldarga.s 1
L_01ea: constrained. BattleTech.ChassisLocations
L_01f0: callvirt System.String ToString()
L_01f5: call System.String Concat(System.String, System.String)
L_01fa: stloc.2
L_01fb: br Label21
L_0200: Label20
L_0200: ldarg.1
L_0201: ldc.i4.1
L_0202: bne.un Label22
L_0207: ldc.i4.1
L_0208: stloc.1
L_0209: ldstr "Location Destroyed: "
L_020e: ldarga.s 1
L_0210: constrained. BattleTech.ChassisLocations
L_0216: callvirt System.String ToString()
L_021b: call System.String Concat(System.String, System.String)
L_0220: stloc.2
L_0221: br Label23
L_0226: Label22
L_0226: ldarg.1
L_0227: ldc.i4.s 64
L_0229: beq Label24
L_022e: ldarg.1
L_022f: ldc.i4 128
L_0234: bne.un Label25
L_0239: Label24
L_0239: ldarg.0
L_023a: call Single get_LeftLegStructure()
L_023f: ldc.r4 0
L_0244: bgt.un Label26
L_0249: ldarg.0
L_024a: call Single get_RightLegStructure()
L_024f: ldc.r4 0
L_0254: bgt.un Label27
L_0259: ldc.i4.3
L_025a: stloc.1
L_025b: ldstr "Location Destroyed: "
L_0260: ldarga.s 1
L_0262: constrained. BattleTech.ChassisLocations
L_0268: callvirt System.String ToString()
L_026d: call System.String Concat(System.String, System.String)
L_0272: stloc.2
L_0273: Label21
L_0273: Label23
L_0273: Label25
L_0273: Label26
L_0273: Label27
L_0273: ldarg.s 4
L_0275: ldc.i4.s 11
L_0277: bne.un Label28
L_027c: ldarg.1
L_027d: ldc.i4.8
L_027e: beq Label29
L_0283: ldarg.1
L_0284: ldc.i4.1
L_0285: bne.un Label30
L_028a: Label29
L_028a: ldc.i4.4
L_028b: stloc.1
L_028c: ldstr "Ammo Explosion: "
L_0291: ldarga.s 1
L_0293: constrained. BattleTech.ChassisLocations
L_0299: callvirt System.String ToString()
L_029e: call System.String Concat(System.String, System.String)
L_02a3: stloc.2
L_02a4: Label28
L_02a4: Label30
L_02a4: ldloc.1
L_02a5: brfalse Label31
L_02aa: ldarg.0
L_02ab: ldloc.2
L_02ac: ldloc.1
L_02ad: ldarg.s 4
L_02af: ldarg.1
L_02b0: ldarg.3
L_02b1: ldfld System.Int32 stackItemUID
L_02b6: ldarg.3
L_02b7: ldfld System.String attackerId
L_02bc: ldc.i4.0
L_02bd: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_02c2: br Label32
L_02c7: Label31
L_02c7: ldarg.1
L_02c8: ldc.i4.4
L_02c9: beq Label33
L_02ce: ldarg.1
L_02cf: ldc.i4.s 16
L_02d1: bne.un Label34
L_02d6: Label33
L_02d6: ldarg.0
L_02d7: call BattleTech.CombatGameState get_Combat()
L_02dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_02e1: callvirt BattleTech.PilotingConstantsDef get_PilotingConstants()
L_02e6: ldfld System.Boolean InjuryFromSideTorsoDestruction
L_02eb: brfalse Label35
L_02f0: ldarg.0
L_02f1: callvirt BattleTech.Pilot GetPilot()
L_02f6: stloc.s 10 (BattleTech.Pilot)
L_02f8: ldloc.s 10 (BattleTech.Pilot)
L_02fa: brfalse Label36
L_02ff: ldloc.s 10 (BattleTech.Pilot)
L_0301: ldc.i4.5
L_0302: callvirt Void SetNeedsInjury(BattleTech.InjuryReason)
L_0307: Label32
L_0307: Label34
L_0307: Label35
L_0307: Label36
L_0307: ldarg.0
L_0308: call BattleTech.MechRepresentation get_GameRep()
L_030d: ldnull
L_030e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0313: brfalse Label37
L_0318: ldarg.0
L_0319: call BattleTech.MechRepresentation get_GameRep()
L_031e: ldarg.1
L_031f: ldarg.2
L_0320: callvirt Void PlayComponentDestroyedVFX(Int32, UnityEngine.Vector3)
L_0325: Label37
L_0325: ret
DONE

### Patch BattleTech.Mech, BattleTech.MechComponent GetComponentInSlot(BattleTech.ChassisLocations, Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.LocationDef
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponent
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: ldarg.0
L_0009: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_000e: callvirt Enumerator GetEnumerator()
L_0013: stloc.3
.try
{
	L_0014: br Label1
	L_0019: Label5
	L_0019: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_001b: call BattleTech.MechComponent get_Current()
	L_0020: stloc.s 4 (BattleTech.MechComponent)
	L_0022: ldloc.s 4 (BattleTech.MechComponent)
	L_0024: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0029: ldarg.1
	L_002a: and
	L_002b: ldc.i4.0
	L_002c: ble Label2
	L_0031: ldc.i4.0
	L_0032: stloc.s 5 (System.Int32)
	L_0034: br Label3
	L_0039: Label4
	L_0039: ldloc.0
	L_003a: ldloc.s 4 (BattleTech.MechComponent)
	L_003c: callvirt Void Add(BattleTech.MechComponent)
	L_0041: ldloc.1
	L_0042: ldc.i4.1
	L_0043: add
	L_0044: stloc.1
	L_0045: ldloc.s 5 (System.Int32)
	L_0047: ldc.i4.1
	L_0048: add
	L_0049: stloc.s 5 (System.Int32)
	L_004b: Label3
	L_004b: ldloc.s 5 (System.Int32)
	L_004d: ldloc.s 4 (BattleTech.MechComponent)
	L_004f: callvirt Int32 get_inventorySize()
	L_0054: blt Label4
	L_0059: Label1
	L_0059: Label2
	L_0059: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_005b: call Boolean MoveNext()
	L_0060: brtrue Label5
	L_0065: leave Label6
	L_006a: leave (autogenerated)
} // end try
.finally
{
	L_006f: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0071: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0077: callvirt Void Dispose()
	L_007c: endfinally
	L_007d: leave (autogenerated)
} // end handler
L_007e: Label6
L_007e: ldarg.0
L_007f: call BattleTech.MechDef get_MechDef()
L_0084: ldarg.1
L_0085: callvirt BattleTech.LocationDef GetChassisLocationDef(BattleTech.ChassisLocations)
L_008a: stloc.2
L_008b: br Label7
L_0090: Label8
L_0090: ldloc.0
L_0091: ldnull
L_0092: callvirt Void Add(BattleTech.MechComponent)
L_0097: Label7
L_0097: ldloc.0
L_0098: callvirt Int32 get_Count()
L_009d: ldloc.2
L_009e: ldfld System.Int32 InventorySlots
L_00a3: blt Label8
L_00a8: ldarg.0
L_00a9: call BattleTech.CombatGameState get_Combat()
L_00ae: callvirt BattleTech.CombatGameConstants get_Constants()
L_00b3: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_00b8: ldfld System.Boolean SearchForValidCritSlot
L_00bd: brfalse Label9
L_00c2: ldc.i4.0
L_00c3: stloc.s 6 (System.Int32)
L_00c5: br Label10
L_00ca: Label15
L_00ca: ldarg.2
L_00cb: ldloc.0
L_00cc: callvirt Int32 get_Count()
L_00d1: blt Label11
L_00d6: ldarg.2
L_00d7: ldloc.0
L_00d8: callvirt Int32 get_Count()
L_00dd: rem
L_00de: starg.s 2
L_00e0: Label11
L_00e0: ldarg.2
L_00e1: ldloc.0
L_00e2: callvirt Int32 get_Count()
L_00e7: bge Label12
L_00ec: ldloc.0
L_00ed: ldarg.2
L_00ee: callvirt BattleTech.MechComponent get_Item(Int32)
L_00f3: brfalse Label13
L_00f8: ldloc.0
L_00f9: ldarg.2
L_00fa: callvirt BattleTech.MechComponent get_Item(Int32)
L_00ff: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0104: ldc.i4.4
L_0105: bge Label14
L_010a: ldloc.0
L_010b: ldarg.2
L_010c: callvirt BattleTech.MechComponent get_Item(Int32)
L_0111: br Label19
L_0116: Label12
L_0116: Label13
L_0116: Label14
L_0116: ldloc.s 6 (System.Int32)
L_0118: ldc.i4.1
L_0119: add
L_011a: stloc.s 6 (System.Int32)
L_011c: Label10
L_011c: ldloc.s 6 (System.Int32)
L_011e: ldloc.2
L_011f: ldfld System.Int32 InventorySlots
L_0124: blt Label15
L_0129: br Label16
L_012e: Label9
L_012e: ldarg.2
L_012f: ldloc.0
L_0130: callvirt Int32 get_Count()
L_0135: bge Label17
L_013a: ldloc.0
L_013b: ldarg.2
L_013c: callvirt BattleTech.MechComponent get_Item(Int32)
L_0141: br Label20
L_0146: Label16
L_0146: Label17
L_0146: ldnull
L_0147: Label19
L_0147: Label20
L_0147: ret
DONE

### Patch BattleTech.MechComponent, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarga 2
L_000d: call Boolean Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.StatCollection get_StatCollection()
L_001d: ldarg.1
L_001e: ldfld System.String attackerId
L_0023: ldarg.1
L_0024: ldfld System.Int32 stackItemUID
L_0029: ldstr "DamageLevel"
L_002e: ldc.i4.0
L_002f: ldarg.2
L_0030: ldc.i4.m1
L_0031: ldc.i4.1
L_0032: callvirt Int32 ModifyStat[ComponentDamageLevel](System.String, Int32, System.String, StatOperation, BattleTech.ComponentDamageLevel, Int32, Boolean)
L_0037: pop
L_0038: ldarg.2
L_0039: ldc.i4.0
L_003a: blt Label1
L_003f: ldarg.0
L_0040: ldc.i4.1
L_0041: call Void CancelCreatedEffects(BattleTech.MechComponent, Boolean)
L_0046: Label1
L_0046: ldarg.2
L_0047: ldc.i4.4
L_0048: pop
L_0049: pop
L_004a: ldarg.0
L_004b: call BattleTech.MechComponentDef get_componentDef()
L_0050: callvirt Boolean get_CriticalComponent()
L_0055: brfalse Label2
L_005a: ldarg.0
L_005b: ldfld BattleTech.AbstractActor parent
L_0060: ldstr "Vital component destroyed: "
L_0065: ldarg.0
L_0066: call BattleTech.DescriptionDef get_Description()
L_006b: callvirt System.String get_Name()
L_0070: call System.String Concat(System.String, System.String)
L_0075: ldc.i4.s 9
L_0077: ldc.i4.1
L_0078: ldarg.0
L_0079: ldflda BattleTech.LocationDef locationDef
L_007e: ldfld BattleTech.ChassisLocations Location
L_0083: ldarg.1
L_0084: ldfld System.Int32 stackItemUID
L_0089: ldarg.1
L_008a: ldfld System.String attackerId
L_008f: ldc.i4.0
L_0090: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_0095: Label2
L_0095: Label0
L_0095: ldarg.0
L_0096: call Void Postfix(BattleTech.MechComponent)
L_009b: ret
DONE

### Harmony id=MechEngineer.Features.AccuracyEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.AccuracyEffects.AccuracyEffectsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.18
### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void Prefix(BattleTech.Mech)
L_000c: ldarg.0
L_000d: call Void InitEffectStats()
L_0012: ldarg.0
L_0013: call Void Postfix(BattleTech.Mech)
L_0018: ret
DONE

### Patch BattleTech.ToHit, Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: ldc.r4 0
L_0005: stloc 0 (System.Single)
L_0006: ldarg 1
L_000c: ldloca 0 (System.Single)
L_000e: call Boolean Prefix(BattleTech.Weapon, Single ByRef)
L_0013: brfalse Label0
L_0018: ldarg.1
L_0019: ldfld BattleTech.AbstractActor parent
L_001e: brfalse Label1
L_0023: ldarg.1
L_0024: ldfld BattleTech.AbstractActor parent
L_0029: callvirt BattleTech.UnitType get_UnitType()
L_002e: ldc.i4.1
L_002f: bne.un Label2
L_0034: ldarg.1
L_0035: callvirt Int32 get_Location()
L_003a: ldc.i4.s 34
L_003c: and
L_003d: brfalse Label3
L_0042: ldarg.0
L_0043: ldfld BattleTech.CombatGameState combat
L_0048: callvirt BattleTech.CombatGameConstants get_Constants()
L_004d: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0052: ldfld System.Single ToHitSelfArmMountedWeapon
L_0057: br Label4
L_005c: Label1
L_005c: Label2
L_005c: Label3
L_005c: ldc.r4 0
L_0061: Label4
L_0061: stloc 0 (System.Single)
L_0062: Label0
L_0062: ldloc 0 (System.Single)
L_0063: ret
DONE

### Harmony id=MechEngineer.Features.OverrideDescriptions, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideDescriptions.OverrideDescriptionsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.18
### Patch BattleTech.UI.ListElementController_BASE_NotListView, Void SetComponentTooltipData(BattleTech.MechComponentDef)
L_0000: Local var 0: BattleTech.UI.Tooltips.HBSTooltipStateData
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_0006: ldnull
L_0007: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_000c: brtrue Label1
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_0017: ldfld BattleTech.UI.Tooltips.HBSTooltip tooltip
L_001c: ldnull
L_001d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0022: brtrue Label2
L_0027: ldarg.1
L_0028: brtrue Label3
L_002d: Label1
L_002d: Label2
L_002d: br Label4
L_0032: Label3
L_0032: newobj Void .ctor()
L_0037: stloc.0
L_0038: ldloc.0
L_0039: ldarg.1
L_003a: call System.Object MechComponentDefHandlerForTooltip(BattleTech.MechComponentDef)
L_003f: callvirt Void SetObject(System.Object)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_004a: ldfld BattleTech.UI.Tooltips.HBSTooltip tooltip
L_004f: ldloc.0
L_0050: callvirt Void SetDefaultStateData(BattleTech.UI.Tooltips.HBSTooltipStateData)
L_0055: Label4
L_0055: ldarg.0
L_0056: call Void Postfix(BattleTech.UI.ListElementController_BASE_NotListView)
L_005b: ret
DONE

### Patch BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponentRef
L_0000: Local var 5: BattleTech.MechComponentDef
L_0000: Local var 6: BattleTech.UI.MechLabItemSlotElement
L_0000: ldnull
L_0001: stloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_0003: ldnull
L_0004: stloc.0
L_0005: ldarg.0
L_0006: ldfld BattleTech.Data.DataManager dataManager
L_000b: ldsfld System.String MECHCOMPONENT_ITEM_PREFAB
L_0010: ldc.i4.s 68
L_0012: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0014: initobj System.Nullable`1[UnityEngine.Vector3]
L_001a: ldloc.2
L_001b: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_001d: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0023: ldloc.3
L_0024: ldnull
L_0025: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_002a: stloc.1
L_002b: ldloc.1
L_002c: ldnull
L_002d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0032: brfalse Label1
L_0037: ldloc.1
L_0038: callvirt BattleTech.UI.MechLabItemSlotElement GetComponent[MechLabItemSlotElement]()
L_003d: stloc.0
L_003e: ldarg.1
L_003f: stloc.s 4 (BattleTech.MechComponentRef)
L_0041: ldarg.2
L_0042: brfalse Label2
L_0047: ldarg.1
L_0048: ldnull
L_0049: newobj Void .ctor(MechComponentRef, String)
L_004e: stloc.s 4 (BattleTech.MechComponentRef)
L_0050: ldarg.0
L_0051: call Boolean get_IsSimGame()
L_0056: brfalse Label3
L_005b: ldarg.0
L_005c: ldfld BattleTech.SimGameState sim
L_0061: ldarg.1
L_0062: callvirt BattleTech.BattleTechResourceType GetResourceType()
L_0067: ldarg.1
L_0068: callvirt System.String get_ComponentDefID()
L_006d: callvirt BattleTech.MechComponentDef GetComponentDef(BattleTech.BattleTechResourceType, System.String)
L_0072: stloc.s 5 (BattleTech.MechComponentDef)
L_0074: ldloc.s 4 (BattleTech.MechComponentRef)
L_0076: ldloc.s 5 (BattleTech.MechComponentDef)
L_0078: callvirt Void SetComponentDef(BattleTech.MechComponentDef)
L_007d: ldloc.s 4 (BattleTech.MechComponentRef)
L_007f: ldarg.0
L_0080: ldfld BattleTech.SimGameState sim
L_0085: callvirt System.String GenerateSimGameUID()
L_008a: callvirt Void SetSimGameUID(System.String)
L_008f: Label2
L_008f: Label3
L_008f: ldloc.0
L_0090: ldloc.s 4 (BattleTech.MechComponentRef)
L_0092: ldarg.3
L_0093: ldarg.0
L_0094: ldfld BattleTech.Data.DataManager dataManager
L_0099: ldarg.s 4
L_009b: callvirt Void SetData(BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.Data.DataManager, BattleTech.UI.IMechLabDropTarget)
L_00a0: ldarg.s 5
L_00a2: ldnull
L_00a3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00a8: brfalse Label4
L_00ad: ldloc.0
L_00ae: ldarg.s 5
L_00b0: stfld BattleTech.UI.InventoryItemElement_NotListView ItemThatISpawnedFrom
L_00b5: Label1
L_00b5: Label4
L_00b5: ldloc.0
L_00b6: stloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00b8: ldarg.0
L_00b9: ldarg 1
L_00bf: ldloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00c1: call Void Postfix(BattleTech.UI.MechLabPanel, BattleTech.MechComponentRef, BattleTech.UI.MechLabItemSlotElement)
L_00c6: ldloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00c8: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean ValidateLoadout(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 9 (System.Boolean)
L_0007: ldarg.0
L_0008: call Boolean get_Initialized()
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label7
L_0018: Label1
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldstr ""
L_001f: ldstr ""
L_0024: call BattleTech.MechDef CreateMechDef(System.String, System.String)
L_0029: stfld BattleTech.MechDef activeMechDef
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0034: ldc.i4.0
L_0035: callvirt Void RefreshInfo(Boolean)
L_003a: ldarg.0
L_003b: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0040: ldarg.0
L_0041: ldfld BattleTech.MechDef activeMechDef
L_0046: callvirt Void SetData(BattleTech.MechDef)
L_004b: ldarg.0
L_004c: ldc.i4.3
L_004d: ldarg.0
L_004e: ldfld BattleTech.Data.DataManager dataManager
L_0053: ldarg.0
L_0054: ldfld BattleTech.MechDef activeMechDef
L_0059: ldarg.0
L_005a: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_005f: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0064: stfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0069: ldarg.0
L_006a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_006f: newobj Void .ctor()
L_0074: dup
L_0075: ldc.i4.0
L_0076: callvirt Void Add(BattleTech.MechValidationType)
L_007b: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0080: stloc.0
L_0081: ldarg.0
L_0082: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0087: newobj Void .ctor()
L_008c: dup
L_008d: ldc.i4.2
L_008e: callvirt Void Add(BattleTech.MechValidationType)
L_0093: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0098: stloc.1
L_0099: ldarg.0
L_009a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_009f: newobj Void .ctor()
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: callvirt Void Add(BattleTech.MechValidationType)
L_00ab: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00b7: newobj Void .ctor()
L_00bc: dup
L_00bd: ldc.i4.4
L_00be: callvirt Void Add(BattleTech.MechValidationType)
L_00c3: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00c8: stloc.3
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00cf: newobj Void .ctor()
L_00d4: dup
L_00d5: ldc.i4.5
L_00d6: callvirt Void Add(BattleTech.MechValidationType)
L_00db: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00e0: stloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00e8: newobj Void .ctor()
L_00ed: dup
L_00ee: ldc.i4.6
L_00ef: callvirt Void Add(BattleTech.MechValidationType)
L_00f4: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00f9: stloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_00fb: ldarg.0
L_00fc: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0101: newobj Void .ctor()
L_0106: dup
L_0107: ldc.i4.8
L_0108: callvirt Void Add(BattleTech.MechValidationType)
L_010d: dup
L_010e: ldc.i4.s 9
L_0110: callvirt Void Add(BattleTech.MechValidationType)
L_0115: dup
L_0116: ldc.i4.7
L_0117: callvirt Void Add(BattleTech.MechValidationType)
L_011c: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0121: stloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_0123: ldarg.0
L_0124: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0129: newobj Void .ctor()
L_012e: dup
L_012f: ldc.i4.s 10
L_0131: callvirt Void Add(BattleTech.MechValidationType)
L_0136: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_013b: stloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_013d: ldarg.0
L_013e: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0143: newobj Void .ctor()
L_0148: dup
L_0149: ldc.i4.s 11
L_014b: callvirt Void Add(BattleTech.MechValidationType)
L_0150: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0155: stloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_0157: ldarg.0
L_0158: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_015d: ldloc.0
L_015e: callvirt Void ToggleGenericAlert(System.Collections.Generic.List`1[Localize.Text])
L_0163: ldarg.0
L_0164: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0169: ldloc.1
L_016a: callvirt Void ToggleOverweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0175: ldloc.2
L_0176: callvirt Void ToggleUnderweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0181: ldloc.3
L_0182: callvirt Void ToggleMissingWeaponAlert(System.Collections.Generic.List`1[Localize.Text])
L_0187: ldarg.0
L_0188: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_018d: ldloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_018f: callvirt Void ToggleNoAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_0194: ldarg.0
L_0195: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_019a: ldloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_019c: callvirt Void ToggleUnneededAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_01a1: ldarg.0
L_01a2: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01a7: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01a9: callvirt Void ToggleInventoryAlert(System.Collections.Generic.List`1[Localize.Text])
L_01ae: ldarg.0
L_01af: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01b4: ldloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_01b6: callvirt Void ToggleDamagedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01bb: ldarg.0
L_01bc: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01c1: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01c3: callvirt Void ToggleDestroyedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01c8: ldloc.0
L_01c9: callvirt Int32 get_Count()
L_01ce: ldc.i4.0
L_01cf: bgt Label2
L_01d4: ldloc.1
L_01d5: callvirt Int32 get_Count()
L_01da: ldc.i4.0
L_01db: bgt Label3
L_01e0: ldloc.3
L_01e1: callvirt Int32 get_Count()
L_01e6: ldc.i4.0
L_01e7: bgt Label4
L_01ec: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01ee: callvirt Int32 get_Count()
L_01f3: ldc.i4.0
L_01f4: bgt Label5
L_01f9: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01fb: callvirt Int32 get_Count()
L_0200: ldc.i4.0
L_0201: cgt
L_0203: br Label6
L_0208: Label2
L_0208: Label3
L_0208: Label4
L_0208: Label5
L_0208: ldc.i4.1
L_0209: Label6
L_0209: ldc.i4.0
L_020a: ceq
L_020c: Label7
L_020c: stloc 9 (System.Boolean)
L_020e: ldarg.0
L_020f: call Void Postfix(BattleTech.UI.MechLabPanel)
L_0214: ldloc 9 (System.Boolean)
L_0216: ret
DONE

### Patch BattleTech.UI.Tooltips.TooltipPrefab_Equipment, Boolean SetData(System.Object)
L_0000: Local var 0: BattleTech.MechComponentDef
L_0000: Local var 1: BattleTech.SimGameState
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 5 (System.Boolean)
L_0007: ldarg.1
L_0008: brtrue Label1
L_000d: ldc.i4.0
L_000e: br Label9
L_0013: Label1
L_0013: ldarg.1
L_0014: castclass BattleTech.MechComponentDef
L_0019: stloc.0
L_001a: ldarg.0
L_001b: ldfld BattleTech.UI.TMProWrapper.LocalizableText manufacturerText
L_0020: ldloc.0
L_0021: callvirt BattleTech.DescriptionDef get_Description()
L_0026: callvirt System.String get_Manufacturer()
L_002b: call System.Object[] Empty[Object]()
L_0030: callvirt Void SetText(System.String, System.Object[])
L_0035: ldarg.0
L_0036: ldfld BattleTech.UI.TMProWrapper.LocalizableText nameText
L_003b: ldloc.0
L_003c: callvirt BattleTech.DescriptionDef get_Description()
L_0041: callvirt System.String get_UIName()
L_0046: call System.Object[] Empty[Object]()
L_004b: callvirt Void SetText(System.String, System.Object[])
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.TMProWrapper.LocalizableText modelText
L_0056: ldloc.0
L_0057: callvirt BattleTech.DescriptionDef get_Description()
L_005c: callvirt System.String get_Model()
L_0061: call System.Object[] Empty[Object]()
L_0066: callvirt Void SetText(System.String, System.Object[])
L_006b: ldarg.0
L_006c: ldfld BattleTech.UI.TMProWrapper.LocalizableText tonnageText
L_0071: ldloc.0
L_0072: callvirt Single get_Tonnage()
L_0077: stloc.2
L_0078: ldloca.s 2 (System.Single)
L_007a: call System.String ToString()
L_007f: call System.Object[] Empty[Object]()
L_0084: callvirt Void SetText(System.String, System.Object[])
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.TMProWrapper.LocalizableText slotsText
L_008f: ldloc.0
L_0090: callvirt Int32 get_InventorySize()
L_0095: stloc.3
L_0096: ldloca.s 3 (System.Int32)
L_0098: call System.String ToString()
L_009d: call System.Object[] Empty[Object]()
L_00a2: callvirt Void SetText(System.String, System.Object[])
L_00a7: ldarg.0
L_00a8: ldfld BattleTech.UI.TMProWrapper.LocalizableText valueText
L_00ad: ldloc.0
L_00ae: callvirt BattleTech.DescriptionDef get_Description()
L_00b3: callvirt Int32 get_Cost()
L_00b8: call System.String GetCBillString(Int32)
L_00bd: call System.Object[] Empty[Object]()
L_00c2: callvirt Void SetText(System.String, System.Object[])
L_00c7: ldloc.0
L_00c8: callvirt System.String get_BonusValueA()
L_00cd: call Boolean IsNullOrEmpty(System.String)
L_00d2: brfalse Label2
L_00d7: ldloc.0
L_00d8: callvirt System.String get_BonusValueB()
L_00dd: call Boolean IsNullOrEmpty(System.String)
L_00e2: brfalse Label3
L_00e7: ldarg.0
L_00e8: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusesText
L_00ed: ldstr "-"
L_00f2: call System.Object[] Empty[Object]()
L_00f7: callvirt Void SetText(System.String, System.Object[])
L_00fc: br Label4
L_0101: Label2
L_0101: Label3
L_0101: ldarg.0
L_0102: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusesText
L_0107: ldstr "{0} {1}"
L_010c: ldc.i4.2
L_010d: newarr System.Object
L_0112: dup
L_0113: ldc.i4.0
L_0114: ldloc.0
L_0115: callvirt System.String get_BonusValueA()
L_011a: stelem.ref
L_011b: dup
L_011c: ldc.i4.1
L_011d: ldloc.0
L_011e: callvirt System.String get_BonusValueB()
L_0123: stelem.ref
L_0124: callvirt Void SetText(System.String, System.Object[])
L_0129: Label4
L_0129: ldarg.0
L_012a: ldfld BattleTech.UI.TMProWrapper.LocalizableText detailText
L_012f: ldloc.0
L_0130: callvirt BattleTech.DescriptionDef get_Description()
L_0135: callvirt System.String get_Details()
L_013a: call System.Object[] Empty[Object]()
L_013f: callvirt Void SetText(System.String, System.Object[])
L_0144: ldarg.0
L_0145: ldfld BattleTech.UI.TMProWrapper.LocalizableText detailText
L_014a: callvirt Void SetAllDirty()
L_014f: call BattleTech.GameInstance get_BattleTechGame()
L_0154: callvirt BattleTech.SimGameState get_Simulation()
L_0159: stloc.1
L_015a: ldloc.1
L_015b: brfalse Label5
L_0160: ldloc.1
L_0161: ldloc.0
L_0162: callvirt BattleTech.DescriptionDef get_Description()
L_0167: callvirt System.String get_Id()
L_016c: ldarg.0
L_016d: ldloc.0
L_016e: call System.String GetComponentType(BattleTech.MechComponentDef)
L_0173: ldc.i4.1
L_0174: callvirt Int32 GetItemCount(System.String, System.String, ItemCountType)
L_0179: stloc.s 4 (System.Int32)
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.TMProWrapper.LocalizableText quantity
L_0181: ldloca.s 4 (System.Int32)
L_0183: call System.String ToString()
L_0188: call System.Object[] Empty[Object]()
L_018d: callvirt Void SetText(System.String, System.Object[])
L_0192: br Label6
L_0197: Label5
L_0197: ldarg.0
L_0198: ldfld BattleTech.UI.TMProWrapper.LocalizableText quantity
L_019d: ldstr "INFINITE"
L_01a2: call System.Object[] Empty[Object]()
L_01a7: callvirt Void SetText(System.String, System.Object[])
L_01ac: Label6
L_01ac: ldarg.0
L_01ad: ldfld UnityEngine.UI.Image PNGImage
L_01b2: ldnull
L_01b3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01b8: brfalse Label7
L_01bd: ldarg.0
L_01be: ldfld UnityEngine.UI.Image PNGImage
L_01c3: ldc.i4.0
L_01c4: callvirt Void set_enabled(Boolean)
L_01c9: Label7
L_01c9: ldarg.0
L_01ca: ldfld SVGImporter.SVGImage SVGImage
L_01cf: ldnull
L_01d0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01d5: brfalse Label8
L_01da: ldarg.0
L_01db: ldfld SVGImporter.SVGImage SVGImage
L_01e0: call BattleTech.GameInstance get_BattleTechGame()
L_01e5: callvirt BattleTech.Data.DataManager get_DataManager()
L_01ea: callvirt BattleTech.Data.SVGCache get_SVGCache()
L_01ef: ldloc.0
L_01f0: callvirt BattleTech.DescriptionDef get_Description()
L_01f5: callvirt System.String get_Icon()
L_01fa: callvirt SVGImporter.SVGAsset GetAsset(System.String)
L_01ff: callvirt Void set_vectorGraphics(SVGImporter.SVGAsset)
L_0204: Label8
L_0204: ldc.i4.1
L_0205: Label9
L_0205: stloc 5 (System.Boolean)
L_0207: ldarg.0
L_0208: ldarg 1
L_020e: call Void Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment, System.Object)
L_0213: ldloc 5 (System.Boolean)
L_0215: ret
DONE

### Harmony id=MechEngineer.Features.DynamicSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.DynamicSlots.DynamicSlotsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.19
### Patch BattleTech.UI.MechLabPanel, Boolean ValidateLoadout(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 9 (System.Boolean)
L_0007: ldarg.0
L_0008: call Boolean get_Initialized()
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label7
L_0018: Label1
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldstr ""
L_001f: ldstr ""
L_0024: call BattleTech.MechDef CreateMechDef(System.String, System.String)
L_0029: stfld BattleTech.MechDef activeMechDef
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0034: ldc.i4.0
L_0035: callvirt Void RefreshInfo(Boolean)
L_003a: ldarg.0
L_003b: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0040: ldarg.0
L_0041: ldfld BattleTech.MechDef activeMechDef
L_0046: callvirt Void SetData(BattleTech.MechDef)
L_004b: ldarg.0
L_004c: ldc.i4.3
L_004d: ldarg.0
L_004e: ldfld BattleTech.Data.DataManager dataManager
L_0053: ldarg.0
L_0054: ldfld BattleTech.MechDef activeMechDef
L_0059: ldarg.0
L_005a: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_005f: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0064: stfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0069: ldarg.0
L_006a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_006f: newobj Void .ctor()
L_0074: dup
L_0075: ldc.i4.0
L_0076: callvirt Void Add(BattleTech.MechValidationType)
L_007b: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0080: stloc.0
L_0081: ldarg.0
L_0082: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0087: newobj Void .ctor()
L_008c: dup
L_008d: ldc.i4.2
L_008e: callvirt Void Add(BattleTech.MechValidationType)
L_0093: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0098: stloc.1
L_0099: ldarg.0
L_009a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_009f: newobj Void .ctor()
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: callvirt Void Add(BattleTech.MechValidationType)
L_00ab: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00b7: newobj Void .ctor()
L_00bc: dup
L_00bd: ldc.i4.4
L_00be: callvirt Void Add(BattleTech.MechValidationType)
L_00c3: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00c8: stloc.3
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00cf: newobj Void .ctor()
L_00d4: dup
L_00d5: ldc.i4.5
L_00d6: callvirt Void Add(BattleTech.MechValidationType)
L_00db: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00e0: stloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00e8: newobj Void .ctor()
L_00ed: dup
L_00ee: ldc.i4.6
L_00ef: callvirt Void Add(BattleTech.MechValidationType)
L_00f4: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00f9: stloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_00fb: ldarg.0
L_00fc: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0101: newobj Void .ctor()
L_0106: dup
L_0107: ldc.i4.8
L_0108: callvirt Void Add(BattleTech.MechValidationType)
L_010d: dup
L_010e: ldc.i4.s 9
L_0110: callvirt Void Add(BattleTech.MechValidationType)
L_0115: dup
L_0116: ldc.i4.7
L_0117: callvirt Void Add(BattleTech.MechValidationType)
L_011c: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0121: stloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_0123: ldarg.0
L_0124: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0129: newobj Void .ctor()
L_012e: dup
L_012f: ldc.i4.s 10
L_0131: callvirt Void Add(BattleTech.MechValidationType)
L_0136: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_013b: stloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_013d: ldarg.0
L_013e: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0143: newobj Void .ctor()
L_0148: dup
L_0149: ldc.i4.s 11
L_014b: callvirt Void Add(BattleTech.MechValidationType)
L_0150: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0155: stloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_0157: ldarg.0
L_0158: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_015d: ldloc.0
L_015e: callvirt Void ToggleGenericAlert(System.Collections.Generic.List`1[Localize.Text])
L_0163: ldarg.0
L_0164: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0169: ldloc.1
L_016a: callvirt Void ToggleOverweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0175: ldloc.2
L_0176: callvirt Void ToggleUnderweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0181: ldloc.3
L_0182: callvirt Void ToggleMissingWeaponAlert(System.Collections.Generic.List`1[Localize.Text])
L_0187: ldarg.0
L_0188: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_018d: ldloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_018f: callvirt Void ToggleNoAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_0194: ldarg.0
L_0195: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_019a: ldloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_019c: callvirt Void ToggleUnneededAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_01a1: ldarg.0
L_01a2: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01a7: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01a9: callvirt Void ToggleInventoryAlert(System.Collections.Generic.List`1[Localize.Text])
L_01ae: ldarg.0
L_01af: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01b4: ldloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_01b6: callvirt Void ToggleDamagedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01bb: ldarg.0
L_01bc: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01c1: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01c3: callvirt Void ToggleDestroyedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01c8: ldloc.0
L_01c9: callvirt Int32 get_Count()
L_01ce: ldc.i4.0
L_01cf: bgt Label2
L_01d4: ldloc.1
L_01d5: callvirt Int32 get_Count()
L_01da: ldc.i4.0
L_01db: bgt Label3
L_01e0: ldloc.3
L_01e1: callvirt Int32 get_Count()
L_01e6: ldc.i4.0
L_01e7: bgt Label4
L_01ec: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01ee: callvirt Int32 get_Count()
L_01f3: ldc.i4.0
L_01f4: bgt Label5
L_01f9: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01fb: callvirt Int32 get_Count()
L_0200: ldc.i4.0
L_0201: cgt
L_0203: br Label6
L_0208: Label2
L_0208: Label3
L_0208: Label4
L_0208: Label5
L_0208: ldc.i4.1
L_0209: Label6
L_0209: ldc.i4.0
L_020a: ceq
L_020c: Label7
L_020c: stloc 9 (System.Boolean)
L_020e: ldarg.0
L_020f: call Void Postfix(BattleTech.UI.MechLabPanel)
L_0214: ldarg.0
L_0215: call Void Postfix(BattleTech.UI.MechLabPanel)
L_021a: ldloc 9 (System.Boolean)
L_021c: ret
DONE

### Harmony id=MechEngineer.Features.ShutdownInjuryProtection, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ShutdownInjuryProtection.ShutdownInjuryProtectionSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.19
### Patch BattleTech.Pilot, System.String get_InjuryReasonDescription()
L_0000: Local var 0: BattleTech.InjuryReason
L_0000: Local var 1: System.String
L_0000: ldnull
L_0001: stloc 1 (System.String)
L_0002: ldarg.0
L_0003: ldfld BattleTech.InjuryReason injuryReason
L_0008: stloc.0
L_0009: ldloc.0
L_000a: ldc.i4.1
L_000b: sub
L_000c: switch Labels1,2,3,4,5
L_0025: br Label6
L_002a: Label1
L_002a: ldstr "MECH DESTROYED"
L_002f: call System.String T(System.String)
L_0034: br Label7
L_0039: Label3
L_0039: ldstr "AMMO EXPLOSION"
L_003e: call System.String T(System.String)
L_0043: br Label8
L_0048: Label2
L_0048: ldstr "HEAD HIT"
L_004d: call System.String T(System.String)
L_0052: br Label9
L_0057: Label4
L_0057: ldstr "KNOCKDOWN"
L_005c: call System.String T(System.String)
L_0061: br Label10
L_0066: Label5
L_0066: ldstr "SIDE TORSO DESTROYED"
L_006b: call System.String T(System.String)
L_0070: br Label11
L_0075: Label6
L_0075: ldstr "ERROR - NOT SET"
L_007a: Label7
L_007a: Label8
L_007a: Label9
L_007a: Label10
L_007a: Label11
L_007a: stloc 1 (System.String)
L_007b: ldarg.0
L_007c: ldloca 1 (System.String)
L_007e: call Void Postfix(BattleTech.Pilot, System.String ByRef)
L_0083: ldloc 1 (System.String)
L_0084: ret
DONE

### Patch BattleTech.Mech, Void CheckForHeatDamage(Int32, System.String)
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Boolean get_IsOverheated()
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: call BattleTech.CombatGameState get_Combat()
L_0017: callvirt MessageCenter get_MessageCenter()
L_001c: ldarg.0
L_001d: ldstr "HEAT CRITICAL"
L_0022: call System.Object[] Empty[Object]()
L_0027: newobj Void .ctor(String, Object[])
L_002c: ldc.i4.2
L_002d: ldc.i4.1
L_002e: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_0033: newobj Void .ctor(IStackSequence)
L_0038: callvirt Void PublishMessage(MessageCenterMessage)
L_003d: ldarg.0
L_003e: call Single DamageFromOverheat()
L_0043: stloc.0
L_0044: ldloc.0
L_0045: ldc.r4 0.01
L_004a: ble.un Label2
L_004f: ldarg.0
L_0050: call BattleTech.CombatGameState get_Combat()
L_0055: callvirt MessageCenter get_MessageCenter()
L_005a: ldarg.0
L_005b: ldstr "STRUCTURE DAMAGED"
L_0060: ldc.i4.2
L_0061: ldc.i4.1
L_0062: newobj Void .ctor(ICombatant, String, MessageNature, Boolean)
L_0067: newobj Void .ctor(IStackSequence)
L_006c: callvirt Void PublishMessage(MessageCenterMessage)
L_0071: ldarg.0
L_0072: call BattleTech.CombatGameState get_Combat()
L_0077: callvirt MessageCenter get_MessageCenter()
L_007c: ldarg.0
L_007d: newobj Void .ctor(Mech)
L_0082: callvirt Void PublishMessage(MessageCenterMessage)
L_0087: ldsfld HBS.Logging.ILog heatLogger
L_008c: callvirt Boolean get_IsLogEnabled()
L_0091: brfalse Label3
L_0096: ldsfld HBS.Logging.ILog heatLogger
L_009b: ldstr "Mech {0} receives {1} point{2} structure damage to each location from excessive heat"
L_00a0: ldarg.0
L_00a1: call System.String get_DisplayName()
L_00a6: ldloc.0
L_00a7: box System.Single
L_00ac: ldloc.0
L_00ad: ldc.r4 1.01
L_00b2: bgt Label4
L_00b7: ldstr ""
L_00bc: br Label5
L_00c1: Label4
L_00c1: ldstr "s"
L_00c6: Label5
L_00c6: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_00cb: callvirt Void Log(System.Object)
L_00d0: Label3
L_00d0: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_00d2: ldarg.1
L_00d3: ldc.i4.m1
L_00d4: ldc.i4.m1
L_00d5: ldc.i4.m1
L_00d6: ldstr ""
L_00db: ldstr ""
L_00e0: ldc.i4.m1
L_00e1: ldnull
L_00e2: ldnull
L_00e3: ldnull
L_00e4: ldnull
L_00e5: ldnull
L_00e6: ldnull
L_00e7: ldnull
L_00e8: ldc.i4.1
L_00e9: newarr BattleTech.AttackDirection
L_00ee: dup
L_00ef: ldc.i4.0
L_00f0: ldc.i4.1
L_00f1: stelem.i4
L_00f2: ldnull
L_00f3: ldnull
L_00f4: ldnull
L_00f5: call Void .ctor(Int32, Int32, Int32, Int32, String, String, Int32, Single[], Single[], Single[], Boolean[], Int32[], Int32[], AttackImpactQuality[], AttackDirection[], Vector3[], String[], Int32[])
L_00fa: ldarg.0
L_00fb: ldc.i4.2
L_00fc: ldloc.1
L_00fd: ldloc.0
L_00fe: ldarg.2
L_00ff: ldarg.0
L_0100: call System.String get_GUID()
L_0105: call Boolean op_Equality(System.String, System.String)
L_010a: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_010f: ldarg.0
L_0110: ldc.i4.4
L_0111: ldloc.1
L_0112: ldloc.0
L_0113: ldarg.2
L_0114: ldarg.0
L_0115: call System.String get_GUID()
L_011a: call Boolean op_Equality(System.String, System.String)
L_011f: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0124: ldarg.0
L_0125: ldc.i4.8
L_0126: ldloc.1
L_0127: ldloc.0
L_0128: ldarg.2
L_0129: ldarg.0
L_012a: call System.String get_GUID()
L_012f: call Boolean op_Equality(System.String, System.String)
L_0134: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0139: ldarg.0
L_013a: ldc.i4.s 16
L_013c: ldloc.1
L_013d: ldloc.0
L_013e: ldarg.2
L_013f: ldarg.0
L_0140: call System.String get_GUID()
L_0145: call Boolean op_Equality(System.String, System.String)
L_014a: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_014f: ldarg.0
L_0150: ldc.i4.s 32
L_0152: ldloc.1
L_0153: ldloc.0
L_0154: ldarg.2
L_0155: ldarg.0
L_0156: call System.String get_GUID()
L_015b: call Boolean op_Equality(System.String, System.String)
L_0160: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0165: ldarg.0
L_0166: ldc.i4.s 64
L_0168: ldloc.1
L_0169: ldloc.0
L_016a: ldarg.2
L_016b: ldarg.0
L_016c: call System.String get_GUID()
L_0171: call Boolean op_Equality(System.String, System.String)
L_0176: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_017b: ldarg.0
L_017c: ldc.i4 128
L_0181: ldloc.1
L_0182: ldloc.0
L_0183: ldarg.2
L_0184: ldarg.0
L_0185: call System.String get_GUID()
L_018a: call Boolean op_Equality(System.String, System.String)
L_018f: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0194: br Label6
L_0199: Label2
L_0199: ldsfld HBS.Logging.ILog heatLogger
L_019e: ldstr "Mech {0} avoids structure damage from excessive heat"
L_01a3: ldarg.0
L_01a4: call System.String get_DisplayName()
L_01a9: call System.String Format(System.String, System.Object)
L_01ae: callvirt Void Log(System.Object)
L_01b3: Label6
L_01b3: ldarg.0
L_01b4: ldarg.2
L_01b5: callvirt Void HandleDeath(System.String)
L_01ba: ldarg.0
L_01bb: callvirt Boolean get_IsDead()
L_01c0: brtrue Label7
L_01c5: ldarg.0
L_01c6: ldarg.1
L_01c7: ldarg.2
L_01c8: call UnityEngine.Vector2 get_one()
L_01cd: ldnull
L_01ce: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_01d3: Label1
L_01d3: Label7
L_01d3: ret
DONE

### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void Prefix(BattleTech.Mech)
L_000c: ldarg.0
L_000d: call Void Prefix(BattleTech.Mech)
L_0012: ldarg.0
L_0013: call Void InitEffectStats()
L_0018: ldarg.0
L_0019: call Void Postfix(BattleTech.Mech)
L_001e: ret
DONE

### Patch BattleTech.MechShutdownSequence, Void CheckForHeatDamage()
L_0000: Local var 0: BattleTech.DamageType
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechShutdownSequence)
L_0006: ldarg.0
L_0007: call BattleTech.CombatGameState get_Combat()
L_000c: callvirt BattleTech.CombatGameConstants get_Constants()
L_0011: call BattleTech.HeatConstantsDef OverrideHeat(BattleTech.CombatGameConstants)
L_0016: ldfld System.Boolean ShutdownCausesInjury
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.String instigatorGUID
L_0026: ldarg.0
L_0027: call BattleTech.Mech get_OwningMech()
L_002c: callvirt System.String get_GUID()
L_0031: call Boolean op_Equality(System.String, System.String)
L_0036: brtrue Label2
L_003b: ldc.i4.7
L_003c: br Label3
L_0041: Label2
L_0041: ldc.i4.8
L_0042: Label3
L_0042: stloc.0
L_0043: ldarg.0
L_0044: call BattleTech.CombatGameState get_Combat()
L_0049: ldarg.0
L_004a: ldfld System.String instigatorGUID
L_004f: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0054: stloc.1
L_0055: ldarg.0
L_0056: call BattleTech.Mech get_OwningMech()
L_005b: callvirt BattleTech.Pilot get_pilot()
L_0060: ldarg.0
L_0061: call Int32 get_SequenceGUID()
L_0066: stloc.2
L_0067: ldloca.s 2 (System.Int32)
L_0069: call System.String ToString()
L_006e: ldarg.0
L_006f: call Int32 get_RootSequenceGUID()
L_0074: ldc.i4.1
L_0075: ldloc.0
L_0076: ldnull
L_0077: ldloc.1
L_0078: callvirt Void InjurePilot(System.String, Int32, Int32, BattleTech.DamageType, BattleTech.Weapon, BattleTech.AbstractActor)
L_007d: ldarg.0
L_007e: call BattleTech.Mech get_OwningMech()
L_0083: callvirt BattleTech.Pilot get_pilot()
L_0088: callvirt Boolean get_IsIncapacitated()
L_008d: brtrue Label4
L_0092: ldc.i4.0
L_0093: ldarg.0
L_0094: call BattleTech.Mech get_OwningMech()
L_0099: call Void SetPilotVOSwitch[AudioSwitch_dialog_dark_light](AudioSwitch_dialog_dark_light, BattleTech.AbstractActor)
L_009e: ldc.i4.s 87
L_00a0: ldarg.0
L_00a1: call BattleTech.Mech get_OwningMech()
L_00a6: ldnull
L_00a7: ldnull
L_00a8: ldc.i4.1
L_00a9: call Boolean PlayPilotVO(BattleTech.VOEvents, BattleTech.AbstractActor, EventCallback, System.Object, Boolean)
L_00ae: pop
L_00af: ldarg.0
L_00b0: call BattleTech.Mech get_OwningMech()
L_00b5: callvirt BattleTech.Team get_team()
L_00ba: callvirt Boolean get_LocalPlayerControlsTeam()
L_00bf: brfalse Label5
L_00c4: ldstr "audioeventdef_musictriggers_combat"
L_00c9: ldstr "friendly_warrior_injured"
L_00ce: ldnull
L_00cf: ldnull
L_00d0: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_00d5: pop
L_00d6: Label1
L_00d6: Label4
L_00d6: Label5
L_00d6: call Void Postfix()
L_00db: ret
DONE

### Harmony id=MechEngineer.Features.NewSaveFolder, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.NewSaveFolder.NewSaveFolderSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.19
### Patch BattleTech.Save.CachedSettings, Void ClearCachedSettings()
L_0000: ldstr "CachedSettings"
L_0005: call Void DeleteKey(System.String)
L_000a: ret
DONE

### Patch BattleTech.Save.CachedSettings, BattleTech.Save.UserSettings get_Settings()
L_0000: Local var 0: System.String
L_0000: Local var 1: BattleTech.Save.CloudUserSettings
L_0000: Local var 2: BattleTech.Save.LocalUserSettings
L_0000: Local var 3: BattleTech.Save.UserSettings
L_0000: ldstr "CachedSettings"
L_0005: call Boolean HasKey(System.String)
L_000a: brfalse Label1
L_000f: ldstr "CachedSettings"
L_0014: ldstr ""
L_0019: call System.String GetString(System.String, System.String)
L_001e: stloc.0
L_001f: ldloc.0
L_0020: call Boolean IsNullOrEmpty(System.String)
L_0025: brtrue Label2
.try
{
	L_002a: ldloc.0
	L_002b: ldc.i4.1
	L_002c: newarr System.String
	L_0031: dup
	L_0032: ldc.i4.0
	L_0033: ldstr "<LOCAL>"
	L_0038: stelem.ref
	L_0039: ldc.i4.1
	L_003a: callvirt System.String[] Split(System.String[], System.StringSplitOptions)
	L_003f: dup
	L_0040: ldc.i4.0
	L_0041: ldelem.ref
	L_0042: call Byte[] FromBase64String(System.String)
	L_0047: ldc.i4.6
	L_0048: ldc.i4.2
	L_0049: ldnull
	L_004a: call BattleTech.Save.CloudUserSettings Deserialize[CloudUserSettings](Byte[], BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation, System.Object)
	L_004f: stloc.1
	L_0050: ldc.i4.1
	L_0051: ldelem.ref
	L_0052: call Byte[] FromBase64String(System.String)
	L_0057: ldc.i4.6
	L_0058: ldc.i4.2
	L_0059: ldnull
	L_005a: call BattleTech.Save.LocalUserSettings Deserialize[LocalUserSettings](Byte[], BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation, System.Object)
	L_005f: stloc.2
	L_0060: newobj Void .ctor()
	L_0065: dup
	L_0066: ldloc.1
	L_0067: callvirt Void set_CloudSettings(BattleTech.Save.CloudUserSettings)
	L_006c: dup
	L_006d: ldloc.2
	L_006e: callvirt Void set_LocalSettings(BattleTech.Save.LocalUserSettings)
	L_0073: stloc.3
	L_0074: leave Label3
	L_0079: leave (autogenerated)
} // end try
.catch System.Object
{
	L_007e: pop
	L_007f: ldstr "CachedSettings"
	L_0084: call Void DeleteKey(System.String)
	L_0089: leave Label4
	L_008e: leave (autogenerated)
} // end handler
L_0093: Label1
L_0093: Label2
L_0093: Label4
L_0093: newobj Void .ctor()
L_0098: dup
L_0099: call Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_009e: br Label6
L_00a3: Label3
L_00a3: ldloc.3
L_00a4: Label6
L_00a4: ret
DONE

### Patch BattleTech.Save.CachedSettings, Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.String
L_0000: Local var 3: System.Exception
.try
{
	L_0000: ldarg.0
	L_0001: callvirt BattleTech.Save.LocalUserSettings get_LocalSettings()
	L_0006: ldc.i4.6
	L_0007: ldc.i4.2
	L_0008: call Byte[] Serialize[LocalUserSettings](BattleTech.Save.LocalUserSettings, BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation)
	L_000d: call System.String ToBase64String(Byte[])
	L_0012: stloc.0
	L_0013: ldarg.0
	L_0014: callvirt BattleTech.Save.CloudUserSettings get_CloudSettings()
	L_0019: ldc.i4.6
	L_001a: ldc.i4.2
	L_001b: call Byte[] Serialize[CloudUserSettings](BattleTech.Save.CloudUserSettings, BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation)
	L_0020: call System.String ToBase64String(Byte[])
	L_0025: stloc.1
	L_0026: ldstr "{0}<LOCAL>{1}"
	L_002b: ldloc.1
	L_002c: ldloc.0
	L_002d: call System.String Format(System.String, System.Object, System.Object)
	L_0032: stloc.2
	L_0033: ldstr "CachedSettings"
	L_0038: ldloc.2
	L_0039: call Void SetString(System.String, System.String)
	L_003e: leave Label1
	L_0043: leave (autogenerated)
} // end try
.catch System.Exception
{
	L_0048: stloc.3
	L_0049: ldsfld HBS.Logging.ILog logger
	L_004e: ldstr "Could not set LocalSettings to PlayerPrefs "
	L_0053: ldloc.3
	L_0054: callvirt System.String get_Message()
	L_0059: call System.String Concat(System.String, System.String)
	L_005e: callvirt Void LogError(System.Object)
	L_0063: leave Label2
	L_0068: leave (autogenerated)
} // end handler
L_006d: Label1
L_006d: Label2
L_006d: ret
DONE

### Patch BattleTech.Save.CachedSettings, Void set_Settings(BattleTech.Save.UserSettings)
L_0000: ldarg.0
L_0001: call Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_0006: ret
DONE

### Patch BattleTech.Save.Core.WriteLocation, Void .ctor(String, Boolean)
L_0000: ldarga 1
L_0006: ldarga 2
L_000c: call Void Prefix(System.String ByRef, Boolean ByRef)
L_0011: ldarg.0
L_0012: ldc.i4.2
L_0013: newarr System.Char
L_0018: dup
L_0019: ldc.i4.0
L_001a: ldc.i4.s 92
L_001c: stelem.i2
L_001d: dup
L_001e: ldc.i4.1
L_001f: ldc.i4.s 47
L_0021: stelem.i2
L_0022: stfld System.Char[] trimCharacters
L_0027: ldarg.0
L_0028: call Void .ctor()
L_002d: ldarg.0
L_002e: ldarg.1
L_002f: stfld System.String rootPath
L_0034: ldarg.0
L_0035: ldarg.2
L_0036: stfld System.Boolean usePlatform
L_003b: ldarg.2
L_003c: brtrue Label1
L_0041: ldarg.0
L_0042: newobj Void .ctor()
L_0047: stfld BattleTech.Save.Core.FileOperations fileOperations
L_004c: br Label2
L_0051: Label1
L_0051: ldarg.0
L_0052: newobj Void .ctor()
L_0057: stfld BattleTech.Save.Core.FileOperations fileOperations
L_005c: Label2
L_005c: ret
DONE

### Harmony id=MechEngineer.Features.MechLabSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.MechLabSlots.MechLabSlotsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.19
### Patch BattleTech.UI.MechLabItemSlotElement, Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabItemSlotElement)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call BattleTech.UI.IMechLabDropTarget get_DropParent()
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: callvirt Void OnItemHoverEnter(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0018: Label0
L_0018: ret
DONE

### Patch BattleTech.UI.MechLabItemSlotElement, Void OnPointerExit(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabItemSlotElement)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call BattleTech.UI.IMechLabDropTarget get_DropParent()
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: callvirt Void OnItemHoverExit(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0018: Label0
L_0018: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: ldarg.0
L_0008: callvirt Void set_DropParent(BattleTech.UI.IMechLabDropTarget)
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0013: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0018: ldarg.1
L_0019: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001e: callvirt Void Add(BattleTech.MechComponentRef)
L_0023: ldarg.1
L_0024: isinst BattleTech.UI.MechLabItemSlotElement
L_0029: stloc.0
L_002a: ldloc.0
L_002b: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0030: ldc.i4.1
L_0031: callvirt Void set_blocksRaycasts(Boolean)
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_003c: ldloc.0
L_003d: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: ldfld System.Int32 usedSlots
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt Int32 get_InventorySize()
L_0059: add
L_005a: stfld System.Int32 usedSlots
L_005f: ldloc.0
L_0060: callvirt UnityEngine.GameObject get_gameObject()
L_0065: callvirt UnityEngine.Transform get_transform()
L_006a: ldarg.0
L_006b: ldfld UnityEngine.Transform inventoryParent
L_0070: ldc.i4.0
L_0071: call Void SetParent(UnityEngine.Transform, UnityEngine.Transform, Boolean)
L_0076: ldloc.0
L_0077: callvirt UnityEngine.GameObject get_gameObject()
L_007c: callvirt UnityEngine.Transform get_transform()
L_0081: call UnityEngine.Vector3 get_one()
L_0086: callvirt Void set_localScale(UnityEngine.Vector3)
L_008b: ldarg.0
L_008c: ldloc.0
L_008d: ldc.i4.0
L_008e: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0093: ldarg.0
L_0094: ldfld BattleTech.UI.MechLabPanel mechLab
L_0099: callvirt Void FlagAsModified()
L_009e: ldc.i4.1
L_009f: stloc 1 (System.Boolean)
L_00a0: ldarg 1
L_00a6: ldarg.0
L_00a7: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00ac: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_00b1: ldloc 1 (System.Boolean)
L_00b2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: ldc.i4.m1
L_0014: call Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0019: Label0
L_0019: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void SetData(BattleTech.LocationLoadoutDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.LocationLoadoutDef loadout
L_0007: ldarg.0
L_0008: call Void ClearInventory()
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0014: ldfld BattleTech.MechDef activeMechDef
L_0019: callvirt BattleTech.ChassisDef get_Chassis()
L_001e: ldarg.1
L_001f: ldfld BattleTech.ChassisLocations Location
L_0024: callvirt BattleTech.LocationDef GetLocationDef(BattleTech.ChassisLocations)
L_0029: stfld BattleTech.LocationDef chassisLocationDef
L_002e: ldarg.0
L_002f: ldarg.1
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: ldc.i4.8
L_0036: beq Label1
L_003b: ldarg.1
L_003c: ldfld BattleTech.ChassisLocations Location
L_0041: ldc.i4.4
L_0042: beq Label2
L_0047: ldarg.1
L_0048: ldfld BattleTech.ChassisLocations Location
L_004d: ldc.i4.s 16
L_004f: ceq
L_0051: br Label3
L_0056: Label1
L_0056: Label2
L_0056: ldc.i4.1
L_0057: Label3
L_0057: stfld System.Boolean useRearArmor
L_005c: ldarg.0
L_005d: ldarg.0
L_005e: ldflda BattleTech.LocationDef chassisLocationDef
L_0063: ldfld System.Int32 InventorySlots
L_0068: stfld System.Int32 maxSlots
L_006d: ldarg.0
L_006e: ldarg.0
L_006f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0074: ldfld BattleTech.MechDef originalMechDef
L_0079: ldarg.1
L_007a: ldfld BattleTech.ChassisLocations Location
L_007f: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0084: ldfld System.Single AssignedArmor
L_0089: stfld System.Single originalArmor
L_008e: ldarg.0
L_008f: ldarg.0
L_0090: ldfld System.Single originalArmor
L_0095: stfld System.Single currentArmor
L_009a: ldarg.0
L_009b: ldarg.0
L_009c: ldflda BattleTech.LocationDef chassisLocationDef
L_00a1: ldfld System.Single MaxArmor
L_00a6: stfld System.Single maxArmor
L_00ab: ldarg.0
L_00ac: ldc.r4 0
L_00b1: stfld System.Single maxRearArmor
L_00b6: ldarg.0
L_00b7: ldc.r4 0
L_00bc: stfld System.Single originalRearArmor
L_00c1: ldarg.0
L_00c2: ldc.r4 0
L_00c7: stfld System.Single currentRearArmor
L_00cc: ldarg.0
L_00cd: ldfld System.Boolean useRearArmor
L_00d2: brfalse Label4
L_00d7: ldarg.0
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.MechLabPanel mechLab
L_00de: ldfld BattleTech.MechDef originalMechDef
L_00e3: ldarg.1
L_00e4: ldfld BattleTech.ChassisLocations Location
L_00e9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ee: ldfld System.Single AssignedRearArmor
L_00f3: stfld System.Single originalRearArmor
L_00f8: ldarg.0
L_00f9: ldarg.0
L_00fa: ldfld System.Single originalRearArmor
L_00ff: stfld System.Single currentRearArmor
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: ldflda BattleTech.LocationDef chassisLocationDef
L_010b: ldfld System.Single MaxRearArmor
L_0110: stfld System.Single maxRearArmor
L_0115: Label4
L_0115: ldarg.0
L_0116: ldc.i4.0
L_0117: stfld System.Int32 usedSlots
L_011c: ldarg.0
L_011d: ldc.i4.0
L_011e: stfld System.Int32 currentBallisticCount
L_0123: ldarg.0
L_0124: ldc.i4.0
L_0125: stfld System.Int32 currentEnergyCount
L_012a: ldarg.0
L_012b: ldc.i4.0
L_012c: stfld System.Int32 currentMissileCount
L_0131: ldarg.0
L_0132: ldc.i4.0
L_0133: stfld System.Int32 currentSmallCount
L_0138: ldarg.0
L_0139: ldc.i4.0
L_013a: stfld System.Int32 totalBallisticHardpoints
L_013f: ldarg.0
L_0140: ldc.i4.0
L_0141: stfld System.Int32 totalEnergyHardpoints
L_0146: ldarg.0
L_0147: ldc.i4.0
L_0148: stfld System.Int32 totalMissileHardpoints
L_014d: ldarg.0
L_014e: ldc.i4.0
L_014f: stfld System.Int32 totalSmallHardpoints
L_0154: ldarg.0
L_0155: ldc.i4.0
L_0156: stfld System.Int32 currentJumpjetCount
L_015b: ldarg.0
L_015c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0161: ldfld BattleTech.MechDef activeMechDef
L_0166: ldarg.1
L_0167: ldfld BattleTech.ChassisLocations Location
L_016c: ldarg.0
L_016d: ldflda System.Int32 totalBallisticHardpoints
L_0172: ldarg.0
L_0173: ldflda System.Int32 totalEnergyHardpoints
L_0178: ldarg.0
L_0179: ldflda System.Int32 totalMissileHardpoints
L_017e: ldarg.0
L_017f: ldflda System.Int32 totalSmallHardpoints
L_0184: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0189: ldc.i4.0
L_018a: stloc.0
L_018b: br Label5
L_0190: Label8
L_0190: ldarg.0
L_0191: ldfld BattleTech.UI.MechLabPanel mechLab
L_0196: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_019b: ldloc.0
L_019c: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01a1: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a6: ldarg.1
L_01a7: ldfld BattleTech.ChassisLocations Location
L_01ac: bne.un Label6
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01bd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_01c2: ldloc.0
L_01c3: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01c8: ldc.i4.0
L_01c9: ldarg.1
L_01ca: ldfld BattleTech.ChassisLocations Location
L_01cf: ldarg.0
L_01d0: ldnull
L_01d1: callvirt BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_01d6: stloc.1
L_01d7: ldloc.1
L_01d8: ldnull
L_01d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01de: brfalse Label7
L_01e3: ldarg.0
L_01e4: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_01e9: ldloc.1
L_01ea: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_01ef: ldarg.0
L_01f0: ldarg.0
L_01f1: ldfld System.Int32 usedSlots
L_01f6: ldarg.0
L_01f7: ldfld BattleTech.UI.MechLabPanel mechLab
L_01fc: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0201: ldloc.0
L_0202: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_0207: callvirt BattleTech.MechComponentDef get_Def()
L_020c: callvirt Int32 get_InventorySize()
L_0211: add
L_0212: stfld System.Int32 usedSlots
L_0217: ldloc.1
L_0218: callvirt UnityEngine.GameObject get_gameObject()
L_021d: callvirt UnityEngine.Transform get_transform()
L_0222: ldarg.0
L_0223: ldfld UnityEngine.Transform inventoryParent
L_0228: ldc.i4.0
L_0229: call Void SetParent(UnityEngine.Transform, UnityEngine.Transform, Boolean)
L_022e: ldloc.1
L_022f: callvirt UnityEngine.GameObject get_gameObject()
L_0234: callvirt UnityEngine.Transform get_transform()
L_0239: call UnityEngine.Vector3 get_one()
L_023e: callvirt Void set_localScale(UnityEngine.Vector3)
L_0243: Label6
L_0243: Label7
L_0243: ldloc.0
L_0244: ldc.i4.1
L_0245: add
L_0246: stloc.0
L_0247: Label5
L_0247: ldloc.0
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0253: callvirt Int32 get_Count()
L_0258: blt Label8
L_025d: ldarg.0
L_025e: call Void RefreshHardpointData()
L_0263: ldarg.0
L_0264: call Void RefreshArmor()
L_0269: ldarg.0
L_026a: ldfld BattleTech.UI.TMProWrapper.LocalizableText structureText
L_026f: ldstr "{0} / {1}"
L_0274: ldc.i4.2
L_0275: newarr System.Object
L_027a: dup
L_027b: ldc.i4.0
L_027c: ldarg.1
L_027d: ldfld System.Single CurrentInternalStructure
L_0282: conv.i4
L_0283: box System.Int32
L_0288: stelem.ref
L_0289: dup
L_028a: ldc.i4.1
L_028b: ldarg.0
L_028c: ldflda BattleTech.LocationDef chassisLocationDef
L_0291: ldfld System.Single InternalStructure
L_0296: conv.i4
L_0297: box System.Int32
L_029c: stelem.ref
L_029d: callvirt Void SetText(System.String, System.Object[])
L_02a2: ldarg.1
L_02a3: ldfld System.Single CurrentInternalStructure
L_02a8: ldc.r4 0
L_02ad: bgt.un Label9
L_02b2: ldarg.0
L_02b3: ldc.i4.1
L_02b4: stfld System.Boolean needsRepair
L_02b9: ldarg.0
L_02ba: ldfld UnityEngine.GameObject destroyedOverlay
L_02bf: ldc.i4.1
L_02c0: callvirt Void SetActive(Boolean)
L_02c5: ldarg.0
L_02c6: ldfld UnityEngine.GameObject damagedOverlay
L_02cb: ldc.i4.0
L_02cc: callvirt Void SetActive(Boolean)
L_02d1: br Label11
L_02d6: Label9
L_02d6: ldarg.1
L_02d7: ldfld System.Single CurrentInternalStructure
L_02dc: ldarg.0
L_02dd: ldflda BattleTech.LocationDef chassisLocationDef
L_02e2: ldfld System.Single InternalStructure
L_02e7: bge.un Label10
L_02ec: ldarg.0
L_02ed: ldc.i4.1
L_02ee: stfld System.Boolean needsRepair
L_02f3: ldarg.0
L_02f4: ldfld UnityEngine.GameObject destroyedOverlay
L_02f9: ldc.i4.0
L_02fa: callvirt Void SetActive(Boolean)
L_02ff: ldarg.0
L_0300: ldfld UnityEngine.GameObject damagedOverlay
L_0305: ldc.i4.1
L_0306: callvirt Void SetActive(Boolean)
L_030b: br Label12
L_0310: Label10
L_0310: ldarg.0
L_0311: ldc.i4.0
L_0312: stfld System.Boolean needsRepair
L_0317: ldarg.0
L_0318: ldfld UnityEngine.GameObject damagedOverlay
L_031d: ldc.i4.0
L_031e: callvirt Void SetActive(Boolean)
L_0323: ldarg.0
L_0324: ldfld UnityEngine.GameObject destroyedOverlay
L_0329: ldc.i4.0
L_032a: callvirt Void SetActive(Boolean)
L_032f: Label11
L_032f: Label12
L_032f: ldarg.0
L_0330: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0335: call Void Postfix(System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_033a: ldarg.0
L_033b: ldarg.0
L_033c: ldfld System.Int32 maxSlots
L_0341: ldarg.0
L_0342: ldfld BattleTech.LocationLoadoutDef loadout
L_0347: call Void Postfix(BattleTech.UI.MechLabLocationWidget, Int32, BattleTech.LocationLoadoutDef)
L_034c: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.WeaponCategory
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Void Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.MechComponentRef ByRef)
L_000c: ldarg.1
L_000d: brtrue Label1
L_0012: ldarg.0
L_0013: ldc.i4.0
L_0014: ldc.i4.6
L_0015: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_001a: br Label15
L_001f: Label1
L_001f: ldarg.1
L_0020: callvirt BattleTech.MechComponentDef get_Def()
L_0025: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_002a: ldarg.0
L_002b: ldfld BattleTech.LocationLoadoutDef loadout
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: and
L_0036: ldc.i4.0
L_0037: cgt.un
L_0039: stloc.0
L_003a: ldc.i4.1
L_003b: stloc.1
L_003c: ldarg.2
L_003d: brfalse Label2
L_0042: ldarg.2
L_0043: callvirt BattleTech.WeaponCategory get_Category()
L_0048: stloc.2
L_0049: ldloc.2
L_004a: ldc.i4.1
L_004b: sub
L_004c: switch Labels3,4,5,6
L_0061: br Label7
L_0066: Label3
L_0066: ldarg.0
L_0067: ldfld System.Int32 totalBallisticHardpoints
L_006c: ldc.i4.0
L_006d: cgt
L_006f: stloc.1
L_0070: br Label8
L_0075: Label4
L_0075: ldarg.0
L_0076: ldfld System.Int32 totalEnergyHardpoints
L_007b: ldc.i4.0
L_007c: cgt
L_007e: stloc.1
L_007f: br Label9
L_0084: Label5
L_0084: ldarg.0
L_0085: ldfld System.Int32 totalMissileHardpoints
L_008a: ldc.i4.0
L_008b: cgt
L_008d: stloc.1
L_008e: br Label10
L_0093: Label6
L_0093: ldarg.0
L_0094: ldfld System.Int32 totalSmallHardpoints
L_0099: ldc.i4.0
L_009a: cgt
L_009c: stloc.1
L_009d: Label2
L_009d: Label7
L_009d: Label8
L_009d: Label9
L_009d: Label10
L_009d: ldarg.0
L_009e: ldloc.0
L_009f: ldloc.1
L_00a0: and
L_00a1: ldarg.3
L_00a2: brtrue Label11
L_00a7: ldarg.s 4
L_00a9: brtrue Label12
L_00ae: ldc.i4.s 29
L_00b0: br Label13
L_00b5: Label12
L_00b5: ldc.i4.6
L_00b6: br Label14
L_00bb: Label11
L_00bb: ldc.i4.8
L_00bc: Label13
L_00bc: Label14
L_00bc: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_00c1: Label15
L_00c1: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void InitWidgets()
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0006: ldarg.0
L_0007: callvirt Void Init(BattleTech.UI.MechLabPanel)
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0012: ldarg.0
L_0013: callvirt Void Init(BattleTech.UI.MechLabPanel)
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.MechLabDismountWidget dismountWidget
L_001e: ldarg.0
L_001f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0024: ldarg.0
L_0025: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_002a: ldarg.0
L_002b: ldarg.0
L_002c: ldfld BattleTech.Data.DataManager dataManager
L_0031: ldc.i4.1
L_0032: ldnull
L_0033: callvirt Void SetData(BattleTech.UI.IMechLabDropTarget, BattleTech.Data.DataManager, Boolean, System.Action)
L_0038: ldarg.0
L_0039: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_003e: ldarg.0
L_003f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_004a: ldarg.0
L_004b: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0056: ldarg.0
L_0057: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_005c: ldarg.0
L_005d: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0062: ldarg.0
L_0063: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_006e: ldarg.0
L_006f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0074: ldarg.0
L_0075: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_007a: ldarg.0
L_007b: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0080: ldarg.0
L_0081: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0086: ldarg.0
L_0087: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_008c: ldarg.0
L_008d: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0092: ldarg.0
L_0093: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0098: ldarg.0
L_0099: call BattleTech.UI.UIManager get_Instance()
L_009e: ldstr ""
L_00a3: ldc.i4.1
L_00a4: callvirt BattleTech.UI.SG_Shop_Screen CreateUIModule[SG_Shop_Screen](System.String, Boolean)
L_00a9: stfld BattleTech.UI.SG_Shop_Screen Shop
L_00ae: ldarg.0
L_00af: ldfld BattleTech.SimGameState sim
L_00b4: brfalse Label1
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00bf: ldarg.0
L_00c0: ldfld BattleTech.SimGameState sim
L_00c5: callvirt Void InitData(BattleTech.SimGameState)
L_00ca: ldarg.0
L_00cb: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00d0: ldc.i4.0
L_00d1: callvirt Void set_Visible(Boolean)
L_00d6: Label1
L_00d6: ldarg.0
L_00d7: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00dc: ldc.i4.0
L_00dd: callvirt Void set_Visible(Boolean)
L_00e2: ldarg.0
L_00e3: newobj Void .ctor()
L_00e8: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] PurchasedItemsFromStore
L_00ed: ldarg.0
L_00ee: newobj Void .ctor()
L_00f3: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] SoldItemsFromStore
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.SimGameState sim
L_00fe: brfalse Label2
L_0103: ldarg.0
L_0104: ldfld BattleTech.SimGameState sim
L_0109: callvirt BattleTech.StatCollection get_CompanyStats()
L_010e: ldstr "COMPANY_HasSeenTutorial_MechLab"
L_0113: callvirt Boolean GetValue[Boolean](System.String)
L_0118: brfalse Label3
L_011d: Label2
L_011d: ldarg.0
L_011e: ldfld DG.Tweening.DOTweenAnimation helpButtonAnim
L_0123: callvirt Void DOKill()
L_0128: Label3
L_0128: ldarg.0
L_0129: ldfld BattleTech.SimGameState sim
L_012e: brfalse Label4
L_0133: ldarg.0
L_0134: ldfld BattleTech.SimGameState sim
L_0139: callvirt BattleTech.StatCollection get_CompanyStats()
L_013e: ldstr "COMPANY_HasSeenECMReview_MechLab"
L_0143: callvirt Boolean GetValue[Boolean](System.String)
L_0148: brfalse Label5
L_014d: Label4
L_014d: ldarg.0
L_014e: ldfld DG.Tweening.DOTweenAnimation ECMButtonAnim
L_0153: callvirt Void DOKill()
L_0158: Label5
L_0158: ldarg.0
L_0159: call Void Postfix(BattleTech.UI.MechLabPanel)
L_015e: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void LoadMech(BattleTech.MechDef)
L_0000: ldarg.0
L_0001: call Void ClearData()
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "MechLab LoadMech received null data!"
L_0016: callvirt Void Log(System.Object)
L_001b: br Label3
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: stfld BattleTech.MechDef originalMechDef
L_0027: ldarg.0
L_0028: ldfld BattleTech.MechDef originalMechDef
L_002d: ldarg.0
L_002e: ldfld BattleTech.Data.DataManager dataManager
L_0033: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0038: ldarg.0
L_0039: ldfld BattleTech.MechDef originalMechDef
L_003e: callvirt Void Refresh()
L_0043: ldarg.1
L_0044: ldarg.0
L_0045: ldfld BattleTech.Data.DataManager dataManager
L_004a: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004f: ldarg.0
L_0050: ldarg.1
L_0051: ldnull
L_0052: ldc.i4.1
L_0053: newobj Void .ctor(MechDef, String, Boolean)
L_0058: stfld BattleTech.MechDef activeMechDef
L_005d: ldarg.0
L_005e: ldfld BattleTech.MechDef activeMechDef
L_0063: callvirt Void Refresh()
L_0068: ldarg.0
L_0069: ldarg.0
L_006a: ldfld BattleTech.MechDef activeMechDef
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: newobj Void .ctor(IEnumerable`1)
L_0079: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_007e: ldarg.0
L_007f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0084: ldarg.0
L_0085: ldfld BattleTech.MechDef activeMechDef
L_008a: ldc.i4.1
L_008b: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0090: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0095: ldarg.0
L_0096: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_009b: ldarg.0
L_009c: ldfld BattleTech.MechDef activeMechDef
L_00a1: ldc.i4.8
L_00a2: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00a7: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00ac: ldarg.0
L_00ad: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.MechDef activeMechDef
L_00b8: ldc.i4.4
L_00b9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00be: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00c9: ldarg.0
L_00ca: ldfld BattleTech.MechDef activeMechDef
L_00cf: ldc.i4.s 16
L_00d1: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00d6: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.MechDef activeMechDef
L_00e7: ldc.i4.2
L_00e8: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ed: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00f2: ldarg.0
L_00f3: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.MechDef activeMechDef
L_00fe: ldc.i4.s 32
L_0100: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0105: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_010a: ldarg.0
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldarg.0
L_0111: ldfld BattleTech.MechDef activeMechDef
L_0116: ldc.i4.s 64
L_0118: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_011d: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0122: ldarg.0
L_0123: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0128: ldarg.0
L_0129: ldfld BattleTech.MechDef activeMechDef
L_012e: ldc.i4 128
L_0133: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0138: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0143: ldarg.0
L_0144: ldfld BattleTech.MechDef activeMechDef
L_0149: callvirt Void SetData(BattleTech.MechDef)
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0154: ldarg.0
L_0155: ldfld BattleTech.MechDef activeMechDef
L_015a: callvirt BattleTech.ChassisDef get_Chassis()
L_015f: callvirt Single get_Tonnage()
L_0164: callvirt Void RefreshJumpJetOptions(Single)
L_0169: ldarg.0
L_016a: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechDef originalMechDef
L_0175: callvirt Void SetData(BattleTech.MechDef)
L_017a: ldarg.0
L_017b: ldc.i4.0
L_017c: call Void set_Modified(Boolean)
L_0181: ldarg.0
L_0182: ldfld UnityEngine.GameObject modifiedIcon
L_0187: ldarg.0
L_0188: call Boolean get_Modified()
L_018d: callvirt Void SetActive(Boolean)
L_0192: ldarg.0
L_0193: ldc.i4.1
L_0194: call Void set_Initialized(Boolean)
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_019f: ldarg.0
L_01a0: call Boolean get_Initialized()
L_01a5: callvirt Void ToggleListVisible(Boolean)
L_01aa: ldarg.0
L_01ab: call Boolean get_IsSimGame()
L_01b0: brfalse Label2
L_01b5: ldarg.0
L_01b6: call Void CreateBaseWorkOrder()
L_01bb: Label2
L_01bb: ldarg.0
L_01bc: ldc.i4.1
L_01bd: call Boolean ValidateLoadout(Boolean)
L_01c2: pop
L_01c3: ldarg.0
L_01c4: call Void RefreshInventorySelectability()
L_01c9: Label3
L_01c9: ldarg.0
L_01ca: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01cf: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: BattleTech.MechComponentRef
L_0000: Local var 2: BattleTech.WeaponDef
L_0000: Local var 3: System.Boolean
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem)
L_000c: ldarg.1
L_000d: brtrue Label1
L_0012: ldarg.0
L_0013: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0018: ldc.i4.0
L_0019: callvirt Void ShowHighlightFrame(Boolean)
L_001e: ldarg.0
L_001f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0024: ldc.i4.0
L_0025: ldc.i4.6
L_0026: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0031: ldc.i4.0
L_0032: ldc.i4.6
L_0033: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0038: ldarg.0
L_0039: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003e: ldc.i4.0
L_003f: ldc.i4.6
L_0040: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_004b: ldc.i4.0
L_004c: ldc.i4.6
L_004d: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0052: ldarg.0
L_0053: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0058: ldc.i4.0
L_0059: ldc.i4.6
L_005a: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_005f: ldarg.0
L_0060: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0065: ldc.i4.0
L_0066: ldc.i4.6
L_0067: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_006c: ldarg.0
L_006d: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0072: ldc.i4.0
L_0073: ldc.i4.6
L_0074: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0079: ldarg.0
L_007a: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_007f: ldc.i4.0
L_0080: ldc.i4.6
L_0081: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0086: br Label6
L_008b: Label1
L_008b: ldarg.0
L_008c: call Boolean get_IsSimGame()
L_0091: pop
L_0092: ldarg.1
L_0093: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0098: brtrue Label2
L_009d: br Label7
L_00a2: Label2
L_00a2: ldarg.1
L_00a3: isinst BattleTech.UI.MechLabItemSlotElement
L_00a8: stloc.0
L_00a9: ldarg.1
L_00aa: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00af: stloc.1
L_00b0: ldloc.1
L_00b1: callvirt BattleTech.MechComponentDef get_Def()
L_00b6: isinst BattleTech.WeaponDef
L_00bb: stloc.2
L_00bc: ldc.i4.0
L_00bd: stloc.3
L_00be: ldloc.0
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label3
L_00ca: ldarg.0
L_00cb: call Boolean get_IsSimGame()
L_00d0: brfalse Label4
L_00d5: ldloc.0
L_00d6: callvirt BattleTech.UI.IMechLabDropTarget get_OriginalDropParent()
L_00db: ldarg.0
L_00dc: callvirt Boolean Equals(System.Object)
L_00e1: br Label5
L_00e6: Label4
L_00e6: ldc.i4.0
L_00e7: Label5
L_00e7: stloc.3
L_00e8: Label3
L_00e8: ldarg.0
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ee: ldarg.1
L_00ef: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00f4: ldloc.2
L_00f5: ldloc.3
L_00f6: ldarg.0
L_00f7: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00fc: ldloc.1
L_00fd: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0102: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0107: ldarg.0
L_0108: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_010d: ldloc.1
L_010e: ldloc.2
L_010f: ldloc.3
L_0110: ldarg.0
L_0111: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0116: ldloc.1
L_0117: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_011c: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0121: ldarg.0
L_0122: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0127: ldloc.1
L_0128: ldloc.2
L_0129: ldloc.3
L_012a: ldarg.0
L_012b: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0130: ldloc.1
L_0131: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0136: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_013b: ldarg.0
L_013c: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0141: ldloc.1
L_0142: ldloc.2
L_0143: ldloc.3
L_0144: ldarg.0
L_0145: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_014a: ldloc.1
L_014b: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0150: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0155: ldarg.0
L_0156: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_015b: ldloc.1
L_015c: ldloc.2
L_015d: ldloc.3
L_015e: ldarg.0
L_015f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0164: ldloc.1
L_0165: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_016a: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0175: ldloc.1
L_0176: ldloc.2
L_0177: ldloc.3
L_0178: ldarg.0
L_0179: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_017e: ldloc.1
L_017f: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0184: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0189: ldarg.0
L_018a: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_018f: ldloc.1
L_0190: ldloc.2
L_0191: ldloc.3
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0198: ldloc.1
L_0199: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_019e: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01a9: ldloc.1
L_01aa: ldloc.2
L_01ab: ldloc.3
L_01ac: ldarg.0
L_01ad: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01b2: ldloc.1
L_01b3: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_01b8: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_01bd: Label6
L_01bd: Label7
L_01bd: ret
DONE

### Harmony id=MechEngineer.Features.InvalidInventory, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.InvalidInventory.InvalidInventorySettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.19
### Patch BattleTech.MechValidationRules, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0000: Local var 0: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: ldnull
L_0001: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0002: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] InitializeValidationResults()
L_0007: stloc.0
L_0008: ldarg.0
L_0009: switch Labels1,2,3,4
L_001e: br Label5
L_0023: Label1
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0027: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_002c: ldarg.2
L_002d: ldarg.0
L_002e: ldarg.3
L_002f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0031: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0036: ldarg.1
L_0037: ldarg.2
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_003c: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0041: ldarg.1
L_0042: ldarg.2
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0047: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_004c: ldarg.1
L_004d: ldarg.2
L_004e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0050: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0055: br Label6
L_005a: Label2
L_005a: ldarg.1
L_005b: ldarg.2
L_005c: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_005e: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0063: ldarg.1
L_0064: ldarg.2
L_0065: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0067: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_006c: ldarg.2
L_006d: ldarg.0
L_006e: ldarg.3
L_006f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0071: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0076: ldarg.1
L_0077: ldarg.2
L_0078: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_007a: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_007f: ldarg.2
L_0080: ldarg.0
L_0081: ldarg.3
L_0082: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0084: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0089: ldarg.1
L_008a: ldarg.2
L_008b: ldarg.0
L_008c: ldarg.3
L_008d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_008f: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0094: ldarg.1
L_0095: ldarg.2
L_0096: ldarg.0
L_0097: ldarg.3
L_0098: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_009a: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_009f: ldarg.1
L_00a0: ldarg.2
L_00a1: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00a3: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00a8: br Label7
L_00ad: Label3
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00b1: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00b6: ldarg.1
L_00b7: ldarg.2
L_00b8: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ba: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00bf: ldarg.2
L_00c0: ldarg.0
L_00c1: ldarg.3
L_00c2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00c4: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00c9: ldarg.1
L_00ca: ldarg.2
L_00cb: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00cd: call Void ValidateMechIsStockMechDef(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00d2: ldarg.1
L_00d3: ldarg.2
L_00d4: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00d6: call Void ValidateMechHasStockComponents(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00db: ldarg.1
L_00dc: ldarg.2
L_00dd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00df: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00e4: ldarg.2
L_00e5: ldarg.0
L_00e6: ldarg.3
L_00e7: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00e9: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00ee: ldarg.1
L_00ef: ldarg.2
L_00f0: ldarg.0
L_00f1: ldarg.3
L_00f2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00f4: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00f9: ldarg.1
L_00fa: ldarg.2
L_00fb: ldarg.0
L_00fc: ldarg.3
L_00fd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ff: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0104: ldarg.1
L_0105: ldarg.2
L_0106: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0108: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_010d: br Label8
L_0112: Label4
L_0112: ldarg.1
L_0113: ldarg.2
L_0114: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0116: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_011b: ldarg.2
L_011c: ldarg.0
L_011d: ldarg.3
L_011e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0120: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0125: ldarg.1
L_0126: ldarg.2
L_0127: ldarg.0
L_0128: ldarg.3
L_0129: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_012b: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0130: ldarg.1
L_0131: ldarg.2
L_0132: ldarg.0
L_0133: ldarg.3
L_0134: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0136: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_013b: ldarg.1
L_013c: ldarg.2
L_013d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_013f: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0144: Label5
L_0144: Label6
L_0144: Label7
L_0144: Label8
L_0144: ldloc.0
L_0145: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0146: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0147: ldarg 0
L_014d: ldarg 2
L_0153: call Void Postfix(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], BattleTech.MechValidationLevel, BattleTech.MechDef)
L_0158: ldarg 0
L_015e: ldarg 1
L_0164: ldarg 2
L_016a: ldloca 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_016c: call Void Postfix(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0171: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0172: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Localize.Text GetCantSaveErrorString()
L_0000: Local var 0: Localize.Text
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1+Enumerator[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: Localize.Text
L_0000: ldnull
L_0001: stloc 4 (Localize.Text)
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.UI.MechLabPanel)
L_0009: newobj Void .ctor()
L_000e: stloc.0
L_000f: newobj Void .ctor()
L_0014: stloc.1
L_0015: ldarg.0
L_0016: call Boolean get_IsSimGame()
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0026: newobj Void .ctor()
L_002b: dup
L_002c: ldc.i4.0
L_002d: callvirt Void Add(BattleTech.MechValidationType)
L_0032: dup
L_0033: ldc.i4.2
L_0034: callvirt Void Add(BattleTech.MechValidationType)
L_0039: dup
L_003a: ldc.i4.8
L_003b: callvirt Void Add(BattleTech.MechValidationType)
L_0040: dup
L_0041: ldc.i4.s 9
L_0043: callvirt Void Add(BattleTech.MechValidationType)
L_0048: dup
L_0049: ldc.i4.7
L_004a: callvirt Void Add(BattleTech.MechValidationType)
L_004f: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0054: stloc.1
L_0055: br Label2
L_005a: Label1
L_005a: ldarg.0
L_005b: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0060: newobj Void .ctor()
L_0065: dup
L_0066: ldc.i4.0
L_0067: callvirt Void Add(BattleTech.MechValidationType)
L_006c: dup
L_006d: ldc.i4.2
L_006e: callvirt Void Add(BattleTech.MechValidationType)
L_0073: dup
L_0074: ldc.i4.4
L_0075: callvirt Void Add(BattleTech.MechValidationType)
L_007a: dup
L_007b: ldc.i4.8
L_007c: callvirt Void Add(BattleTech.MechValidationType)
L_0081: dup
L_0082: ldc.i4.s 9
L_0084: callvirt Void Add(BattleTech.MechValidationType)
L_0089: dup
L_008a: ldc.i4.7
L_008b: callvirt Void Add(BattleTech.MechValidationType)
L_0090: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0095: stloc.1
L_0096: Label2
L_0096: ldloc.1
L_0097: callvirt Int32 get_Count()
L_009c: ldc.i4.0
L_009d: ble Label3
L_00a2: ldloc.0
L_00a3: ldstr "The following issues must be fixed before your 'Mech loadout can be saved:

"
L_00a8: call System.Object[] Empty[Object]()
L_00ad: callvirt Void Append(System.String, System.Object[])
L_00b2: Label3
L_00b2: ldloc.1
L_00b3: callvirt Enumerator GetEnumerator()
L_00b8: stloc.2
.try
{
	L_00b9: br Label4
	L_00be: Label5
	L_00be: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00c0: call Localize.Text get_Current()
	L_00c5: stloc.3
	L_00c6: ldloc.0
	L_00c7: ldloc.3
	L_00c8: callvirt Void AppendLine(Localize.Text)
	L_00cd: Label4
	L_00cd: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00cf: call Boolean MoveNext()
	L_00d4: brtrue Label5
	L_00d9: leave Label6
	L_00de: leave (autogenerated)
} // end try
.finally
{
	L_00e3: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00e5: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_00eb: callvirt Void Dispose()
	L_00f0: endfinally
	L_00f1: leave (autogenerated)
} // end handler
L_00f2: Label6
L_00f2: ldloc.0
L_00f3: stloc 4 (Localize.Text)
L_00f5: ldloc 4 (Localize.Text)
L_00f7: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Localize.Text GetNonFieldableErrorString()
L_0000: Local var 0: Localize.Text
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: Localize.Text
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: Localize.Text
L_0000: ldnull
L_0001: stloc 4 (Localize.Text)
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.UI.MechLabPanel)
L_0009: newobj Void .ctor()
L_000e: stloc.0
L_000f: newobj Void .ctor()
L_0014: pop
L_0015: ldarg.0
L_0016: call Boolean get_IsSimGame()
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0026: newobj Void .ctor()
L_002b: dup
L_002c: ldc.i4.4
L_002d: callvirt Void Add(BattleTech.MechValidationType)
L_0032: dup
L_0033: ldc.i4.s 11
L_0035: callvirt Void Add(BattleTech.MechValidationType)
L_003a: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_003f: dup
L_0040: callvirt Int32 get_Count()
L_0045: ldc.i4.0
L_0046: ble Label2
L_004b: ldloc.0
L_004c: ldstr "You may confirm your changes, however the following issues must be fixed before this 'Mech can be fielded in battle:

"
L_0051: call System.Object[] Empty[Object]()
L_0056: callvirt Void Append(System.String, System.Object[])
L_005b: Label2
L_005b: callvirt Enumerator GetEnumerator()
L_0060: stloc.1
.try
{
	L_0061: br Label3
	L_0066: Label4
	L_0066: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0068: call Localize.Text get_Current()
	L_006d: stloc.2
	L_006e: ldloc.0
	L_006f: ldloc.2
	L_0070: callvirt Void AppendLine(Localize.Text)
	L_0075: Label3
	L_0075: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0077: call Boolean MoveNext()
	L_007c: brtrue Label4
	L_0081: leave Label5
	L_0086: leave (autogenerated)
} // end try
.finally
{
	L_008b: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_008d: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_0093: callvirt Void Dispose()
	L_0098: endfinally
	L_0099: leave (autogenerated)
} // end handler
L_009a: Label1
L_009a: ldarg.0
L_009b: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00a0: newobj Void .ctor()
L_00a5: dup
L_00a6: ldc.i4.3
L_00a7: callvirt Void Add(BattleTech.MechValidationType)
L_00ac: dup
L_00ad: ldc.i4.5
L_00ae: callvirt Void Add(BattleTech.MechValidationType)
L_00b3: dup
L_00b4: ldc.i4.6
L_00b5: callvirt Void Add(BattleTech.MechValidationType)
L_00ba: dup
L_00bb: ldc.i4.s 10
L_00bd: callvirt Void Add(BattleTech.MechValidationType)
L_00c2: dup
L_00c3: ldc.i4.s 11
L_00c5: callvirt Void Add(BattleTech.MechValidationType)
L_00ca: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00cf: dup
L_00d0: callvirt Int32 get_Count()
L_00d5: ldc.i4.0
L_00d6: ble Label6
L_00db: ldloc.0
L_00dc: ldstr "The following issues may affect the performance of this 'Mech in battle:

"
L_00e1: call System.Object[] Empty[Object]()
L_00e6: callvirt Void Append(System.String, System.Object[])
L_00eb: Label6
L_00eb: callvirt Enumerator GetEnumerator()
L_00f0: stloc.1
.try
{
	L_00f1: br Label7
	L_00f6: Label8
	L_00f6: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00f8: call Localize.Text get_Current()
	L_00fd: stloc.3
	L_00fe: ldloc.0
	L_00ff: ldloc.3
	L_0100: callvirt Void AppendLine(Localize.Text)
	L_0105: Label7
	L_0105: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0107: call Boolean MoveNext()
	L_010c: brtrue Label8
	L_0111: leave Label9
	L_0116: leave (autogenerated)
} // end try
.finally
{
	L_011b: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_011d: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_0123: callvirt Void Dispose()
	L_0128: endfinally
	L_0129: leave (autogenerated)
} // end handler
L_012a: Label5
L_012a: Label9
L_012a: ldloc.0
L_012b: stloc 4 (Localize.Text)
L_012d: ldloc 4 (Localize.Text)
L_012f: ret
DONE

### Harmony id=MechEngineer.Features.ComponentExplosions, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ComponentExplosions.ComponentExplosionsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.20
### Patch BattleTech.Vehicle, Boolean DamageLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.VehicleChassisLocations, BattleTech.Weapon, Single, BattleTech.AttackImpactQuality)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: ldarg.3
L_0001: brfalse Label1
L_0006: ldarg.3
L_0007: ldc.i4 65536
L_000c: bne.un Label2
L_0011: Label1
L_0011: ldc.i4.0
L_0012: br Label10
L_0017: Label2
L_0017: ldarg.0
L_0018: call BattleTech.CombatGameState get_Combat()
L_001d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0022: ldarg.1
L_0023: ldfld System.Int32 attackSequenceId
L_0028: callvirt AttackSequence GetAttackSequence(Int32)
L_002d: stloc.0
L_002e: ldloc.0
L_002f: brfalse Label3
L_0034: ldloc.0
L_0035: ldarg.0
L_0036: call System.String get_GUID()
L_003b: callvirt Void FlagAttackDidDamage(System.String)
L_0040: Label3
L_0040: ldarg.s 5
L_0042: stloc.1
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: call Single GetCurrentArmor(BattleTech.Vehicle, BattleTech.VehicleChassisLocations)
L_004a: stloc.2
L_004b: ldloc.2
L_004c: ldc.r4 0
L_0051: ble.un Label4
L_0056: ldarg.s 5
L_0058: ldloc.2
L_0059: call Single Min(Single, Single)
L_005e: stloc.s 4 (System.Single)
L_0060: ldsfld HBS.Logging.ILog attackLogger
L_0065: callvirt Boolean get_IsLogEnabled()
L_006a: brfalse Label5
L_006f: ldsfld HBS.Logging.ILog attackLogger
L_0074: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_0079: ldc.i4.5
L_007a: newarr System.Object
L_007f: dup
L_0080: ldc.i4.0
L_0081: ldarg.1
L_0082: ldfld System.Int32 attackSequenceId
L_0087: box System.Int32
L_008c: stelem.ref
L_008d: dup
L_008e: ldc.i4.1
L_008f: ldarg.1
L_0090: ldfld System.Int32 attackWeaponIndex
L_0095: box System.Int32
L_009a: stelem.ref
L_009b: dup
L_009c: ldc.i4.2
L_009d: ldarg.2
L_009e: box System.Int32
L_00a3: stelem.ref
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: ldarga.s 3
L_00a8: constrained. BattleTech.VehicleChassisLocations
L_00ae: callvirt System.String ToString()
L_00b3: stelem.ref
L_00b4: dup
L_00b5: ldc.i4.4
L_00b6: ldloc.s 4 (System.Single)
L_00b8: box System.Single
L_00bd: stelem.ref
L_00be: call System.String Format(System.String, System.Object[])
L_00c3: callvirt Void Log(System.Object)
L_00c8: Label5
L_00c8: ldarg.0
L_00c9: ldarg.3
L_00ca: ldloc.s 4 (System.Single)
L_00cc: ldarg.1
L_00cd: call Void applyArmorStatDamage(BattleTech.VehicleChassisLocations, Single, BattleTech.WeaponHitInfo)
L_00d2: ldarg.s 5
L_00d4: ldloc.s 4 (System.Single)
L_00d6: sub
L_00d7: stloc.1
L_00d8: Label4
L_00d8: ldloc.1
L_00d9: ldc.r4 0
L_00de: bgt.un Label6
L_00e3: ldarg.0
L_00e4: call BattleTech.CombatGameState get_Combat()
L_00e9: callvirt MessageCenter get_MessageCenter()
L_00ee: ldarg.1
L_00ef: ldfld System.String attackerId
L_00f4: ldarg.0
L_00f5: call System.String get_GUID()
L_00fa: ldarg.s 5
L_00fc: ldarg.3
L_00fd: newobj Void .ctor(String, String, Single, VehicleChassisLocations)
L_0102: callvirt Void PublishMessage(MessageCenterMessage)
L_0107: ldc.i4.1
L_0108: br Label11
L_010d: Label6
L_010d: ldarg.0
L_010e: ldarg.3
L_010f: call Single GetCurrentStructure(BattleTech.VehicleChassisLocations)
L_0114: stloc.3
L_0115: ldloc.3
L_0116: ldc.r4 0
L_011b: ble.un Label7
L_0120: ldloc.1
L_0121: ldloc.3
L_0122: call Single Min(Single, Single)
L_0127: stloc.s 5 (System.Single)
L_0129: ldsfld HBS.Logging.ILog attackLogger
L_012e: callvirt Boolean get_IsLogEnabled()
L_0133: brfalse Label8
L_0138: ldsfld HBS.Logging.ILog attackLogger
L_013d: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_0142: ldc.i4.5
L_0143: newarr System.Object
L_0148: dup
L_0149: ldc.i4.0
L_014a: ldarg.1
L_014b: ldfld System.Int32 attackSequenceId
L_0150: box System.Int32
L_0155: stelem.ref
L_0156: dup
L_0157: ldc.i4.1
L_0158: ldarg.1
L_0159: ldfld System.Int32 attackWeaponIndex
L_015e: box System.Int32
L_0163: stelem.ref
L_0164: dup
L_0165: ldc.i4.2
L_0166: ldarg.2
L_0167: box System.Int32
L_016c: stelem.ref
L_016d: dup
L_016e: ldc.i4.3
L_016f: ldarga.s 3
L_0171: constrained. BattleTech.VehicleChassisLocations
L_0177: callvirt System.String ToString()
L_017c: stelem.ref
L_017d: dup
L_017e: ldc.i4.4
L_017f: ldloc.s 5 (System.Single)
L_0181: box System.Single
L_0186: stelem.ref
L_0187: call System.String Format(System.String, System.Object[])
L_018c: callvirt Void Log(System.Object)
L_0191: Label8
L_0191: ldarg.0
L_0192: ldarg.3
L_0193: ldloc.s 5 (System.Single)
L_0195: ldarg.1
L_0196: call Void applyStructureStatDamage(BattleTech.Vehicle, BattleTech.VehicleChassisLocations, Single, BattleTech.WeaponHitInfo)
L_019b: ldloc.1
L_019c: ldloc.s 5 (System.Single)
L_019e: sub
L_019f: stloc.1
L_01a0: ldarg.0
L_01a1: ldarg.3
L_01a2: call Single GetCurrentStructure(BattleTech.VehicleChassisLocations)
L_01a7: ldc.r4 0
L_01ac: bgt.un Label9
L_01b1: ldarg.0
L_01b2: ldstr "Location Destroyed: "
L_01b7: ldarga.s 3
L_01b9: constrained. BattleTech.VehicleChassisLocations
L_01bf: callvirt System.String ToString()
L_01c4: call System.String Concat(System.String, System.String)
L_01c9: ldc.i4.s 11
L_01cb: ldc.i4.s 12
L_01cd: ldarg.3
L_01ce: ldarg.1
L_01cf: ldfld System.Int32 stackItemUID
L_01d4: ldarg.1
L_01d5: ldfld System.String attackerId
L_01da: ldc.i4.0
L_01db: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_01e0: Label7
L_01e0: Label9
L_01e0: ldarg.0
L_01e1: call BattleTech.CombatGameState get_Combat()
L_01e6: callvirt MessageCenter get_MessageCenter()
L_01eb: ldarg.1
L_01ec: ldfld System.String targetId
L_01f1: ldarg.0
L_01f2: call System.String get_GUID()
L_01f7: ldarg.s 5
L_01f9: ldarg.3
L_01fa: newobj Void .ctor(String, String, Single, VehicleChassisLocations)
L_01ff: callvirt Void PublishMessage(MessageCenterMessage)
L_0204: ldc.i4.1
L_0205: Label10
L_0205: Label11
L_0205: ret
DONE

### Patch BattleTech.MechComponent, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarga 2
L_000d: call Boolean Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.StatCollection get_StatCollection()
L_001d: ldarg.1
L_001e: ldfld System.String attackerId
L_0023: ldarg.1
L_0024: ldfld System.Int32 stackItemUID
L_0029: ldstr "DamageLevel"
L_002e: ldc.i4.0
L_002f: ldarg.2
L_0030: ldc.i4.m1
L_0031: ldc.i4.1
L_0032: callvirt Int32 ModifyStat[ComponentDamageLevel](System.String, Int32, System.String, StatOperation, BattleTech.ComponentDamageLevel, Int32, Boolean)
L_0037: pop
L_0038: ldarg.2
L_0039: ldc.i4.0
L_003a: blt Label1
L_003f: ldarg.0
L_0040: ldc.i4.1
L_0041: call Void CancelCreatedEffects(BattleTech.MechComponent, Boolean)
L_0046: Label1
L_0046: ldarg.2
L_0047: ldc.i4.4
L_0048: pop
L_0049: pop
L_004a: ldarg.0
L_004b: call BattleTech.MechComponentDef get_componentDef()
L_0050: callvirt Boolean get_CriticalComponent()
L_0055: brfalse Label2
L_005a: ldarg.0
L_005b: ldfld BattleTech.AbstractActor parent
L_0060: ldstr "Vital component destroyed: "
L_0065: ldarg.0
L_0066: call BattleTech.DescriptionDef get_Description()
L_006b: callvirt System.String get_Name()
L_0070: call System.String Concat(System.String, System.String)
L_0075: ldc.i4.s 9
L_0077: ldc.i4.1
L_0078: ldarg.0
L_0079: ldflda BattleTech.LocationDef locationDef
L_007e: ldfld BattleTech.ChassisLocations Location
L_0083: ldarg.1
L_0084: ldfld System.Int32 stackItemUID
L_0089: ldarg.1
L_008a: ldfld System.String attackerId
L_008f: ldc.i4.0
L_0090: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_0095: Label2
L_0095: Label0
L_0095: ldarg.0
L_0096: call Void Postfix(BattleTech.MechComponent)
L_009b: ldarg.0
L_009c: ldarg 1
L_00a2: ldarg 2
L_00a8: ldarg 3
L_00ae: call Void Postfix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_00b3: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.0
L_0043: ldarg 1
L_0049: ldarg 2
L_004f: ldarg 3
L_0055: ldarg 4
L_005b: ldarg 5
L_0061: ldarg 6
L_0067: ldarg 7
L_006d: ldarg 8
L_0073: call Void Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0078: ldarg.0
L_0079: call Void Prefix(BattleTech.Mech)
L_007e: ldarg.3
L_007f: brfalse Label1
L_0084: ldarg.3
L_0085: ldc.i4 65536
L_008a: bne.un Label2
L_008f: Label1
L_008f: ldc.i4.0
L_0090: br Label23
L_0095: Label2
L_0095: ldsfld HBS.Logging.ILog attackSequenceLogger
L_009a: callvirt Boolean get_IsDebugEnabled()
L_009f: brfalse Label3
L_00a4: ldsfld HBS.Logging.ILog attackSequenceLogger
L_00a9: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_00ae: ldc.i4.6
L_00af: newarr System.Object
L_00b4: dup
L_00b5: ldc.i4.0
L_00b6: ldarg.2
L_00b7: ldfld System.Int32 attackWeaponIndex
L_00bc: box System.Int32
L_00c1: stelem.ref
L_00c2: dup
L_00c3: ldc.i4.1
L_00c4: ldarga.s 3
L_00c6: constrained. BattleTech.ArmorLocation
L_00cc: callvirt System.String ToString()
L_00d1: stelem.ref
L_00d2: dup
L_00d3: ldc.i4.2
L_00d4: ldarg.s 5
L_00d6: box System.Single
L_00db: stelem.ref
L_00dc: dup
L_00dd: ldc.i4.3
L_00de: ldarg.2
L_00df: ldfld System.Int32 attackGroupIndex
L_00e4: box System.Int32
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.4
L_00ec: ldarg.0
L_00ed: call System.String get_GUID()
L_00f2: stelem.ref
L_00f3: dup
L_00f4: ldc.i4.5
L_00f5: ldarg.s 6
L_00f7: box System.Int32
L_00fc: stelem.ref
L_00fd: call System.String Format(System.String, System.Object[])
L_0102: callvirt Void LogDebug(System.Object)
L_0107: Label3
L_0107: ldarg.0
L_0108: call BattleTech.CombatGameState get_Combat()
L_010d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0112: ldarg.2
L_0113: ldfld System.Int32 attackSequenceId
L_0118: callvirt AttackSequence GetAttackSequence(Int32)
L_011d: stloc.0
L_011e: ldsfld HBS.Logging.ILog damageLogger
L_0123: callvirt Boolean get_IsLogEnabled()
L_0128: brfalse Label4
L_012d: ldsfld HBS.Logging.ILog damageLogger
L_0132: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_0137: ldc.i4.5
L_0138: newarr System.Object
L_013d: dup
L_013e: ldc.i4.0
L_013f: ldarg.0
L_0140: callvirt BattleTech.DescriptionDef get_Description()
L_0145: callvirt System.String get_Name()
L_014a: stelem.ref
L_014b: dup
L_014c: ldc.i4.1
L_014d: ldarg.s 5
L_014f: box System.Single
L_0154: stelem.ref
L_0155: dup
L_0156: ldc.i4.2
L_0157: ldarga.s 3
L_0159: constrained. BattleTech.ArmorLocation
L_015f: callvirt System.String ToString()
L_0164: stelem.ref
L_0165: dup
L_0166: ldc.i4.3
L_0167: ldarg.s 4
L_0169: callvirt System.String get_Name()
L_016e: stelem.ref
L_016f: dup
L_0170: ldc.i4.4
L_0171: ldarg.2
L_0172: ldfld System.Int32 attackWeaponIndex
L_0177: box System.Int32
L_017c: stelem.ref
L_017d: call System.String Format(System.String, System.Object[])
L_0182: callvirt Void Log(System.Object)
L_0187: Label4
L_0187: ldloc.0
L_0188: brfalse Label5
L_018d: ldloc.0
L_018e: ldarg.0
L_018f: call System.String get_GUID()
L_0194: callvirt Void FlagAttackDidDamage(System.String)
L_0199: ldarg.0
L_019a: call BattleTech.CombatGameState get_Combat()
L_019f: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_01a4: ldarg.0
L_01a5: call System.String get_GUID()
L_01aa: ldarg.1
L_01ab: ldarg.2
L_01ac: ldarg.3
L_01ad: ldarg.s 4
L_01af: ldarg.s 5
L_01b1: ldarg.s 6
L_01b3: ldarg.s 7
L_01b5: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_01ba: Label5
L_01ba: ldarg.s 5
L_01bc: stloc.1
L_01bd: ldarg.0
L_01be: ldarg.3
L_01bf: call Single GetCurrentArmor(BattleTech.Mech, BattleTech.ArmorLocation)
L_01c4: stloc.2
L_01c5: ldloc.2
L_01c6: ldc.r4 0
L_01cb: ble.un Label6
L_01d0: ldarg.s 5
L_01d2: ldloc.2
L_01d3: call Single Min(Single, Single)
L_01d8: stloc.s 7 (System.Single)
L_01da: ldsfld HBS.Logging.ILog attackLogger
L_01df: callvirt Boolean get_IsLogEnabled()
L_01e4: brfalse Label7
L_01e9: ldsfld HBS.Logging.ILog attackLogger
L_01ee: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01f3: ldc.i4.5
L_01f4: newarr System.Object
L_01f9: dup
L_01fa: ldc.i4.0
L_01fb: ldarg.2
L_01fc: ldfld System.Int32 attackSequenceId
L_0201: box System.Int32
L_0206: stelem.ref
L_0207: dup
L_0208: ldc.i4.1
L_0209: ldarg.2
L_020a: ldfld System.Int32 attackWeaponIndex
L_020f: box System.Int32
L_0214: stelem.ref
L_0215: dup
L_0216: ldc.i4.2
L_0217: ldarg.1
L_0218: box System.Int32
L_021d: stelem.ref
L_021e: dup
L_021f: ldc.i4.3
L_0220: ldarga.s 3
L_0222: constrained. BattleTech.ArmorLocation
L_0228: callvirt System.String ToString()
L_022d: stelem.ref
L_022e: dup
L_022f: ldc.i4.4
L_0230: ldloc.s 7 (System.Single)
L_0232: box System.Single
L_0237: stelem.ref
L_0238: call System.String Format(System.String, System.Object[])
L_023d: callvirt Void Log(System.Object)
L_0242: Label7
L_0242: ldsfld HBS.Logging.ILog damageLogger
L_0247: callvirt Boolean get_IsLogEnabled()
L_024c: brfalse Label8
L_0251: ldloc.2
L_0252: ldloc.s 7 (System.Single)
L_0254: sub
L_0255: stloc.s 8 (System.Single)
L_0257: ldsfld HBS.Logging.ILog damageLogger
L_025c: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_0261: ldloc.s 7 (System.Single)
L_0263: box System.Single
L_0268: ldloc.2
L_0269: box System.Single
L_026e: ldloc.s 8 (System.Single)
L_0270: box System.Single
L_0275: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_027a: callvirt Void Log(System.Object)
L_027f: Label8
L_027f: ldarg.0
L_0280: ldarg.3
L_0281: ldloc.s 7 (System.Single)
L_0283: ldarg.2
L_0284: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_0289: ldarg.s 5
L_028b: ldloc.s 7 (System.Single)
L_028d: sub
L_028e: stloc.1
L_028f: Label6
L_028f: ldloc.1
L_0290: ldc.r4 0
L_0295: bgt.un Label9
L_029a: ldarg.0
L_029b: call BattleTech.CombatGameState get_Combat()
L_02a0: callvirt MessageCenter get_MessageCenter()
L_02a5: ldarg.2
L_02a6: ldfld System.String attackerId
L_02ab: ldarg.0
L_02ac: call System.String get_GUID()
L_02b1: ldarg.s 5
L_02b3: ldarg.3
L_02b4: newobj Void .ctor(String, String, Single, ArmorLocation)
L_02b9: callvirt Void PublishMessage(MessageCenterMessage)
L_02be: ldc.i4.1
L_02bf: br Label24
L_02c4: Label9
L_02c4: ldarg.3
L_02c5: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_02ca: stloc.3
L_02cb: call UnityEngine.Vector3 get_one()
L_02d0: stloc.s 4 (UnityEngine.Vector3)
L_02d2: ldarg.0
L_02d3: call BattleTech.MechRepresentation get_GameRep()
L_02d8: ldnull
L_02d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02de: brfalse Label10
L_02e3: ldarg.s 4
L_02e5: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02ea: ldnull
L_02eb: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02f0: brfalse Label11
L_02f5: ldarg.s 4
L_02f7: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02fc: ldfld UnityEngine.Transform[] vfxTransforms
L_0301: ldc.i4.0
L_0302: ldelem.ref
L_0303: callvirt UnityEngine.Vector3 get_position()
L_0308: stloc.s 9 (UnityEngine.Vector3)
L_030a: ldarg.0
L_030b: call BattleTech.MechRepresentation get_GameRep()
L_0310: ldloc.3
L_0311: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_0316: callvirt UnityEngine.Vector3 get_position()
L_031b: ldloc.s 9 (UnityEngine.Vector3)
L_031d: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0322: stloc.s 4 (UnityEngine.Vector3)
L_0324: ldloca.s 4 (UnityEngine.Vector3)
L_0326: call Void Normalize()
L_032b: ldloca.s 4 (UnityEngine.Vector3)
L_032d: ldc.r4 0.5
L_0332: stfld System.Single y
L_0337: ldloc.s 4 (UnityEngine.Vector3)
L_0339: ldarg.s 5
L_033b: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0340: stloc.s 4 (UnityEngine.Vector3)
L_0342: Label10
L_0342: Label11
L_0342: ldarg.0
L_0343: ldloc.3
L_0344: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_0349: stloc.s 5 (System.Single)
L_034b: ldloc.s 5 (System.Single)
L_034d: ldc.r4 0
L_0352: ble.un Label12
L_0357: ldloc.1
L_0358: ldloc.s 5 (System.Single)
L_035a: call Single Min(Single, Single)
L_035f: stloc.s 10 (System.Single)
L_0361: ldsfld HBS.Logging.ILog attackLogger
L_0366: callvirt Boolean get_IsLogEnabled()
L_036b: brfalse Label13
L_0370: ldsfld HBS.Logging.ILog attackLogger
L_0375: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_037a: ldc.i4.5
L_037b: newarr System.Object
L_0380: dup
L_0381: ldc.i4.0
L_0382: ldarg.2
L_0383: ldfld System.Int32 attackSequenceId
L_0388: box System.Int32
L_038d: stelem.ref
L_038e: dup
L_038f: ldc.i4.1
L_0390: ldarg.2
L_0391: ldfld System.Int32 attackWeaponIndex
L_0396: box System.Int32
L_039b: stelem.ref
L_039c: dup
L_039d: ldc.i4.2
L_039e: ldarg.1
L_039f: box System.Int32
L_03a4: stelem.ref
L_03a5: dup
L_03a6: ldc.i4.3
L_03a7: ldloca.s 3 (BattleTech.ChassisLocations)
L_03a9: constrained. BattleTech.ChassisLocations
L_03af: callvirt System.String ToString()
L_03b4: stelem.ref
L_03b5: dup
L_03b6: ldc.i4.4
L_03b7: ldloc.s 10 (System.Single)
L_03b9: box System.Single
L_03be: stelem.ref
L_03bf: call System.String Format(System.String, System.Object[])
L_03c4: callvirt Void Log(System.Object)
L_03c9: Label13
L_03c9: ldsfld HBS.Logging.ILog damageLogger
L_03ce: callvirt Boolean get_IsLogEnabled()
L_03d3: brfalse Label14
L_03d8: ldloc.s 5 (System.Single)
L_03da: ldloc.s 10 (System.Single)
L_03dc: sub
L_03dd: stloc.s 11 (System.Single)
L_03df: ldsfld HBS.Logging.ILog damageLogger
L_03e4: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03e9: ldloc.s 10 (System.Single)
L_03eb: box System.Single
L_03f0: ldloc.s 5 (System.Single)
L_03f2: box System.Single
L_03f7: ldloc.s 11 (System.Single)
L_03f9: box System.Single
L_03fe: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0403: callvirt Void Log(System.Object)
L_0408: Label14
L_0408: ldarg.0
L_0409: ldloc.3
L_040a: ldloc.s 10 (System.Single)
L_040c: ldarg.2
L_040d: call Void ApplyStructureStatDamage(BattleTech.Mech, BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_0412: ldloc.1
L_0413: ldloc.s 10 (System.Single)
L_0415: sub
L_0416: stloc.1
L_0417: ldarg.0
L_0418: ldloc.3
L_0419: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_041e: brfalse Label15
L_0423: ldloc.s 10 (System.Single)
L_0425: ldc.r4 0.01
L_042a: ble.un Label16
L_042f: ldarg.0
L_0430: ldarg.2
L_0431: ldarg.1
L_0432: ldloc.3
L_0433: ldloc.s 4 (UnityEngine.Vector3)
L_0435: ldarg.s 8
L_0437: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_043c: br Label17
L_0441: Label12
L_0441: ldarg.0
L_0442: callvirt Boolean get_IsDead()
L_0447: brfalse Label18
L_044c: ldloc.1
L_044d: ldc.r4 0
L_0452: ble.un Label19
L_0457: ldarg.0
L_0458: ldarg.2
L_0459: ldfld System.String attackerId
L_045e: ldloc.3
L_045f: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_0464: ldc.i4.8
L_0465: ldstr "{0}"
L_046a: ldc.r4 1
L_046f: ldloc.1
L_0470: call Single Max(Single, Single)
L_0475: conv.i4
L_0476: box System.Int32
L_047b: call System.String Format(System.String, System.Object)
L_0480: ldarg.0
L_0481: call BattleTech.CombatGameState get_Combat()
L_0486: callvirt BattleTech.CombatGameConstants get_Constants()
L_048b: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0490: ldfld System.Single floatieSizeMedium
L_0495: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_049a: Label15
L_049a: Label16
L_049a: Label17
L_049a: Label18
L_049a: Label19
L_049a: ldarg.0
L_049b: call BattleTech.CombatGameState get_Combat()
L_04a0: callvirt MessageCenter get_MessageCenter()
L_04a5: ldarg.2
L_04a6: ldfld System.String attackerId
L_04ab: ldarg.0
L_04ac: call System.String get_GUID()
L_04b1: ldarg.s 5
L_04b3: ldarg.3
L_04b4: newobj Void .ctor(String, String, Single, ArmorLocation)
L_04b9: callvirt Void PublishMessage(MessageCenterMessage)
L_04be: ldloc.1
L_04bf: ldc.r4 0
L_04c4: bgt.un Label20
L_04c9: ldc.i4.1
L_04ca: br Label25
L_04cf: Label20
L_04cf: ldarg.3
L_04d0: ldarg.2
L_04d1: ldfld BattleTech.AttackDirection[] attackDirections
L_04d6: ldarg.s 6
L_04d8: ldelem.i4
L_04d9: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04de: stloc.s 6 (BattleTech.ArmorLocation)
L_04e0: ldsfld HBS.Logging.ILog attackLogger
L_04e5: callvirt Boolean get_IsLogEnabled()
L_04ea: brfalse Label21
L_04ef: ldsfld HBS.Logging.ILog attackLogger
L_04f4: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04f9: ldc.i4.6
L_04fa: newarr System.Object
L_04ff: dup
L_0500: ldc.i4.0
L_0501: ldarg.2
L_0502: ldfld System.Int32 attackSequenceId
L_0507: box System.Int32
L_050c: stelem.ref
L_050d: dup
L_050e: ldc.i4.1
L_050f: ldarg.2
L_0510: ldfld System.Int32 attackWeaponIndex
L_0515: box System.Int32
L_051a: stelem.ref
L_051b: dup
L_051c: ldc.i4.2
L_051d: ldarg.1
L_051e: box System.Int32
L_0523: stelem.ref
L_0524: dup
L_0525: ldc.i4.3
L_0526: ldloca.s 3 (BattleTech.ChassisLocations)
L_0528: constrained. BattleTech.ChassisLocations
L_052e: callvirt System.String ToString()
L_0533: stelem.ref
L_0534: dup
L_0535: ldc.i4.4
L_0536: ldloc.1
L_0537: box System.Single
L_053c: stelem.ref
L_053d: dup
L_053e: ldc.i4.5
L_053f: ldloca.s 6 (BattleTech.ArmorLocation)
L_0541: constrained. BattleTech.ArmorLocation
L_0547: callvirt System.String ToString()
L_054c: stelem.ref
L_054d: call System.String Format(System.String, System.Object[])
L_0552: callvirt Void Log(System.Object)
L_0557: Label21
L_0557: ldsfld HBS.Logging.ILog damageLogger
L_055c: callvirt Boolean get_IsLogEnabled()
L_0561: brfalse Label22
L_0566: ldsfld HBS.Logging.ILog damageLogger
L_056b: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_0570: ldloca.s 3 (BattleTech.ChassisLocations)
L_0572: constrained. BattleTech.ChassisLocations
L_0578: callvirt System.String ToString()
L_057d: ldloc.1
L_057e: box System.Single
L_0583: ldloca.s 6 (BattleTech.ArmorLocation)
L_0585: constrained. BattleTech.ArmorLocation
L_058b: callvirt System.String ToString()
L_0590: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0595: callvirt Void Log(System.Object)
L_059a: Label22
L_059a: ldarg.0
L_059b: ldarg.1
L_059c: ldarg.2
L_059d: ldloc.s 6 (BattleTech.ArmorLocation)
L_059f: ldarg.s 4
L_05a1: ldloc.1
L_05a2: ldarg.s 6
L_05a4: ldarg.s 7
L_05a6: ldarg.s 8
L_05a8: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_05ad: Label23
L_05ad: Label24
L_05ad: Label25
L_05ad: stloc 12 (System.Boolean)
L_05af: Label0
L_05af: ldarg.0
L_05b0: call Void Postfix(BattleTech.Mech)
L_05b5: ldloc 12 (System.Boolean)
L_05b7: ret
DONE

### Patch BattleTech.AmmunitionBox, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: BattleTech.Pilot
L_0000: Local var 5: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0009: ret
DONE

### Harmony id=MechEngineer.Features.ArmorStructureChanges, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ArmorStructureChanges.ArmorStructureChangesSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.Mech, BattleTech.MechDef ToMechDef()
L_0000: Local var 0: BattleTech.MechDef
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.LocationLoadoutDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponent
L_0000: Local var 5: BattleTech.MechComponentRef
L_0000: Local var 6: System.Collections.IEnumerator
L_0000: Local var 7: BattleTech.ChassisLocations
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.String
L_0000: Local var 12: System.String
L_0000: Local var 13: BattleTech.LocationLoadoutDef
L_0000: Local var 14: BattleTech.LocationLoadoutDef
L_0000: Local var 15: System.IDisposable
L_0000: Local var 16: BattleTech.MechDef
L_0000: ldnull
L_0001: stloc 16 (BattleTech.MechDef)
L_0003: ldarg.0
L_0004: call BattleTech.MechDef get_MechDef()
L_0009: ldnull
L_000a: ldc.i4.1
L_000b: newobj Void .ctor(MechDef, String, Boolean)
L_0010: stloc.0
L_0011: newobj Void .ctor()
L_0016: stloc.1
L_0017: newobj Void .ctor()
L_001c: stloc.2
L_001d: ldarg.0
L_001e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0023: callvirt Enumerator GetEnumerator()
L_0028: stloc.3
.try
{
	L_0029: br Label1
	L_002e: Label2
	L_002e: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0030: call BattleTech.MechComponent get_Current()
	L_0035: stloc.s 4 (BattleTech.MechComponent)
	L_0037: ldloc.s 4 (BattleTech.MechComponent)
	L_0039: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_003e: ldnull
	L_003f: newobj Void .ctor(MechComponentRef, String)
	L_0044: stloc.s 5 (BattleTech.MechComponentRef)
	L_0046: ldloc.s 5 (BattleTech.MechComponentRef)
	L_0048: ldloc.s 4 (BattleTech.MechComponent)
	L_004a: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
	L_004f: stfld BattleTech.ComponentDamageLevel DamageLevel
	L_0054: ldloc.2
	L_0055: ldloc.s 5 (BattleTech.MechComponentRef)
	L_0057: callvirt Void Add(BattleTech.MechComponentRef)
	L_005c: Label1
	L_005c: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_005e: call Boolean MoveNext()
	L_0063: brtrue Label2
	L_0068: leave Label3
	L_006d: leave (autogenerated)
} // end try
.finally
{
	L_0072: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0074: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_007a: callvirt Void Dispose()
	L_007f: endfinally
	L_0080: leave (autogenerated)
} // end handler
L_0081: Label3
L_0081: ldtoken BattleTech.ChassisLocations
L_0086: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_008b: call System.Array GetValues(System.Type)
L_0090: callvirt System.Collections.IEnumerator GetEnumerator()
L_0095: stloc.s 6 (System.Collections.IEnumerator)
.try
{
	L_0097: br Label4
	L_009c: Label20
	L_009c: ldloc.s 6 (System.Collections.IEnumerator)
	L_009e: callvirt System.Object get_Current()
	L_00a3: unbox.any BattleTech.ChassisLocations
	L_00a8: stloc.s 7 (BattleTech.ChassisLocations)
	L_00aa: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00ac: brfalse Label5
	L_00b1: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00b3: ldc.i4 255
	L_00b8: beq Label6
	L_00bd: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00bf: ldc.i4.s 34
	L_00c1: beq Label7
	L_00c6: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00c8: ldc.i4 192
	L_00cd: beq Label8
	L_00d2: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00d4: ldc.i4.s 28
	L_00d6: beq Label9
	L_00db: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00dd: ldc.i4.s 62
	L_00df: beq Label10
	L_00e4: ldc.r4 0
	L_00e9: stloc.s 8 (System.Single)
	L_00eb: ldc.r4 -1
	L_00f0: stloc.s 9 (System.Single)
	L_00f2: ldc.r4 0
	L_00f7: stloc.s 10 (System.Single)
	L_00f9: ldarg.0
	L_00fa: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00fc: call System.String GetStringForArmorLocation(BattleTech.ArmorLocation)
	L_0101: stloc.s 11 (System.String)
	L_0103: ldloc.s 11 (System.String)
	L_0105: call Boolean IsNullOrEmpty(System.String)
	L_010a: brtrue Label11
	L_010f: ldarg.0
	L_0110: ldfld BattleTech.StatCollection statCollection
	L_0115: ldloc.s 11 (System.String)
	L_0117: callvirt Single GetValue[Single](System.String)
	L_011c: stloc.s 8 (System.Single)
	L_011e: br Label12
	L_0123: Label11
	L_0123: ldsfld HBS.Logging.ILog initLogger
	L_0128: ldstr "Cannot find	armor for: "
	L_012d: ldloc.s 7 (BattleTech.ChassisLocations)
	L_012f: box BattleTech.ChassisLocations
	L_0134: call System.String Concat(System.Object, System.Object)
	L_0139: callvirt Void LogError(System.Object)
	L_013e: Label12
	L_013e: ldarg.0
	L_013f: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0141: call System.String GetStringForStructureLocation(BattleTech.ChassisLocations)
	L_0146: stloc.s 12 (System.String)
	L_0148: ldloc.s 12 (System.String)
	L_014a: call Boolean IsNullOrEmpty(System.String)
	L_014f: brtrue Label13
	L_0154: ldarg.0
	L_0155: ldfld BattleTech.StatCollection statCollection
	L_015a: ldloc.s 12 (System.String)
	L_015c: callvirt Single GetValue[Single](System.String)
	L_0161: stloc.s 10 (System.Single)
	L_0163: br Label14
	L_0168: Label13
	L_0168: ldsfld HBS.Logging.ILog initLogger
	L_016d: ldstr "Cannot find	structure for: "
	L_0172: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0174: box BattleTech.ChassisLocations
	L_0179: call System.String Concat(System.Object, System.Object)
	L_017e: callvirt Void LogError(System.Object)
	L_0183: Label14
	L_0183: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0185: ldc.i4.4
	L_0186: bne.un Label15
	L_018b: ldarg.0
	L_018c: call Single get_LeftTorsoRearArmor()
	L_0191: stloc.s 9 (System.Single)
	L_0193: br Label16
	L_0198: Label15
	L_0198: ldloc.s 7 (BattleTech.ChassisLocations)
	L_019a: ldc.i4.s 16
	L_019c: bne.un Label17
	L_01a1: ldarg.0
	L_01a2: call Single get_RightTorsoRearArmor()
	L_01a7: stloc.s 9 (System.Single)
	L_01a9: br Label18
	L_01ae: Label17
	L_01ae: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01b0: ldc.i4.8
	L_01b1: bne.un Label19
	L_01b6: ldarg.0
	L_01b7: call Single get_CenterTorsoRearArmor()
	L_01bc: stloc.s 9 (System.Single)
	L_01be: Label16
	L_01be: Label18
	L_01be: Label19
	L_01be: ldarg.0
	L_01bf: call BattleTech.MechDef get_MechDef()
	L_01c4: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01c6: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_01cb: stloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01cd: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01cf: ldloc.s 8 (System.Single)
	L_01d1: ldloc.s 9 (System.Single)
	L_01d3: ldloc.s 10 (System.Single)
	L_01d5: ldloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01d7: ldfld System.Single AssignedArmor
	L_01dc: ldloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01de: ldfld System.Single AssignedRearArmor
	L_01e3: ldc.i4.0
	L_01e4: newobj Void .ctor(ChassisLocations, Single, Single, Single, Single, Single, LocationDamageLevel)
	L_01e9: stloc.s 14 (BattleTech.LocationLoadoutDef)
	L_01eb: ldloc.1
	L_01ec: ldloc.s 14 (BattleTech.LocationLoadoutDef)
	L_01ee: callvirt Void Add(BattleTech.LocationLoadoutDef)
	L_01f3: Label4
	L_01f3: Label5
	L_01f3: Label6
	L_01f3: Label7
	L_01f3: Label8
	L_01f3: Label9
	L_01f3: Label10
	L_01f3: ldloc.s 6 (System.Collections.IEnumerator)
	L_01f5: callvirt Boolean MoveNext()
	L_01fa: brtrue Label20
	L_01ff: leave Label21
	L_0204: leave (autogenerated)
} // end try
.finally
{
	L_0209: ldloc.s 6 (System.Collections.IEnumerator)
	L_020b: isinst System.IDisposable
	L_0210: stloc.s 15 (System.IDisposable)
	L_0212: ldloc.s 15 (System.IDisposable)
	L_0214: brfalse Label22
	L_0219: ldloc.s 15 (System.IDisposable)
	L_021b: callvirt Void Dispose()
	L_0220: Label22
	L_0220: endfinally
	L_0221: leave (autogenerated)
} // end handler
L_0222: Label21
L_0222: ldloc.0
L_0223: ldloc.2
L_0224: callvirt BattleTech.MechComponentRef[] ToArray()
L_0229: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_022e: ldloc.0
L_022f: ldloc.1
L_0230: callvirt BattleTech.LocationLoadoutDef[] ToArray()
L_0235: callvirt Void SetLocations(BattleTech.LocationLoadoutDef[])
L_023a: ldloc.0
L_023b: stloc 16 (BattleTech.MechDef)
L_023d: ldarg.0
L_023e: ldloc 16 (BattleTech.MechDef)
L_0240: call Void Postfix(BattleTech.Mech, BattleTech.MechDef)
L_0245: ldloc 16 (BattleTech.MechDef)
L_0247: ret
DONE

### Patch BattleTech.Mech, Single get_ArmorMultiplier()
L_0000: Local var 0: BattleTech.WeightClass
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc 1 (System.Single)
L_0006: ldarg.0
L_0007: call BattleTech.WeightClass get_weightClass()
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 40
L_0010: bgt Label1
L_0015: ldloc.0
L_0016: ldc.i4.s 20
L_0018: beq Label2
L_001d: ldloc.0
L_001e: ldc.i4.s 40
L_0020: beq Label3
L_0025: br Label4
L_002a: Label1
L_002a: ldloc.0
L_002b: ldc.i4.s 60
L_002d: beq Label5
L_0032: ldloc.0
L_0033: ldc.i4.s 80
L_0035: bne.un Label6
L_003a: ldarg.0
L_003b: call BattleTech.CombatGameState get_Combat()
L_0040: callvirt BattleTech.CombatGameConstants get_Constants()
L_0045: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_004a: ldfld System.Single ArmorMultiplierAssault
L_004f: br Label7
L_0054: Label5
L_0054: ldarg.0
L_0055: call BattleTech.CombatGameState get_Combat()
L_005a: callvirt BattleTech.CombatGameConstants get_Constants()
L_005f: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0064: ldfld System.Single ArmorMultiplierHeavy
L_0069: br Label8
L_006e: Label3
L_006e: ldarg.0
L_006f: call BattleTech.CombatGameState get_Combat()
L_0074: callvirt BattleTech.CombatGameConstants get_Constants()
L_0079: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_007e: ldfld System.Single ArmorMultiplierMedium
L_0083: br Label9
L_0088: Label2
L_0088: ldarg.0
L_0089: call BattleTech.CombatGameState get_Combat()
L_008e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0093: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0098: ldfld System.Single ArmorMultiplierLight
L_009d: br Label10
L_00a2: Label4
L_00a2: Label6
L_00a2: ldc.r4 1
L_00a7: Label7
L_00a7: Label8
L_00a7: Label9
L_00a7: Label10
L_00a7: stloc 1 (System.Single)
L_00a8: ldarg.0
L_00a9: ldloca 1 (System.Single)
L_00ab: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00b0: ldloc 1 (System.Single)
L_00b1: ret
DONE

### Patch BattleTech.Mech, Single get_StructureMultiplier()
L_0000: Local var 0: BattleTech.WeightClass
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc 1 (System.Single)
L_0006: ldarg.0
L_0007: call BattleTech.WeightClass get_weightClass()
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 40
L_0010: bgt Label1
L_0015: ldloc.0
L_0016: ldc.i4.s 20
L_0018: beq Label2
L_001d: ldloc.0
L_001e: ldc.i4.s 40
L_0020: beq Label3
L_0025: br Label4
L_002a: Label1
L_002a: ldloc.0
L_002b: ldc.i4.s 60
L_002d: beq Label5
L_0032: ldloc.0
L_0033: ldc.i4.s 80
L_0035: bne.un Label6
L_003a: ldarg.0
L_003b: call BattleTech.CombatGameState get_Combat()
L_0040: callvirt BattleTech.CombatGameConstants get_Constants()
L_0045: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_004a: ldfld System.Single StructureMultiplierAssault
L_004f: br Label7
L_0054: Label5
L_0054: ldarg.0
L_0055: call BattleTech.CombatGameState get_Combat()
L_005a: callvirt BattleTech.CombatGameConstants get_Constants()
L_005f: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0064: ldfld System.Single StructureMultiplierHeavy
L_0069: br Label8
L_006e: Label3
L_006e: ldarg.0
L_006f: call BattleTech.CombatGameState get_Combat()
L_0074: callvirt BattleTech.CombatGameConstants get_Constants()
L_0079: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_007e: ldfld System.Single StructureMultiplierMedium
L_0083: br Label9
L_0088: Label2
L_0088: ldarg.0
L_0089: call BattleTech.CombatGameState get_Combat()
L_008e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0093: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0098: ldfld System.Single StructureMultiplierLight
L_009d: br Label10
L_00a2: Label4
L_00a2: Label6
L_00a2: ldc.r4 1
L_00a7: Label7
L_00a7: Label8
L_00a7: Label9
L_00a7: Label10
L_00a7: stloc 1 (System.Single)
L_00a8: ldarg.0
L_00a9: ldloca 1 (System.Single)
L_00ab: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00b0: ldloc 1 (System.Single)
L_00b1: ret
DONE

### Harmony id=MechEngineer.Features.HardpointFix, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.HardpointFix.HardpointFixSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.MechDef, Void RefreshInventory()
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: BattleTech.MechComponentRef
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechDef)
L_0006: newobj Void .ctor()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: call Void InsertFixedEquipmentIntoInventory()
L_0012: ldc.i4.0
L_0013: stloc.2
L_0014: br Label1
L_0019: Label9
L_0019: ldarg.0
L_001a: ldfld BattleTech.MechComponentRef[] inventory
L_001f: ldloc.2
L_0020: ldelem.ref
L_0021: stloc.1
L_0022: ldloc.1
L_0023: brtrue Label2
L_0028: ldstr "Found an empty inventory slot"
L_002d: call Void Log(System.Object)
L_0032: br Label3
L_0037: Label2
L_0037: ldloc.1
L_0038: callvirt BattleTech.Data.DataManager get_DataManager()
L_003d: brtrue Label4
L_0042: ldloc.1
L_0043: ldarg.0
L_0044: ldfld BattleTech.Data.DataManager dataManager
L_0049: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004e: Label4
L_004e: ldloc.1
L_004f: callvirt Void RefreshComponentDef()
L_0054: ldloc.1
L_0055: ldfld System.Boolean hasPrefabName
L_005a: brtrue Label5
L_005f: ldloc.1
L_0060: callvirt BattleTech.MechComponentDef get_Def()
L_0065: brfalse Label6
L_006a: ldarg.0
L_006b: call BattleTech.ChassisDef get_Chassis()
L_0070: brfalse Label7
L_0075: ldarg.0
L_0076: call BattleTech.ChassisDef get_Chassis()
L_007b: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0080: brfalse Label8
L_0085: ldloc.1
L_0086: ldarg.0
L_0087: call BattleTech.ChassisDef get_Chassis()
L_008c: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0091: ldloc.1
L_0092: ldarg.0
L_0093: call BattleTech.ChassisDef get_Chassis()
L_0098: callvirt System.String get_PrefabBase()
L_009d: ldloc.1
L_009e: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_00a3: stloc.3
L_00a4: ldloca.s 3 (BattleTech.ChassisLocations)
L_00a6: constrained. BattleTech.ChassisLocations
L_00ac: callvirt System.String ToString()
L_00b1: callvirt System.String ToLower()
L_00b6: ldloca.s 0 (System.Collections.Generic.List`1[System.String])
L_00b8: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_00bd: stfld System.String prefabName
L_00c2: ldloc.1
L_00c3: ldc.i4.1
L_00c4: stfld System.Boolean hasPrefabName
L_00c9: Label3
L_00c9: Label5
L_00c9: Label6
L_00c9: Label7
L_00c9: Label8
L_00c9: ldloc.2
L_00ca: ldc.i4.1
L_00cb: add
L_00cc: stloc.2
L_00cd: Label1
L_00cd: ldloc.2
L_00ce: ldarg.0
L_00cf: ldfld BattleTech.MechComponentRef[] inventory
L_00d4: ldlen
L_00d5: conv.i4
L_00d6: blt Label9
L_00db: ldarg.0
L_00dc: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.Data.DataManager dataManager
L_00e7: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00f2: callvirt Void RefreshComponentDef()
L_00f7: ldarg.0
L_00f8: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00fd: callvirt BattleTech.MechComponentDef get_Def()
L_0102: brfalse Label10
L_0107: ldarg.0
L_0108: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_010d: ldfld System.Boolean hasPrefabName
L_0112: brtrue Label11
L_0117: ldarg.0
L_0118: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_011d: ldstr "chrPrfWeap_generic_melee"
L_0122: stfld System.String prefabName
L_0127: ldarg.0
L_0128: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_012d: ldc.i4.1
L_012e: stfld System.Boolean hasPrefabName
L_0133: Label10
L_0133: Label11
L_0133: ldarg.0
L_0134: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0139: ldarg.0
L_013a: ldfld BattleTech.Data.DataManager dataManager
L_013f: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0144: ldarg.0
L_0145: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_014a: callvirt Void RefreshComponentDef()
L_014f: ldarg.0
L_0150: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0155: callvirt BattleTech.MechComponentDef get_Def()
L_015a: brfalse Label12
L_015f: ldarg.0
L_0160: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0165: ldfld System.Boolean hasPrefabName
L_016a: brtrue Label13
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0175: ldstr "chrPrfWeap_generic_melee"
L_017a: stfld System.String prefabName
L_017f: ldarg.0
L_0180: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0185: ldc.i4.1
L_0186: stfld System.Boolean hasPrefabName
L_018b: Label12
L_018b: Label13
L_018b: ldarg.0
L_018c: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_0191: ldarg.0
L_0192: ldfld BattleTech.Data.DataManager dataManager
L_0197: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_019c: ldarg.0
L_019d: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01a2: callvirt Void RefreshComponentDef()
L_01a7: ldarg.0
L_01a8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01ad: callvirt BattleTech.MechComponentDef get_Def()
L_01b2: brfalse Label14
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01bd: ldfld System.Boolean hasPrefabName
L_01c2: brtrue Label15
L_01c7: ldarg.0
L_01c8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01cd: ldstr "chrPrfWeap_generic_melee"
L_01d2: stfld System.String prefabName
L_01d7: ldarg.0
L_01d8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01dd: ldc.i4.1
L_01de: stfld System.Boolean hasPrefabName
L_01e3: Label14
L_01e3: Label15
L_01e3: ldarg.0
L_01e4: call Void Postfix(BattleTech.MechDef)
L_01e9: ret
DONE

### Patch BattleTech.MechHardpointRules, System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_0000: Local var 0: BattleTech.MechHardpointRules+<>c__DisplayClass1_0
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.WeaponCategory
L_0000: Local var 3: BattleTech.WeaponSubType
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: BattleTech.HardpointDataDef+_WeaponHardpointData
L_0000: Local var 7: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 12: System.Boolean
L_0000: Local var 13: System.Int32
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.String
L_0000: ldnull
L_0001: stloc 16 (System.String)
L_0003: ldarg 0
L_0009: ldarg 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldarg 4
L_0021: ldloca 16 (System.String)
L_0023: call Boolean Prefix(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef, System.String ByRef)
L_0028: brfalse Label0
L_002d: newobj Void .ctor()
L_0032: stloc.0
L_0033: ldarg.1
L_0034: callvirt Int32 get_HardpointSlot()
L_0039: ldc.i4.0
L_003a: bge Label1
L_003f: ldstr ""
L_0044: br Label45
L_0049: Label1
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentDef get_Def()
L_004f: isinst BattleTech.WeaponDef
L_0054: stloc.1
L_0055: ldc.i4.0
L_0056: stloc.2
L_0057: ldc.i4.0
L_0058: stloc.3
L_0059: ldloc.0
L_005a: ldstr ""
L_005f: stfld System.String desiredPrefabName
L_0064: ldarg.1
L_0065: callvirt BattleTech.MechComponentDef get_Def()
L_006a: callvirt System.String get_PrefabIdentifier()
L_006f: callvirt System.String ToLower()
L_0074: stloc.s 4 (System.String)
L_0076: ldloc.0
L_0077: ldstr ""
L_007c: stfld System.String hardpointStr
L_0081: ldloc.1
L_0082: brfalse Label2
L_0087: ldloc.1
L_0088: callvirt BattleTech.WeaponCategory get_Category()
L_008d: stloc.2
L_008e: ldloc.1
L_008f: callvirt BattleTech.WeaponSubType get_WeaponSubType()
L_0094: stloc.3
L_0095: ldloc.2
L_0096: ldc.i4.1
L_0097: sub
L_0098: switch Labels3,4,5,6,7,8
L_00b5: br Label9
L_00ba: Label3
L_00ba: ldloc.0
L_00bb: ldstr "_bh"
L_00c0: stfld System.String hardpointStr
L_00c5: br Label10
L_00ca: Label4
L_00ca: ldloc.0
L_00cb: ldstr "_eh"
L_00d0: stfld System.String hardpointStr
L_00d5: br Label11
L_00da: Label5
L_00da: ldloc.0
L_00db: ldstr "_mh"
L_00e0: stfld System.String hardpointStr
L_00e5: br Label12
L_00ea: Label6
L_00ea: ldloc.0
L_00eb: ldstr "_ah"
L_00f0: stfld System.String hardpointStr
L_00f5: br Label13
L_00fa: Label8
L_00fa: ldstr "chrPrfWeap_generic_melee"
L_00ff: br Label46
L_0104: Label7
L_0104: Label9
L_0104: Label10
L_0104: Label11
L_0104: Label12
L_0104: Label13
L_0104: ldloc.0
L_0105: ldstr "chrPrfWeap_{0}_{1}_{2}{3}"
L_010a: ldc.i4.4
L_010b: newarr System.Object
L_0110: dup
L_0111: ldc.i4.0
L_0112: ldarg.2
L_0113: stelem.ref
L_0114: dup
L_0115: ldc.i4.1
L_0116: ldarg.3
L_0117: stelem.ref
L_0118: dup
L_0119: ldc.i4.2
L_011a: ldloc.s 4 (System.String)
L_011c: stelem.ref
L_011d: dup
L_011e: ldc.i4.3
L_011f: ldloc.0
L_0120: ldfld System.String hardpointStr
L_0125: stelem.ref
L_0126: call System.String Format(System.String, System.Object[])
L_012b: stfld System.String desiredPrefabName
L_0130: br Label14
L_0135: Label2
L_0135: ldstr ""
L_013a: br Label47
L_013f: Label14
L_013f: newobj Void .ctor()
L_0144: stloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0146: ldloca.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0148: ldstr ""
L_014d: ldc.i4.0
L_014e: newarr System.String[]
L_0153: ldc.i4.0
L_0154: newarr System.String
L_0159: ldc.i4.0
L_015a: newarr System.String
L_015f: call Void .ctor(String, String[][], String[], String[])
L_0164: ldc.i4.0
L_0165: stloc.s 9 (System.Int32)
L_0167: br Label15
L_016c: Label25
L_016c: ldarg.0
L_016d: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0172: ldloc.s 9 (System.Int32)
L_0174: ldelema BattleTech.HardpointDataDef+_WeaponHardpointData
L_0179: ldfld System.String location
L_017e: ldarg.3
L_017f: call Boolean op_Equality(System.String, System.String)
L_0184: brfalse Label16
L_0189: ldarg.0
L_018a: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_018f: ldloc.s 9 (System.Int32)
L_0191: ldelem BattleTech.HardpointDataDef+_WeaponHardpointData
L_0196: stloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0198: ldc.i4.0
L_0199: stloc.s 10 (System.Int32)
L_019b: br Label17
L_01a0: Label23
L_01a0: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_01a2: ldfld System.String[][] weapons
L_01a7: ldloc.s 10 (System.Int32)
L_01a9: ldelem.ref
L_01aa: newobj Void .ctor(IEnumerable`1)
L_01af: stloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01b1: ldc.i4.1
L_01b2: stloc.s 12 (System.Boolean)
L_01b4: ldc.i4.0
L_01b5: stloc.s 13 (System.Int32)
L_01b7: br Label18
L_01bc: Label21
L_01bc: ldloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01be: ldarg.s 4
L_01c0: ldind.ref
L_01c1: ldloc.s 13 (System.Int32)
L_01c3: callvirt System.String get_Item(Int32)
L_01c8: callvirt Boolean Contains(System.String)
L_01cd: brfalse Label19
L_01d2: ldc.i4.0
L_01d3: stloc.s 12 (System.Boolean)
L_01d5: br Label20
L_01da: Label19
L_01da: ldloc.s 13 (System.Int32)
L_01dc: ldc.i4.1
L_01dd: add
L_01de: stloc.s 13 (System.Int32)
L_01e0: Label18
L_01e0: ldloc.s 13 (System.Int32)
L_01e2: ldarg.s 4
L_01e4: ldind.ref
L_01e5: callvirt Int32 get_Count()
L_01ea: blt Label21
L_01ef: Label20
L_01ef: ldloc.s 12 (System.Boolean)
L_01f1: brfalse Label22
L_01f6: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_01f8: ldloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01fa: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01ff: Label22
L_01ff: ldloc.s 10 (System.Int32)
L_0201: ldc.i4.1
L_0202: add
L_0203: stloc.s 10 (System.Int32)
L_0205: Label17
L_0205: ldloc.s 10 (System.Int32)
L_0207: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0209: ldfld System.String[][] weapons
L_020e: ldlen
L_020f: conv.i4
L_0210: blt Label23
L_0215: br Label24
L_021a: Label16
L_021a: ldloc.s 9 (System.Int32)
L_021c: ldc.i4.1
L_021d: add
L_021e: stloc.s 9 (System.Int32)
L_0220: Label15
L_0220: ldloc.s 9 (System.Int32)
L_0222: ldarg.0
L_0223: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0228: ldlen
L_0229: conv.i4
L_022a: blt Label25
L_022f: Label24
L_022f: ldloc.2
L_0230: ldc.i4.4
L_0231: bne.un Label26
L_0236: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0238: ldloc.0
L_0239: ldftn Boolean <GetComponentPrefabName>b__0(System.String)
L_023f: newobj Void .ctor(Object, IntPtr)
L_0244: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_0249: pop
L_024a: br Label27
L_024f: Label26
L_024f: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0251: ldloc.0
L_0252: ldftn Boolean <GetComponentPrefabName>b__1(System.String)
L_0258: newobj Void .ctor(Object, IntPtr)
L_025d: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_0262: pop
L_0263: Label27
L_0263: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0265: newobj Void .ctor(IEnumerable`1)
L_026a: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_026c: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_026e: ldloc.0
L_026f: ldftn Boolean <GetComponentPrefabName>b__2(System.String)
L_0275: newobj Void .ctor(Object, IntPtr)
L_027a: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_027f: pop
L_0280: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0282: callvirt Int32 get_Count()
L_0287: ldc.i4.1
L_0288: bge Label28
L_028d: ldloc.2
L_028e: ldc.i4.1
L_028f: sub
L_0290: switch Labels29,30,31,32
L_02a5: br Label33
L_02aa: Label29
L_02aa: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02ac: ldloc.s 4 (System.String)
L_02ae: ldloc.0
L_02af: ldfld System.String hardpointStr
L_02b4: call System.Collections.Generic.List`1[System.String] GetFallbackBallisticNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02b9: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02bb: br Label34
L_02c0: Label30
L_02c0: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02c2: ldloc.s 4 (System.String)
L_02c4: ldloc.0
L_02c5: ldfld System.String hardpointStr
L_02ca: call System.Collections.Generic.List`1[System.String] GetFallbackEnergyNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02cf: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02d1: br Label35
L_02d6: Label31
L_02d6: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02d8: ldloc.s 4 (System.String)
L_02da: ldloc.0
L_02db: ldfld System.String hardpointStr
L_02e0: call System.Collections.Generic.List`1[System.String] GetFallbackMissileNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02e5: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02e7: br Label36
L_02ec: Label32
L_02ec: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02ee: ldloc.3
L_02ef: ldloc.s 4 (System.String)
L_02f1: ldloc.0
L_02f2: ldfld System.String hardpointStr
L_02f7: call System.Collections.Generic.List`1[System.String] GetFallbackSmallNames(System.Collections.Generic.List`1[System.String], BattleTech.WeaponSubType, System.String, System.String)
L_02fc: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02fe: Label28
L_02fe: Label33
L_02fe: Label34
L_02fe: Label35
L_02fe: Label36
L_02fe: ldc.i4 2147483647
L_0303: stloc.s 8 (System.Int32)
L_0305: ldc.i4.0
L_0306: stloc.s 14 (System.Int32)
L_0308: br Label37
L_030d: Label39
L_030d: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_030f: ldloc.s 14 (System.Int32)
L_0311: callvirt System.String get_Item(Int32)
L_0316: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0318: ldloc.s 14 (System.Int32)
L_031a: callvirt System.String get_Item(Int32)
L_031f: callvirt Int32 get_Length()
L_0324: ldc.i4.1
L_0325: sub
L_0326: callvirt System.String Substring(Int32)
L_032b: call Int32 Parse(System.String)
L_0330: stloc.s 15 (System.Int32)
L_0332: ldloc.s 15 (System.Int32)
L_0334: ldloc.s 8 (System.Int32)
L_0336: bge Label38
L_033b: ldloc.0
L_033c: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_033e: ldloc.s 14 (System.Int32)
L_0340: callvirt System.String get_Item(Int32)
L_0345: stfld System.String desiredPrefabName
L_034a: ldloc.s 15 (System.Int32)
L_034c: stloc.s 8 (System.Int32)
L_034e: Label38
L_034e: ldloc.s 14 (System.Int32)
L_0350: ldc.i4.1
L_0351: add
L_0352: stloc.s 14 (System.Int32)
L_0354: Label37
L_0354: ldloc.s 14 (System.Int32)
L_0356: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0358: callvirt Int32 get_Count()
L_035d: blt Label39
L_0362: ldloc.s 8 (System.Int32)
L_0364: ldc.i4 2147483647
L_0369: bge Label40
L_036e: ldarg.s 4
L_0370: ldind.ref
L_0371: ldloc.0
L_0372: ldfld System.String desiredPrefabName
L_0377: callvirt Void Add(System.String)
L_037c: ldloc.0
L_037d: ldfld System.String desiredPrefabName
L_0382: br Label48
L_0387: Label40
L_0387: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0389: callvirt Int32 get_Count()
L_038e: ldc.i4.0
L_038f: ble Label41
L_0394: ldarg.s 4
L_0396: ldind.ref
L_0397: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0399: ldc.i4.0
L_039a: callvirt System.String get_Item(Int32)
L_039f: callvirt Void Add(System.String)
L_03a4: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_03a6: ldc.i4.0
L_03a7: callvirt System.String get_Item(Int32)
L_03ac: br Label49
L_03b1: Label41
L_03b1: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03b3: ldfld System.String[][] weapons
L_03b8: ldlen
L_03b9: brfalse Label42
L_03be: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03c0: ldfld System.String[][] weapons
L_03c5: ldc.i4.0
L_03c6: ldelem.ref
L_03c7: ldlen
L_03c8: brfalse Label43
L_03cd: ldarg.s 4
L_03cf: ldind.ref
L_03d0: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03d2: ldfld System.String[][] weapons
L_03d7: ldc.i4.0
L_03d8: ldelem.ref
L_03d9: ldc.i4.0
L_03da: ldelem.ref
L_03db: callvirt Boolean Contains(System.String)
L_03e0: brtrue Label44
L_03e5: ldarg.s 4
L_03e7: ldind.ref
L_03e8: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03ea: ldfld System.String[][] weapons
L_03ef: ldc.i4.0
L_03f0: ldelem.ref
L_03f1: ldc.i4.0
L_03f2: ldelem.ref
L_03f3: callvirt Void Add(System.String)
L_03f8: Label44
L_03f8: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03fa: ldfld System.String[][] weapons
L_03ff: ldc.i4.0
L_0400: ldelem.ref
L_0401: ldc.i4.0
L_0402: ldelem.ref
L_0403: br Label50
L_0408: Label42
L_0408: Label43
L_0408: ldsfld HBS.Logging.ILog logger
L_040d: ldc.i4.7
L_040e: newarr System.String
L_0413: dup
L_0414: ldc.i4.0
L_0415: ldstr "GetComponentPrefabName failed to find a prefab name for unit "
L_041a: stelem.ref
L_041b: dup
L_041c: ldc.i4.1
L_041d: ldarg.2
L_041e: stelem.ref
L_041f: dup
L_0420: ldc.i4.2
L_0421: ldstr " and component "
L_0426: stelem.ref
L_0427: dup
L_0428: ldc.i4.3
L_0429: ldarg.1
L_042a: callvirt BattleTech.MechComponentDef get_Def()
L_042f: callvirt BattleTech.DescriptionDef get_Description()
L_0434: callvirt System.String get_Id()
L_0439: stelem.ref
L_043a: dup
L_043b: ldc.i4.4
L_043c: ldstr ", ideal match name was: "
L_0441: stelem.ref
L_0442: dup
L_0443: ldc.i4.5
L_0444: ldloc.0
L_0445: ldfld System.String desiredPrefabName
L_044a: stelem.ref
L_044b: dup
L_044c: ldc.i4.6
L_044d: ldstr ", falling back to default item"
L_0452: stelem.ref
L_0453: call System.String Concat(System.String[])
L_0458: callvirt Void LogWarning(System.Object)
L_045d: ldarg.0
L_045e: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0463: ldc.i4.0
L_0464: ldelema BattleTech.HardpointDataDef+_WeaponHardpointData
L_0469: ldfld System.String[][] weapons
L_046e: ldc.i4.0
L_046f: ldelem.ref
L_0470: ldc.i4.0
L_0471: ldelem.ref
L_0472: Label45
L_0472: Label46
L_0472: Label47
L_0472: Label48
L_0472: Label49
L_0472: Label50
L_0472: stloc 16 (System.String)
L_0474: Label0
L_0474: ldloc 16 (System.String)
L_0476: ret
DONE

### Patch BattleTech.Mech, Void InitGameRep(UnityEngine.Transform)
L_0000: Local var 0: System.String
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: UnityEngine.Transform
L_0000: Local var 4: UnityEngine.Transform
L_0000: Local var 5: System.Boolean
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 10: BattleTech.Weapon
L_0000: Local var 11: UnityEngine.Transform
L_0000: Local var 12: System.String
L_0000: Local var 13: BattleTech.ChassisLocations
L_0000: Local var 14: BattleTech.WeaponRepresentation
L_0000: Local var 15: UnityEngine.SkinnedMeshRenderer[]
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 18: BattleTech.MechComponent
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.String
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.Mech, UnityEngine.Transform)
L_000c: ldarg.0
L_000d: call BattleTech.MechDef get_MechDef()
L_0012: callvirt BattleTech.ChassisDef get_Chassis()
L_0017: callvirt System.String get_PrefabIdentifier()
L_001c: stloc.0
L_001d: ldsfld HBS.Logging.ILog initLogger
L_0022: callvirt Boolean get_IsLogEnabled()
L_0027: brfalse Label1
L_002c: ldsfld HBS.Logging.ILog initLogger
L_0031: ldstr "InitGameRep Loading this -"
L_0036: ldloc.0
L_0037: call System.String Concat(System.String, System.String)
L_003c: callvirt Void Log(System.Object)
L_0041: Label1
L_0041: ldarg.0
L_0042: call BattleTech.CombatGameState get_Combat()
L_0047: callvirt BattleTech.Data.DataManager get_DataManager()
L_004c: ldloc.0
L_004d: ldc.i4.s 45
L_004f: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0051: initobj System.Nullable`1[UnityEngine.Vector3]
L_0057: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0059: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_005b: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0061: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0063: ldnull
L_0064: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0069: stloc.1
L_006a: ldarg.0
L_006b: ldloc.1
L_006c: callvirt BattleTech.MechRepresentation GetComponent[MechRepresentation]()
L_0071: stfld BattleTech.GameRepresentation _gameRep
L_0076: ldloc.1
L_0077: callvirt UnityEngine.Animator GetComponent[Animator]()
L_007c: ldc.i4.1
L_007d: callvirt Void set_enabled(Boolean)
L_0082: ldarg.0
L_0083: call BattleTech.MechRepresentation get_GameRep()
L_0088: ldarg.0
L_0089: ldarg.1
L_008a: ldc.i4.0
L_008b: callvirt Void Init(BattleTech.Mech, UnityEngine.Transform, Boolean)
L_0090: ldarg.1
L_0091: ldnull
L_0092: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0097: brfalse Label2
L_009c: ldloc.1
L_009d: callvirt UnityEngine.Transform get_transform()
L_00a2: ldarg.0
L_00a3: ldfld UnityEngine.Vector3 currentPosition
L_00a8: callvirt Void set_position(UnityEngine.Vector3)
L_00ad: ldloc.1
L_00ae: callvirt UnityEngine.Transform get_transform()
L_00b3: ldarg.0
L_00b4: ldfld UnityEngine.Quaternion currentRotation
L_00b9: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00be: Label2
L_00be: newobj Void .ctor()
L_00c3: stloc.2
L_00c4: ldarg.0
L_00c5: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00ca: callvirt Enumerator GetEnumerator()
L_00cf: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_00d1: br Label3
	L_00d6: Label5
	L_00d6: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_00d8: call BattleTech.Weapon get_Current()
	L_00dd: stloc.s 10 (BattleTech.Weapon)
	L_00df: ldloc.s 10 (BattleTech.Weapon)
	L_00e1: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_00e6: ldarg.0
	L_00e7: call BattleTech.MechDef get_MechDef()
	L_00ec: callvirt BattleTech.ChassisDef get_Chassis()
	L_00f1: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
	L_00f6: ldloc.s 10 (BattleTech.Weapon)
	L_00f8: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_00fd: ldarg.0
	L_00fe: call BattleTech.MechDef get_MechDef()
	L_0103: callvirt BattleTech.ChassisDef get_Chassis()
	L_0108: callvirt System.String get_PrefabBase()
	L_010d: ldloc.s 10 (BattleTech.Weapon)
	L_010f: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_0114: callvirt BattleTech.ChassisLocations get_MountedLocation()
	L_0119: stloc.s 13 (BattleTech.ChassisLocations)
	L_011b: ldloca.s 13 (BattleTech.ChassisLocations)
	L_011d: constrained. BattleTech.ChassisLocations
	L_0123: callvirt System.String ToString()
	L_0128: callvirt System.String ToLower()
	L_012d: ldloca.s 2 (System.Collections.Generic.List`1[System.String])
	L_012f: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
	L_0134: stfld System.String prefabName
	L_0139: ldloc.s 10 (BattleTech.Weapon)
	L_013b: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_0140: ldc.i4.1
	L_0141: stfld System.Boolean hasPrefabName
	L_0146: ldarg.0
	L_0147: ldloc.s 10 (BattleTech.Weapon)
	L_0149: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_014e: callvirt BattleTech.ChassisLocations get_MountedLocation()
	L_0153: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
	L_0158: stloc.s 11 (UnityEngine.Transform)
	L_015a: ldloc.s 10 (BattleTech.Weapon)
	L_015c: ldloc.s 10 (BattleTech.Weapon)
	L_015e: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_0163: ldfld System.String prefabName
	L_0168: ldloc.s 11 (UnityEngine.Transform)
	L_016a: ldarg.0
	L_016b: call System.String get_LogDisplayName()
	L_0170: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
	L_0175: ldarg.0
	L_0176: call BattleTech.MechRepresentation get_GameRep()
	L_017b: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
	L_0180: ldloc.s 10 (BattleTech.Weapon)
	L_0182: callvirt BattleTech.WeaponRepresentation get_weaponRep()
	L_0187: callvirt Void Add(BattleTech.WeaponRepresentation)
	L_018c: ldarg.0
	L_018d: call BattleTech.MechDef get_MechDef()
	L_0192: ldloc.s 10 (BattleTech.Weapon)
	L_0194: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_0199: call System.String GetComponentMountingPointPrefabName(BattleTech.MechDef, BattleTech.MechComponentRef)
	L_019e: stloc.s 12 (System.String)
	L_01a0: ldloc.s 12 (System.String)
	L_01a2: call Boolean IsNullOrEmpty(System.String)
	L_01a7: brtrue Label4
	L_01ac: ldarg.0
	L_01ad: call BattleTech.CombatGameState get_Combat()
	L_01b2: callvirt BattleTech.Data.DataManager get_DataManager()
	L_01b7: ldloc.s 12 (System.String)
	L_01b9: ldc.i4.s 45
	L_01bb: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
	L_01bd: initobj System.Nullable`1[UnityEngine.Vector3]
	L_01c3: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
	L_01c5: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
	L_01c7: initobj System.Nullable`1[UnityEngine.Quaternion]
	L_01cd: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
	L_01cf: ldnull
	L_01d0: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
	L_01d5: callvirt BattleTech.WeaponRepresentation GetComponent[WeaponRepresentation]()
	L_01da: stloc.s 14 (BattleTech.WeaponRepresentation)
	L_01dc: ldloc.s 14 (BattleTech.WeaponRepresentation)
	L_01de: ldarg.0
	L_01df: ldloc.s 11 (UnityEngine.Transform)
	L_01e1: ldc.i4.1
	L_01e2: ldarg.0
	L_01e3: call System.String get_LogDisplayName()
	L_01e8: ldloc.s 10 (BattleTech.Weapon)
	L_01ea: callvirt Int32 get_Location()
	L_01ef: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, System.String, Int32)
	L_01f4: ldarg.0
	L_01f5: call BattleTech.MechRepresentation get_GameRep()
	L_01fa: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
	L_01ff: ldloc.s 14 (BattleTech.WeaponRepresentation)
	L_0201: callvirt Void Add(BattleTech.WeaponRepresentation)
	L_0206: Label3
	L_0206: Label4
	L_0206: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0208: call Boolean MoveNext()
	L_020d: brtrue Label5
	L_0212: leave Label6
	L_0217: leave (autogenerated)
} // end try
.finally
{
	L_021c: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_021e: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_0224: callvirt Void Dispose()
	L_0229: endfinally
	L_022a: leave (autogenerated)
} // end handler
L_022b: Label6
L_022b: ldarg.0
L_022c: ldloc.2
L_022d: ldc.i4.8
L_022e: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0233: ldarg.0
L_0234: ldloc.2
L_0235: ldc.i4.4
L_0236: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_023b: ldarg.0
L_023c: ldloc.2
L_023d: ldc.i4.s 16
L_023f: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0244: ldarg.0
L_0245: ldloc.2
L_0246: ldc.i4.2
L_0247: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_024c: ldarg.0
L_024d: ldloc.2
L_024e: ldc.i4.s 32
L_0250: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0255: ldarg.0
L_0256: ldloc.2
L_0257: ldc.i4.1
L_0258: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_025d: ldarg.0
L_025e: ldfld BattleTech.Weapon MeleeWeapon
L_0263: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_0268: ldfld System.Boolean hasPrefabName
L_026d: brtrue Label7
L_0272: ldarg.0
L_0273: ldfld BattleTech.Weapon MeleeWeapon
L_0278: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_027d: ldstr "chrPrfWeap_generic_melee"
L_0282: stfld System.String prefabName
L_0287: ldarg.0
L_0288: ldfld BattleTech.Weapon MeleeWeapon
L_028d: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_0292: ldc.i4.1
L_0293: stfld System.Boolean hasPrefabName
L_0298: Label7
L_0298: ldarg.0
L_0299: ldarg.0
L_029a: ldfld BattleTech.Weapon MeleeWeapon
L_029f: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02a4: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_02a9: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_02ae: stloc.3
L_02af: ldarg.0
L_02b0: ldfld BattleTech.Weapon MeleeWeapon
L_02b5: ldarg.0
L_02b6: ldfld BattleTech.Weapon MeleeWeapon
L_02bb: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_02c0: ldfld System.String prefabName
L_02c5: ldloc.3
L_02c6: ldarg.0
L_02c7: call System.String get_LogDisplayName()
L_02cc: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
L_02d1: ldarg.0
L_02d2: ldfld BattleTech.Weapon DFAWeapon
L_02d7: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02dc: ldfld System.Boolean hasPrefabName
L_02e1: brtrue Label8
L_02e6: ldarg.0
L_02e7: ldfld BattleTech.Weapon DFAWeapon
L_02ec: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02f1: ldstr "chrPrfWeap_generic_melee"
L_02f6: stfld System.String prefabName
L_02fb: ldarg.0
L_02fc: ldfld BattleTech.Weapon DFAWeapon
L_0301: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0306: ldc.i4.1
L_0307: stfld System.Boolean hasPrefabName
L_030c: Label8
L_030c: ldarg.0
L_030d: ldarg.0
L_030e: ldfld BattleTech.Weapon DFAWeapon
L_0313: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0318: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_031d: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_0322: stloc.s 4 (UnityEngine.Transform)
L_0324: ldarg.0
L_0325: ldfld BattleTech.Weapon DFAWeapon
L_032a: ldarg.0
L_032b: ldfld BattleTech.Weapon DFAWeapon
L_0330: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0335: ldfld System.String prefabName
L_033a: ldloc.s 4 (UnityEngine.Transform)
L_033c: ldarg.0
L_033d: call System.String get_LogDisplayName()
L_0342: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
L_0347: ldarg.0
L_0348: call BattleTech.MechDef get_MechDef()
L_034d: callvirt HBS.Collections.TagSet get_MechTags()
L_0352: ldstr "PlaceholderUnfinishedMaterial"
L_0357: callvirt Boolean Contains(System.String)
L_035c: stloc.s 5 (System.Boolean)
L_035e: ldarg.0
L_035f: call BattleTech.MechDef get_MechDef()
L_0364: callvirt HBS.Collections.TagSet get_MechTags()
L_0369: ldstr "PlaceholderImpostorMaterial"
L_036e: callvirt Boolean Contains(System.String)
L_0373: stloc.s 6 (System.Boolean)
L_0375: ldloc.s 5 (System.Boolean)
L_0377: ldloc.s 6 (System.Boolean)
L_0379: or
L_037a: brfalse Label9
L_037f: ldarg.0
L_0380: call BattleTech.MechRepresentation get_GameRep()
L_0385: ldc.i4.1
L_0386: callvirt UnityEngine.SkinnedMeshRenderer[] GetComponentsInChildren[SkinnedMeshRenderer](Boolean)
L_038b: stloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_038d: ldc.i4.0
L_038e: stloc.s 16 (System.Int32)
L_0390: br Label10
L_0395: Label13
L_0395: ldloc.s 5 (System.Boolean)
L_0397: brfalse Label11
L_039c: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_039e: ldloc.s 16 (System.Int32)
L_03a0: ldelem.ref
L_03a1: ldarg.0
L_03a2: call BattleTech.CombatGameState get_Combat()
L_03a7: callvirt BattleTech.Data.DataManager get_DataManager()
L_03ac: callvirt BattleTech.Data.TextureManager get_TextureManager()
L_03b1: ldfld UnityEngine.Material PlaceholderUnfinishedMaterial
L_03b6: callvirt Void set_sharedMaterial(UnityEngine.Material)
L_03bb: Label11
L_03bb: ldloc.s 6 (System.Boolean)
L_03bd: brfalse Label12
L_03c2: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_03c4: ldloc.s 16 (System.Int32)
L_03c6: ldelem.ref
L_03c7: ldarg.0
L_03c8: call BattleTech.CombatGameState get_Combat()
L_03cd: callvirt BattleTech.Data.DataManager get_DataManager()
L_03d2: callvirt BattleTech.Data.TextureManager get_TextureManager()
L_03d7: ldfld UnityEngine.Material PlaceholderImpostorMaterial
L_03dc: callvirt Void set_sharedMaterial(UnityEngine.Material)
L_03e1: Label12
L_03e1: ldloc.s 16 (System.Int32)
L_03e3: ldc.i4.1
L_03e4: add
L_03e5: stloc.s 16 (System.Int32)
L_03e7: Label10
L_03e7: ldloc.s 16 (System.Int32)
L_03e9: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_03eb: ldlen
L_03ec: conv.i4
L_03ed: blt Label13
L_03f2: Label9
L_03f2: ldarg.0
L_03f3: call BattleTech.MechRepresentation get_GameRep()
L_03f8: callvirt Void RefreshEdgeCache()
L_03fd: ldarg.0
L_03fe: call BattleTech.MechRepresentation get_GameRep()
L_0403: ldc.r4 1
L_0408: callvirt Void FadeIn(Single)
L_040d: ldarg.0
L_040e: callvirt Boolean get_IsDead()
L_0413: brtrue Label14
L_0418: ldarg.0
L_0419: call BattleTech.CombatGameState get_Combat()
L_041e: callvirt Boolean get_IsLoadingFromSave()
L_0423: brfalse Label15
L_0428: ldarg.0
L_0429: call System.Collections.Generic.List`1[BattleTech.MechComponent] get_AuraComponents()
L_042e: brfalse Label16
L_0433: ldarg.0
L_0434: call System.Collections.Generic.List`1[BattleTech.MechComponent] get_AuraComponents()
L_0439: callvirt Enumerator GetEnumerator()
L_043e: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_0440: br Label17
	L_0445: Label22
	L_0445: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0447: call BattleTech.MechComponent get_Current()
	L_044c: stloc.s 18 (BattleTech.MechComponent)
	L_044e: ldc.i4.0
	L_044f: stloc.s 19 (System.Int32)
	L_0451: br Label18
	L_0456: Label21
	L_0456: ldloc.s 18 (BattleTech.MechComponent)
	L_0458: callvirt BattleTech.MechComponentDef get_componentDef()
	L_045d: callvirt BattleTech.EffectData[] get_statusEffects()
	L_0462: ldloc.s 19 (System.Int32)
	L_0464: ldelem.ref
	L_0465: ldflda BattleTech.EffectTargetingData targetingData
	L_046a: ldfld BattleTech.AuraEffectType auraEffectType
	L_046f: ldc.i4.2
	L_0470: bne.un Label19
	L_0475: ldstr "vfxPrfPrtl_ECM_loop"
	L_047a: stloc.s 20 (System.String)
	L_047c: ldarg.0
	L_047d: call BattleTech.MechRepresentation get_GameRep()
	L_0482: ldarg.0
	L_0483: call BattleTech.MechRepresentation get_GameRep()
	L_0488: ldfld UnityEngine.Transform thisTransform
	L_048d: call UnityEngine.Vector3 get_zero()
	L_0492: ldloc.s 20 (System.String)
	L_0494: ldc.i4.1
	L_0495: call UnityEngine.Vector3 get_zero()
	L_049a: ldc.i4.0
	L_049b: ldc.r4 -1
	L_04a0: callvirt UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
	L_04a5: pop
	L_04a6: ldarg.0
	L_04a7: call BattleTech.MechRepresentation get_GameRep()
	L_04ac: ldarg.0
	L_04ad: call BattleTech.MechRepresentation get_GameRep()
	L_04b2: ldfld UnityEngine.Transform thisTransform
	L_04b7: call UnityEngine.Vector3 get_zero()
	L_04bc: ldstr "vfxPrfPrtl_ECMcarrierAura_loop"
	L_04c1: ldc.i4.1
	L_04c2: call UnityEngine.Vector3 get_zero()
	L_04c7: ldc.i4.0
	L_04c8: ldc.r4 -1
	L_04cd: callvirt UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
	L_04d2: pop
	L_04d3: leave Label20
	L_04d8: Label19
	L_04d8: ldloc.s 19 (System.Int32)
	L_04da: ldc.i4.1
	L_04db: add
	L_04dc: stloc.s 19 (System.Int32)
	L_04de: Label18
	L_04de: ldloc.s 19 (System.Int32)
	L_04e0: ldloc.s 18 (BattleTech.MechComponent)
	L_04e2: callvirt BattleTech.MechComponentDef get_componentDef()
	L_04e7: callvirt BattleTech.EffectData[] get_statusEffects()
	L_04ec: ldlen
	L_04ed: conv.i4
	L_04ee: blt Label21
	L_04f3: Label17
	L_04f3: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_04f5: call Boolean MoveNext()
	L_04fa: brtrue Label22
	L_04ff: leave Label23
	L_0504: leave (autogenerated)
} // end try
.finally
{
	L_0509: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_050b: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0511: callvirt Void Dispose()
	L_0516: endfinally
	L_0517: leave (autogenerated)
} // end handler
L_0518: Label14
L_0518: Label15
L_0518: Label16
L_0518: Label20
L_0518: Label23
L_0518: ldarg.0
L_0519: ldarg 1
L_051f: call Void Postfix(BattleTech.Mech, UnityEngine.Transform)
L_0524: ret
DONE

### Patch BattleTech.MechRepresentationSimGame, Void LoadWeapons()
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.MechComponentRef
L_0000: Local var 3: UnityEngine.Transform
L_0000: Local var 4: BattleTech.ComponentRepresentation
L_0000: Local var 5: System.String
L_0000: Local var 6: BattleTech.ChassisLocations
L_0000: Local var 7: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: BattleTech.ComponentRepresentation
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechRepresentationSimGame)
L_0006: newobj Void .ctor()
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: br Label1
L_0013: Label4
L_0013: ldarg.0
L_0014: call BattleTech.MechDef get_mechDef()
L_0019: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_001e: ldloc.1
L_001f: ldelem.ref
L_0020: stloc.2
L_0021: ldloc.2
L_0022: ldarg.0
L_0023: call BattleTech.MechDef get_mechDef()
L_0028: callvirt BattleTech.ChassisDef get_Chassis()
L_002d: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0032: ldloc.2
L_0033: ldarg.0
L_0034: call BattleTech.MechDef get_mechDef()
L_0039: callvirt BattleTech.ChassisDef get_Chassis()
L_003e: callvirt System.String get_PrefabBase()
L_0043: ldloc.2
L_0044: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0049: stloc.s 6 (BattleTech.ChassisLocations)
L_004b: ldloca.s 6 (BattleTech.ChassisLocations)
L_004d: constrained. BattleTech.ChassisLocations
L_0053: callvirt System.String ToString()
L_0058: callvirt System.String ToLower()
L_005d: ldloca.s 0 (System.Collections.Generic.List`1[System.String])
L_005f: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_0064: stfld System.String prefabName
L_0069: ldloc.2
L_006a: ldc.i4.1
L_006b: stfld System.Boolean hasPrefabName
L_0070: ldloc.2
L_0071: ldfld System.String prefabName
L_0076: call Boolean IsNullOrEmpty(System.String)
L_007b: brtrue Label2
L_0080: ldarg.0
L_0081: ldloc.2
L_0082: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0087: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_008c: stloc.3
L_008d: ldarg.0
L_008e: ldfld BattleTech.Data.DataManager dataManager
L_0093: ldloc.2
L_0094: ldfld System.String prefabName
L_0099: ldc.i4.s 45
L_009b: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_009d: initobj System.Nullable`1[UnityEngine.Vector3]
L_00a3: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_00a5: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_00a7: initobj System.Nullable`1[UnityEngine.Quaternion]
L_00ad: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_00af: ldnull
L_00b0: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_00b5: callvirt BattleTech.ComponentRepresentation GetComponent[ComponentRepresentation]()
L_00ba: stloc.s 4 (BattleTech.ComponentRepresentation)
L_00bc: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00be: ldnull
L_00bf: ldloc.3
L_00c0: ldc.i4.1
L_00c1: ldc.i4.0
L_00c2: ldstr "MechRepSimGame"
L_00c7: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_00cc: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00ce: callvirt UnityEngine.GameObject get_gameObject()
L_00d3: ldc.i4.1
L_00d4: callvirt Void SetActive(Boolean)
L_00d9: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00db: ldc.i4.s 9
L_00dd: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_00e2: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00e4: callvirt UnityEngine.GameObject get_gameObject()
L_00e9: ldloc.2
L_00ea: ldfld System.String prefabName
L_00ef: callvirt Void set_name(System.String)
L_00f4: ldarg.0
L_00f5: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] componentReps
L_00fa: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00fc: callvirt Void Add(BattleTech.ComponentRepresentation)
L_0101: ldarg.0
L_0102: call BattleTech.MechDef get_mechDef()
L_0107: ldloc.2
L_0108: call System.String GetComponentMountingPointPrefabName(BattleTech.MechDef, BattleTech.MechComponentRef)
L_010d: stloc.s 5 (System.String)
L_010f: ldloc.s 5 (System.String)
L_0111: call Boolean IsNullOrEmpty(System.String)
L_0116: brtrue Label3
L_011b: ldarg.0
L_011c: ldfld BattleTech.Data.DataManager dataManager
L_0121: ldloc.s 5 (System.String)
L_0123: ldc.i4.s 45
L_0125: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0127: initobj System.Nullable`1[UnityEngine.Vector3]
L_012d: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_012f: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0131: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0137: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0139: ldnull
L_013a: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_013f: callvirt BattleTech.ComponentRepresentation GetComponent[ComponentRepresentation]()
L_0144: stloc.s 9 (BattleTech.ComponentRepresentation)
L_0146: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0148: ldnull
L_0149: ldloc.3
L_014a: ldc.i4.1
L_014b: ldc.i4.0
L_014c: ldstr "MechRepSimGame"
L_0151: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0156: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0158: callvirt UnityEngine.GameObject get_gameObject()
L_015d: ldc.i4.1
L_015e: callvirt Void SetActive(Boolean)
L_0163: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0165: ldc.i4.s 9
L_0167: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_016c: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_016e: callvirt UnityEngine.GameObject get_gameObject()
L_0173: ldloc.s 5 (System.String)
L_0175: callvirt Void set_name(System.String)
L_017a: ldarg.0
L_017b: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] componentReps
L_0180: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0182: callvirt Void Add(BattleTech.ComponentRepresentation)
L_0187: Label2
L_0187: Label3
L_0187: ldloc.1
L_0188: ldc.i4.1
L_0189: add
L_018a: stloc.1
L_018b: Label1
L_018b: ldloc.1
L_018c: ldarg.0
L_018d: call BattleTech.MechDef get_mechDef()
L_0192: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0197: ldlen
L_0198: conv.i4
L_0199: blt Label4
L_019e: ldarg.0
L_019f: ldloc.0
L_01a0: ldc.i4.8
L_01a1: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01a6: ldarg.0
L_01a7: ldloc.0
L_01a8: ldc.i4.4
L_01a9: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01ae: ldarg.0
L_01af: ldloc.0
L_01b0: ldc.i4.s 16
L_01b2: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01b7: ldarg.0
L_01b8: ldloc.0
L_01b9: ldc.i4.2
L_01ba: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01bf: ldarg.0
L_01c0: ldloc.0
L_01c1: ldc.i4.s 32
L_01c3: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01c8: ldarg.0
L_01c9: ldloc.0
L_01ca: ldc.i4.1
L_01cb: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01d0: ldarg.0
L_01d1: call Void Postfix(BattleTech.MechRepresentationSimGame)
L_01d6: ret
DONE

### Patch BattleTech.ChassisDef, Void refreshLocationReferences()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ChassisLocations
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.ChassisDef)
L_0006: ldc.i4.0
L_0007: stloc.0
L_0008: br Label1
L_000d: Label22
L_000d: ldarg.0
L_000e: ldfld BattleTech.LocationDef[] Locations
L_0013: ldloc.0
L_0014: ldelema BattleTech.LocationDef
L_0019: ldfld BattleTech.ChassisLocations Location
L_001e: stloc.1
L_001f: ldloc.1
L_0020: ldc.i4.s 16
L_0022: bgt Label2
L_0027: ldloc.1
L_0028: ldc.i4.1
L_0029: sub
L_002a: switch Labels3,4,5,6
L_003f: ldloc.1
L_0040: ldc.i4.8
L_0041: beq Label7
L_0046: ldloc.1
L_0047: ldc.i4.s 16
L_0049: beq Label8
L_004e: br Label9
L_0053: Label2
L_0053: ldloc.1
L_0054: ldc.i4.s 32
L_0056: beq Label10
L_005b: ldloc.1
L_005c: ldc.i4.s 64
L_005e: beq Label11
L_0063: ldloc.1
L_0064: ldc.i4 128
L_0069: beq Label12
L_006e: br Label13
L_0073: Label3
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: ldfld BattleTech.LocationDef[] Locations
L_007a: ldloc.0
L_007b: ldelem BattleTech.LocationDef
L_0080: call Void set_Head(BattleTech.LocationDef)
L_0085: br Label14
L_008a: Label4
L_008a: ldarg.0
L_008b: ldarg.0
L_008c: ldfld BattleTech.LocationDef[] Locations
L_0091: ldloc.0
L_0092: ldelem BattleTech.LocationDef
L_0097: call Void set_LeftArm(BattleTech.LocationDef)
L_009c: br Label15
L_00a1: Label6
L_00a1: ldarg.0
L_00a2: ldarg.0
L_00a3: ldfld BattleTech.LocationDef[] Locations
L_00a8: ldloc.0
L_00a9: ldelem BattleTech.LocationDef
L_00ae: call Void set_LeftTorso(BattleTech.LocationDef)
L_00b3: br Label16
L_00b8: Label7
L_00b8: ldarg.0
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.LocationDef[] Locations
L_00bf: ldloc.0
L_00c0: ldelem BattleTech.LocationDef
L_00c5: call Void set_CenterTorso(BattleTech.LocationDef)
L_00ca: br Label17
L_00cf: Label8
L_00cf: ldarg.0
L_00d0: ldarg.0
L_00d1: ldfld BattleTech.LocationDef[] Locations
L_00d6: ldloc.0
L_00d7: ldelem BattleTech.LocationDef
L_00dc: call Void set_RightTorso(BattleTech.LocationDef)
L_00e1: br Label18
L_00e6: Label10
L_00e6: ldarg.0
L_00e7: ldarg.0
L_00e8: ldfld BattleTech.LocationDef[] Locations
L_00ed: ldloc.0
L_00ee: ldelem BattleTech.LocationDef
L_00f3: call Void set_RightArm(BattleTech.LocationDef)
L_00f8: br Label19
L_00fd: Label11
L_00fd: ldarg.0
L_00fe: ldarg.0
L_00ff: ldfld BattleTech.LocationDef[] Locations
L_0104: ldloc.0
L_0105: ldelem BattleTech.LocationDef
L_010a: call Void set_LeftLeg(BattleTech.LocationDef)
L_010f: br Label20
L_0114: Label12
L_0114: ldarg.0
L_0115: ldarg.0
L_0116: ldfld BattleTech.LocationDef[] Locations
L_011b: ldloc.0
L_011c: ldelem BattleTech.LocationDef
L_0121: call Void set_RightLeg(BattleTech.LocationDef)
L_0126: br Label21
L_012b: Label5
L_012b: Label9
L_012b: Label13
L_012b: ldc.i4.4
L_012c: newarr System.Object
L_0131: dup
L_0132: ldc.i4.0
L_0133: ldstr "Unknown chassis location def "
L_0138: stelem.ref
L_0139: dup
L_013a: ldc.i4.1
L_013b: ldarg.0
L_013c: ldfld BattleTech.LocationDef[] Locations
L_0141: ldloc.0
L_0142: ldelema BattleTech.LocationDef
L_0147: ldfld BattleTech.ChassisLocations Location
L_014c: box BattleTech.ChassisLocations
L_0151: stelem.ref
L_0152: dup
L_0153: ldc.i4.2
L_0154: ldstr " found in "
L_0159: stelem.ref
L_015a: dup
L_015b: ldc.i4.3
L_015c: ldarg.0
L_015d: call BattleTech.DescriptionDef get_Description()
L_0162: callvirt System.String get_Name()
L_0167: stelem.ref
L_0168: call System.String Concat(System.Object[])
L_016d: call Void LogError(System.Object)
L_0172: Label14
L_0172: Label15
L_0172: Label16
L_0172: Label17
L_0172: Label18
L_0172: Label19
L_0172: Label20
L_0172: Label21
L_0172: ldloc.0
L_0173: ldc.i4.1
L_0174: add
L_0175: stloc.0
L_0176: Label1
L_0176: ldloc.0
L_0177: ldarg.0
L_0178: ldfld BattleTech.LocationDef[] Locations
L_017d: ldlen
L_017e: conv.i4
L_017f: blt Label22
L_0184: ret
DONE

### Patch BattleTech.ChassisDef, Void RefreshHardpointData()
L_0000: ldarg.0
L_0001: ldfld BattleTech.Data.DataManager dataManager
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.Data.DataManager get_DataManager()
L_0011: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HardpointDataDef] get_HardpointDataDefs()
L_0016: ldarg.0
L_0017: call System.String get_HardpointDataDefID()
L_001c: callvirt Boolean Exists(System.String)
L_0021: brfalse Label2
L_0026: ldarg.0
L_0027: ldarg.0
L_0028: call BattleTech.Data.DataManager get_DataManager()
L_002d: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HardpointDataDef] get_HardpointDataDefs()
L_0032: ldarg.0
L_0033: call System.String get_HardpointDataDefID()
L_0038: callvirt BattleTech.HardpointDataDef Get(System.String)
L_003d: call Void set_HardpointDataDef(BattleTech.HardpointDataDef)
L_0042: Label1
L_0042: Label2
L_0042: ldarg.0
L_0043: call Void Postfix(BattleTech.ChassisDef)
L_0048: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0000: Local var 0: BattleTech.UI.IMechLabDraggableItem
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponDef
L_0000: Local var 4: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.WeaponDef
L_0000: Local var 7: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg 2
L_000d: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.MechLabPanel mechLab
L_001e: ldarg 1
L_0024: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.MechLabPanel, UnityEngine.EventSystems.PointerEventData)
L_0029: brfalse Label0
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0034: callvirt Boolean get_Initialized()
L_0039: brtrue Label1
L_003e: br Label15
L_0043: Label1
L_0043: ldarg.0
L_0044: ldfld BattleTech.UI.MechLabPanel mechLab
L_0049: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_004e: brtrue Label2
L_0053: br Label16
L_0058: Label2
L_0058: ldarg.0
L_0059: ldfld BattleTech.UI.MechLabPanel mechLab
L_005e: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_0063: stloc.0
L_0064: ldarg.0
L_0065: ldloc.0
L_0066: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_006b: call Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0070: stloc.1
L_0071: ldloc.1
L_0072: brtrue Label3
L_0077: ldloc.0
L_0078: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_007d: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0082: ldc.i4.1
L_0083: bne.un Label4
L_0088: ldarg.0
L_0089: ldfld BattleTech.LocationLoadoutDef loadout
L_008e: ldfld System.Single CurrentInternalStructure
L_0093: ldc.r4 0
L_0098: ble.un Label5
L_009d: ldloc.0
L_009e: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00a3: callvirt BattleTech.MechComponentDef get_Def()
L_00a8: isinst BattleTech.WeaponDef
L_00ad: stloc.3
L_00ae: ldnull
L_00af: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00b7: callvirt Int32 get_Count()
L_00bc: ldc.i4.1
L_00bd: sub
L_00be: stloc.s 5 (System.Int32)
L_00c0: br Label6
L_00c5: Label10
L_00c5: ldarg.0
L_00c6: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00cb: ldloc.s 5 (System.Int32)
L_00cd: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00d2: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00d7: callvirt BattleTech.MechComponentDef get_Def()
L_00dc: isinst BattleTech.WeaponDef
L_00e1: stloc.s 6 (BattleTech.WeaponDef)
L_00e3: ldloc.s 6 (BattleTech.WeaponDef)
L_00e5: brfalse Label7
L_00ea: ldloc.s 6 (BattleTech.WeaponDef)
L_00ec: callvirt BattleTech.WeaponCategory get_Category()
L_00f1: ldloc.3
L_00f2: callvirt BattleTech.WeaponCategory get_Category()
L_00f7: bne.un Label8
L_00fc: ldarg.0
L_00fd: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0102: ldloc.s 5 (System.Int32)
L_0104: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0109: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_010b: br Label9
L_0110: Label7
L_0110: Label8
L_0110: ldloc.s 5 (System.Int32)
L_0112: ldc.i4.1
L_0113: sub
L_0114: stloc.s 5 (System.Int32)
L_0116: Label6
L_0116: ldloc.s 5 (System.Int32)
L_0118: ldc.i4.0
L_0119: bge Label10
L_011e: Label9
L_011e: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0120: ldnull
L_0121: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0126: brfalse Label11
L_012b: ldarg.0
L_012c: ldfld System.Int32 usedSlots
L_0131: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0133: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0138: callvirt BattleTech.MechComponentDef get_Def()
L_013d: callvirt Int32 get_InventorySize()
L_0142: sub
L_0143: ldloc.3
L_0144: callvirt Int32 get_InventorySize()
L_0149: add
L_014a: ldarg.0
L_014b: ldfld System.Int32 maxSlots
L_0150: bgt Label12
L_0155: ldarg.0
L_0156: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0158: ldc.i4.1
L_0159: call Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_015e: pop
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0167: callvirt Void ForceItemDrop(BattleTech.UI.MechLabItemSlotElement)
L_016c: ldc.i4.1
L_016d: stloc.1
L_016e: Label3
L_016e: Label4
L_016e: Label5
L_016e: Label11
L_016e: Label12
L_016e: ldloc.1
L_016f: brtrue Label13
L_0174: ldarg.0
L_0175: ldfld BattleTech.UI.MechLabPanel mechLab
L_017a: ldarg.0
L_017b: ldfld Localize.Text _dropErrorMessage
L_0180: callvirt Void ShowDropErrorMessage(Localize.Text)
L_0185: ldarg.0
L_0186: ldfld BattleTech.UI.MechLabPanel mechLab
L_018b: ldarg.1
L_018c: callvirt Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_0191: br Label17
L_0196: Label13
L_0196: ldarg.0
L_0197: ldloc.0
L_0198: ldc.i4.1
L_0199: call Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_019e: stloc.2
L_019f: ldarg.0
L_01a0: call BattleTech.SimGameState get_Sim()
L_01a5: brfalse Label14
L_01aa: ldarg.0
L_01ab: call BattleTech.SimGameState get_Sim()
L_01b0: ldarg.0
L_01b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b6: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01bb: callvirt System.String get_MechID()
L_01c0: ldloc.0
L_01c1: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01c6: ldarg.0
L_01c7: ldfld BattleTech.LocationLoadoutDef loadout
L_01cc: ldfld BattleTech.ChassisLocations Location
L_01d1: ldloc.0
L_01d2: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d7: callvirt BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_01dc: stloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01de: ldarg.0
L_01df: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e4: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01e9: ldloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01eb: callvirt Void AddSubEntry(BattleTech.WorkOrderEntry)
L_01f0: Label14
L_01f0: ldloc.0
L_01f1: ldarg.0
L_01f2: ldfld BattleTech.LocationLoadoutDef loadout
L_01f7: ldfld BattleTech.ChassisLocations Location
L_01fc: callvirt Void set_MountedLocation(BattleTech.ChassisLocations)
L_0201: ldarg.0
L_0202: ldfld BattleTech.UI.MechLabPanel mechLab
L_0207: ldloc.2
L_0208: callvirt Void ClearDragItem(Boolean)
L_020d: ldarg.0
L_020e: call Void RefreshHardpointData()
L_0213: ldarg.0
L_0214: ldfld BattleTech.UI.MechLabPanel mechLab
L_0219: ldc.i4.0
L_021a: callvirt Boolean ValidateLoadout(Boolean)
L_021f: pop
L_0220: Label15
L_0220: Label16
L_0220: Label17
L_0220: Label0
L_0220: ret
DONE

### Harmony id=MechEngineer.Features.AutoFix, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.AutoFix.AutoFixerSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.WeaponDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[WeaponDef](BattleTech.WeaponDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: ldc.i4.0
L_000a: call Void set_ComponentSubType(BattleTech.MechComponentType)
L_000f: ldarg.0
L_0010: call BattleTech.EffectData[] get_statusEffects()
L_0015: brtrue Label1
L_001a: ldarg.0
L_001b: ldc.i4.0
L_001c: newarr BattleTech.EffectData
L_0021: call Void set_statusEffects(BattleTech.EffectData[])
L_0026: Label1
L_0026: ldarg.0
L_0027: call Void UpgradeToDataDrivenEnums()
L_002c: ldarg.0
L_002d: call Void Postfix(BattleTech.WeaponDef)
L_0032: ret
DONE

### Patch BattleTech.UpgradeDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[UpgradeDef](BattleTech.UpgradeDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: call BattleTech.EffectData[] get_statusEffects()
L_000e: brtrue Label1
L_0013: ldarg.0
L_0014: ldc.i4.0
L_0015: newarr BattleTech.EffectData
L_001a: call Void set_statusEffects(BattleTech.EffectData[])
L_001f: Label1
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.UpgradeDef)
L_0025: ret
DONE

### Patch BattleTech.ChassisDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[ChassisDef](BattleTech.ChassisDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: call Void refreshLocationReferences()
L_000e: ldarg.0
L_000f: call Void Postfix(BattleTech.ChassisDef)
L_0014: ret
DONE

### Harmony id=MechEngineer.Features.Globals, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.Globals.GlobalsSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.UI.MechBayPanel, Void CloseMechBay()
L_0000: ldarg.0
L_0001: call BattleTech.SimGameState get_Sim()
L_0006: ldfld BattleTech.UI.SGRoomManager RoomManager
L_000b: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_0010: callvirt Void CloseMechBay()
L_0015: ldarg.0
L_0016: call Void Postfix(BattleTech.UI.MechBayPanel)
L_001b: ret
DONE

### Patch BattleTech.UI.MechBayPanel, Void SelectMech(BattleTech.UI.MechBayMechUnitElement, Boolean)
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0006: ldnull
L_0007: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0017: ldc.i4.1
L_0018: ldc.i4.1
L_0019: callvirt Void SetFrameColor(BattleTech.UI.UIColor, Boolean)
L_001e: Label1
L_001e: ldarg.0
L_001f: ldarg.1
L_0020: stfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0025: ldc.r4 0.5
L_002a: stloc.0
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0031: ldnull
L_0032: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0037: brfalse Label2
L_003c: ldarg.0
L_003d: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0042: ldc.i4.6
L_0043: ldc.i4.1
L_0044: callvirt Void SetFrameColor(BattleTech.UI.UIColor, Boolean)
L_0049: ldarg.0
L_004a: ldarg.1
L_004b: ldfld System.Int32 baySlot
L_0050: stfld System.Int32 selectedBaySlot
L_0055: ldarg.0
L_0056: ldfld UnityEngine.GameObject selectedMechNameObj
L_005b: ldc.i4.0
L_005c: callvirt Void SetActive(Boolean)
L_0061: ldarg.0
L_0062: ldfld BattleTech.UI.MechSkinSelectorWidget skinSelector
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_006d: callvirt BattleTech.MechDef get_MechDef()
L_0072: callvirt Void TryShow(BattleTech.MechDef)
L_0077: ldarg.0
L_0078: ldfld BattleTech.SimGameState sim
L_007d: ldfld BattleTech.UI.SGRoomManager RoomManager
L_0082: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_0087: ldarg.0
L_0088: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_008d: callvirt BattleTech.MechDef get_MechDef()
L_0092: ldloc.0
L_0093: ldc.i4.0
L_0094: ldarg.2
L_0095: callvirt Void LoadMech(BattleTech.MechDef, Single, Boolean, Boolean)
L_009a: br Label3
L_009f: Label2
L_009f: ldarg.0
L_00a0: ldc.i4.m1
L_00a1: stfld System.Int32 selectedBaySlot
L_00a6: ldarg.0
L_00a7: ldfld UnityEngine.GameObject selectedMechNameObj
L_00ac: ldc.i4.0
L_00ad: callvirt Void SetActive(Boolean)
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.SimGameState sim
L_00b8: ldfld BattleTech.UI.SGRoomManager RoomManager
L_00bd: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_00c2: ldnull
L_00c3: ldloc.0
L_00c4: ldc.i4.0
L_00c5: ldc.i4.1
L_00c6: callvirt Void LoadMech(BattleTech.MechDef, Single, Boolean, Boolean)
L_00cb: Label3
L_00cb: ldarg.0
L_00cc: ldfld BattleTech.UI.HBSDOTweenToggle selectedMechNameBtnToggleObj
L_00d1: ldc.i4.0
L_00d2: ldc.i4.0
L_00d3: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00d8: pop
L_00d9: ldarg.0
L_00da: ldfld BattleTech.UI.MechBayMechInfoWidget mechInfoWidget
L_00df: ldarg.0
L_00e0: ldfld BattleTech.SimGameState sim
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldfld BattleTech.Data.DataManager dataManager
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_00f2: ldc.i4.1
L_00f3: ldc.i4.1
L_00f4: callvirt Void SetData(BattleTech.SimGameState, BattleTech.UI.MechBayPanel, BattleTech.Data.DataManager, BattleTech.UI.MechBayMechUnitElement, Boolean, Boolean)
L_00f9: ldarg.0
L_00fa: call Void Postfix(BattleTech.UI.MechBayPanel)
L_00ff: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void ExitMechLab()
L_0000: ldarg.0
L_0001: ldfld UnityEngine.Events.UnityAction onCloseCallback
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: ldfld UnityEngine.Events.UnityAction onCloseCallback
L_0011: callvirt Void Invoke()
L_0016: Label1
L_0016: ldarg.0
L_0017: ldc.i4.0
L_0018: stfld System.Boolean modifiedDialogShowing
L_001d: ldarg.0
L_001e: call Boolean get_IsSimGame()
L_0023: brfalse Label2
L_0028: ldarg.0
L_0029: call Void CloseShop()
L_002e: ldarg.0
L_002f: ldc.i4.0
L_0030: call Void Pool(Boolean)
L_0035: Label2
L_0035: ldarg.0
L_0036: call Void Postfix(BattleTech.UI.MechLabPanel)
L_003b: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void LoadMech(BattleTech.MechDef)
L_0000: ldarg.0
L_0001: call Void ClearData()
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "MechLab LoadMech received null data!"
L_0016: callvirt Void Log(System.Object)
L_001b: br Label3
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: stfld BattleTech.MechDef originalMechDef
L_0027: ldarg.0
L_0028: ldfld BattleTech.MechDef originalMechDef
L_002d: ldarg.0
L_002e: ldfld BattleTech.Data.DataManager dataManager
L_0033: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0038: ldarg.0
L_0039: ldfld BattleTech.MechDef originalMechDef
L_003e: callvirt Void Refresh()
L_0043: ldarg.1
L_0044: ldarg.0
L_0045: ldfld BattleTech.Data.DataManager dataManager
L_004a: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004f: ldarg.0
L_0050: ldarg.1
L_0051: ldnull
L_0052: ldc.i4.1
L_0053: newobj Void .ctor(MechDef, String, Boolean)
L_0058: stfld BattleTech.MechDef activeMechDef
L_005d: ldarg.0
L_005e: ldfld BattleTech.MechDef activeMechDef
L_0063: callvirt Void Refresh()
L_0068: ldarg.0
L_0069: ldarg.0
L_006a: ldfld BattleTech.MechDef activeMechDef
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: newobj Void .ctor(IEnumerable`1)
L_0079: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_007e: ldarg.0
L_007f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0084: ldarg.0
L_0085: ldfld BattleTech.MechDef activeMechDef
L_008a: ldc.i4.1
L_008b: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0090: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0095: ldarg.0
L_0096: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_009b: ldarg.0
L_009c: ldfld BattleTech.MechDef activeMechDef
L_00a1: ldc.i4.8
L_00a2: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00a7: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00ac: ldarg.0
L_00ad: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.MechDef activeMechDef
L_00b8: ldc.i4.4
L_00b9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00be: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00c9: ldarg.0
L_00ca: ldfld BattleTech.MechDef activeMechDef
L_00cf: ldc.i4.s 16
L_00d1: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00d6: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.MechDef activeMechDef
L_00e7: ldc.i4.2
L_00e8: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ed: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00f2: ldarg.0
L_00f3: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.MechDef activeMechDef
L_00fe: ldc.i4.s 32
L_0100: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0105: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_010a: ldarg.0
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldarg.0
L_0111: ldfld BattleTech.MechDef activeMechDef
L_0116: ldc.i4.s 64
L_0118: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_011d: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0122: ldarg.0
L_0123: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0128: ldarg.0
L_0129: ldfld BattleTech.MechDef activeMechDef
L_012e: ldc.i4 128
L_0133: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0138: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0143: ldarg.0
L_0144: ldfld BattleTech.MechDef activeMechDef
L_0149: callvirt Void SetData(BattleTech.MechDef)
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0154: ldarg.0
L_0155: ldfld BattleTech.MechDef activeMechDef
L_015a: callvirt BattleTech.ChassisDef get_Chassis()
L_015f: callvirt Single get_Tonnage()
L_0164: callvirt Void RefreshJumpJetOptions(Single)
L_0169: ldarg.0
L_016a: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechDef originalMechDef
L_0175: callvirt Void SetData(BattleTech.MechDef)
L_017a: ldarg.0
L_017b: ldc.i4.0
L_017c: call Void set_Modified(Boolean)
L_0181: ldarg.0
L_0182: ldfld UnityEngine.GameObject modifiedIcon
L_0187: ldarg.0
L_0188: call Boolean get_Modified()
L_018d: callvirt Void SetActive(Boolean)
L_0192: ldarg.0
L_0193: ldc.i4.1
L_0194: call Void set_Initialized(Boolean)
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_019f: ldarg.0
L_01a0: call Boolean get_Initialized()
L_01a5: callvirt Void ToggleListVisible(Boolean)
L_01aa: ldarg.0
L_01ab: call Boolean get_IsSimGame()
L_01b0: brfalse Label2
L_01b5: ldarg.0
L_01b6: call Void CreateBaseWorkOrder()
L_01bb: Label2
L_01bb: ldarg.0
L_01bc: ldc.i4.1
L_01bd: call Boolean ValidateLoadout(Boolean)
L_01c2: pop
L_01c3: ldarg.0
L_01c4: call Void RefreshInventorySelectability()
L_01c9: Label3
L_01c9: ldarg.0
L_01ca: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01cf: ldarg.0
L_01d0: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01d5: ret
DONE

### Harmony id=MechEngineer.Features.TurretMechComponents, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretMechComponents.TurretMechComponentSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.Turret, Void InitStats()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: BattleTech.WeightClass
L_0000: Local var 2: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.FakeVector3
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.FakeVector3
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Turret)
L_0006: ldarg.0
L_0007: call Void InitStats()
L_000c: ldarg.0
L_000d: call BattleTech.Pilot get_pilot()
L_0012: ldarg.0
L_0013: call BattleTech.CombatGameState get_Combat()
L_0018: ldarg.0
L_0019: callvirt Void Init(BattleTech.CombatGameState, BattleTech.AbstractActor)
L_001e: ldarg.0
L_001f: call BattleTech.CombatGameState get_Combat()
L_0024: callvirt Boolean get_IsLoadingFromSave()
L_0029: brtrue Label1
L_002e: ldarg.0
L_002f: call BattleTech.TurretDef get_TurretDef()
L_0034: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0039: callvirt BattleTech.WeightClass get_weightClass()
L_003e: stloc.1
L_003f: ldloc.1
L_0040: ldc.i4.s 40
L_0042: bgt Label2
L_0047: ldloc.1
L_0048: ldc.i4.s 20
L_004a: beq Label3
L_004f: ldloc.1
L_0050: ldc.i4.s 40
L_0052: beq Label4
L_0057: br Label5
L_005c: Label2
L_005c: ldloc.1
L_005d: ldc.i4.s 60
L_005f: beq Label6
L_0064: ldloc.1
L_0065: ldc.i4.s 80
L_0067: beq Label7
L_006c: br Label8
L_0071: Label3
L_0071: ldarg.0
L_0072: ldarg.0
L_0073: call BattleTech.CombatGameState get_Combat()
L_0078: callvirt BattleTech.CombatGameConstants get_Constants()
L_007d: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_0082: ldfld System.Int32 PhaseLightTurret
L_0087: call Void set_Initiative(Int32)
L_008c: br Label9
L_0091: Label4
L_0091: ldarg.0
L_0092: ldarg.0
L_0093: call BattleTech.CombatGameState get_Combat()
L_0098: callvirt BattleTech.CombatGameConstants get_Constants()
L_009d: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00a2: ldfld System.Int32 PhaseMediumTurret
L_00a7: call Void set_Initiative(Int32)
L_00ac: br Label10
L_00b1: Label6
L_00b1: ldarg.0
L_00b2: ldarg.0
L_00b3: call BattleTech.CombatGameState get_Combat()
L_00b8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00bd: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00c2: ldfld System.Int32 PhaseHeavyTurret
L_00c7: call Void set_Initiative(Int32)
L_00cc: br Label11
L_00d1: Label7
L_00d1: ldarg.0
L_00d2: ldarg.0
L_00d3: call BattleTech.CombatGameState get_Combat()
L_00d8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00dd: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00e2: ldfld System.Int32 PhaseAssaultTurret
L_00e7: call Void set_Initiative(Int32)
L_00ec: Label5
L_00ec: Label8
L_00ec: Label9
L_00ec: Label10
L_00ec: Label11
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.StatCollection statCollection
L_00f2: ldstr "BaseInitiative"
L_00f7: ldarg.0
L_00f8: call Int32 get_Initiative()
L_00fd: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0102: pop
L_0103: ldarg.0
L_0104: call BattleTech.StatCollection get_StatCollection()
L_0109: ldstr "SpotterDistanceMultiplier"
L_010e: ldarg.0
L_010f: call BattleTech.TurretDef get_TurretDef()
L_0114: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0119: callvirt Single get_SpotterDistanceMultiplier()
L_011e: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0123: pop
L_0124: ldarg.0
L_0125: call BattleTech.StatCollection get_StatCollection()
L_012a: ldstr "SpotterDistanceAbsolute"
L_012f: ldc.r4 0
L_0134: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0139: pop
L_013a: ldarg.0
L_013b: call BattleTech.StatCollection get_StatCollection()
L_0140: ldstr "SpottingVisibilityMultiplier"
L_0145: ldarg.0
L_0146: call BattleTech.TurretDef get_TurretDef()
L_014b: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0150: callvirt Single get_VisibilityMultiplier()
L_0155: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_015a: pop
L_015b: ldarg.0
L_015c: call BattleTech.StatCollection get_StatCollection()
L_0161: ldstr "SpottingVisibilityAbsolute"
L_0166: ldc.r4 0
L_016b: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0170: pop
L_0171: ldarg.0
L_0172: call BattleTech.StatCollection get_StatCollection()
L_0177: ldstr "SensorDistanceMultiplier"
L_017c: ldarg.0
L_017d: call BattleTech.TurretDef get_TurretDef()
L_0182: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0187: callvirt Single get_SensorRangeMultiplier()
L_018c: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0191: pop
L_0192: ldarg.0
L_0193: call BattleTech.StatCollection get_StatCollection()
L_0198: ldstr "SensorDistanceAbsolute"
L_019d: ldc.r4 0
L_01a2: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01a7: pop
L_01a8: ldarg.0
L_01a9: call BattleTech.StatCollection get_StatCollection()
L_01ae: ldstr "SensorSignatureModifier"
L_01b3: ldarg.0
L_01b4: call BattleTech.TurretDef get_TurretDef()
L_01b9: callvirt BattleTech.TurretChassisDef get_Chassis()
L_01be: callvirt Single get_Signature()
L_01c3: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01c8: pop
L_01c9: ldarg.0
L_01ca: ldfld BattleTech.StatCollection statCollection
L_01cf: ldarg.0
L_01d0: ldc.i4.1
L_01d1: call System.String GetStringForArmorLocation(BattleTech.BuildingLocation)
L_01d6: ldarg.0
L_01d7: call BattleTech.TurretDef get_TurretDef()
L_01dc: ldfld System.Int32 AssignedArmor
L_01e1: conv.r4
L_01e2: ldarg.0
L_01e3: call Single get_ArmorMultiplier()
L_01e8: mul
L_01e9: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01ee: pop
L_01ef: ldarg.0
L_01f0: ldfld BattleTech.StatCollection statCollection
L_01f5: ldarg.0
L_01f6: ldc.i4.1
L_01f7: call System.String GetStringForStructureLocation(BattleTech.BuildingLocation)
L_01fc: ldarg.0
L_01fd: call BattleTech.TurretDef get_TurretDef()
L_0202: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0207: callvirt Int32 get_MaxInternalStructure()
L_020c: conv.r4
L_020d: ldarg.0
L_020e: call Single get_StructureMultiplier()
L_0213: mul
L_0214: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0219: pop
L_021a: ldarg.0
L_021b: ldfld BattleTech.StatCollection statCollection
L_0220: ldarg.0
L_0221: ldc.i4.1
L_0222: call System.String GetStringForStructureDamageLevel(BattleTech.BuildingLocation)
L_0227: ldarg.0
L_0228: call BattleTech.TurretDef get_TurretDef()
L_022d: callvirt BattleTech.LocationDamageLevel get_DamageLevel()
L_0232: callvirt BattleTech.Statistic AddStatistic[LocationDamageLevel](System.String, BattleTech.LocationDamageLevel)
L_0237: pop
L_0238: ldarg.0
L_0239: ldarg.0
L_023a: call Single get_TurretStructure()
L_023f: call Void set_StartingStructure(Single)
L_0244: ldarg.0
L_0245: ldarg.0
L_0246: call Single get_TurretArmor()
L_024b: call Void set_StartingArmor(Single)
L_0250: ldarg.0
L_0251: callvirt Void InitEffectStats()
L_0256: ldarg.0
L_0257: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_025c: callvirt Enumerator GetEnumerator()
L_0261: stloc.2
.try
{
	L_0262: br Label12
	L_0267: Label13
	L_0267: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0269: call BattleTech.MechComponent get_Current()
	L_026e: dup
	L_026f: callvirt Void Init()
	L_0274: callvirt Void InitStats()
	L_0279: Label12
	L_0279: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_027b: call Boolean MoveNext()
	L_0280: brtrue Label13
	L_0285: leave Label14
	L_028a: leave (autogenerated)
} // end try
.finally
{
	L_028f: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0291: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0297: callvirt Void Dispose()
	L_029c: endfinally
	L_029d: leave (autogenerated)
} // end handler
L_029e: Label14
L_029e: ldarg.0
L_029f: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_02a4: callvirt Enumerator GetEnumerator()
L_02a9: stloc.2
.try
{
	L_02aa: br Label15
	L_02af: Label16
	L_02af: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02b1: call BattleTech.MechComponent get_Current()
	L_02b6: callvirt Void InitPassiveSelfEffects()
	L_02bb: Label15
	L_02bb: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02bd: call Boolean MoveNext()
	L_02c2: brtrue Label16
	L_02c7: leave Label17
	L_02cc: leave (autogenerated)
} // end try
.finally
{
	L_02d1: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02d3: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_02d9: callvirt Void Dispose()
	L_02de: endfinally
	L_02df: leave (autogenerated)
} // end handler
L_02e0: Label17
L_02e0: ldarg.0
L_02e1: call Void AssignAmmoToWeapons()
L_02e6: br Label18
L_02eb: Label1
L_02eb: ldarg.0
L_02ec: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_02f1: callvirt Enumerator GetEnumerator()
L_02f6: stloc.2
.try
{
	L_02f7: br Label19
	L_02fc: Label20
	L_02fc: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02fe: call BattleTech.MechComponent get_Current()
	L_0303: callvirt Void UpdateToAuraIfNeeded()
	L_0308: Label19
	L_0308: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_030a: call Boolean MoveNext()
	L_030f: brtrue Label20
	L_0314: leave Label21
	L_0319: leave (autogenerated)
} // end try
.finally
{
	L_031e: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0320: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0326: callvirt Void Dispose()
	L_032b: endfinally
	L_032c: leave (autogenerated)
} // end handler
L_032d: Label18
L_032d: Label21
L_032d: ldarg.0
L_032e: call Void CalcAndSetAlphaStrikesRemaining()
L_0333: ldarg.0
L_0334: ldfld BattleTech.Weapon ImaginaryLaserWeapon
L_0339: callvirt Void Init()
L_033e: ldarg.0
L_033f: call UnityEngine.Vector3 get_zero()
L_0344: stfld UnityEngine.Vector3 HighestLOSPosition
L_0349: ldarg.0
L_034a: ldarg.0
L_034b: call BattleTech.TurretDef get_TurretDef()
L_0350: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0355: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_035a: ldlen
L_035b: conv.i4
L_035c: newarr UnityEngine.Vector3
L_0361: stfld UnityEngine.Vector3[] originalLOSSourcePositions
L_0366: ldarg.0
L_0367: ldarg.0
L_0368: call BattleTech.TurretDef get_TurretDef()
L_036d: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0372: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_0377: ldlen
L_0378: conv.i4
L_0379: newarr UnityEngine.Vector3
L_037e: stfld UnityEngine.Vector3[] losSourcePositions
L_0383: ldc.i4.0
L_0384: stloc.3
L_0385: br Label22
L_038a: Label24
L_038a: ldarg.0
L_038b: call BattleTech.TurretDef get_TurretDef()
L_0390: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0395: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_039a: ldloc.3
L_039b: ldelem BattleTech.FakeVector3
L_03a0: stloc.s 4 (BattleTech.FakeVector3)
L_03a2: ldarg.0
L_03a3: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03a8: ldloc.3
L_03a9: ldloc.s 4 (BattleTech.FakeVector3)
L_03ab: ldfld System.Single x
L_03b0: ldloc.s 4 (BattleTech.FakeVector3)
L_03b2: ldfld System.Single y
L_03b7: ldloc.s 4 (BattleTech.FakeVector3)
L_03b9: ldfld System.Single z
L_03be: newobj Void .ctor(Single, Single, Single)
L_03c3: stelem UnityEngine.Vector3
L_03c8: ldarg.0
L_03c9: call UnityEngine.Vector3[] get_LOSSourcePositions()
L_03ce: ldloc.3
L_03cf: ldarg.0
L_03d0: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03d5: ldloc.3
L_03d6: ldelem UnityEngine.Vector3
L_03db: stelem UnityEngine.Vector3
L_03e0: ldarg.0
L_03e1: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03e6: ldloc.3
L_03e7: ldelema UnityEngine.Vector3
L_03ec: ldfld System.Single y
L_03f1: ldarg.0
L_03f2: ldflda UnityEngine.Vector3 HighestLOSPosition
L_03f7: ldfld System.Single y
L_03fc: ble.un Label23
L_0401: ldarg.0
L_0402: ldflda UnityEngine.Vector3 HighestLOSPosition
L_0407: ldarg.0
L_0408: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_040d: ldloc.3
L_040e: ldelema UnityEngine.Vector3
L_0413: ldfld System.Single y
L_0418: stfld System.Single y
L_041d: Label23
L_041d: ldloc.3
L_041e: ldc.i4.1
L_041f: add
L_0420: stloc.3
L_0421: Label22
L_0421: ldloc.3
L_0422: ldarg.0
L_0423: ldfld UnityEngine.Vector3[] losSourcePositions
L_0428: ldlen
L_0429: conv.i4
L_042a: blt Label24
L_042f: ldarg.0
L_0430: ldarg.0
L_0431: call BattleTech.TurretDef get_TurretDef()
L_0436: callvirt BattleTech.TurretChassisDef get_Chassis()
L_043b: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_0440: ldlen
L_0441: conv.i4
L_0442: newarr UnityEngine.Vector3
L_0447: stfld UnityEngine.Vector3[] originalLOSTargetPositions
L_044c: ldarg.0
L_044d: ldarg.0
L_044e: call BattleTech.TurretDef get_TurretDef()
L_0453: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0458: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_045d: ldlen
L_045e: conv.i4
L_045f: newarr UnityEngine.Vector3
L_0464: stfld UnityEngine.Vector3[] losTargetPositions
L_0469: ldc.i4.0
L_046a: stloc.s 5 (System.Int32)
L_046c: br Label25
L_0471: Label26
L_0471: ldarg.0
L_0472: call BattleTech.TurretDef get_TurretDef()
L_0477: callvirt BattleTech.TurretChassisDef get_Chassis()
L_047c: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_0481: ldloc.s 5 (System.Int32)
L_0483: ldelem BattleTech.FakeVector3
L_0488: stloc.s 6 (BattleTech.FakeVector3)
L_048a: ldarg.0
L_048b: ldfld UnityEngine.Vector3[] originalLOSTargetPositions
L_0490: ldloc.s 5 (System.Int32)
L_0492: ldloc.s 6 (BattleTech.FakeVector3)
L_0494: ldfld System.Single x
L_0499: ldloc.s 6 (BattleTech.FakeVector3)
L_049b: ldfld System.Single y
L_04a0: ldloc.s 6 (BattleTech.FakeVector3)
L_04a2: ldfld System.Single z
L_04a7: newobj Void .ctor(Single, Single, Single)
L_04ac: stelem UnityEngine.Vector3
L_04b1: ldarg.0
L_04b2: ldfld UnityEngine.Vector3[] losTargetPositions
L_04b7: ldloc.s 5 (System.Int32)
L_04b9: ldarg.0
L_04ba: ldfld UnityEngine.Vector3[] originalLOSTargetPositions
L_04bf: ldloc.s 5 (System.Int32)
L_04c1: ldelem UnityEngine.Vector3
L_04c6: stelem UnityEngine.Vector3
L_04cb: ldloc.s 5 (System.Int32)
L_04cd: ldc.i4.1
L_04ce: add
L_04cf: stloc.s 5 (System.Int32)
L_04d1: Label25
L_04d1: ldloc.s 5 (System.Int32)
L_04d3: ldarg.0
L_04d4: ldfld UnityEngine.Vector3[] losTargetPositions
L_04d9: ldlen
L_04da: conv.i4
L_04db: blt Label26
L_04e0: ldarg.0
L_04e1: call Void UpdateLOSPositions()
L_04e6: ldarg.0
L_04e7: call BattleTech.CombatGameState get_Combat()
L_04ec: callvirt Boolean get_IsLoadingFromSave()
L_04f1: ldc.i4.0
L_04f2: ceq
L_04f4: stloc.0
L_04f5: ldarg.0
L_04f6: call BattleTech.Pilot get_pilot()
L_04fb: ldloc.0
L_04fc: ldarg.0
L_04fd: call BattleTech.CombatGameState get_Combat()
L_0502: callvirt Boolean get_IsLoadingFromSave()
L_0507: callvirt Void InitAbilities(Boolean, Boolean)
L_050c: ldarg.0
L_050d: ldloc.0
L_050e: call Void InitAbilities(Boolean)
L_0513: ldarg.0
L_0514: call Void AddTurretAbilitiesToPilot()
L_0519: ldarg.0
L_051a: call System.Collections.Generic.List`1[BattleTech.Ability] get_AuraAbilities()
L_051f: ldarg.0
L_0520: call BattleTech.Pilot get_pilot()
L_0525: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_AuraAbilities()
L_052a: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.Ability])
L_052f: ret
DONE

### Harmony id=MechEngineer.Features.TurretLimitedAmmo, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.Turret, System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0007: stloc.0
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: ldc.i4.0
L_000b: stloc.2
L_000c: br Label1
L_0011: Label4
L_0011: ldarg.0
L_0012: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0017: ldloc.2
L_0018: callvirt BattleTech.Weapon get_Item(Int32)
L_001d: call Boolean HasAmmo(BattleTech.Weapon)
L_0022: brfalse Label2
L_0027: ldc.i4.1
L_0028: stloc.1
L_0029: br Label3
L_002e: Label2
L_002e: ldloc.2
L_002f: ldc.i4.1
L_0030: add
L_0031: stloc.2
L_0032: Label1
L_0032: ldloc.2
L_0033: ldarg.0
L_0034: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0039: callvirt Int32 get_Count()
L_003e: blt Label4
L_0043: Label3
L_0043: ldarg.0
L_0044: callvirt Boolean get_IsDead()
L_0049: brtrue Label5
L_004e: ldloc.1
L_004f: brtrue Label6
L_0054: ldloc.0
L_0055: ldarg.0
L_0056: ldstr "OUT OF AMMO"
L_005b: ldc.i4.2
L_005c: ldc.i4.0
L_005d: newobj Void .ctor(ICombatant, String, MessageNature, Boolean)
L_0062: callvirt Void Add(BattleTech.IStackSequence)
L_0067: ldarg.0
L_0068: ldstr "Out of Ammo"
L_006d: ldc.i4.s 10
L_006f: ldc.i4.1
L_0070: ldc.i4.1
L_0071: ldc.i4.m1
L_0072: ldstr ""
L_0077: ldc.i4.0
L_0078: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_007d: ldarg.0
L_007e: ldarg.0
L_007f: call System.String get_GUID()
L_0084: callvirt Void HandleDeath(System.String)
L_0089: Label5
L_0089: Label6
L_0089: ldloc.0
L_008a: ret
DONE

### Patch BattleTech.Weapon, Int32 DecrementAmmo(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: Local var 3: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 3 (System.Int32)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldloca 3 (System.Int32)
L_000f: call Boolean Prefix(BattleTech.Weapon, Int32, Int32 ByRef)
L_0014: brfalse Label0
L_0019: ldarg.0
L_001a: call Int32 get_ShotsWhenFired()
L_001f: stloc.0
L_0020: ldarg.0
L_0021: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0026: callvirt Boolean get_Is_NotSet()
L_002b: brtrue Label1
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor parent
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.AbstractActor parent
L_0041: callvirt BattleTech.UnitType get_UnitType()
L_0046: ldc.i4.4
L_0047: bne.un Label3
L_004c: Label1
L_004c: ldloc.0
L_004d: br Label12
L_0052: Label2
L_0052: Label3
L_0052: ldarg.0
L_0053: call Int32 get_InternalAmmo()
L_0058: ldloc.0
L_0059: blt Label4
L_005e: ldarg.0
L_005f: call BattleTech.StatCollection get_StatCollection()
L_0064: ldarg.0
L_0065: call System.String get_uid()
L_006a: ldarg.1
L_006b: ldstr "InternalAmmo"
L_0070: ldc.i4.2
L_0071: ldloc.0
L_0072: ldc.i4.m1
L_0073: ldc.i4.1
L_0074: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0079: pop
L_007a: ldc.i4.0
L_007b: stloc.0
L_007c: br Label5
L_0081: Label4
L_0081: ldloc.0
L_0082: ldarg.0
L_0083: call Int32 get_InternalAmmo()
L_0088: sub
L_0089: stloc.0
L_008a: ldarg.0
L_008b: call BattleTech.StatCollection get_StatCollection()
L_0090: ldarg.0
L_0091: call System.String get_uid()
L_0096: ldarg.1
L_0097: ldstr "InternalAmmo"
L_009c: ldc.i4.0
L_009d: ldc.i4.0
L_009e: ldc.i4.m1
L_009f: ldc.i4.1
L_00a0: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00a5: pop
L_00a6: Label5
L_00a6: ldloc.0
L_00a7: ldc.i4.0
L_00a8: ble Label6
L_00ad: ldc.i4.0
L_00ae: stloc.1
L_00af: br Label7
L_00b4: Label11
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_00ba: ldloc.1
L_00bb: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: callvirt Int32 get_CurrentAmmo()
L_00c7: ldloc.0
L_00c8: blt Label8
L_00cd: ldloc.2
L_00ce: callvirt BattleTech.StatCollection get_StatCollection()
L_00d3: ldarg.0
L_00d4: call System.String get_uid()
L_00d9: ldarg.1
L_00da: ldstr "CurrentAmmo"
L_00df: ldc.i4.2
L_00e0: ldloc.0
L_00e1: ldc.i4.m1
L_00e2: ldc.i4.1
L_00e3: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00e8: pop
L_00e9: ldc.i4.0
L_00ea: stloc.0
L_00eb: br Label9
L_00f0: Label8
L_00f0: ldloc.0
L_00f1: ldloc.2
L_00f2: callvirt Int32 get_CurrentAmmo()
L_00f7: sub
L_00f8: stloc.0
L_00f9: ldloc.2
L_00fa: callvirt BattleTech.StatCollection get_StatCollection()
L_00ff: ldarg.0
L_0100: call System.String get_uid()
L_0105: ldarg.1
L_0106: ldstr "CurrentAmmo"
L_010b: ldc.i4.0
L_010c: ldc.i4.0
L_010d: ldc.i4.m1
L_010e: ldc.i4.1
L_010f: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0114: pop
L_0115: Label9
L_0115: ldloc.0
L_0116: ldc.i4.0
L_0117: ble Label10
L_011c: ldloc.1
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.1
L_0120: Label7
L_0120: ldloc.1
L_0121: ldarg.0
L_0122: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0127: callvirt Int32 get_Count()
L_012c: blt Label11
L_0131: Label6
L_0131: Label10
L_0131: ldarg.0
L_0132: call Int32 get_ShotsWhenFired()
L_0137: ldloc.0
L_0138: sub
L_0139: Label12
L_0139: stloc 3 (System.Int32)
L_013a: Label0
L_013a: ldloc 3 (System.Int32)
L_013b: ret
DONE

### Harmony id=MechEngineer.Features.OverrideGhostVFX, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideGhostVFX.OverrideGhostVFXSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.PilotableActorRepresentation, Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_0000: Local var 0: BattleTech.Rendering.BTLight[]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.ChassisLocations
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.Int32
L_0000: ldarg.0
L_0001: ldflda System.Nullable`1[BattleTech.VisibilityLevel] forcedPlayerVisibilityLevel
L_0006: call Boolean get_HasValue()
L_000b: brfalse Label1
L_0010: ldarg.0
L_0011: ldflda System.Nullable`1[BattleTech.VisibilityLevel] forcedPlayerVisibilityLevel
L_0016: call BattleTech.VisibilityLevel get_Value()
L_001b: starg.s 1
L_001d: Label1
L_001d: ldarg.1
L_001e: ldc.i4.s 9
L_0020: beq Label2
L_0025: ldarg.1
L_0026: ldc.i4.6
L_0027: bne.un Label3
L_002c: Label2
L_002c: ldarg.0
L_002d: ldfld UnityEngine.GameObject VisibleObject
L_0032: ldc.i4.1
L_0033: callvirt Void SetActive(Boolean)
L_0038: ldarg.0
L_0039: ldfld UnityEngine.GameObject BlipObjectUnknown
L_003e: ldc.i4.0
L_003f: callvirt Void SetActive(Boolean)
L_0044: ldarg.0
L_0045: ldfld UnityEngine.GameObject BlipObjectIdentified
L_004a: ldc.i4.0
L_004b: callvirt Void SetActive(Boolean)
L_0050: ldarg.0
L_0051: ldfld UnityEngine.CapsuleCollider mainCollider
L_0056: ldc.i4.1
L_0057: callvirt Void set_enabled(Boolean)
L_005c: ldarg.0
L_005d: call BattleTech.AbstractActor get_parentActor()
L_0062: callvirt Boolean get_IsGhosted()
L_0067: brfalse Label4
L_006c: ldarg.0
L_006d: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0072: ldc.i4.0
L_0073: callvirt Void SetActive(Boolean)
L_0078: ldarg.0
L_0079: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_007e: ldc.i4.1
L_007f: callvirt Void SetActive(Boolean)
L_0084: br Label5
L_0089: Label4
L_0089: ldarg.0
L_008a: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_008f: ldc.i4.0
L_0090: callvirt Void SetActive(Boolean)
L_0095: ldarg.0
L_0096: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_009b: ldc.i4.0
L_009c: callvirt Void SetActive(Boolean)
L_00a1: Label5
L_00a1: ldarg.0
L_00a2: call Boolean get_IsDead()
L_00a7: brtrue Label6
L_00ac: ldarg.0
L_00ad: callvirt Void StartPersistentAudio()
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_00b8: brfalse Label7
L_00bd: ldarg.0
L_00be: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_00c3: stloc.0
L_00c4: ldc.i4.0
L_00c5: stloc.1
L_00c6: br Label8
L_00cb: Label9
L_00cb: ldloc.0
L_00cc: ldloc.1
L_00cd: ldelem.ref
L_00ce: ldc.i4.1
L_00cf: callvirt Void set_enabled(Boolean)
L_00d4: ldloc.1
L_00d5: ldc.i4.1
L_00d6: add
L_00d7: stloc.1
L_00d8: Label8
L_00d8: ldloc.1
L_00d9: ldloc.0
L_00da: ldlen
L_00db: conv.i4
L_00dc: blt Label9
L_00e1: Label6
L_00e1: Label7
L_00e1: ldarg.0
L_00e2: call Void ResumeAllPersistentVFX()
L_00e7: br Label10
L_00ec: Label3
L_00ec: ldarg.1
L_00ed: ldc.i4.0
L_00ee: ble Label11
L_00f3: ldarg.0
L_00f4: call Boolean get_IsDead()
L_00f9: brtrue Label12
L_00fe: ldarg.0
L_00ff: ldfld UnityEngine.GameObject VisibleObject
L_0104: ldc.i4.0
L_0105: callvirt Void SetActive(Boolean)
L_010a: ldarg.0
L_010b: call Void PauseAllPersistentVFX()
L_0110: ldarg.0
L_0111: callvirt Void StopPersistentAudio()
L_0116: ldarg.0
L_0117: ldfld UnityEngine.CapsuleCollider mainCollider
L_011c: ldc.i4.1
L_011d: callvirt Void set_enabled(Boolean)
L_0122: Label12
L_0122: ldarg.0
L_0123: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0128: brfalse Label13
L_012d: ldarg.0
L_012e: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0133: stloc.0
L_0134: ldc.i4.0
L_0135: stloc.1
L_0136: br Label14
L_013b: Label15
L_013b: ldloc.0
L_013c: ldloc.1
L_013d: ldelem.ref
L_013e: ldc.i4.0
L_013f: callvirt Void set_enabled(Boolean)
L_0144: ldloc.1
L_0145: ldc.i4.1
L_0146: add
L_0147: stloc.1
L_0148: Label14
L_0148: ldloc.1
L_0149: ldloc.0
L_014a: ldlen
L_014b: conv.i4
L_014c: blt Label15
L_0151: Label13
L_0151: ldarg.0
L_0152: ldarg.0
L_0153: call UnityEngine.Transform get_transform()
L_0158: callvirt UnityEngine.Vector3 get_position()
L_015d: ldarg.0
L_015e: call UnityEngine.Transform get_transform()
L_0163: callvirt UnityEngine.Quaternion get_rotation()
L_0168: call Void SetBlipPositionRotation(UnityEngine.Vector3, UnityEngine.Quaternion)
L_016d: ldarg.0
L_016e: call BattleTech.AbstractActor get_parentActor()
L_0173: callvirt BattleTech.CombatGameState get_Combat()
L_0178: callvirt BattleTech.CombatGameConstants get_Constants()
L_017d: callvirt BattleTech.VisibilityConstantsDef get_Visibility()
L_0182: ldfld System.Boolean GhostStateHidesBlips
L_0187: brfalse Label16
L_018c: ldarg.0
L_018d: call BattleTech.AbstractActor get_parentActor()
L_0192: callvirt Boolean get_IsGhosted()
L_0197: brfalse Label17
L_019c: ldarg.0
L_019d: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_01a2: ldc.i4.0
L_01a3: callvirt Void SetActive(Boolean)
L_01a8: ldarg.0
L_01a9: ldfld UnityEngine.GameObject BlipObjectUnknown
L_01ae: ldc.i4.0
L_01af: callvirt Void SetActive(Boolean)
L_01b4: ldarg.0
L_01b5: ldfld UnityEngine.GameObject BlipObjectIdentified
L_01ba: ldc.i4.0
L_01bb: callvirt Void SetActive(Boolean)
L_01c0: ldarg.0
L_01c1: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_01c6: ldc.i4.0
L_01c7: callvirt Void SetActive(Boolean)
L_01cc: ldarg.0
L_01cd: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_01d2: ldc.i4.0
L_01d3: callvirt Void SetActive(Boolean)
L_01d8: ldarg.0
L_01d9: ldfld UnityEngine.CapsuleCollider mainCollider
L_01de: ldc.i4.0
L_01df: callvirt Void set_enabled(Boolean)
L_01e4: br Label18
L_01e9: Label16
L_01e9: Label17
L_01e9: ldc.i4.0
L_01ea: stloc.2
L_01eb: ldarg.1
L_01ec: ldc.i4.4
L_01ed: sub
L_01ee: switch Labels19,20,21,22,23
L_0207: br Label24
L_020c: Label20
L_020c: Label23
L_020c: ldarg.0
L_020d: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0212: ldc.i4.0
L_0213: callvirt Void SetActive(Boolean)
L_0218: ldarg.0
L_0219: ldfld UnityEngine.GameObject BlipObjectIdentified
L_021e: ldc.i4.1
L_021f: callvirt Void SetActive(Boolean)
L_0224: ldarg.0
L_0225: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_022a: ldc.i4.0
L_022b: callvirt Void SetActive(Boolean)
L_0230: ldarg.0
L_0231: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0236: ldc.i4.0
L_0237: callvirt Void SetActive(Boolean)
L_023c: ldarg.0
L_023d: ldfld UnityEngine.GameObject BlipObjectIdentified
L_0242: callvirt Boolean get_activeSelf()
L_0247: stloc.2
L_0248: br Label25
L_024d: Label19
L_024d: ldarg.0
L_024e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0253: ldc.i4.1
L_0254: callvirt Void SetActive(Boolean)
L_0259: ldarg.0
L_025a: ldfld UnityEngine.GameObject BlipObjectIdentified
L_025f: ldc.i4.0
L_0260: callvirt Void SetActive(Boolean)
L_0265: ldarg.0
L_0266: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_026b: ldc.i4.0
L_026c: callvirt Void SetActive(Boolean)
L_0271: ldarg.0
L_0272: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0277: ldc.i4.0
L_0278: callvirt Void SetActive(Boolean)
L_027d: ldarg.0
L_027e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0283: callvirt Boolean get_activeSelf()
L_0288: stloc.2
L_0289: br Label26
L_028e: Label21
L_028e: Label22
L_028e: Label24
L_028e: ldsfld HBS.Logging.ILog initLogger
L_0293: ldarg.0
L_0294: call BattleTech.AbstractActor get_parentActor()
L_0299: callvirt System.String get_DisplayName()
L_029e: ldstr " OnPlayerVisibilityChanged got an invalid visLevel: "
L_02a3: ldarg.1
L_02a4: box BattleTech.VisibilityLevel
L_02a9: call System.String Concat(System.Object, System.Object, System.Object)
L_02ae: callvirt Void LogError(System.Object)
L_02b3: Label25
L_02b3: Label26
L_02b3: ldloc.2
L_02b4: brtrue Label27
L_02b9: ldc.i4 248
L_02be: call AkGameObj get_GlobalAudioObject()
L_02c3: ldnull
L_02c4: ldnull
L_02c5: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_02ca: pop
L_02cb: br Label28
L_02d0: Label11
L_02d0: ldarg.0
L_02d1: call Boolean get_IsDead()
L_02d6: brtrue Label29
L_02db: ldarg.0
L_02dc: ldfld UnityEngine.GameObject VisibleObject
L_02e1: ldc.i4.0
L_02e2: callvirt Void SetActive(Boolean)
L_02e7: ldarg.0
L_02e8: call Void PauseAllPersistentVFX()
L_02ed: ldarg.0
L_02ee: callvirt Void StopPersistentAudio()
L_02f3: Label29
L_02f3: ldarg.0
L_02f4: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_02f9: brfalse Label30
L_02fe: ldarg.0
L_02ff: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0304: stloc.0
L_0305: ldc.i4.0
L_0306: stloc.1
L_0307: br Label31
L_030c: Label32
L_030c: ldloc.0
L_030d: ldloc.1
L_030e: ldelem.ref
L_030f: ldc.i4.0
L_0310: callvirt Void set_enabled(Boolean)
L_0315: ldloc.1
L_0316: ldc.i4.1
L_0317: add
L_0318: stloc.1
L_0319: Label31
L_0319: ldloc.1
L_031a: ldloc.0
L_031b: ldlen
L_031c: conv.i4
L_031d: blt Label32
L_0322: Label30
L_0322: ldarg.0
L_0323: ldarg.0
L_0324: call UnityEngine.Transform get_transform()
L_0329: callvirt UnityEngine.Vector3 get_position()
L_032e: ldarg.0
L_032f: call UnityEngine.Transform get_transform()
L_0334: callvirt UnityEngine.Quaternion get_rotation()
L_0339: call Void SetBlipPositionRotation(UnityEngine.Vector3, UnityEngine.Quaternion)
L_033e: ldarg.0
L_033f: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0344: ldc.i4.0
L_0345: callvirt Void SetActive(Boolean)
L_034a: ldarg.0
L_034b: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0350: ldc.i4.0
L_0351: callvirt Void SetActive(Boolean)
L_0356: ldarg.0
L_0357: ldfld UnityEngine.GameObject BlipObjectIdentified
L_035c: ldc.i4.0
L_035d: callvirt Void SetActive(Boolean)
L_0362: ldarg.0
L_0363: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0368: ldc.i4.0
L_0369: callvirt Void SetActive(Boolean)
L_036e: ldarg.0
L_036f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0374: ldc.i4.0
L_0375: callvirt Void SetActive(Boolean)
L_037a: ldarg.0
L_037b: ldfld UnityEngine.CapsuleCollider mainCollider
L_0380: ldc.i4.0
L_0381: callvirt Void set_enabled(Boolean)
L_0386: Label10
L_0386: Label18
L_0386: Label27
L_0386: Label28
L_0386: ldarg.0
L_0387: call Boolean get_IsDead()
L_038c: brfalse Label33
L_0391: ldarg.0
L_0392: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0397: ldc.i4.0
L_0398: callvirt Void SetActive(Boolean)
L_039d: ldarg.0
L_039e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_03a3: ldc.i4.0
L_03a4: callvirt Void SetActive(Boolean)
L_03a9: ldarg.0
L_03aa: ldfld UnityEngine.GameObject BlipObjectIdentified
L_03af: ldc.i4.0
L_03b0: callvirt Void SetActive(Boolean)
L_03b5: ldarg.0
L_03b6: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_03bb: ldc.i4.0
L_03bc: callvirt Void SetActive(Boolean)
L_03c1: ldarg.0
L_03c2: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_03c7: ldc.i4.0
L_03c8: callvirt Void SetActive(Boolean)
L_03cd: Label33
L_03cd: ldarg.0
L_03ce: call Boolean get_IsDead()
L_03d3: brtrue Label34
L_03d8: ldarg.0
L_03d9: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_03de: brfalse Label35
L_03e3: ldc.i4.0
L_03e4: stloc.3
L_03e5: br Label36
L_03ea: Label42
L_03ea: ldarg.0
L_03eb: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_03f0: ldloc.3
L_03f1: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_03f6: ldnull
L_03f7: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_03fc: brfalse Label37
L_0401: ldarg.0
L_0402: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_0407: ldloc.3
L_0408: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_040d: callvirt Int32 get_mountedLocation()
L_0412: stloc.s 4 (System.Int32)
L_0414: ldloc.s 4 (System.Int32)
L_0416: stloc.s 5 (BattleTech.ChassisLocations)
L_0418: ldarg.0
L_0419: call BattleTech.AbstractActor get_parentActor()
L_041e: ldloc.s 4 (System.Int32)
L_0420: callvirt Single StructureForLocation(Int32)
L_0425: ldc.r4 0
L_042a: cgt
L_042c: stloc.s 6 (System.Boolean)
L_042e: ldloc.s 5 (BattleTech.ChassisLocations)
L_0430: ldc.i4.2
L_0431: beq Label38
L_0436: ldloc.s 5 (BattleTech.ChassisLocations)
L_0438: ldc.i4.s 32
L_043a: beq Label39
L_043f: ldc.i4.1
L_0440: stloc.s 6 (System.Boolean)
L_0442: Label38
L_0442: Label39
L_0442: ldloc.s 6 (System.Boolean)
L_0444: brfalse Label40
L_0449: ldarg.0
L_044a: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_044f: ldloc.3
L_0450: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_0455: ldarg.1
L_0456: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_045b: br Label41
L_0460: Label40
L_0460: ldarg.0
L_0461: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_0466: ldloc.3
L_0467: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_046c: ldc.i4.0
L_046d: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_0472: Label37
L_0472: Label41
L_0472: ldloc.3
L_0473: ldc.i4.1
L_0474: add
L_0475: stloc.3
L_0476: Label36
L_0476: ldloc.3
L_0477: ldarg.0
L_0478: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_047d: callvirt Int32 get_Count()
L_0482: blt Label42
L_0487: Label35
L_0487: ldarg.0
L_0488: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_048d: brfalse Label43
L_0492: ldc.i4.0
L_0493: stloc.s 7 (System.Int32)
L_0495: br Label44
L_049a: Label46
L_049a: ldarg.0
L_049b: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04a0: ldloc.s 7 (System.Int32)
L_04a2: callvirt BattleTech.ComponentRepresentation get_Item(Int32)
L_04a7: ldnull
L_04a8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_04ad: brfalse Label45
L_04b2: ldarg.0
L_04b3: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04b8: ldloc.s 7 (System.Int32)
L_04ba: callvirt BattleTech.ComponentRepresentation get_Item(Int32)
L_04bf: ldarg.1
L_04c0: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_04c5: Label45
L_04c5: ldloc.s 7 (System.Int32)
L_04c7: ldc.i4.1
L_04c8: add
L_04c9: stloc.s 7 (System.Int32)
L_04cb: Label44
L_04cb: ldloc.s 7 (System.Int32)
L_04cd: ldarg.0
L_04ce: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04d3: callvirt Int32 get_Count()
L_04d8: blt Label46
L_04dd: Label34
L_04dd: Label43
L_04dd: ldarg.0
L_04de: call Void Postfix(BattleTech.PilotableActorRepresentation)
L_04e3: ret
DONE

### Patch BattleTech.GameRepresentation, UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: UnityEngine.ParticleSystem
L_0000: Local var 2: UnityEngine.Transform
L_0000: Local var 3: BattleTech.Rendering.BTWindZone
L_0000: Local var 4: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: AutoPoolObject
L_0000: Local var 8: System.Collections.Generic.List`1[[UnityEngine.ParticleSystem, UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: UnityEngine.ParticleSystem
L_0000: ldnull
L_0001: stloc 9 (UnityEngine.ParticleSystem)
L_0003: ldarg 3
L_0009: call Boolean Prefix(System.String)
L_000e: brfalse Label0
L_0013: ldarg.3
L_0014: call Boolean IsNullOrEmpty(System.String)
L_0019: brfalse Label1
L_001e: ldnull
L_001f: br Label19
L_0024: Label1
L_0024: ldarg.0
L_0025: call BattleTech.ICombatant get_parentCombatant()
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: callvirt BattleTech.Data.DataManager get_DataManager()
L_0034: ldarg.3
L_0035: ldc.i4.s 45
L_0037: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0039: initobj System.Nullable`1[UnityEngine.Vector3]
L_003f: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0041: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0043: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0049: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_004b: ldnull
L_004c: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0051: stloc.0
L_0052: ldloc.0
L_0053: ldnull
L_0054: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0059: brfalse Label2
L_005e: ldsfld HBS.Logging.ILog initLogger
L_0063: ldstr "Error instantiating VFX "
L_0068: ldarg.3
L_0069: call System.String Concat(System.String, System.String)
L_006e: ldarg.0
L_006f: callvirt Void LogError(System.Object, UnityEngine.Object)
L_0074: ldnull
L_0075: br Label20
L_007a: Label2
L_007a: ldloc.0
L_007b: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_0080: stloc.1
L_0081: ldloc.1
L_0082: ldc.i4.1
L_0083: callvirt Void Stop(Boolean)
L_0088: ldloc.1
L_0089: ldc.i4.1
L_008a: callvirt Void Clear(Boolean)
L_008f: ldloc.0
L_0090: callvirt UnityEngine.Transform get_transform()
L_0095: stloc.2
L_0096: ldloc.2
L_0097: ldnull
L_0098: callvirt Void SetParent(UnityEngine.Transform)
L_009d: ldloc.0
L_009e: ldc.i4.1
L_009f: callvirt BattleTech.Rendering.BTWindZone GetComponentInChildren[BTWindZone](Boolean)
L_00a4: stloc.3
L_00a5: ldloc.3
L_00a6: ldnull
L_00a7: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00ac: brfalse Label3
L_00b1: ldloc.3
L_00b2: callvirt Boolean get_enabled()
L_00b7: brfalse Label4
L_00bc: ldloc.3
L_00bd: callvirt Void ResetZero()
L_00c2: Label3
L_00c2: Label4
L_00c2: ldloc.0
L_00c3: ldc.i4.1
L_00c4: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_00c9: stloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_00cb: ldarg.s 4
L_00cd: brfalse Label5
L_00d2: ldloc.2
L_00d3: ldarg.1
L_00d4: ldc.i4.0
L_00d5: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_00da: ldloc.2
L_00db: ldarg.2
L_00dc: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00e1: br Label6
L_00e6: Label5
L_00e6: ldloc.2
L_00e7: call UnityEngine.Vector3 get_zero()
L_00ec: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00f1: ldarg.1
L_00f2: ldnull
L_00f3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00f8: brfalse Label7
L_00fd: ldloc.2
L_00fe: ldarg.1
L_00ff: callvirt UnityEngine.Vector3 get_position()
L_0104: callvirt Void set_position(UnityEngine.Vector3)
L_0109: Label7
L_0109: ldloc.2
L_010a: dup
L_010b: callvirt UnityEngine.Vector3 get_position()
L_0110: ldarg.2
L_0111: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0116: callvirt Void set_position(UnityEngine.Vector3)
L_011b: Label6
L_011b: ldarg.s 5
L_011d: call UnityEngine.Vector3 get_zero()
L_0122: call Boolean op_Inequality(UnityEngine.Vector3, UnityEngine.Vector3)
L_0127: brfalse Label8
L_012c: ldloc.2
L_012d: ldarg.s 5
L_012f: callvirt Void LookAt(UnityEngine.Vector3)
L_0134: br Label9
L_0139: Label8
L_0139: ldloc.2
L_013a: call UnityEngine.Quaternion get_identity()
L_013f: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0144: Label9
L_0144: ldloc.2
L_0145: call UnityEngine.Vector3 get_one()
L_014a: callvirt Void set_localScale(UnityEngine.Vector3)
L_014f: ldarg.s 6
L_0151: brfalse Label10
L_0156: ldloc.0
L_0157: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_015c: stloc.s 7 (AutoPoolObject)
L_015e: ldloc.s 7 (AutoPoolObject)
L_0160: ldnull
L_0161: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0166: brfalse Label11
L_016b: ldloc.0
L_016c: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_0171: stloc.s 7 (AutoPoolObject)
L_0173: Label11
L_0173: ldarg.s 7
L_0175: ldc.r4 0
L_017a: ble.un Label12
L_017f: ldloc.s 7 (AutoPoolObject)
L_0181: ldarg.0
L_0182: call BattleTech.ICombatant get_parentCombatant()
L_0187: callvirt BattleTech.CombatGameState get_Combat()
L_018c: callvirt BattleTech.Data.DataManager get_DataManager()
L_0191: ldarg.3
L_0192: ldarg.s 7
L_0194: callvirt Void Init(BattleTech.Data.DataManager, System.String, Single)
L_0199: br Label13
L_019e: Label12
L_019e: ldloc.s 7 (AutoPoolObject)
L_01a0: ldarg.0
L_01a1: call BattleTech.ICombatant get_parentCombatant()
L_01a6: callvirt BattleTech.CombatGameState get_Combat()
L_01ab: callvirt BattleTech.Data.DataManager get_DataManager()
L_01b0: ldarg.3
L_01b1: ldloc.1
L_01b2: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_01b7: br Label14
L_01bc: Label10
L_01bc: ldnull
L_01bd: stloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01bf: ldarg.0
L_01c0: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_01c5: ldarg.3
L_01c6: ldloca.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01c8: callvirt Boolean TryGetValue(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem] ByRef)
L_01cd: brfalse Label15
L_01d2: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01d4: ldloc.1
L_01d5: callvirt Void Add(UnityEngine.ParticleSystem)
L_01da: ldarg.0
L_01db: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_01e0: ldarg.3
L_01e1: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01e3: callvirt Void set_Item(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01e8: br Label16
L_01ed: Label15
L_01ed: newobj Void .ctor()
L_01f2: stloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01f4: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01f6: ldloc.1
L_01f7: callvirt Void Add(UnityEngine.ParticleSystem)
L_01fc: ldarg.0
L_01fd: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_0202: ldarg.3
L_0203: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_0205: callvirt Void set_Item(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_020a: Label13
L_020a: Label14
L_020a: Label16
L_020a: ldloc.1
L_020b: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_0210: ldloc.1
L_0211: ldc.i4.1
L_0212: callvirt Void Play(Boolean)
L_0217: ldloc.3
L_0218: ldnull
L_0219: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_021e: brfalse Label17
L_0223: ldloc.3
L_0224: callvirt Void PlayAnimCurve()
L_0229: Label17
L_0229: ldloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_022b: ldnull
L_022c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0231: brfalse Label18
L_0236: ldloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_0238: callvirt Void PlayAnimation()
L_023d: Label18
L_023d: ldloc.1
L_023e: Label19
L_023e: Label20
L_023e: stloc 9 (UnityEngine.ParticleSystem)
L_0240: Label0
L_0240: ldloc 9 (UnityEngine.ParticleSystem)
L_0242: ret
DONE

### Harmony id=MechEngineer.Features.OmniSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings, MechEngineer, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.05.21
### Patch BattleTech.UI.MechLabMechInfoWidget, Void GetTotalHardpoints()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldarg.0
L_0003: ldfld BattleTech.UI.MechLabPanel mechLab
L_0008: ldfld BattleTech.MechDef activeMechDef
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.MechLabPanel mechLab
L_0019: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_001e: ldfld System.Int32 totalBallisticHardpoints
L_0023: ldarg.0
L_0024: ldfld BattleTech.UI.MechLabPanel mechLab
L_0029: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_002e: ldfld System.Int32 totalBallisticHardpoints
L_0033: add
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.MechLabPanel mechLab
L_003a: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003f: ldfld System.Int32 totalBallisticHardpoints
L_0044: add
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabPanel mechLab
L_004b: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0050: ldfld System.Int32 totalBallisticHardpoints
L_0055: add
L_0056: ldarg.0
L_0057: ldfld BattleTech.UI.MechLabPanel mechLab
L_005c: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0061: ldfld System.Int32 totalBallisticHardpoints
L_0066: add
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechLabPanel mechLab
L_006d: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0072: ldfld System.Int32 totalBallisticHardpoints
L_0077: add
L_0078: ldarg.0
L_0079: ldfld BattleTech.UI.MechLabPanel mechLab
L_007e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0083: ldfld System.Int32 totalBallisticHardpoints
L_0088: add
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.MechLabPanel mechLab
L_008f: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0094: ldfld System.Int32 totalBallisticHardpoints
L_0099: add
L_009a: stfld System.Int32 totalBallisticHardpoints
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a6: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ab: ldfld System.Int32 totalEnergyHardpoints
L_00b0: ldarg.0
L_00b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b6: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_00bb: ldfld System.Int32 totalEnergyHardpoints
L_00c0: add
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.MechLabPanel mechLab
L_00c7: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00cc: ldfld System.Int32 totalEnergyHardpoints
L_00d1: add
L_00d2: ldarg.0
L_00d3: ldfld BattleTech.UI.MechLabPanel mechLab
L_00d8: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00dd: ldfld System.Int32 totalEnergyHardpoints
L_00e2: add
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.UI.MechLabPanel mechLab
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00ee: ldfld System.Int32 totalEnergyHardpoints
L_00f3: add
L_00f4: ldarg.0
L_00f5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00fa: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00ff: ldfld System.Int32 totalEnergyHardpoints
L_0104: add
L_0105: ldarg.0
L_0106: ldfld BattleTech.UI.MechLabPanel mechLab
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldfld System.Int32 totalEnergyHardpoints
L_0115: add
L_0116: ldarg.0
L_0117: ldfld BattleTech.UI.MechLabPanel mechLab
L_011c: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0121: ldfld System.Int32 totalEnergyHardpoints
L_0126: add
L_0127: stfld System.Int32 totalEnergyHardpoints
L_012c: ldarg.0
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0138: ldfld System.Int32 totalMissileHardpoints
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0143: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0148: ldfld System.Int32 totalMissileHardpoints
L_014d: add
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0154: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0159: ldfld System.Int32 totalMissileHardpoints
L_015e: add
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_016a: ldfld System.Int32 totalMissileHardpoints
L_016f: add
L_0170: ldarg.0
L_0171: ldfld BattleTech.UI.MechLabPanel mechLab
L_0176: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_017b: ldfld System.Int32 totalMissileHardpoints
L_0180: add
L_0181: ldarg.0
L_0182: ldfld BattleTech.UI.MechLabPanel mechLab
L_0187: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_018c: ldfld System.Int32 totalMissileHardpoints
L_0191: add
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabPanel mechLab
L_0198: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: add
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a9: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01ae: ldfld System.Int32 totalMissileHardpoints
L_01b3: add
L_01b4: stfld System.Int32 totalMissileHardpoints
L_01b9: ldarg.0
L_01ba: ldarg.0
L_01bb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01c0: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_01c5: ldfld System.Int32 totalSmallHardpoints
L_01ca: ldarg.0
L_01cb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01d0: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_01d5: ldfld System.Int32 totalSmallHardpoints
L_01da: add
L_01db: ldarg.0
L_01dc: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e1: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_01e6: ldfld System.Int32 totalSmallHardpoints
L_01eb: add
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f2: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_01f7: ldfld System.Int32 totalSmallHardpoints
L_01fc: add
L_01fd: ldarg.0
L_01fe: ldfld BattleTech.UI.MechLabPanel mechLab
L_0203: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0208: ldfld System.Int32 totalSmallHardpoints
L_020d: add
L_020e: ldarg.0
L_020f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0214: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0219: ldfld System.Int32 totalSmallHardpoints
L_021e: add
L_021f: ldarg.0
L_0220: ldfld BattleTech.UI.MechLabPanel mechLab
L_0225: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_022a: ldfld System.Int32 totalSmallHardpoints
L_022f: add
L_0230: ldarg.0
L_0231: ldfld BattleTech.UI.MechLabPanel mechLab
L_0236: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_023b: ldfld System.Int32 totalSmallHardpoints
L_0240: add
L_0241: stfld System.Int32 totalSmallHardpoints
L_0246: ldarg.0
L_0247: ldfld BattleTech.UI.MechLabPanel mechLab
L_024c: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0251: ldfld System.Int32 currentJumpjetCount
L_0256: ldarg.0
L_0257: ldfld BattleTech.UI.MechLabPanel mechLab
L_025c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0261: ldfld System.Int32 currentJumpjetCount
L_0266: add
L_0267: ldarg.0
L_0268: ldfld BattleTech.UI.MechLabPanel mechLab
L_026d: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0272: ldfld System.Int32 currentJumpjetCount
L_0277: add
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.MechLabPanel mechLab
L_027e: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0283: ldfld System.Int32 currentJumpjetCount
L_0288: add
L_0289: ldarg.0
L_028a: ldfld BattleTech.UI.MechLabPanel mechLab
L_028f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0294: ldfld System.Int32 currentJumpjetCount
L_0299: add
L_029a: ldarg.0
L_029b: ldfld BattleTech.UI.MechLabPanel mechLab
L_02a0: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_02a5: ldfld System.Int32 currentJumpjetCount
L_02aa: add
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.UI.MechLabPanel mechLab
L_02b1: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_02b6: ldfld System.Int32 currentJumpjetCount
L_02bb: add
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02c2: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_02c7: ldfld System.Int32 currentJumpjetCount
L_02cc: add
L_02cd: stloc.0
L_02ce: ldarg.0
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d5: ldfld BattleTech.MechDef activeMechDef
L_02da: callvirt BattleTech.ChassisDef get_Chassis()
L_02df: callvirt Int32 get_MaxJumpjets()
L_02e4: stfld System.Int32 totalJumpjets
L_02e9: Label1
L_02e9: ldarg.0
L_02ea: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_02ef: ldc.i4.0
L_02f0: ldelem.ref
L_02f1: ldc.i4.1
L_02f2: ldstr "{0}"
L_02f7: ldarg.0
L_02f8: ldfld System.Int32 totalBallisticHardpoints
L_02fd: box System.Int32
L_0302: call System.String Format(System.String, System.Object)
L_0307: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_030c: ldarg.0
L_030d: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0312: ldc.i4.1
L_0313: ldelem.ref
L_0314: ldc.i4.2
L_0315: ldstr "{0}"
L_031a: ldarg.0
L_031b: ldfld System.Int32 totalEnergyHardpoints
L_0320: box System.Int32
L_0325: call System.String Format(System.String, System.Object)
L_032a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_032f: ldarg.0
L_0330: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0335: ldc.i4.2
L_0336: ldelem.ref
L_0337: ldc.i4.3
L_0338: ldstr "{0}"
L_033d: ldarg.0
L_033e: ldfld System.Int32 totalMissileHardpoints
L_0343: box System.Int32
L_0348: call System.String Format(System.String, System.Object)
L_034d: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0352: ldarg.0
L_0353: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0358: ldc.i4.3
L_0359: ldelem.ref
L_035a: ldc.i4.4
L_035b: ldstr "{0}"
L_0360: ldarg.0
L_0361: ldfld System.Int32 totalSmallHardpoints
L_0366: box System.Int32
L_036b: call System.String Format(System.String, System.Object)
L_0370: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0375: ldarg.0
L_0376: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_037b: ldc.i4.4
L_037c: ldelem.ref
L_037d: ldc.i4.5
L_037e: ldstr "{0} / {1}"
L_0383: ldloc.0
L_0384: box System.Int32
L_0389: ldarg.0
L_038a: ldfld System.Int32 totalJumpjets
L_038f: box System.Int32
L_0394: call System.String Format(System.String, System.Object, System.Object)
L_0399: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_039e: ldarg.0
L_039f: ldarg.0
L_03a0: ldfld BattleTech.UI.MechLabPanel mechLab
L_03a5: ldarg.0
L_03a6: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03ab: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabHardpointElement[])
L_03b0: ldarg.0
L_03b1: ldarg.0
L_03b2: ldflda BattleTech.UI.MechLabPanel mechLab
L_03b7: ldarg.0
L_03b8: ldflda BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03bd: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel ByRef, BattleTech.UI.MechLabHardpointElement[] ByRef)
L_03c2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean ValidateAdd(BattleTech.MechComponentDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.WeaponDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: BattleTech.MechComponentType
L_0000: ldarg.0
L_0001: ldfld BattleTech.LocationLoadoutDef loadout
L_0006: ldfld System.Single CurrentInternalStructure
L_000b: ldc.r4 0
L_0010: bgt.un Label1
L_0015: ldarg.0
L_0016: ldstr "Cannot add {0} to {1}: The location is Destroyed."
L_001b: ldc.i4.2
L_001c: newarr System.Object
L_0021: dup
L_0022: ldc.i4.0
L_0023: ldarg.1
L_0024: callvirt BattleTech.DescriptionDef get_Description()
L_0029: callvirt System.String get_Name()
L_002e: stelem.ref
L_002f: dup
L_0030: ldc.i4.1
L_0031: ldarg.0
L_0032: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0037: callvirt System.String get_text()
L_003c: stelem.ref
L_003d: call Void SetDropErrorMessage(System.String, System.Object[])
L_0042: ldc.i4.0
L_0043: br Label28
L_0048: Label1
L_0048: ldarg.0
L_0049: ldfld System.Int32 usedSlots
L_004e: ldarg.1
L_004f: callvirt Int32 get_InventorySize()
L_0054: add
L_0055: ldarg.0
L_0056: ldfld System.Int32 maxSlots
L_005b: ble Label2
L_0060: ldarg.0
L_0061: ldstr "Cannot add {0} to {1}: Not enough free slots."
L_0066: ldc.i4.2
L_0067: newarr System.Object
L_006c: dup
L_006d: ldc.i4.0
L_006e: ldarg.1
L_006f: callvirt BattleTech.DescriptionDef get_Description()
L_0074: callvirt System.String get_Name()
L_0079: stelem.ref
L_007a: dup
L_007b: ldc.i4.1
L_007c: ldarg.0
L_007d: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0082: callvirt System.String get_text()
L_0087: stelem.ref
L_0088: call Void SetDropErrorMessage(System.String, System.Object[])
L_008d: ldc.i4.0
L_008e: br Label29
L_0093: Label2
L_0093: ldarg.1
L_0094: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_0099: ldarg.0
L_009a: ldfld BattleTech.LocationLoadoutDef loadout
L_009f: ldfld BattleTech.ChassisLocations Location
L_00a4: and
L_00a5: ldc.i4.0
L_00a6: bgt Label3
L_00ab: ldarg.0
L_00ac: ldstr "Cannot add {0} to {1}: Component is not permitted in this location."
L_00b1: ldc.i4.2
L_00b2: newarr System.Object
L_00b7: dup
L_00b8: ldc.i4.0
L_00b9: ldarg.1
L_00ba: callvirt BattleTech.DescriptionDef get_Description()
L_00bf: callvirt System.String get_Name()
L_00c4: stelem.ref
L_00c5: dup
L_00c6: ldc.i4.1
L_00c7: ldarg.0
L_00c8: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_00cd: callvirt System.String get_text()
L_00d2: stelem.ref
L_00d3: call Void SetDropErrorMessage(System.String, System.Object[])
L_00d8: ldc.i4.0
L_00d9: br Label30
L_00de: Label3
L_00de: ldarg.1
L_00df: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_00e4: ldc.i4.1
L_00e5: bne.un Label4
L_00ea: ldc.i4.0
L_00eb: stloc.0
L_00ec: ldc.i4.0
L_00ed: stloc.1
L_00ee: ldarg.1
L_00ef: isinst BattleTech.WeaponDef
L_00f4: stloc.2
L_00f5: ldloc.2
L_00f6: callvirt BattleTech.WeaponCategory get_Category()
L_00fb: stloc.3
L_00fc: ldloc.3
L_00fd: ldc.i4.1
L_00fe: sub
L_00ff: switch Labels5,6,7,8
L_0114: br Label9
L_0119: Label5
L_0119: ldarg.0
L_011a: ldfld System.Int32 currentBallisticCount
L_011f: stloc.0
L_0120: ldarg.0
L_0121: ldfld System.Int32 totalBallisticHardpoints
L_0126: stloc.1
L_0127: br Label10
L_012c: Label6
L_012c: ldarg.0
L_012d: ldfld System.Int32 currentEnergyCount
L_0132: stloc.0
L_0133: ldarg.0
L_0134: ldfld System.Int32 totalEnergyHardpoints
L_0139: stloc.1
L_013a: br Label11
L_013f: Label7
L_013f: ldarg.0
L_0140: ldfld System.Int32 currentMissileCount
L_0145: stloc.0
L_0146: ldarg.0
L_0147: ldfld System.Int32 totalMissileHardpoints
L_014c: stloc.1
L_014d: br Label12
L_0152: Label8
L_0152: ldarg.0
L_0153: ldfld System.Int32 currentSmallCount
L_0158: stloc.0
L_0159: ldarg.0
L_015a: ldfld System.Int32 totalSmallHardpoints
L_015f: stloc.1
L_0160: Label9
L_0160: Label10
L_0160: Label11
L_0160: Label12
L_0160: ldloc.0
L_0161: ldc.i4.1
L_0162: add
L_0163: ldloc.1
L_0164: ble Label13
L_0169: ldloc.2
L_016a: callvirt BattleTech.WeaponCategory get_Category()
L_016f: ldc.i4.4
L_0170: bne.un Label14
L_0175: ldarg.0
L_0176: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_017b: ldc.i4.3
L_017c: newarr System.Object
L_0181: dup
L_0182: ldc.i4.0
L_0183: ldarg.1
L_0184: callvirt BattleTech.DescriptionDef get_Description()
L_0189: callvirt System.String get_Name()
L_018e: stelem.ref
L_018f: dup
L_0190: ldc.i4.1
L_0191: ldarg.0
L_0192: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0197: callvirt System.String get_text()
L_019c: stelem.ref
L_019d: dup
L_019e: ldc.i4.2
L_019f: ldstr "Support"
L_01a4: stelem.ref
L_01a5: call Void SetDropErrorMessage(System.String, System.Object[])
L_01aa: br Label15
L_01af: Label14
L_01af: ldarg.0
L_01b0: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_01b5: ldc.i4.3
L_01b6: newarr System.Object
L_01bb: dup
L_01bc: ldc.i4.0
L_01bd: ldarg.1
L_01be: callvirt BattleTech.DescriptionDef get_Description()
L_01c3: callvirt System.String get_Name()
L_01c8: stelem.ref
L_01c9: dup
L_01ca: ldc.i4.1
L_01cb: ldarg.0
L_01cc: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_01d1: callvirt System.String get_text()
L_01d6: stelem.ref
L_01d7: dup
L_01d8: ldc.i4.2
L_01d9: ldloc.2
L_01da: callvirt BattleTech.WeaponCategory get_Category()
L_01df: stloc.3
L_01e0: ldloca.s 3 (BattleTech.WeaponCategory)
L_01e2: constrained. BattleTech.WeaponCategory
L_01e8: callvirt System.String ToString()
L_01ed: stelem.ref
L_01ee: call Void SetDropErrorMessage(System.String, System.Object[])
L_01f3: Label15
L_01f3: ldc.i4.0
L_01f4: br Label31
L_01f9: Label4
L_01f9: Label13
L_01f9: ldarg.1
L_01fa: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_01ff: ldc.i4.4
L_0200: bne.un Label16
L_0205: ldarg.0
L_0206: ldfld BattleTech.UI.MechLabPanel mechLab
L_020b: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0210: ldfld System.Int32 currentJumpjetCount
L_0215: ldarg.0
L_0216: ldfld BattleTech.UI.MechLabPanel mechLab
L_021b: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0220: ldfld System.Int32 currentJumpjetCount
L_0225: add
L_0226: ldarg.0
L_0227: ldfld BattleTech.UI.MechLabPanel mechLab
L_022c: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0231: ldfld System.Int32 currentJumpjetCount
L_0236: add
L_0237: ldarg.0
L_0238: ldfld BattleTech.UI.MechLabPanel mechLab
L_023d: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0242: ldfld System.Int32 currentJumpjetCount
L_0247: add
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0253: ldfld System.Int32 currentJumpjetCount
L_0258: add
L_0259: ldarg.0
L_025a: ldfld BattleTech.UI.MechLabPanel mechLab
L_025f: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0264: ldfld System.Int32 currentJumpjetCount
L_0269: add
L_026a: ldarg.0
L_026b: ldfld BattleTech.UI.MechLabPanel mechLab
L_0270: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0275: ldfld System.Int32 currentJumpjetCount
L_027a: add
L_027b: ldarg.0
L_027c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0281: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0286: ldfld System.Int32 currentJumpjetCount
L_028b: add
L_028c: ldc.i4.1
L_028d: add
L_028e: ldarg.0
L_028f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0294: ldfld BattleTech.MechDef activeMechDef
L_0299: callvirt BattleTech.ChassisDef get_Chassis()
L_029e: callvirt Int32 get_MaxJumpjets()
L_02a3: ble Label17
L_02a8: ldarg.0
L_02a9: ldstr "Cannot add {0} to {1}: Max number of jumpjets for 'Mech reached."
L_02ae: ldc.i4.2
L_02af: newarr System.Object
L_02b4: dup
L_02b5: ldc.i4.0
L_02b6: ldarg.1
L_02b7: callvirt BattleTech.DescriptionDef get_Description()
L_02bc: callvirt System.String get_Name()
L_02c1: stelem.ref
L_02c2: dup
L_02c3: ldc.i4.1
L_02c4: ldarg.0
L_02c5: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_02ca: callvirt System.String get_text()
L_02cf: stelem.ref
L_02d0: call Void SetDropErrorMessage(System.String, System.Object[])
L_02d5: ldc.i4.0
L_02d6: br Label32
L_02db: Label16
L_02db: Label17
L_02db: ldarg.1
L_02dc: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02e1: ldc.i4.s 20
L_02e3: bge Label18
L_02e8: ldarg.1
L_02e9: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02ee: ldc.i4.8
L_02ef: bne.un Label19
L_02f4: Label18
L_02f4: ldc.i4.0
L_02f5: stloc.s 4 (System.Int32)
L_02f7: ldarg.0
L_02f8: ldfld BattleTech.UI.MechLabPanel mechLab
L_02fd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0302: callvirt Enumerator GetEnumerator()
L_0307: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
.try
{
	L_0309: br Label20
	L_030e: Label22
	L_030e: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0310: call BattleTech.MechComponentRef get_Current()
	L_0315: callvirt BattleTech.MechComponentDef get_Def()
	L_031a: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_031f: ldarg.1
	L_0320: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_0325: bne.un Label21
	L_032a: ldloc.s 4 (System.Int32)
	L_032c: ldc.i4.1
	L_032d: add
	L_032e: stloc.s 4 (System.Int32)
	L_0330: Label20
	L_0330: Label21
	L_0330: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0332: call Boolean MoveNext()
	L_0337: brtrue Label22
	L_033c: leave Label23
	L_0341: leave (autogenerated)
} // end try
.finally
{
	L_0346: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0348: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef]
	L_034e: callvirt Void Dispose()
	L_0353: endfinally
	L_0354: leave (autogenerated)
} // end handler
L_0355: Label23
L_0355: ldloc.s 4 (System.Int32)
L_0357: ldc.i4.0
L_0358: ble Label24
L_035d: ldarg.1
L_035e: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_0363: ldc.i4.8
L_0364: beq Label25
L_0369: ldarg.1
L_036a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_036f: ldc.i4.s 22
L_0371: bne.un Label26
L_0376: Label25
L_0376: ldarg.0
L_0377: ldstr "ELECTRONIC WARFARE COMPONENT LIMIT: You can only equip one Electronic Warfare component on this 'Mech."
L_037c: call System.Object[] Empty[Object]()
L_0381: call Void SetDropErrorMessage(System.String, System.Object[])
L_0386: br Label27
L_038b: Label26
L_038b: ldarg.0
L_038c: ldstr "PROTOTYPE COMPONENT LIMIT: You can only equip one {0} component on this 'Mech"
L_0391: ldc.i4.1
L_0392: newarr System.Object
L_0397: dup
L_0398: ldc.i4.0
L_0399: ldarg.1
L_039a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_039f: stloc.s 6 (BattleTech.MechComponentType)
L_03a1: ldloca.s 6 (BattleTech.MechComponentType)
L_03a3: constrained. BattleTech.MechComponentType
L_03a9: callvirt System.String ToString()
L_03ae: stelem.ref
L_03af: call Void SetDropErrorMessage(System.String, System.Object[])
L_03b4: Label27
L_03b4: ldc.i4.0
L_03b5: br Label34
L_03ba: Label19
L_03ba: Label24
L_03ba: ldc.i4.1
L_03bb: Label28
L_03bb: Label29
L_03bb: Label30
L_03bb: Label31
L_03bb: Label32
L_03bb: Label34
L_03bb: ret
DONE

### Patch BattleTech.UI.SG_Shop_ItemSelectedPanel, Void FillInHardPoints(BattleTech.MechDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Single
L_0000: Local var 10: BattleTech.WeightClass
L_0000: Local var 11: System.Int32
L_0000: ldarg.1
L_0001: brfalse Label1
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechWeightText
L_000c: ldarg.1
L_000d: callvirt BattleTech.ChassisDef get_Chassis()
L_0012: callvirt Single get_Tonnage()
L_0017: stloc.s 9 (System.Single)
L_0019: ldloca.s 9 (System.Single)
L_001b: call System.String ToString()
L_0020: call System.Object[] Empty[Object]()
L_0025: callvirt Void SetText(System.String, System.Object[])
L_002a: ldarg.0
L_002b: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechClassText
L_0030: ldarg.1
L_0031: callvirt BattleTech.ChassisDef get_Chassis()
L_0036: callvirt BattleTech.WeightClass get_weightClass()
L_003b: stloc.s 10 (BattleTech.WeightClass)
L_003d: ldloca.s 10 (BattleTech.WeightClass)
L_003f: constrained. BattleTech.WeightClass
L_0045: callvirt System.String ToString()
L_004a: call System.Object[] Empty[Object]()
L_004f: callvirt Void SetText(System.String, System.Object[])
L_0054: ldc.i4.0
L_0055: stloc.0
L_0056: ldc.i4.0
L_0057: stloc.1
L_0058: ldc.i4.0
L_0059: stloc.2
L_005a: ldc.i4.0
L_005b: stloc.3
L_005c: ldc.i4.0
L_005d: stloc.s 4 (System.Int32)
L_005f: ldc.i4.0
L_0060: stloc.s 5 (System.Int32)
L_0062: ldc.i4.0
L_0063: stloc.s 6 (System.Int32)
L_0065: ldc.i4.0
L_0066: stloc.s 7 (System.Int32)
L_0068: ldarg.1
L_0069: ldc.i4.1
L_006a: ldloca.s 0 (System.Int32)
L_006c: ldloca.s 1 (System.Int32)
L_006e: ldloca.s 2 (System.Int32)
L_0070: ldloca.s 3 (System.Int32)
L_0072: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0077: ldarg.1
L_0078: ldc.i4.s 32
L_007a: ldloca.s 0 (System.Int32)
L_007c: ldloca.s 1 (System.Int32)
L_007e: ldloca.s 2 (System.Int32)
L_0080: ldloca.s 3 (System.Int32)
L_0082: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0087: ldarg.1
L_0088: ldc.i4.s 16
L_008a: ldloca.s 0 (System.Int32)
L_008c: ldloca.s 1 (System.Int32)
L_008e: ldloca.s 2 (System.Int32)
L_0090: ldloca.s 3 (System.Int32)
L_0092: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0097: ldarg.1
L_0098: ldc.i4.2
L_0099: ldloca.s 0 (System.Int32)
L_009b: ldloca.s 1 (System.Int32)
L_009d: ldloca.s 2 (System.Int32)
L_009f: ldloca.s 3 (System.Int32)
L_00a1: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00a6: ldarg.1
L_00a7: ldc.i4.4
L_00a8: ldloca.s 0 (System.Int32)
L_00aa: ldloca.s 1 (System.Int32)
L_00ac: ldloca.s 2 (System.Int32)
L_00ae: ldloca.s 3 (System.Int32)
L_00b0: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00b5: ldarg.1
L_00b6: ldc.i4.8
L_00b7: ldloca.s 0 (System.Int32)
L_00b9: ldloca.s 1 (System.Int32)
L_00bb: ldloca.s 2 (System.Int32)
L_00bd: ldloca.s 3 (System.Int32)
L_00bf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00c4: ldarg.1
L_00c5: ldc.i4.s 64
L_00c7: ldloca.s 0 (System.Int32)
L_00c9: ldloca.s 1 (System.Int32)
L_00cb: ldloca.s 2 (System.Int32)
L_00cd: ldloca.s 3 (System.Int32)
L_00cf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00d4: ldarg.1
L_00d5: ldc.i4 128
L_00da: ldloca.s 0 (System.Int32)
L_00dc: ldloca.s 1 (System.Int32)
L_00de: ldloca.s 2 (System.Int32)
L_00e0: ldloca.s 3 (System.Int32)
L_00e2: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00e7: ldloc.0
L_00e8: stloc.s 4 (System.Int32)
L_00ea: ldloc.1
L_00eb: stloc.s 5 (System.Int32)
L_00ed: ldloc.2
L_00ee: stloc.s 6 (System.Int32)
L_00f0: ldloc.3
L_00f1: stloc.s 7 (System.Int32)
L_00f3: ldarg.0
L_00f4: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_00f9: ldc.i4.1
L_00fa: ldloca.s 4 (System.Int32)
L_00fc: call System.String ToString()
L_0101: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0106: ldarg.0
L_0107: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_010c: ldc.i4.2
L_010d: ldloca.s 5 (System.Int32)
L_010f: call System.String ToString()
L_0114: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0119: ldarg.0
L_011a: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_011f: ldc.i4.3
L_0120: ldloca.s 6 (System.Int32)
L_0122: call System.String ToString()
L_0127: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_012c: ldarg.0
L_012d: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_0132: ldc.i4.4
L_0133: ldloca.s 7 (System.Int32)
L_0135: call System.String ToString()
L_013a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_013f: ldc.i4.0
L_0140: stloc.s 8 (System.Int32)
L_0142: ldc.i4.0
L_0143: stloc.s 11 (System.Int32)
L_0145: br Label2
L_014a: Label4
L_014a: ldarg.1
L_014b: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0150: ldloc.s 11 (System.Int32)
L_0152: ldelem.ref
L_0153: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0158: ldc.i4.4
L_0159: bne.un Label3
L_015e: ldloc.s 8 (System.Int32)
L_0160: ldc.i4.1
L_0161: add
L_0162: stloc.s 8 (System.Int32)
L_0164: Label3
L_0164: ldloc.s 11 (System.Int32)
L_0166: ldc.i4.1
L_0167: add
L_0168: stloc.s 11 (System.Int32)
L_016a: Label2
L_016a: ldloc.s 11 (System.Int32)
L_016c: ldarg.1
L_016d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0172: ldlen
L_0173: conv.i4
L_0174: blt Label4
L_0179: ldarg.0
L_017a: ldfld BattleTech.UI.TMProWrapper.LocalizableText JumpJetText
L_017f: ldstr "{0} / {1}"
L_0184: ldloc.s 8 (System.Int32)
L_0186: box System.Int32
L_018b: ldarg.1
L_018c: callvirt BattleTech.ChassisDef get_Chassis()
L_0191: callvirt Int32 get_MaxJumpjets()
L_0196: box System.Int32
L_019b: call System.String Format(System.String, System.Object, System.Object)
L_01a0: call System.Object[] Empty[Object]()
L_01a5: callvirt Void SetText(System.String, System.Object[])
L_01aa: Label1
L_01aa: ldarg 1
L_01b0: ldarg.0
L_01b1: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_01b6: ldarg.0
L_01b7: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_01bc: ldarg.0
L_01bd: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_01c2: ldarg.0
L_01c3: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_01c8: call Void Postfix(BattleTech.MechDef, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement)
L_01cd: ret
DONE

### Patch BattleTech.UI.MechLabMechInfoWidget, Void GetTotalHardpoints()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldarg.0
L_0003: ldfld BattleTech.UI.MechLabPanel mechLab
L_0008: ldfld BattleTech.MechDef activeMechDef
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.MechLabPanel mechLab
L_0019: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_001e: ldfld System.Int32 totalBallisticHardpoints
L_0023: ldarg.0
L_0024: ldfld BattleTech.UI.MechLabPanel mechLab
L_0029: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_002e: ldfld System.Int32 totalBallisticHardpoints
L_0033: add
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.MechLabPanel mechLab
L_003a: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003f: ldfld System.Int32 totalBallisticHardpoints
L_0044: add
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabPanel mechLab
L_004b: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0050: ldfld System.Int32 totalBallisticHardpoints
L_0055: add
L_0056: ldarg.0
L_0057: ldfld BattleTech.UI.MechLabPanel mechLab
L_005c: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0061: ldfld System.Int32 totalBallisticHardpoints
L_0066: add
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechLabPanel mechLab
L_006d: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0072: ldfld System.Int32 totalBallisticHardpoints
L_0077: add
L_0078: ldarg.0
L_0079: ldfld BattleTech.UI.MechLabPanel mechLab
L_007e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0083: ldfld System.Int32 totalBallisticHardpoints
L_0088: add
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.MechLabPanel mechLab
L_008f: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0094: ldfld System.Int32 totalBallisticHardpoints
L_0099: add
L_009a: stfld System.Int32 totalBallisticHardpoints
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a6: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ab: ldfld System.Int32 totalEnergyHardpoints
L_00b0: ldarg.0
L_00b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b6: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_00bb: ldfld System.Int32 totalEnergyHardpoints
L_00c0: add
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.MechLabPanel mechLab
L_00c7: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00cc: ldfld System.Int32 totalEnergyHardpoints
L_00d1: add
L_00d2: ldarg.0
L_00d3: ldfld BattleTech.UI.MechLabPanel mechLab
L_00d8: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00dd: ldfld System.Int32 totalEnergyHardpoints
L_00e2: add
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.UI.MechLabPanel mechLab
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00ee: ldfld System.Int32 totalEnergyHardpoints
L_00f3: add
L_00f4: ldarg.0
L_00f5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00fa: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00ff: ldfld System.Int32 totalEnergyHardpoints
L_0104: add
L_0105: ldarg.0
L_0106: ldfld BattleTech.UI.MechLabPanel mechLab
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldfld System.Int32 totalEnergyHardpoints
L_0115: add
L_0116: ldarg.0
L_0117: ldfld BattleTech.UI.MechLabPanel mechLab
L_011c: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0121: ldfld System.Int32 totalEnergyHardpoints
L_0126: add
L_0127: stfld System.Int32 totalEnergyHardpoints
L_012c: ldarg.0
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0138: ldfld System.Int32 totalMissileHardpoints
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0143: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0148: ldfld System.Int32 totalMissileHardpoints
L_014d: add
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0154: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0159: ldfld System.Int32 totalMissileHardpoints
L_015e: add
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_016a: ldfld System.Int32 totalMissileHardpoints
L_016f: add
L_0170: ldarg.0
L_0171: ldfld BattleTech.UI.MechLabPanel mechLab
L_0176: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_017b: ldfld System.Int32 totalMissileHardpoints
L_0180: add
L_0181: ldarg.0
L_0182: ldfld BattleTech.UI.MechLabPanel mechLab
L_0187: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_018c: ldfld System.Int32 totalMissileHardpoints
L_0191: add
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabPanel mechLab
L_0198: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: add
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a9: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01ae: ldfld System.Int32 totalMissileHardpoints
L_01b3: add
L_01b4: stfld System.Int32 totalMissileHardpoints
L_01b9: ldarg.0
L_01ba: ldarg.0
L_01bb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01c0: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_01c5: ldfld System.Int32 totalSmallHardpoints
L_01ca: ldarg.0
L_01cb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01d0: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_01d5: ldfld System.Int32 totalSmallHardpoints
L_01da: add
L_01db: ldarg.0
L_01dc: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e1: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_01e6: ldfld System.Int32 totalSmallHardpoints
L_01eb: add
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f2: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_01f7: ldfld System.Int32 totalSmallHardpoints
L_01fc: add
L_01fd: ldarg.0
L_01fe: ldfld BattleTech.UI.MechLabPanel mechLab
L_0203: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0208: ldfld System.Int32 totalSmallHardpoints
L_020d: add
L_020e: ldarg.0
L_020f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0214: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0219: ldfld System.Int32 totalSmallHardpoints
L_021e: add
L_021f: ldarg.0
L_0220: ldfld BattleTech.UI.MechLabPanel mechLab
L_0225: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_022a: ldfld System.Int32 totalSmallHardpoints
L_022f: add
L_0230: ldarg.0
L_0231: ldfld BattleTech.UI.MechLabPanel mechLab
L_0236: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_023b: ldfld System.Int32 totalSmallHardpoints
L_0240: add
L_0241: stfld System.Int32 totalSmallHardpoints
L_0246: ldarg.0
L_0247: ldfld BattleTech.UI.MechLabPanel mechLab
L_024c: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0251: ldfld System.Int32 currentJumpjetCount
L_0256: ldarg.0
L_0257: ldfld BattleTech.UI.MechLabPanel mechLab
L_025c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0261: ldfld System.Int32 currentJumpjetCount
L_0266: add
L_0267: ldarg.0
L_0268: ldfld BattleTech.UI.MechLabPanel mechLab
L_026d: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0272: ldfld System.Int32 currentJumpjetCount
L_0277: add
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.MechLabPanel mechLab
L_027e: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0283: ldfld System.Int32 currentJumpjetCount
L_0288: add
L_0289: ldarg.0
L_028a: ldfld BattleTech.UI.MechLabPanel mechLab
L_028f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0294: ldfld System.Int32 currentJumpjetCount
L_0299: add
L_029a: ldarg.0
L_029b: ldfld BattleTech.UI.MechLabPanel mechLab
L_02a0: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_02a5: ldfld System.Int32 currentJumpjetCount
L_02aa: add
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.UI.MechLabPanel mechLab
L_02b1: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_02b6: ldfld System.Int32 currentJumpjetCount
L_02bb: add
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02c2: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_02c7: ldfld System.Int32 currentJumpjetCount
L_02cc: add
L_02cd: stloc.0
L_02ce: ldarg.0
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d5: ldfld BattleTech.MechDef activeMechDef
L_02da: callvirt BattleTech.ChassisDef get_Chassis()
L_02df: callvirt Int32 get_MaxJumpjets()
L_02e4: stfld System.Int32 totalJumpjets
L_02e9: Label1
L_02e9: ldarg.0
L_02ea: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_02ef: ldc.i4.0
L_02f0: ldelem.ref
L_02f1: ldc.i4.1
L_02f2: ldstr "{0}"
L_02f7: ldarg.0
L_02f8: ldfld System.Int32 totalBallisticHardpoints
L_02fd: box System.Int32
L_0302: call System.String Format(System.String, System.Object)
L_0307: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_030c: ldarg.0
L_030d: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0312: ldc.i4.1
L_0313: ldelem.ref
L_0314: ldc.i4.2
L_0315: ldstr "{0}"
L_031a: ldarg.0
L_031b: ldfld System.Int32 totalEnergyHardpoints
L_0320: box System.Int32
L_0325: call System.String Format(System.String, System.Object)
L_032a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_032f: ldarg.0
L_0330: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0335: ldc.i4.2
L_0336: ldelem.ref
L_0337: ldc.i4.3
L_0338: ldstr "{0}"
L_033d: ldarg.0
L_033e: ldfld System.Int32 totalMissileHardpoints
L_0343: box System.Int32
L_0348: call System.String Format(System.String, System.Object)
L_034d: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0352: ldarg.0
L_0353: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0358: ldc.i4.3
L_0359: ldelem.ref
L_035a: ldc.i4.4
L_035b: ldstr "{0}"
L_0360: ldarg.0
L_0361: ldfld System.Int32 totalSmallHardpoints
L_0366: box System.Int32
L_036b: call System.String Format(System.String, System.Object)
L_0370: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0375: ldarg.0
L_0376: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_037b: ldc.i4.4
L_037c: ldelem.ref
L_037d: ldc.i4.5
L_037e: ldstr "{0} / {1}"
L_0383: ldloc.0
L_0384: box System.Int32
L_0389: ldarg.0
L_038a: ldfld System.Int32 totalJumpjets
L_038f: box System.Int32
L_0394: call System.String Format(System.String, System.Object, System.Object)
L_0399: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_039e: ldarg.0
L_039f: ldarg.0
L_03a0: ldfld BattleTech.UI.MechLabPanel mechLab
L_03a5: ldarg.0
L_03a6: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03ab: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabHardpointElement[])
L_03b0: ldarg.0
L_03b1: ldarg.0
L_03b2: ldflda BattleTech.UI.MechLabPanel mechLab
L_03b7: ldarg.0
L_03b8: ldflda BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03bd: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel ByRef, BattleTech.UI.MechLabHardpointElement[] ByRef)
L_03c2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean ValidateAdd(BattleTech.MechComponentDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.WeaponDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: BattleTech.MechComponentType
L_0000: ldarg.0
L_0001: ldfld BattleTech.LocationLoadoutDef loadout
L_0006: ldfld System.Single CurrentInternalStructure
L_000b: ldc.r4 0
L_0010: bgt.un Label1
L_0015: ldarg.0
L_0016: ldstr "Cannot add {0} to {1}: The location is Destroyed."
L_001b: ldc.i4.2
L_001c: newarr System.Object
L_0021: dup
L_0022: ldc.i4.0
L_0023: ldarg.1
L_0024: callvirt BattleTech.DescriptionDef get_Description()
L_0029: callvirt System.String get_Name()
L_002e: stelem.ref
L_002f: dup
L_0030: ldc.i4.1
L_0031: ldarg.0
L_0032: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0037: callvirt System.String get_text()
L_003c: stelem.ref
L_003d: call Void SetDropErrorMessage(System.String, System.Object[])
L_0042: ldc.i4.0
L_0043: br Label28
L_0048: Label1
L_0048: ldarg.0
L_0049: ldfld System.Int32 usedSlots
L_004e: ldarg.1
L_004f: callvirt Int32 get_InventorySize()
L_0054: add
L_0055: ldarg.0
L_0056: ldfld System.Int32 maxSlots
L_005b: ble Label2
L_0060: ldarg.0
L_0061: ldstr "Cannot add {0} to {1}: Not enough free slots."
L_0066: ldc.i4.2
L_0067: newarr System.Object
L_006c: dup
L_006d: ldc.i4.0
L_006e: ldarg.1
L_006f: callvirt BattleTech.DescriptionDef get_Description()
L_0074: callvirt System.String get_Name()
L_0079: stelem.ref
L_007a: dup
L_007b: ldc.i4.1
L_007c: ldarg.0
L_007d: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0082: callvirt System.String get_text()
L_0087: stelem.ref
L_0088: call Void SetDropErrorMessage(System.String, System.Object[])
L_008d: ldc.i4.0
L_008e: br Label29
L_0093: Label2
L_0093: ldarg.1
L_0094: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_0099: ldarg.0
L_009a: ldfld BattleTech.LocationLoadoutDef loadout
L_009f: ldfld BattleTech.ChassisLocations Location
L_00a4: and
L_00a5: ldc.i4.0
L_00a6: bgt Label3
L_00ab: ldarg.0
L_00ac: ldstr "Cannot add {0} to {1}: Component is not permitted in this location."
L_00b1: ldc.i4.2
L_00b2: newarr System.Object
L_00b7: dup
L_00b8: ldc.i4.0
L_00b9: ldarg.1
L_00ba: callvirt BattleTech.DescriptionDef get_Description()
L_00bf: callvirt System.String get_Name()
L_00c4: stelem.ref
L_00c5: dup
L_00c6: ldc.i4.1
L_00c7: ldarg.0
L_00c8: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_00cd: callvirt System.String get_text()
L_00d2: stelem.ref
L_00d3: call Void SetDropErrorMessage(System.String, System.Object[])
L_00d8: ldc.i4.0
L_00d9: br Label30
L_00de: Label3
L_00de: ldarg.1
L_00df: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_00e4: ldc.i4.1
L_00e5: bne.un Label4
L_00ea: ldc.i4.0
L_00eb: stloc.0
L_00ec: ldc.i4.0
L_00ed: stloc.1
L_00ee: ldarg.1
L_00ef: isinst BattleTech.WeaponDef
L_00f4: stloc.2
L_00f5: ldloc.2
L_00f6: callvirt BattleTech.WeaponCategory get_Category()
L_00fb: stloc.3
L_00fc: ldloc.3
L_00fd: ldc.i4.1
L_00fe: sub
L_00ff: switch Labels5,6,7,8
L_0114: br Label9
L_0119: Label5
L_0119: ldarg.0
L_011a: ldfld System.Int32 currentBallisticCount
L_011f: stloc.0
L_0120: ldarg.0
L_0121: ldfld System.Int32 totalBallisticHardpoints
L_0126: stloc.1
L_0127: br Label10
L_012c: Label6
L_012c: ldarg.0
L_012d: ldfld System.Int32 currentEnergyCount
L_0132: stloc.0
L_0133: ldarg.0
L_0134: ldfld System.Int32 totalEnergyHardpoints
L_0139: stloc.1
L_013a: br Label11
L_013f: Label7
L_013f: ldarg.0
L_0140: ldfld System.Int32 currentMissileCount
L_0145: stloc.0
L_0146: ldarg.0
L_0147: ldfld System.Int32 totalMissileHardpoints
L_014c: stloc.1
L_014d: br Label12
L_0152: Label8
L_0152: ldarg.0
L_0153: ldfld System.Int32 currentSmallCount
L_0158: stloc.0
L_0159: ldarg.0
L_015a: ldfld System.Int32 totalSmallHardpoints
L_015f: stloc.1
L_0160: Label9
L_0160: Label10
L_0160: Label11
L_0160: Label12
L_0160: ldloc.0
L_0161: ldc.i4.1
L_0162: add
L_0163: ldloc.1
L_0164: ble Label13
L_0169: ldloc.2
L_016a: callvirt BattleTech.WeaponCategory get_Category()
L_016f: ldc.i4.4
L_0170: bne.un Label14
L_0175: ldarg.0
L_0176: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_017b: ldc.i4.3
L_017c: newarr System.Object
L_0181: dup
L_0182: ldc.i4.0
L_0183: ldarg.1
L_0184: callvirt BattleTech.DescriptionDef get_Description()
L_0189: callvirt System.String get_Name()
L_018e: stelem.ref
L_018f: dup
L_0190: ldc.i4.1
L_0191: ldarg.0
L_0192: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0197: callvirt System.String get_text()
L_019c: stelem.ref
L_019d: dup
L_019e: ldc.i4.2
L_019f: ldstr "Support"
L_01a4: stelem.ref
L_01a5: call Void SetDropErrorMessage(System.String, System.Object[])
L_01aa: br Label15
L_01af: Label14
L_01af: ldarg.0
L_01b0: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_01b5: ldc.i4.3
L_01b6: newarr System.Object
L_01bb: dup
L_01bc: ldc.i4.0
L_01bd: ldarg.1
L_01be: callvirt BattleTech.DescriptionDef get_Description()
L_01c3: callvirt System.String get_Name()
L_01c8: stelem.ref
L_01c9: dup
L_01ca: ldc.i4.1
L_01cb: ldarg.0
L_01cc: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_01d1: callvirt System.String get_text()
L_01d6: stelem.ref
L_01d7: dup
L_01d8: ldc.i4.2
L_01d9: ldloc.2
L_01da: callvirt BattleTech.WeaponCategory get_Category()
L_01df: stloc.3
L_01e0: ldloca.s 3 (BattleTech.WeaponCategory)
L_01e2: constrained. BattleTech.WeaponCategory
L_01e8: callvirt System.String ToString()
L_01ed: stelem.ref
L_01ee: call Void SetDropErrorMessage(System.String, System.Object[])
L_01f3: Label15
L_01f3: ldc.i4.0
L_01f4: br Label31
L_01f9: Label4
L_01f9: Label13
L_01f9: ldarg.1
L_01fa: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_01ff: ldc.i4.4
L_0200: bne.un Label16
L_0205: ldarg.0
L_0206: ldfld BattleTech.UI.MechLabPanel mechLab
L_020b: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0210: ldfld System.Int32 currentJumpjetCount
L_0215: ldarg.0
L_0216: ldfld BattleTech.UI.MechLabPanel mechLab
L_021b: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0220: ldfld System.Int32 currentJumpjetCount
L_0225: add
L_0226: ldarg.0
L_0227: ldfld BattleTech.UI.MechLabPanel mechLab
L_022c: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0231: ldfld System.Int32 currentJumpjetCount
L_0236: add
L_0237: ldarg.0
L_0238: ldfld BattleTech.UI.MechLabPanel mechLab
L_023d: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0242: ldfld System.Int32 currentJumpjetCount
L_0247: add
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0253: ldfld System.Int32 currentJumpjetCount
L_0258: add
L_0259: ldarg.0
L_025a: ldfld BattleTech.UI.MechLabPanel mechLab
L_025f: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0264: ldfld System.Int32 currentJumpjetCount
L_0269: add
L_026a: ldarg.0
L_026b: ldfld BattleTech.UI.MechLabPanel mechLab
L_0270: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0275: ldfld System.Int32 currentJumpjetCount
L_027a: add
L_027b: ldarg.0
L_027c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0281: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0286: ldfld System.Int32 currentJumpjetCount
L_028b: add
L_028c: ldc.i4.1
L_028d: add
L_028e: ldarg.0
L_028f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0294: ldfld BattleTech.MechDef activeMechDef
L_0299: callvirt BattleTech.ChassisDef get_Chassis()
L_029e: callvirt Int32 get_MaxJumpjets()
L_02a3: ble Label17
L_02a8: ldarg.0
L_02a9: ldstr "Cannot add {0} to {1}: Max number of jumpjets for 'Mech reached."
L_02ae: ldc.i4.2
L_02af: newarr System.Object
L_02b4: dup
L_02b5: ldc.i4.0
L_02b6: ldarg.1
L_02b7: callvirt BattleTech.DescriptionDef get_Description()
L_02bc: callvirt System.String get_Name()
L_02c1: stelem.ref
L_02c2: dup
L_02c3: ldc.i4.1
L_02c4: ldarg.0
L_02c5: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_02ca: callvirt System.String get_text()
L_02cf: stelem.ref
L_02d0: call Void SetDropErrorMessage(System.String, System.Object[])
L_02d5: ldc.i4.0
L_02d6: br Label32
L_02db: Label16
L_02db: Label17
L_02db: ldarg.1
L_02dc: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02e1: ldc.i4.s 20
L_02e3: bge Label18
L_02e8: ldarg.1
L_02e9: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02ee: ldc.i4.8
L_02ef: bne.un Label19
L_02f4: Label18
L_02f4: ldc.i4.0
L_02f5: stloc.s 4 (System.Int32)
L_02f7: ldarg.0
L_02f8: ldfld BattleTech.UI.MechLabPanel mechLab
L_02fd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0302: callvirt Enumerator GetEnumerator()
L_0307: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
.try
{
	L_0309: br Label20
	L_030e: Label22
	L_030e: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0310: call BattleTech.MechComponentRef get_Current()
	L_0315: callvirt BattleTech.MechComponentDef get_Def()
	L_031a: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_031f: ldarg.1
	L_0320: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_0325: bne.un Label21
	L_032a: ldloc.s 4 (System.Int32)
	L_032c: ldc.i4.1
	L_032d: add
	L_032e: stloc.s 4 (System.Int32)
	L_0330: Label20
	L_0330: Label21
	L_0330: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0332: call Boolean MoveNext()
	L_0337: brtrue Label22
	L_033c: leave Label23
	L_0341: leave (autogenerated)
} // end try
.finally
{
	L_0346: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0348: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef]
	L_034e: callvirt Void Dispose()
	L_0353: endfinally
	L_0354: leave (autogenerated)
} // end handler
L_0355: Label23
L_0355: ldloc.s 4 (System.Int32)
L_0357: ldc.i4.0
L_0358: ble Label24
L_035d: ldarg.1
L_035e: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_0363: ldc.i4.8
L_0364: beq Label25
L_0369: ldarg.1
L_036a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_036f: ldc.i4.s 22
L_0371: bne.un Label26
L_0376: Label25
L_0376: ldarg.0
L_0377: ldstr "ELECTRONIC WARFARE COMPONENT LIMIT: You can only equip one Electronic Warfare component on this 'Mech."
L_037c: call System.Object[] Empty[Object]()
L_0381: call Void SetDropErrorMessage(System.String, System.Object[])
L_0386: br Label27
L_038b: Label26
L_038b: ldarg.0
L_038c: ldstr "PROTOTYPE COMPONENT LIMIT: You can only equip one {0} component on this 'Mech"
L_0391: ldc.i4.1
L_0392: newarr System.Object
L_0397: dup
L_0398: ldc.i4.0
L_0399: ldarg.1
L_039a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_039f: stloc.s 6 (BattleTech.MechComponentType)
L_03a1: ldloca.s 6 (BattleTech.MechComponentType)
L_03a3: constrained. BattleTech.MechComponentType
L_03a9: callvirt System.String ToString()
L_03ae: stelem.ref
L_03af: call Void SetDropErrorMessage(System.String, System.Object[])
L_03b4: Label27
L_03b4: ldc.i4.0
L_03b5: br Label34
L_03ba: Label19
L_03ba: Label24
L_03ba: ldc.i4.1
L_03bb: Label28
L_03bb: Label29
L_03bb: Label30
L_03bb: Label31
L_03bb: Label32
L_03bb: Label34
L_03bb: ret
DONE

### Patch BattleTech.UI.SG_Shop_ItemSelectedPanel, Void FillInHardPoints(BattleTech.MechDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Single
L_0000: Local var 10: BattleTech.WeightClass
L_0000: Local var 11: System.Int32
L_0000: ldarg.1
L_0001: brfalse Label1
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechWeightText
L_000c: ldarg.1
L_000d: callvirt BattleTech.ChassisDef get_Chassis()
L_0012: callvirt Single get_Tonnage()
L_0017: stloc.s 9 (System.Single)
L_0019: ldloca.s 9 (System.Single)
L_001b: call System.String ToString()
L_0020: call System.Object[] Empty[Object]()
L_0025: callvirt Void SetText(System.String, System.Object[])
L_002a: ldarg.0
L_002b: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechClassText
L_0030: ldarg.1
L_0031: callvirt BattleTech.ChassisDef get_Chassis()
L_0036: callvirt BattleTech.WeightClass get_weightClass()
L_003b: stloc.s 10 (BattleTech.WeightClass)
L_003d: ldloca.s 10 (BattleTech.WeightClass)
L_003f: constrained. BattleTech.WeightClass
L_0045: callvirt System.String ToString()
L_004a: call System.Object[] Empty[Object]()
L_004f: callvirt Void SetText(System.String, System.Object[])
L_0054: ldc.i4.0
L_0055: stloc.0
L_0056: ldc.i4.0
L_0057: stloc.1
L_0058: ldc.i4.0
L_0059: stloc.2
L_005a: ldc.i4.0
L_005b: stloc.3
L_005c: ldc.i4.0
L_005d: stloc.s 4 (System.Int32)
L_005f: ldc.i4.0
L_0060: stloc.s 5 (System.Int32)
L_0062: ldc.i4.0
L_0063: stloc.s 6 (System.Int32)
L_0065: ldc.i4.0
L_0066: stloc.s 7 (System.Int32)
L_0068: ldarg.1
L_0069: ldc.i4.1
L_006a: ldloca.s 0 (System.Int32)
L_006c: ldloca.s 1 (System.Int32)
L_006e: ldloca.s 2 (System.Int32)
L_0070: ldloca.s 3 (System.Int32)
L_0072: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0077: ldarg.1
L_0078: ldc.i4.s 32
L_007a: ldloca.s 0 (System.Int32)
L_007c: ldloca.s 1 (System.Int32)
L_007e: ldloca.s 2 (System.Int32)
L_0080: ldloca.s 3 (System.Int32)
L_0082: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0087: ldarg.1
L_0088: ldc.i4.s 16
L_008a: ldloca.s 0 (System.Int32)
L_008c: ldloca.s 1 (System.Int32)
L_008e: ldloca.s 2 (System.Int32)
L_0090: ldloca.s 3 (System.Int32)
L_0092: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0097: ldarg.1
L_0098: ldc.i4.2
L_0099: ldloca.s 0 (System.Int32)
L_009b: ldloca.s 1 (System.Int32)
L_009d: ldloca.s 2 (System.Int32)
L_009f: ldloca.s 3 (System.Int32)
L_00a1: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00a6: ldarg.1
L_00a7: ldc.i4.4
L_00a8: ldloca.s 0 (System.Int32)
L_00aa: ldloca.s 1 (System.Int32)
L_00ac: ldloca.s 2 (System.Int32)
L_00ae: ldloca.s 3 (System.Int32)
L_00b0: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00b5: ldarg.1
L_00b6: ldc.i4.8
L_00b7: ldloca.s 0 (System.Int32)
L_00b9: ldloca.s 1 (System.Int32)
L_00bb: ldloca.s 2 (System.Int32)
L_00bd: ldloca.s 3 (System.Int32)
L_00bf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00c4: ldarg.1
L_00c5: ldc.i4.s 64
L_00c7: ldloca.s 0 (System.Int32)
L_00c9: ldloca.s 1 (System.Int32)
L_00cb: ldloca.s 2 (System.Int32)
L_00cd: ldloca.s 3 (System.Int32)
L_00cf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00d4: ldarg.1
L_00d5: ldc.i4 128
L_00da: ldloca.s 0 (System.Int32)
L_00dc: ldloca.s 1 (System.Int32)
L_00de: ldloca.s 2 (System.Int32)
L_00e0: ldloca.s 3 (System.Int32)
L_00e2: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00e7: ldloc.0
L_00e8: stloc.s 4 (System.Int32)
L_00ea: ldloc.1
L_00eb: stloc.s 5 (System.Int32)
L_00ed: ldloc.2
L_00ee: stloc.s 6 (System.Int32)
L_00f0: ldloc.3
L_00f1: stloc.s 7 (System.Int32)
L_00f3: ldarg.0
L_00f4: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_00f9: ldc.i4.1
L_00fa: ldloca.s 4 (System.Int32)
L_00fc: call System.String ToString()
L_0101: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0106: ldarg.0
L_0107: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_010c: ldc.i4.2
L_010d: ldloca.s 5 (System.Int32)
L_010f: call System.String ToString()
L_0114: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0119: ldarg.0
L_011a: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_011f: ldc.i4.3
L_0120: ldloca.s 6 (System.Int32)
L_0122: call System.String ToString()
L_0127: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_012c: ldarg.0
L_012d: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_0132: ldc.i4.4
L_0133: ldloca.s 7 (System.Int32)
L_0135: call System.String ToString()
L_013a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_013f: ldc.i4.0
L_0140: stloc.s 8 (System.Int32)
L_0142: ldc.i4.0
L_0143: stloc.s 11 (System.Int32)
L_0145: br Label2
L_014a: Label4
L_014a: ldarg.1
L_014b: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0150: ldloc.s 11 (System.Int32)
L_0152: ldelem.ref
L_0153: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0158: ldc.i4.4
L_0159: bne.un Label3
L_015e: ldloc.s 8 (System.Int32)
L_0160: ldc.i4.1
L_0161: add
L_0162: stloc.s 8 (System.Int32)
L_0164: Label3
L_0164: ldloc.s 11 (System.Int32)
L_0166: ldc.i4.1
L_0167: add
L_0168: stloc.s 11 (System.Int32)
L_016a: Label2
L_016a: ldloc.s 11 (System.Int32)
L_016c: ldarg.1
L_016d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0172: ldlen
L_0173: conv.i4
L_0174: blt Label4
L_0179: ldarg.0
L_017a: ldfld BattleTech.UI.TMProWrapper.LocalizableText JumpJetText
L_017f: ldstr "{0} / {1}"
L_0184: ldloc.s 8 (System.Int32)
L_0186: box System.Int32
L_018b: ldarg.1
L_018c: callvirt BattleTech.ChassisDef get_Chassis()
L_0191: callvirt Int32 get_MaxJumpjets()
L_0196: box System.Int32
L_019b: call System.String Format(System.String, System.Object, System.Object)
L_01a0: call System.Object[] Empty[Object]()
L_01a5: callvirt Void SetText(System.String, System.Object[])
L_01aa: Label1
L_01aa: ldarg 1
L_01b0: ldarg.0
L_01b1: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_01b6: ldarg.0
L_01b7: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_01bc: ldarg.0
L_01bd: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_01c2: ldarg.0
L_01c3: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_01c8: call Void Postfix(BattleTech.MechDef, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement)
L_01cd: ret
DONE

### Harmony id=com.joelmeador.MechResizer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechResizer.MechResizer.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechResizer\MechResizer.dll
### At 2019-09-15 05.05.22
### Patch BattleTech.TurretRepresentation, Void Init(BattleTech.Turret, UnityEngine.Transform, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: call Void InitHighlighting()
L_000f: ldarg.0
L_0010: ldc.i4.1
L_0011: callvirt Boolean RefreshSurfaceType(Boolean)
L_0016: pop
L_0017: ldarg.0
L_0018: ldarg.0
L_0019: ldfld UnityEngine.GameObject VisibleObject
L_001e: ldc.i4.1
L_001f: callvirt UnityEngine.MeshRenderer[] GetComponentsInChildren[MeshRenderer](Boolean)
L_0024: newobj Void .ctor(IEnumerable`1)
L_0029: stfld System.Collections.Generic.List`1[UnityEngine.Renderer] renderers
L_002e: ldarg.0
L_002f: call Void InitDestructMaterial()
L_0034: ldarg 1
L_003a: ldarg 2
L_0040: ldarg 3
L_0046: ldarg.0
L_0047: call Void Postfix(BattleTech.Turret, UnityEngine.Transform, Boolean, BattleTech.TurretRepresentation)
L_004c: ret
DONE

### Patch BattleTech.VehicleRepresentation, Void Init(BattleTech.Vehicle, UnityEngine.Transform, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: call Void InitHighlighting()
L_000f: ldarg.0
L_0010: ldc.i4.1
L_0011: callvirt Boolean RefreshSurfaceType(Boolean)
L_0016: pop
L_0017: ldc.i4 389
L_001c: ldc.r4 0
L_0021: ldarg.0
L_0022: ldfld AkGameObj audioObject
L_0027: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_002c: ldarg.0
L_002d: ldarg.0
L_002e: ldfld UnityEngine.GameObject VisibleObject
L_0033: ldc.i4.1
L_0034: callvirt UnityEngine.MeshRenderer[] GetComponentsInChildren[MeshRenderer](Boolean)
L_0039: newobj Void .ctor(IEnumerable`1)
L_003e: stfld System.Collections.Generic.List`1[UnityEngine.Renderer] renderers
L_0043: ldarg.0
L_0044: call Void InitDestructMaterial()
L_0049: ldarg 1
L_004f: ldarg 2
L_0055: ldarg 3
L_005b: ldarg.0
L_005c: call Void Postfix(BattleTech.Vehicle, UnityEngine.Transform, Boolean, BattleTech.VehicleRepresentation)
L_0061: ret
DONE

### Patch BattleTech.MechRepresentation, Void Init(BattleTech.Mech, UnityEngine.Transform, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.String
L_0000: Local var 3: System.String
L_0000: Local var 4: System.String
L_0000: Local var 5: System.String
L_0000: Local var 6: System.String
L_0000: Local var 7: UnityEngine.GameObject
L_0000: Local var 8: System.Single
L_0000: Local var 9: BattleTech.VFXNamesDef
L_0000: Local var 10: UnityEngine.Transform
L_0000: Local var 11: UnityEngine.Transform
L_0000: Local var 12: UnityEngine.Transform
L_0000: Local var 13: UnityEngine.Transform
L_0000: Local var 14: UnityEngine.Transform
L_0000: Local var 15: UnityEngine.Transform
L_0000: Local var 16: UnityEngine.Transform
L_0000: Local var 17: UnityEngine.Transform
L_0000: Local var 18: UnityEngine.Transform
L_0000: Local var 19: UnityEngine.Transform
L_0000: Local var 20: UnityEngine.Transform
L_0000: Local var 21: UnityEngine.Transform
L_0000: Local var 22: AudioSwitch_mech_weight_type
L_0000: Local var 23: BattleTech.WeightClass
L_0000: Local var 24: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 25: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: ldarg.1
L_000b: callvirt BattleTech.CombatGameState get_Combat()
L_0010: callvirt BattleTech.CombatGameConstants get_Constants()
L_0015: call Void set_Constants(BattleTech.CombatGameConstants)
L_001a: ldc.i4.0
L_001b: stloc.0
L_001c: ldarg.0
L_001d: ldstr "Base Layer.Idle.Empty"
L_0022: call Int32 StringToHash(System.String)
L_0027: stfld System.Int32 idleStateEntryHash
L_002c: ldarg.0
L_002d: ldstr "Base Layer.Idle.Flavors"
L_0032: call Int32 StringToHash(System.String)
L_0037: stfld System.Int32 idleStateFlavorsHash
L_003c: ldarg.0
L_003d: ldstr "Base Layer.Idle.Unsteady"
L_0042: call Int32 StringToHash(System.String)
L_0047: stfld System.Int32 idleStateUnsteadyHash
L_004c: ldarg.0
L_004d: ldstr "Base Layer.Idle.Melee Idle"
L_0052: call Int32 StringToHash(System.String)
L_0057: stfld System.Int32 idleStateMeleeBaseHash
L_005c: ldarg.0
L_005d: ldstr "Base Layer.Idle.Melee Idle.Empty"
L_0062: call Int32 StringToHash(System.String)
L_0067: stfld System.Int32 idleStateMeleeEntryHash
L_006c: ldarg.0
L_006d: ldstr "Base Layer.Idle.Melee Idle.Melee Idle"
L_0072: call Int32 StringToHash(System.String)
L_0077: stfld System.Int32 idleStateMeleeHash
L_007c: ldarg.0
L_007d: ldstr "Base Layer.Idle.Melee Idle.Melee Unsteady"
L_0082: call Int32 StringToHash(System.String)
L_0087: stfld System.Int32 idleStateMeleeUnsteadyHash
L_008c: ldarg.0
L_008d: ldstr "Base Layer.Idle.Melee Idle"
L_0092: call Int32 StringToHash(System.String)
L_0097: stfld System.Int32 TEMPIdleStateMeleeIdleHash
L_009c: ldarg.0
L_009d: ldstr "IdleRandom"
L_00a2: call Int32 StringToHash(System.String)
L_00a7: stfld System.Int32 idleRandomValueHash
L_00ac: ldarg.0
L_00ad: ldstr "Base Layer.Downed.Getup"
L_00b2: call Int32 StringToHash(System.String)
L_00b7: stfld System.Int32 standingHash
L_00bc: ldarg.0
L_00bd: ldstr "Base Layer.Death.OnGround Death Idle"
L_00c2: call Int32 StringToHash(System.String)
L_00c7: stfld System.Int32 groundDeathIdleHash
L_00cc: ldarg.0
L_00cd: ldstr "Base Layer.Death.RandomDeath.Death 1"
L_00d2: call Int32 StringToHash(System.String)
L_00d7: stfld System.Int32 randomDeathIdleA
L_00dc: ldarg.0
L_00dd: ldstr "Base Layer.Death.RandomDeath.Death 2"
L_00e2: call Int32 StringToHash(System.String)
L_00e7: stfld System.Int32 randomDeathIdleB
L_00ec: ldarg.0
L_00ed: ldstr "Base Layer.Death.RandomDeath.Death 3"
L_00f2: call Int32 StringToHash(System.String)
L_00f7: stfld System.Int32 randomDeathIdleC
L_00fc: ldarg.0
L_00fd: ldstr "Base Layer.Death.RandomDeath"
L_0102: call Int32 StringToHash(System.String)
L_0107: stfld System.Int32 randomDeathIdleBase
L_010c: ldarg.0
L_010d: ldstr "Base Layer.Death.RandomDeath.Randomize"
L_0112: call Int32 StringToHash(System.String)
L_0117: stfld System.Int32 randomDeathIdleRandomizer
L_011c: ldarg.0
L_011d: ldstr "Base Layer.Hit React.Hit React Light"
L_0122: call Int32 StringToHash(System.String)
L_0127: stfld System.Int32 hitReactLightHash
L_012c: ldarg.0
L_012d: ldstr "Base Layer.Hit React.Hit React Stagger"
L_0132: call Int32 StringToHash(System.String)
L_0137: stfld System.Int32 hitReactHeavyHash
L_013c: ldarg.0
L_013d: ldstr "Base Layer.Hit React.Hit React Melee"
L_0142: call Int32 StringToHash(System.String)
L_0147: stfld System.Int32 hitReactMeleeHash
L_014c: ldarg.0
L_014d: ldstr "Base Layer.Hit React.Melee Dodge"
L_0152: call Int32 StringToHash(System.String)
L_0157: stfld System.Int32 hitReactDodgeHash
L_015c: ldarg.0
L_015d: ldstr "Base Layer.Hit React.DFA"
L_0162: call Int32 StringToHash(System.String)
L_0167: stfld System.Int32 hitReactDFAHash
L_016c: ldarg.0
L_016d: ldc.i4.1
L_016e: stfld System.Boolean allowRandomIdles
L_0173: ldarg.0
L_0174: call Void SetIdleAnimState()
L_0179: ldarg.0
L_017a: ldfld UnityEngine.Animator thisAnimator
L_017f: ldarg.0
L_0180: ldfld System.Int32 idleStateFlavorsHash
L_0185: ldc.i4.0
L_0186: ldc.r4 0
L_018b: ldc.r4 1
L_0190: call Single Range(Single, Single)
L_0195: callvirt Void Play(Int32, Int32, Single)
L_019a: ldarg.0
L_019b: ldc.i4.0
L_019c: stfld System.Boolean IsOnLimpingLeg
L_01a1: ldarg.0
L_01a2: ldc.i4.0
L_01a3: stfld System.Boolean HasCalledOutLimping
L_01a8: ldarg.0
L_01a9: ldc.i4.0
L_01aa: stfld System.Boolean isJumping
L_01af: ldarg.0
L_01b0: ldc.i4.0
L_01b1: stfld System.Boolean isPlayingJumpSound
L_01b6: ldarg.0
L_01b7: ldarg.0
L_01b8: call BattleTech.CombatGameConstants get_Constants()
L_01bd: callvirt BattleTech.VFXNamesDef get_VFXNames()
L_01c2: stloc.s 9 (BattleTech.VFXNamesDef)
L_01c4: ldloca.s 9 (BattleTech.VFXNamesDef)
L_01c6: call System.String[] get_persistentCritNames()
L_01cb: newobj Void .ctor(IEnumerable`1)
L_01d0: stfld System.Collections.Generic.List`1[System.String] persistentCritList
L_01d5: ldarg.0
L_01d6: ldfld UnityEngine.Transform twistTransform
L_01db: ldnull
L_01dc: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01e1: brfalse Label1
L_01e6: ldc.i4.1
L_01e7: stloc.0
L_01e8: ldarg.0
L_01e9: ldarg.0
L_01ea: ldarg.0
L_01eb: call UnityEngine.Transform get_transform()
L_01f0: ldstr "j_Spine2"
L_01f5: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_01fa: stfld UnityEngine.Transform twistTransform
L_01ff: ldarg.0
L_0200: ldfld UnityEngine.Transform twistTransform
L_0205: ldnull
L_0206: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_020b: brfalse Label2
L_0210: ldstr "ERROR! Couldn't auto-setup twistTransform for mech "
L_0215: ldarg.0
L_0216: call BattleTech.Mech get_parentMech()
L_021b: callvirt System.String get_DisplayName()
L_0220: call System.String Concat(System.String, System.String)
L_0225: call Void LogWarning(System.Object)
L_022a: Label1
L_022a: Label2
L_022a: ldarg.0
L_022b: ldfld UnityEngine.Transform LeftArmAttach
L_0230: ldnull
L_0231: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0236: brfalse Label3
L_023b: ldc.i4.1
L_023c: stloc.0
L_023d: ldarg.0
L_023e: ldarg.0
L_023f: ldarg.0
L_0240: call UnityEngine.Transform get_transform()
L_0245: ldstr "j_LForearm"
L_024a: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_024f: stfld UnityEngine.Transform LeftArmAttach
L_0254: ldarg.0
L_0255: ldfld UnityEngine.Transform LeftArmAttach
L_025a: ldnull
L_025b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0260: brfalse Label4
L_0265: ldstr "ERROR! Couldn't auto-setup LeftArmAttach for mech "
L_026a: ldarg.0
L_026b: call BattleTech.Mech get_parentMech()
L_0270: callvirt System.String get_DisplayName()
L_0275: call System.String Concat(System.String, System.String)
L_027a: call Void LogWarning(System.Object)
L_027f: Label3
L_027f: Label4
L_027f: ldarg.0
L_0280: ldfld UnityEngine.Transform RightArmAttach
L_0285: ldnull
L_0286: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_028b: brfalse Label5
L_0290: ldc.i4.1
L_0291: stloc.0
L_0292: ldarg.0
L_0293: ldarg.0
L_0294: ldarg.0
L_0295: call UnityEngine.Transform get_transform()
L_029a: ldstr "j_RForearm"
L_029f: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_02a4: stfld UnityEngine.Transform RightArmAttach
L_02a9: ldarg.0
L_02aa: ldfld UnityEngine.Transform RightArmAttach
L_02af: ldnull
L_02b0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02b5: brfalse Label6
L_02ba: ldstr "ERROR! Couldn't auto-setup RightArmAttach for mech "
L_02bf: ldarg.0
L_02c0: call BattleTech.Mech get_parentMech()
L_02c5: callvirt System.String get_DisplayName()
L_02ca: call System.String Concat(System.String, System.String)
L_02cf: call Void LogWarning(System.Object)
L_02d4: Label5
L_02d4: Label6
L_02d4: ldarg.0
L_02d5: ldfld UnityEngine.Transform TorsoAttach
L_02da: ldnull
L_02db: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02e0: brfalse Label7
L_02e5: ldc.i4.1
L_02e6: stloc.0
L_02e7: ldarg.0
L_02e8: ldarg.0
L_02e9: ldarg.0
L_02ea: call UnityEngine.Transform get_transform()
L_02ef: ldstr "j_Spine2"
L_02f4: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_02f9: stfld UnityEngine.Transform TorsoAttach
L_02fe: ldarg.0
L_02ff: ldfld UnityEngine.Transform TorsoAttach
L_0304: ldnull
L_0305: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_030a: brfalse Label8
L_030f: ldstr "ERROR! Couldn't auto-setup TorsoAttach for mech "
L_0314: ldarg.0
L_0315: call BattleTech.Mech get_parentMech()
L_031a: callvirt System.String get_DisplayName()
L_031f: call System.String Concat(System.String, System.String)
L_0324: call Void LogWarning(System.Object)
L_0329: Label7
L_0329: Label8
L_0329: ldarg.0
L_032a: ldfld UnityEngine.Transform LeftLegAttach
L_032f: ldnull
L_0330: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0335: brfalse Label9
L_033a: ldc.i4.1
L_033b: stloc.0
L_033c: ldarg.0
L_033d: ldarg.0
L_033e: ldarg.0
L_033f: call UnityEngine.Transform get_transform()
L_0344: ldstr "j_LCalf"
L_0349: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_034e: stfld UnityEngine.Transform LeftLegAttach
L_0353: ldarg.0
L_0354: ldfld UnityEngine.Transform LeftLegAttach
L_0359: ldnull
L_035a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035f: brfalse Label10
L_0364: ldstr "ERROR! Couldn't auto-setup LeftLegAttach for mech "
L_0369: ldarg.0
L_036a: call BattleTech.Mech get_parentMech()
L_036f: callvirt System.String get_DisplayName()
L_0374: call System.String Concat(System.String, System.String)
L_0379: call Void LogWarning(System.Object)
L_037e: Label9
L_037e: Label10
L_037e: ldarg.0
L_037f: ldfld UnityEngine.Transform leftFootTransform
L_0384: ldnull
L_0385: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_038a: brfalse Label11
L_038f: ldc.i4.1
L_0390: stloc.0
L_0391: ldarg.0
L_0392: ldarg.0
L_0393: ldarg.0
L_0394: call UnityEngine.Transform get_transform()
L_0399: ldstr "j_LHeel"
L_039e: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_03a3: stfld UnityEngine.Transform leftFootTransform
L_03a8: ldarg.0
L_03a9: ldfld UnityEngine.Transform leftFootTransform
L_03ae: ldnull
L_03af: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03b4: brfalse Label12
L_03b9: ldstr "ERROR! Couldn't auto-setup leftFootTransform for mech "
L_03be: ldarg.0
L_03bf: call BattleTech.Mech get_parentMech()
L_03c4: callvirt System.String get_DisplayName()
L_03c9: call System.String Concat(System.String, System.String)
L_03ce: call Void LogWarning(System.Object)
L_03d3: Label11
L_03d3: Label12
L_03d3: ldarg.0
L_03d4: ldfld UnityEngine.Transform RightLegAttach
L_03d9: ldnull
L_03da: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03df: brfalse Label13
L_03e4: ldc.i4.1
L_03e5: stloc.0
L_03e6: ldarg.0
L_03e7: ldarg.0
L_03e8: ldarg.0
L_03e9: call UnityEngine.Transform get_transform()
L_03ee: ldstr "j_RCalf"
L_03f3: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_03f8: stfld UnityEngine.Transform RightLegAttach
L_03fd: ldarg.0
L_03fe: ldfld UnityEngine.Transform RightLegAttach
L_0403: ldnull
L_0404: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0409: brfalse Label14
L_040e: ldstr "ERROR! Couldn't auto-setup RightLegAttach for mech "
L_0413: ldarg.0
L_0414: call BattleTech.Mech get_parentMech()
L_0419: callvirt System.String get_DisplayName()
L_041e: call System.String Concat(System.String, System.String)
L_0423: call Void LogWarning(System.Object)
L_0428: Label13
L_0428: Label14
L_0428: ldarg.0
L_0429: ldfld UnityEngine.Transform rightFootTransform
L_042e: ldnull
L_042f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0434: brfalse Label15
L_0439: ldc.i4.1
L_043a: stloc.0
L_043b: ldarg.0
L_043c: ldarg.0
L_043d: ldarg.0
L_043e: call UnityEngine.Transform get_transform()
L_0443: ldstr "j_RHeel"
L_0448: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_044d: stfld UnityEngine.Transform rightFootTransform
L_0452: ldarg.0
L_0453: ldfld UnityEngine.Transform rightFootTransform
L_0458: ldnull
L_0459: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_045e: brfalse Label16
L_0463: ldstr "ERROR! Couldn't auto-setup rightFootTransform for mech "
L_0468: ldarg.0
L_0469: call BattleTech.Mech get_parentMech()
L_046e: callvirt System.String get_DisplayName()
L_0473: call System.String Concat(System.String, System.String)
L_0478: call Void LogWarning(System.Object)
L_047d: Label15
L_047d: Label16
L_047d: ldarg.0
L_047e: ldfld UnityEngine.Transform vfxCenterTorsoTransform
L_0483: ldnull
L_0484: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0489: brfalse Label17
L_048e: ldc.i4.1
L_048f: stloc.0
L_0490: ldarg.0
L_0491: ldarg.0
L_0492: ldfld UnityEngine.Transform twistTransform
L_0497: stfld UnityEngine.Transform vfxCenterTorsoTransform
L_049c: ldarg.0
L_049d: ldfld UnityEngine.Transform vfxCenterTorsoTransform
L_04a2: ldnull
L_04a3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04a8: brfalse Label18
L_04ad: ldstr "ERROR! Couldn't auto-setup vfxCenterTorsoTransform for mech "
L_04b2: ldarg.0
L_04b3: call BattleTech.Mech get_parentMech()
L_04b8: callvirt System.String get_DisplayName()
L_04bd: call System.String Concat(System.String, System.String)
L_04c2: call Void LogWarning(System.Object)
L_04c7: Label17
L_04c7: Label18
L_04c7: ldarg.0
L_04c8: ldfld UnityEngine.Transform vfxLeftArmTransform
L_04cd: ldnull
L_04ce: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d3: brfalse Label19
L_04d8: ldc.i4.1
L_04d9: stloc.0
L_04da: ldarg.0
L_04db: ldarg.0
L_04dc: ldfld UnityEngine.Transform LeftArmAttach
L_04e1: stfld UnityEngine.Transform vfxLeftArmTransform
L_04e6: ldarg.0
L_04e7: ldfld UnityEngine.Transform vfxLeftArmTransform
L_04ec: ldnull
L_04ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04f2: brfalse Label20
L_04f7: ldstr "ERROR! Couldn't auto-setup vfxLeftArmTransform for mech "
L_04fc: ldarg.0
L_04fd: call BattleTech.Mech get_parentMech()
L_0502: callvirt System.String get_DisplayName()
L_0507: call System.String Concat(System.String, System.String)
L_050c: call Void LogWarning(System.Object)
L_0511: Label19
L_0511: Label20
L_0511: ldarg.0
L_0512: ldfld UnityEngine.Transform vfxRightArmTransform
L_0517: ldnull
L_0518: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_051d: brfalse Label21
L_0522: ldc.i4.1
L_0523: stloc.0
L_0524: ldarg.0
L_0525: ldarg.0
L_0526: ldfld UnityEngine.Transform RightArmAttach
L_052b: stfld UnityEngine.Transform vfxRightArmTransform
L_0530: ldarg.0
L_0531: ldfld UnityEngine.Transform vfxRightArmTransform
L_0536: ldnull
L_0537: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_053c: brfalse Label22
L_0541: ldstr "ERROR! Couldn't auto-setup vfxRightArmTransform for mech "
L_0546: ldarg.0
L_0547: call BattleTech.Mech get_parentMech()
L_054c: callvirt System.String get_DisplayName()
L_0551: call System.String Concat(System.String, System.String)
L_0556: call Void LogWarning(System.Object)
L_055b: Label21
L_055b: Label22
L_055b: ldarg.0
L_055c: ldfld UnityEngine.Transform vfxHeadTransform
L_0561: ldnull
L_0562: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0567: brfalse Label23
L_056c: ldc.i4.1
L_056d: stloc.0
L_056e: ldarg.0
L_056f: ldarg.0
L_0570: ldfld UnityEngine.Transform twistTransform
L_0575: stfld UnityEngine.Transform vfxHeadTransform
L_057a: ldarg.0
L_057b: ldfld UnityEngine.Transform vfxHeadTransform
L_0580: ldnull
L_0581: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0586: brfalse Label24
L_058b: ldstr "ERROR! Couldn't auto-setup vfxHeadTransform for mech "
L_0590: ldarg.0
L_0591: call BattleTech.Mech get_parentMech()
L_0596: callvirt System.String get_DisplayName()
L_059b: call System.String Concat(System.String, System.String)
L_05a0: call Void LogWarning(System.Object)
L_05a5: Label23
L_05a5: Label24
L_05a5: ldarg.0
L_05a6: ldfld UnityEngine.Transform vfxLeftArmTransform
L_05ab: ldnull
L_05ac: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05b1: brfalse Label25
L_05b6: ldc.i4.1
L_05b7: stloc.0
L_05b8: ldarg.0
L_05b9: ldarg.0
L_05ba: ldfld UnityEngine.Transform LeftArmAttach
L_05bf: stfld UnityEngine.Transform vfxLeftArmTransform
L_05c4: ldarg.0
L_05c5: ldfld UnityEngine.Transform vfxLeftArmTransform
L_05ca: ldnull
L_05cb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05d0: brfalse Label26
L_05d5: ldstr "ERROR! Couldn't auto-setup vfxLeftArmTransform for mech "
L_05da: ldarg.0
L_05db: call BattleTech.Mech get_parentMech()
L_05e0: callvirt System.String get_DisplayName()
L_05e5: call System.String Concat(System.String, System.String)
L_05ea: call Void LogWarning(System.Object)
L_05ef: Label25
L_05ef: Label26
L_05ef: ldarg.0
L_05f0: ldfld UnityEngine.Transform vfxRightArmTransform
L_05f5: ldnull
L_05f6: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05fb: brfalse Label27
L_0600: ldc.i4.1
L_0601: stloc.0
L_0602: ldarg.0
L_0603: ldarg.0
L_0604: ldfld UnityEngine.Transform RightArmAttach
L_0609: stfld UnityEngine.Transform vfxRightArmTransform
L_060e: ldarg.0
L_060f: ldfld UnityEngine.Transform vfxRightArmTransform
L_0614: ldnull
L_0615: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_061a: brfalse Label28
L_061f: ldstr "ERROR! Couldn't auto-setup vfxRightArmTransform for mech "
L_0624: ldarg.0
L_0625: call BattleTech.Mech get_parentMech()
L_062a: callvirt System.String get_DisplayName()
L_062f: call System.String Concat(System.String, System.String)
L_0634: call Void LogWarning(System.Object)
L_0639: Label27
L_0639: Label28
L_0639: ldarg.0
L_063a: ldfld UnityEngine.Transform vfxLeftLegTransform
L_063f: ldnull
L_0640: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0645: brfalse Label29
L_064a: ldc.i4.1
L_064b: stloc.0
L_064c: ldarg.0
L_064d: ldarg.0
L_064e: ldfld UnityEngine.Transform LeftLegAttach
L_0653: stfld UnityEngine.Transform vfxLeftLegTransform
L_0658: ldarg.0
L_0659: ldfld UnityEngine.Transform vfxLeftLegTransform
L_065e: ldnull
L_065f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0664: brfalse Label30
L_0669: ldstr "ERROR! Couldn't auto-setup vfxLeftLegTransform for mech "
L_066e: ldarg.0
L_066f: call BattleTech.Mech get_parentMech()
L_0674: callvirt System.String get_DisplayName()
L_0679: call System.String Concat(System.String, System.String)
L_067e: call Void LogWarning(System.Object)
L_0683: Label29
L_0683: Label30
L_0683: ldarg.0
L_0684: ldfld UnityEngine.Transform vfxRightLegTransform
L_0689: ldnull
L_068a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_068f: brfalse Label31
L_0694: ldc.i4.1
L_0695: stloc.0
L_0696: ldarg.0
L_0697: ldarg.0
L_0698: ldfld UnityEngine.Transform RightLegAttach
L_069d: stfld UnityEngine.Transform vfxRightLegTransform
L_06a2: ldarg.0
L_06a3: ldfld UnityEngine.Transform vfxRightLegTransform
L_06a8: ldnull
L_06a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_06ae: brfalse Label32
L_06b3: ldstr "ERROR! Couldn't auto-setup vfxRightLegTransform for mech "
L_06b8: ldarg.0
L_06b9: call BattleTech.Mech get_parentMech()
L_06be: callvirt System.String get_DisplayName()
L_06c3: call System.String Concat(System.String, System.String)
L_06c8: call Void LogWarning(System.Object)
L_06cd: Label31
L_06cd: Label32
L_06cd: ldarg.0
L_06ce: ldfld UnityEngine.GameObject BlipObjectUnknown
L_06d3: ldnull
L_06d4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_06d9: brfalse Label33
L_06de: ldc.i4.1
L_06df: stloc.0
L_06e0: ldarg.0
L_06e1: ldarg.0
L_06e2: call UnityEngine.Transform get_transform()
L_06e7: ldstr "BlipObjectUnknown"
L_06ec: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_06f1: stloc.s 10 (UnityEngine.Transform)
L_06f3: ldloc.s 10 (UnityEngine.Transform)
L_06f5: ldnull
L_06f6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_06fb: brfalse Label34
L_0700: ldarg.0
L_0701: ldloc.s 10 (UnityEngine.Transform)
L_0703: callvirt UnityEngine.GameObject get_gameObject()
L_0708: stfld UnityEngine.GameObject BlipObjectUnknown
L_070d: Label34
L_070d: ldarg.0
L_070e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0713: ldnull
L_0714: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0719: brfalse Label35
L_071e: ldstr "ERROR! Couldn't auto-setup Unknown Blip for mech "
L_0723: ldarg.0
L_0724: call BattleTech.Mech get_parentMech()
L_0729: callvirt System.String get_DisplayName()
L_072e: call System.String Concat(System.String, System.String)
L_0733: call Void LogWarning(System.Object)
L_0738: Label33
L_0738: Label35
L_0738: ldarg.0
L_0739: ldfld UnityEngine.GameObject BlipObjectIdentified
L_073e: ldnull
L_073f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0744: brfalse Label36
L_0749: ldc.i4.1
L_074a: stloc.0
L_074b: ldarg.0
L_074c: ldarg.0
L_074d: call UnityEngine.Transform get_transform()
L_0752: ldstr "BlipObjectIdentified"
L_0757: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_075c: stloc.s 11 (UnityEngine.Transform)
L_075e: ldloc.s 11 (UnityEngine.Transform)
L_0760: ldnull
L_0761: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0766: brfalse Label37
L_076b: ldarg.0
L_076c: ldloc.s 11 (UnityEngine.Transform)
L_076e: callvirt UnityEngine.GameObject get_gameObject()
L_0773: stfld UnityEngine.GameObject BlipObjectIdentified
L_0778: Label37
L_0778: ldarg.0
L_0779: ldfld UnityEngine.GameObject BlipObjectIdentified
L_077e: ldnull
L_077f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0784: brfalse Label38
L_0789: ldstr "ERROR! Couldn't auto-setup Identified Blip for mech "
L_078e: ldarg.0
L_078f: call BattleTech.Mech get_parentMech()
L_0794: callvirt System.String get_DisplayName()
L_0799: call System.String Concat(System.String, System.String)
L_079e: call Void LogWarning(System.Object)
L_07a3: Label36
L_07a3: Label38
L_07a3: ldarg.0
L_07a4: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_07a9: ldnull
L_07aa: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_07af: brfalse Label39
L_07b4: ldc.i4.1
L_07b5: stloc.0
L_07b6: ldarg.0
L_07b7: ldarg.0
L_07b8: call UnityEngine.Transform get_transform()
L_07bd: ldstr "BlipObjectGhostWeak"
L_07c2: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_07c7: stloc.s 12 (UnityEngine.Transform)
L_07c9: ldloc.s 12 (UnityEngine.Transform)
L_07cb: ldnull
L_07cc: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_07d1: brfalse Label40
L_07d6: ldarg.0
L_07d7: ldloc.s 12 (UnityEngine.Transform)
L_07d9: callvirt UnityEngine.GameObject get_gameObject()
L_07de: stfld UnityEngine.GameObject BlipObjectGhostWeak
L_07e3: Label40
L_07e3: ldarg.0
L_07e4: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_07e9: ldnull
L_07ea: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_07ef: brfalse Label41
L_07f4: ldstr "ERROR! Couldn't auto-setup Weak Ghost Blip for mech "
L_07f9: ldarg.0
L_07fa: call BattleTech.Mech get_parentMech()
L_07ff: callvirt System.String get_DisplayName()
L_0804: call System.String Concat(System.String, System.String)
L_0809: call Void LogWarning(System.Object)
L_080e: Label39
L_080e: Label41
L_080e: ldarg.0
L_080f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0814: ldnull
L_0815: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_081a: brfalse Label42
L_081f: ldc.i4.1
L_0820: stloc.0
L_0821: ldarg.0
L_0822: ldarg.0
L_0823: call UnityEngine.Transform get_transform()
L_0828: ldstr "BlipObjectGhostStrong"
L_082d: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0832: stloc.s 13 (UnityEngine.Transform)
L_0834: ldloc.s 13 (UnityEngine.Transform)
L_0836: ldnull
L_0837: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_083c: brfalse Label43
L_0841: ldarg.0
L_0842: ldloc.s 13 (UnityEngine.Transform)
L_0844: callvirt UnityEngine.GameObject get_gameObject()
L_0849: stfld UnityEngine.GameObject BlipObjectGhostStrong
L_084e: Label43
L_084e: ldarg.0
L_084f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0854: ldnull
L_0855: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_085a: brfalse Label44
L_085f: ldstr "ERROR! Couldn't auto-setup Strong Ghost Blip for mech "
L_0864: ldarg.0
L_0865: call BattleTech.Mech get_parentMech()
L_086a: callvirt System.String get_DisplayName()
L_086f: call System.String Concat(System.String, System.String)
L_0874: call Void LogWarning(System.Object)
L_0879: Label42
L_0879: Label44
L_0879: ldarg.0
L_087a: ldfld MechDestructibleObject headDestructible
L_087f: ldnull
L_0880: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0885: brfalse Label45
L_088a: ldc.i4.1
L_088b: stloc.0
L_088c: ldarg.0
L_088d: ldarg.0
L_088e: call UnityEngine.Transform get_transform()
L_0893: ldstr "Head_whole"
L_0898: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_089d: stloc.s 14 (UnityEngine.Transform)
L_089f: ldloc.s 14 (UnityEngine.Transform)
L_08a1: ldnull
L_08a2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_08a7: brfalse Label46
L_08ac: ldarg.0
L_08ad: ldloc.s 14 (UnityEngine.Transform)
L_08af: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_08b4: stfld MechDestructibleObject headDestructible
L_08b9: Label46
L_08b9: ldarg.0
L_08ba: ldfld MechDestructibleObject headDestructible
L_08bf: ldnull
L_08c0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_08c5: brfalse Label47
L_08ca: ldstr "ERROR! Couldn't auto-setup headDestructible for mech "
L_08cf: ldarg.0
L_08d0: call BattleTech.Mech get_parentMech()
L_08d5: callvirt System.String get_DisplayName()
L_08da: call System.String Concat(System.String, System.String)
L_08df: call Void LogWarning(System.Object)
L_08e4: Label45
L_08e4: Label47
L_08e4: ldarg.0
L_08e5: ldfld MechDestructibleObject centerTorsoDestructible
L_08ea: ldnull
L_08eb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_08f0: brfalse Label48
L_08f5: ldc.i4.1
L_08f6: stloc.0
L_08f7: ldarg.0
L_08f8: ldarg.0
L_08f9: call UnityEngine.Transform get_transform()
L_08fe: ldstr "torso_whole"
L_0903: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0908: stloc.s 15 (UnityEngine.Transform)
L_090a: ldloc.s 15 (UnityEngine.Transform)
L_090c: ldnull
L_090d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0912: brfalse Label49
L_0917: ldarg.0
L_0918: ldloc.s 15 (UnityEngine.Transform)
L_091a: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_091f: stfld MechDestructibleObject centerTorsoDestructible
L_0924: Label49
L_0924: ldarg.0
L_0925: ldfld MechDestructibleObject centerTorsoDestructible
L_092a: ldnull
L_092b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0930: brfalse Label50
L_0935: ldstr "ERROR! Couldn't auto-setup centerTorsoDestructible for mech "
L_093a: ldarg.0
L_093b: call BattleTech.Mech get_parentMech()
L_0940: callvirt System.String get_DisplayName()
L_0945: call System.String Concat(System.String, System.String)
L_094a: call Void LogWarning(System.Object)
L_094f: Label48
L_094f: Label50
L_094f: ldarg.0
L_0950: ldfld MechDestructibleObject leftTorsoDestructible
L_0955: ldnull
L_0956: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_095b: brfalse Label51
L_0960: ldc.i4.1
L_0961: stloc.0
L_0962: ldarg.0
L_0963: ldarg.0
L_0964: call UnityEngine.Transform get_transform()
L_0969: ldstr "lefttorso_whole"
L_096e: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0973: stloc.s 16 (UnityEngine.Transform)
L_0975: ldloc.s 16 (UnityEngine.Transform)
L_0977: ldnull
L_0978: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_097d: brfalse Label52
L_0982: ldarg.0
L_0983: ldloc.s 16 (UnityEngine.Transform)
L_0985: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_098a: stfld MechDestructibleObject leftTorsoDestructible
L_098f: Label52
L_098f: ldarg.0
L_0990: ldfld MechDestructibleObject leftTorsoDestructible
L_0995: ldnull
L_0996: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_099b: brfalse Label53
L_09a0: ldstr "ERROR! Couldn't auto-setup leftTorsoDestructible for mech "
L_09a5: ldarg.0
L_09a6: call BattleTech.Mech get_parentMech()
L_09ab: callvirt System.String get_DisplayName()
L_09b0: call System.String Concat(System.String, System.String)
L_09b5: call Void LogWarning(System.Object)
L_09ba: Label51
L_09ba: Label53
L_09ba: ldarg.0
L_09bb: ldfld MechDestructibleObject rightTorsoDestructible
L_09c0: ldnull
L_09c1: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_09c6: brfalse Label54
L_09cb: ldc.i4.1
L_09cc: stloc.0
L_09cd: ldarg.0
L_09ce: ldarg.0
L_09cf: call UnityEngine.Transform get_transform()
L_09d4: ldstr "righttorso_whole"
L_09d9: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_09de: stloc.s 17 (UnityEngine.Transform)
L_09e0: ldloc.s 17 (UnityEngine.Transform)
L_09e2: ldnull
L_09e3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_09e8: brfalse Label55
L_09ed: ldarg.0
L_09ee: ldloc.s 17 (UnityEngine.Transform)
L_09f0: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_09f5: stfld MechDestructibleObject rightTorsoDestructible
L_09fa: Label55
L_09fa: ldarg.0
L_09fb: ldfld MechDestructibleObject rightTorsoDestructible
L_0a00: ldnull
L_0a01: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a06: brfalse Label56
L_0a0b: ldstr "ERROR! Couldn't auto-setup rightTorsoDestructible for mech "
L_0a10: ldarg.0
L_0a11: call BattleTech.Mech get_parentMech()
L_0a16: callvirt System.String get_DisplayName()
L_0a1b: call System.String Concat(System.String, System.String)
L_0a20: call Void LogWarning(System.Object)
L_0a25: Label54
L_0a25: Label56
L_0a25: ldarg.0
L_0a26: ldfld MechDestructibleObject leftArmDestructible
L_0a2b: ldnull
L_0a2c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a31: brfalse Label57
L_0a36: ldc.i4.1
L_0a37: stloc.0
L_0a38: ldarg.0
L_0a39: ldarg.0
L_0a3a: call UnityEngine.Transform get_transform()
L_0a3f: ldstr "LArm_whole"
L_0a44: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0a49: stloc.s 18 (UnityEngine.Transform)
L_0a4b: ldloc.s 18 (UnityEngine.Transform)
L_0a4d: ldnull
L_0a4e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0a53: brfalse Label58
L_0a58: ldarg.0
L_0a59: ldloc.s 18 (UnityEngine.Transform)
L_0a5b: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0a60: stfld MechDestructibleObject leftArmDestructible
L_0a65: Label58
L_0a65: ldarg.0
L_0a66: ldfld MechDestructibleObject leftArmDestructible
L_0a6b: ldnull
L_0a6c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a71: brfalse Label59
L_0a76: ldstr "ERROR! Couldn't auto-setup leftArmDestructible for mech "
L_0a7b: ldarg.0
L_0a7c: call BattleTech.Mech get_parentMech()
L_0a81: callvirt System.String get_DisplayName()
L_0a86: call System.String Concat(System.String, System.String)
L_0a8b: call Void LogWarning(System.Object)
L_0a90: Label57
L_0a90: Label59
L_0a90: ldarg.0
L_0a91: ldfld MechDestructibleObject rightArmDestructible
L_0a96: ldnull
L_0a97: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a9c: brfalse Label60
L_0aa1: ldc.i4.1
L_0aa2: stloc.0
L_0aa3: ldarg.0
L_0aa4: ldarg.0
L_0aa5: call UnityEngine.Transform get_transform()
L_0aaa: ldstr "RArm_whole"
L_0aaf: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0ab4: stloc.s 19 (UnityEngine.Transform)
L_0ab6: ldloc.s 19 (UnityEngine.Transform)
L_0ab8: ldnull
L_0ab9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0abe: brfalse Label61
L_0ac3: ldarg.0
L_0ac4: ldloc.s 19 (UnityEngine.Transform)
L_0ac6: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0acb: stfld MechDestructibleObject rightArmDestructible
L_0ad0: Label61
L_0ad0: ldarg.0
L_0ad1: ldfld MechDestructibleObject rightArmDestructible
L_0ad6: ldnull
L_0ad7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0adc: brfalse Label62
L_0ae1: ldstr "ERROR! Couldn't auto-setup rightArmDestructible for mech "
L_0ae6: ldarg.0
L_0ae7: call BattleTech.Mech get_parentMech()
L_0aec: callvirt System.String get_DisplayName()
L_0af1: call System.String Concat(System.String, System.String)
L_0af6: call Void LogWarning(System.Object)
L_0afb: Label60
L_0afb: Label62
L_0afb: ldarg.0
L_0afc: ldfld MechDestructibleObject leftLegDestructible
L_0b01: ldnull
L_0b02: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b07: brfalse Label63
L_0b0c: ldc.i4.1
L_0b0d: stloc.0
L_0b0e: ldarg.0
L_0b0f: ldarg.0
L_0b10: call UnityEngine.Transform get_transform()
L_0b15: ldstr "LLeg_whole"
L_0b1a: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0b1f: stloc.s 20 (UnityEngine.Transform)
L_0b21: ldloc.s 20 (UnityEngine.Transform)
L_0b23: ldnull
L_0b24: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0b29: brfalse Label64
L_0b2e: ldarg.0
L_0b2f: ldloc.s 20 (UnityEngine.Transform)
L_0b31: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0b36: stfld MechDestructibleObject leftLegDestructible
L_0b3b: Label64
L_0b3b: ldarg.0
L_0b3c: ldfld MechDestructibleObject leftLegDestructible
L_0b41: ldnull
L_0b42: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b47: brfalse Label65
L_0b4c: ldstr "ERROR! Couldn't auto-setup leftLegDestructible for mech "
L_0b51: ldarg.0
L_0b52: call BattleTech.Mech get_parentMech()
L_0b57: callvirt System.String get_DisplayName()
L_0b5c: call System.String Concat(System.String, System.String)
L_0b61: call Void LogWarning(System.Object)
L_0b66: Label63
L_0b66: Label65
L_0b66: ldarg.0
L_0b67: ldfld MechDestructibleObject rightLegDestructible
L_0b6c: ldnull
L_0b6d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b72: brfalse Label66
L_0b77: ldc.i4.1
L_0b78: stloc.0
L_0b79: ldarg.0
L_0b7a: ldarg.0
L_0b7b: call UnityEngine.Transform get_transform()
L_0b80: ldstr "RLeg_whole"
L_0b85: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0b8a: stloc.s 21 (UnityEngine.Transform)
L_0b8c: ldloc.s 21 (UnityEngine.Transform)
L_0b8e: ldnull
L_0b8f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0b94: brfalse Label67
L_0b99: ldarg.0
L_0b9a: ldloc.s 21 (UnityEngine.Transform)
L_0b9c: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0ba1: stfld MechDestructibleObject rightLegDestructible
L_0ba6: Label67
L_0ba6: ldarg.0
L_0ba7: ldfld MechDestructibleObject rightLegDestructible
L_0bac: ldnull
L_0bad: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0bb2: brfalse Label68
L_0bb7: ldstr "ERROR! Couldn't auto-setup rightLegDestructible for mech "
L_0bbc: ldarg.0
L_0bbd: call BattleTech.Mech get_parentMech()
L_0bc2: callvirt System.String get_DisplayName()
L_0bc7: call System.String Concat(System.String, System.String)
L_0bcc: call Void LogWarning(System.Object)
L_0bd1: Label66
L_0bd1: Label68
L_0bd1: ldarg.0
L_0bd2: ldfld UnityEngine.GameObject VisibleObject
L_0bd7: ldnull
L_0bd8: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0bdd: brfalse Label69
L_0be2: ldstr "================= ERROR! Mech "
L_0be7: ldarg.0
L_0be8: call BattleTech.Mech get_parentMech()
L_0bed: callvirt System.String get_DisplayName()
L_0bf2: ldstr " has no visible object!!! FIX THIS ======================"
L_0bf7: call System.String Concat(System.String, System.String, System.String)
L_0bfc: call Void LogError(System.Object)
L_0c01: br Label70
L_0c06: Label69
L_0c06: ldarg.0
L_0c07: ldarg.0
L_0c08: call UnityEngine.GameObject get_gameObject()
L_0c0d: callvirt BattleTech.Rendering.MechMeshMerge AddComponent[MechMeshMerge]()
L_0c12: stfld BattleTech.Rendering.MechMeshMerge mechMerge
L_0c17: Label70
L_0c17: ldloc.0
L_0c18: brfalse Label71
L_0c1d: ldstr "================== ERROR! Found missing transforms in mech "
L_0c22: ldarg.0
L_0c23: call BattleTech.Mech get_parentMech()
L_0c28: callvirt System.String get_DisplayName()
L_0c2d: ldstr "; auto-settings are going to look wrong! FIX THIS ============"
L_0c32: call System.String Concat(System.String, System.String, System.String)
L_0c37: call Void LogError(System.Object)
L_0c3c: Label71
L_0c3c: ldarg.0
L_0c3d: ldfld AkGameObj audioObject
L_0c42: ldnull
L_0c43: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0c48: brfalse Label72
L_0c4d: ldstr "================= ERROR! Mech "
L_0c52: ldarg.0
L_0c53: call BattleTech.Mech get_parentMech()
L_0c58: callvirt System.String get_DisplayName()
L_0c5d: ldstr " has no audio object!!! FIX THIS ======================"
L_0c62: call System.String Concat(System.String, System.String, System.String)
L_0c67: call Void LogError(System.Object)
L_0c6c: Label72
L_0c6c: ldarg.0
L_0c6d: ldfld AkGameObj audioObject
L_0c72: ldnull
L_0c73: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0c78: brfalse Label73
L_0c7d: ldc.i4.1
L_0c7e: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0c80: ldarg.0
L_0c81: call BattleTech.Mech get_parentMech()
L_0c86: callvirt BattleTech.MechDef get_MechDef()
L_0c8b: callvirt BattleTech.ChassisDef get_Chassis()
L_0c90: callvirt BattleTech.WeightClass get_weightClass()
L_0c95: stloc.s 23 (BattleTech.WeightClass)
L_0c97: ldloc.s 23 (BattleTech.WeightClass)
L_0c99: ldc.i4.s 40
L_0c9b: bgt Label74
L_0ca0: ldloc.s 23 (BattleTech.WeightClass)
L_0ca2: ldc.i4.s 20
L_0ca4: beq Label75
L_0ca9: ldloc.s 23 (BattleTech.WeightClass)
L_0cab: ldc.i4.s 40
L_0cad: beq Label76
L_0cb2: br Label77
L_0cb7: Label74
L_0cb7: ldloc.s 23 (BattleTech.WeightClass)
L_0cb9: ldc.i4.s 60
L_0cbb: beq Label78
L_0cc0: ldloc.s 23 (BattleTech.WeightClass)
L_0cc2: ldc.i4.s 80
L_0cc4: beq Label79
L_0cc9: br Label80
L_0cce: Label75
L_0cce: ldc.i4.0
L_0ccf: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0cd1: br Label81
L_0cd6: Label76
L_0cd6: ldc.i4.1
L_0cd7: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0cd9: br Label82
L_0cde: Label78
L_0cde: ldc.i4.2
L_0cdf: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0ce1: br Label83
L_0ce6: Label79
L_0ce6: ldc.i4.3
L_0ce7: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0ce9: Label77
L_0ce9: Label80
L_0ce9: Label81
L_0ce9: Label82
L_0ce9: Label83
L_0ce9: ldloc.s 22 (AudioSwitch_mech_weight_type)
L_0ceb: ldarg.0
L_0cec: ldfld AkGameObj audioObject
L_0cf1: call Void SetSwitch[AudioSwitch_mech_weight_type](AudioSwitch_mech_weight_type, AkGameObj)
L_0cf6: ldarg.0
L_0cf7: ldfld System.Boolean useBirdFoot
L_0cfc: brfalse Label84
L_0d01: ldc.i4.0
L_0d02: ldarg.0
L_0d03: ldfld AkGameObj audioObject
L_0d08: call Void SetSwitch[AudioSwitch_mech_foot_type](AudioSwitch_mech_foot_type, AkGameObj)
L_0d0d: br Label85
L_0d12: Label84
L_0d12: ldc.i4.1
L_0d13: ldarg.0
L_0d14: ldfld AkGameObj audioObject
L_0d19: call Void SetSwitch[AudioSwitch_mech_foot_type](AudioSwitch_mech_foot_type, AkGameObj)
L_0d1e: Label85
L_0d1e: ldc.i4 384
L_0d23: ldc.r4 100
L_0d28: ldarg.1
L_0d29: callvirt Single get_tonnage()
L_0d2e: sub
L_0d2f: ldarg.0
L_0d30: ldfld AkGameObj audioObject
L_0d35: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_0d3a: ldc.i4 389
L_0d3f: ldc.r4 0
L_0d44: ldarg.0
L_0d45: ldfld AkGameObj audioObject
L_0d4a: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_0d4f: ldc.i4.0
L_0d50: ldarg.0
L_0d51: ldfld AkGameObj audioObject
L_0d56: call Void SetSwitch[AudioSwitch_mech_engine_damaged_mildly_yesno](AudioSwitch_mech_engine_damaged_mildly_yesno, AkGameObj)
L_0d5b: ldc.i4.0
L_0d5c: ldarg.0
L_0d5d: ldfld AkGameObj audioObject
L_0d62: call Void SetSwitch[AudioSwitch_mech_engine_damaged_badly_yesno](AudioSwitch_mech_engine_damaged_badly_yesno, AkGameObj)
L_0d67: Label73
L_0d67: ldarg.1
L_0d68: callvirt BattleTech.MechDef get_MechDef()
L_0d6d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0d72: ldsfld System.Func`2[BattleTech.MechComponentRef,System.Boolean] <>9__87_0
L_0d77: dup
L_0d78: brtrue Label86
L_0d7d: pop
L_0d7e: ldsfld BattleTech.MechRepresentation+<>c <>9
L_0d83: ldftn Boolean <Init>b__87_0(BattleTech.MechComponentRef)
L_0d89: newobj Void .ctor(Object, IntPtr)
L_0d8e: dup
L_0d8f: stsfld System.Func`2[BattleTech.MechComponentRef,System.Boolean] <>9__87_0
L_0d94: Label86
L_0d94: call System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef] Where[MechComponentRef](System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef], System.Func`2[BattleTech.MechComponentRef,System.Boolean])
L_0d99: call Int32 Count[MechComponentRef](System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef])
L_0d9e: stloc.1
L_0d9f: ldloc.1
L_0da0: ldc.i4.0
L_0da1: ble Label87
L_0da6: ldarg.0
L_0da7: ldarg.1
L_0da8: ldarg.1
L_0da9: callvirt BattleTech.MechDef get_MechDef()
L_0dae: ldarg.1
L_0daf: callvirt BattleTech.CombatGameState get_Combat()
L_0db4: callvirt BattleTech.Data.DataManager get_DataManager()
L_0db9: call Void SetupJumpJets(BattleTech.Mech, BattleTech.MechDef, BattleTech.Data.DataManager)
L_0dbe: ldarg.1
L_0dbf: callvirt BattleTech.CombatGameState get_Combat()
L_0dc4: callvirt BattleTech.Data.DataManager get_DataManager()
L_0dc9: ldstr "JumpjetCurves"
L_0dce: ldc.i4.s 45
L_0dd0: ldloc.1
L_0dd1: callvirt Void PrecachePrefab(System.String, BattleTech.BattleTechResourceType, Int32)
L_0dd6: Label87
L_0dd6: ldstr "chrPrfComp_{0}_centertorso_headlight"
L_0ddb: ldarg.1
L_0ddc: callvirt BattleTech.MechDef get_MechDef()
L_0de1: callvirt BattleTech.ChassisDef get_Chassis()
L_0de6: callvirt System.String get_PrefabBase()
L_0deb: call System.String Format(System.String, System.Object)
L_0df0: stloc.2
L_0df1: ldstr "chrPrfComp_{0}_leftshoulder_headlight"
L_0df6: ldarg.1
L_0df7: callvirt BattleTech.MechDef get_MechDef()
L_0dfc: callvirt BattleTech.ChassisDef get_Chassis()
L_0e01: callvirt System.String get_PrefabBase()
L_0e06: call System.String Format(System.String, System.Object)
L_0e0b: stloc.3
L_0e0c: ldstr "chrPrfComp_{0}_rightshoulder_headlight"
L_0e11: ldarg.1
L_0e12: callvirt BattleTech.MechDef get_MechDef()
L_0e17: callvirt BattleTech.ChassisDef get_Chassis()
L_0e1c: callvirt System.String get_PrefabBase()
L_0e21: call System.String Format(System.String, System.Object)
L_0e26: stloc.s 4 (System.String)
L_0e28: ldstr "chrPrfComp_{0}_leftleg_headlight"
L_0e2d: ldarg.1
L_0e2e: callvirt BattleTech.MechDef get_MechDef()
L_0e33: callvirt BattleTech.ChassisDef get_Chassis()
L_0e38: callvirt System.String get_PrefabBase()
L_0e3d: call System.String Format(System.String, System.Object)
L_0e42: stloc.s 5 (System.String)
L_0e44: ldstr "chrPrfComp_{0}_rightleg_headlight"
L_0e49: ldarg.1
L_0e4a: callvirt BattleTech.MechDef get_MechDef()
L_0e4f: callvirt BattleTech.ChassisDef get_Chassis()
L_0e54: callvirt System.String get_PrefabBase()
L_0e59: call System.String Format(System.String, System.Object)
L_0e5e: stloc.s 6 (System.String)
L_0e60: ldarg.0
L_0e61: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0e66: callvirt Void Clear()
L_0e6b: ldarg.1
L_0e6c: callvirt BattleTech.CombatGameState get_Combat()
L_0e71: callvirt BattleTech.Data.DataManager get_DataManager()
L_0e76: ldloc.2
L_0e77: ldc.i4.s 45
L_0e79: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0e7b: initobj System.Nullable`1[UnityEngine.Vector3]
L_0e81: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0e83: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0e85: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0e8b: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0e8d: ldnull
L_0e8e: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0e93: stloc.s 7 (UnityEngine.GameObject)
L_0e95: ldloc.s 7 (UnityEngine.GameObject)
L_0e97: ldnull
L_0e98: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0e9d: brfalse Label88
L_0ea2: ldloc.s 7 (UnityEngine.GameObject)
L_0ea4: callvirt UnityEngine.Transform get_transform()
L_0ea9: ldarg.0
L_0eaa: ldfld UnityEngine.Transform vfxHeadTransform
L_0eaf: callvirt Void set_parent(UnityEngine.Transform)
L_0eb4: ldloc.s 7 (UnityEngine.GameObject)
L_0eb6: callvirt UnityEngine.Transform get_transform()
L_0ebb: call UnityEngine.Vector3 get_zero()
L_0ec0: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0ec5: ldloc.s 7 (UnityEngine.GameObject)
L_0ec7: callvirt UnityEngine.Transform get_transform()
L_0ecc: call UnityEngine.Quaternion get_identity()
L_0ed1: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0ed6: ldloc.s 7 (UnityEngine.GameObject)
L_0ed8: callvirt UnityEngine.Transform get_transform()
L_0edd: call UnityEngine.Vector3 get_one()
L_0ee2: callvirt Void set_localScale(UnityEngine.Vector3)
L_0ee7: ldarg.0
L_0ee8: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0eed: ldloc.s 7 (UnityEngine.GameObject)
L_0eef: callvirt Void Add(UnityEngine.GameObject)
L_0ef4: Label88
L_0ef4: ldarg.1
L_0ef5: callvirt BattleTech.CombatGameState get_Combat()
L_0efa: callvirt BattleTech.Data.DataManager get_DataManager()
L_0eff: ldloc.3
L_0f00: ldc.i4.s 45
L_0f02: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f04: initobj System.Nullable`1[UnityEngine.Vector3]
L_0f0a: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f0c: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f0e: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0f14: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f16: ldnull
L_0f17: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0f1c: stloc.s 7 (UnityEngine.GameObject)
L_0f1e: ldloc.s 7 (UnityEngine.GameObject)
L_0f20: ldnull
L_0f21: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0f26: brfalse Label89
L_0f2b: ldloc.s 7 (UnityEngine.GameObject)
L_0f2d: callvirt UnityEngine.Transform get_transform()
L_0f32: ldarg.0
L_0f33: ldfld UnityEngine.Transform vfxLeftShoulderTransform
L_0f38: callvirt Void set_parent(UnityEngine.Transform)
L_0f3d: ldloc.s 7 (UnityEngine.GameObject)
L_0f3f: callvirt UnityEngine.Transform get_transform()
L_0f44: call UnityEngine.Vector3 get_zero()
L_0f49: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0f4e: ldloc.s 7 (UnityEngine.GameObject)
L_0f50: callvirt UnityEngine.Transform get_transform()
L_0f55: call UnityEngine.Quaternion get_identity()
L_0f5a: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0f5f: ldloc.s 7 (UnityEngine.GameObject)
L_0f61: callvirt UnityEngine.Transform get_transform()
L_0f66: call UnityEngine.Vector3 get_one()
L_0f6b: callvirt Void set_localScale(UnityEngine.Vector3)
L_0f70: ldarg.0
L_0f71: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0f76: ldloc.s 7 (UnityEngine.GameObject)
L_0f78: callvirt Void Add(UnityEngine.GameObject)
L_0f7d: Label89
L_0f7d: ldarg.1
L_0f7e: callvirt BattleTech.CombatGameState get_Combat()
L_0f83: callvirt BattleTech.Data.DataManager get_DataManager()
L_0f88: ldloc.s 4 (System.String)
L_0f8a: ldc.i4.s 45
L_0f8c: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f8e: initobj System.Nullable`1[UnityEngine.Vector3]
L_0f94: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f96: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f98: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0f9e: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0fa0: ldnull
L_0fa1: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0fa6: stloc.s 7 (UnityEngine.GameObject)
L_0fa8: ldloc.s 7 (UnityEngine.GameObject)
L_0faa: ldnull
L_0fab: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0fb0: brfalse Label90
L_0fb5: ldloc.s 7 (UnityEngine.GameObject)
L_0fb7: callvirt UnityEngine.Transform get_transform()
L_0fbc: ldarg.0
L_0fbd: ldfld UnityEngine.Transform vfxRightShoulderTransform
L_0fc2: callvirt Void set_parent(UnityEngine.Transform)
L_0fc7: ldloc.s 7 (UnityEngine.GameObject)
L_0fc9: callvirt UnityEngine.Transform get_transform()
L_0fce: call UnityEngine.Vector3 get_zero()
L_0fd3: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0fd8: ldloc.s 7 (UnityEngine.GameObject)
L_0fda: callvirt UnityEngine.Transform get_transform()
L_0fdf: call UnityEngine.Quaternion get_identity()
L_0fe4: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0fe9: ldloc.s 7 (UnityEngine.GameObject)
L_0feb: callvirt UnityEngine.Transform get_transform()
L_0ff0: call UnityEngine.Vector3 get_one()
L_0ff5: callvirt Void set_localScale(UnityEngine.Vector3)
L_0ffa: ldarg.0
L_0ffb: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_1000: ldloc.s 7 (UnityEngine.GameObject)
L_1002: callvirt Void Add(UnityEngine.GameObject)
L_1007: Label90
L_1007: ldarg.1
L_1008: callvirt BattleTech.CombatGameState get_Combat()
L_100d: callvirt BattleTech.Data.DataManager get_DataManager()
L_1012: ldloc.s 5 (System.String)
L_1014: ldc.i4.s 45
L_1016: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_1018: initobj System.Nullable`1[UnityEngine.Vector3]
L_101e: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_1020: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_1022: initobj System.Nullable`1[UnityEngine.Quaternion]
L_1028: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_102a: ldnull
L_102b: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_1030: stloc.s 7 (UnityEngine.GameObject)
L_1032: ldloc.s 7 (UnityEngine.GameObject)
L_1034: ldnull
L_1035: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_103a: brfalse Label91
L_103f: ldloc.s 7 (UnityEngine.GameObject)
L_1041: callvirt UnityEngine.Transform get_transform()
L_1046: ldarg.0
L_1047: ldfld UnityEngine.Transform vfxLeftLegTransform
L_104c: callvirt Void set_parent(UnityEngine.Transform)
L_1051: ldloc.s 7 (UnityEngine.GameObject)
L_1053: callvirt UnityEngine.Transform get_transform()
L_1058: call UnityEngine.Vector3 get_zero()
L_105d: callvirt Void set_localPosition(UnityEngine.Vector3)
L_1062: ldloc.s 7 (UnityEngine.GameObject)
L_1064: callvirt UnityEngine.Transform get_transform()
L_1069: call UnityEngine.Quaternion get_identity()
L_106e: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_1073: ldloc.s 7 (UnityEngine.GameObject)
L_1075: callvirt UnityEngine.Transform get_transform()
L_107a: call UnityEngine.Vector3 get_one()
L_107f: callvirt Void set_localScale(UnityEngine.Vector3)
L_1084: ldarg.0
L_1085: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_108a: ldloc.s 7 (UnityEngine.GameObject)
L_108c: callvirt Void Add(UnityEngine.GameObject)
L_1091: Label91
L_1091: ldarg.1
L_1092: callvirt BattleTech.CombatGameState get_Combat()
L_1097: callvirt BattleTech.Data.DataManager get_DataManager()
L_109c: ldloc.s 6 (System.String)
L_109e: ldc.i4.s 45
L_10a0: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_10a2: initobj System.Nullable`1[UnityEngine.Vector3]
L_10a8: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_10aa: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_10ac: initobj System.Nullable`1[UnityEngine.Quaternion]
L_10b2: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_10b4: ldnull
L_10b5: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_10ba: stloc.s 7 (UnityEngine.GameObject)
L_10bc: ldloc.s 7 (UnityEngine.GameObject)
L_10be: ldnull
L_10bf: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_10c4: brfalse Label92
L_10c9: ldloc.s 7 (UnityEngine.GameObject)
L_10cb: callvirt UnityEngine.Transform get_transform()
L_10d0: ldarg.0
L_10d1: ldfld UnityEngine.Transform vfxRightLegTransform
L_10d6: callvirt Void set_parent(UnityEngine.Transform)
L_10db: ldloc.s 7 (UnityEngine.GameObject)
L_10dd: callvirt UnityEngine.Transform get_transform()
L_10e2: call UnityEngine.Vector3 get_zero()
L_10e7: callvirt Void set_localPosition(UnityEngine.Vector3)
L_10ec: ldloc.s 7 (UnityEngine.GameObject)
L_10ee: callvirt UnityEngine.Transform get_transform()
L_10f3: call UnityEngine.Quaternion get_identity()
L_10f8: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_10fd: ldloc.s 7 (UnityEngine.GameObject)
L_10ff: callvirt UnityEngine.Transform get_transform()
L_1104: call UnityEngine.Vector3 get_one()
L_1109: callvirt Void set_localScale(UnityEngine.Vector3)
L_110e: ldarg.0
L_110f: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_1114: ldloc.s 7 (UnityEngine.GameObject)
L_1116: callvirt Void Add(UnityEngine.GameObject)
L_111b: Label92
L_111b: ldarg.0
L_111c: ldc.i4.1
L_111d: callvirt Boolean RefreshSurfaceType(Boolean)
L_1122: pop
L_1123: ldarg.0
L_1124: call Void InitHighlighting()
L_1129: ldarg.0
L_112a: call Void InitWindZone()
L_112f: ldarg.0
L_1130: call BattleTech.Mech get_parentMech()
L_1135: callvirt BattleTech.CombatGameState get_Combat()
L_113a: callvirt MessageCenter get_MessageCenter()
L_113f: ldc.i4.s 81
L_1141: ldarg.0
L_1142: ldftn Void OnHeatChanged(MessageCenterMessage)
L_1148: newobj Void .ctor(Object, IntPtr)
L_114d: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_1152: ldarg.0
L_1153: ldstr "_Heat"
L_1158: ldc.r4 0
L_115d: newobj Void .ctor(String, Single)
L_1162: stfld BattleTech.Rendering.PropertyBlockManager+PropertySetting heatAmount
L_1167: ldarg.0
L_1168: call BattleTech.Rendering.PropertyBlockManager get_propertyBlock()
L_116d: ldarg.0
L_116e: ldflda BattleTech.Rendering.PropertyBlockManager+PropertySetting heatAmount
L_1173: callvirt Void AddProperty(PropertySetting ByRef)
L_1178: ldarg.0
L_1179: call BattleTech.CombatGameConstants get_Constants()
L_117e: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_1183: ldfld System.Single TEST_MechScaleMultiplier
L_1188: stloc.s 8 (System.Single)
L_118a: ldarg.0
L_118b: ldfld UnityEngine.Transform thisTransform
L_1190: ldloc.s 8 (System.Single)
L_1192: ldloc.s 8 (System.Single)
L_1194: ldloc.s 8 (System.Single)
L_1196: newobj Void .ctor(Single, Single, Single)
L_119b: callvirt Void set_localScale(UnityEngine.Vector3)
L_11a0: ldarg.0
L_11a1: call UnityEngine.Animator GetComponent[Animator]()
L_11a6: ldc.i4.0
L_11a7: callvirt Void set_cullingMode(UnityEngine.AnimatorCullingMode)
L_11ac: ldarg.0
L_11ad: call UnityEngine.GameObject get_gameObject()
L_11b2: callvirt BattleTech.Rendering.ShadowTracker AddComponent[ShadowTracker]()
L_11b7: pop
L_11b8: ldarg.0
L_11b9: ldarg.1
L_11ba: ldarg.1
L_11bb: callvirt BattleTech.MechDef get_MechDef()
L_11c0: call Void SetupDamageStates(BattleTech.Mech, BattleTech.MechDef)
L_11c5: ldarg.0
L_11c6: ldfld BattleTech.Rendering.MechMeshMerge mechMerge
L_11cb: ldc.i4.1
L_11cc: callvirt Void RefreshCombinedMesh(Boolean)
L_11d1: ldarg 1
L_11d7: ldarg 2
L_11dd: ldarg 3
L_11e3: ldarg.0
L_11e4: call Void Postfix(BattleTech.Mech, UnityEngine.Transform, Boolean, BattleTech.MechRepresentation)
L_11e9: ret
DONE

### Patch WeaponEffect, Void PlayProjectile()
L_0000: Local var 0: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 1: BattleTech.ChassisLocations
L_0000: Local var 2: BattleTech.AttackSourceLimb
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldc.r4 0
L_0011: stfld System.Single t
L_0016: ldarg.0
L_0017: ldc.i4.2
L_0018: stfld WeaponEffect+WeaponEffectState currentState
L_001d: ldarg.0
L_001e: ldfld UnityEngine.GameObject projectileMeshObject
L_0023: ldnull
L_0024: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0029: brfalse Label1
L_002e: ldarg.0
L_002f: ldfld UnityEngine.GameObject projectileMeshObject
L_0034: ldc.i4.1
L_0035: callvirt Void SetActive(Boolean)
L_003a: Label1
L_003a: ldarg.0
L_003b: ldfld UnityEngine.GameObject projectileLightObject
L_0040: ldnull
L_0041: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0046: brfalse Label2
L_004b: ldarg.0
L_004c: ldfld UnityEngine.GameObject projectileLightObject
L_0051: ldc.i4.1
L_0052: callvirt Void SetActive(Boolean)
L_0057: Label2
L_0057: ldarg.0
L_0058: ldfld UnityEngine.ParticleSystem projectileParticles
L_005d: ldnull
L_005e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0063: brfalse Label3
L_0068: ldarg.0
L_0069: ldfld UnityEngine.ParticleSystem projectileParticles
L_006e: ldc.i4.1
L_006f: callvirt Void Stop(Boolean)
L_0074: ldarg.0
L_0075: ldfld UnityEngine.ParticleSystem projectileParticles
L_007a: ldc.i4.1
L_007b: callvirt Void Clear(Boolean)
L_0080: Label3
L_0080: ldarg.0
L_0081: ldfld UnityEngine.Transform projectileTransform
L_0086: ldarg.0
L_0087: ldfld UnityEngine.Transform startingTransform
L_008c: callvirt UnityEngine.Vector3 get_position()
L_0091: callvirt Void set_position(UnityEngine.Vector3)
L_0096: ldarg.0
L_0097: ldfld UnityEngine.Transform projectileTransform
L_009c: ldarg.0
L_009d: ldfld UnityEngine.Vector3 endPos
L_00a2: callvirt Void LookAt(UnityEngine.Vector3)
L_00a7: ldarg.0
L_00a8: ldarg.0
L_00a9: ldfld UnityEngine.Transform startingTransform
L_00ae: callvirt UnityEngine.Vector3 get_position()
L_00b3: stfld UnityEngine.Vector3 startPos
L_00b8: ldarg.0
L_00b9: ldfld UnityEngine.ParticleSystem projectileParticles
L_00be: ldnull
L_00bf: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c4: brfalse Label4
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.ParticleSystem projectileParticles
L_00cf: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_00d4: ldarg.0
L_00d5: ldfld UnityEngine.ParticleSystem projectileParticles
L_00da: ldc.i4.1
L_00db: callvirt Void Play(Boolean)
L_00e0: ldarg.0
L_00e1: ldfld UnityEngine.ParticleSystem projectileParticles
L_00e6: ldc.i4.1
L_00e7: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_00ec: stloc.0
L_00ed: ldloc.0
L_00ee: ldnull
L_00ef: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00f4: brfalse Label5
L_00f9: ldloc.0
L_00fa: callvirt Void StopAnimation()
L_00ff: ldloc.0
L_0100: callvirt Void PlayAnimation()
L_0105: Label4
L_0105: Label5
L_0105: ldarg.0
L_0106: ldfld BattleTech.Weapon weapon
L_010b: ldfld BattleTech.AbstractActor parent
L_0110: callvirt BattleTech.GameRepresentation get_GameRep()
L_0115: ldnull
L_0116: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_011b: brfalse Label6
L_0120: ldarg.0
L_0121: ldfld BattleTech.Weapon weapon
L_0126: callvirt Int32 get_Location()
L_012b: stloc.1
L_012c: ldloc.1
L_012d: ldc.i4.2
L_012e: beq Label7
L_0133: ldloc.1
L_0134: ldc.i4.s 32
L_0136: beq Label8
L_013b: ldc.i4.0
L_013c: br Label9
L_0141: Label8
L_0141: ldc.i4.2
L_0142: br Label10
L_0147: Label7
L_0147: ldc.i4.1
L_0148: Label9
L_0148: Label10
L_0148: stloc.2
L_0149: ldarg.0
L_014a: ldfld BattleTech.Weapon weapon
L_014f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0154: callvirt Int32 get_AttackRecoil()
L_0159: stloc.3
L_015a: ldarg.0
L_015b: ldfld BattleTech.Weapon weapon
L_0160: ldfld BattleTech.AbstractActor parent
L_0165: callvirt BattleTech.GameRepresentation get_GameRep()
L_016a: ldloc.2
L_016b: ldloc.3
L_016c: callvirt Void PlayFireAnim(BattleTech.AttackSourceLimb, Int32)
L_0171: Label6
L_0171: ldarg.0
L_0172: call Boolean get_AllowMissSkipping()
L_0177: brfalse Label11
L_017c: ldarg.0
L_017d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0182: ldarg.0
L_0183: ldfld System.Int32 hitIndex
L_0188: call Boolean DidShotHitChosenTarget(Int32)
L_018d: brtrue Label12
L_0192: ldarg.0
L_0193: call Void PublishWeaponCompleteMessage()
L_0198: Label11
L_0198: Label12
L_0198: Label0
L_0198: ret
DONE

### Harmony id=de.morphyum.MeleeMover, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MeleeMover.MeleeMover.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MeleeMover\MeleeMover.dll
### At 2019-09-15 05.05.23
### Patch BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.VisibilityLevel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_OwningActor()
L_0006: ldarg.1
L_0007: callvirt BattleTech.VisibilityLevel VisibilityToTargetUnit(BattleTech.ICombatant)
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 9
L_0010: bge Label1
L_0015: ldloc.0
L_0016: ldc.i4.6
L_0017: beq Label2
L_001c: newobj Void .ctor()
L_0021: br Label14
L_0026: Label1
L_0026: Label2
L_0026: ldarg.0
L_0027: call BattleTech.CombatGameState get_Combat()
L_002c: callvirt BattleTech.HexGrid get_HexGrid()
L_0031: ldarg.1
L_0032: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0037: callvirt System.Collections.Generic.List`1[UnityEngine.Vector3] GetAdjacentPointsOnGrid(UnityEngine.Vector3)
L_003c: ldarg.0
L_003d: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0042: call System.Collections.Generic.List`1[BattleTech.PathNode] GetPathNodesForPoints(System.Collections.Generic.List`1[UnityEngine.Vector3], BattleTech.PathNodeGrid)
L_0047: stloc.1
L_0048: ldloc.1
L_0049: callvirt Int32 get_Count()
L_004e: ldc.i4.1
L_004f: sub
L_0050: stloc.2
L_0051: br Label3
L_0056: Label6
L_0056: ldloc.1
L_0057: ldloc.2
L_0058: callvirt BattleTech.PathNode get_Item(Int32)
L_005d: callvirt UnityEngine.Vector3 get_Position()
L_0062: ldfld System.Single y
L_0067: ldarg.1
L_0068: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006d: ldfld System.Single y
L_0072: sub
L_0073: call Single Abs(Single)
L_0078: ldarg.0
L_0079: call BattleTech.CombatGameState get_Combat()
L_007e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0083: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0088: ldfld System.Single MaxMeleeVerticalOffset
L_008d: bgt Label4
L_0092: ldarg.0
L_0093: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0098: ldloc.1
L_0099: ldloc.2
L_009a: callvirt BattleTech.PathNode get_Item(Int32)
L_009f: callvirt UnityEngine.Vector3 get_Position()
L_00a4: ldarg.1
L_00a5: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00aa: callvirt Boolean FindBlockerReciprocal(UnityEngine.Vector3, UnityEngine.Vector3)
L_00af: brfalse Label5
L_00b4: Label4
L_00b4: ldloc.1
L_00b5: ldloc.2
L_00b6: callvirt Void RemoveAt(Int32)
L_00bb: Label5
L_00bb: ldloc.2
L_00bc: ldc.i4.1
L_00bd: sub
L_00be: stloc.2
L_00bf: Label3
L_00bf: ldloc.2
L_00c0: ldc.i4.0
L_00c1: bge Label6
L_00c6: ldloc.1
L_00c7: callvirt Int32 get_Count()
L_00cc: ldc.i4.1
L_00cd: ble Label7
L_00d2: ldarg.0
L_00d3: call BattleTech.CombatGameState get_Combat()
L_00d8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00dd: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00e2: ldfld System.Boolean SortMeleeHexesByPathingCost
L_00e7: brfalse Label8
L_00ec: ldloc.1
L_00ed: ldsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_00f2: dup
L_00f3: brtrue Label9
L_00f8: pop
L_00f9: ldsfld BattleTech.Pathing+<>c <>9
L_00fe: ldftn Int32 <GetMeleeDestsForTarget>b__68_0(BattleTech.PathNode, BattleTech.PathNode)
L_0104: newobj Void .ctor(Object, IntPtr)
L_0109: dup
L_010a: stsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_010f: Label9
L_010f: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_0114: br Label10
L_0119: Label8
L_0119: ldloc.1
L_011a: ldarg.0
L_011b: ldftn Int32 <GetMeleeDestsForTarget>b__68_1(BattleTech.PathNode, BattleTech.PathNode)
L_0121: newobj Void .ctor(Object, IntPtr)
L_0126: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_012b: Label10
L_012b: ldarg.0
L_012c: call BattleTech.CombatGameState get_Combat()
L_0131: callvirt BattleTech.CombatGameConstants get_Constants()
L_0136: callvirt BattleTech.MovementConstants get_MoveConstants()
L_013b: ldfld System.Int32 NumMeleeDestinationChoices
L_0140: stloc.3
L_0141: ldarg.0
L_0142: call BattleTech.AbstractActor get_OwningActor()
L_0147: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_014c: ldloc.1
L_014d: ldc.i4.0
L_014e: callvirt BattleTech.PathNode get_Item(Int32)
L_0153: callvirt UnityEngine.Vector3 get_Position()
L_0158: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_015d: stloc.s 4 (UnityEngine.Vector3)
L_015f: ldloca.s 4 (UnityEngine.Vector3)
L_0161: ldc.r4 0
L_0166: stfld System.Single y
L_016b: br Label12
L_0170: Label13
L_0170: ldloc.1
L_0171: ldloc.1
L_0172: callvirt Int32 get_Count()
L_0177: ldc.i4.1
L_0178: sub
L_0179: callvirt Void RemoveAt(Int32)
L_017e: Label11
L_017e: Label12
L_017e: ldloc.1
L_017f: callvirt Int32 get_Count()
L_0184: ldloc.3
L_0185: bgt Label13
L_018a: Label7
L_018a: ldloc.1
L_018b: Label14
L_018b: ret
DONE

### Patch BattleTech.Pathing, BattleTech.PathNodeGrid getGrid(BattleTech.MoveType)
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: sub
L_0003: switch Labels1,2,3,4,5,6
L_0020: br Label7
L_0025: Label2
L_0025: ldarg.0
L_0026: call BattleTech.PathNodeGrid get_SprintingGrid()
L_002b: br Label8
L_0030: Label3
L_0030: ldarg.0
L_0031: call BattleTech.PathNodeGrid get_BackwardGrid()
L_0036: br Label9
L_003b: Label1
L_003b: Label6
L_003b: ldarg.0
L_003c: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0041: br Label10
L_0046: Label5
L_0046: ldarg.0
L_0047: call BattleTech.PathNodeGrid get_SprintingGrid()
L_004c: br Label11
L_0051: Label4
L_0051: Label7
L_0051: ldsfld HBS.Logging.ILog gameInfoLogger
L_0056: ldstr "incorrect MoveType for getGrid: "
L_005b: ldarg.1
L_005c: box BattleTech.MoveType
L_0061: ldstr ", falling back to walking"
L_0066: call System.String Concat(System.Object, System.Object, System.Object)
L_006b: callvirt Void LogError(System.Object)
L_0070: ldarg.0
L_0071: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0076: Label8
L_0076: Label9
L_0076: Label10
L_0076: Label11
L_0076: ret
DONE

### Patch BattleTech.Pathing, Void SetMeleeTarget(BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.PathNode
L_0000: Local var 2: System.Single
L_0000: ldarg.0
L_0001: call Void UnlockPosition()
L_0006: ldarg.0
L_0007: ldc.i4.5
L_0008: stfld BattleTech.MoveType moveType
L_000d: ldarg.0
L_000e: ldarg.1
L_000f: call Void set_CurrentMeleeTarget(BattleTech.AbstractActor)
L_0014: ldarg.0
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_001b: call Void set_CurrentDestination(UnityEngine.Vector3)
L_0020: ldarg.0
L_0021: ldc.i4.0
L_0022: call Void set_HasMeleeDestSelection(Boolean)
L_0027: ldarg.1
L_0028: brfalse Label1
L_002d: ldarg.0
L_002e: call BattleTech.CombatGameState get_Combat()
L_0033: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0038: stloc.0
L_0039: ldloc.0
L_003a: ldarg.0
L_003b: call BattleTech.AbstractActor get_OwningActor()
L_0040: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0045: pop
L_0046: ldloc.0
L_0047: ldarg.1
L_0048: callvirt Boolean Remove(BattleTech.AbstractActor)
L_004d: pop
L_004e: ldarg.0
L_004f: ldarg.1
L_0050: ldloc.0
L_0051: ldloca.s 1 (BattleTech.PathNode)
L_0053: ldarg.0
L_0054: ldflda UnityEngine.Vector3 ResultDestination
L_0059: ldarg.0
L_005a: ldflda System.Single ResultAngle
L_005f: call Boolean GetMeleeDestination(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.PathNode ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_0064: brfalse Label2
L_0069: ldarg.0
L_006a: ldarg.0
L_006b: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0070: ldloc.1
L_0071: ldarg.0
L_0072: call BattleTech.AbstractActor get_OwningActor()
L_0077: callvirt Single get_MaxMeleeEngageRangeDistance()
L_007c: ldarg.0
L_007d: ldfld UnityEngine.Vector3 ResultDestination
L_0082: ldarg.1
L_0083: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0088: ldarg.1
L_0089: ldloca.s 2 (System.Single)
L_008b: ldarg.0
L_008c: ldflda UnityEngine.Vector3 ResultDestination
L_0091: ldarg.0
L_0092: ldflda System.Single ResultAngle
L_0097: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] BuildPathFromEnd(BattleTech.PathNode, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.AbstractActor, Single ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_009c: stfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00a1: br Label3
L_00a6: Label2
L_00a6: ldsfld HBS.Logging.ILog gameInfoLogger
L_00ab: ldstr "Attempted to set a melee target that we could not path to!"
L_00b0: callvirt Void LogError(System.Object)
L_00b5: br Label4
L_00ba: Label1
L_00ba: ldsfld HBS.Logging.ILog gameInfoLogger
L_00bf: ldstr "ATTEMPTING TO MELEE A BUILDING - this is gonna get weird"
L_00c4: callvirt Void LogError(System.Object)
L_00c9: Label3
L_00c9: Label4
L_00c9: ldarg.0
L_00ca: call Void LockPosition()
L_00cf: ret
DONE

### Harmony id=de.ben.MightyChargingJuggernaut, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MightyChargingJuggernaut.MightyChargingJuggernaut.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MightyChargingJuggernaut\MightyChargingJuggernaut.dll
### At 2019-09-15 05.05.23
### Patch BattleTech.MechMeleeSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "MeleeSequence CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: call BattleTech.Mech get_OwningMech()
L_0020: callvirt BattleTech.MechRepresentation get_GameRep()
L_0025: ldnull
L_0026: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_002b: pop
L_002c: ldarg.0
L_002d: call BattleTech.ICombatant get_MeleeTarget()
L_0032: ldarg.0
L_0033: ldfld BattleTech.AbstractActor owningActor
L_0038: callvirt System.String get_GUID()
L_003d: callvirt Void HandleDeath(System.String)
L_0042: ldarg.0
L_0043: call BattleTech.ICombatant get_MeleeTarget()
L_0048: callvirt Boolean get_IsDead()
L_004d: brtrue Label1
L_0052: ldarg.0
L_0053: call BattleTech.ICombatant get_MeleeTarget()
L_0058: isinst BattleTech.AbstractActor
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label2
L_0064: ldloc.0
L_0065: callvirt Boolean CheckForInstability()
L_006a: pop
L_006b: ldloc.0
L_006c: ldarg.0
L_006d: call Int32 get_RootSequenceGUID()
L_0072: ldarg.0
L_0073: ldfld BattleTech.AbstractActor owningActor
L_0078: callvirt System.String get_GUID()
L_007d: call UnityEngine.Vector2 get_one()
L_0082: ldnull
L_0083: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0088: Label1
L_0088: Label2
L_0088: Label0
L_0088: ldarg.0
L_0089: call Void Postfix(BattleTech.MechMeleeSequence)
L_008e: ldarg.0
L_008f: call Void Postfix(BattleTech.MechMeleeSequence)
L_0094: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void GenerateMeleePath()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_MoveIsCharge(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.Mech get_OwningMech()
L_000d: callvirt BattleTech.Pathing get_Pathing()
L_0012: callvirt Void SetWalking()
L_0017: ldarg.0
L_0018: call BattleTech.Mech get_OwningMech()
L_001d: callvirt BattleTech.Pathing get_Pathing()
L_0022: ldarg.0
L_0023: call BattleTech.ICombatant get_MeleeTarget()
L_0028: isinst BattleTech.AbstractActor
L_002d: callvirt Void SetMeleeTarget(BattleTech.AbstractActor)
L_0032: ldarg.0
L_0033: call BattleTech.Mech get_OwningMech()
L_0038: callvirt BattleTech.Pathing get_Pathing()
L_003d: ldarg.0
L_003e: call UnityEngine.Vector3 get_DesiredMeleePosition()
L_0043: callvirt Void SelectMeleeDest(UnityEngine.Vector3)
L_0048: ldarg.0
L_0049: call BattleTech.Mech get_OwningMech()
L_004e: callvirt BattleTech.Pathing get_Pathing()
L_0053: ldarg.0
L_0054: call BattleTech.ICombatant get_MeleeTarget()
L_0059: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_005e: ldc.i4.0
L_005f: callvirt Void Update(UnityEngine.Vector3, Boolean)
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: call BattleTech.Mech get_OwningMech()
L_006b: newobj Void .ctor(AbstractActor)
L_0070: stfld BattleTech.ActorMovementSequence moveSequence
L_0075: ldarg.0
L_0076: ldfld BattleTech.ActorMovementSequence moveSequence
L_007b: ldarg.0
L_007c: call Boolean get_MoveIsCharge()
L_0081: stfld System.Boolean IgnoreEndSmoothing
L_0086: ldarg.0
L_0087: ldfld BattleTech.ActorMovementSequence moveSequence
L_008c: ldarg.0
L_008d: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0092: stfld BattleTech.MeleeAttackType meleeType
L_0097: ldarg.0
L_0098: ldfld BattleTech.ActorMovementSequence moveSequence
L_009d: ldc.i4.1
L_009e: stfld System.Boolean hasOwningSequence
L_00a3: ldarg.0
L_00a4: call BattleTech.Mech get_OwningMech()
L_00a9: callvirt BattleTech.Pathing get_Pathing()
L_00ae: callvirt Void ClearMeleeTarget()
L_00b3: ldarg.0
L_00b4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00b9: ldarg.0
L_00ba: ldarg.0
L_00bb: ldflda BattleTech.ActorMovementSequence moveSequence
L_00c0: call Void Postfix(BattleTech.MechMeleeSequence, BattleTech.ActorMovementSequence ByRef)
L_00c5: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void BuildMeleeDirectorSequence()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Void Prefix(BattleTech.MechMeleeSequence)
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: call BattleTech.Mech get_OwningMech()
L_0018: ldarg.0
L_0019: call BattleTech.ICombatant get_MeleeTarget()
L_001e: ldarg.0
L_001f: ldfld BattleTech.ActorMovementSequence moveSequence
L_0024: callvirt UnityEngine.Vector3 get_FinalPos()
L_0029: ldarg.0
L_002a: ldfld BattleTech.ActorMovementSequence moveSequence
L_002f: callvirt UnityEngine.Vector3 get_FinalHeading()
L_0034: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0039: newobj Void .ctor()
L_003e: dup
L_003f: ldarg.0
L_0040: call BattleTech.Mech get_OwningMech()
L_0045: ldfld BattleTech.Weapon MeleeWeapon
L_004a: callvirt Void Add(BattleTech.Weapon)
L_004f: ldarg.0
L_0050: call Boolean get_MoveIsCharge()
L_0055: brtrue Label1
L_005a: ldarg.0
L_005b: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0060: br Label2
L_0065: Label1
L_0065: ldc.i4.5
L_0066: Label2
L_0066: ldc.i4.0
L_0067: ldc.i4.m1
L_0068: newobj Void .ctor(AbstractActor, ICombatant, Vector3, Quaternion, List`1, MeleeAttackType, Int32, Int32)
L_006d: stfld BattleTech.AttackStackSequence meleeSequence
L_0072: ldarg.0
L_0073: ldfld BattleTech.AttackStackSequence meleeSequence
L_0078: ldc.i4.0
L_0079: stfld System.Boolean willConsumeFiring
L_007e: ldarg.0
L_007f: ldfld BattleTech.AttackStackSequence meleeSequence
L_0084: ldc.i4.1
L_0085: stfld System.Boolean hasOwningSequence
L_008a: ldarg.0
L_008b: ldfld BattleTech.AttackStackSequence meleeSequence
L_0090: ldarg.0
L_0091: call Int32 get_RootSequenceGUID()
L_0096: callvirt Void set_RootSequenceGUID(Int32)
L_009b: ldarg.0
L_009c: call BattleTech.CameraSequence get_cameraSequence()
L_00a1: brfalse Label3
L_00a6: ldarg.0
L_00a7: ldfld BattleTech.AttackStackSequence meleeSequence
L_00ac: ldarg.0
L_00ad: call BattleTech.CameraSequence get_cameraSequence()
L_00b2: ldarg.0
L_00b3: call Int32 get_MessageIndex()
L_00b8: callvirt Void SetCamera(BattleTech.CameraSequence, Int32)
L_00bd: Label3
L_00bd: Label0
L_00bd: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void ExecuteMove()
L_0000: Local var 0: System.Boolean
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechMeleeSequence)
L_0006: ldsfld HBS.Logging.ILog logger
L_000b: ldstr "MeleeSequence ExecuteMove. Is full charge? "
L_0010: ldarg.0
L_0011: call Boolean get_MoveIsCharge()
L_0016: stloc.0
L_0017: ldloca.s 0 (System.Boolean)
L_0019: call System.String ToString()
L_001e: call System.String Concat(System.String, System.String)
L_0023: callvirt Void Log(System.Object)
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldc.i4.s 91
L_0035: ldarg.0
L_0036: ldftn Void OnMoveComplete(MessageCenterMessage)
L_003c: newobj Void .ctor(Object, IntPtr)
L_0041: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0046: ldarg.0
L_0047: ldfld BattleTech.ActorMovementSequence moveSequence
L_004c: ldarg.0
L_004d: call Int32 get_RootSequenceGUID()
L_0052: callvirt Void set_RootSequenceGUID(Int32)
L_0057: ldarg.0
L_0058: call BattleTech.CombatGameState get_Combat()
L_005d: callvirt MessageCenter get_MessageCenter()
L_0062: ldarg.0
L_0063: ldfld BattleTech.ActorMovementSequence moveSequence
L_0068: newobj Void .ctor(IStackSequence)
L_006d: callvirt Void PublishMessage(MessageCenterMessage)
L_0072: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void OnMeleeComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: ldarg.1
L_0001: isinst BattleTech.AttackCompleteMessage
L_0006: stloc.0
L_0007: ldsfld HBS.Logging.ILog logger
L_000c: ldc.i4.6
L_000d: newarr System.Object
L_0012: dup
L_0013: ldc.i4.0
L_0014: ldstr "OnMeleeComplete. msg id: "
L_0019: stelem.ref
L_001a: dup
L_001b: ldc.i4.1
L_001c: ldloc.0
L_001d: ldfld System.Int32 stackItemUID
L_0022: box System.Int32
L_0027: stelem.ref
L_0028: dup
L_0029: ldc.i4.2
L_002a: ldstr ", our id: "
L_002f: stelem.ref
L_0030: dup
L_0031: ldc.i4.3
L_0032: ldarg.0
L_0033: call Int32 get_SequenceGUID()
L_0038: box System.Int32
L_003d: stelem.ref
L_003e: dup
L_003f: ldc.i4.4
L_0040: ldstr ", our rootid: "
L_0045: stelem.ref
L_0046: dup
L_0047: ldc.i4.5
L_0048: ldarg.0
L_0049: call Int32 get_RootSequenceGUID()
L_004e: box System.Int32
L_0053: stelem.ref
L_0054: call System.String Concat(System.Object[])
L_0059: callvirt Void Log(System.Object)
L_005e: ldloc.0
L_005f: ldfld System.Int32 stackItemUID
L_0064: ldarg.0
L_0065: ldfld BattleTech.AttackStackSequence meleeSequence
L_006a: callvirt Int32 get_SequenceGUID()
L_006f: bne.un Label1
L_0074: ldarg.0
L_0075: call BattleTech.CombatGameState get_Combat()
L_007a: callvirt MessageCenter get_MessageCenter()
L_007f: ldc.i4.s 40
L_0081: ldarg.0
L_0082: ldftn Void OnMeleeComplete(MessageCenterMessage)
L_0088: newobj Void .ctor(Object, IntPtr)
L_008d: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0092: ldarg.0
L_0093: ldfld BattleTech.AbstractActor owningActor
L_0098: callvirt BattleTech.GameRepresentation get_GameRep()
L_009d: ldnull
L_009e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00a3: brfalse Label2
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AbstractActor owningActor
L_00ae: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b3: ldfld UnityEngine.Animator thisAnimator
L_00b8: ldstr "Forward"
L_00bd: ldc.r4 0
L_00c2: callvirt Void SetFloat(System.String, Single)
L_00c7: Label2
L_00c7: ldarg.0
L_00c8: ldc.i4.1
L_00c9: call Void setState(MeleeSequenceState)
L_00ce: Label1
L_00ce: ldarga 1
L_00d4: ldarg.0
L_00d5: call Void Postfix(MessageCenterMessage ByRef, BattleTech.MechMeleeSequence)
L_00da: ldarg.0
L_00db: ldarga 1
L_00e1: call Void Postfix(BattleTech.MechMeleeSequence, MessageCenterMessage ByRef)
L_00e6: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void OnMoveComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.ActorMoveEndMessage
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechMeleeSequence)
L_0006: ldarg.1
L_0007: isinst BattleTech.ActorMoveEndMessage
L_000c: stloc.0
L_000d: ldsfld HBS.Logging.ILog logger
L_0012: ldstr "OnMoveComplete. msg id: "
L_0017: ldloc.0
L_0018: callvirt System.String get_affectedObjectGuid()
L_001d: call System.String Concat(System.String, System.String)
L_0022: callvirt Void Log(System.Object)
L_0027: ldloc.0
L_0028: callvirt System.String get_affectedObjectGuid()
L_002d: ldarg.0
L_002e: call BattleTech.Mech get_OwningMech()
L_0033: callvirt System.String get_GUID()
L_0038: call Boolean op_Equality(System.String, System.String)
L_003d: brfalse Label1
L_0042: ldarg.0
L_0043: call BattleTech.CombatGameState get_Combat()
L_0048: callvirt MessageCenter get_MessageCenter()
L_004d: ldc.i4.s 91
L_004f: ldarg.0
L_0050: ldftn Void OnMoveComplete(MessageCenterMessage)
L_0056: newobj Void .ctor(Object, IntPtr)
L_005b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0060: Label1
L_0060: ret
DONE

### Patch BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.VisibilityLevel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldnull
L_0001: stloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0003: ldarg.0
L_0004: ldloca 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0006: ldarga 1
L_000c: call Boolean Prefix(BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] ByRef, BattleTech.AbstractActor ByRef)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call BattleTech.AbstractActor get_OwningActor()
L_001c: ldarg.1
L_001d: callvirt BattleTech.VisibilityLevel VisibilityToTargetUnit(BattleTech.ICombatant)
L_0022: stloc.0
L_0023: ldloc.0
L_0024: ldc.i4.s 9
L_0026: bge Label1
L_002b: ldloc.0
L_002c: ldc.i4.6
L_002d: beq Label2
L_0032: newobj Void .ctor()
L_0037: br Label14
L_003c: Label1
L_003c: Label2
L_003c: ldarg.0
L_003d: call BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.HexGrid get_HexGrid()
L_0047: ldarg.1
L_0048: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_004d: callvirt System.Collections.Generic.List`1[UnityEngine.Vector3] GetAdjacentPointsOnGrid(UnityEngine.Vector3)
L_0052: ldarg.0
L_0053: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0058: call System.Collections.Generic.List`1[BattleTech.PathNode] GetPathNodesForPoints(System.Collections.Generic.List`1[UnityEngine.Vector3], BattleTech.PathNodeGrid)
L_005d: stloc.1
L_005e: ldloc.1
L_005f: callvirt Int32 get_Count()
L_0064: ldc.i4.1
L_0065: sub
L_0066: stloc.2
L_0067: br Label3
L_006c: Label6
L_006c: ldloc.1
L_006d: ldloc.2
L_006e: callvirt BattleTech.PathNode get_Item(Int32)
L_0073: callvirt UnityEngine.Vector3 get_Position()
L_0078: ldfld System.Single y
L_007d: ldarg.1
L_007e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0083: ldfld System.Single y
L_0088: sub
L_0089: call Single Abs(Single)
L_008e: ldarg.0
L_008f: call BattleTech.CombatGameState get_Combat()
L_0094: callvirt BattleTech.CombatGameConstants get_Constants()
L_0099: callvirt BattleTech.MovementConstants get_MoveConstants()
L_009e: ldfld System.Single MaxMeleeVerticalOffset
L_00a3: bgt Label4
L_00a8: ldarg.0
L_00a9: call BattleTech.PathNodeGrid get_WalkingGrid()
L_00ae: ldloc.1
L_00af: ldloc.2
L_00b0: callvirt BattleTech.PathNode get_Item(Int32)
L_00b5: callvirt UnityEngine.Vector3 get_Position()
L_00ba: ldarg.1
L_00bb: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00c0: callvirt Boolean FindBlockerReciprocal(UnityEngine.Vector3, UnityEngine.Vector3)
L_00c5: brfalse Label5
L_00ca: Label4
L_00ca: ldloc.1
L_00cb: ldloc.2
L_00cc: callvirt Void RemoveAt(Int32)
L_00d1: Label5
L_00d1: ldloc.2
L_00d2: ldc.i4.1
L_00d3: sub
L_00d4: stloc.2
L_00d5: Label3
L_00d5: ldloc.2
L_00d6: ldc.i4.0
L_00d7: bge Label6
L_00dc: ldloc.1
L_00dd: callvirt Int32 get_Count()
L_00e2: ldc.i4.1
L_00e3: ble Label7
L_00e8: ldarg.0
L_00e9: call BattleTech.CombatGameState get_Combat()
L_00ee: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f3: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00f8: ldfld System.Boolean SortMeleeHexesByPathingCost
L_00fd: brfalse Label8
L_0102: ldloc.1
L_0103: ldsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_0108: dup
L_0109: brtrue Label9
L_010e: pop
L_010f: ldsfld BattleTech.Pathing+<>c <>9
L_0114: ldftn Int32 <GetMeleeDestsForTarget>b__68_0(BattleTech.PathNode, BattleTech.PathNode)
L_011a: newobj Void .ctor(Object, IntPtr)
L_011f: dup
L_0120: stsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_0125: Label9
L_0125: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_012a: br Label10
L_012f: Label8
L_012f: ldloc.1
L_0130: ldarg.0
L_0131: ldftn Int32 <GetMeleeDestsForTarget>b__68_1(BattleTech.PathNode, BattleTech.PathNode)
L_0137: newobj Void .ctor(Object, IntPtr)
L_013c: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_0141: Label10
L_0141: ldarg.0
L_0142: call BattleTech.CombatGameState get_Combat()
L_0147: callvirt BattleTech.CombatGameConstants get_Constants()
L_014c: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0151: ldfld System.Int32 NumMeleeDestinationChoices
L_0156: stloc.3
L_0157: ldarg.0
L_0158: call BattleTech.AbstractActor get_OwningActor()
L_015d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0162: ldloc.1
L_0163: ldc.i4.0
L_0164: callvirt BattleTech.PathNode get_Item(Int32)
L_0169: callvirt UnityEngine.Vector3 get_Position()
L_016e: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0173: stloc.s 4 (UnityEngine.Vector3)
L_0175: ldloca.s 4 (UnityEngine.Vector3)
L_0177: ldc.r4 0
L_017c: stfld System.Single y
L_0181: br Label12
L_0186: Label13
L_0186: ldloc.1
L_0187: ldloc.1
L_0188: callvirt Int32 get_Count()
L_018d: ldc.i4.1
L_018e: sub
L_018f: callvirt Void RemoveAt(Int32)
L_0194: Label11
L_0194: Label12
L_0194: ldloc.1
L_0195: callvirt Int32 get_Count()
L_019a: ldloc.3
L_019b: bgt Label13
L_01a0: Label7
L_01a0: ldloc.1
L_01a1: Label14
L_01a1: stloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_01a3: Label0
L_01a3: ldloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_01a5: ret
DONE

### Patch BattleTech.Pathing, Void UpdateMeleePath(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.PathNode
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_000b: stloc.0
L_000c: ldloc.0
L_000d: ldarg.0
L_000e: call BattleTech.AbstractActor get_OwningActor()
L_0013: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0018: pop
L_0019: ldloc.0
L_001a: ldarg.0
L_001b: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_0020: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0025: pop
L_0026: ldarg.0
L_0027: ldarg.0
L_0028: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_002d: ldloc.0
L_002e: ldloca.s 1 (BattleTech.PathNode)
L_0030: ldarg.0
L_0031: ldflda UnityEngine.Vector3 ResultDestination
L_0036: ldarg.0
L_0037: ldflda System.Single ResultAngle
L_003c: call Boolean GetMeleeDestination(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.PathNode ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_0041: pop
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: call BattleTech.PathNodeGrid get_CurrentGrid()
L_0049: ldloc.1
L_004a: ldarg.0
L_004b: call Single get_MaxCost()
L_0050: ldloc.1
L_0051: callvirt UnityEngine.Vector3 get_Position()
L_0056: ldarg.0
L_0057: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_005c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0061: ldarg.0
L_0062: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_0067: ldarg.0
L_0068: ldflda System.Single costLeft
L_006d: ldarg.0
L_006e: ldflda UnityEngine.Vector3 ResultDestination
L_0073: ldarg.0
L_0074: ldflda System.Single ResultAngle
L_0079: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] BuildPathFromEnd(BattleTech.PathNode, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.AbstractActor, Single ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_007e: stfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_0083: ldarg.0
L_0084: call Void Postfix(BattleTech.Pathing)
L_0089: ret
DONE

### Harmony id=io.github.mpstark.NavigationComputer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from NavigationComputer.Main.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\NavigationComputer\NavigationComputer.dll
### At 2019-09-15 05.05.23
### Patch BattleTech.UI.SGNavigationScreen, Void Update()
L_0000: ldarg.0
L_0001: ldfld System.Boolean waitForPointerUp
L_0006: brfalse Label1
L_000b: ldc.i4.0
L_000c: call Boolean GetMouseButtonUp(Int32)
L_0011: brfalse Label2
L_0016: ldarg.0
L_0017: ldfld BattleTech.SimGameState simState
L_001c: callvirt BattleTech.Starmap get_Starmap()
L_0021: callvirt BattleTech.StarmapRenderer get_Screen()
L_0026: ldc.i4.1
L_0027: callvirt Void AllowInput(Boolean)
L_002c: ldarg.0
L_002d: ldc.i4.0
L_002e: stfld System.Boolean waitForPointerUp
L_0033: Label1
L_0033: Label2
L_0033: call Void Postfix()
L_0038: ret
DONE

### Patch BattleTech.UI.SGNavigationScreen, Void Init(BattleTech.SimGameState, BattleTech.UI.SGRoomController_Navigation)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.SimGameState simState
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.SGSystemViewPopulator SystemViewPopulator
L_000d: ldarg.0
L_000e: ldfld BattleTech.SimGameState simState
L_0013: callvirt Void Init(BattleTech.SimGameState)
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.SGShipTransitStatus TransitStatusWidget
L_001e: ldarg.0
L_001f: ldfld BattleTech.SimGameState simState
L_0024: callvirt Void DisplayTransitState(BattleTech.SimGameState)
L_0029: ldarg.0
L_002a: call BattleTech.UI.UIManager get_Instance()
L_002f: ldstr ""
L_0034: ldc.i4.1
L_0035: callvirt BattleTech.UI.SGNavigationTravelPopup GetOrCreatePopupModule[SGNavigationTravelPopup](System.String, Boolean)
L_003a: stfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_003f: ldarg.0
L_0040: ldfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_0045: ldarg.0
L_0046: ldfld BattleTech.SimGameState simState
L_004b: callvirt Void Init(BattleTech.SimGameState)
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_0056: ldc.i4.0
L_0057: callvirt Void set_Visible(Boolean)
L_005c: ldarg.0
L_005d: ldfld BattleTech.UI.HBSButton TravelButton
L_0062: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0067: callvirt Void RemoveAllListeners()
L_006c: ldarg.0
L_006d: ldfld BattleTech.UI.HBSButton TravelButton
L_0072: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0077: ldarg.0
L_0078: ldftn Void OnTravelButtonClicked()
L_007e: newobj Void .ctor(Object, IntPtr)
L_0083: callvirt Void AddListener(UnityEngine.Events.UnityAction)
L_0088: ldarg.0
L_0089: ldfld BattleTech.UI.HBSButton BackButton
L_008e: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0093: callvirt Void RemoveAllListeners()
L_0098: ldarg.0
L_0099: ldfld BattleTech.UI.HBSButton BackButton
L_009e: ldfld UnityEngine.Events.UnityEvent OnClicked
L_00a3: ldarg.0
L_00a4: ldftn Void Dismiss()
L_00aa: newobj Void .ctor(Object, IntPtr)
L_00af: callvirt Void AddListener(UnityEngine.Events.UnityAction)
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.UI.SGNavStarSystemCallout] AllCallouts
L_00ba: ldarg.0
L_00bb: ldftn Void DisposeCallout(BattleTech.UI.SGNavStarSystemCallout)
L_00c1: newobj Void .ctor(Object, IntPtr)
L_00c6: callvirt Void ForEach(System.Action`1[BattleTech.UI.SGNavStarSystemCallout])
L_00cb: ldarg.0
L_00cc: ldfld BattleTech.UI.SGFlashpointButtonController flashpointButtonController
L_00d1: ldarg.1
L_00d2: ldarg.0
L_00d3: ldftn Void FlashpointButtonResponse(BattleTech.Flashpoint)
L_00d9: newobj Void .ctor(Object, IntPtr)
L_00de: ldarg.0
L_00df: ldftn Void FlashpointButtonResponse(BattleTech.Flashpoint)
L_00e5: newobj Void .ctor(Object, IntPtr)
L_00ea: callvirt Void Init(BattleTech.SimGameState, UnityEngine.Events.UnityAction`1[BattleTech.Flashpoint], UnityEngine.Events.UnityAction`1[BattleTech.Flashpoint])
L_00ef: ldarg.0
L_00f0: call Void BuildDifficultyDropdown()
L_00f5: ldarg.0
L_00f6: ldfld BattleTech.UI.SGBiomeDropdown BiomeDropdown
L_00fb: callvirt Void InitBiomeDataLists()
L_0100: ldarg.0
L_0101: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] InfoPanelsToHide
L_0106: callvirt Enumerator GetEnumerator()
L_010b: stloc.0
.try
{
	L_010c: br Label1
	L_0111: Label2
	L_0111: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0113: call UnityEngine.GameObject get_Current()
	L_0118: ldc.i4.0
	L_0119: callvirt Void SetActive(Boolean)
	L_011e: Label1
	L_011e: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0120: call Boolean MoveNext()
	L_0125: brtrue Label2
	L_012a: leave Label3
	L_012f: leave (autogenerated)
} // end try
.finally
{
	L_0134: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0136: constrained. System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject]
	L_013c: callvirt Void Dispose()
	L_0141: endfinally
	L_0142: leave (autogenerated)
} // end handler
L_0143: Label3
L_0143: ldarg.0
L_0144: ldarg 1
L_014a: call Void Postfix(BattleTech.UI.SGNavigationScreen, BattleTech.SimGameState)
L_014f: ret
DONE

### Patch BattleTech.UI.SGNavigationScreen, Boolean HandleEscapeKeypress()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldloca 0 (System.Boolean)
L_0008: call Boolean Prefix(Boolean ByRef)
L_000d: brfalse Label0
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.HBSButton BackButton
L_0019: call Boolean ClickButtonIfVisible(BattleTech.UI.HBSButton)
L_001e: stloc 0 (System.Boolean)
L_001f: Label0
L_001f: ldloc 0 (System.Boolean)
L_0020: ret
DONE

### Patch BattleTech.UI.SGRoomController_Navigation, Void ExitNavScreen()
L_0000: call Void Prefix()
L_0005: ldarg.0
L_0006: ldc.i4.0
L_0007: stfld BattleTech.DropshipMenuType curMenuType
L_000c: ldarg.0
L_000d: ldfld BattleTech.SimGameState simState
L_0012: callvirt BattleTech.SimGameCameraController get_CameraController()
L_0017: ldc.i4.0
L_0018: ldc.i4.0
L_0019: ldc.i4.0
L_001a: callvirt Void TransitionCamera(Int32, Boolean, Boolean)
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.SGNavigationScreen navigationScreen
L_0025: callvirt Void ResetDropdowns()
L_002a: ldarg.0
L_002b: ldfld BattleTech.UI.SGNavigationScreen navigationScreen
L_0030: ldc.i4.0
L_0031: callvirt Void set_Visible(Boolean)
L_0036: ldarg.0
L_0037: ldfld BattleTech.UI.SGRoomManager roomManager
L_003c: ldc.i4.1
L_003d: callvirt Void SetAllUIButOptionsMenuWidgetVisibility(Boolean)
L_0042: ldarg.0
L_0043: ldfld BattleTech.SimGameState simState
L_0048: callvirt BattleTech.Starmap get_Starmap()
L_004d: callvirt BattleTech.StarmapRenderer get_Screen()
L_0052: ldc.i4.0
L_0053: callvirt Void set_StarmapVisible(Boolean)
L_0058: call BattleTech.UI.Tooltips.TooltipManager get_Instance()
L_005d: callvirt Void ClearTooltip()
L_0062: ret
DONE

### Patch BattleTech.SimGameState, Void SetSimRoomState(BattleTech.DropshipLocation)
L_0000: Local var 0: BattleTech.SimGameRoomChangedMessage
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.DropshipLocation)
L_000b: ldarg.0
L_000c: ldarg.1
L_000d: ldc.i4 256
L_0012: beq Label1
L_0017: ldarg.1
L_0018: ldc.i4 128
L_001d: beq Label2
L_0022: ldarg.0
L_0023: call BattleTech.DropshipType get_CurDropship()
L_0028: ldc.i4.0
L_0029: cgt.un
L_002b: br Label3
L_0030: Label1
L_0030: Label2
L_0030: ldc.i4.0
L_0031: Label3
L_0031: call Void SetUIVisible(Boolean)
L_0036: ldarg.0
L_0037: ldarg.1
L_0038: call Void RefreshSimRoomAudio(BattleTech.DropshipLocation)
L_003d: ldarg.0
L_003e: ldarg.1
L_003f: call Void set_CurRoomState(BattleTech.DropshipLocation)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.SGRoomManager RoomManager
L_004a: ldarg.1
L_004b: callvirt Void ChangeRoom(BattleTech.DropshipLocation)
L_0050: ldarg.0
L_0051: call BattleTech.SimGameCameraController get_CameraController()
L_0056: ldarg.1
L_0057: callvirt Void SetScene(BattleTech.DropshipLocation)
L_005c: ldarg.1
L_005d: newobj Void .ctor(DropshipLocation)
L_0062: stloc.0
L_0063: ldarg.0
L_0064: call MessageCenter get_MessageCenter()
L_0069: ldloc.0
L_006a: callvirt Void PublishMessage(MessageCenterMessage)
L_006f: ret
DONE

### Patch BattleTech.Starmap, Boolean SetSelectedSystem(BattleTech.StarSystemNode)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: call Boolean Prefix(BattleTech.Starmap, BattleTech.StarSystemNode)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg.1
L_0019: call Void set_CurSelected(BattleTech.StarSystemNode)
L_001e: ldarg.0
L_001f: ldarg.1
L_0020: call Void FindRouteTo(BattleTech.StarSystemNode)
L_0025: ldc.i4.1
L_0026: stloc 0 (System.Boolean)
L_0027: Label0
L_0027: ldloc 0 (System.Boolean)
L_0028: ret
DONE

### Patch BattleTech.Starmap, BattleTech.StarSystemNode GetLocationByUV(UnityEngine.Vector2, UnityEngine.Rect, Single)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[BattleTech.StarSystemNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.StarSystemNode
L_0000: Local var 2: UnityEngine.Vector2
L_0000: Local var 3: UnityEngine.Vector2
L_0000: Local var 4: BattleTech.StarSystemNode
L_0000: Local var 5: BattleTech.StarSystemNode
L_0000: ldnull
L_0001: stloc 5 (BattleTech.StarSystemNode)
L_0003: ldarg.0
L_0004: ldfld System.Collections.Generic.List`1[BattleTech.StarSystemNode] planetList
L_0009: callvirt Enumerator GetEnumerator()
L_000e: stloc.0
.try
{
	L_000f: br Label1
	L_0014: Label4
	L_0014: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_0016: call BattleTech.StarSystemNode get_Current()
	L_001b: stloc.1
	L_001c: ldloc.1
	L_001d: callvirt UnityEngine.Vector2 get_NormalizedPosition()
	L_0022: stloc.2
	L_0023: ldloca.s 2 (UnityEngine.Vector2)
	L_0025: ldloc.2
	L_0026: ldfld System.Single x
	L_002b: ldc.r4 2
	L_0030: mul
	L_0031: ldc.r4 1
	L_0036: sub
	L_0037: stfld System.Single x
	L_003c: ldloca.s 2 (UnityEngine.Vector2)
	L_003e: ldloc.2
	L_003f: ldfld System.Single y
	L_0044: ldc.r4 2
	L_0049: mul
	L_004a: ldc.r4 1
	L_004f: sub
	L_0050: stfld System.Single y
	L_0055: ldloc.2
	L_0056: ldarg.3
	L_0057: call UnityEngine.Vector2 op_Multiply(UnityEngine.Vector2, Single)
	L_005c: stloc.3
	L_005d: ldloca.s 3 (UnityEngine.Vector2)
	L_005f: ldloc.3
	L_0060: ldfld System.Single x
	L_0065: ldc.r4 1
	L_006a: add
	L_006b: ldc.r4 0.5
	L_0070: mul
	L_0071: stfld System.Single x
	L_0076: ldloca.s 3 (UnityEngine.Vector2)
	L_0078: ldloc.3
	L_0079: ldfld System.Single y
	L_007e: ldc.r4 1
	L_0083: add
	L_0084: ldc.r4 0.5
	L_0089: mul
	L_008a: stfld System.Single y
	L_008f: ldarga.s 2
	L_0091: ldloc.3
	L_0092: call Boolean Contains(UnityEngine.Vector2)
	L_0097: brfalse Label2
	L_009c: ldloc.1
	L_009d: stloc.s 4 (BattleTech.StarSystemNode)
	L_009f: leave Label3
	L_00a4: Label1
	L_00a4: Label2
	L_00a4: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_00a6: call Boolean MoveNext()
	L_00ab: brtrue Label4
	L_00b0: leave Label5
	L_00b5: leave (autogenerated)
} // end try
.finally
{
	L_00ba: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_00bc: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode]
	L_00c2: callvirt Void Dispose()
	L_00c7: endfinally
	L_00c8: leave (autogenerated)
} // end handler
L_00c9: Label5
L_00c9: ldnull
L_00ca: br Label7
L_00cf: Label3
L_00cf: ldloc.s 4 (BattleTech.StarSystemNode)
L_00d1: Label7
L_00d1: stloc 5 (BattleTech.StarSystemNode)
L_00d3: ldarg.0
L_00d4: ldloc 5 (BattleTech.StarSystemNode)
L_00d6: call Void Postfix(BattleTech.Starmap, BattleTech.StarSystemNode)
L_00db: ldloc 5 (BattleTech.StarSystemNode)
L_00dd: ret
DONE

### Patch BattleTech.StarmapRenderer, Void SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer)
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: ldfld BattleTech.StarmapSystemRenderer currSystem
L_000c: call Boolean Prefix(BattleTech.StarmapSystemRenderer, BattleTech.StarmapSystemRenderer)
L_0011: brfalse Label0
L_0016: ldarg.1
L_0017: ldarg.0
L_0018: ldfld BattleTech.StarmapSystemRenderer currSystem
L_001d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0022: brfalse Label1
L_0027: ldarg.0
L_0028: ldfld BattleTech.StarmapSystemRenderer currSystem
L_002d: ldnull
L_002e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0033: brfalse Label2
L_0038: ldarg.0
L_0039: ldfld BattleTech.StarmapSystemRenderer currSystem
L_003e: callvirt Void Deselected()
L_0043: ldarg.0
L_0044: ldnull
L_0045: stfld BattleTech.StarmapSystemRenderer currSystem
L_004a: Label2
L_004a: ldarg.1
L_004b: ldnull
L_004c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0051: brfalse Label3
L_0056: ldarg.0
L_0057: ldarg.1
L_0058: stfld BattleTech.StarmapSystemRenderer currSystem
L_005d: ldarg.0
L_005e: ldfld BattleTech.StarmapSystemRenderer currSystem
L_0063: callvirt Void Selected()
L_0068: ldarg.0
L_0069: ldfld BattleTech.Starmap starmap
L_006e: ldarg.0
L_006f: ldfld BattleTech.StarmapSystemRenderer currSystem
L_0074: ldfld BattleTech.StarSystemNode system
L_0079: callvirt BattleTech.StarSystem get_System()
L_007e: callvirt Boolean SetSelectedSystem(BattleTech.StarSystem)
L_0083: pop
L_0084: br Label6
L_0089: Label3
L_0089: ldarg.0
L_008a: call Void ClearPlannedPath()
L_008f: ldarg.0
L_0090: ldfld BattleTech.Starmap starmap
L_0095: ldfld BattleTech.StarSystemEvent StarSystemRouted
L_009a: ldnull
L_009b: callvirt Void Invoke(BattleTech.StarSystem)
L_00a0: br Label7
L_00a5: Label1
L_00a5: ldarg.1
L_00a6: ldnull
L_00a7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ac: brfalse Label4
L_00b1: ldarg.0
L_00b2: ldfld BattleTech.Starmap starmap
L_00b7: callvirt BattleTech.StarSystemNode get_CurSelected()
L_00bc: brfalse Label5
L_00c1: ldarg.0
L_00c2: ldarg.0
L_00c3: ldfld BattleTech.Starmap starmap
L_00c8: callvirt BattleTech.StarSystemNode get_CurSelected()
L_00cd: call BattleTech.StarmapSystemRenderer GetSystemRenderer(BattleTech.StarSystemNode)
L_00d2: callvirt Void Deselected()
L_00d7: ldarg.0
L_00d8: call Void ClearPlannedPath()
L_00dd: ldarg.0
L_00de: ldfld BattleTech.Starmap starmap
L_00e3: ldfld BattleTech.StarSystemEvent StarSystemRouted
L_00e8: ldnull
L_00e9: callvirt Void Invoke(BattleTech.StarSystem)
L_00ee: Label4
L_00ee: Label5
L_00ee: Label6
L_00ee: Label7
L_00ee: Label0
L_00ee: ret
DONE

### Harmony id=Glucose.OnePointArmorStep, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from OnePointArmorStep.OnePointArmorStep.Init(), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\OnePointArmorStep\OnePointArmorStep.dll
### At 2019-09-15 05.05.23
### Patch BattleTech.UI.MechLabLocationWidget, Void OnFrontArmorAdd()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.0
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: ldc.i4.1
L_0031: call Void ModifyArmor(Boolean, Single, Boolean)
L_0036: br Label2
L_003b: Label1
L_003b: ldarg.0
L_003c: ldc.i4.0
L_003d: ldc.i4.5
L_003e: ldloc.0
L_003f: sub
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnFrontArmorSubtract()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.0
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: neg
L_0031: ldc.i4.1
L_0032: call Void ModifyArmor(Boolean, Single, Boolean)
L_0037: br Label2
L_003c: Label1
L_003c: ldarg.0
L_003d: ldc.i4.0
L_003e: ldloc.0
L_003f: neg
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnRearArmorAdd()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentRearArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.1
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: ldc.i4.1
L_0031: call Void ModifyArmor(Boolean, Single, Boolean)
L_0036: br Label2
L_003b: Label1
L_003b: ldarg.0
L_003c: ldc.i4.1
L_003d: ldc.i4.5
L_003e: ldloc.0
L_003f: sub
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnRearArmorSubtract()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentRearArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.1
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: neg
L_0031: ldc.i4.1
L_0032: call Void ModifyArmor(Boolean, Single, Boolean)
L_0037: br Label2
L_003c: Label1
L_003c: ldarg.0
L_003d: ldc.i4.1
L_003e: ldloc.0
L_003f: neg
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Harmony id=com.BattleTech.PanicSystem, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from PanicSystem.PanicSystem.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\PanicSystem\PanicSystem.dll
### At 2019-09-15 05.05.23
### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(BattleTech.FloatieMessage)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_000d: call Boolean Prefix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage, System.Collections.Generic.Queue`1[BattleTech.FloatieMessage])
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.UI.CombatHUD get_HUD()
L_001d: callvirt Boolean get_PilotInjuriesSuppressed()
L_0022: brfalse Label1
L_0027: ldarg.1
L_0028: ldfld BattleTech.FloatieMessage+MessageNature nature
L_002d: ldc.i4.s 9
L_002f: bne.un Label2
L_0034: br Label3
L_0039: Label1
L_0039: Label2
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_003f: ldarg.1
L_0040: callvirt Void Enqueue(BattleTech.FloatieMessage)
L_0045: Label3
L_0045: Label0
L_0045: ldarg.0
L_0046: ldarg 1
L_004c: call Void Postfix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage)
L_0051: ret
DONE

### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(Localize.Text, MessageNature)
L_0000: Local var 0: UnityEngine.Color
L_0000: Local var 1: SVGImporter.SVGAsset
L_0000: Local var 2: BattleTech.UI.CombatHUDStatusStackItem
L_0000: ldarg.1
L_0001: call Boolean IsNullOrEmpty(Localize.Text)
L_0006: brfalse Label1
L_000b: br Label6
L_0010: Label1
L_0010: ldarg.0
L_0011: call Single get_time()
L_0016: stfld System.Single timeLastFloatieShown
L_001b: ldarg.0
L_001c: ldarg.2
L_001d: call UnityEngine.Color GetFloatieColor(MessageNature)
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldarg.2
L_0025: call SVGImporter.SVGAsset GetFloatieIcon(MessageNature)
L_002a: stloc.1
L_002b: ldarg.0
L_002c: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_0031: ldarg.0
L_0032: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_0037: callvirt Int32 get_Count()
L_003c: ldc.i4.1
L_003d: sub
L_003e: callvirt BattleTech.UI.CombatHUDStatusStackItem get_Item(Int32)
L_0043: stloc.2
L_0044: ldarg.0
L_0045: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_004a: ldloc.2
L_004b: callvirt Boolean Remove(BattleTech.UI.CombatHUDStatusStackItem)
L_0050: pop
L_0051: ldloc.2
L_0052: callvirt UnityEngine.GameObject get_gameObject()
L_0057: callvirt Boolean get_activeSelf()
L_005c: brtrue Label2
L_0061: ldloc.2
L_0062: callvirt UnityEngine.GameObject get_gameObject()
L_0067: ldc.i4.1
L_0068: callvirt Void SetActive(Boolean)
L_006d: Label2
L_006d: ldarg.2
L_006e: ldc.i4.s 16
L_0070: bne.un Label3
L_0075: ldstr "LOST: {0}"
L_007a: ldc.i4.1
L_007b: newarr System.Object
L_0080: dup
L_0081: ldc.i4.0
L_0082: ldarg.1
L_0083: stelem.ref
L_0084: newobj Void .ctor(String, Object[])
L_0089: starg.s 1
L_008b: br Label4
L_0090: Label3
L_0090: ldarg.2
L_0091: ldc.i4.s 17
L_0093: bne.un Label5
L_0098: ldstr "SUPPRESSED: {0}"
L_009d: ldc.i4.1
L_009e: newarr System.Object
L_00a3: dup
L_00a4: ldc.i4.0
L_00a5: ldarg.1
L_00a6: stelem.ref
L_00a7: newobj Void .ctor(String, Object[])
L_00ac: starg.s 1
L_00ae: Label4
L_00ae: Label5
L_00ae: ldloc.2
L_00af: ldloc.1
L_00b0: ldarg.1
L_00b1: ldloc.0
L_00b2: callvirt Void ShowIcon(SVGImporter.SVGAsset, Localize.Text, UnityEngine.Color)
L_00b7: ldloc.2
L_00b8: ldc.i4.0
L_00b9: ldc.i4.0
L_00ba: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00bf: pop
L_00c0: ldarg.0
L_00c1: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_00c6: ldc.i4.0
L_00c7: ldloc.2
L_00c8: callvirt Void Insert(Int32, BattleTech.UI.CombatHUDStatusStackItem)
L_00cd: ldarg.0
L_00ce: call BattleTech.UI.CombatHUD get_HUD()
L_00d3: ldc.i4 202
L_00d8: callvirt Void PlayAudioEvent(AudioEventList_ui)
L_00dd: Label6
L_00dd: ldarg.0
L_00de: ldarg 1
L_00e4: call Void Postfix(BattleTech.UI.CombatHUDFloatieStack, Localize.Text)
L_00e9: ret
DONE

### Patch BattleTech.UI.AAR_SalvageScreen, Void OnCompleted()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_Initialized(Boolean)
L_0007: ldarg.0
L_0008: ldc.i4.0
L_0009: call Void Pool(Boolean)
L_000e: call BattleTech.UnityGameInstance get_Instance()
L_0013: callvirt BattleTech.GameInstance get_Game()
L_0018: dup
L_0019: callvirt BattleTech.SimGameState get_Simulation()
L_001e: ldarg.0
L_001f: ldfld BattleTech.Contract contract
L_0024: callvirt Void OnCompleteContract(BattleTech.Contract)
L_0029: dup
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: brfalse Label1
L_0034: call BattleTech.UnityGameInstance get_Instance()
L_0039: callvirt BattleTech.GameInstance get_Game()
L_003e: callvirt Void ClearCombat()
L_0043: Label1
L_0043: ldarg.0
L_0044: call Void LoadingCurtainForSimGameRestart()
L_0049: callvirt BattleTech.SimGameState get_Simulation()
L_004e: callvirt Void AttachUX()
L_0053: ldarg.0
L_0054: ldfld BattleTech.UI.MissionResults missionResultParent
L_0059: ldc.i4.0
L_005a: callvirt Void Pool(Boolean)
L_005f: ldarg.0
L_0060: call Void PoolSalvageControllers()
L_0065: call Void Postfix()
L_006a: ret
DONE

### Patch BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.Effect, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.Effect
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldnull
L_0001: stloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.AbstractActor)
L_0009: ldarg.0
L_000a: ldarg.0
L_000b: callvirt Int32 get_BaseInitiative()
L_0010: call Void set_Initiative(Int32)
L_0015: ldarg.0
L_0016: ldc.i4.0
L_0017: call Void set_HasActivatedThisRound(Boolean)
L_001c: ldarg.0
L_001d: ldc.i4.0
L_001e: call Void set_HasBegunActivation(Boolean)
L_0023: ldarg.0
L_0024: ldc.i4.0
L_0025: call Void set_HasMovedThisRound(Boolean)
L_002a: ldarg.0
L_002b: ldc.i4.0
L_002c: call Void set_HasFiredThisRound(Boolean)
L_0031: ldarg.0
L_0032: ldc.i4.0
L_0033: call Void set_StoodUpThisRound(Boolean)
L_0038: ldarg.0
L_0039: ldarg.0
L_003a: ldfld UnityEngine.Vector3 currentPosition
L_003f: stfld UnityEngine.Vector3 previousPosition
L_0044: ldarg.0
L_0045: ldc.i4.0
L_0046: call Void set_AutoBrace(Boolean)
L_004b: ldarg.0
L_004c: ldc.i4.0
L_004d: call Void set_IsCompletingActivation(Boolean)
L_0052: ldarg.0
L_0053: call Boolean get_IsCoolantVenting()
L_0058: brfalse Label1
L_005d: ldarg.0
L_005e: call Void StartCoolantVentCooldown()
L_0063: Label1
L_0063: ldc.i4.0
L_0064: stloc.0
L_0065: br Label2
L_006a: Label3
L_006a: ldarg.0
L_006b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0070: ldloc.0
L_0071: callvirt BattleTech.Weapon get_Item(Int32)
L_0076: callvirt Void OnNewRound()
L_007b: ldloc.0
L_007c: ldc.i4.1
L_007d: add
L_007e: stloc.0
L_007f: Label2
L_007f: ldloc.0
L_0080: ldarg.0
L_0081: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0086: callvirt Int32 get_Count()
L_008b: blt Label3
L_0090: ldarg.0
L_0091: callvirt Boolean get_IsOperational()
L_0096: brfalse Label4
L_009b: ldarg.0
L_009c: call BattleTech.CombatGameState get_Combat()
L_00a1: callvirt BattleTech.EffectManager get_EffectManager()
L_00a6: ldarg.0
L_00a7: callvirt System.Collections.Generic.List`1[BattleTech.Effect] GetAllEffectsTargeting(System.Object)
L_00ac: ldsfld System.Predicate`1[BattleTech.Effect] <>9__641_0
L_00b1: dup
L_00b2: brtrue Label5
L_00b7: pop
L_00b8: ldsfld BattleTech.AbstractActor+<>c <>9
L_00bd: ldftn Boolean <OnNewRound>b__641_0(BattleTech.Effect)
L_00c3: newobj Void .ctor(Object, IntPtr)
L_00c8: dup
L_00c9: stsfld System.Predicate`1[BattleTech.Effect] <>9__641_0
L_00ce: Label5
L_00ce: callvirt System.Collections.Generic.List`1[BattleTech.Effect] FindAll(System.Predicate`1[BattleTech.Effect])
L_00d3: callvirt Enumerator GetEnumerator()
L_00d8: stloc.1
.try
{
	L_00d9: br Label6
	L_00de: Label8
	L_00de: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_00e0: call BattleTech.Effect get_Current()
	L_00e5: stloc.2
	L_00e6: ldarg.0
	L_00e7: call BattleTech.CombatGameState get_Combat()
	L_00ec: ldloc.2
	L_00ed: ldfld System.String creatorID
	L_00f2: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
	L_00f7: stloc.3
	L_00f8: ldloc.3
	L_00f9: brfalse Label7
	L_00fe: ldloc.3
	L_00ff: callvirt Boolean get_IsGhosted()
	L_0104: pop
	L_0105: ldloc.3
	L_0106: ldarg.0
	L_0107: call System.String get_GUID()
	L_010c: callvirt Void AddGhostSpotter(System.String)
	L_0111: Label6
	L_0111: Label7
	L_0111: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_0113: call Boolean MoveNext()
	L_0118: brtrue Label8
	L_011d: leave Label9
	L_0122: leave (autogenerated)
} // end try
.finally
{
	L_0127: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_0129: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Effect]
	L_012f: callvirt Void Dispose()
	L_0134: endfinally
	L_0135: leave (autogenerated)
} // end handler
L_0136: Label4
L_0136: Label9
L_0136: newobj Void .ctor()
L_013b: stloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_013d: ldloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_013f: ret
DONE

### Patch BattleTech.AttackStackSequence, Void OnAttackBegin(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceBeginMessage
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AttackStackSequence)
L_0006: ldarg.1
L_0007: isinst BattleTech.AttackSequenceBeginMessage
L_000c: stloc.0
L_000d: ldarg.0
L_000e: call BattleTech.CombatGameState get_Combat()
L_0013: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0018: ldloc.0
L_0019: ldfld System.Int32 sequenceId
L_001e: callvirt AttackSequence GetAttackSequence(Int32)
L_0023: stloc.1
L_0024: ldloc.1
L_0025: brtrue Label1
L_002a: ldsfld HBS.Logging.ILog attackLogger
L_002f: ldstr "Null sequence on attack begin!!!"
L_0034: callvirt Void Log(System.Object)
L_0039: br Label8
L_003e: Label1
L_003e: ldloc.1
L_003f: ldfld System.Int32 stackItemUID
L_0044: ldarg.0
L_0045: call Int32 get_SequenceGUID()
L_004a: bne.un Label2
L_004f: ldarg.0
L_0050: call BattleTech.CombatGameState get_Combat()
L_0055: callvirt MessageCenter get_MessageCenter()
L_005a: ldc.i4.s 40
L_005c: ldarg.0
L_005d: ldftn Void OnAttackComplete(MessageCenterMessage)
L_0063: newobj Void .ctor(Object, IntPtr)
L_0068: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_006d: ldarg.0
L_006e: call BattleTech.CombatGameState get_Combat()
L_0073: callvirt MessageCenter get_MessageCenter()
L_0078: ldc.i4.s 82
L_007a: ldarg.0
L_007b: ldftn Void OnActorDestroyed(MessageCenterMessage)
L_0081: newobj Void .ctor(Object, IntPtr)
L_0086: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_008b: ldarg.0
L_008c: ldfld System.Boolean hasOwningSequence
L_0091: brtrue Label3
L_0096: call BattleTech.Save.CloudUserSettings get_CloudSettings()
L_009b: ldfld System.Boolean useAttackCam
L_00a0: brfalse Label4
L_00a5: ldarg.0
L_00a6: call BattleTech.CameraControl get_Instance()
L_00ab: ldloc.1
L_00ac: ldfld BattleTech.AbstractActor attacker
L_00b1: ldloc.1
L_00b2: ldfld BattleTech.ICombatant chosenTarget
L_00b7: ldloc.1
L_00b8: callvirt Int32 get_attackTotalShotsFired()
L_00bd: ldloc.1
L_00be: callvirt Int32 get_attackTotalShotsHit()
L_00c3: ldarg.0
L_00c4: ldfld System.Boolean hasOwningSequence
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00cf: ldc.i4.0
L_00d0: callvirt AttackSequence get_Item(Int32)
L_00d5: ldfld System.Int32 numTargets
L_00da: ldc.i4.1
L_00db: cgt
L_00dd: callvirt BattleTech.CameraSequence ShowAttackCam(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Int32, Boolean, Boolean)
L_00e2: ldarg.0
L_00e3: call Int32 get_MessageIndex()
L_00e8: call Void SetCamera(BattleTech.CameraSequence, Int32)
L_00ed: call BattleTech.CameraControl get_Instance()
L_00f2: callvirt Void ClearTargets()
L_00f7: Label3
L_00f7: Label4
L_00f7: ldloc.1
L_00f8: ldfld System.Int32 calledShotLocation
L_00fd: brfalse Label5
L_0102: ldloc.1
L_0103: ldfld BattleTech.ICombatant chosenTarget
L_0108: callvirt BattleTech.UnitType get_UnitType()
L_010d: ldc.i4.1
L_010e: bne.un Label6
L_0113: ldarg.0
L_0114: call BattleTech.CombatGameState get_Combat()
L_0119: callvirt MessageCenter get_MessageCenter()
L_011e: ldloc.1
L_011f: ldfld BattleTech.ICombatant chosenTarget
L_0124: callvirt System.String get_GUID()
L_0129: ldloc.1
L_012a: ldfld BattleTech.ICombatant chosenTarget
L_012f: callvirt System.String get_GUID()
L_0134: ldstr "CALLED SHOT: {0}"
L_0139: ldc.i4.1
L_013a: newarr System.Object
L_013f: dup
L_0140: ldc.i4.0
L_0141: ldloc.1
L_0142: ldfld System.Int32 calledShotLocation
L_0147: call Localize.Text GetLongArmorLocation(BattleTech.ArmorLocation)
L_014c: stelem.ref
L_014d: call System.String T(System.String, System.Object[])
L_0152: ldc.i4.s 10
L_0154: newobj Void .ctor(String, String, String, MessageNature)
L_0159: callvirt Void PublishMessage(MessageCenterMessage)
L_015e: br Label9
L_0163: Label6
L_0163: ldloc.1
L_0164: ldfld BattleTech.ICombatant chosenTarget
L_0169: callvirt BattleTech.UnitType get_UnitType()
L_016e: ldc.i4.2
L_016f: bne.un Label7
L_0174: ldarg.0
L_0175: call BattleTech.CombatGameState get_Combat()
L_017a: callvirt MessageCenter get_MessageCenter()
L_017f: ldloc.1
L_0180: ldfld BattleTech.ICombatant chosenTarget
L_0185: callvirt System.String get_GUID()
L_018a: ldloc.1
L_018b: ldfld BattleTech.ICombatant chosenTarget
L_0190: callvirt System.String get_GUID()
L_0195: ldstr "CALLED SHOT: {0}"
L_019a: ldc.i4.1
L_019b: newarr System.Object
L_01a0: dup
L_01a1: ldc.i4.0
L_01a2: ldloc.1
L_01a3: ldfld System.Int32 calledShotLocation
L_01a8: call System.String GetLongChassisLocation(BattleTech.VehicleChassisLocations)
L_01ad: stelem.ref
L_01ae: call System.String T(System.String, System.Object[])
L_01b3: ldc.i4.s 10
L_01b5: newobj Void .ctor(String, String, String, MessageNature)
L_01ba: callvirt Void PublishMessage(MessageCenterMessage)
L_01bf: Label2
L_01bf: Label5
L_01bf: Label7
L_01bf: Label8
L_01bf: Label9
L_01bf: ret
DONE

### Patch BattleTech.AttackStackSequence, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.AttackStackSequence, MessageCenterMessage)
L_000c: ldarg.1
L_000d: isinst BattleTech.AttackCompleteMessage
L_0012: ldfld System.Int32 stackItemUID
L_0017: ldarg.0
L_0018: call Int32 get_SequenceGUID()
L_001d: bne.un Label1
L_0022: ldarg.0
L_0023: ldfld System.Boolean willConsumeFiring
L_0028: brfalse Label2
L_002d: ldc.i4.0
L_002e: stloc.0
L_002f: br Label3
L_0034: Label7
L_0034: ldarg.0
L_0035: call BattleTech.CombatGameState get_Combat()
L_003a: ldarg.0
L_003b: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0040: ldc.i4.0
L_0041: callvirt AttackSequence get_Item(Int32)
L_0046: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_004b: ldloc.0
L_004c: callvirt System.String get_Item(Int32)
L_0051: ldc.i4.0
L_0052: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0057: stloc.1
L_0058: ldloc.1
L_0059: brfalse Label4
L_005e: ldloc.1
L_005f: ldarg.0
L_0060: ldfld BattleTech.AbstractActor owningActor
L_0065: callvirt System.String get_GUID()
L_006a: callvirt Void HandleDeath(System.String)
L_006f: ldloc.1
L_0070: callvirt Boolean get_IsDead()
L_0075: brtrue Label5
L_007a: ldloc.1
L_007b: isinst BattleTech.AbstractActor
L_0080: stloc.2
L_0081: ldloc.2
L_0082: brfalse Label6
L_0087: ldloc.2
L_0088: callvirt Boolean CheckForInstability()
L_008d: pop
L_008e: ldloc.2
L_008f: ldarg.0
L_0090: call Int32 get_RootSequenceGUID()
L_0095: ldarg.0
L_0096: ldfld BattleTech.AbstractActor owningActor
L_009b: callvirt System.String get_GUID()
L_00a0: call UnityEngine.Vector2 get_one()
L_00a5: ldnull
L_00a6: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_00ab: Label4
L_00ab: Label5
L_00ab: Label6
L_00ab: ldloc.0
L_00ac: ldc.i4.1
L_00ad: add
L_00ae: stloc.0
L_00af: Label3
L_00af: ldloc.0
L_00b0: ldarg.0
L_00b1: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00b6: ldc.i4.0
L_00b7: callvirt AttackSequence get_Item(Int32)
L_00bc: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00c1: callvirt Int32 get_Count()
L_00c6: blt Label7
L_00cb: Label2
L_00cb: ldarg.0
L_00cc: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00d1: ldc.i4.0
L_00d2: callvirt Void RemoveAt(Int32)
L_00d7: ldsfld HBS.Logging.ILog attackLogger
L_00dc: ldc.i4.4
L_00dd: newarr System.Object
L_00e2: dup
L_00e3: ldc.i4.0
L_00e4: ldstr "OnAttackComplete for stackSequence "
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.1
L_00ec: ldarg.0
L_00ed: call Int32 get_SequenceGUID()
L_00f2: box System.Int32
L_00f7: stelem.ref
L_00f8: dup
L_00f9: ldc.i4.2
L_00fa: ldstr ", remaining sequences: "
L_00ff: stelem.ref
L_0100: dup
L_0101: ldc.i4.3
L_0102: ldarg.0
L_0103: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0108: callvirt Int32 get_Count()
L_010d: box System.Int32
L_0112: stelem.ref
L_0113: call System.String Concat(System.Object[])
L_0118: callvirt Void Log(System.Object)
L_011d: ldarg.0
L_011e: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0123: callvirt Int32 get_Count()
L_0128: brtrue Label8
L_012d: ldarg.0
L_012e: ldc.i4.1
L_012f: call Void set_OrdersAreComplete(Boolean)
L_0134: ldarg.0
L_0135: call BattleTech.CombatGameState get_Combat()
L_013a: callvirt MessageCenter get_MessageCenter()
L_013f: ldc.i4.s 40
L_0141: ldarg.0
L_0142: ldftn Void OnAttackComplete(MessageCenterMessage)
L_0148: newobj Void .ctor(Object, IntPtr)
L_014d: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0152: br Label9
L_0157: Label8
L_0157: ldarg.0
L_0158: ldc.i4.1
L_0159: stfld BattleTech.AttackStackSequence+ASS_State state
L_015e: Label1
L_015e: Label9
L_015e: ret
DONE

### Patch BattleTech.Save.GameInstanceSave, Void .ctor(GameInstance, SaveReason)
L_0000: Local var 0: BattleTech.Data.ContentPackIndex
L_0000: Local var 1: System.DateTime
L_0000: ldarg.0
L_0001: ldc.i4.1
L_0002: stfld System.Int32 version
L_0007: ldarg.0
L_0008: ldstr "the one and only"
L_000d: newobj Void .ctor(String)
L_0012: stfld BattleTech.Save.Test.SerializableReferenceContainer references
L_0017: ldarg.0
L_0018: call Void .ctor()
L_001d: ldarg.1
L_001e: callvirt BattleTech.SimGameState get_Simulation()
L_0023: brfalse Label1
L_0028: ldarg.0
L_0029: ldarg.1
L_002a: callvirt BattleTech.SimGameState get_Simulation()
L_002f: newobj Void .ctor(SimGameState)
L_0034: stfld BattleTech.Save.SimGameSave simGameSave
L_0039: Label1
L_0039: ldarg.0
L_003a: ldarg.1
L_003b: callvirt BattleTech.CombatGameState get_Combat()
L_0040: stfld BattleTech.CombatGameState combatGameState
L_0045: ldarg.0
L_0046: ldarg.2
L_0047: stfld BattleTech.Save.SaveGameStructure.SaveReason saveReason
L_004c: ldarg.0
L_004d: ldarg.2
L_004e: ldc.i4.s 15
L_0050: ceq
L_0052: stfld System.Boolean campaignResult
L_0057: ldarg.0
L_0058: call System.DateTime get_UtcNow()
L_005d: call Void set_SaveTime(System.DateTime)
L_0062: ldarg.0
L_0063: ldarg.0
L_0064: call System.DateTime get_SaveTime()
L_0069: stloc.1
L_006a: ldloca.s 1 (System.DateTime)
L_006c: call Int64 get_Ticks()
L_0071: stfld System.Int64 timestamp
L_0076: ldarg.0
L_0077: call Boolean get_HasSimData()
L_007c: brfalse Label2
L_0081: ldarg.0
L_0082: ldarg.0
L_0083: ldfld BattleTech.Save.SimGameSave simGameSave
L_0088: callvirt System.String get_InstanceGUID()
L_008d: stfld System.String instanceGUID
L_0092: br Label3
L_0097: Label2
L_0097: ldarg.0
L_0098: call Boolean get_HasCombatData()
L_009d: brfalse Label4
L_00a2: ldarg.0
L_00a3: ldstr "GENERIC_SKIRMISH_SAVE_GUID!"
L_00a8: stfld System.String instanceGUID
L_00ad: br Label5
L_00b2: Label4
L_00b2: ldstr "unexpected save data."
L_00b7: newobj Void .ctor(String)
L_00bc: throw
L_00bd: Label3
L_00bd: Label5
L_00bd: ldarg.1
L_00be: callvirt BattleTech.Data.DataManager get_DataManager()
L_00c3: callvirt BattleTech.Data.ContentPackIndex get_ContentPackIndex()
L_00c8: stloc.0
L_00c9: ldarg.0
L_00ca: ldloc.0
L_00cb: callvirt System.Collections.Generic.List`1[System.String] GetOwnedContentPacks()
L_00d0: stfld System.Collections.Generic.List`1[System.String] ownedContentPacks
L_00d5: ldarg.0
L_00d6: call System.String get_BuildNumber()
L_00db: call Void set_BuildNumber(System.String)
L_00e0: ldarg.0
L_00e1: call System.String get_ProductVersion()
L_00e6: call Void set_ProductVersion(System.String)
L_00eb: ldarg.0
L_00ec: call Void Postfix(BattleTech.Save.GameInstanceSave)
L_00f1: ret
DONE

### Patch BattleTech.LanceSpawnerGameLogic, Void OnTriggerSpawn(MessageCenterMessage)
L_0000: Local var 0: BattleTech.TriggerSpawn
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.Team
L_0000: Local var 3: BattleTech.Team
L_0000: ldarg.1
L_0001: isinst BattleTech.TriggerSpawn
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: callvirt System.String get_affectedObjectGuid()
L_0013: ldarg.0
L_0014: ldfld System.String encounterObjectGuid
L_0019: call Boolean op_Equality(System.String, System.String)
L_001e: brfalse Label2
L_0023: ldarg.0
L_0024: call Boolean HasUnitToSpawn()
L_0029: brfalse Label3
L_002e: ldc.i4.0
L_002f: stloc.1
L_0030: ldarg.0
L_0031: ldc.i4.1
L_0032: stfld System.Boolean isSpawning
L_0037: ldarg.0
L_0038: ldfld BattleTech.SpawnUnitMethodType spawnMethod
L_003d: ldc.i4.1
L_003e: bne.un Label4
L_0043: ldc.i4.1
L_0044: stloc.1
L_0045: ldarg.0
L_0046: ldarg.0
L_0047: call BattleTech.CombatGameState get_Combat()
L_004c: ldarg.0
L_004d: call UnityEngine.Transform get_transform()
L_0052: ldarg.0
L_0053: ldfld System.String encounterObjectGuid
L_0058: ldarg.0
L_0059: ldfld System.String encounterObjectGuid
L_005e: call System.String GetDropshipGuid(System.String)
L_0063: ldc.i4.0
L_0064: ldarg.0
L_0065: ldfld System.String teamDefinitionGuid
L_006a: ldarg.0
L_006b: ldfld BattleTech.DropshipAnimationStyle dropshipAnimationStyle
L_0070: call BattleTech.DropshipGameLogic SpawnDropshipForFlyby(BattleTech.CombatGameState, UnityEngine.Transform, System.String, System.String, Boolean, System.String, BattleTech.DropshipAnimationStyle)
L_0075: call Void set_LeopardInstance(BattleTech.DropshipGameLogic)
L_007a: br Label5
L_007f: Label4
L_007f: ldarg.0
L_0080: ldfld BattleTech.SpawnUnitMethodType spawnMethod
L_0085: ldc.i4.2
L_0086: bne.un Label6
L_008b: ldc.i4.1
L_008c: stloc.1
L_008d: Label5
L_008d: Label6
L_008d: ldarg.0
L_008e: ldloc.1
L_008f: callvirt Void SpawnUnits(Boolean)
L_0094: ldarg.0
L_0095: ldfld System.Boolean encounterInitialized
L_009a: brfalse Label7
L_009f: ldarg.0
L_00a0: call BattleTech.CombatGameState get_Combat()
L_00a5: callvirt BattleTech.TurnDirector get_TurnDirector()
L_00aa: ldarg.0
L_00ab: ldfld System.String teamDefinitionGuid
L_00b0: callvirt BattleTech.TurnActor GetTurnActorByUniqueId(System.String)
L_00b5: isinst BattleTech.Team
L_00ba: stloc.2
L_00bb: ldloc.2
L_00bc: brfalse Label8
L_00c1: ldarg.0
L_00c2: call BattleTech.CombatGameState get_Combat()
L_00c7: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00cc: stloc.3
L_00cd: ldloc.2
L_00ce: ldloc.3
L_00cf: callvirt Boolean IsFriendly(BattleTech.Team)
L_00d4: brfalse Label9
L_00d9: ldstr "audioeventdef_musictriggers_combat"
L_00de: ldstr "friendly_reinforcements"
L_00e3: ldnull
L_00e4: ldnull
L_00e5: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_00ea: pop
L_00eb: br Label11
L_00f0: Label9
L_00f0: ldloc.2
L_00f1: ldloc.3
L_00f2: callvirt Boolean IsEnemy(BattleTech.Team)
L_00f7: brfalse Label10
L_00fc: ldstr "audioeventdef_musictriggers_combat"
L_0101: ldstr "new_enemy_wave"
L_0106: ldnull
L_0107: ldnull
L_0108: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_010d: pop
L_010e: Label1
L_010e: Label2
L_010e: Label3
L_010e: Label7
L_010e: Label8
L_010e: Label10
L_010e: Label11
L_010e: ldarg.0
L_010f: call Void Postfix(BattleTech.LanceSpawnerGameLogic)
L_0114: ret
DONE

### Patch BattleTech.GameInstance, Void LaunchContract(BattleTech.Contract, System.String)
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: brfalse Label1
L_000b: br Label7
L_0010: Label1
L_0010: ldarg.1
L_0011: ldstr "LaunchContract"
L_0016: callvirt Void PrintValuesToDisc(System.String)
L_001b: ldarg.2
L_001c: ldstr "bf40fd39-ccf9-47c4-94a6-061809681140"
L_0021: call Boolean op_Equality(System.String, System.String)
L_0026: brfalse Label2
L_002b: ldstr "GameInstance"
L_0030: call HBS.Logging.ILog GetLogger(System.String)
L_0035: ldstr "Launching contract with Player1TeamDefinitionGuid"
L_003a: callvirt Void Log(System.Object)
L_003f: br Label3
L_0044: Label2
L_0044: ldarg.2
L_0045: ldstr "757173dd-b4e1-4bb5-9bee-d78e623cc867"
L_004a: call Boolean op_Equality(System.String, System.String)
L_004f: brfalse Label4
L_0054: ldstr "GameInstance"
L_0059: call HBS.Logging.ILog GetLogger(System.String)
L_005e: ldstr "Launching contract with Player2TeamDefinitionGuid"
L_0063: callvirt Void Log(System.Object)
L_0068: Label3
L_0068: Label4
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_Combat(BattleTech.CombatGameState)
L_0073: ldarg.0
L_0074: call BattleTech.CombatGameState get_Combat()
L_0079: ldarg.1
L_007a: ldarg.0
L_007b: ldarg.2
L_007c: callvirt Void FirstTimeInit(BattleTech.Contract, BattleTech.GameInstance, System.String)
L_0081: ldarg.0
L_0082: call BattleTech.CombatGameState get_Combat()
L_0087: callvirt BattleTech.Contract get_ActiveContract()
L_008c: callvirt Void Begin()
L_0091: ldarg.0
L_0092: call BattleTech.SimGameState get_Simulation()
L_0097: brfalse Label5
L_009c: ldarg.0
L_009d: call BattleTech.SimGameState get_Simulation()
L_00a2: callvirt Boolean get_IsIronmanCampaign()
L_00a7: brfalse Label6
L_00ac: ldarg.0
L_00ad: call BattleTech.SimGameState get_Simulation()
L_00b2: callvirt MessageCenter get_MessageCenter()
L_00b7: ldc.i4.s 64
L_00b9: ldarg.0
L_00ba: ldftn Void HandleCombatIronmanFailure(MessageCenterMessage)
L_00c0: newobj Void .ctor(Object, IntPtr)
L_00c5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ca: Label5
L_00ca: Label6
L_00ca: Label7
L_00ca: call Void Postfix()
L_00cf: call Void Postfix()
L_00d4: ret
DONE

### Patch BattleTech.GameInstance, Void Load(BattleTech.Save.GameInstanceSave)
L_0000: Local var 0: System.Boolean
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.Save.GameInstanceSave)
L_000b: ldarg.1
L_000c: callvirt Boolean get_IsSkirmish()
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: ldarg.1
L_0018: call Boolean CreateCombatFromSave(BattleTech.Save.GameInstanceSave)
L_001d: stloc.0
L_001e: ldloc.0
L_001f: brfalse Label2
L_0024: ldarg.1
L_0025: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_002a: ldarg.0
L_002b: call BattleTech.Data.DataManager get_DataManager()
L_0030: ldc.i4 1000
L_0035: callvirt Void RequestDependencies(BattleTech.Data.DataManager, UInt32)
L_003a: Label2
L_003a: ldarg.0
L_003b: call MessageCenter get_MessageCenter()
L_0040: ldloc.0
L_0041: newobj Void .ctor(Boolean)
L_0046: callvirt Void PublishMessage(MessageCenterMessage)
L_004b: br Label3
L_0050: Label1
L_0050: ldarg.0
L_0051: call MessageCenter get_MessageCenter()
L_0056: ldc.i4 159
L_005b: ldarg.0
L_005c: ldftn Void LoadedSimGameSate_OnHeadlessComplete(MessageCenterMessage)
L_0062: newobj Void .ctor(Object, IntPtr)
L_0067: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_006c: ldarg.0
L_006d: ldarg.1
L_006e: stfld BattleTech.Save.GameInstanceSave inProgressLoadData
L_0073: ldarg.0
L_0074: newobj Void .ctor()
L_0079: call Void set_Simulation(BattleTech.SimGameState)
L_007e: ldarg.1
L_007f: ldarg.0
L_0080: call BattleTech.Data.DataManager get_DataManager()
L_0085: callvirt Void RequestResourcesCustom(BattleTech.Data.DataManager)
L_008a: ldarg.1
L_008b: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0090: ldarg.0
L_0091: call BattleTech.Data.DataManager get_DataManager()
L_0096: ldc.i4.s 10
L_0098: callvirt Void RequestDependencies(BattleTech.Data.DataManager, UInt32)
L_009d: ldarg.0
L_009e: call BattleTech.SimGameState get_Simulation()
L_00a3: ldarg.0
L_00a4: ldarg.1
L_00a5: callvirt Void InitFromSave(BattleTech.GameInstance, BattleTech.Save.GameInstanceSave)
L_00aa: Label3
L_00aa: ret
DONE

### Patch BattleTech.Mech, Void OnLocationDestroyed(BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.WeaponHitInfo, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: BattleTech.DeathMethod
L_0000: Local var 2: System.String
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: BattleTech.MechComponent
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: BattleTech.AmmunitionBox
L_0000: Local var 10: BattleTech.Pilot
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: beq Label1
L_0007: ldarg.1
L_0008: ldc.i4.8
L_0009: beq Label2
L_000e: ldstr "{0} DESTROYED"
L_0013: ldc.i4.1
L_0014: newarr System.Object
L_0019: dup
L_001a: ldc.i4.0
L_001b: ldarg.1
L_001c: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0021: stelem.ref
L_0022: newobj Void .ctor(String, Object[])
L_0027: stloc.3
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldarg.0
L_0034: ldloc.3
L_0035: ldc.i4.s 12
L_0037: ldc.i4.1
L_0038: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_003d: newobj Void .ctor(IStackSequence)
L_0042: callvirt Void PublishMessage(MessageCenterMessage)
L_0047: Label1
L_0047: Label2
L_0047: ldarg.0
L_0048: call BattleTech.CombatGameState get_Combat()
L_004d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0052: ldarg.3
L_0053: ldfld System.Int32 attackSequenceId
L_0058: callvirt AttackSequence GetAttackSequence(Int32)
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label3
L_0064: ldloc.0
L_0065: ldarg.0
L_0066: call System.String get_GUID()
L_006b: callvirt Void FlagAttackDestroyedAnyLocation(System.String)
L_0070: Label3
L_0070: ldarg.1
L_0071: ldc.i4.s 64
L_0073: beq Label4
L_0078: ldarg.1
L_0079: ldc.i4 128
L_007e: bne.un Label5
L_0083: Label4
L_0083: ldloc.0
L_0084: brfalse Label6
L_0089: ldloc.0
L_008a: ldfld BattleTech.AbstractActor attacker
L_008f: callvirt System.String get_GUID()
L_0094: br Label7
L_0099: Label6
L_0099: ldstr "debug"
L_009e: Label7
L_009e: stloc.s 4 (System.String)
L_00a0: ldloc.0
L_00a1: brfalse Label8
L_00a6: ldloc.0
L_00a7: ldfld System.Int32 attackSequenceIdx
L_00ac: br Label9
L_00b1: Label8
L_00b1: ldc.i4.m1
L_00b2: Label9
L_00b2: stloc.s 5 (System.Int32)
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.StatCollection statCollection
L_00ba: ldloc.s 4 (System.String)
L_00bc: ldloc.s 5 (System.Int32)
L_00be: ldstr "RunSpeed"
L_00c3: ldc.i4.0
L_00c4: ldc.r4 0
L_00c9: ldc.i4.m1
L_00ca: ldc.i4.1
L_00cb: callvirt Int32 ModifyStat[Single](System.String, Int32, System.String, StatOperation, Single, Int32, Boolean)
L_00d0: pop
L_00d1: ldarg.0
L_00d2: callvirt Void FlagForKnockdown()
L_00d7: ldloc.0
L_00d8: brfalse Label10
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.AbstractActor attacker
L_00e4: bne.un Label11
L_00e9: ldloc.0
L_00ea: callvirt Void FlagAttackDestroyedAttackerLeg()
L_00ef: br Label12
L_00f4: Label11
L_00f4: ldloc.0
L_00f5: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00fa: ldarg.0
L_00fb: call System.String get_GUID()
L_0100: callvirt Boolean Contains(System.String)
L_0105: brfalse Label13
L_010a: ldloc.0
L_010b: ldarg.0
L_010c: call System.String get_GUID()
L_0111: callvirt Void FlagAttackDestroyedLeg(System.String)
L_0116: ldloc.0
L_0117: ldarg.0
L_0118: call System.String get_GUID()
L_011d: callvirt Void FlagAttackCausedKnockdown(System.String)
L_0122: Label5
L_0122: Label10
L_0122: Label12
L_0122: Label13
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0128: callvirt Enumerator GetEnumerator()
L_012d: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_012f: br Label14
	L_0134: Label18
	L_0134: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0136: call BattleTech.MechComponent get_Current()
	L_013b: stloc.s 7 (BattleTech.MechComponent)
	L_013d: ldloc.s 7 (BattleTech.MechComponent)
	L_013f: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0144: ldarg.1
	L_0145: bne.un Label15
	L_014a: ldloc.s 7 (BattleTech.MechComponent)
	L_014c: ldarg.3
	L_014d: ldc.i4.4
	L_014e: ldc.i4.0
	L_014f: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
	L_0154: ldsfld HBS.Logging.ILog damageLogger
	L_0159: callvirt Boolean get_IsLogEnabled()
	L_015e: brfalse Label16
	L_0163: ldsfld HBS.Logging.ILog damageLogger
	L_0168: ldstr "====@@@ Component Destroyed: {0}"
	L_016d: ldloc.s 7 (BattleTech.MechComponent)
	L_016f: callvirt System.String get_Name()
	L_0174: call System.String Format(System.String, System.Object)
	L_0179: callvirt Void Log(System.Object)
	L_017e: Label16
	L_017e: ldloc.0
	L_017f: brfalse Label17
	L_0184: ldloc.s 7 (BattleTech.MechComponent)
	L_0186: isinst BattleTech.Weapon
	L_018b: stloc.s 8 (BattleTech.Weapon)
	L_018d: ldloc.s 7 (BattleTech.MechComponent)
	L_018f: isinst BattleTech.AmmunitionBox
	L_0194: stloc.s 9 (BattleTech.AmmunitionBox)
	L_0196: ldloc.0
	L_0197: ldarg.0
	L_0198: call System.String get_GUID()
	L_019d: ldloc.s 8 (BattleTech.Weapon)
	L_019f: ldloc.s 9 (BattleTech.AmmunitionBox)
	L_01a1: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
	L_01a6: Label14
	L_01a6: Label15
	L_01a6: Label17
	L_01a6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01a8: call Boolean MoveNext()
	L_01ad: brtrue Label18
	L_01b2: leave Label19
	L_01b7: leave (autogenerated)
} // end try
.finally
{
	L_01bc: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01be: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_01c4: callvirt Void Dispose()
	L_01c9: endfinally
	L_01ca: leave (autogenerated)
} // end handler
L_01cb: Label19
L_01cb: ldarg.0
L_01cc: ldarg.3
L_01cd: call Void UpdateMinStability(BattleTech.WeaponHitInfo)
L_01d2: ldc.i4.0
L_01d3: stloc.1
L_01d4: ldstr ""
L_01d9: stloc.2
L_01da: ldarg.1
L_01db: ldc.i4.8
L_01dc: bne.un Label20
L_01e1: ldc.i4.2
L_01e2: stloc.1
L_01e3: ldstr "Location Destroyed: "
L_01e8: ldarga.s 1
L_01ea: constrained. BattleTech.ChassisLocations
L_01f0: callvirt System.String ToString()
L_01f5: call System.String Concat(System.String, System.String)
L_01fa: stloc.2
L_01fb: br Label21
L_0200: Label20
L_0200: ldarg.1
L_0201: ldc.i4.1
L_0202: bne.un Label22
L_0207: ldc.i4.1
L_0208: stloc.1
L_0209: ldstr "Location Destroyed: "
L_020e: ldarga.s 1
L_0210: constrained. BattleTech.ChassisLocations
L_0216: callvirt System.String ToString()
L_021b: call System.String Concat(System.String, System.String)
L_0220: stloc.2
L_0221: br Label23
L_0226: Label22
L_0226: ldarg.1
L_0227: ldc.i4.s 64
L_0229: beq Label24
L_022e: ldarg.1
L_022f: ldc.i4 128
L_0234: bne.un Label25
L_0239: Label24
L_0239: ldarg.0
L_023a: call Single get_LeftLegStructure()
L_023f: ldc.r4 0
L_0244: bgt.un Label26
L_0249: ldarg.0
L_024a: call Single get_RightLegStructure()
L_024f: ldc.r4 0
L_0254: bgt.un Label27
L_0259: ldc.i4.3
L_025a: stloc.1
L_025b: ldstr "Location Destroyed: "
L_0260: ldarga.s 1
L_0262: constrained. BattleTech.ChassisLocations
L_0268: callvirt System.String ToString()
L_026d: call System.String Concat(System.String, System.String)
L_0272: stloc.2
L_0273: Label21
L_0273: Label23
L_0273: Label25
L_0273: Label26
L_0273: Label27
L_0273: ldarg.s 4
L_0275: ldc.i4.s 11
L_0277: bne.un Label28
L_027c: ldarg.1
L_027d: ldc.i4.8
L_027e: beq Label29
L_0283: ldarg.1
L_0284: ldc.i4.1
L_0285: bne.un Label30
L_028a: Label29
L_028a: ldc.i4.4
L_028b: stloc.1
L_028c: ldstr "Ammo Explosion: "
L_0291: ldarga.s 1
L_0293: constrained. BattleTech.ChassisLocations
L_0299: callvirt System.String ToString()
L_029e: call System.String Concat(System.String, System.String)
L_02a3: stloc.2
L_02a4: Label28
L_02a4: Label30
L_02a4: ldloc.1
L_02a5: brfalse Label31
L_02aa: ldarg.0
L_02ab: ldloc.2
L_02ac: ldloc.1
L_02ad: ldarg.s 4
L_02af: ldarg.1
L_02b0: ldarg.3
L_02b1: ldfld System.Int32 stackItemUID
L_02b6: ldarg.3
L_02b7: ldfld System.String attackerId
L_02bc: ldc.i4.0
L_02bd: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_02c2: br Label32
L_02c7: Label31
L_02c7: ldarg.1
L_02c8: ldc.i4.4
L_02c9: beq Label33
L_02ce: ldarg.1
L_02cf: ldc.i4.s 16
L_02d1: bne.un Label34
L_02d6: Label33
L_02d6: ldarg.0
L_02d7: call BattleTech.CombatGameState get_Combat()
L_02dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_02e1: callvirt BattleTech.PilotingConstantsDef get_PilotingConstants()
L_02e6: ldfld System.Boolean InjuryFromSideTorsoDestruction
L_02eb: brfalse Label35
L_02f0: ldarg.0
L_02f1: callvirt BattleTech.Pilot GetPilot()
L_02f6: stloc.s 10 (BattleTech.Pilot)
L_02f8: ldloc.s 10 (BattleTech.Pilot)
L_02fa: brfalse Label36
L_02ff: ldloc.s 10 (BattleTech.Pilot)
L_0301: ldc.i4.5
L_0302: callvirt Void SetNeedsInjury(BattleTech.InjuryReason)
L_0307: Label32
L_0307: Label34
L_0307: Label35
L_0307: Label36
L_0307: ldarg.0
L_0308: call BattleTech.MechRepresentation get_GameRep()
L_030d: ldnull
L_030e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0313: brfalse Label37
L_0318: ldarg.0
L_0319: call BattleTech.MechRepresentation get_GameRep()
L_031e: ldarg.1
L_031f: ldarg.2
L_0320: callvirt Void PlayComponentDestroyedVFX(Int32, UnityEngine.Vector3)
L_0325: Label37
L_0325: ldarg.0
L_0326: call Void Postfix(BattleTech.Mech)
L_032b: ret
DONE

### Patch BattleTech.SimGameState, Void _OnFirstPlayInit(SimGameType, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: BattleTech.StoryConstantsDef
L_0000: Local var 3: ReportSimGameInitMessage
L_0000: Local var 4: System.Guid
L_0000: Local var 5: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String[]
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.String
L_0000: Local var 11: System.Collections.IEnumerator
L_0000: Local var 12: BattleTech.SimGameState+SimGameCharacterType
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.IDisposable
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: newobj Void .ctor()
L_0007: stloc.1
L_0008: ldarg.0
L_0009: ldnull
L_000a: call Void InitManagers(BattleTech.Save.GameInstanceSave)
L_000f: ldarg.0
L_0010: ldarg.1
L_0011: ldc.i4.1
L_0012: bne.un Label1
L_0017: ldstr "campaign_instance_"
L_001c: br Label2
L_0021: Label1
L_0021: ldstr "non_campaign_instance_"
L_0026: Label2
L_0026: call System.Guid NewGuid()
L_002b: stloc.s 4 (System.Guid)
L_002d: ldloca.s 4 (System.Guid)
L_002f: constrained. System.Guid
L_0035: callvirt System.String ToString()
L_003a: call System.String Concat(System.String, System.String)
L_003f: call Void set_InstanceGUID(System.String)
L_0044: ldarg.0
L_0045: ldarg.2
L_0046: stfld System.Boolean AllowDebug
L_004b: ldarg.0
L_004c: ldarg.1
L_004d: call Void set_SimGameMode(SimGameType)
L_0052: ldarg.0
L_0053: newobj Void .ctor()
L_0058: call Void set_MedTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_005d: ldarg.0
L_005e: newobj Void .ctor()
L_0063: call Void set_MechTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_MechLabQueue(System.Collections.Generic.List`1[BattleTech.WorkOrderEntry])
L_0073: ldarg.0
L_0074: ldfld BattleTech.SimGameConstantOverride constantOverrides
L_0079: ldarg.0
L_007a: callvirt Void Initialize(BattleTech.SimGameState)
L_007f: ldarg.0
L_0080: call BattleTech.SimGameConstants get_Constants()
L_0085: callvirt BattleTech.StoryConstantsDef get_Story()
L_008a: stloc.2
L_008b: ldarg.1
L_008c: ldc.i4.1
L_008d: sub
L_008e: switch Labels3,4,5
L_009f: br Label6
L_00a4: Label4
L_00a4: ldarg.0
L_00a5: ldarg.0
L_00a6: call BattleTech.SimGameConstants get_Constants()
L_00ab: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_00b0: callvirt System.DateTime GetCampaignStartDate()
L_00b5: call Void SetCampaignStartDate(System.DateTime)
L_00ba: br Label7
L_00bf: Label3
L_00bf: Label5
L_00bf: Label6
L_00bf: ldarg.0
L_00c0: ldarg.0
L_00c1: call BattleTech.SimGameConstants get_Constants()
L_00c6: callvirt BattleTech.StoryConstantsDef get_Story()
L_00cb: callvirt System.DateTime GetCampaignStartDate()
L_00d0: call Void SetCampaignStartDate(System.DateTime)
L_00d5: Label7
L_00d5: ldarg.0
L_00d6: ldfld BattleTech.SimGameEventTracker companyEventTracker
L_00db: ldsfld BattleTech.EventScope[] CompanyTrackerScope
L_00e0: ldloc.2
L_00e1: ldfld System.Single CompanyEventStartingChance
L_00e6: ldloc.2
L_00e7: ldfld System.Single CompanyEventIncreaseRate
L_00ec: ldc.i4.0
L_00ed: ldarg.0
L_00ee: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_00f3: ldarg.0
L_00f4: ldfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_00f9: ldsfld BattleTech.EventScope[] MechWarriorTrackerScope
L_00fe: ldloc.2
L_00ff: ldfld System.Single PersonalEventStartingChance
L_0104: ldloc.2
L_0105: ldfld System.Single PersonalEventIncreaseRate
L_010a: ldc.i4.0
L_010b: ldarg.0
L_010c: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_0111: ldarg.0
L_0112: ldfld BattleTech.SimGameEventTracker moraleEventTracker
L_0117: ldsfld BattleTech.EventScope[] MoraleTrackerScope
L_011c: ldloc.2
L_011d: ldfld System.Single MoraleEventStartingChance
L_0122: ldloc.2
L_0123: ldfld System.Single MoraleEventIncreaseRate
L_0128: ldc.i4.1
L_0129: ldarg.0
L_012a: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_012f: ldarg.0
L_0130: ldfld BattleTech.SimGameEventTracker deadEventTracker
L_0135: ldsfld BattleTech.EventScope[] DeadTrackerScope
L_013a: ldloc.2
L_013b: ldfld System.Single DeadEventStartingChance
L_0140: ldloc.2
L_0141: ldfld System.Single DeadEventIncreaseRate
L_0146: ldc.i4.3
L_0147: ldarg.0
L_0148: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call BattleTech.GameInstance get_BattleTechGame()
L_0154: callvirt BattleTech.GameContext get_GlobalGameContext()
L_0159: newobj Void .ctor(GameContext)
L_015e: stfld BattleTech.SimGameContext Context
L_0163: ldarg.0
L_0164: ldfld BattleTech.SimGameContext Context
L_0169: ldc.i4.s 13
L_016b: ldarg.0
L_016c: callvirt Void SetObject(BattleTech.GameContextObjectTagEnum, System.Object)
L_0171: ldarg.1
L_0172: ldc.i4.1
L_0173: beq Label8
L_0178: newobj Void .ctor()
L_017d: stloc.s 5 (System.Collections.Generic.List`1[System.String])
L_017f: ldarg.1
L_0180: ldc.i4.2
L_0181: beq Label9
L_0186: ldarg.1
L_0187: ldc.i4.3
L_0188: bne.un Label10
L_018d: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_018f: ldarg.0
L_0190: call BattleTech.SimGameConstants get_Constants()
L_0195: callvirt BattleTech.SimDebugConstantsDef get_Debug()
L_019a: ldfld System.String[] NonCampaignStartingTags
L_019f: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01a4: ldarg.0
L_01a5: call HBS.Collections.TagSet get_CompanyTags()
L_01aa: ldarg.0
L_01ab: call BattleTech.SimGameConstants get_Constants()
L_01b0: callvirt BattleTech.FlashpointConstantsDef get_Flashpoints()
L_01b5: ldfld System.String SystemUseFlashpointsTag
L_01ba: callvirt Boolean Add(System.String)
L_01bf: pop
L_01c0: br Label11
L_01c5: Label9
L_01c5: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_01c7: ldarg.0
L_01c8: call BattleTech.SimGameConstants get_Constants()
L_01cd: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_01d2: ldfld System.String[] CareerStartingTags
L_01d7: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01dc: ldarg.0
L_01dd: ldarg.0
L_01de: call NetworkRandom get_NetworkRandom()
L_01e3: ldarg.0
L_01e4: call BattleTech.SimGameConstants get_Constants()
L_01e9: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_01ee: ldfld System.Int32[] FlashpointStartRange
L_01f3: ldc.i4.0
L_01f4: ldelem.i4
L_01f5: ldarg.0
L_01f6: call BattleTech.SimGameConstants get_Constants()
L_01fb: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0200: ldfld System.Int32[] FlashpointStartRange
L_0205: ldc.i4.1
L_0206: ldelem.i4
L_0207: ldc.i4.1
L_0208: add
L_0209: callvirt Int32 Int(Int32, Int32)
L_020e: stfld System.Int32 careerModeFlashpointStartDate
L_0213: ldc.i4.1
L_0214: stloc.0
L_0215: ldloc.1
L_0216: ldarg.0
L_0217: call BattleTech.SimGameConstants get_Constants()
L_021c: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0221: ldfld System.String[] ConversationCharacters
L_0226: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_022b: Label10
L_022b: Label11
L_022b: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_022d: callvirt Enumerator GetEnumerator()
L_0232: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0234: br Label12
	L_0239: Label13
	L_0239: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_023b: call System.String get_Current()
	L_0240: stloc.s 7 (System.String)
	L_0242: ldarg.0
	L_0243: call HBS.Collections.TagSet get_CompanyTags()
	L_0248: ldloc.s 7 (System.String)
	L_024a: callvirt Boolean Add(System.String)
	L_024f: pop
	L_0250: Label12
	L_0250: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0252: call Boolean MoveNext()
	L_0257: brtrue Label13
	L_025c: leave Label14
	L_0261: leave (autogenerated)
} // end try
.finally
{
	L_0266: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0268: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_026e: callvirt Void Dispose()
	L_0273: endfinally
	L_0274: leave (autogenerated)
} // end handler
L_0275: Label14
L_0275: ldarg.0
L_0276: call HBS.Collections.TagSet get_CompanyTags()
L_027b: ldarg.0
L_027c: call BattleTech.SimGameConstants get_Constants()
L_0281: callvirt BattleTech.StoryConstantsDef get_Story()
L_0286: ldfld System.String SystemUseEventsTag
L_028b: callvirt Boolean Add(System.String)
L_0290: pop
L_0291: ldarg.0
L_0292: call HBS.Collections.TagSet get_CompanyTags()
L_0297: ldarg.0
L_0298: call BattleTech.SimGameConstants get_Constants()
L_029d: callvirt BattleTech.StoryConstantsDef get_Story()
L_02a2: ldfld System.String SystemUseTimeTag
L_02a7: callvirt Boolean Add(System.String)
L_02ac: pop
L_02ad: br Label15
L_02b2: Label8
L_02b2: ldarg.0
L_02b3: call HBS.Collections.TagSet get_CompanyTags()
L_02b8: ldarg.0
L_02b9: call BattleTech.SimGameConstants get_Constants()
L_02be: callvirt BattleTech.StoryConstantsDef get_Story()
L_02c3: ldfld System.String SystemUseMilestoneTag
L_02c8: callvirt Boolean Add(System.String)
L_02cd: pop
L_02ce: Label15
L_02ce: ldarg.0
L_02cf: call BattleTech.SimGameConstants get_Constants()
L_02d4: callvirt BattleTech.StoryConstantsDef get_Story()
L_02d9: ldfld System.String[] CampaignCommanderUpdateTags
L_02de: brfalse Label16
L_02e3: ldarg.0
L_02e4: call BattleTech.SimGameConstants get_Constants()
L_02e9: callvirt BattleTech.StoryConstantsDef get_Story()
L_02ee: ldfld System.String[] CampaignCommanderUpdateTags
L_02f3: stloc.s 8 (System.String[])
L_02f5: ldc.i4.0
L_02f6: stloc.s 9 (System.Int32)
L_02f8: br Label17
L_02fd: Label18
L_02fd: ldloc.s 8 (System.String[])
L_02ff: ldloc.s 9 (System.Int32)
L_0301: ldelem.ref
L_0302: stloc.s 10 (System.String)
L_0304: ldarg.0
L_0305: call HBS.Collections.TagSet get_CompanyTags()
L_030a: ldloc.s 10 (System.String)
L_030c: callvirt Boolean Add(System.String)
L_0311: pop
L_0312: ldloc.s 9 (System.Int32)
L_0314: ldc.i4.1
L_0315: add
L_0316: stloc.s 9 (System.Int32)
L_0318: Label17
L_0318: ldloc.s 9 (System.Int32)
L_031a: ldloc.s 8 (System.String[])
L_031c: ldlen
L_031d: conv.i4
L_031e: blt Label18
L_0323: Label16
L_0323: ldarg.0
L_0324: call HBS.Collections.TagSet get_CompanyTags()
L_0329: ldstr "{0}{1}"
L_032e: ldstr "SYSTEM_GAMEMODE_"
L_0333: ldarg.0
L_0334: call SimGameType get_SimGameMode()
L_0339: box BattleTech.SimGameState+SimGameType
L_033e: call System.String Format(System.String, System.Object, System.Object)
L_0343: callvirt Boolean Add(System.String)
L_0348: pop
L_0349: ldarg.0
L_034a: call Void InitCompanyStats()
L_034f: ldarg.0
L_0350: ldarg.0
L_0351: call BattleTech.SimGameConstants get_Constants()
L_0356: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_035b: ldfld System.Int32 QuarterLength
L_0360: call Void set_DayRemainingInQuarter(Int32)
L_0365: ldarg.0
L_0366: ldc.i4.0
L_0367: ldc.i4.0
L_0368: call Void SetExpenditureLevel(BattleTech.EconomyScale, Boolean)
L_036d: ldtoken BattleTech.SimGameState+SimGameCharacterType
L_0372: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0377: call System.Array GetValues(System.Type)
L_037c: callvirt System.Collections.IEnumerator GetEnumerator()
L_0381: stloc.s 11 (System.Collections.IEnumerator)
.try
{
	L_0383: br Label19
	L_0388: Label23
	L_0388: ldloc.s 11 (System.Collections.IEnumerator)
	L_038a: callvirt System.Object get_Current()
	L_038f: unbox.any BattleTech.SimGameState+SimGameCharacterType
	L_0394: stloc.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_0396: ldarg.0
	L_0397: ldfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
	L_039c: ldloc.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_039e: callvirt Void Add(SimGameCharacterType)
	L_03a3: ldloc.0
	L_03a4: brfalse Label20
	L_03a9: ldc.i4.0
	L_03aa: stloc.s 13 (System.Boolean)
	L_03ac: ldloc.1
	L_03ad: ldloca.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_03af: constrained. BattleTech.SimGameState+SimGameCharacterType
	L_03b5: callvirt System.String ToString()
	L_03ba: callvirt Boolean Contains(System.String)
	L_03bf: brfalse Label21
	L_03c4: ldc.i4.1
	L_03c5: stloc.s 13 (System.Boolean)
	L_03c7: Label21
	L_03c7: ldarg.0
	L_03c8: ldfld System.Collections.Generic.List`1[System.Boolean] characterStatus
	L_03cd: ldloc.s 13 (System.Boolean)
	L_03cf: callvirt Void Add(Boolean)
	L_03d4: br Label22
	L_03d9: Label20
	L_03d9: ldarg.0
	L_03da: ldfld System.Collections.Generic.List`1[System.Boolean] characterStatus
	L_03df: ldc.i4.1
	L_03e0: callvirt Void Add(Boolean)
	L_03e5: Label19
	L_03e5: Label22
	L_03e5: ldloc.s 11 (System.Collections.IEnumerator)
	L_03e7: callvirt Boolean MoveNext()
	L_03ec: brtrue Label23
	L_03f1: leave Label24
	L_03f6: leave (autogenerated)
} // end try
.finally
{
	L_03fb: ldloc.s 11 (System.Collections.IEnumerator)
	L_03fd: isinst System.IDisposable
	L_0402: stloc.s 14 (System.IDisposable)
	L_0404: ldloc.s 14 (System.IDisposable)
	L_0406: brfalse Label25
	L_040b: ldloc.s 14 (System.IDisposable)
	L_040d: callvirt Void Dispose()
	L_0412: Label25
	L_0412: endfinally
	L_0413: leave (autogenerated)
} // end handler
L_0414: Label24
L_0414: ldarg.0
L_0415: call Void AddCachedFactionsToDisplayList()
L_041a: ldc.i4.0
L_041b: newobj Void .ctor(Boolean)
L_0420: stloc.3
L_0421: ldarg.0
L_0422: call MessageCenter get_MessageCenter()
L_0427: ldloc.3
L_0428: callvirt Void PublishMessage(MessageCenterMessage)
L_042d: call Void Postfix()
L_0432: ret
DONE

### Patch BattleTech.CombatGameState, Void _Init(BattleTech.GameInstance, BattleTech.Contract, System.String)
L_0000: Local var 0: BattleTech.EncounterPlayStyle
L_0000: Local var 1: System.DateTime
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_BattleTechGame(BattleTech.GameInstance)
L_0007: ldarg.0
L_0008: ldarg.2
L_0009: call Void set_ActiveContract(BattleTech.Contract)
L_000e: ldarg.0
L_000f: ldarg.3
L_0010: call Void set_LocalPlayerTeamGuid(System.String)
L_0015: ldarg.0
L_0016: call Boolean get_IsLoadingFromSave()
L_001b: brtrue Label1
L_0020: ldarg.0
L_0021: newobj Void .ctor()
L_0026: call Void set_ItemRegistry(ItemRegistry)
L_002b: ldarg.0
L_002c: ldarg.0
L_002d: call BattleTech.Contract get_ActiveContract()
L_0032: callvirt Boolean get_ShouldSaveAtMissionStart()
L_0037: brfalse Label2
L_003c: ldarg.1
L_003d: callvirt BattleTech.SimGameState get_Simulation()
L_0042: brfalse Label3
L_0047: ldarg.1
L_0048: callvirt BattleTech.SimGameState get_Simulation()
L_004d: callvirt Boolean get_IsIronmanCampaign()
L_0052: ldc.i4.0
L_0053: ceq
L_0055: br Label4
L_005a: Label2
L_005a: Label3
L_005a: ldc.i4.0
L_005b: Label4
L_005b: call Void set_NeedsStoryMissionStartSave(Boolean)
L_0060: Label1
L_0060: ldarg.0
L_0061: ldarg.0
L_0062: ldarg.1
L_0063: callvirt Boolean get_IsMultiplayer()
L_0068: newobj Void .ctor(CombatGameState, Boolean)
L_006d: call Void set_LOS(BattleTech.LineOfSight)
L_0072: ldarg.0
L_0073: ldarg.0
L_0074: newobj Void .ctor(CombatGameState)
L_0079: call Void set_LOFCache(LOFCache)
L_007e: ldarg.0
L_007f: ldarg.0
L_0080: newobj Void .ctor(CombatGameState)
L_0085: call Void set_ToHit(BattleTech.ToHit)
L_008a: ldarg.0
L_008b: ldarg.0
L_008c: newobj Void .ctor(CombatGameState)
L_0091: call Void set_CritChance(BattleTech.CritChanceRules)
L_0096: ldarg.0
L_0097: ldarg.0
L_0098: newobj Void .ctor(CombatGameState)
L_009d: call Void set_MeleeRules(BattleTech.MeleeRules)
L_00a2: ldarg.0
L_00a3: ldarg.0
L_00a4: newobj Void .ctor(CombatGameState)
L_00a9: call Void set_HitLocation(BattleTech.HitLocation)
L_00ae: ldarg.0
L_00af: ldarg.0
L_00b0: newobj Void .ctor(CombatGameState)
L_00b5: call Void set_PilotingRules(BattleTech.PilotingRules)
L_00ba: ldarg.0
L_00bb: ldarg.0
L_00bc: call BattleTech.GameInstance get_BattleTechGame()
L_00c1: call BattleTech.CombatGameConstants GetInstance(BattleTech.GameInstance)
L_00c6: call Void set_Constants(BattleTech.CombatGameConstants)
L_00cb: ldarg.0
L_00cc: call BattleTech.CombatGameConstants get_Constants()
L_00d1: callvirt Void PrewarmVFX()
L_00d6: ldarg.0
L_00d7: call BattleTech.CombatGameConstants get_Constants()
L_00dc: ldarg.0
L_00dd: callvirt Void BuildClusterTables(BattleTech.CombatGameState)
L_00e2: ldarg.0
L_00e3: call Boolean get_IsLoadingFromSave()
L_00e8: brtrue Label5
L_00ed: ldarg.0
L_00ee: ldarg.0
L_00ef: newobj Void .ctor(CombatGameState)
L_00f4: call Void set_TurnDirector(BattleTech.TurnDirector)
L_00f9: Label5
L_00f9: ldarg.0
L_00fa: newobj Void .ctor()
L_00ff: call Void set_PathingManager(BattleTech.PathingManager)
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: newobj Void .ctor(CombatGameState)
L_010b: call Void set_AttackDirector(BattleTech.AttackDirector)
L_0110: ldarg.0
L_0111: ldarg.0
L_0112: newobj Void .ctor(CombatGameState)
L_0117: call Void set_StackManager(BattleTech.StackManager)
L_011c: ldarg.0
L_011d: call Boolean get_IsLoadingFromSave()
L_0122: brfalse Label6
L_0127: ldarg.0
L_0128: call BattleTech.EffectManager get_EffectManager()
L_012d: brtrue Label7
L_0132: Label6
L_0132: ldarg.0
L_0133: ldarg.0
L_0134: newobj Void .ctor(CombatGameState)
L_0139: call Void set_EffectManager(BattleTech.EffectManager)
L_013e: Label7
L_013e: ldarg.0
L_013f: ldarg.0
L_0140: newobj Void .ctor(CombatGameState)
L_0145: call Void set_InvocationHandler(BattleTech.InvocationHandler)
L_014a: ldarg.0
L_014b: ldarg.0
L_014c: newobj Void .ctor(CombatGameState)
L_0151: call Void set_AILogCache(AILogCache)
L_0156: ldarg.0
L_0157: ldarg.2
L_0158: ldarg.1
L_0159: callvirt BattleTech.Data.DataManager get_DataManager()
L_015e: call BattleTech.MapMetaData LoadMapMetaData(BattleTech.Contract, BattleTech.Data.DataManager)
L_0163: call Void set_MapMetaData(BattleTech.MapMetaData)
L_0168: ldc.i4.0
L_0169: stloc.0
L_016a: ldarg.2
L_016b: callvirt BattleTech.Framework.ContractOverride get_Override()
L_0170: brfalse Label8
L_0175: ldarg.2
L_0176: callvirt BattleTech.Framework.ContractOverride get_Override()
L_017b: ldfld BattleTech.EncounterPlayStyle encounterPlayStyle
L_0180: stloc.0
L_0181: Label8
L_0181: ldarg.0
L_0182: ldarg.0
L_0183: ldloc.0
L_0184: newobj Void .ctor(CombatGameState, EncounterPlayStyle)
L_0189: call Void set_HostilityMatrix(BattleTech.HostilityMatrix)
L_018e: ldarg.0
L_018f: ldnull
L_0190: call Void set_EncounterLayerData(BattleTech.EncounterLayerData)
L_0195: ldarg.0
L_0196: ldarg.0
L_0197: newobj Void .ctor(CombatGameState)
L_019c: call Void set_HexGrid(BattleTech.HexGrid)
L_01a1: ldarg.0
L_01a2: ldarg.0
L_01a3: newobj Void .ctor(CombatGameState)
L_01a8: call Void set_MultiplayerGameVerification(BattleTech.MultiplayerGameVerification)
L_01ad: ldarg.0
L_01ae: newobj Void .ctor()
L_01b3: call Void set_NetworkRandom(NetworkRandom)
L_01b8: ldarg.0
L_01b9: call NetworkRandom get_NetworkRandom()
L_01be: ldarg.0
L_01bf: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_01c4: callvirt Boolean get_RecordData()
L_01c9: callvirt Void set_RecordHistory(Boolean)
L_01ce: ldsfld HBS.Logging.ILog gameInfoLogger
L_01d3: ldstr "CombatGameState created: {0}"
L_01d8: call System.DateTime get_UtcNow()
L_01dd: stloc.1
L_01de: ldloca.s 1 (System.DateTime)
L_01e0: ldstr "ddd MMM d yyyy HH:mm:ss"
L_01e5: call System.String ToString(System.String)
L_01ea: call System.String Format(System.String, System.Object)
L_01ef: callvirt Void Log(System.Object)
L_01f4: ldarg.0
L_01f5: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01fa: brfalse Label9
L_01ff: ldarg.0
L_0200: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0205: callvirt Boolean IsNetworkGameActive()
L_020a: brfalse Label10
L_020f: ldsfld HBS.Logging.ILog gameInfoLogger
L_0214: ldstr "    Playing multiplayer."
L_0219: callvirt Void Log(System.Object)
L_021e: ldarg.0
L_021f: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0224: callvirt BattleTech.Network.Client.NetworkGameInstanceState get_State()
L_0229: ldc.i4.2
L_022a: bne.un Label11
L_022f: ldsfld HBS.Logging.ILog gameInfoLogger
L_0234: ldstr "    Is hosting."
L_0239: callvirt Void Log(System.Object)
L_023e: br Label12
L_0243: Label11
L_0243: ldsfld HBS.Logging.ILog gameInfoLogger
L_0248: ldstr "    Is not hosting."
L_024d: callvirt Void Log(System.Object)
L_0252: Label12
L_0252: ldsfld HBS.Logging.ILog gameInfoLogger
L_0257: ldstr "    Session Token: "
L_025c: ldarg.0
L_025d: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0262: callvirt System.String get_ServerToken()
L_0267: call System.String Concat(System.String, System.String)
L_026c: callvirt Void Log(System.Object)
L_0271: Label9
L_0271: Label10
L_0271: ldarg.0
L_0272: call MessageCenter get_MessageCenter()
L_0277: brfalse Label13
L_027c: ldarg.0
L_027d: call MessageCenter get_MessageCenter()
L_0282: newobj Void .ctor()
L_0287: dup
L_0288: call BattleTech.GameInstance get_BattleTechGame()
L_028d: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0292: callvirt Boolean IsNetworkGameActive()
L_0297: callvirt Void set_IsNetworkGame(Boolean)
L_029c: callvirt Void PublishMessage(MessageCenterMessage)
L_02a1: Label13
L_02a1: call Boolean get_HasInstance()
L_02a6: brfalse Label14
L_02ab: call HBS.DebugConsole.DebugConsole get_Instance()
L_02b0: ldarg.0
L_02b1: ldftn Void DebugConsoleOnBeforeDump()
L_02b7: newobj Void .ctor(Object, IntPtr)
L_02bc: callvirt Void add_OnBeforeDump(DumpHandler)
L_02c1: Label14
L_02c1: ldarg.0
L_02c2: newobj Void .ctor()
L_02c7: stfld System.Collections.Generic.List`1[BattleTech.RegionGameLogic] RegionsList
L_02cc: ldarg.0
L_02cd: ldarg.2
L_02ce: call Void InitContext(BattleTech.Contract)
L_02d3: call Void Postfix()
L_02d8: ret
DONE

### Harmony id=io.github.mpstark.PilotHealthPopup, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from PilotHealthPopup.Main.Init(), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\PilotHealthPopup\PilotHealthPopup.dll
### At 2019-09-15 05.05.24
### Patch BattleTech.Pilot, Void InjurePilot(System.String, Int32, Int32, BattleTech.DamageType, BattleTech.Weapon, BattleTech.AbstractActor)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_ParentActor()
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.AbstractActor get_ParentActor()
L_0011: callvirt BattleTech.StatCollection get_StatCollection()
L_0016: ldstr "IgnorePilotInjuries"
L_001b: callvirt Boolean GetValue[Boolean](System.String)
L_0020: brfalse Label2
L_0025: ldarg.0
L_0026: call BattleTech.CombatGameState get_Combat()
L_002b: callvirt MessageCenter get_MessageCenter()
L_0030: ldarg.1
L_0031: ldarg.0
L_0032: call BattleTech.AbstractActor get_ParentActor()
L_0037: callvirt System.String get_GUID()
L_003c: ldstr "INJURY IGNORED"
L_0041: call System.String T(System.String)
L_0046: ldc.i4.s 9
L_0048: newobj Void .ctor(String, String, String, MessageNature)
L_004d: callvirt Void PublishMessage(MessageCenterMessage)
L_0052: br Label8
L_0057: Label1
L_0057: Label2
L_0057: ldarg.0
L_0058: call Int32 get_BonusHealth()
L_005d: stloc.0
L_005e: ldloc.0
L_005f: ldc.i4.0
L_0060: ble Label3
L_0065: ldarg.3
L_0066: ldloc.0
L_0067: call Int32 Min(Int32, Int32)
L_006c: stloc.1
L_006d: ldarg.0
L_006e: ldfld BattleTech.StatCollection statCollection
L_0073: ldarg.1
L_0074: ldarg.2
L_0075: ldstr "BonusHealth"
L_007a: ldc.i4.2
L_007b: ldloc.1
L_007c: ldc.i4.m1
L_007d: ldc.i4.1
L_007e: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0083: pop
L_0084: ldarg.3
L_0085: ldloc.1
L_0086: sub
L_0087: starg.s 3
L_0089: Label3
L_0089: ldarg.3
L_008a: ldc.i4.0
L_008b: ble Label4
L_0090: ldarg.0
L_0091: call Boolean get_IsIncapacitated()
L_0096: brtrue Label5
L_009b: ldarg.0
L_009c: ldarg.s 4
L_009e: ldarg.0
L_009f: call BattleTech.AbstractActor get_ParentActor()
L_00a4: ldarg.s 5
L_00a6: ldarg.s 6
L_00a8: call Void SaveInjuryInfo(BattleTech.DamageType, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.AbstractActor)
L_00ad: Label5
L_00ad: ldarg.0
L_00ae: call BattleTech.StatCollection get_StatCollection()
L_00b3: ldarg.1
L_00b4: ldarg.2
L_00b5: ldstr "Injuries"
L_00ba: ldc.i4.1
L_00bb: ldarg.3
L_00bc: ldc.i4.m1
L_00bd: ldc.i4.1
L_00be: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00c3: pop
L_00c4: ldarg.0
L_00c5: call BattleTech.CombatGameState get_Combat()
L_00ca: brfalse Label6
L_00cf: ldarg.0
L_00d0: call BattleTech.CombatGameState get_Combat()
L_00d5: callvirt MessageCenter get_MessageCenter()
L_00da: ldarg.0
L_00db: call BattleTech.AbstractActor get_ParentActor()
L_00e0: callvirt System.String get_GUID()
L_00e5: ldarg.0
L_00e6: call BattleTech.StatCollection get_StatCollection()
L_00eb: ldstr "Injuries"
L_00f0: callvirt Int32 GetValue[Int32](System.String)
L_00f5: newobj Void .ctor(String, Int32)
L_00fa: callvirt Void PublishMessage(MessageCenterMessage)
L_00ff: Label6
L_00ff: ldsfld HBS.Logging.ILog injuryLogger
L_0104: callvirt Boolean get_IsLogEnabled()
L_0109: brfalse Label7
L_010e: ldsfld HBS.Logging.ILog injuryLogger
L_0113: ldstr "////// POWPOW (>_<*): {0} Injured! ///// Cause: {1} ///// Injuries: {2}"
L_0118: ldarg.0
L_0119: call BattleTech.HumanDescriptionDef get_Description()
L_011e: callvirt System.String get_Name()
L_0123: ldarga.s 4
L_0125: constrained. BattleTech.DamageType
L_012b: callvirt System.String ToString()
L_0130: ldarg.0
L_0131: call Int32 get_Injuries()
L_0136: box System.Int32
L_013b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0140: callvirt Void Log(System.Object)
L_0145: Label4
L_0145: Label7
L_0145: ldarg.0
L_0146: ldarg.1
L_0147: ldarg.2
L_0148: call Void ApplyInjuryAbilities(System.String, Int32)
L_014d: Label8
L_014d: ldarg.0
L_014e: call Void Postfix(BattleTech.Pilot)
L_0153: ret
DONE

### Harmony id=com.joelmeador.WeaponRealizer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from WeaponRealizer.Core.Init(System.String, WeaponRealizer.Settings), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\WeaponRealizer.dll
### At 2019-09-15 05.27.18
### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateRandomCache()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single[][]
L_0000: Local var 5: System.Int32[]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Int32[][]
L_0000: Local var 13: System.Int32[]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Int32[]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32[]
L_0000: Local var 20: System.Int32
L_0000: Local var 21: System.Int32
L_0000: ldarg.0
L_0001: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0006: callvirt Int32 get_Count()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldloc.0
L_000e: newarr System.Single[][]
L_0013: stfld System.Single[][][] randomCache
L_0018: ldarg.0
L_0019: ldloc.0
L_001a: newarr System.Int32[]
L_001f: stfld System.Int32[][] randomCacheValuesUsed
L_0024: ldc.i4.0
L_0025: stloc.1
L_0026: br Label1
L_002b: Label4
L_002b: ldarg.0
L_002c: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0031: ldloc.1
L_0032: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0037: stloc.2
L_0038: ldloc.2
L_0039: callvirt Int32 get_Count()
L_003e: stloc.3
L_003f: ldloc.3
L_0040: newarr System.Single[]
L_0045: stloc.s 4 (System.Single[][])
L_0047: ldloc.3
L_0048: newarr System.Int32
L_004d: stloc.s 5 (System.Int32[])
L_004f: ldc.i4.0
L_0050: stloc.s 6 (System.Int32)
L_0052: br Label2
L_0057: Label3
L_0057: ldloc.2
L_0058: ldloc.s 6 (System.Int32)
L_005a: callvirt BattleTech.Weapon get_Item(Int32)
L_005f: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_0064: stloc.s 7 (System.Int32)
L_0066: ldc.i4.6
L_0067: ldloc.s 7 (System.Int32)
L_0069: mul
L_006a: ldc.i4.2
L_006b: add
L_006c: ldc.i4.5
L_006d: add
L_006e: stloc.s 8 (System.Int32)
L_0070: ldloc.s 4 (System.Single[][])
L_0072: ldloc.s 6 (System.Int32)
L_0074: ldarg.0
L_0075: call BattleTech.AttackDirector get_Director()
L_007a: callvirt BattleTech.CombatGameState get_Combat()
L_007f: callvirt NetworkRandom get_NetworkRandom()
L_0084: ldloc.s 8 (System.Int32)
L_0086: callvirt Single[] GetRandomCache(Int32)
L_008b: stelem.ref
L_008c: ldloc.s 5 (System.Int32[])
L_008e: ldloc.s 6 (System.Int32)
L_0090: ldc.i4.0
L_0091: stelem.i4
L_0092: ldloc.s 6 (System.Int32)
L_0094: ldc.i4.1
L_0095: add
L_0096: stloc.s 6 (System.Int32)
L_0098: Label2
L_0098: ldloc.s 6 (System.Int32)
L_009a: ldloc.3
L_009b: blt Label3
L_00a0: ldarg.0
L_00a1: ldfld System.Single[][][] randomCache
L_00a6: ldloc.1
L_00a7: ldloc.s 4 (System.Single[][])
L_00a9: stelem.ref
L_00aa: ldarg.0
L_00ab: ldfld System.Int32[][] randomCacheValuesUsed
L_00b0: ldloc.1
L_00b1: ldloc.s 5 (System.Int32[])
L_00b3: stelem.ref
L_00b4: ldloc.1
L_00b5: ldc.i4.1
L_00b6: add
L_00b7: stloc.1
L_00b8: Label1
L_00b8: ldloc.1
L_00b9: ldloc.0
L_00ba: blt Label4
L_00bf: ldarg.0
L_00c0: ldloc.0
L_00c1: newarr System.Int32[][]
L_00c6: stfld System.Int32[][][] varianceCache
L_00cb: ldarg.0
L_00cc: ldloc.0
L_00cd: newarr System.Int32[]
L_00d2: stfld System.Int32[][] varianceCacheValuesUsed
L_00d7: ldc.i4.0
L_00d8: stloc.s 9 (System.Int32)
L_00da: br Label5
L_00df: Label12
L_00df: ldarg.0
L_00e0: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_00e5: ldloc.s 9 (System.Int32)
L_00e7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_00ec: stloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00ee: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00f0: callvirt Int32 get_Count()
L_00f5: stloc.s 11 (System.Int32)
L_00f7: ldloc.s 11 (System.Int32)
L_00f9: newarr System.Int32[]
L_00fe: stloc.s 12 (System.Int32[][])
L_0100: ldloc.s 11 (System.Int32)
L_0102: newarr System.Int32
L_0107: stloc.s 13 (System.Int32[])
L_0109: ldc.i4.0
L_010a: stloc.s 14 (System.Int32)
L_010c: br Label6
L_0111: Label11
L_0111: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0113: ldloc.s 14 (System.Int32)
L_0115: callvirt BattleTech.Weapon get_Item(Int32)
L_011a: dup
L_011b: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_0120: stloc.s 15 (System.Int32)
L_0122: callvirt Int32 get_DamageVariance()
L_0127: stloc.s 16 (System.Int32)
L_0129: ldloc.s 15 (System.Int32)
L_012b: newarr System.Int32
L_0130: stloc.s 17 (System.Int32[])
L_0132: ldc.i4.0
L_0133: stloc.s 18 (System.Int32)
L_0135: br Label7
L_013a: Label10
L_013a: ldarg.0
L_013b: call BattleTech.AttackDirector get_Director()
L_0140: callvirt BattleTech.CombatGameState get_Combat()
L_0145: callvirt NetworkRandom get_NetworkRandom()
L_014a: ldloc.s 16 (System.Int32)
L_014c: callvirt Int32[] GetFudgeCache(Int32)
L_0151: stloc.s 19 (System.Int32[])
L_0153: ldc.i4.0
L_0154: stloc.s 20 (System.Int32)
L_0156: ldc.i4.0
L_0157: stloc.s 21 (System.Int32)
L_0159: br Label8
L_015e: Label9
L_015e: ldloc.s 20 (System.Int32)
L_0160: ldloc.s 19 (System.Int32[])
L_0162: ldloc.s 21 (System.Int32)
L_0164: ldelem.i4
L_0165: add
L_0166: stloc.s 20 (System.Int32)
L_0168: ldloc.s 21 (System.Int32)
L_016a: ldc.i4.1
L_016b: add
L_016c: stloc.s 21 (System.Int32)
L_016e: Label8
L_016e: ldloc.s 21 (System.Int32)
L_0170: ldloc.s 16 (System.Int32)
L_0172: blt Label9
L_0177: ldloc.s 17 (System.Int32[])
L_0179: ldloc.s 18 (System.Int32)
L_017b: ldloc.s 20 (System.Int32)
L_017d: stelem.i4
L_017e: ldloc.s 18 (System.Int32)
L_0180: ldc.i4.1
L_0181: add
L_0182: stloc.s 18 (System.Int32)
L_0184: Label7
L_0184: ldloc.s 18 (System.Int32)
L_0186: ldloc.s 15 (System.Int32)
L_0188: blt Label10
L_018d: ldloc.s 12 (System.Int32[][])
L_018f: ldloc.s 14 (System.Int32)
L_0191: ldloc.s 17 (System.Int32[])
L_0193: stelem.ref
L_0194: ldloc.s 13 (System.Int32[])
L_0196: ldloc.s 14 (System.Int32)
L_0198: ldc.i4.0
L_0199: stelem.i4
L_019a: ldloc.s 14 (System.Int32)
L_019c: ldc.i4.1
L_019d: add
L_019e: stloc.s 14 (System.Int32)
L_01a0: Label6
L_01a0: ldloc.s 14 (System.Int32)
L_01a2: ldloc.s 11 (System.Int32)
L_01a4: blt Label11
L_01a9: ldarg.0
L_01aa: ldfld System.Int32[][][] varianceCache
L_01af: ldloc.s 9 (System.Int32)
L_01b1: ldloc.s 12 (System.Int32[][])
L_01b3: stelem.ref
L_01b4: ldarg.0
L_01b5: ldfld System.Int32[][] varianceCacheValuesUsed
L_01ba: ldloc.s 9 (System.Int32)
L_01bc: ldloc.s 13 (System.Int32[])
L_01be: stelem.ref
L_01bf: ldloc.s 9 (System.Int32)
L_01c1: ldc.i4.1
L_01c2: add
L_01c3: stloc.s 9 (System.Int32)
L_01c5: Label5
L_01c5: ldloc.s 9 (System.Int32)
L_01c7: ldloc.0
L_01c8: blt Label12
L_01cd: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.Team
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Boolean
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.String
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg 5
L_001e: ldarg 6
L_0024: ldarg.0
L_0025: call Boolean Prefix(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single, AttackSequence)
L_002a: brfalse Label0
L_002f: ldsfld HBS.Logging.ILog hitLogger
L_0034: callvirt Boolean get_IsLogEnabled()
L_0039: brfalse Label1
L_003e: ldsfld HBS.Logging.ILog hitLogger
L_0043: ldstr "???????? RANDOM HIT ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_0048: ldarg.2
L_0049: box System.Int32
L_004e: ldarg.3
L_004f: box System.Int32
L_0054: call System.String Format(System.String, System.Object, System.Object)
L_0059: callvirt Void Log(System.Object)
L_005e: Label1
L_005e: ldarg.1
L_005f: ldarg.0
L_0060: ldarg.2
L_0061: ldarg.3
L_0062: ldarg.1
L_0063: ldfld System.Int32 numberOfShots
L_0068: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_006d: stfld System.Single[] toHitRolls
L_0072: ldsfld HBS.Logging.ILog hitLogger
L_0077: callvirt Boolean get_IsLogEnabled()
L_007c: brfalse Label2
L_0081: ldsfld HBS.Logging.ILog hitLogger
L_0086: ldstr "???????? RANDOM LOCATION ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_008b: ldarg.2
L_008c: box System.Int32
L_0091: ldarg.3
L_0092: box System.Int32
L_0097: call System.String Format(System.String, System.Object, System.Object)
L_009c: callvirt Void Log(System.Object)
L_00a1: Label2
L_00a1: ldarg.1
L_00a2: ldarg.0
L_00a3: ldarg.2
L_00a4: ldarg.3
L_00a5: ldarg.1
L_00a6: ldfld System.Int32 numberOfShots
L_00ab: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_00b0: stfld System.Single[] locationRolls
L_00b5: ldsfld HBS.Logging.ILog hitLogger
L_00ba: callvirt Boolean get_IsLogEnabled()
L_00bf: brfalse Label3
L_00c4: ldsfld HBS.Logging.ILog hitLogger
L_00c9: ldstr "???????? DODGE ROLLS (GetIndividualHits): Weapon Group: {0} // Weapon: {1}"
L_00ce: ldarg.2
L_00cf: box System.Int32
L_00d4: ldarg.3
L_00d5: box System.Int32
L_00da: call System.String Format(System.String, System.Object, System.Object)
L_00df: callvirt Void Log(System.Object)
L_00e4: Label3
L_00e4: ldarg.1
L_00e5: ldarg.0
L_00e6: ldarg.2
L_00e7: ldarg.3
L_00e8: ldarg.1
L_00e9: ldfld System.Int32 numberOfShots
L_00ee: call Single[] GetRandomNumbers(Int32, Int32, Int32)
L_00f3: stfld System.Single[] dodgeRolls
L_00f8: ldarg.1
L_00f9: ldarg.0
L_00fa: ldarg.2
L_00fb: ldarg.3
L_00fc: ldarg.1
L_00fd: ldfld System.Int32 numberOfShots
L_0102: ldarg.s 4
L_0104: call Int32[] GetVarianceSums(Int32, Int32, Int32, BattleTech.Weapon)
L_0109: stfld System.Int32[] hitVariance
L_010e: ldarg.0
L_010f: ldfld BattleTech.ICombatant chosenTarget
L_0114: isinst BattleTech.AbstractActor
L_0119: stloc.0
L_011a: ldarg.s 4
L_011c: brfalse Label4
L_0121: ldarg.s 4
L_0123: ldfld BattleTech.AbstractActor parent
L_0128: brfalse Label5
L_012d: ldarg.s 4
L_012f: ldfld BattleTech.AbstractActor parent
L_0134: callvirt BattleTech.Team get_team()
L_0139: brtrue Label6
L_013e: Label4
L_013e: Label5
L_013e: ldnull
L_013f: br Label7
L_0144: Label6
L_0144: ldarg.s 4
L_0146: ldfld BattleTech.AbstractActor parent
L_014b: callvirt BattleTech.Team get_team()
L_0150: Label7
L_0150: stloc.1
L_0151: ldarg.0
L_0152: ldfld BattleTech.AbstractActor attacker
L_0157: callvirt Single get_CalledShotBonusMultiplier()
L_015c: stloc.2
L_015d: ldc.i4.0
L_015e: stloc.3
L_015f: br Label8
L_0164: Label21
L_0164: ldarg.0
L_0165: ldarg.1
L_0166: ldfld System.Single[] toHitRolls
L_016b: ldloc.3
L_016c: ldelem.r4
L_016d: ldloc.1
L_016e: call Single GetCorrectedRoll(Single, BattleTech.Team)
L_0173: stloc.s 4 (System.Single)
L_0175: ldloc.s 4 (System.Single)
L_0177: ldarg.s 5
L_0179: cgt.un
L_017b: ldc.i4.0
L_017c: ceq
L_017e: stloc.s 5 (System.Boolean)
L_0180: ldloc.1
L_0181: brfalse Label9
L_0186: ldloc.1
L_0187: ldarg.s 5
L_0189: ldloc.s 5 (System.Boolean)
L_018b: callvirt Void ProcessRandomRoll(Single, Boolean)
L_0190: Label9
L_0190: ldc.i4.0
L_0191: stloc.s 6 (System.Boolean)
L_0193: ldloc.0
L_0194: brfalse Label10
L_0199: ldloc.0
L_019a: ldarg.0
L_019b: ldfld BattleTech.AbstractActor attacker
L_01a0: ldarg.s 4
L_01a2: ldarg.1
L_01a3: ldobj BattleTech.WeaponHitInfo
L_01a8: ldloc.3
L_01a9: ldarg.0
L_01aa: call Boolean get_IsBreachingShot()
L_01af: callvirt Boolean CheckDodge(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.WeaponHitInfo, Int32, Boolean)
L_01b4: stloc.s 6 (System.Boolean)
L_01b6: Label10
L_01b6: ldloc.s 5 (System.Boolean)
L_01b8: ldloc.s 6 (System.Boolean)
L_01ba: and
L_01bb: brfalse Label11
L_01c0: ldarg.1
L_01c1: ldfld System.Boolean[] dodgeSuccesses
L_01c6: ldloc.3
L_01c7: ldc.i4.1
L_01c8: stelem.i1
L_01c9: ldarg.0
L_01ca: ldloc.0
L_01cb: callvirt System.String get_GUID()
L_01d0: call Void FlagAttackContainsDodge(System.String)
L_01d5: br Label12
L_01da: Label11
L_01da: ldarg.1
L_01db: ldfld System.Boolean[] dodgeSuccesses
L_01e0: ldloc.3
L_01e1: ldc.i4.0
L_01e2: stelem.i1
L_01e3: Label12
L_01e3: ldsfld HBS.Logging.ILog attackLogger
L_01e8: callvirt Boolean get_IsLogEnabled()
L_01ed: brfalse Label13
L_01f2: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Roll Value: {3}"
L_01f7: ldc.i4.4
L_01f8: newarr System.Object
L_01fd: dup
L_01fe: ldc.i4.0
L_01ff: ldarg.0
L_0200: ldfld System.Int32 id
L_0205: box System.Int32
L_020a: stelem.ref
L_020b: dup
L_020c: ldc.i4.1
L_020d: ldarg.3
L_020e: box System.Int32
L_0213: stelem.ref
L_0214: dup
L_0215: ldc.i4.2
L_0216: ldloc.3
L_0217: box System.Int32
L_021c: stelem.ref
L_021d: dup
L_021e: ldc.i4.3
L_021f: ldloc.s 4 (System.Single)
L_0221: box System.Single
L_0226: stelem.ref
L_0227: call System.String Format(System.String, System.Object[])
L_022c: stloc.s 7 (System.String)
L_022e: ldsfld HBS.Logging.ILog attackLogger
L_0233: ldloc.s 7 (System.String)
L_0235: callvirt Void Log(System.Object)
L_023a: Label13
L_023a: ldloc.s 5 (System.Boolean)
L_023c: brfalse Label14
L_0241: ldloc.s 6 (System.Boolean)
L_0243: brtrue Label15
L_0248: ldarg.1
L_0249: ldfld System.Int32[] hitLocations
L_024e: ldloc.3
L_024f: ldarg.0
L_0250: ldfld BattleTech.ICombatant chosenTarget
L_0255: ldarg.0
L_0256: ldfld BattleTech.AbstractActor attacker
L_025b: ldarg.0
L_025c: ldfld UnityEngine.Vector3 attackPosition
L_0261: ldarg.1
L_0262: ldfld System.Single[] locationRolls
L_0267: ldloc.3
L_0268: ldelem.r4
L_0269: ldarg.0
L_026a: ldfld System.Int32 calledShotLocation
L_026f: ldloc.2
L_0270: callvirt Int32 GetHitLocation(BattleTech.AbstractActor, UnityEngine.Vector3, Single, Int32, Single)
L_0275: stelem.i4
L_0276: ldloc.2
L_0277: ldc.r4 1
L_027c: ldarg.0
L_027d: call BattleTech.AttackDirector get_Director()
L_0282: callvirt BattleTech.CombatGameState get_Combat()
L_0287: callvirt BattleTech.CombatGameConstants get_Constants()
L_028c: callvirt BattleTech.HitTableConstantsDef get_HitTables()
L_0291: ldfld System.Single CalledShotBonusDegradeLerpFactor
L_0296: call Single Lerp(Single, Single, Single)
L_029b: stloc.2
L_029c: ldsfld HBS.Logging.ILog attackLogger
L_02a1: callvirt Boolean get_IsLogEnabled()
L_02a6: brfalse Label16
L_02ab: ldsfld HBS.Logging.ILog attackLogger
L_02b0: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Hit! Location: {3}"
L_02b5: ldc.i4.4
L_02b6: newarr System.Object
L_02bb: dup
L_02bc: ldc.i4.0
L_02bd: ldarg.0
L_02be: ldfld System.Int32 id
L_02c3: box System.Int32
L_02c8: stelem.ref
L_02c9: dup
L_02ca: ldc.i4.1
L_02cb: ldarg.3
L_02cc: box System.Int32
L_02d1: stelem.ref
L_02d2: dup
L_02d3: ldc.i4.2
L_02d4: ldloc.3
L_02d5: box System.Int32
L_02da: stelem.ref
L_02db: dup
L_02dc: ldc.i4.3
L_02dd: ldarg.1
L_02de: ldfld System.Int32[] hitLocations
L_02e3: ldloc.3
L_02e4: ldelem.i4
L_02e5: box System.Int32
L_02ea: stelem.ref
L_02eb: call System.String Format(System.String, System.Object[])
L_02f0: callvirt Void Log(System.Object)
L_02f5: Label16
L_02f5: ldsfld HBS.Logging.ILog hitminLogger
L_02fa: callvirt Boolean get_IsLogEnabled()
L_02ff: brfalse Label17
L_0304: ldsfld HBS.Logging.ILog hitminLogger
L_0309: ldstr "WEAPON: {0} - SHOT: {1} Hits! ////// HEX VAL {2}"
L_030e: ldarg.s 4
L_0310: callvirt System.String get_Name()
L_0315: ldloc.3
L_0316: box System.Int32
L_031b: ldarg.1
L_031c: ldfld System.Int32[] hitLocations
L_0321: ldloc.3
L_0322: ldelem.i4
L_0323: box System.Int32
L_0328: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_032d: callvirt Void Log(System.Object)
L_0332: Label17
L_0332: ldarg.1
L_0333: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_0338: ldloc.3
L_0339: ldarg.0
L_033a: call BattleTech.AttackDirector get_Director()
L_033f: callvirt BattleTech.CombatGameState get_Combat()
L_0344: callvirt BattleTech.ToHit get_ToHit()
L_0349: ldarg.0
L_034a: ldfld BattleTech.AbstractActor attacker
L_034f: ldarg.0
L_0350: ldfld UnityEngine.Vector3 attackPosition
L_0355: ldarg.s 4
L_0357: ldarg.0
L_0358: ldfld BattleTech.ICombatant chosenTarget
L_035d: ldarg.0
L_035e: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0363: ldarg.0
L_0364: call Boolean get_IsBreachingShot()
L_0369: callvirt BattleTech.AttackImpactQuality GetBlowQuality(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, BattleTech.ICombatant, BattleTech.MeleeAttackType, Boolean)
L_036e: stelem.i4
L_036f: ldarg.0
L_0370: call Void FlagShotHit()
L_0375: br Label18
L_037a: Label14
L_037a: Label15
L_037a: ldarg.1
L_037b: ldfld System.Int32[] hitLocations
L_0380: ldloc.3
L_0381: ldc.i4.0
L_0382: stelem.i4
L_0383: ldsfld HBS.Logging.ILog attackLogger
L_0388: callvirt Boolean get_IsLogEnabled()
L_038d: brfalse Label19
L_0392: ldsfld HBS.Logging.ILog attackLogger
L_0397: ldstr "SEQ:{0}: WEAP:{1} SHOT:{2} Miss!"
L_039c: ldarg.0
L_039d: ldfld System.Int32 id
L_03a2: box System.Int32
L_03a7: ldarg.3
L_03a8: box System.Int32
L_03ad: ldloc.3
L_03ae: box System.Int32
L_03b3: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03b8: callvirt Void Log(System.Object)
L_03bd: Label19
L_03bd: ldsfld HBS.Logging.ILog hitminLogger
L_03c2: callvirt Boolean get_IsLogEnabled()
L_03c7: brfalse Label20
L_03cc: ldsfld HBS.Logging.ILog hitminLogger
L_03d1: ldstr "WEAPON: {0} - SHOT: {1} Misses!"
L_03d6: ldarg.s 4
L_03d8: callvirt System.String get_Name()
L_03dd: ldloc.3
L_03de: box System.Int32
L_03e3: call System.String Format(System.String, System.Object, System.Object)
L_03e8: callvirt Void Log(System.Object)
L_03ed: Label20
L_03ed: ldarg.0
L_03ee: call Void FlagShotMissed()
L_03f3: Label18
L_03f3: ldarg.1
L_03f4: ldfld UnityEngine.Vector3[] hitPositions
L_03f9: ldloc.3
L_03fa: ldarg.0
L_03fb: ldfld BattleTech.ICombatant chosenTarget
L_0400: ldarg.0
L_0401: ldfld BattleTech.AbstractActor attacker
L_0406: ldarg.0
L_0407: ldfld UnityEngine.Vector3 attackPosition
L_040c: ldarg.s 4
L_040e: ldarg.1
L_040f: ldfld System.Int32[] hitLocations
L_0414: ldloc.3
L_0415: ldelema System.Int32
L_041a: ldarg.1
L_041b: ldfld BattleTech.AttackDirection[] attackDirections
L_0420: ldloc.3
L_0421: ldelema BattleTech.AttackDirection
L_0426: ldarg.1
L_0427: ldfld System.String[] secondaryTargetIds
L_042c: ldloc.3
L_042d: ldelema System.String
L_0432: ldarg.1
L_0433: ldfld System.Int32[] secondaryHitLocations
L_0438: ldloc.3
L_0439: ldelema System.Int32
L_043e: callvirt UnityEngine.Vector3 GetImpactPosition(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, Int32 ByRef, BattleTech.AttackDirection ByRef, System.String ByRef, Int32 ByRef)
L_0443: stelem UnityEngine.Vector3
L_0448: ldarg.0
L_0449: ldarg.1
L_044a: ldarg.s 4
L_044c: ldloc.3
L_044d: call Void RefreshHitQualitiesForSecondaryTargets(BattleTech.WeaponHitInfo ByRef, BattleTech.Weapon, Int32)
L_0452: ldloc.3
L_0453: ldc.i4.1
L_0454: add
L_0455: stloc.3
L_0456: Label8
L_0456: ldloc.3
L_0457: ldarg.1
L_0458: ldfld System.Int32 numberOfShots
L_045d: blt Label21
L_0462: Label0
L_0462: ret
DONE

### Patch BattleTech.Weapon, Int32 get_RefireModifier()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: ldfld BattleTech.StatCollection statCollection
L_000c: ldstr "RefireModifier"
L_0011: callvirt Int32 GetValue[Int32](System.String)
L_0016: stloc 0 (System.Int32)
L_0017: ldarg.0
L_0018: ldloca 0 (System.Int32)
L_001a: call Void Postfix(BattleTech.Weapon, Int32 ByRef)
L_001f: ldloc 0 (System.Int32)
L_0020: ret
DONE

### Patch BattleTech.AbstractActor, Void OnActivationEnd(System.String, Int32)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AbstractActor)
L_0006: ldsfld HBS.Logging.ILog attackLogger
L_000b: ldstr "[OnActivationEnd] {1} {2} HasActivatedThisRound {0}"
L_0010: ldarg.0
L_0011: call Boolean get_HasActivatedThisRound()
L_0016: box System.Boolean
L_001b: ldarg.0
L_001c: callvirt System.String get_UnitName()
L_0021: ldarg.0
L_0022: call System.String get_GUID()
L_0027: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_002c: callvirt Void LogDebug(System.Object)
L_0031: ldarg.0
L_0032: call Boolean get_HasActivatedThisRound()
L_0037: brfalse Label1
L_003c: br Label10
L_0041: Label1
L_0041: ldarg.0
L_0042: call Void LogActivationComplete()
L_0047: ldarg.0
L_0048: ldc.i4.1
L_0049: call Void set_HasActivatedThisRound(Boolean)
L_004e: ldarg.0
L_004f: ldc.i4.0
L_0050: call Void set_IsCompletingActivation(Boolean)
L_0055: ldarg.0
L_0056: ldc.i4.0
L_0057: call Void set_IsAttacking(Boolean)
L_005c: ldarg.0
L_005d: callvirt Boolean get_IsProne()
L_0062: brfalse Label2
L_0067: ldarg.0
L_0068: call BattleTech.StatCollection get_StatCollection()
L_006d: ldstr "PhaseModifier"
L_0072: ldc.i4.1
L_0073: ldarg.0
L_0074: ldfld BattleTech.StatCollection statCollection
L_0079: ldstr "PhaseModifierSelf"
L_007e: callvirt Int32 GetValue[Int32](System.String)
L_0083: add
L_0084: callvirt Boolean Set[Int32](System.String, Int32)
L_0089: pop
L_008a: br Label3
L_008f: Label2
L_008f: ldarg.0
L_0090: call BattleTech.StatCollection get_StatCollection()
L_0095: ldstr "PhaseModifier"
L_009a: ldarg.0
L_009b: ldfld BattleTech.StatCollection statCollection
L_00a0: ldstr "PhaseModifierSelf"
L_00a5: callvirt Int32 GetValue[Int32](System.String)
L_00aa: callvirt Boolean Set[Int32](System.String, Int32)
L_00af: pop
L_00b0: Label3
L_00b0: ldarg.0
L_00b1: call BattleTech.StatCollection get_StatCollection()
L_00b6: ldstr "PhaseModifierSelf"
L_00bb: ldc.i4.0
L_00bc: callvirt Boolean Set[Int32](System.String, Int32)
L_00c1: pop
L_00c2: ldarg.0
L_00c3: call Boolean get_HasMovedThisRound()
L_00c8: brtrue Label4
L_00cd: ldarg.0
L_00ce: ldc.r4 0
L_00d3: call Void set_DistMovedThisRound(Single)
L_00d8: ldarg.0
L_00d9: ldc.i4.0
L_00da: call Void set_JumpedLastRound(Boolean)
L_00df: ldarg.0
L_00e0: ldc.i4.0
L_00e1: call Void set_MeleeAttackedLastRound(Boolean)
L_00e6: ldarg.0
L_00e7: ldc.i4.0
L_00e8: call Void set_SprintedLastRound(Boolean)
L_00ed: ldarg.0
L_00ee: ldc.i4.0
L_00ef: call Void set_MovedLastRound(Boolean)
L_00f4: Label4
L_00f4: ldarg.0
L_00f5: callvirt BattleTech.Pilot GetPilot()
L_00fa: stloc.0
L_00fb: ldloc.0
L_00fc: brfalse Label5
L_0101: ldloc.0
L_0102: ldarg.1
L_0103: ldarg.2
L_0104: callvirt Void OnActivationEnd(System.String, Int32)
L_0109: Label5
L_0109: ldarg.0
L_010a: ldc.i4.0
L_010b: call Void ResetPathing(Boolean)
L_0110: ldarg.0
L_0111: call BattleTech.CombatGameState get_Combat()
L_0116: callvirt MessageCenter get_MessageCenter()
L_011b: ldarg.0
L_011c: call System.String get_GUID()
L_0121: newobj Void .ctor(String)
L_0126: callvirt Void PublishMessage(MessageCenterMessage)
L_012b: ldarg.0
L_012c: call BattleTech.CombatGameState get_Combat()
L_0131: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0136: ldarg.0
L_0137: ldarg.0
L_0138: call UnityEngine.Vector3 get_CurrentPosition()
L_013d: ldc.i4.6
L_013e: ldc.i4.1
L_013f: call Void UpdateAurasToActor(System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.EffectTriggerType, Boolean)
L_0144: ldc.i4.0
L_0145: stloc.1
L_0146: br Label6
L_014b: Label7
L_014b: ldarg.0
L_014c: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0151: ldloc.1
L_0152: callvirt BattleTech.Ability get_Item(Int32)
L_0157: ldarg.1
L_0158: ldarg.2
L_0159: callvirt Void OnActivationComplete(System.String, Int32)
L_015e: ldloc.1
L_015f: ldc.i4.1
L_0160: add
L_0161: stloc.1
L_0162: Label6
L_0162: ldloc.1
L_0163: ldarg.0
L_0164: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0169: callvirt Int32 get_Count()
L_016e: blt Label7
L_0173: ldarg.0
L_0174: call BattleTech.Team get_team()
L_0179: ldarg.0
L_017a: call System.String get_GUID()
L_017f: ldc.i4.0
L_0180: callvirt Void OnTurnActorActivationComplete(System.String, Boolean)
L_0185: ldarg.0
L_0186: call BattleTech.CombatGameState get_Combat()
L_018b: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0190: callvirt Boolean get_IsAnyAttackSequenceActive()
L_0195: brfalse Label8
L_019a: ldarg.0
L_019b: call BattleTech.CombatGameState get_Combat()
L_01a0: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01a5: ldarg.0
L_01a6: callvirt System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] GetAllAttackSequencesWithAttacker(BattleTech.ICombatant)
L_01ab: callvirt Int32 get_Count()
L_01b0: ldc.i4.0
L_01b1: ble Label9
L_01b6: ldsfld HBS.Logging.ILog attackLogger
L_01bb: ldstr "ERROR! There is an attack still active on the Attack Director."
L_01c0: callvirt Void LogError(System.Object)
L_01c5: Label8
L_01c5: Label9
L_01c5: ldarg.0
L_01c6: ldarg.0
L_01c7: call BattleTech.CombatGameState get_Combat()
L_01cc: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] GetAllLivingCombatants()
L_01d1: callvirt Void UpdateVisibilityCache(System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01d6: Label10
L_01d6: ret
DONE

### Patch BattleTech.MechComponent, Localize.Text get_UIName()
L_0000: Local var 0: Localize.Text
L_0000: ldnull
L_0001: stloc 0 (Localize.Text)
L_0002: ldarg.0
L_0003: call BattleTech.MechComponentDef get_componentDef()
L_0008: callvirt BattleTech.DescriptionDef get_Description()
L_000d: callvirt System.String get_UIName()
L_0012: call Boolean IsNullOrEmpty(System.String)
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: call BattleTech.MechComponentDef get_componentDef()
L_0022: callvirt BattleTech.DescriptionDef get_Description()
L_0027: callvirt System.String get_UIName()
L_002c: br Label2
L_0031: Label1
L_0031: ldarg.0
L_0032: call System.String get_Name()
L_0037: Label2
L_0037: call System.Object[] Empty[Object]()
L_003c: newobj Void .ctor(String, Object[])
L_0041: stloc 0 (Localize.Text)
L_0042: ldarg.0
L_0043: ldloca 0 (Localize.Text)
L_0045: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_004a: ldloc 0 (Localize.Text)
L_004b: ret
DONE

### Patch BallisticEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldflda System.Int32 hitIndex
L_0006: ldarg.0
L_0007: call Boolean Prefix(Int32 ByRef, BallisticEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld BattleTech.Weapon weapon
L_0018: ldarg.0
L_0019: ldfld BattleTech.Weapon weapon
L_001e: ldfld BattleTech.AbstractActor parent
L_0023: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0028: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_002d: ldarg.0
L_002e: ldfld BattleTech.Weapon weapon
L_0033: callvirt Int32 get_ShotsWhenFired()
L_0038: conv.r4
L_0039: mul
L_003a: callvirt Void OnImpact(Single)
L_003f: ldarg.0
L_0040: call Void OnComplete()
L_0045: Label0
L_0045: ret
DONE

### Patch LaserEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldfld System.String beamStopSFX
L_0006: call Boolean IsNullOrEmpty(System.String)
L_000b: brtrue Label1
L_0010: ldarg.0
L_0011: ldfld System.String beamStopSFX
L_0016: ldarg.0
L_0017: ldfld AkGameObj parentAudioObject
L_001c: ldnull
L_001d: ldnull
L_001e: call UInt32 PostEvent(System.String, AkGameObj, EventCallback, System.Object)
L_0023: pop
L_0024: Label1
L_0024: ldarg.0
L_0025: ldfld UnityEngine.ParticleSystem impactParticles
L_002a: ldnull
L_002b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0030: brfalse Label2
L_0035: ldarg.0
L_0036: ldfld UnityEngine.ParticleSystem impactParticles
L_003b: ldc.i4.1
L_003c: callvirt Void Stop(Boolean)
L_0041: Label2
L_0041: ldarg.0
L_0042: ldfld UnityEngine.LineRenderer beamRenderer
L_0047: ldc.i4.0
L_0048: ldarg.0
L_0049: ldfld UnityEngine.Vector3 startPos
L_004e: callvirt Void SetPosition(Int32, UnityEngine.Vector3)
L_0053: ldarg.0
L_0054: ldfld UnityEngine.LineRenderer beamRenderer
L_0059: ldc.i4.1
L_005a: ldarg.0
L_005b: ldfld UnityEngine.Vector3 startPos
L_0060: callvirt Void SetPosition(Int32, UnityEngine.Vector3)
L_0065: call Boolean get_HasInstance()
L_006a: brfalse Label3
L_006f: call BattleTech.Rendering.VFXRenderer get_Instance()
L_0074: ldfld System.Collections.Generic.List`1[UnityEngine.Renderer] laserRenderers
L_0079: ldarg.0
L_007a: ldfld UnityEngine.LineRenderer beamRenderer
L_007f: callvirt Boolean Contains(UnityEngine.Renderer)
L_0084: brfalse Label4
L_0089: call BattleTech.Rendering.VFXRenderer get_Instance()
L_008e: ldfld System.Collections.Generic.List`1[UnityEngine.Renderer] laserRenderers
L_0093: ldarg.0
L_0094: ldfld UnityEngine.LineRenderer beamRenderer
L_0099: callvirt Boolean Remove(UnityEngine.Renderer)
L_009e: pop
L_009f: ldarg.0
L_00a0: ldfld UnityEngine.LineRenderer beamRenderer
L_00a5: callvirt UnityEngine.GameObject get_gameObject()
L_00aa: ldstr "VFXOnly"
L_00af: call Int32 NameToLayer(System.String)
L_00b4: callvirt Void set_layer(Int32)
L_00b9: Label3
L_00b9: Label4
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.Rendering.BTLight laserLight
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label5
L_00ca: ldarg.0
L_00cb: ldfld BattleTech.Rendering.BTLight laserLight
L_00d0: ldc.r4 0
L_00d5: stfld System.Single intensity
L_00da: Label5
L_00da: ldarg.0
L_00db: ldc.r4 0
L_00e0: stfld System.Single t
L_00e5: ldarg.0
L_00e6: ldc.i4.3
L_00e7: stfld WeaponEffect+WeaponEffectState currentState
L_00ec: ldarg.0
L_00ed: ldflda System.Int32 hitIndex
L_00f2: ldarg.0
L_00f3: call Void Postfix(Int32 ByRef, LaserEffect)
L_00f8: ret
DONE

### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from Sheepy.BattleTechMod.BattleModModule.Patch(System.Reflection.MethodBase, Harmony.HarmonyMethod, Harmony.HarmonyMethod, Harmony.HarmonyMethod), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2019-09-15 05.27.18
### Patch BattleTech.UnityGameInstance, Void InitUserSettings()
L_0000: ldarg.0
L_0001: call BattleTech.GameInstance get_Game()
L_0006: callvirt BattleTech.Save.SaveManager get_SaveManager()
L_000b: call Void SetSaveManager(BattleTech.Save.SaveManager)
L_0010: ldarg.0
L_0011: ldftn Void <InitUserSettings>b__43_0()
L_0017: newobj Void .ctor(Object, IntPtr)
L_001c: call Void LoadUserSettings(System.Action)
L_0021: call Void RunGameStarts()
L_0026: ret
DONE

### Patch BattleTech.SimGameState, Void Init(BattleTech.GameInstance, SimGameType, Boolean, BattleTech.SimGameDifficulty)
L_0000: ldarg.0
L_0001: ldc.i4.1
L_0002: call Boolean HasInitStateBits(InitStates)
L_0007: brfalse Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "SIM GAME STATE ALREADY INITIALZIED"
L_0016: callvirt Void LogError(System.Object)
L_001b: br Label2
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: ldarg.s 4
L_0024: call Void _OnInit(BattleTech.GameInstance, BattleTech.SimGameDifficulty)
L_0029: ldarg.0
L_002a: ldarg.2
L_002b: ldarg.3
L_002c: call Void _OnFirstPlayInit(SimGameType, Boolean)
L_0031: ldarg.0
L_0032: ldc.i4 512
L_0037: call Void SetInitStateBits(InitStates)
L_003c: ldarg.0
L_003d: ldc.i4.1
L_003e: call Void SetInitStateBits(InitStates)
L_0043: Label2
L_0043: call Void RunCampaignStarts()
L_0048: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_Combat(BattleTech.CombatGameState)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: newobj Void .ctor(CombatGameState)
L_000e: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0013: ldarg.0
L_0014: ldarg.0
L_0015: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_001a: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0025: ldnull
L_0026: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_002b: brfalse Label1
L_0030: ldsfld HBS.Logging.ILog uiLogger
L_0035: ldstr "Couldn't find Selection Handler."
L_003a: callvirt Void LogWarning(System.Object)
L_003f: br Label2
L_0044: Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_004a: ldarg.1
L_004b: ldarg.0
L_004c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0051: Label2
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: ldc.i4.1
L_0054: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_0059: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_005e: ldarg.0
L_005f: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0064: ldnull
L_0065: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_006a: brfalse Label3
L_006f: ldsfld HBS.Logging.ILog uiLogger
L_0074: ldstr "Couldn't find MechTray under the CombatHUD."
L_0079: callvirt Void LogWarning(System.Object)
L_007e: br Label4
L_0083: Label3
L_0083: ldarg.0
L_0084: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0089: ldarg.1
L_008a: callvirt MessageCenter get_MessageCenter()
L_008f: ldarg.0
L_0090: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_0095: Label4
L_0095: ldarg.0
L_0096: ldarg.0
L_0097: ldc.i4.1
L_0098: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_009d: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00a2: ldarg.0
L_00a3: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00a8: ldnull
L_00a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ae: brfalse Label5
L_00b3: ldsfld HBS.Logging.ILog uiLogger
L_00b8: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00bd: callvirt Void LogWarning(System.Object)
L_00c2: br Label6
L_00c7: Label5
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00cd: ldarg.1
L_00ce: ldarg.0
L_00cf: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00d4: ldarg.0
L_00d5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00da: ldarg.1
L_00db: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00e0: callvirt Void RefreshTeam(BattleTech.Team)
L_00e5: Label6
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldc.i4.1
L_00e8: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00ed: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_00f2: ldarg.0
L_00f3: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_00f8: ldnull
L_00f9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label7
L_0103: ldsfld HBS.Logging.ILog uiLogger
L_0108: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_010d: callvirt Void LogWarning(System.Object)
L_0112: br Label8
L_0117: Label7
L_0117: ldarg.0
L_0118: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011d: ldnull
L_011e: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0123: ldarg.0
L_0124: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0129: ldarg.1
L_012a: ldarg.0
L_012b: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0130: Label8
L_0130: ldarg.0
L_0131: call BattleTech.UI.UIManager get_Instance()
L_0136: ldstr ""
L_013b: ldc.i4.1
L_013c: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0141: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0146: ldarg.0
L_0147: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_014c: ldnull
L_014d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0152: brfalse Label9
L_0157: ldsfld HBS.Logging.ILog uiLogger
L_015c: ldstr "Error creating PhaseTrack!"
L_0161: callvirt Void LogWarning(System.Object)
L_0166: br Label10
L_016b: Label9
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0171: ldarg.1
L_0172: ldarg.0
L_0173: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0178: Label10
L_0178: ldarg.0
L_0179: call BattleTech.UI.UIManager get_Instance()
L_017e: ldstr ""
L_0183: ldc.i4.1
L_0184: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_0189: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_018e: ldarg.0
L_018f: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0194: ldnull
L_0195: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_019a: brfalse Label11
L_019f: ldsfld HBS.Logging.ILog uiLogger
L_01a4: ldstr "Error creating Turn Event Notification!"
L_01a9: callvirt Void LogError(System.Object)
L_01ae: br Label12
L_01b3: Label11
L_01b3: ldarg.0
L_01b4: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b9: ldarg.1
L_01ba: ldarg.0
L_01bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01c0: Label12
L_01c0: ldarg.1
L_01c1: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01c6: callvirt Boolean IsNetworkGameActive()
L_01cb: brfalse Label13
L_01d0: ldarg.0
L_01d1: call BattleTech.UI.UIManager get_Instance()
L_01d6: ldstr ""
L_01db: ldc.i4.1
L_01dc: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01e1: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01e6: ldarg.0
L_01e7: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01ec: ldnull
L_01ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f2: brfalse Label14
L_01f7: ldsfld HBS.Logging.ILog uiLogger
L_01fc: ldstr "Error creating multiplayer UI!"
L_0201: callvirt Void LogError(System.Object)
L_0206: br Label15
L_020b: Label14
L_020b: ldarg.0
L_020c: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0211: ldarg.0
L_0212: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0217: Label13
L_0217: Label15
L_0217: ldarg.0
L_0218: call BattleTech.UI.UIManager get_Instance()
L_021d: ldstr ""
L_0222: ldc.i4.1
L_0223: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0228: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0233: ldnull
L_0234: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0239: brfalse Label16
L_023e: ldsfld HBS.Logging.ILog uiLogger
L_0243: ldstr "Error creating Targeting Computer!"
L_0248: callvirt Void LogError(System.Object)
L_024d: br Label17
L_0252: Label16
L_0252: ldarg.0
L_0253: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0258: ldarg.0
L_0259: callvirt Void Init(BattleTech.UI.CombatHUD)
L_025e: Label17
L_025e: ldarg.0
L_025f: call BattleTech.UI.UIManager get_Instance()
L_0264: ldstr ""
L_0269: ldc.i4.1
L_026a: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_026f: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_027a: ldnull
L_027b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0280: brfalse Label18
L_0285: ldsfld HBS.Logging.ILog uiLogger
L_028a: ldstr "Error creating Called Shot Popup!"
L_028f: callvirt Void LogError(System.Object)
L_0294: br Label19
L_0299: Label18
L_0299: ldarg.0
L_029a: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029f: ldarg.0
L_02a0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02a5: Label19
L_02a5: ldarg.0
L_02a6: call BattleTech.UI.UIManager get_Instance()
L_02ab: ldstr ""
L_02b0: ldc.i4.1
L_02b1: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02b6: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02c1: ldnull
L_02c2: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02c7: brfalse Label20
L_02cc: ldsfld HBS.Logging.ILog uiLogger
L_02d1: ldstr "Error creating Attack Mode Selector!"
L_02d6: callvirt Void LogError(System.Object)
L_02db: br Label21
L_02e0: Label20
L_02e0: ldarg.0
L_02e1: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e6: ldarg.1
L_02e7: ldarg.0
L_02e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02ed: ldarg.0
L_02ee: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f3: ldc.i4.0
L_02f4: callvirt Void set_Visible(Boolean)
L_02f9: Label21
L_02f9: ldarg.0
L_02fa: ldarg.0
L_02fb: call UnityEngine.GameObject get_gameObject()
L_0300: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0305: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_030a: ldarg.0
L_030b: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0310: ldnull
L_0311: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0316: brfalse Label22
L_031b: ldsfld HBS.Logging.ILog uiLogger
L_0320: ldstr "Error finding InWorldElementMgr!"
L_0325: callvirt Void LogError(System.Object)
L_032a: br Label23
L_032f: Label22
L_032f: ldarg.0
L_0330: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0335: ldarg.1
L_0336: ldarg.0
L_0337: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_033c: Label23
L_033c: ldarg.0
L_033d: call BattleTech.UI.UIManager get_Instance()
L_0342: ldstr ""
L_0347: ldc.i4.1
L_0348: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_034d: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0352: ldarg.0
L_0353: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0358: ldnull
L_0359: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035e: brfalse Label24
L_0363: ldsfld HBS.Logging.ILog uiLogger
L_0368: ldstr "Error creating Objective Status Notification!"
L_036d: callvirt Void LogError(System.Object)
L_0372: Label24
L_0372: ldarg.0
L_0373: call BattleTech.UI.UIManager get_Instance()
L_0378: ldstr ""
L_037d: ldc.i4.1
L_037e: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0383: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0388: ldarg.0
L_0389: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_038e: ldnull
L_038f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0394: brfalse Label25
L_0399: ldsfld HBS.Logging.ILog uiLogger
L_039e: ldstr "Error creating Objective List!"
L_03a3: callvirt Void LogError(System.Object)
L_03a8: br Label26
L_03ad: Label25
L_03ad: ldarg.0
L_03ae: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b3: ldarg.1
L_03b4: ldarg.0
L_03b5: ldarg.0
L_03b6: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03c0: Label26
L_03c0: call BattleTech.UI.UIManager get_Instance()
L_03c5: ldstr ""
L_03ca: ldc.i4.1
L_03cb: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03d0: stloc.0
L_03d1: ldloc.0
L_03d2: callvirt Void Init()
L_03d7: ldloc.0
L_03d8: ldc.i4.0
L_03d9: callvirt Void set_Visible(Boolean)
L_03de: ldarg.0
L_03df: call BattleTech.UI.UIManager get_Instance()
L_03e4: ldstr ""
L_03e9: ldc.i4.1
L_03ea: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_03ef: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_03f4: ldarg.0
L_03f5: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_03fa: ldnull
L_03fb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0400: brfalse Label27
L_0405: ldsfld HBS.Logging.ILog uiLogger
L_040a: ldstr "Error creating DialogSideStack!"
L_040f: callvirt Void LogError(System.Object)
L_0414: br Label28
L_0419: Label27
L_0419: ldarg.0
L_041a: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041f: ldarg.1
L_0420: ldarg.0
L_0421: ldloc.0
L_0422: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0427: Label28
L_0427: ldarg.0
L_0428: call BattleTech.UI.UIManager get_Instance()
L_042d: ldstr ""
L_0432: ldc.i4.1
L_0433: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0438: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_043d: ldarg.0
L_043e: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0443: ldnull
L_0444: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0449: brfalse Label29
L_044e: ldsfld HBS.Logging.ILog uiLogger
L_0453: ldstr "Error creating DialogWidget!"
L_0458: callvirt Void LogError(System.Object)
L_045d: br Label30
L_0462: Label29
L_0462: ldarg.0
L_0463: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0468: ldarg.1
L_0469: callvirt Void Init(BattleTech.CombatGameState)
L_046e: Label30
L_046e: ldarg.0
L_046f: call BattleTech.UI.UIManager get_Instance()
L_0474: ldstr ""
L_0479: ldc.i4.1
L_047a: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_047f: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0484: ldarg.0
L_0485: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_048a: ldnull
L_048b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0490: brfalse Label31
L_0495: ldsfld HBS.Logging.ILog uiLogger
L_049a: ldstr "Error creating RetreatEscMenu!"
L_049f: callvirt Void LogError(System.Object)
L_04a4: br Label32
L_04a9: Label31
L_04a9: ldarg.0
L_04aa: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04af: ldarg.1
L_04b0: ldarg.0
L_04b1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04b6: Label32
L_04b6: ldarg.0
L_04b7: call BattleTech.UI.UIManager get_Instance()
L_04bc: ldstr ""
L_04c1: ldc.i4.1
L_04c2: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04c7: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04cc: ldarg.0
L_04cd: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04d2: ldnull
L_04d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d8: brfalse Label33
L_04dd: ldsfld HBS.Logging.ILog uiLogger
L_04e2: ldstr "Error creating mission end screen!"
L_04e7: callvirt Void LogError(System.Object)
L_04ec: br Label34
L_04f1: Label33
L_04f1: ldarg.0
L_04f2: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f7: callvirt Void Init()
L_04fc: Label34
L_04fc: ldarg.0
L_04fd: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0502: ldnull
L_0503: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0508: brfalse Label35
L_050d: ldarg.0
L_050e: call BattleTech.UI.UIManager get_Instance()
L_0513: ldstr ""
L_0518: ldc.i4.1
L_0519: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_051e: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0523: ldarg.0
L_0524: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0529: ldnull
L_052a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_052f: brfalse Label36
L_0534: ldsfld HBS.Logging.ILog uiLogger
L_0539: ldstr "Error creating combat chat module"
L_053e: callvirt Void LogError(System.Object)
L_0543: br Label37
L_0548: Label36
L_0548: ldarg.0
L_0549: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054e: callvirt Void CombatInit()
L_0553: ldloc.0
L_0554: callvirt Void BumpUp()
L_0559: Label35
L_0559: Label37
L_0559: ldarg.0
L_055a: call BattleTech.UI.UIManager get_Instance()
L_055f: ldstr "DebugHUD"
L_0564: ldc.i4.1
L_0565: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_056a: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_056f: ldarg.0
L_0570: call BattleTech.UI.DebugHUD get_debugHUD()
L_0575: ldnull
L_0576: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_057b: brfalse Label38
L_0580: ldsfld HBS.Logging.ILog uiLogger
L_0585: ldstr "Error creating combat debug hud"
L_058a: callvirt Void LogError(System.Object)
L_058f: br Label39
L_0594: Label38
L_0594: ldarg.0
L_0595: call BattleTech.UI.DebugHUD get_debugHUD()
L_059a: ldarg.1
L_059b: ldarg.0
L_059c: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05a1: Label39
L_05a1: newobj Void .ctor()
L_05a6: stloc.1
L_05a7: ldarg.0
L_05a8: ldc.i4.1
L_05a9: ldloc.1
L_05aa: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05af: ldc.i4.0
L_05b0: stloc.2
L_05b1: br Label40
L_05b6: Label42
L_05b6: ldloc.1
L_05b7: ldloc.2
L_05b8: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05bd: callvirt Boolean get_IsInitialized()
L_05c2: brtrue Label41
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: ldarg.0
L_05cf: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05d4: Label41
L_05d4: ldloc.2
L_05d5: ldc.i4.1
L_05d6: add
L_05d7: stloc.2
L_05d8: Label40
L_05d8: ldloc.2
L_05d9: ldloc.1
L_05da: callvirt Int32 get_Count()
L_05df: blt Label42
L_05e4: ldarg.0
L_05e5: ldfld BattleTech.UI.UIManager uiManager
L_05ea: ldc.i4.1
L_05eb: callvirt Void SetUIRootInteractable(Boolean)
L_05f0: ldarg.1
L_05f1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_05f6: callvirt Int32 get_CurrentRound()
L_05fb: brfalse Label43
L_0600: ldarg.0
L_0601: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0606: ldarg.1
L_0607: callvirt BattleTech.TurnDirector get_TurnDirector()
L_060c: callvirt Int32 get_CurrentRound()
L_0611: callvirt Void SetRoundFromLoad(Int32)
L_0616: Label43
L_0616: ldarg.0
L_0617: ldc.i4.1
L_0618: call Void SubscribeToMessages(Boolean)
L_061d: ldarg.0
L_061e: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0623: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnCombatGameDestroyed()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void SubscribeToMessages(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_000d: ldnull
L_000e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0013: brfalse Label1
L_0018: ldarg.0
L_0019: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_001e: ldc.i4.0
L_001f: callvirt Void set_ListeningForDisconnects(Boolean)
L_0024: Label1
L_0024: ldarg.0
L_0025: call BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_002a: callvirt Void OnCombatGameDestroyed()
L_002f: ldarg.0
L_0030: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0035: callvirt Void OnCombatGameDestroyed()
L_003a: ldarg.0
L_003b: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_0040: callvirt Void OnCombatGameDestroyed()
L_0045: ldarg.0
L_0046: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_004b: callvirt Void OnCombatGameDestroyed()
L_0050: ldarg.0
L_0051: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0056: callvirt Void OnCombatGameDestroyed()
L_005b: ldarg.0
L_005c: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0061: callvirt Void OnCombatGameDestroyed()
L_0066: ldarg.0
L_0067: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_006c: callvirt Void OnCombatGameDestroyed()
L_0071: ldarg.0
L_0072: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0077: callvirt Void OnCombatGameDestroyed()
L_007c: ldarg.0
L_007d: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_0082: callvirt Void OnCombatGameDestroyed()
L_0087: ldarg.0
L_0088: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_008d: callvirt Void OnCombatGameDestroyed()
L_0092: ldarg.0
L_0093: call BattleTech.UI.DebugHUD get_debugHUD()
L_0098: callvirt Void OnCombatGameDestroyed()
L_009d: ldnull
L_009e: stsfld BattleTech.UI.ColorOverrides moraleButtonOverrides
L_00a3: ldnull
L_00a4: stsfld BattleTech.UI.ColorOverrides ejectButtonOverrides
L_00a9: ldarg.0
L_00aa: call Void RunCombatEnds(BattleTech.UI.CombatHUD)
L_00af: ret
DONE

### Harmony id=io.mission.modrepuation, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CACMain.Core.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2019-09-15 05.27.19
### Patch AIUtil, Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.Mech
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: ldfld BattleTech.Weapon MeleeWeapon
L_000d: callvirt Void Add(BattleTech.Weapon)
L_0012: ldarg.0
L_0013: stloc.1
L_0014: ldloc.1
L_0015: brtrue Label1
L_001a: ldc.r4 0
L_001f: br Label6
L_0024: Label1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label2
L_002b: Label5
L_002b: ldloc.1
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0031: ldloc.2
L_0032: callvirt BattleTech.Weapon get_Item(Int32)
L_0037: stloc.3
L_0038: ldloc.3
L_0039: callvirt Boolean get_CanFire()
L_003e: brfalse Label3
L_0043: ldloc.3
L_0044: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0049: ldc.i4.4
L_004a: bne.un Label4
L_004f: ldloc.0
L_0050: ldloc.3
L_0051: callvirt Void Add(BattleTech.Weapon)
L_0056: Label3
L_0056: Label4
L_0056: ldloc.2
L_0057: ldc.i4.1
L_0058: add
L_0059: stloc.2
L_005a: Label2
L_005a: ldloc.2
L_005b: ldloc.1
L_005c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0061: callvirt Int32 get_Count()
L_0066: blt Label5
L_006b: ldarg.0
L_006c: ldc.i4.1
L_006d: ldloc.0
L_006e: ldarg.1
L_006f: ldarg.2
L_0070: ldarg.3
L_0071: ldarg.s 4
L_0073: ldarg.s 5
L_0075: call Single ExpectedDamageForAttack(BattleTech.AbstractActor, AttackType, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_007a: Label6
L_007a: ret
DONE

### Patch AttackEvaluator, Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 10: BattleTech.Mech
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]][]
L_0000: Local var 13: System.Collections.Generic.List`1[[AttackEvaluator+AttackEvaluation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Weapon
L_0000: Local var 19: System.Boolean
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: UnityEngine.Vector3
L_0000: Local var 23: System.Int32
L_0000: Local var 24: System.String
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.Single
L_0000: Local var 27: System.Single
L_0000: Local var 28: System.Single
L_0000: Local var 29: System.Single
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: Local var 32: BattleTech.Weapon
L_0000: Local var 33: System.Int32
L_0000: Local var 34: AttackEvaluator+AttackEvaluation
L_0000: Local var 35: AIUtil+AttackType
L_0000: Local var 36: System.Int32
L_0000: Local var 37: AttackEvaluator+AttackEvaluation
L_0000: Local var 38: System.Boolean
L_0000: Local var 39: System.Boolean
L_0000: Local var 40: System.Boolean
L_0000: Local var 41: BattleTech.AbstractActor
L_0000: Local var 42: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 43: BattleTech.Weapon
L_0000: Local var 44: BehaviorTreeResults
L_0000: Local var 45: MultiTargetAttackOrderInfo
L_0000: Local var 46: CalledShotAttackOrderInfo
L_0000: Local var 47: CalledShotAttackOrderInfo
L_0000: Local var 48: AttackOrderInfo
L_0000: Local var 49: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 50: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.r4 3.402823E+38
L_000b: stloc.1
L_000c: ldc.r4 0
L_0011: stloc.2
L_0012: ldarg.0
L_0013: isinst BattleTech.Mech
L_0018: stloc.3
L_0019: ldloc.3
L_001a: brfalse Label1
L_001f: ldloc.3
L_0020: callvirt Int32 get_CurrentHeat()
L_0025: conv.r4
L_0026: stloc.0
L_0027: ldloc.3
L_0028: call Single GetAcceptableHeatLevelForMech(BattleTech.Mech)
L_002d: stloc.1
L_002e: ldloc.3
L_002f: call Single LegDamageLevel(BattleTech.Mech)
L_0034: stloc.2
L_0035: Label1
L_0035: ldarg.0
L_0036: ldstr "heat level: "
L_003b: ldloc.0
L_003c: box System.Single
L_0041: call System.String Concat(System.Object, System.Object)
L_0046: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_004b: ldarg.0
L_004c: ldstr "acceptable heat: "
L_0051: ldloc.1
L_0052: box System.Single
L_0057: call System.String Concat(System.Object, System.Object)
L_005c: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0061: ldarg.0
L_0062: ldfld BehaviorTree BehaviorTree
L_0067: ldc.i4.s 40
L_0069: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_006e: callvirt Single get_FloatVal()
L_0073: stloc.s 4 (System.Single)
L_0075: ldarg.0
L_0076: ldfld BehaviorTree BehaviorTree
L_007b: ldc.i4.s 42
L_007d: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0082: callvirt Single get_FloatVal()
L_0087: stloc.s 5 (System.Single)
L_0089: ldarg.0
L_008a: ldfld BehaviorTree BehaviorTree
L_008f: ldc.i4.1
L_0090: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0095: callvirt Single get_FloatVal()
L_009a: stloc.s 6 (System.Single)
L_009c: ldarg.0
L_009d: ldfld BehaviorTree BehaviorTree
L_00a2: ldfld System.Single weaponToHitThreshold
L_00a7: stloc.s 7 (System.Single)
L_00a9: ldarg.0
L_00aa: ldarg.1
L_00ab: call Single MaxDamageLevel(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00b0: stloc.s 8 (System.Single)
L_00b2: ldarg.0
L_00b3: ldc.i4.4
L_00b4: newarr System.Object
L_00b9: dup
L_00ba: ldc.i4.0
L_00bb: ldstr "Evaluating attack target "
L_00c0: stelem.ref
L_00c1: dup
L_00c2: ldc.i4.1
L_00c3: ldarg.1
L_00c4: callvirt System.String get_DisplayName()
L_00c9: stelem.ref
L_00ca: dup
L_00cb: ldc.i4.2
L_00cc: ldstr " at "
L_00d1: stelem.ref
L_00d2: dup
L_00d3: ldc.i4.3
L_00d4: ldarg.1
L_00d5: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00da: box UnityEngine.Vector3
L_00df: stelem.ref
L_00e0: call System.String Concat(System.Object[])
L_00e5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_00ea: ldarg.0
L_00eb: ldarg.1
L_00ec: call Boolean UnitHasVisibilityToTargetFromCurrentPosition(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00f1: brtrue Label2
L_00f6: ldarg.s 4
L_00f8: ldc.i4.0
L_00f9: call BehaviorTreeResults BehaviorTreeResultsFromBoolean(Boolean)
L_00fe: stind.ref
L_00ff: ldc.r4 0
L_0104: br Label98
L_0109: Label2
L_0109: ldc.i4.3
L_010a: newarr System.Collections.Generic.List`1[BattleTech.Weapon]
L_010f: dup
L_0110: ldc.i4.0
L_0111: newobj Void .ctor()
L_0116: stelem.ref
L_0117: dup
L_0118: ldc.i4.1
L_0119: newobj Void .ctor()
L_011e: stelem.ref
L_011f: dup
L_0120: ldc.i4.2
L_0121: newobj Void .ctor()
L_0126: stelem.ref
L_0127: stloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0129: ldc.i4.0
L_012a: stloc.s 17 (System.Int32)
L_012c: br Label3
L_0131: Label9
L_0131: ldarg.0
L_0132: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0137: ldloc.s 17 (System.Int32)
L_0139: callvirt BattleTech.Weapon get_Item(Int32)
L_013e: stloc.s 18 (BattleTech.Weapon)
L_0140: ldarg.0
L_0141: ldstr "Considering Weapon "
L_0146: ldloc.s 18 (BattleTech.Weapon)
L_0148: callvirt System.String get_Name()
L_014d: call System.String Concat(System.String, System.String)
L_0152: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0157: ldloc.s 18 (BattleTech.Weapon)
L_0159: callvirt Boolean get_CanFire()
L_015e: brtrue Label4
L_0163: ldarg.0
L_0164: ldstr "disregarding because not can fire"
L_0169: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_016e: br Label5
L_0173: Label4
L_0173: ldloc.s 18 (BattleTech.Weapon)
L_0175: ldarg.1
L_0176: ldarg.0
L_0177: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_017c: ldarg.0
L_017d: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0182: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0187: stloc.s 19 (System.Boolean)
L_0189: ldarg.0
L_018a: callvirt BattleTech.CombatGameState get_Combat()
L_018f: callvirt LOFCache get_LOFCache()
L_0194: ldarg.0
L_0195: ldarg.1
L_0196: ldloc.s 18 (BattleTech.Weapon)
L_0198: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_019d: stloc.s 20 (System.Boolean)
L_019f: ldarg.1
L_01a0: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a5: ldarg.0
L_01a6: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01ab: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_01b0: stloc.s 22 (UnityEngine.Vector3)
L_01b2: ldloca.s 22 (UnityEngine.Vector3)
L_01b4: call Single get_magnitude()
L_01b9: ldloc.s 18 (BattleTech.Weapon)
L_01bb: callvirt Single get_MaxRange()
L_01c0: cgt.un
L_01c2: ldc.i4.0
L_01c3: ceq
L_01c5: stloc.s 21 (System.Boolean)
L_01c7: ldarg.0
L_01c8: ldstr "will fire at target? "
L_01cd: ldloca.s 19 (System.Boolean)
L_01cf: call System.String ToString()
L_01d4: call System.String Concat(System.String, System.String)
L_01d9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_01de: ldarg.0
L_01df: ldstr "hasLOF? "
L_01e4: ldloca.s 20 (System.Boolean)
L_01e6: call System.String ToString()
L_01eb: call System.String Concat(System.String, System.String)
L_01f0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_01f5: ldarg.0
L_01f6: ldstr "inRange? "
L_01fb: ldloca.s 21 (System.Boolean)
L_01fd: call System.String ToString()
L_0202: call System.String Concat(System.String, System.String)
L_0207: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_020c: ldloc.s 19 (System.Boolean)
L_020e: ldloc.s 20 (System.Boolean)
L_0210: and
L_0211: ldloc.s 21 (System.Boolean)
L_0213: and
L_0214: brfalse Label6
L_0219: ldarg.0
L_021a: ldstr "willFireAtTarget and LOF"
L_021f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0224: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0226: ldc.i4.0
L_0227: ldelem.ref
L_0228: ldloc.s 18 (BattleTech.Weapon)
L_022a: callvirt Void Add(BattleTech.Weapon)
L_022f: br Label7
L_0234: Label6
L_0234: ldarg.0
L_0235: ldstr "not WFAT or hasLOF or inRange"
L_023a: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_023f: Label7
L_023f: ldloc.s 18 (BattleTech.Weapon)
L_0241: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0246: ldc.i4.4
L_0247: bne.un Label8
L_024c: ldarg.0
L_024d: ldstr "adding to melee and DFA"
L_0252: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0257: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0259: ldc.i4.1
L_025a: ldelem.ref
L_025b: ldloc.s 18 (BattleTech.Weapon)
L_025d: callvirt Void Add(BattleTech.Weapon)
L_0262: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0264: ldc.i4.2
L_0265: ldelem.ref
L_0266: ldloc.s 18 (BattleTech.Weapon)
L_0268: callvirt Void Add(BattleTech.Weapon)
L_026d: Label5
L_026d: Label8
L_026d: ldloc.s 17 (System.Int32)
L_026f: ldc.i4.1
L_0270: add
L_0271: stloc.s 17 (System.Int32)
L_0273: Label3
L_0273: ldloc.s 17 (System.Int32)
L_0275: ldarg.0
L_0276: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_027b: callvirt Int32 get_Count()
L_0280: blt Label9
L_0285: ldarg.1
L_0286: isinst BattleTech.Mech
L_028b: stloc.s 10 (BattleTech.Mech)
L_028d: ldloc.s 10 (BattleTech.Mech)
L_028f: brfalse Label10
L_0294: ldloc.s 10 (BattleTech.Mech)
L_0296: callvirt Boolean get_IsEvasive()
L_029b: br Label11
L_02a0: Label10
L_02a0: ldc.i4.0
L_02a1: Label11
L_02a1: stloc.s 11 (System.Boolean)
L_02a3: ldc.i4.3
L_02a4: newarr System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]]
L_02a9: stloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_02ab: ldc.i4.0
L_02ac: stloc.s 23 (System.Int32)
L_02ae: br Label12
L_02b3: Label44
L_02b3: ldarg.0
L_02b4: ldstr "considering attack type "
L_02b9: ldloc.s 23 (System.Int32)
L_02bb: box System.Int32
L_02c0: call System.String Concat(System.Object, System.Object)
L_02c5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02ca: ldloc.3
L_02cb: brtrue Label13
L_02d0: ldloc.s 23 (System.Int32)
L_02d2: ldc.i4.1
L_02d3: beq Label14
L_02d8: ldloc.s 23 (System.Int32)
L_02da: ldc.i4.2
L_02db: bne.un Label15
L_02e0: Label14
L_02e0: ldarg.0
L_02e1: ldstr "this unit can't melee or dfa"
L_02e6: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02eb: br Label16
L_02f0: Label13
L_02f0: Label15
L_02f0: ldloc.s 23 (System.Int32)
L_02f2: ldc.i4.1
L_02f3: bne.un Label17
L_02f8: ldloc.3
L_02f9: ldarg.1
L_02fa: ldloca.s 24 (System.String)
L_02fc: callvirt Boolean CanEngageTarget(BattleTech.ICombatant, System.String ByRef)
L_0301: brtrue Label18
L_0306: ldarg.0
L_0307: ldstr "unit.CanEngageTarget returned FALSE because: "
L_030c: ldloc.s 24 (System.String)
L_030e: call System.String Concat(System.String, System.String)
L_0313: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0318: br Label19
L_031d: Label17
L_031d: Label18
L_031d: ldloc.s 23 (System.Int32)
L_031f: ldc.i4.1
L_0320: bne.un Label20
L_0325: ldloc.s 10 (BattleTech.Mech)
L_0327: brfalse Label21
L_032c: ldloc.s 10 (BattleTech.Mech)
L_032e: ldarg.0
L_032f: ldloc.s 10 (BattleTech.Mech)
L_0331: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0336: ldloc.3
L_0337: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_033c: ldc.i4.0
L_033d: ldarg.0
L_033e: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0343: stloc.s 25 (System.Single)
L_0345: ldloc.3
L_0346: ldarg.1
L_0347: ldloc.3
L_0348: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_034d: ldarg.1
L_034e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0353: ldc.i4.0
L_0354: ldarg.0
L_0355: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_035a: stloc.s 26 (System.Single)
L_035c: ldloc.s 26 (System.Single)
L_035e: ldc.r4 0
L_0363: bgt.un Label22
L_0368: ldarg.0
L_0369: ldstr "expected damage: "
L_036e: ldloc.s 26 (System.Single)
L_0370: box System.Single
L_0375: call System.String Concat(System.Object, System.Object)
L_037a: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_037f: br Label23
L_0384: Label22
L_0384: ldloc.s 25 (System.Single)
L_0386: ldloc.s 26 (System.Single)
L_0388: div
L_0389: stloc.s 27 (System.Single)
L_038b: ldarg.0
L_038c: ldfld BehaviorTree BehaviorTree
L_0391: ldc.i4.s 56
L_0393: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0398: callvirt Single get_FloatVal()
L_039d: stloc.s 28 (System.Single)
L_039f: ldloc.s 27 (System.Single)
L_03a1: ldloc.s 28 (System.Single)
L_03a3: ble.un Label24
L_03a8: ldarg.0
L_03a9: ldc.i4.4
L_03aa: newarr System.Object
L_03af: dup
L_03b0: ldc.i4.0
L_03b1: ldstr "melee ratio too high: "
L_03b6: stelem.ref
L_03b7: dup
L_03b8: ldc.i4.1
L_03b9: ldloc.s 27 (System.Single)
L_03bb: box System.Single
L_03c0: stelem.ref
L_03c1: dup
L_03c2: ldc.i4.2
L_03c3: ldstr " vs "
L_03c8: stelem.ref
L_03c9: dup
L_03ca: ldc.i4.3
L_03cb: ldloc.s 28 (System.Single)
L_03cd: box System.Single
L_03d2: stelem.ref
L_03d3: call System.String Concat(System.Object[])
L_03d8: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_03dd: br Label25
L_03e2: Label20
L_03e2: Label21
L_03e2: Label24
L_03e2: ldloc.s 23 (System.Int32)
L_03e4: ldc.i4.2
L_03e5: bne.un Label26
L_03ea: ldarg.0
L_03eb: ldarg.1
L_03ec: call Boolean IsDFAAcceptable(BattleTech.AbstractActor, BattleTech.ICombatant)
L_03f1: brtrue Label27
L_03f6: ldarg.0
L_03f7: ldstr "unit cannot DFA"
L_03fc: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0401: br Label28
L_0406: Label26
L_0406: Label27
L_0406: ldloc.s 11 (System.Boolean)
L_0408: brfalse Label29
L_040d: ldarg.0
L_040e: callvirt BattleTech.UnitType get_UnitType()
L_0413: ldc.i4.1
L_0414: bne.un Label30
L_0419: ldarg.0
L_041a: ldfld BehaviorTree BehaviorTree
L_041f: ldc.i4 179
L_0424: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0429: callvirt Single get_FloatVal()
L_042e: ldc.r4 100
L_0433: div
L_0434: stloc.s 29 (System.Single)
L_0436: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0438: ldloc.s 23 (System.Int32)
L_043a: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_043c: ldloc.s 23 (System.Int32)
L_043e: ldelem.ref
L_043f: ldloc.s 29 (System.Single)
L_0441: ldarg.1
L_0442: ldarg.0
L_0443: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0448: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_044d: stelem.ref
L_044e: br Label31
L_0453: Label29
L_0453: Label30
L_0453: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0455: ldloc.s 23 (System.Int32)
L_0457: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0459: ldloc.s 23 (System.Int32)
L_045b: ldelem.ref
L_045c: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSets(System.Collections.Generic.List`1[BattleTech.Weapon])
L_0461: stelem.ref
L_0462: Label31
L_0462: ldloc.3
L_0463: brfalse Label32
L_0468: ldloc.s 23 (System.Int32)
L_046a: ldc.i4.1
L_046b: beq Label33
L_0470: ldloc.s 23 (System.Int32)
L_0472: ldc.i4.2
L_0473: bne.un Label34
L_0478: Label33
L_0478: ldc.i4.0
L_0479: stloc.s 30 (System.Int32)
L_047b: br Label35
L_0480: Label43
L_0480: ldloc.s 23 (System.Int32)
L_0482: ldc.i4.1
L_0483: bne.un Label36
L_0488: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_048a: ldloc.s 23 (System.Int32)
L_048c: ldelem.ref
L_048d: ldloc.s 30 (System.Int32)
L_048f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0494: ldloc.3
L_0495: ldfld BattleTech.Weapon MeleeWeapon
L_049a: callvirt Void Add(BattleTech.Weapon)
L_049f: Label36
L_049f: ldloc.s 23 (System.Int32)
L_04a1: ldc.i4.2
L_04a2: bne.un Label37
L_04a7: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04a9: ldloc.s 23 (System.Int32)
L_04ab: ldelem.ref
L_04ac: ldloc.s 30 (System.Int32)
L_04ae: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04b3: ldloc.3
L_04b4: ldfld BattleTech.Weapon DFAWeapon
L_04b9: callvirt Void Add(BattleTech.Weapon)
L_04be: Label37
L_04be: ldc.i4.0
L_04bf: stloc.s 31 (System.Int32)
L_04c1: br Label38
L_04c6: Label42
L_04c6: ldloc.3
L_04c7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_04cc: ldloc.s 31 (System.Int32)
L_04ce: callvirt BattleTech.Weapon get_Item(Int32)
L_04d3: stloc.s 32 (BattleTech.Weapon)
L_04d5: ldloc.s 32 (BattleTech.Weapon)
L_04d7: callvirt Boolean get_CanFire()
L_04dc: brfalse Label39
L_04e1: ldloc.s 32 (BattleTech.Weapon)
L_04e3: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_04e8: ldc.i4.4
L_04e9: bne.un Label40
L_04ee: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04f0: ldloc.s 23 (System.Int32)
L_04f2: ldelem.ref
L_04f3: ldloc.s 30 (System.Int32)
L_04f5: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04fa: ldloc.s 32 (BattleTech.Weapon)
L_04fc: callvirt Boolean Contains(BattleTech.Weapon)
L_0501: brtrue Label41
L_0506: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0508: ldloc.s 23 (System.Int32)
L_050a: ldelem.ref
L_050b: ldloc.s 30 (System.Int32)
L_050d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0512: ldloc.s 32 (BattleTech.Weapon)
L_0514: callvirt Void Add(BattleTech.Weapon)
L_0519: Label39
L_0519: Label40
L_0519: Label41
L_0519: ldloc.s 31 (System.Int32)
L_051b: ldc.i4.1
L_051c: add
L_051d: stloc.s 31 (System.Int32)
L_051f: Label38
L_051f: ldloc.s 31 (System.Int32)
L_0521: ldloc.3
L_0522: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0527: callvirt Int32 get_Count()
L_052c: blt Label42
L_0531: ldloc.s 30 (System.Int32)
L_0533: ldc.i4.1
L_0534: add
L_0535: stloc.s 30 (System.Int32)
L_0537: Label35
L_0537: ldloc.s 30 (System.Int32)
L_0539: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_053b: ldloc.s 23 (System.Int32)
L_053d: ldelem.ref
L_053e: callvirt Int32 get_Count()
L_0543: blt Label43
L_0548: Label16
L_0548: Label19
L_0548: Label23
L_0548: Label25
L_0548: Label28
L_0548: Label32
L_0548: Label34
L_0548: ldloc.s 23 (System.Int32)
L_054a: ldc.i4.1
L_054b: add
L_054c: stloc.s 23 (System.Int32)
L_054e: Label12
L_054e: ldloc.s 23 (System.Int32)
L_0550: ldc.i4.3
L_0551: blt Label44
L_0556: ldarg.0
L_0557: ldarg.1
L_0558: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_055a: ldarg.0
L_055b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0560: ldarg.1
L_0561: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0566: ldloc.s 11 (System.Boolean)
L_0568: call System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation] EvaluateAttacks(BattleTech.AbstractActor, BattleTech.ICombatant, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][], UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_056d: stloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_056f: ldarg.0
L_0570: ldstr "found {0} different attack solutions"
L_0575: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0577: callvirt Int32 get_Count()
L_057c: box System.Int32
L_0581: call System.String Format(System.String, System.Object)
L_0586: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_058b: ldc.r4 0
L_0590: stloc.s 14 (System.Single)
L_0592: ldc.r4 0
L_0597: stloc.s 15 (System.Single)
L_0599: ldc.r4 0
L_059e: stloc.s 16 (System.Single)
L_05a0: ldc.i4.0
L_05a1: stloc.s 33 (System.Int32)
L_05a3: br Label45
L_05a8: Label53
L_05a8: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05aa: ldloc.s 33 (System.Int32)
L_05ac: callvirt AttackEvaluation get_Item(Int32)
L_05b1: stloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05b3: ldarg.0
L_05b4: ldstr "evaluated attack of type {0} with {1} weapons and a result of {2}"
L_05b9: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05bb: ldfld AIUtil+AttackType AttackType
L_05c0: box AIUtil+AttackType
L_05c5: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05c7: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_05cc: callvirt Int32 get_Count()
L_05d1: box System.Int32
L_05d6: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05d8: ldfld System.Single ExpectedDamage
L_05dd: box System.Single
L_05e2: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_05e7: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_05ec: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05ee: ldfld AIUtil+AttackType AttackType
L_05f3: stloc.s 35 (AIUtil+AttackType)
L_05f5: ldloc.s 35 (AIUtil+AttackType)
L_05f7: switch Labels46,47,48
L_0608: br Label49
L_060d: Label46
L_060d: ldloc.s 14 (System.Single)
L_060f: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0611: ldfld System.Single ExpectedDamage
L_0616: call Single Max(Single, Single)
L_061b: stloc.s 14 (System.Single)
L_061d: br Label50
L_0622: Label47
L_0622: ldloc.s 15 (System.Single)
L_0624: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0626: ldfld System.Single ExpectedDamage
L_062b: call Single Max(Single, Single)
L_0630: stloc.s 15 (System.Single)
L_0632: br Label51
L_0637: Label48
L_0637: ldloc.s 16 (System.Single)
L_0639: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_063b: ldfld System.Single ExpectedDamage
L_0640: call Single Max(Single, Single)
L_0645: stloc.s 16 (System.Single)
L_0647: br Label52
L_064c: Label49
L_064c: ldstr "unknown attack type: "
L_0651: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0653: ldfld AIUtil+AttackType AttackType
L_0658: box AIUtil+AttackType
L_065d: call System.String Concat(System.Object, System.Object)
L_0662: call Void Log(System.Object)
L_0667: Label50
L_0667: Label51
L_0667: Label52
L_0667: ldloc.s 33 (System.Int32)
L_0669: ldc.i4.1
L_066a: add
L_066b: stloc.s 33 (System.Int32)
L_066d: Label45
L_066d: ldloc.s 33 (System.Int32)
L_066f: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0671: callvirt Int32 get_Count()
L_0676: blt Label53
L_067b: ldarg.0
L_067c: ldstr "best shooting: "
L_0681: ldloc.s 14 (System.Single)
L_0683: box System.Single
L_0688: call System.String Concat(System.Object, System.Object)
L_068d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0692: ldarg.0
L_0693: ldstr "best melee: "
L_0698: ldloc.s 15 (System.Single)
L_069a: box System.Single
L_069f: call System.String Concat(System.Object, System.Object)
L_06a4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06a9: ldarg.0
L_06aa: ldstr "best dfa: "
L_06af: ldloc.s 16 (System.Single)
L_06b1: box System.Single
L_06b6: call System.String Concat(System.Object, System.Object)
L_06bb: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06c0: ldc.i4.0
L_06c1: stloc.s 36 (System.Int32)
L_06c3: br Label54
L_06c8: Label97
L_06c8: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_06ca: ldloc.s 36 (System.Int32)
L_06cc: callvirt AttackEvaluation get_Item(Int32)
L_06d1: stloc.s 37 (AttackEvaluator+AttackEvaluation)
L_06d3: ldarg.0
L_06d4: ldstr "evaluating attack solution #"
L_06d9: ldloc.s 36 (System.Int32)
L_06db: box System.Int32
L_06e0: call System.String Concat(System.Object, System.Object)
L_06e5: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06ea: ldarg.0
L_06eb: ldstr "------"
L_06f0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06f5: ldarg.0
L_06f6: ldstr "Weapons:"
L_06fb: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0700: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0702: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0707: callvirt Enumerator GetEnumerator()
L_070c: stloc.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_070e: br Label55
	L_0713: Label56
	L_0713: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0715: call BattleTech.Weapon get_Current()
	L_071a: stloc.s 43 (BattleTech.Weapon)
	L_071c: ldarg.0
	L_071d: ldstr "Weapon: "
	L_0722: ldloc.s 43 (BattleTech.Weapon)
	L_0724: callvirt System.String get_Name()
	L_0729: call System.String Concat(System.String, System.String)
	L_072e: call Void LogShoot(BattleTech.AbstractActor, System.String)
	L_0733: Label55
	L_0733: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0735: call Boolean MoveNext()
	L_073a: brtrue Label56
	L_073f: leave Label57
	L_0744: leave (autogenerated)
} // end try
.finally
{
	L_0749: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_074b: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_0751: callvirt Void Dispose()
	L_0756: endfinally
	L_0757: leave (autogenerated)
} // end handler
L_0758: Label57
L_0758: ldarg.0
L_0759: ldstr "heat generated for attack solution: "
L_075e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0760: ldfld System.Single HeatGenerated
L_0765: box System.Single
L_076a: call System.String Concat(System.Object, System.Object)
L_076f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0774: ldarg.0
L_0775: ldstr "current heat: "
L_077a: ldloc.0
L_077b: box System.Single
L_0780: call System.String Concat(System.Object, System.Object)
L_0785: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_078a: ldarg.0
L_078b: ldstr "acceptable heat: "
L_0790: ldloc.1
L_0791: box System.Single
L_0796: call System.String Concat(System.Object, System.Object)
L_079b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07a0: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_07a2: ldfld System.Single HeatGenerated
L_07a7: ldloc.0
L_07a8: add
L_07a9: ldloc.1
L_07aa: cgt
L_07ac: stloc.s 38 (System.Boolean)
L_07ae: ldarg.0
L_07af: ldstr "will overheat? "
L_07b4: ldloca.s 38 (System.Boolean)
L_07b6: call System.String ToString()
L_07bb: call System.String Concat(System.String, System.String)
L_07c0: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07c5: ldloc.s 38 (System.Boolean)
L_07c7: brfalse Label58
L_07cc: ldloc.3
L_07cd: callvirt Boolean OverheatWillCauseDeath()
L_07d2: brfalse Label59
L_07d7: ldarg.0
L_07d8: ldstr "rejecting attack because overheat would cause own death"
L_07dd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07e2: br Label60
L_07e7: Label58
L_07e7: Label59
L_07e7: ldloc.s 8 (System.Single)
L_07e9: ldloc.s 6 (System.Single)
L_07eb: clt.un
L_07ed: ldc.i4.0
L_07ee: ceq
L_07f0: stloc.s 39 (System.Boolean)
L_07f2: ldarg.0
L_07f3: ldstr "but enough damage for overheat attack? "
L_07f8: ldloca.s 39 (System.Boolean)
L_07fa: call System.String ToString()
L_07ff: call System.String Concat(System.String, System.String)
L_0804: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0809: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_080b: ldfld System.Single lowestHitChance
L_0810: ldloc.s 7 (System.Single)
L_0812: clt.un
L_0814: ldc.i4.0
L_0815: ceq
L_0817: stloc.s 40 (System.Boolean)
L_0819: ldarg.0
L_081a: ldstr "but enough accuracy for overheat attack? "
L_081f: ldloca.s 40 (System.Boolean)
L_0821: call System.String ToString()
L_0826: call System.String Concat(System.String, System.String)
L_082b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0830: ldarg.1
L_0831: isinst BattleTech.AbstractActor
L_0836: stloc.s 41 (BattleTech.AbstractActor)
L_0838: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_083a: ldfld AIUtil+AttackType AttackType
L_083f: ldc.i4.1
L_0840: bne.un Label61
L_0845: ldarg.0
L_0846: ldarg.1
L_0847: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_084c: brfalse Label62
L_0851: ldloc.s 41 (BattleTech.AbstractActor)
L_0853: brfalse Label63
L_0858: ldarg.3
L_0859: brtrue Label64
L_085e: Label62
L_085e: Label63
L_085e: ldarg.0
L_085f: ldstr "Can't Melee"
L_0864: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0869: br Label65
L_086e: Label61
L_086e: Label64
L_086e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0870: ldfld AIUtil+AttackType AttackType
L_0875: ldc.i4.2
L_0876: bne.un Label66
L_087b: ldarg.0
L_087c: ldarg.1
L_087d: ldarg.0
L_087e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0883: callvirt Boolean CanDFATargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_0888: brfalse Label67
L_088d: ldloc.s 8 (System.Single)
L_088f: ldloc.s 4 (System.Single)
L_0891: blt Label68
L_0896: ldloc.2
L_0897: ldloc.s 5 (System.Single)
L_0899: ble.un Label69
L_089e: Label67
L_089e: Label68
L_089e: ldarg.0
L_089f: ldstr "Can't DFA"
L_08a4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08a9: br Label70
L_08ae: Label66
L_08ae: Label69
L_08ae: ldloc.s 38 (System.Boolean)
L_08b0: brfalse Label71
L_08b5: ldloc.s 39 (System.Boolean)
L_08b7: brfalse Label72
L_08bc: ldloc.s 40 (System.Boolean)
L_08be: brtrue Label73
L_08c3: Label72
L_08c3: ldarg.0
L_08c4: ldstr "rejecting attack for not enough damage or accuracy on an attack that will overheat"
L_08c9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08ce: br Label74
L_08d3: Label71
L_08d3: Label73
L_08d3: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08d5: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_08da: callvirt Int32 get_Count()
L_08df: brtrue Label75
L_08e4: ldarg.0
L_08e5: ldstr "rejecting attack for not having any weapons"
L_08ea: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08ef: br Label76
L_08f4: Label75
L_08f4: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08f6: ldfld System.Single ExpectedDamage
L_08fb: ldc.r4 0
L_0900: bgt.un Label77
L_0905: ldarg.0
L_0906: ldstr "rejecting attack for not having any expected damage"
L_090b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0910: br Label78
L_0915: Label77
L_0915: ldc.i4.1
L_0916: newobj Void .ctor(BehaviorNodeState)
L_091b: stloc.s 44 (BehaviorTreeResults)
L_091d: ldarg.0
L_091e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0920: ldarg.2
L_0921: call CalledShotAttackOrderInfo MakeOffensivePushOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_0926: stloc.s 47 (CalledShotAttackOrderInfo)
L_0928: ldloc.s 47 (CalledShotAttackOrderInfo)
L_092a: brfalse Label79
L_092f: ldloc.s 44 (BehaviorTreeResults)
L_0931: ldloc.s 47 (CalledShotAttackOrderInfo)
L_0933: stfld OrderInfo orderInfo
L_0938: ldloc.s 44 (BehaviorTreeResults)
L_093a: ldarg.0
L_093b: callvirt System.String get_DisplayName()
L_0940: ldstr " using offensive push"
L_0945: call System.String Concat(System.String, System.String)
L_094a: stfld System.String debugOrderString
L_094f: br Label80
L_0954: Label79
L_0954: ldarg.0
L_0955: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0957: ldarg.2
L_0958: ldc.i4.0
L_0959: call CalledShotAttackOrderInfo MakeCalledShotOrder(BattleTech.AbstractActor, AttackEvaluation, Int32, Boolean)
L_095e: dup
L_095f: stloc.s 46 (CalledShotAttackOrderInfo)
L_0961: brfalse Label81
L_0966: ldloc.s 44 (BehaviorTreeResults)
L_0968: ldloc.s 46 (CalledShotAttackOrderInfo)
L_096a: stfld OrderInfo orderInfo
L_096f: ldloc.s 44 (BehaviorTreeResults)
L_0971: ldarg.0
L_0972: callvirt System.String get_DisplayName()
L_0977: ldstr " using called shot"
L_097c: call System.String Concat(System.String, System.String)
L_0981: stfld System.String debugOrderString
L_0986: br Label82
L_098b: Label81
L_098b: ldloc.s 38 (System.Boolean)
L_098d: brtrue Label83
L_0992: ldarg.0
L_0993: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0995: ldarg.2
L_0996: call MultiTargetAttackOrderInfo MakeMultiAttackOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_099b: dup
L_099c: stloc.s 45 (MultiTargetAttackOrderInfo)
L_099e: brfalse Label84
L_09a3: ldloc.s 44 (BehaviorTreeResults)
L_09a5: ldloc.s 45 (MultiTargetAttackOrderInfo)
L_09a7: stfld OrderInfo orderInfo
L_09ac: ldloc.s 44 (BehaviorTreeResults)
L_09ae: ldarg.0
L_09af: callvirt System.String get_DisplayName()
L_09b4: ldstr " using multi attack"
L_09b9: call System.String Concat(System.String, System.String)
L_09be: stfld System.String debugOrderString
L_09c3: br Label85
L_09c8: Label83
L_09c8: Label84
L_09c8: ldarg.1
L_09c9: newobj Void .ctor(ICombatant)
L_09ce: stloc.s 48 (AttackOrderInfo)
L_09d0: ldloc.s 48 (AttackOrderInfo)
L_09d2: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09d4: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_09d9: stfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_09de: ldloc.s 48 (AttackOrderInfo)
L_09e0: ldarg.1
L_09e1: stfld BattleTech.ICombatant TargetUnit
L_09e6: ldloc.s 48 (AttackOrderInfo)
L_09e8: ldloc.s 38 (System.Boolean)
L_09ea: brfalse Label86
L_09ef: ldarg.0
L_09f0: callvirt Boolean get_HasVentCoolantAbility()
L_09f5: brfalse Label87
L_09fa: ldarg.0
L_09fb: callvirt Boolean get_CanVentCoolant()
L_0a00: br Label88
L_0a05: Label86
L_0a05: Label87
L_0a05: ldc.i4.0
L_0a06: Label88
L_0a06: stfld System.Boolean VentFirst
L_0a0b: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0a0d: ldfld AIUtil+AttackType AttackType
L_0a12: stloc.s 35 (AIUtil+AttackType)
L_0a14: ldloc.s 35 (AIUtil+AttackType)
L_0a16: ldc.i4.1
L_0a17: beq Label89
L_0a1c: ldloc.s 35 (AIUtil+AttackType)
L_0a1e: ldc.i4.2
L_0a1f: beq Label90
L_0a24: br Label91
L_0a29: Label89
L_0a29: ldloc.s 48 (AttackOrderInfo)
L_0a2b: ldc.i4.1
L_0a2c: stfld System.Boolean IsMelee
L_0a31: ldloc.s 48 (AttackOrderInfo)
L_0a33: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a38: ldloc.3
L_0a39: ldfld BattleTech.Weapon MeleeWeapon
L_0a3e: callvirt Boolean Remove(BattleTech.Weapon)
L_0a43: pop
L_0a44: ldloc.s 48 (AttackOrderInfo)
L_0a46: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a4b: ldloc.3
L_0a4c: ldfld BattleTech.Weapon DFAWeapon
L_0a51: callvirt Boolean Remove(BattleTech.Weapon)
L_0a56: pop
L_0a57: ldloc.3
L_0a58: callvirt BattleTech.Pathing get_Pathing()
L_0a5d: ldloc.s 41 (BattleTech.AbstractActor)
L_0a5f: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0a64: stloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a66: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a68: callvirt Int32 get_Count()
L_0a6d: brtrue Label92
L_0a72: ldarg.0
L_0a73: ldstr "Failing for lack of melee destinations"
L_0a78: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0a7d: br Label93
L_0a82: Label92
L_0a82: ldloc.s 48 (AttackOrderInfo)
L_0a84: ldloc.3
L_0a85: ldloc.s 41 (BattleTech.AbstractActor)
L_0a87: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a89: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a8e: stfld UnityEngine.Vector3 AttackFromLocation
L_0a93: br Label94
L_0a98: Label90
L_0a98: ldloc.s 48 (AttackOrderInfo)
L_0a9a: ldc.i4.1
L_0a9b: stfld System.Boolean IsDeathFromAbove
L_0aa0: ldloc.s 48 (AttackOrderInfo)
L_0aa2: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0aa7: ldloc.3
L_0aa8: ldfld BattleTech.Weapon MeleeWeapon
L_0aad: callvirt Boolean Remove(BattleTech.Weapon)
L_0ab2: pop
L_0ab3: ldloc.s 48 (AttackOrderInfo)
L_0ab5: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0aba: ldloc.3
L_0abb: ldfld BattleTech.Weapon DFAWeapon
L_0ac0: callvirt Boolean Remove(BattleTech.Weapon)
L_0ac5: pop
L_0ac6: ldloc.3
L_0ac7: callvirt BattleTech.JumpPathing get_JumpPathing()
L_0acc: ldloc.s 41 (BattleTech.AbstractActor)
L_0ace: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetDFADestsForTarget(BattleTech.AbstractActor)
L_0ad3: stloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ad5: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ad7: callvirt Int32 get_Count()
L_0adc: brtrue Label95
L_0ae1: ldarg.0
L_0ae2: ldstr "Failing for lack of DFA destinations"
L_0ae7: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0aec: br Label96
L_0af1: Label95
L_0af1: ldloc.s 48 (AttackOrderInfo)
L_0af3: ldloc.3
L_0af4: ldloc.s 41 (BattleTech.AbstractActor)
L_0af6: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0af8: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0afd: stfld UnityEngine.Vector3 AttackFromLocation
L_0b02: Label91
L_0b02: Label94
L_0b02: ldloc.s 44 (BehaviorTreeResults)
L_0b04: ldloc.s 48 (AttackOrderInfo)
L_0b06: stfld OrderInfo orderInfo
L_0b0b: ldloc.s 44 (BehaviorTreeResults)
L_0b0d: ldc.i4.5
L_0b0e: newarr System.Object
L_0b13: dup
L_0b14: ldc.i4.0
L_0b15: ldarg.0
L_0b16: callvirt System.String get_DisplayName()
L_0b1b: stelem.ref
L_0b1c: dup
L_0b1d: ldc.i4.1
L_0b1e: ldstr " using attack type: "
L_0b23: stelem.ref
L_0b24: dup
L_0b25: ldc.i4.2
L_0b26: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b28: ldfld AIUtil+AttackType AttackType
L_0b2d: box AIUtil+AttackType
L_0b32: stelem.ref
L_0b33: dup
L_0b34: ldc.i4.3
L_0b35: ldstr " against: "
L_0b3a: stelem.ref
L_0b3b: dup
L_0b3c: ldc.i4.4
L_0b3d: ldarg.1
L_0b3e: callvirt System.String get_DisplayName()
L_0b43: stelem.ref
L_0b44: call System.String Concat(System.Object[])
L_0b49: stfld System.String debugOrderString
L_0b4e: Label80
L_0b4e: Label82
L_0b4e: Label85
L_0b4e: ldarg.0
L_0b4f: ldstr "attack order: "
L_0b54: ldloc.s 44 (BehaviorTreeResults)
L_0b56: ldfld System.String debugOrderString
L_0b5b: call System.String Concat(System.String, System.String)
L_0b60: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b65: ldarg.s 4
L_0b67: ldloc.s 44 (BehaviorTreeResults)
L_0b69: stind.ref
L_0b6a: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b6c: ldfld System.Single ExpectedDamage
L_0b71: br Label100
L_0b76: Label60
L_0b76: Label65
L_0b76: Label70
L_0b76: Label74
L_0b76: Label76
L_0b76: Label78
L_0b76: Label93
L_0b76: Label96
L_0b76: ldloc.s 36 (System.Int32)
L_0b78: ldc.i4.1
L_0b79: add
L_0b7a: stloc.s 36 (System.Int32)
L_0b7c: Label54
L_0b7c: ldloc.s 36 (System.Int32)
L_0b7e: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0b80: callvirt Int32 get_Count()
L_0b85: blt Label97
L_0b8a: ldarg.0
L_0b8b: ldstr "There are no targets I can shoot at without overheating."
L_0b90: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b95: ldarg.s 4
L_0b97: ldnull
L_0b98: stind.ref
L_0b99: ldc.r4 0
L_0b9e: Label98
L_0b9e: Label100
L_0b9e: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void SetHitChance(BattleTech.ICombatant)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.Mech
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: ldarg.0
L_0001: ldfld BattleTech.Weapon displayedWeapon
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call Single get_HitChance()
L_0011: pop
L_0012: ldarg.0
L_0013: ldfld BattleTech.UI.CombatHUD HUD
L_0018: callvirt BattleTech.AbstractActor get_SelectedActor()
L_001d: brfalse Label2
L_0022: ldarg.1
L_0023: brtrue Label3
L_0028: Label2
L_0028: ldarg.0
L_0029: call Void ClearHitChance()
L_002e: br Label4
L_0033: Label3
L_0033: ldarg.0
L_0034: ldarg.1
L_0035: call Boolean contemplatingDFA(BattleTech.ICombatant)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.CombatHUD HUD
L_0041: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0046: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_004b: isinst BattleTech.UI.SelectionStateMoraleAttack
L_0050: ldnull
L_0051: cgt.un
L_0053: stloc.1
L_0054: ldarg.0
L_0055: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_005a: ldc.i4.2
L_005b: bne.un Label5
L_0060: ldloc.0
L_0061: brfalse Label6
L_0066: ldarg.0
L_0067: ldfld BattleTech.UI.CombatHUD HUD
L_006c: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0071: isinst BattleTech.Mech
L_0076: stloc.2
L_0077: ldarg.0
L_0078: ldarg.0
L_0079: ldfld BattleTech.CombatGameState Combat
L_007e: callvirt BattleTech.ToHit get_ToHit()
L_0083: ldloc.2
L_0084: ldarg.0
L_0085: ldfld BattleTech.Weapon displayedWeapon
L_008a: ldarg.1
L_008b: ldarg.0
L_008c: ldfld BattleTech.UI.CombatHUD HUD
L_0091: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0096: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_009b: callvirt UnityEngine.Vector3 get_PreviewPos()
L_00a0: ldarg.1
L_00a1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a6: ldc.i4.1
L_00a7: ldc.i4.6
L_00a8: ldc.i4.0
L_00a9: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_00ae: call Void SetHitChance(Single)
L_00b3: br Label7
L_00b8: Label6
L_00b8: ldarg.0
L_00b9: call Void ClearHitChance()
L_00be: br Label8
L_00c3: Label5
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_00c9: ldc.i4.1
L_00ca: bne.un Label9
L_00cf: ldarg.0
L_00d0: ldarg.1
L_00d1: call Boolean contemplatingMelee(BattleTech.ICombatant)
L_00d6: brfalse Label10
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.CombatHUD HUD
L_00e1: callvirt BattleTech.AbstractActor get_SelectedActor()
L_00e6: isinst BattleTech.Mech
L_00eb: stloc.3
L_00ec: ldarg.0
L_00ed: ldarg.0
L_00ee: ldfld BattleTech.CombatGameState Combat
L_00f3: callvirt BattleTech.ToHit get_ToHit()
L_00f8: ldloc.3
L_00f9: ldarg.0
L_00fa: ldfld BattleTech.Weapon displayedWeapon
L_00ff: ldarg.1
L_0100: ldarg.0
L_0101: ldfld BattleTech.UI.CombatHUD HUD
L_0106: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_010b: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0110: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0115: ldarg.1
L_0116: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_011b: ldc.i4.1
L_011c: ldc.i4.1
L_011d: ldc.i4.0
L_011e: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_0123: call Void SetHitChance(Single)
L_0128: br Label11
L_012d: Label10
L_012d: ldarg.0
L_012e: call Void ClearHitChance()
L_0133: br Label12
L_0138: Label9
L_0138: ldloc.0
L_0139: brtrue Label13
L_013e: ldarg.0
L_013f: ldarg.1
L_0140: call Boolean contemplatingMelee(BattleTech.ICombatant)
L_0145: brfalse Label14
L_014a: Label13
L_014a: ldarg.0
L_014b: ldfld BattleTech.Weapon displayedWeapon
L_0150: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0155: ldc.i4.4
L_0156: bne.un Label15
L_015b: ldarg.0
L_015c: ldfld BattleTech.Weapon displayedWeapon
L_0161: ldarg.1
L_0162: ldarg.0
L_0163: ldfld BattleTech.UI.CombatHUD HUD
L_0168: callvirt Int32 get_numTargets()
L_016d: ldarg.0
L_016e: ldfld BattleTech.UI.CombatHUD HUD
L_0173: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0178: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_017d: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0182: ldarg.1
L_0183: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0188: ldc.i4.0
L_0189: ldc.i4.0
L_018a: ldc.i4.0
L_018b: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0190: stloc.s 4 (System.Single)
L_0192: ldarg.0
L_0193: ldloc.s 4 (System.Single)
L_0195: call Void SetHitChance(Single)
L_019a: br Label16
L_019f: Label15
L_019f: ldarg.0
L_01a0: call Void ClearHitChance()
L_01a5: br Label17
L_01aa: Label14
L_01aa: ldarg.0
L_01ab: ldfld BattleTech.Weapon displayedWeapon
L_01b0: ldarg.1
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.CombatHUD HUD
L_01b7: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01bc: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01c1: callvirt UnityEngine.Vector3 get_PreviewPos()
L_01c6: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_01cb: brfalse Label18
L_01d0: ldarg.0
L_01d1: ldfld BattleTech.Weapon displayedWeapon
L_01d6: ldarg.1
L_01d7: ldarg.0
L_01d8: ldfld BattleTech.UI.CombatHUD HUD
L_01dd: callvirt Int32 get_numTargets()
L_01e2: ldarg.0
L_01e3: ldfld BattleTech.UI.CombatHUD HUD
L_01e8: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01ed: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01f2: callvirt UnityEngine.Vector3 get_PreviewPos()
L_01f7: ldarg.1
L_01f8: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01fd: ldc.i4.0
L_01fe: ldc.i4.0
L_01ff: ldloc.1
L_0200: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0205: stloc.s 5 (System.Single)
L_0207: ldarg.0
L_0208: ldloc.s 5 (System.Single)
L_020a: call Void SetHitChance(Single)
L_020f: br Label19
L_0214: Label18
L_0214: ldarg.0
L_0215: call Void ClearHitChance()
L_021a: Label4
L_021a: Label7
L_021a: Label8
L_021a: Label11
L_021a: Label12
L_021a: Label16
L_021a: Label17
L_021a: Label19
L_021a: ldarg.0
L_021b: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0220: callvirt Void ResetToolTip()
L_0225: ldarg.0
L_0226: ldarg.1
L_0227: call Void UpdateTooltipStrings(BattleTech.ICombatant)
L_022c: Label1
L_022c: ldarg.0
L_022d: ldarg 1
L_0233: call Void Postfix(BattleTech.UI.CombatHUDWeaponSlot, BattleTech.ICombatant)
L_0238: ret
DONE

### Patch BattleTech.UI.SelectionStateJump, Int32 get_ProjectedHeatForState()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: ldloc.0
L_000f: brfalse Label1
L_0014: ldloc.0
L_0015: callvirt UnityEngine.Vector3 get_PreviousPosition()
L_001a: ldarg.0
L_001b: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0020: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_0025: stloc.2
L_0026: ldloc.0
L_0027: ldloc.2
L_0028: callvirt Int32 CalcJumpHeat(Single)
L_002d: stloc.1
L_002e: ldarg.0
L_002f: call BattleTech.ICombatant get_TargetedCombatant()
L_0034: brfalse Label2
L_0039: ldc.i4.0
L_003a: stloc.3
L_003b: br Label3
L_0040: Label7
L_0040: ldloc.0
L_0041: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0046: ldloc.3
L_0047: callvirt BattleTech.Weapon get_Item(Int32)
L_004c: callvirt Boolean get_IsEnabled()
L_0051: brfalse Label4
L_0056: ldloc.0
L_0057: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_005c: ldloc.3
L_005d: callvirt BattleTech.Weapon get_Item(Int32)
L_0062: callvirt Boolean get_WillFire()
L_0067: brfalse Label5
L_006c: ldloc.0
L_006d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0072: ldloc.3
L_0073: callvirt BattleTech.Weapon get_Item(Int32)
L_0078: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_007d: ldc.i4.4
L_007e: bne.un Label6
L_0083: ldloc.1
L_0084: ldloc.0
L_0085: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_008a: ldloc.3
L_008b: callvirt BattleTech.Weapon get_Item(Int32)
L_0090: callvirt Single get_HeatGenerated()
L_0095: conv.i4
L_0096: add
L_0097: stloc.1
L_0098: Label4
L_0098: Label5
L_0098: Label6
L_0098: ldloc.3
L_0099: ldc.i4.1
L_009a: add
L_009b: stloc.3
L_009c: Label3
L_009c: ldloc.3
L_009d: ldloc.0
L_009e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a3: callvirt Int32 get_Count()
L_00a8: blt Label7
L_00ad: Label2
L_00ad: ldloc.1
L_00ae: br Label8
L_00b3: Label1
L_00b3: ldc.i4.0
L_00b4: Label8
L_00b4: ret
DONE

### Patch BattleTech.UI.SelectionStateMove, Int32 get_ProjectedHeatForState()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: call BattleTech.ICombatant get_TargetedCombatant()
L_0018: brfalse Label2
L_001d: ldloc.0
L_001e: callvirt Int32 get_WalkHeat()
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label3
L_002b: Label7
L_002b: ldloc.0
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0031: ldloc.2
L_0032: callvirt BattleTech.Weapon get_Item(Int32)
L_0037: callvirt Boolean get_IsEnabled()
L_003c: brfalse Label4
L_0041: ldloc.0
L_0042: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0047: ldloc.2
L_0048: callvirt BattleTech.Weapon get_Item(Int32)
L_004d: callvirt Boolean get_WillFire()
L_0052: brfalse Label5
L_0057: ldloc.0
L_0058: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_005d: ldloc.2
L_005e: callvirt BattleTech.Weapon get_Item(Int32)
L_0063: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0068: ldc.i4.4
L_0069: bne.un Label6
L_006e: ldloc.1
L_006f: ldloc.0
L_0070: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0075: ldloc.2
L_0076: callvirt BattleTech.Weapon get_Item(Int32)
L_007b: callvirt Single get_HeatGenerated()
L_0080: conv.i4
L_0081: add
L_0082: stloc.1
L_0083: Label4
L_0083: Label5
L_0083: Label6
L_0083: ldloc.2
L_0084: ldc.i4.1
L_0085: add
L_0086: stloc.2
L_0087: Label3
L_0087: ldloc.2
L_0088: ldloc.0
L_0089: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_008e: callvirt Int32 get_Count()
L_0093: blt Label7
L_0098: ldloc.1
L_0099: br Label10
L_009e: Label2
L_009e: ldarg.0
L_009f: call BattleTech.AbstractActor get_SelectedActor()
L_00a4: callvirt BattleTech.Pathing get_Pathing()
L_00a9: ldfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00ae: brfalse Label8
L_00b3: ldarg.0
L_00b4: call BattleTech.AbstractActor get_SelectedActor()
L_00b9: callvirt BattleTech.Pathing get_Pathing()
L_00be: ldfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00c3: callvirt Int32 get_Count()
L_00c8: ldc.i4.0
L_00c9: ble Label9
L_00ce: ldloc.0
L_00cf: callvirt Int32 get_WalkHeat()
L_00d4: br Label11
L_00d9: Label1
L_00d9: Label8
L_00d9: Label9
L_00d9: ldc.i4.0
L_00da: Label10
L_00da: Label11
L_00da: ret
DONE

### Patch BattleTech.HostileDamageFactor, Single expectedDamageForMelee(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0000: Local var 0: BattleTech.Mech
L_0000: ldarg.1
L_0001: isinst BattleTech.Mech
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: ldarg.s 4
L_0010: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_0015: brtrue Label2
L_001a: Label1
L_001a: ldc.r4 0
L_001f: br Label4
L_0024: Label2
L_0024: ldloc.0
L_0025: callvirt BattleTech.Pathing get_Pathing()
L_002a: ldarg.s 4
L_002c: isinst BattleTech.AbstractActor
L_0031: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0036: callvirt Int32 get_Count()
L_003b: brtrue Label3
L_0040: ldc.r4 0
L_0045: br Label5
L_004a: Label3
L_004a: ldloc.0
L_004b: ldarg.s 4
L_004d: ldarg.2
L_004e: ldarg.s 5
L_0050: ldc.i4.1
L_0051: call Single ExpectedDamageForMeleeAttack(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0056: Label4
L_0056: Label5
L_0056: ret
DONE

### Patch BattleTech.MechRepresentation, Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ArmorLocation
L_0000: Local var 2: UnityEngine.Vector2
L_0000: Local var 3: System.Boolean
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.AttackDirection
L_0000: Local var 7: BattleTech.Mech
L_0000: Local var 8: System.Single
L_0000: ldarg.0
L_0001: call BattleTech.Mech get_parentMech()
L_0006: callvirt Boolean get_IsOrWillBeProne()
L_000b: brtrue Label1
L_0010: ldarg.0
L_0011: call BattleTech.Mech get_parentMech()
L_0016: callvirt Boolean get_IsDead()
L_001b: brfalse Label2
L_0020: Label1
L_0020: br Label35
L_0025: Label2
L_0025: ldarg.0
L_0026: ldflda UnityEngine.AnimatorStateInfo previousAnimState
L_002b: call Int32 get_fullPathHash()
L_0030: stloc.0
L_0031: ldloc.0
L_0032: ldarg.0
L_0033: ldfld System.Int32 hitReactHeavyHash
L_0038: beq Label3
L_003d: ldloc.0
L_003e: ldarg.0
L_003f: ldfld System.Int32 hitReactMeleeHash
L_0044: beq Label4
L_0049: ldloc.0
L_004a: ldarg.0
L_004b: ldfld System.Int32 hitReactDodgeHash
L_0050: beq Label5
L_0055: ldloc.0
L_0056: ldarg.0
L_0057: ldfld System.Int32 hitReactDFAHash
L_005c: bne.un Label6
L_0061: Label3
L_0061: Label4
L_0061: Label5
L_0061: br Label36
L_0066: Label6
L_0066: ldarg.0
L_0067: ldfld UnityEngine.Animator thisAnimator
L_006c: ldstr "KnockedDown"
L_0071: callvirt Boolean GetBool(System.String)
L_0076: brfalse Label7
L_007b: ldsfld HBS.Logging.ILog logger
L_0080: ldstr "KNOCKDOWN - we got passed IsOrWillBeProne, but KnockedDown flag is true. ???"
L_0085: callvirt Void LogWarning(System.Object)
L_008a: Label7
L_008a: ldarg.0
L_008b: ldarg.1
L_008c: ldarg.2
L_008d: ldarg.3
L_008e: ldarg.s 4
L_0090: ldarg.s 5
L_0092: call Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0097: ldarga.s 1
L_0099: ldarg.2
L_009a: call Int32 ShotHitLocation(Int32)
L_009f: stloc.1
L_00a0: ldarg.0
L_00a1: call BattleTech.AbstractActor get_parentActor()
L_00a6: callvirt BattleTech.CombatGameState get_Combat()
L_00ab: callvirt BattleTech.HitLocation get_HitLocation()
L_00b0: ldarg.1
L_00b1: ldfld BattleTech.AttackDirection[] attackDirections
L_00b6: ldarg.2
L_00b7: ldelem.i4
L_00b8: callvirt UnityEngine.Vector2 ConvertAttackDirectionToCardinalVector(BattleTech.AttackDirection)
L_00bd: stloc.2
L_00be: ldarg.0
L_00bf: call Void ResetHitReactFlags()
L_00c4: ldarg.0
L_00c5: ldfld UnityEngine.Animator thisAnimator
L_00ca: ldstr "Stand"
L_00cf: callvirt Void ResetTrigger(System.String)
L_00d4: ldarg.s 4
L_00d6: brtrue Label8
L_00db: ldarg.0
L_00dc: ldfld UnityEngine.Animator thisAnimator
L_00e1: ldstr "MeleeEngaged"
L_00e6: callvirt Single GetFloat(System.String)
L_00eb: ldc.r4 0
L_00f0: bgt Label9
L_00f5: ldarg.1
L_00f6: ldfld System.Boolean[] dodgeSuccesses
L_00fb: ldarg.2
L_00fc: ldelem.u1
L_00fd: brfalse Label10
L_0102: Label8
L_0102: Label9
L_0102: ldloc.1
L_0103: brfalse Label11
L_0108: ldloc.1
L_0109: ldc.i4 65536
L_010e: bne.un Label12
L_0113: Label11
L_0113: ldc.r4 0
L_0118: stloc.s 4 (System.Single)
L_011a: ldc.i4.0
L_011b: ldc.i4.2
L_011c: call Int32 Range(Int32, Int32)
L_0121: ldc.i4.2
L_0122: mul
L_0123: stloc.s 5 (System.Int32)
L_0125: ldarg.1
L_0126: ldfld BattleTech.AttackDirection[] attackDirections
L_012b: ldarg.2
L_012c: ldelem.i4
L_012d: stloc.s 6 (BattleTech.AttackDirection)
L_012f: ldloc.s 6 (BattleTech.AttackDirection)
L_0131: ldc.i4.1
L_0132: sub
L_0133: switch Labels13,14,15,16
L_0148: br Label17
L_014d: Label16
L_014d: ldc.r4 1
L_0152: stloc.s 4 (System.Single)
L_0154: br Label18
L_0159: Label13
L_0159: ldloc.s 5 (System.Int32)
L_015b: conv.r4
L_015c: stloc.s 4 (System.Single)
L_015e: br Label19
L_0163: Label14
L_0163: ldc.r4 0
L_0168: stloc.s 4 (System.Single)
L_016a: br Label20
L_016f: Label15
L_016f: ldc.r4 2
L_0174: stloc.s 4 (System.Single)
L_0176: br Label21
L_017b: Label17
L_017b: ldloc.s 5 (System.Int32)
L_017d: conv.r4
L_017e: stloc.s 4 (System.Single)
L_0180: Label18
L_0180: Label19
L_0180: Label20
L_0180: Label21
L_0180: ldarg.0
L_0181: ldfld UnityEngine.Animator thisAnimator
L_0186: ldstr "Dodge_Direction"
L_018b: ldloc.s 4 (System.Single)
L_018d: callvirt Void SetFloat(System.String, Single)
L_0192: ldarg.0
L_0193: ldfld UnityEngine.Animator thisAnimator
L_0198: ldstr "Hit_Dodge"
L_019d: ldc.i4.1
L_019e: callvirt Void SetBool(System.String, Boolean)
L_01a3: br Label22
L_01a8: Label12
L_01a8: ldarg.s 4
L_01aa: ldc.i4.6
L_01ab: bne.un Label23
L_01b0: ldarg.3
L_01b1: ldfld BattleTech.AbstractActor parent
L_01b6: isinst BattleTech.Mech
L_01bb: stloc.s 7 (BattleTech.Mech)
L_01bd: ldc.r4 0.6
L_01c2: stloc.s 8 (System.Single)
L_01c4: ldloc.s 7 (BattleTech.Mech)
L_01c6: callvirt Single get_tonnage()
L_01cb: ldc.r4 70
L_01d0: ble.un Label24
L_01d5: ldc.r4 1
L_01da: stloc.s 8 (System.Single)
L_01dc: br Label25
L_01e1: Label24
L_01e1: ldloc.s 7 (BattleTech.Mech)
L_01e3: callvirt Single get_tonnage()
L_01e8: ldc.r4 40
L_01ed: ble.un Label26
L_01f2: ldc.r4 0.6
L_01f7: stloc.s 8 (System.Single)
L_01f9: br Label27
L_01fe: Label26
L_01fe: ldc.r4 0.3
L_0203: stloc.s 8 (System.Single)
L_0205: Label25
L_0205: Label27
L_0205: ldarg.0
L_0206: ldfld UnityEngine.Animator thisAnimator
L_020b: ldstr "DFA_Power"
L_0210: ldloc.s 8 (System.Single)
L_0212: callvirt Void SetFloat(System.String, Single)
L_0217: ldarg.0
L_0218: ldfld UnityEngine.Animator thisAnimator
L_021d: ldstr "Hit_DFA"
L_0222: ldc.i4.1
L_0223: callvirt Void SetBool(System.String, Boolean)
L_0228: br Label28
L_022d: Label23
L_022d: ldarg.0
L_022e: ldfld UnityEngine.Animator thisAnimator
L_0233: ldstr "HitDirection_X"
L_0238: ldloc.2
L_0239: ldfld System.Single x
L_023e: callvirt Void SetFloat(System.String, Single)
L_0243: ldarg.0
L_0244: ldfld UnityEngine.Animator thisAnimator
L_0249: ldstr "HitDirection_Y"
L_024e: ldloc.2
L_024f: ldfld System.Single y
L_0254: callvirt Void SetFloat(System.String, Single)
L_0259: ldarg.0
L_025a: ldfld UnityEngine.Animator thisAnimator
L_025f: ldstr "Hit_Melee"
L_0264: ldc.i4.1
L_0265: callvirt Void SetBool(System.String, Boolean)
L_026a: Label22
L_026a: Label28
L_026a: ldarg.0
L_026b: ldfld UnityEngine.Animator thisAnimator
L_0270: ldstr "Hit_React"
L_0275: callvirt Void SetTrigger(System.String)
L_027a: ldarg.1
L_027b: ldfld System.Boolean[] dodgeSuccesses
L_0280: ldarg.2
L_0281: ldelem.u1
L_0282: brtrue Label29
L_0287: ldarg.0
L_0288: ldc.i4.1
L_0289: call Void SetMeleeIdleState(Boolean)
L_028e: Label29
L_028e: br Label37
L_0293: Label10
L_0293: ldarg.0
L_0294: call BattleTech.Mech get_parentMech()
L_0299: callvirt Single get_StabilityPercentage()
L_029e: ldc.r4 0.5
L_02a3: bgt Label30
L_02a8: ldarg.s 5
L_02aa: ldarg.0
L_02ab: call BattleTech.CombatGameConstants get_Constants()
L_02b0: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_02b5: ldfld System.Int32 HeavyHitReactDamageThreshold
L_02ba: conv.r4
L_02bb: clt.un
L_02bd: ldc.i4.0
L_02be: ceq
L_02c0: br Label31
L_02c5: Label30
L_02c5: ldc.i4.1
L_02c6: Label31
L_02c6: stloc.3
L_02c7: ldarg.3
L_02c8: brfalse Label32
L_02cd: ldarg.3
L_02ce: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_02d3: ldc.i4.4
L_02d4: bne.un Label33
L_02d9: ldc.i4.0
L_02da: stloc.3
L_02db: Label32
L_02db: Label33
L_02db: ldarg.0
L_02dc: call BattleTech.Mech get_parentMech()
L_02e1: callvirt Boolean get_IsShutDown()
L_02e6: brfalse Label34
L_02eb: ldc.i4.0
L_02ec: stloc.3
L_02ed: ldarg.0
L_02ee: ldfld UnityEngine.Animator thisAnimator
L_02f3: ldstr "Shutdown_Hit"
L_02f8: ldc.i4.1
L_02f9: callvirt Void SetBool(System.String, Boolean)
L_02fe: Label34
L_02fe: ldarg.0
L_02ff: ldfld UnityEngine.Animator thisAnimator
L_0304: ldstr "HitDirection_X"
L_0309: ldloc.2
L_030a: ldfld System.Single x
L_030f: callvirt Void SetFloat(System.String, Single)
L_0314: ldarg.0
L_0315: ldfld UnityEngine.Animator thisAnimator
L_031a: ldstr "HitDirection_Y"
L_031f: ldloc.2
L_0320: ldfld System.Single y
L_0325: callvirt Void SetFloat(System.String, Single)
L_032a: ldarg.0
L_032b: ldfld UnityEngine.Animator thisAnimator
L_0330: ldstr "Hit_Stagger"
L_0335: ldloc.3
L_0336: callvirt Void SetBool(System.String, Boolean)
L_033b: ldarg.0
L_033c: ldfld UnityEngine.Animator thisAnimator
L_0341: ldstr "Hit_Light"
L_0346: ldloc.3
L_0347: ldc.i4.0
L_0348: ceq
L_034a: callvirt Void SetBool(System.String, Boolean)
L_034f: ldarg.0
L_0350: ldfld UnityEngine.Animator thisAnimator
L_0355: ldstr "Hit_React"
L_035a: callvirt Void SetTrigger(System.String)
L_035f: Label35
L_035f: Label36
L_035f: Label37
L_035f: ret
DONE

### Patch CombatTestFire, Void MeleeAttackSequence()
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: BattleTech.MeleeAttackType
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Weapon
L_0000: ldarg.0
L_0001: ldfld BattleTech.CombatGameState combat
L_0006: callvirt System.Collections.Generic.List`1[BattleTech.Mech] get_AllMechs()
L_000b: ldarg.0
L_000c: ldfld System.Int32 attackerIdx
L_0011: callvirt BattleTech.Mech get_Item(Int32)
L_0016: stloc.0
L_0017: ldarg.0
L_0018: ldfld BattleTech.CombatGameState combat
L_001d: callvirt System.Collections.Generic.List`1[BattleTech.Mech] get_AllMechs()
L_0022: ldarg.0
L_0023: ldfld System.Int32 targetIdx
L_0028: callvirt BattleTech.Mech get_Item(Int32)
L_002d: stloc.1
L_002e: ldsfld HBS.Logging.ILog logger
L_0033: ldstr "MeleeAttackSequence: Attacker: "
L_0038: ldloc.0
L_0039: callvirt System.String get_GUID()
L_003e: ldstr ", Target: "
L_0043: ldloc.1
L_0044: callvirt System.String get_GUID()
L_0049: call System.String Concat(System.String, System.String, System.String, System.String)
L_004e: callvirt Void LogError(System.Object)
L_0053: ldloc.0
L_0054: callvirt BattleTech.CombatGameState get_Combat()
L_0059: callvirt BattleTech.MeleeRules get_MeleeRules()
L_005e: ldloc.0
L_005f: ldloc.0
L_0060: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0065: ldloc.1
L_0066: ldloc.0
L_0067: callvirt BattleTech.CombatGameState get_Combat()
L_006c: callvirt NetworkRandom get_NetworkRandom()
L_0071: ldc.r4 0
L_0076: ldc.r4 1
L_007b: callvirt Single Float(Single, Single)
L_0080: callvirt BattleTech.MeleeAttackType SelectRandomMeleeAttack(BattleTech.Mech, UnityEngine.Vector3, BattleTech.ICombatant, Single)
L_0085: stloc.2
L_0086: ldloc.2
L_0087: brtrue Label1
L_008c: ldsfld HBS.Logging.ILog logger
L_0091: ldstr "SelectRandomMeleeAttack could not select a valid attack!"
L_0096: callvirt Void LogError(System.Object)
L_009b: br Label6
L_00a0: Label1
L_00a0: newobj Void .ctor()
L_00a5: stloc.3
L_00a6: ldloc.3
L_00a7: ldloc.0
L_00a8: ldfld BattleTech.Weapon MeleeWeapon
L_00ad: callvirt Void Add(BattleTech.Weapon)
L_00b2: ldc.i4.0
L_00b3: stloc.s 5 (System.Int32)
L_00b5: br Label2
L_00ba: Label5
L_00ba: ldloc.0
L_00bb: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00c0: ldloc.s 5 (System.Int32)
L_00c2: callvirt BattleTech.Weapon get_Item(Int32)
L_00c7: stloc.s 6 (BattleTech.Weapon)
L_00c9: ldloc.s 6 (BattleTech.Weapon)
L_00cb: callvirt Boolean get_WillFire()
L_00d0: brfalse Label3
L_00d5: ldloc.s 6 (BattleTech.Weapon)
L_00d7: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_00dc: ldc.i4.4
L_00dd: bne.un Label4
L_00e2: ldloc.3
L_00e3: ldloc.s 6 (BattleTech.Weapon)
L_00e5: callvirt Void Add(BattleTech.Weapon)
L_00ea: Label3
L_00ea: Label4
L_00ea: ldloc.s 5 (System.Int32)
L_00ec: ldc.i4.1
L_00ed: add
L_00ee: stloc.s 5 (System.Int32)
L_00f0: Label2
L_00f0: ldloc.s 5 (System.Int32)
L_00f2: ldloc.0
L_00f3: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00f8: callvirt Int32 get_Count()
L_00fd: blt Label5
L_0102: ldloc.0
L_0103: callvirt BattleTech.CombatGameState get_Combat()
L_0108: callvirt BattleTech.AttackDirector get_AttackDirector()
L_010d: dup
L_010e: ldc.i4.0
L_010f: ldc.i4 9999999
L_0114: call Int32 Range(Int32, Int32)
L_0119: ldloc.0
L_011a: ldloc.1
L_011b: ldloc.0
L_011c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0121: ldloc.0
L_0122: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0127: ldc.i4.0
L_0128: ldloc.3
L_0129: ldloc.2
L_012a: ldc.i4.0
L_012b: ldc.i4.0
L_012c: callvirt AttackSequence CreateAttackSequence(Int32, BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType, Int32, Boolean)
L_0131: stloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_0133: ldloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_0135: callvirt Void ResetWeapons()
L_013a: ldloc.s 4 (BattleTech.AttackDirector+AttackSequence)
L_013c: callvirt Void PerformAttack(AttackSequence)
L_0141: Label6
L_0141: ret
DONE

### Patch BattleTech.Mech, Boolean get_CanSprint()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean get_IsLegged()
L_000c: brfalse Label1
L_0011: ldc.i4.0
L_0012: br Label4
L_0017: Label1
L_0017: ldarg.0
L_0018: call Boolean get_IsUnsteady()
L_001d: brfalse Label2
L_0022: ldc.i4.0
L_0023: br Label5
L_0028: Label2
L_0028: ldarg.0
L_0029: call Boolean get_HasFiredThisRound()
L_002e: brfalse Label3
L_0033: ldc.i4.0
L_0034: br Label6
L_0039: Label3
L_0039: ldc.i4.1
L_003a: Label4
L_003a: Label5
L_003a: Label6
L_003a: stloc 0 (System.Boolean)
L_003b: ldarg.0
L_003c: ldloca 0 (System.Boolean)
L_003e: call Void Postfix(BattleTech.Mech, Boolean ByRef)
L_0043: ldloc 0 (System.Boolean)
L_0044: ret
DONE

### Patch BattleTech.AbstractActor, Int32 get_WorkingJumpjets()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Int32)
L_0006: ldc.i4.0
L_0007: stloc.0
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: br Label1
L_000f: Label3
L_000f: ldarg.0
L_0010: ldfld System.Collections.Generic.List`1[BattleTech.Jumpjet] jumpjets
L_0015: ldloc.1
L_0016: callvirt BattleTech.Jumpjet get_Item(Int32)
L_001b: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0020: ldc.i4.3
L_0021: bge Label2
L_0026: ldloc.0
L_0027: ldc.i4.1
L_0028: add
L_0029: stloc.0
L_002a: Label2
L_002a: ldloc.1
L_002b: ldc.i4.1
L_002c: add
L_002d: stloc.1
L_002e: Label1
L_002e: ldloc.1
L_002f: ldarg.0
L_0030: ldfld System.Collections.Generic.List`1[BattleTech.Jumpjet] jumpjets
L_0035: callvirt Int32 get_Count()
L_003a: blt Label3
L_003f: ldloc.0
L_0040: stloc 2 (System.Int32)
L_0041: ldarg.0
L_0042: ldloca 2 (System.Int32)
L_0044: call Void Postfix(BattleTech.AbstractActor, Int32 ByRef)
L_0049: ldloc 2 (System.Int32)
L_004a: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog gameInfoLogger
L_0010: ldstr "CombatGameState Destroyed: {0}"
L_0015: call System.DateTime get_UtcNow()
L_001a: stloc.0
L_001b: ldloca.s 0 (System.DateTime)
L_001d: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0022: call System.String ToString(System.String)
L_0027: call System.String Format(System.String, System.Object)
L_002c: callvirt Void Log(System.Object)
L_0031: ldarg.0
L_0032: call MessageCenter get_MessageCenter()
L_0037: brfalse Label1
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: newobj Void .ctor()
L_0047: dup
L_0048: call BattleTech.GameInstance get_BattleTechGame()
L_004d: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0052: callvirt Boolean IsNetworkGameActive()
L_0057: callvirt Void set_IsNetworkGame(Boolean)
L_005c: callvirt Void PublishMessage(MessageCenterMessage)
L_0061: Label1
L_0061: ldarg.0
L_0062: call BattleTech.StackManager get_StackManager()
L_0067: brfalse Label2
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: callvirt Void OnCombatGameDestroyed()
L_0077: ldarg.0
L_0078: ldnull
L_0079: call Void set_StackManager(BattleTech.StackManager)
L_007e: Label2
L_007e: ldarg.0
L_007f: call BattleTech.TurnDirector get_TurnDirector()
L_0084: brfalse Label3
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: callvirt Void OnCombatGameDestroyed()
L_0094: Label3
L_0094: ldarg.0
L_0095: call BattleTech.InvocationHandler get_InvocationHandler()
L_009a: brfalse Label4
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: callvirt Void OnCombatGameDestroyed()
L_00aa: Label4
L_00aa: ldarg.0
L_00ab: call MessageCenter get_MessageCenter()
L_00b0: brfalse Label5
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: ldc.i4.3
L_00bc: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00c1: Label5
L_00c1: ldarg.0
L_00c2: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00c7: brfalse Label6
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: callvirt Void Dispose()
L_00d7: Label6
L_00d7: call Boolean get_HasInstance()
L_00dc: brfalse Label7
L_00e1: call HBS.DebugConsole.DebugConsole get_Instance()
L_00e6: ldarg.0
L_00e7: ldftn Void DebugConsoleOnBeforeDump()
L_00ed: newobj Void .ctor(Object, IntPtr)
L_00f2: callvirt Void remove_OnBeforeDump(DumpHandler)
L_00f7: Label7
L_00f7: call Boolean get_HasInstance()
L_00fc: brfalse Label8
L_0101: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0106: callvirt Void OnCombatSceneEnd()
L_010b: Label8
L_010b: ldnull
L_010c: call Void set_destructionConstantsComponent(DestructionConstants)
L_0111: call Void ClearStaticData()
L_0116: call Void ClearStaticData()
L_011b: call Void ClearStaticData()
L_0120: call Void ClearStaticData()
L_0125: call Void ClearStaticData()
L_012a: ldsfld HBS.Logging.ILog gameInfoLogger
L_012f: ldstr "CombatGameState destroyed: {0}"
L_0134: call System.DateTime get_UtcNow()
L_0139: stloc.0
L_013a: ldloca.s 0 (System.DateTime)
L_013c: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0141: call System.String ToString(System.String)
L_0146: call System.String Format(System.String, System.Object)
L_014b: callvirt Void Log(System.Object)
L_0150: Label0
L_0150: ret
DONE

### Patch BattleTech.TurnDirector, Void BeginNewRound(Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AutoCompleteSequence
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.AddSequenceToStackMessage
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.TurnDirector, Int32)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Boolean get_IsMissionOver()
L_0017: brfalse Label1
L_001c: br Label10
L_0021: Label1
L_0021: ldarg.0
L_0022: ldarg.1
L_0023: call Void set_CurrentRound(Int32)
L_0028: ldarg.0
L_0029: call Boolean get_IsInterleaved()
L_002e: brtrue Label2
L_0033: ldarg.0
L_0034: call Boolean get_DoAnyUnitsHaveContactWithEnemy()
L_0039: brfalse Label3
L_003e: ldarg.0
L_003f: ldc.i4.1
L_0040: call Void set_IsInterleaved(Boolean)
L_0045: ldarg.0
L_0046: call BattleTech.CombatGameState get_Combat()
L_004b: callvirt MessageCenter get_MessageCenter()
L_0050: newobj Void .ctor()
L_0055: callvirt Void PublishMessage(MessageCenterMessage)
L_005a: Label2
L_005a: Label3
L_005a: ldarg.0
L_005b: ldc.i4.0
L_005c: call Void set_IsInterleavePending(Boolean)
L_0061: ldsfld HBS.Logging.ILog logger
L_0066: ldstr "[[[============== Round "
L_006b: ldarg.0
L_006c: call Int32 get_CurrentRound()
L_0071: box System.Int32
L_0076: ldstr " Begin! ================]]]"
L_007b: call System.String Concat(System.Object, System.Object, System.Object)
L_0080: callvirt Void Log(System.Object)
L_0085: ldarg.0
L_0086: call BattleTech.CombatGameState get_Combat()
L_008b: callvirt MessageCenter get_MessageCenter()
L_0090: ldarg.0
L_0091: call Int32 get_CurrentRound()
L_0096: ldsfld System.String Empty
L_009b: newobj Void .ctor(Int32, String)
L_00a0: callvirt Void PublishMessage(MessageCenterMessage)
L_00a5: newobj Void .ctor()
L_00aa: stloc.0
L_00ab: ldc.i4.0
L_00ac: stloc.1
L_00ad: br Label4
L_00b2: Label5
L_00b2: ldloc.0
L_00b3: ldarg.0
L_00b4: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_00b9: ldloc.1
L_00ba: callvirt BattleTech.TurnActor get_Item(Int32)
L_00bf: ldarg.1
L_00c0: callvirt System.Collections.Generic.List`1[BattleTech.IStackSequence] OnRoundBegin(Int32)
L_00c5: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.IStackSequence])
L_00ca: ldloc.1
L_00cb: ldc.i4.1
L_00cc: add
L_00cd: stloc.1
L_00ce: Label4
L_00ce: ldloc.1
L_00cf: ldarg.0
L_00d0: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_00d5: callvirt Int32 get_Count()
L_00da: blt Label5
L_00df: ldloc.0
L_00e0: callvirt Int32 get_Count()
L_00e5: brtrue Label6
L_00ea: ldarg.0
L_00eb: ldstr "OnRoundBegin"
L_00f0: ldarg.0
L_00f1: ldftn Void OnRoundBeginSequencesCompleted()
L_00f7: newobj Void .ctor(Object, IntPtr)
L_00fc: call Boolean CheckAndFixStack(System.String, BattleTech.SequenceFinished)
L_0101: brtrue Label7
L_0106: ldarg.0
L_0107: ldarg.0
L_0108: call BattleTech.CombatGameState get_Combat()
L_010d: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0112: callvirt Int32 get_FirstPhase()
L_0117: call Void BeginNewPhase(Int32)
L_011c: br Label11
L_0121: Label6
L_0121: ldarg.0
L_0122: call BattleTech.CombatGameState get_Combat()
L_0127: ldarg.0
L_0128: ldftn Void OnRoundBeginSequencesCompleted()
L_012e: newobj Void .ctor(Object, IntPtr)
L_0133: newobj Void .ctor(CombatGameState, SequenceFinished)
L_0138: stloc.2
L_0139: ldarg.0
L_013a: call BattleTech.CombatGameState get_Combat()
L_013f: callvirt MessageCenter get_MessageCenter()
L_0144: ldloc.2
L_0145: newobj Void .ctor(IStackSequence)
L_014a: callvirt Void PublishMessage(MessageCenterMessage)
L_014f: ldc.i4.0
L_0150: stloc.3
L_0151: br Label8
L_0156: Label9
L_0156: ldloc.0
L_0157: ldloc.3
L_0158: callvirt BattleTech.IStackSequence get_Item(Int32)
L_015d: newobj Void .ctor(IStackSequence)
L_0162: stloc.s 4 (BattleTech.AddSequenceToStackMessage)
L_0164: ldarg.0
L_0165: call BattleTech.CombatGameState get_Combat()
L_016a: callvirt MessageCenter get_MessageCenter()
L_016f: ldloc.s 4 (BattleTech.AddSequenceToStackMessage)
L_0171: callvirt Void PublishMessage(MessageCenterMessage)
L_0176: ldloc.3
L_0177: ldc.i4.1
L_0178: add
L_0179: stloc.3
L_017a: Label8
L_017a: ldloc.3
L_017b: ldloc.0
L_017c: callvirt Int32 get_Count()
L_0181: blt Label9
L_0186: Label7
L_0186: Label10
L_0186: Label11
L_0186: Label0
L_0186: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void Init(BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: UnityEngine.Transform[]
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldfld BattleTech.AbstractActor parent
L_0007: ldarg.2
L_0008: ldarg.3
L_0009: ldc.i4.0
L_000a: ldarg.s 4
L_000c: call Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_mechComponent(BattleTech.MechComponent)
L_0018: ldarg.0
L_0019: ldarg.s 5
L_001b: call Void set_mountedLocation(Int32)
L_0020: ldnull
L_0021: stloc.0
L_0022: ldarg.1
L_0023: callvirt BattleTech.WeaponDef get_weaponDef()
L_0028: callvirt System.String get_WeaponEffectID()
L_002d: call Boolean IsNullOrEmpty(System.String)
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: call BattleTech.ICombatant get_parentCombatant()
L_003d: callvirt BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.Data.DataManager get_DataManager()
L_0047: ldarg.1
L_0048: callvirt BattleTech.WeaponDef get_weaponDef()
L_004d: callvirt System.String get_WeaponEffectID()
L_0052: ldc.i4.s 45
L_0054: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0056: initobj System.Nullable`1[UnityEngine.Vector3]
L_005c: ldloc.2
L_005d: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_005f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0065: ldloc.3
L_0066: ldnull
L_0067: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_006c: stloc.0
L_006d: Label1
L_006d: ldloc.0
L_006e: ldnull
L_006f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0074: brfalse Label2
L_0079: ldstr "Error instantiating WeaponEffect [{0}], Weapon [{1}], Parent[{2}] "
L_007e: ldarg.1
L_007f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0084: callvirt System.String get_WeaponEffectID()
L_0089: ldarg.1
L_008a: callvirt System.String get_Name()
L_008f: ldarg.s 4
L_0091: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0096: ldarg.0
L_0097: call Void LogError(System.Object, UnityEngine.Object)
L_009c: br Label12
L_00a1: Label2
L_00a1: ldloc.0
L_00a2: callvirt UnityEngine.Transform get_transform()
L_00a7: ldarg.0
L_00a8: call UnityEngine.Transform get_transform()
L_00ad: callvirt Void set_parent(UnityEngine.Transform)
L_00b2: ldloc.0
L_00b3: callvirt UnityEngine.Transform get_transform()
L_00b8: call UnityEngine.Vector3 get_zero()
L_00bd: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00c2: ldloc.0
L_00c3: callvirt UnityEngine.Transform get_transform()
L_00c8: call UnityEngine.Quaternion get_identity()
L_00cd: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00d2: ldarg.0
L_00d3: ldloc.0
L_00d4: callvirt WeaponEffect GetComponent[WeaponEffect]()
L_00d9: stfld WeaponEffect weaponEffect
L_00de: ldarg.0
L_00df: ldfld WeaponEffect weaponEffect
L_00e4: ldnull
L_00e5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ea: brfalse Label3
L_00ef: ldstr "Error finding WeaponEffect on GO [{0}], Weapon [{1}], Parent[{2}] "
L_00f4: ldarg.1
L_00f5: callvirt BattleTech.WeaponDef get_weaponDef()
L_00fa: callvirt System.String get_WeaponEffectID()
L_00ff: ldarg.1
L_0100: callvirt System.String get_Name()
L_0105: ldarg.s 4
L_0107: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_010c: ldarg.0
L_010d: call Void LogError(System.Object, UnityEngine.Object)
L_0112: br Label13
L_0117: Label3
L_0117: ldc.i4.0
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldfld UnityEngine.Transform[] vfxTransforms
L_011f: brfalse Label4
L_0124: ldarg.0
L_0125: ldfld UnityEngine.Transform[] vfxTransforms
L_012a: ldlen
L_012b: conv.i4
L_012c: ldc.i4.1
L_012d: bge Label5
L_0132: Label4
L_0132: ldc.i4.1
L_0133: stloc.1
L_0134: br Label6
L_0139: Label5
L_0139: ldarg.0
L_013a: ldfld UnityEngine.Transform[] vfxTransforms
L_013f: stloc.s 4 (UnityEngine.Transform[])
L_0141: ldc.i4.0
L_0142: stloc.s 5 (System.Int32)
L_0144: br Label7
L_0149: Label10
L_0149: ldloc.s 4 (UnityEngine.Transform[])
L_014b: ldloc.s 5 (System.Int32)
L_014d: ldelem.ref
L_014e: ldnull
L_014f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0154: brfalse Label8
L_0159: ldc.i4.1
L_015a: stloc.1
L_015b: br Label9
L_0160: Label8
L_0160: ldloc.s 5 (System.Int32)
L_0162: ldc.i4.1
L_0163: add
L_0164: stloc.s 5 (System.Int32)
L_0166: Label7
L_0166: ldloc.s 5 (System.Int32)
L_0168: ldloc.s 4 (UnityEngine.Transform[])
L_016a: ldlen
L_016b: conv.i4
L_016c: blt Label10
L_0171: Label6
L_0171: Label9
L_0171: ldloc.1
L_0172: brfalse Label11
L_0177: ldc.i4.5
L_0178: newarr System.String
L_017d: dup
L_017e: ldc.i4.0
L_017f: ldstr "WeaponRepresentation for ["
L_0184: stelem.ref
L_0185: dup
L_0186: ldc.i4.1
L_0187: ldarg.1
L_0188: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_018d: ldfld System.String prefabName
L_0192: stelem.ref
L_0193: dup
L_0194: ldc.i4.2
L_0195: ldstr "] on "
L_019a: stelem.ref
L_019b: dup
L_019c: ldc.i4.3
L_019d: ldarg.s 4
L_019f: stelem.ref
L_01a0: dup
L_01a1: ldc.i4.4
L_01a2: ldstr " had no vfxTransforms. Using WeaponRepresentation position as fallback"
L_01a7: stelem.ref
L_01a8: call System.String Concat(System.String[])
L_01ad: call Void LogError(System.Object)
L_01b2: ldarg.0
L_01b3: ldc.i4.1
L_01b4: newarr UnityEngine.Transform
L_01b9: dup
L_01ba: ldc.i4.0
L_01bb: ldarg.0
L_01bc: call UnityEngine.GameObject get_gameObject()
L_01c1: callvirt UnityEngine.Transform get_transform()
L_01c6: stelem.ref
L_01c7: stfld UnityEngine.Transform[] vfxTransforms
L_01cc: Label11
L_01cc: ldarg.0
L_01cd: ldfld WeaponEffect weaponEffect
L_01d2: ldarg.1
L_01d3: callvirt Void Init(BattleTech.Weapon)
L_01d8: Label12
L_01d8: Label13
L_01d8: ldarg.0
L_01d9: ldarg 1
L_01df: ldarg 2
L_01e5: ldarg 3
L_01eb: ldarg 4
L_01f1: ldarg 5
L_01f7: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_01fc: ret
DONE

### Patch BattleTech.Mech, Void ApplyHeatSinks(Int32)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Mech, Int32)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Int32 get_AdjustedHeatsinkCapacity()
L_0017: stloc.0
L_0018: ldarg.0
L_0019: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_001e: brfalse Label1
L_0023: ldarg.0
L_0024: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0029: ldfld System.Single heatSinkMultiplier
L_002e: ldc.r4 1
L_0033: call Boolean Approximately(Single, Single)
L_0038: brtrue Label2
L_003d: ldsfld HBS.Logging.ILog heatLogger
L_0042: ldstr "Mech {0} sinks heat at {1:P0} rate from standing in {2}"
L_0047: ldarg.0
L_0048: call System.String get_DisplayName()
L_004d: ldarg.0
L_004e: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0053: ldfld System.Single heatSinkMultiplier
L_0058: box System.Single
L_005d: ldarg.0
L_005e: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0063: callvirt System.String get_Id()
L_0068: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_006d: callvirt Void Log(System.Object)
L_0072: Label1
L_0072: Label2
L_0072: ldarg.0
L_0073: call BattleTech.CombatGameState get_Combat()
L_0078: callvirt BattleTech.MapMetaData get_MapMetaData()
L_007d: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_0082: brfalse Label3
L_0087: ldarg.0
L_0088: call BattleTech.CombatGameState get_Combat()
L_008d: callvirt BattleTech.MapMetaData get_MapMetaData()
L_0092: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_0097: ldfld System.Single heatSinkMultiplier
L_009c: ldc.r4 1
L_00a1: call Boolean Approximately(Single, Single)
L_00a6: brtrue Label4
L_00ab: ldsfld HBS.Logging.ILog heatLogger
L_00b0: ldstr "Mech {0} sinks heat at {1:P0} rate from biome mask {2}"
L_00b5: ldarg.0
L_00b6: call System.String get_DisplayName()
L_00bb: ldarg.0
L_00bc: call BattleTech.CombatGameState get_Combat()
L_00c1: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00c6: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_00cb: ldfld System.Single heatSinkMultiplier
L_00d0: box System.Single
L_00d5: ldarg.0
L_00d6: call BattleTech.CombatGameState get_Combat()
L_00db: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00e0: ldfld BattleTech.DesignMaskDef biomeDesignMask
L_00e5: callvirt System.String get_Id()
L_00ea: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_00ef: callvirt Void Log(System.Object)
L_00f4: Label3
L_00f4: Label4
L_00f4: ldarg.0
L_00f5: ldarg.0
L_00f6: call Int32 get__heat()
L_00fb: ldloc.0
L_00fc: sub
L_00fd: call Void set__heat(Int32)
L_0102: ldarg.0
L_0103: ldc.i4.1
L_0104: call Void set_HasAppliedHeatSinks(Boolean)
L_0109: ldsfld HBS.Logging.ILog heatLogger
L_010e: ldstr "Mech {0} sinks {1} points of heat; result heat = {2}"
L_0113: ldarg.0
L_0114: call System.String get_DisplayName()
L_0119: ldloc.0
L_011a: box System.Int32
L_011f: ldarg.0
L_0120: call Int32 get__heat()
L_0125: box System.Int32
L_012a: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012f: callvirt Void Log(System.Object)
L_0134: ldarg.0
L_0135: ldarg.1
L_0136: ldarg.0
L_0137: call System.String get_GUID()
L_013c: call Void ReconcileHeat(Int32, System.String)
L_0141: Label0
L_0141: ret
DONE

### Patch BattleTech.Mech, Int32 get_HeatSinkCapacity()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: call Single GetHeatSinkDissipation()
L_000c: conv.i4
L_000d: ldarg.0
L_000e: ldfld BattleTech.StatCollection statCollection
L_0013: ldstr "HeatSinkCapacity"
L_0018: callvirt Int32 GetValue[Int32](System.String)
L_001d: add
L_001e: stloc 0 (System.Int32)
L_001f: ldarg.0
L_0020: ldloca 0 (System.Int32)
L_0022: call Void Postfix(BattleTech.Mech, Int32 ByRef)
L_0027: ldloc 0 (System.Int32)
L_0028: ret
DONE

### Patch BattleTech.Mech, Void OnActivationEnd(System.String, Int32)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg 2
L_000d: call Void Prefix(BattleTech.Mech, System.String, Int32)
L_0012: ldarg.0
L_0013: call Boolean get_HasActivatedThisRound()
L_0018: brfalse Label1
L_001d: br Label2
L_0022: Label1
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: call Void OnActivationEnd(System.String, Int32)
L_002a: ldarg.0
L_002b: ldarg.1
L_002c: ldarg.2
L_002d: call Void CheckPilotStatusAfterActivation(System.String, Int32)
L_0032: Label2
L_0032: ldarg.0
L_0033: ldarg 1
L_0039: ldarg 2
L_003f: call Void Postfix(BattleTech.Mech, System.String, Int32)
L_0044: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void .ctor(AttackDirector, AbstractActor, ICombatant, Vector3, Quaternion, Int32, List`1, MeleeAttackType, Int32, Boolean, Int32, Int32)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: newobj Void .ctor()
L_0006: stfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: stfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence+MechDamage] recordedMechDamage
L_0016: ldarg.0
L_0017: newobj Void .ctor()
L_001c: stfld BattleTech.StatsGatherer damageStatsGatherer
L_0021: ldarg.0
L_0022: call Void .ctor()
L_0027: ldarg.0
L_0028: ldarg.1
L_0029: call Void set_Director(BattleTech.AttackDirector)
L_002e: ldarg.0
L_002f: ldarg.2
L_0030: stfld BattleTech.AbstractActor attacker
L_0035: ldarg.0
L_0036: ldarg.3
L_0037: stfld BattleTech.ICombatant chosenTarget
L_003c: ldarg.0
L_003d: ldarg.s 4
L_003f: stfld UnityEngine.Vector3 attackPosition
L_0044: ldarg.0
L_0045: ldarg.s 5
L_0047: stfld UnityEngine.Quaternion attackRotation
L_004c: ldarg.0
L_004d: ldarg.s 6
L_004f: stfld System.Int32 attackSequenceIdx
L_0054: ldarg.0
L_0055: ldarg.s 9
L_0057: stfld System.Int32 calledShotLocation
L_005c: ldarg.0
L_005d: ldarg.s 7
L_005f: stfld System.Collections.Generic.List`1[BattleTech.Weapon] allSelectedWeapons
L_0064: ldarg.0
L_0065: ldarg.s 10
L_0067: stfld System.Boolean isMoraleAttack
L_006c: ldarg.0
L_006d: ldarg.s 11
L_006f: stfld System.Int32 id
L_0074: ldarg.0
L_0075: ldarg.s 12
L_0077: stfld System.Int32 stackItemUID
L_007c: ldarg.0
L_007d: ldc.i4.0
L_007e: stfld System.Int32 currentFiringGroup
L_0083: ldarg.0
L_0084: ldc.r4 0
L_0089: stfld System.Single cumulativeDamage
L_008e: ldarg.0
L_008f: ldc.i4.1
L_0090: stfld System.Int32 numTargets
L_0095: ldarg.2
L_0096: callvirt BattleTech.Team get_team()
L_009b: callvirt System.String get_GUID()
L_00a0: ldarg.1
L_00a1: callvirt BattleTech.CombatGameState get_Combat()
L_00a6: callvirt System.String get_LocalPlayerTeamGuid()
L_00ab: call Boolean op_Equality(System.String, System.String)
L_00b0: brfalse Label1
L_00b5: ldarg.0
L_00b6: ldarg.2
L_00b7: callvirt BattleTech.Team get_team()
L_00bc: ldarg.3
L_00bd: callvirt BattleTech.Team get_team()
L_00c2: callvirt Single CompareTeamHealthPercentages(BattleTech.Team)
L_00c7: stfld System.Single previousTeamHealthDifference
L_00cc: br Label2
L_00d1: Label1
L_00d1: ldarg.0
L_00d2: ldarg.3
L_00d3: callvirt BattleTech.Team get_team()
L_00d8: ldarg.2
L_00d9: callvirt BattleTech.Team get_team()
L_00de: callvirt Single CompareTeamHealthPercentages(BattleTech.Team)
L_00e3: stfld System.Single previousTeamHealthDifference
L_00e8: Label2
L_00e8: ldarg.0
L_00e9: newobj Void .ctor()
L_00ee: stfld System.Collections.Generic.List`1[System.String] allWeaponIds
L_00f3: ldc.i4.0
L_00f4: stloc.0
L_00f5: br Label3
L_00fa: Label5
L_00fa: ldarg.0
L_00fb: ldfld System.Collections.Generic.List`1[System.String] allWeaponIds
L_0100: ldarg.s 7
L_0102: ldloc.0
L_0103: callvirt BattleTech.Weapon get_Item(Int32)
L_0108: callvirt System.String get_uid()
L_010d: callvirt Void Add(System.String)
L_0112: ldarg.s 7
L_0114: ldloc.0
L_0115: callvirt BattleTech.Weapon get_Item(Int32)
L_011a: ldarg.3
L_011b: ldarg.s 4
L_011d: ldarg.s 5
L_011f: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0124: brtrue Label4
L_0129: ldsfld HBS.Logging.ILog logger
L_012e: ldstr "AttackSequence: Weapon {0} is firing at target {1}, but technically cannot fire at that target."
L_0133: ldarg.s 7
L_0135: ldloc.0
L_0136: callvirt BattleTech.Weapon get_Item(Int32)
L_013b: callvirt System.String get_Name()
L_0140: ldarg.3
L_0141: callvirt System.String get_DisplayName()
L_0146: call System.String Format(System.String, System.Object, System.Object)
L_014b: callvirt Void LogWarning(System.Object)
L_0150: Label4
L_0150: ldloc.0
L_0151: ldc.i4.1
L_0152: add
L_0153: stloc.0
L_0154: Label3
L_0154: ldloc.0
L_0155: ldarg.s 7
L_0157: callvirt Int32 get_Count()
L_015c: blt Label5
L_0161: ldarg.0
L_0162: ldarg.2
L_0163: ldarg.s 4
L_0165: ldarg.s 5
L_0167: ldarg.3
L_0168: ldc.i4.1
L_0169: callvirt Boolean HasIndirectLOFToTargetUnit(UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, Boolean)
L_016e: stfld System.Boolean indirectFire
L_0173: ldarg.s 8
L_0175: brfalse Label6
L_017a: ldarg.0
L_017b: ldc.i4.1
L_017c: stfld System.Boolean isMelee
L_0181: ldarg.0
L_0182: ldarg.s 8
L_0184: stfld BattleTech.MeleeAttackType meleeAttackType
L_0189: Label6
L_0189: ldarg.3
L_018a: callvirt BattleTech.GameRepresentation get_GameRep()
L_018f: ldnull
L_0190: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0195: brfalse Label7
L_019a: ldarg.3
L_019b: callvirt BattleTech.GameRepresentation get_GameRep()
L_01a0: ldc.i4.1
L_01a1: callvirt Void SetVFXColliderEnabled(Boolean)
L_01a6: Label7
L_01a6: ldarg.0
L_01a7: newobj Void .ctor()
L_01ac: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedWeapon
L_01b1: ldarg.0
L_01b2: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedWeapon
L_01b7: ldarg.3
L_01b8: callvirt System.String get_GUID()
L_01bd: ldc.i4.0
L_01be: callvirt Void Add(System.String, Boolean)
L_01c3: ldarg.0
L_01c4: newobj Void .ctor()
L_01c9: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedAmmoExplosion
L_01ce: ldarg.0
L_01cf: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedAmmoExplosion
L_01d4: ldarg.3
L_01d5: callvirt System.String get_GUID()
L_01da: ldc.i4.0
L_01db: callvirt Void Add(System.String, Boolean)
L_01e0: ldarg.0
L_01e1: newobj Void .ctor()
L_01e6: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackContainsDodge
L_01eb: ldarg.0
L_01ec: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackContainsDodge
L_01f1: ldarg.3
L_01f2: callvirt System.String get_GUID()
L_01f7: ldc.i4.0
L_01f8: callvirt Void Add(System.String, Boolean)
L_01fd: ldarg.0
L_01fe: newobj Void .ctor()
L_0203: stfld System.Collections.Generic.Dictionary`2[System.String,System.Int32] attackCrits
L_0208: ldarg.0
L_0209: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Int32] attackCrits
L_020e: ldarg.3
L_020f: callvirt System.String get_GUID()
L_0214: ldc.i4.0
L_0215: callvirt Void Add(System.String, Int32)
L_021a: ldarg.0
L_021b: newobj Void .ctor()
L_0220: stfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.Weapon]] attackWeaponCrits
L_0225: ldarg.0
L_0226: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.Weapon]] attackWeaponCrits
L_022b: ldarg.3
L_022c: callvirt System.String get_GUID()
L_0231: newobj Void .ctor()
L_0236: callvirt Void Add(System.String, System.Collections.Generic.List`1[BattleTech.Weapon])
L_023b: ldarg.0
L_023c: newobj Void .ctor()
L_0241: stfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.AmmunitionBox]] attackAmmoCrits
L_0246: ldarg.0
L_0247: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[BattleTech.AmmunitionBox]] attackAmmoCrits
L_024c: ldarg.3
L_024d: callvirt System.String get_GUID()
L_0252: newobj Void .ctor()
L_0257: callvirt Void Add(System.String, System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_025c: ldarg.0
L_025d: newobj Void .ctor()
L_0262: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDidDamage
L_0267: ldarg.0
L_0268: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDidDamage
L_026d: ldarg.3
L_026e: callvirt System.String get_GUID()
L_0273: ldc.i4.0
L_0274: callvirt Void Add(System.String, Boolean)
L_0279: ldarg.0
L_027a: newobj Void .ctor()
L_027f: stfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackArmorDamage
L_0284: ldarg.0
L_0285: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackArmorDamage
L_028a: ldarg.3
L_028b: callvirt System.String get_GUID()
L_0290: ldc.r4 0
L_0295: callvirt Void Add(System.String, Single)
L_029a: ldarg.0
L_029b: newobj Void .ctor()
L_02a0: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] lowArmorStruck
L_02a5: ldarg.0
L_02a6: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] lowArmorStruck
L_02ab: ldarg.3
L_02ac: callvirt System.String get_GUID()
L_02b1: ldc.i4.0
L_02b2: callvirt Void Add(System.String, Boolean)
L_02b7: ldarg.0
L_02b8: newobj Void .ctor()
L_02bd: stfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackStructureDamage
L_02c2: ldarg.0
L_02c3: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Single] attackStructureDamage
L_02c8: ldarg.3
L_02c9: callvirt System.String get_GUID()
L_02ce: ldc.r4 0
L_02d3: callvirt Void Add(System.String, Single)
L_02d8: ldarg.0
L_02d9: newobj Void .ctor()
L_02de: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedLeg
L_02e3: ldarg.0
L_02e4: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedLeg
L_02e9: ldarg.3
L_02ea: callvirt System.String get_GUID()
L_02ef: ldc.i4.0
L_02f0: callvirt Void Add(System.String, Boolean)
L_02f5: ldarg.0
L_02f6: newobj Void .ctor()
L_02fb: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedAnyLocation
L_0300: ldarg.0
L_0301: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDestroyedAnyLocation
L_0306: ldarg.3
L_0307: callvirt System.String get_GUID()
L_030c: ldc.i4.0
L_030d: callvirt Void Add(System.String, Boolean)
L_0312: ldarg.0
L_0313: newobj Void .ctor()
L_0318: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDealtHeatDamage
L_031d: ldarg.0
L_031e: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackDealtHeatDamage
L_0323: ldarg.3
L_0324: callvirt System.String get_GUID()
L_0329: ldc.i4.0
L_032a: callvirt Void Add(System.String, Boolean)
L_032f: ldarg.0
L_0330: newobj Void .ctor()
L_0335: stfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedKnockdown
L_033a: ldarg.0
L_033b: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Boolean] attackCausedKnockdown
L_0340: ldarg.3
L_0341: callvirt System.String get_GUID()
L_0346: ldc.i4.0
L_0347: callvirt Void Add(System.String, Boolean)
L_034c: ldarg.0
L_034d: ldc.i4.1
L_034e: call Void set_attackCompletelyMissed(Boolean)
L_0353: ldarg.0
L_0354: ldc.i4.0
L_0355: call Void set_attackDestroyedAttackerLeg(Boolean)
L_035a: ldarg.0
L_035b: ldc.i4.0
L_035c: call Void set_attackTotalShotsFired(Int32)
L_0361: ldarg.0
L_0362: ldc.i4.0
L_0363: call Void set_attackTotalShotsHit(Int32)
L_0368: ldarg.0
L_0369: newobj Void .ctor()
L_036e: call Void set_allAffectedTargetIds(System.Collections.Generic.List`1[System.String])
L_0373: ldarg.0
L_0374: ldarg.3
L_0375: callvirt System.String get_GUID()
L_037a: call Void AddAffectedTarget(System.String)
L_037f: ldarg.0
L_0380: call Void Init()
L_0385: ldarg.0
L_0386: ldarg 1
L_038c: ldarg 2
L_0392: ldarg 3
L_0398: ldarg 4
L_039e: ldarg 5
L_03a4: ldarg 6
L_03aa: ldarg 7
L_03b0: ldarg 8
L_03b6: ldarg 9
L_03bc: ldarg 10
L_03c2: ldarg 11
L_03c8: ldarg 12
L_03ce: call Void Postfix(AttackSequence, BattleTech.AttackDirector, BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType, Int32, Boolean, Int32, Int32)
L_03d3: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: ldarg.1
L_0001: castclass BattleTech.AttackCompleteMessage
L_0006: stloc.0
L_0007: ldloc.0
L_0008: ldfld System.Int32 sequenceId
L_000d: stloc.1
L_000e: ldarg.0
L_000f: ldloc.1
L_0010: call AttackSequence GetAttackSequence(Int32)
L_0015: stloc.2
L_0016: ldloc.2
L_0017: brtrue Label1
L_001c: ldsfld HBS.Logging.ILog logger
L_0021: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_0026: ldloc.1
L_0027: box System.Int32
L_002c: call System.String Format(System.String, System.Object)
L_0031: callvirt Void LogError(System.Object)
L_0036: ldstr "OnAttackComplete received invalid sequenceID: "
L_003b: ldloc.1
L_003c: box System.Int32
L_0041: call System.String Concat(System.Object, System.Object)
L_0046: newobj Void .ctor(String)
L_004b: throw
L_004c: Label1
L_004c: ldsfld HBS.Logging.ILog logger
L_0051: callvirt Boolean get_IsLogEnabled()
L_0056: brfalse Label2
L_005b: ldsfld HBS.Logging.ILog logger
L_0060: ldstr "[OnAttackComplete] ID {0}"
L_0065: ldloc.1
L_0066: box System.Int32
L_006b: call System.String Format(System.String, System.Object)
L_0070: callvirt Void Log(System.Object)
L_0075: Label2
L_0075: ldloc.2
L_0076: ldfld BattleTech.AbstractActor attacker
L_007b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0080: ldnull
L_0081: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0086: brfalse Label3
L_008b: ldloc.2
L_008c: ldfld BattleTech.AbstractActor attacker
L_0091: callvirt BattleTech.GameRepresentation get_GameRep()
L_0096: ldc.i4.0
L_0097: ldc.r4 0.5
L_009c: ldloc.0
L_009d: ldfld System.Int32 stackItemUID
L_00a2: ldloc.0
L_00a3: ldfld System.Int32 sequenceId
L_00a8: ldnull
L_00a9: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00ae: ldloc.2
L_00af: ldfld BattleTech.AbstractActor attacker
L_00b4: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b9: ldc.i4.0
L_00ba: callvirt Void SetVFXColliderEnabled(Boolean)
L_00bf: ldloc.2
L_00c0: ldfld BattleTech.AbstractActor attacker
L_00c5: callvirt BattleTech.GameRepresentation get_GameRep()
L_00ca: isinst BattleTech.MechRepresentation
L_00cf: stloc.3
L_00d0: ldloc.3
L_00d1: ldnull
L_00d2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00d7: brfalse Label4
L_00dc: ldloc.3
L_00dd: ldc.i4.1
L_00de: callvirt Void ToggleRandomIdles(Boolean)
L_00e3: Label4
L_00e3: ldloc.2
L_00e4: ldfld BattleTech.AbstractActor attacker
L_00e9: callvirt BattleTech.Team get_team()
L_00ee: callvirt System.String get_GUID()
L_00f3: ldarg.0
L_00f4: call BattleTech.CombatGameState get_Combat()
L_00f9: callvirt System.String get_LocalPlayerTeamGuid()
L_00fe: call Boolean op_Equality(System.String, System.String)
L_0103: brfalse Label5
L_0108: ldloc.2
L_0109: ldfld BattleTech.AbstractActor attacker
L_010e: callvirt BattleTech.Team get_team()
L_0113: ldloc.2
L_0114: ldfld BattleTech.ICombatant chosenTarget
L_0119: callvirt BattleTech.Team get_team()
L_011e: ldloc.2
L_011f: ldfld System.Single previousTeamHealthDifference
L_0124: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_0129: Label3
L_0129: Label5
L_0129: ldloc.2
L_012a: ldfld BattleTech.ICombatant chosenTarget
L_012f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0134: ldnull
L_0135: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_013a: brfalse Label6
L_013f: ldloc.2
L_0140: ldfld BattleTech.ICombatant chosenTarget
L_0145: callvirt BattleTech.GameRepresentation get_GameRep()
L_014a: isinst BattleTech.MechRepresentation
L_014f: stloc.s 4 (BattleTech.MechRepresentation)
L_0151: ldloc.s 4 (BattleTech.MechRepresentation)
L_0153: ldnull
L_0154: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0159: brfalse Label7
L_015e: ldloc.s 4 (BattleTech.MechRepresentation)
L_0160: ldc.i4.1
L_0161: callvirt Void ToggleRandomIdles(Boolean)
L_0166: Label7
L_0166: ldloc.2
L_0167: ldfld BattleTech.ICombatant chosenTarget
L_016c: callvirt BattleTech.Team get_team()
L_0171: callvirt System.String get_GUID()
L_0176: ldarg.0
L_0177: call BattleTech.CombatGameState get_Combat()
L_017c: callvirt System.String get_LocalPlayerTeamGuid()
L_0181: call Boolean op_Equality(System.String, System.String)
L_0186: brfalse Label8
L_018b: ldloc.2
L_018c: ldfld BattleTech.ICombatant chosenTarget
L_0191: callvirt BattleTech.Team get_team()
L_0196: ldloc.2
L_0197: ldfld BattleTech.AbstractActor attacker
L_019c: callvirt BattleTech.Team get_team()
L_01a1: ldloc.2
L_01a2: ldfld System.Single previousTeamHealthDifference
L_01a7: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01ac: Label6
L_01ac: Label8
L_01ac: ldc.i4.0
L_01ad: stloc.s 5 (System.Int32)
L_01af: br Label9
L_01b4: Label13
L_01b4: ldarg.0
L_01b5: call BattleTech.CombatGameState get_Combat()
L_01ba: ldloc.2
L_01bb: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01c0: ldloc.s 5 (System.Int32)
L_01c2: callvirt System.String get_Item(Int32)
L_01c7: ldc.i4.0
L_01c8: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01cd: stloc.s 6 (BattleTech.ICombatant)
L_01cf: ldloc.s 6 (BattleTech.ICombatant)
L_01d1: brfalse Label10
L_01d6: ldloc.s 6 (BattleTech.ICombatant)
L_01d8: callvirt BattleTech.GameRepresentation get_GameRep()
L_01dd: ldnull
L_01de: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01e3: brtrue Label11
L_01e8: ldloc.s 6 (BattleTech.ICombatant)
L_01ea: callvirt BattleTech.GameRepresentation get_GameRep()
L_01ef: isinst BattleTech.MechRepresentation
L_01f4: stloc.s 7 (BattleTech.MechRepresentation)
L_01f6: ldloc.s 7 (BattleTech.MechRepresentation)
L_01f8: ldnull
L_01f9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01fe: brfalse Label12
L_0203: ldloc.s 7 (BattleTech.MechRepresentation)
L_0205: ldc.i4.1
L_0206: callvirt Void ToggleRandomIdles(Boolean)
L_020b: Label10
L_020b: Label11
L_020b: Label12
L_020b: ldloc.s 5 (System.Int32)
L_020d: ldc.i4.1
L_020e: add
L_020f: stloc.s 5 (System.Int32)
L_0211: Label9
L_0211: ldloc.s 5 (System.Int32)
L_0213: ldloc.2
L_0214: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0219: callvirt Int32 get_Count()
L_021e: blt Label13
L_0223: ldarg.0
L_0224: ldloc.2
L_0225: call Void RecordAttackSequenceStats(AttackSequence)
L_022a: ldarg.0
L_022b: call BattleTech.CombatGameState get_Combat()
L_0230: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0235: ldloc.2
L_0236: callvirt Void RecordAttackSequence(AttackSequence)
L_023b: ldarg.0
L_023c: ldloc.1
L_023d: call Boolean RemoveAttackSequence(Int32)
L_0242: pop
L_0243: ldarg.0
L_0244: ldarg 1
L_024a: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_024f: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: castclass BattleTech.AttackSequenceImpactMessage
L_0017: stloc.0
L_0018: ldloc.0
L_0019: ldflda BattleTech.WeaponHitInfo hitInfo
L_001e: ldfld System.Int32 attackSequenceId
L_0023: ldarg.0
L_0024: ldfld System.Int32 id
L_0029: beq Label1
L_002e: br Label33
L_0033: Label1
L_0033: ldloc.0
L_0034: ldflda BattleTech.WeaponHitInfo hitInfo
L_0039: ldfld System.Int32 attackGroupIndex
L_003e: stloc.1
L_003f: ldloc.0
L_0040: ldflda BattleTech.WeaponHitInfo hitInfo
L_0045: ldfld System.Int32 attackWeaponIndex
L_004a: stloc.2
L_004b: ldloc.0
L_004c: ldfld System.Int32 hitIndex
L_0051: stloc.3
L_0052: ldarg.0
L_0053: ldloc.1
L_0054: ldloc.2
L_0055: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_005a: stloc.s 4 (BattleTech.Weapon)
L_005c: ldloc.0
L_005d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0062: ldloc.3
L_0063: call Int32 ShotHitLocation(Int32)
L_0068: stloc.s 5 (System.Int32)
L_006a: ldloc.0
L_006b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0070: ldfld UnityEngine.Vector3[] hitPositions
L_0075: ldloc.3
L_0076: ldelem UnityEngine.Vector3
L_007b: stloc.s 6 (UnityEngine.Vector3)
L_007d: ldloc.0
L_007e: ldfld System.Single hitDamage
L_0083: stloc.s 7 (System.Single)
L_0085: ldloc.s 7 (System.Single)
L_0087: stloc.s 8 (System.Single)
L_0089: ldarg.0
L_008a: call BattleTech.AttackDirector get_Director()
L_008f: callvirt BattleTech.CombatGameState get_Combat()
L_0094: callvirt BattleTech.ToHit get_ToHit()
L_0099: ldloc.0
L_009a: ldflda BattleTech.WeaponHitInfo hitInfo
L_009f: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00a4: ldloc.3
L_00a5: ldelem.i4
L_00a6: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00ab: stloc.s 9 (System.Single)
L_00ad: ldloc.s 7 (System.Single)
L_00af: ldloc.s 9 (System.Single)
L_00b1: mul
L_00b2: stloc.s 8 (System.Single)
L_00b4: ldloc.0
L_00b5: ldflda BattleTech.WeaponHitInfo hitInfo
L_00ba: ldfld System.String[] secondaryTargetIds
L_00bf: ldloc.3
L_00c0: ldelem.ref
L_00c1: call Boolean IsNullOrEmpty(System.String)
L_00c6: ldc.i4.0
L_00c7: ceq
L_00c9: stloc.s 10 (System.Boolean)
L_00cb: ldnull
L_00cc: stloc.s 11 (BattleTech.ICombatant)
L_00ce: ldloc.s 10 (System.Boolean)
L_00d0: brfalse Label2
L_00d5: ldarg.0
L_00d6: call BattleTech.AttackDirector get_Director()
L_00db: callvirt BattleTech.CombatGameState get_Combat()
L_00e0: ldloc.0
L_00e1: ldflda BattleTech.WeaponHitInfo hitInfo
L_00e6: ldfld System.String[] secondaryTargetIds
L_00eb: ldloc.3
L_00ec: ldelem.ref
L_00ed: ldc.i4.0
L_00ee: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_00f3: stloc.s 11 (BattleTech.ICombatant)
L_00f5: Label2
L_00f5: ldarg.0
L_00f6: ldfld BattleTech.ICombatant chosenTarget
L_00fb: isinst BattleTech.AbstractActor
L_0100: stloc.s 12 (BattleTech.AbstractActor)
L_0102: ldloc.s 12 (BattleTech.AbstractActor)
L_0104: brfalse Label3
L_0109: ldarg.0
L_010a: ldfld BattleTech.AbstractActor attacker
L_010f: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0114: ldloc.s 12 (BattleTech.AbstractActor)
L_0116: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_011b: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_011d: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_011f: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0124: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0126: ldloc.s 12 (BattleTech.AbstractActor)
L_0128: ldloc.s 8 (System.Single)
L_012a: ldloc.s 4 (BattleTech.Weapon)
L_012c: callvirt BattleTech.WeaponCategory get_Category()
L_0131: ldloc.s 12 (BattleTech.AbstractActor)
L_0133: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0138: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_013a: ldc.i4.1
L_013b: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0140: stloc.s 8 (System.Single)
L_0142: ldloc.s 12 (BattleTech.AbstractActor)
L_0144: ldloc.s 8 (System.Single)
L_0146: ldloc.s 4 (BattleTech.Weapon)
L_0148: callvirt BattleTech.WeaponCategory get_Category()
L_014d: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0152: stloc.s 8 (System.Single)
L_0154: Label3
L_0154: ldloc.s 8 (System.Single)
L_0156: ldc.r4 0
L_015b: bgt.un Label4
L_0160: ldsfld HBS.Logging.ILog attackLogger
L_0165: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_016a: ldloc.s 7 (System.Single)
L_016c: box System.Single
L_0171: ldloc.s 8 (System.Single)
L_0173: box System.Single
L_0178: call System.String Format(System.String, System.Object, System.Object)
L_017d: callvirt Void LogWarning(System.Object)
L_0182: ldc.r4 0
L_0187: stloc.s 8 (System.Single)
L_0189: Label4
L_0189: ldarg.0
L_018a: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_018f: ldloc.0
L_0190: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_0195: stloc.s 13 (System.Boolean)
L_0197: ldloc.0
L_0198: ldflda BattleTech.WeaponHitInfo hitInfo
L_019d: ldloc.3
L_019e: call Boolean DidShotHitChosenTarget(Int32)
L_01a3: stloc.s 14 (System.Boolean)
L_01a5: ldloc.0
L_01a6: ldfld System.Boolean hasPlayedImpact
L_01ab: brtrue Label5
L_01b0: ldsfld HBS.Logging.ILog logger
L_01b5: callvirt Boolean get_IsDebugEnabled()
L_01ba: brfalse Label6
L_01bf: ldsfld HBS.Logging.ILog logger
L_01c4: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01c9: ldc.i4.5
L_01ca: newarr System.Object
L_01cf: dup
L_01d0: ldc.i4.0
L_01d1: ldarg.0
L_01d2: ldfld System.Int32 id
L_01d7: box System.Int32
L_01dc: stelem.ref
L_01dd: dup
L_01de: ldc.i4.1
L_01df: ldloc.1
L_01e0: box System.Int32
L_01e5: stelem.ref
L_01e6: dup
L_01e7: ldc.i4.2
L_01e8: ldloc.2
L_01e9: box System.Int32
L_01ee: stelem.ref
L_01ef: dup
L_01f0: ldc.i4.3
L_01f1: ldloc.3
L_01f2: box System.Int32
L_01f7: stelem.ref
L_01f8: dup
L_01f9: ldc.i4.4
L_01fa: ldloc.s 13 (System.Boolean)
L_01fc: box System.Boolean
L_0201: stelem.ref
L_0202: call System.String Format(System.String, System.Object[])
L_0207: callvirt Void LogDebug(System.Object)
L_020c: Label6
L_020c: ldloc.0
L_020d: ldc.i4.1
L_020e: stfld System.Boolean hasPlayedImpact
L_0213: ldarg.0
L_0214: ldfld BattleTech.ICombatant chosenTarget
L_0219: callvirt BattleTech.GameRepresentation get_GameRep()
L_021e: ldnull
L_021f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0224: brfalse Label7
L_0229: ldloc.s 14 (System.Boolean)
L_022b: brfalse Label8
L_0230: ldarg.0
L_0231: ldfld BattleTech.ICombatant chosenTarget
L_0236: callvirt BattleTech.GameRepresentation get_GameRep()
L_023b: ldloc.0
L_023c: ldfld BattleTech.WeaponHitInfo hitInfo
L_0241: ldloc.3
L_0242: ldloc.s 4 (BattleTech.Weapon)
L_0244: ldarg.0
L_0245: ldfld BattleTech.MeleeAttackType meleeAttackType
L_024a: ldarg.0
L_024b: ldfld System.Single cumulativeDamage
L_0250: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0255: ldloc.s 6 (UnityEngine.Vector3)
L_0257: stloc.s 17 (UnityEngine.Vector3)
L_0259: ldarg.0
L_025a: ldfld BattleTech.ICombatant chosenTarget
L_025f: ldloc.s 5 (System.Int32)
L_0261: callvirt Single ArmorForLocation(Int32)
L_0266: ldloc.s 8 (System.Single)
L_0268: bge.un Label9
L_026d: ldloc.0
L_026e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0273: ldfld System.String attackerId
L_0278: ldarg.0
L_0279: ldfld BattleTech.ICombatant chosenTarget
L_027e: callvirt System.String get_GUID()
L_0283: ldstr "{0}"
L_0288: ldc.i4.1
L_0289: newarr System.Object
L_028e: dup
L_028f: ldc.i4.0
L_0290: ldc.r4 1
L_0295: ldloc.s 8 (System.Single)
L_0297: call Single Max(Single, Single)
L_029c: conv.i4
L_029d: box System.Int32
L_02a2: stelem.ref
L_02a3: newobj Void .ctor(String, Object[])
L_02a8: ldarg.0
L_02a9: call BattleTech.AttackDirector get_Director()
L_02ae: callvirt BattleTech.CombatGameState get_Combat()
L_02b3: callvirt BattleTech.CombatGameConstants get_Constants()
L_02b8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02bd: ldfld System.Single floatieSizeMedium
L_02c2: ldc.i4.8
L_02c3: ldloc.s 17 (UnityEngine.Vector3)
L_02c5: ldfld System.Single x
L_02ca: ldloc.s 17 (UnityEngine.Vector3)
L_02cc: ldfld System.Single y
L_02d1: ldloc.s 17 (UnityEngine.Vector3)
L_02d3: ldfld System.Single z
L_02d8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02dd: stloc.s 18 (BattleTech.FloatieMessage)
L_02df: ldarg.0
L_02e0: call BattleTech.AttackDirector get_Director()
L_02e5: callvirt BattleTech.CombatGameState get_Combat()
L_02ea: callvirt MessageCenter get_MessageCenter()
L_02ef: ldloc.s 18 (BattleTech.FloatieMessage)
L_02f1: callvirt Void PublishMessage(MessageCenterMessage)
L_02f6: br Label10
L_02fb: Label9
L_02fb: ldloc.0
L_02fc: ldflda BattleTech.WeaponHitInfo hitInfo
L_0301: ldfld System.String attackerId
L_0306: ldarg.0
L_0307: ldfld BattleTech.ICombatant chosenTarget
L_030c: callvirt System.String get_GUID()
L_0311: ldstr "{0}"
L_0316: ldc.i4.1
L_0317: newarr System.Object
L_031c: dup
L_031d: ldc.i4.0
L_031e: ldc.r4 1
L_0323: ldloc.s 8 (System.Single)
L_0325: call Single Max(Single, Single)
L_032a: conv.i4
L_032b: box System.Int32
L_0330: stelem.ref
L_0331: newobj Void .ctor(String, Object[])
L_0336: ldarg.0
L_0337: call BattleTech.AttackDirector get_Director()
L_033c: callvirt BattleTech.CombatGameState get_Combat()
L_0341: callvirt BattleTech.CombatGameConstants get_Constants()
L_0346: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_034b: ldfld System.Single floatieSizeMedium
L_0350: ldc.i4.7
L_0351: ldloc.s 17 (UnityEngine.Vector3)
L_0353: ldfld System.Single x
L_0358: ldloc.s 17 (UnityEngine.Vector3)
L_035a: ldfld System.Single y
L_035f: ldloc.s 17 (UnityEngine.Vector3)
L_0361: ldfld System.Single z
L_0366: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_036b: stloc.s 19 (BattleTech.FloatieMessage)
L_036d: ldarg.0
L_036e: call BattleTech.AttackDirector get_Director()
L_0373: callvirt BattleTech.CombatGameState get_Combat()
L_0378: callvirt MessageCenter get_MessageCenter()
L_037d: ldloc.s 19 (BattleTech.FloatieMessage)
L_037f: callvirt Void PublishMessage(MessageCenterMessage)
L_0384: br Label11
L_0389: Label8
L_0389: ldarg.0
L_038a: ldfld BattleTech.ICombatant chosenTarget
L_038f: callvirt UnityEngine.Vector3 get_TargetPosition()
L_0394: call UnityEngine.Vector3 get_insideUnitSphere()
L_0399: ldc.r4 5
L_039e: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03a3: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03a8: stloc.s 20 (UnityEngine.Vector3)
L_03aa: ldloc.0
L_03ab: ldflda BattleTech.WeaponHitInfo hitInfo
L_03b0: ldfld System.Boolean[] dodgeSuccesses
L_03b5: ldloc.3
L_03b6: ldelem.u1
L_03b7: brfalse Label12
L_03bc: ldarg.0
L_03bd: ldfld BattleTech.ICombatant chosenTarget
L_03c2: callvirt BattleTech.GameRepresentation get_GameRep()
L_03c7: ldloc.0
L_03c8: ldfld BattleTech.WeaponHitInfo hitInfo
L_03cd: ldloc.3
L_03ce: ldloc.s 4 (BattleTech.Weapon)
L_03d0: ldarg.0
L_03d1: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03d6: ldarg.0
L_03d7: ldfld System.Single cumulativeDamage
L_03dc: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_03e1: ldloc.0
L_03e2: ldflda BattleTech.WeaponHitInfo hitInfo
L_03e7: ldfld System.String attackerId
L_03ec: ldarg.0
L_03ed: ldfld BattleTech.ICombatant chosenTarget
L_03f2: callvirt System.String get_GUID()
L_03f7: ldstr "EVADE"
L_03fc: call System.Object[] Empty[Object]()
L_0401: newobj Void .ctor(String, Object[])
L_0406: ldarg.0
L_0407: call BattleTech.AttackDirector get_Director()
L_040c: callvirt BattleTech.CombatGameState get_Combat()
L_0411: callvirt BattleTech.CombatGameConstants get_Constants()
L_0416: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_041b: ldfld System.Single floatieSizeMedium
L_0420: ldc.i4.6
L_0421: ldloc.s 20 (UnityEngine.Vector3)
L_0423: ldfld System.Single x
L_0428: ldloc.s 20 (UnityEngine.Vector3)
L_042a: ldfld System.Single y
L_042f: ldloc.s 20 (UnityEngine.Vector3)
L_0431: ldfld System.Single z
L_0436: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_043b: stloc.s 21 (BattleTech.FloatieMessage)
L_043d: ldarg.0
L_043e: call BattleTech.AttackDirector get_Director()
L_0443: callvirt BattleTech.CombatGameState get_Combat()
L_0448: callvirt MessageCenter get_MessageCenter()
L_044d: ldloc.s 21 (BattleTech.FloatieMessage)
L_044f: callvirt Void PublishMessage(MessageCenterMessage)
L_0454: br Label13
L_0459: Label12
L_0459: ldarg.0
L_045a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_045f: brfalse Label14
L_0464: ldarg.0
L_0465: ldfld BattleTech.ICombatant chosenTarget
L_046a: callvirt BattleTech.GameRepresentation get_GameRep()
L_046f: ldloc.0
L_0470: ldfld BattleTech.WeaponHitInfo hitInfo
L_0475: ldloc.3
L_0476: ldloc.s 4 (BattleTech.Weapon)
L_0478: ldarg.0
L_0479: ldfld BattleTech.MeleeAttackType meleeAttackType
L_047e: ldarg.0
L_047f: ldfld System.Single cumulativeDamage
L_0484: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0489: ldloc.0
L_048a: ldflda BattleTech.WeaponHitInfo hitInfo
L_048f: ldfld System.String attackerId
L_0494: ldloc.0
L_0495: ldflda BattleTech.WeaponHitInfo hitInfo
L_049a: ldfld System.String targetId
L_049f: ldstr "MISS!"
L_04a4: call System.Object[] Empty[Object]()
L_04a9: newobj Void .ctor(String, Object[])
L_04ae: ldarg.0
L_04af: call BattleTech.AttackDirector get_Director()
L_04b4: callvirt BattleTech.CombatGameState get_Combat()
L_04b9: callvirt BattleTech.CombatGameConstants get_Constants()
L_04be: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04c3: ldfld System.Single floatieSizeMedium
L_04c8: ldc.i4.5
L_04c9: ldloc.s 20 (UnityEngine.Vector3)
L_04cb: ldfld System.Single x
L_04d0: ldloc.s 20 (UnityEngine.Vector3)
L_04d2: ldfld System.Single y
L_04d7: ldloc.s 20 (UnityEngine.Vector3)
L_04d9: ldfld System.Single z
L_04de: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_04e3: stloc.s 22 (BattleTech.FloatieMessage)
L_04e5: ldarg.0
L_04e6: call BattleTech.AttackDirector get_Director()
L_04eb: callvirt BattleTech.CombatGameState get_Combat()
L_04f0: callvirt MessageCenter get_MessageCenter()
L_04f5: ldloc.s 22 (BattleTech.FloatieMessage)
L_04f7: callvirt Void PublishMessage(MessageCenterMessage)
L_04fc: br Label15
L_0501: Label14
L_0501: ldloc.s 4 (BattleTech.Weapon)
L_0503: callvirt Int32 get_ShotsWhenFired()
L_0508: ldc.i4.1
L_0509: bgt Label16
L_050e: ldc.i4.5
L_050f: br Label17
L_0514: Label16
L_0514: ldc.i4.4
L_0515: Label17
L_0515: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0517: ldloc.0
L_0518: ldflda BattleTech.WeaponHitInfo hitInfo
L_051d: ldfld System.String attackerId
L_0522: ldloc.0
L_0523: ldflda BattleTech.WeaponHitInfo hitInfo
L_0528: ldfld System.String targetId
L_052d: ldstr "MISS!"
L_0532: call System.Object[] Empty[Object]()
L_0537: newobj Void .ctor(String, Object[])
L_053c: ldarg.0
L_053d: call BattleTech.AttackDirector get_Director()
L_0542: callvirt BattleTech.CombatGameState get_Combat()
L_0547: callvirt BattleTech.CombatGameConstants get_Constants()
L_054c: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0551: ldfld System.Single floatieSizeMedium
L_0556: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0558: ldloc.s 20 (UnityEngine.Vector3)
L_055a: ldfld System.Single x
L_055f: ldloc.s 20 (UnityEngine.Vector3)
L_0561: ldfld System.Single y
L_0566: ldloc.s 20 (UnityEngine.Vector3)
L_0568: ldfld System.Single z
L_056d: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0572: stloc.s 24 (BattleTech.FloatieMessage)
L_0574: ldarg.0
L_0575: call BattleTech.AttackDirector get_Director()
L_057a: callvirt BattleTech.CombatGameState get_Combat()
L_057f: callvirt MessageCenter get_MessageCenter()
L_0584: ldloc.s 24 (BattleTech.FloatieMessage)
L_0586: callvirt Void PublishMessage(MessageCenterMessage)
L_058b: Label13
L_058b: Label15
L_058b: ldloc.s 10 (System.Boolean)
L_058d: brfalse Label18
L_0592: ldloc.0
L_0593: ldflda BattleTech.WeaponHitInfo hitInfo
L_0598: ldfld System.String attackerId
L_059d: ldloc.0
L_059e: ldflda BattleTech.WeaponHitInfo hitInfo
L_05a3: ldfld System.String targetId
L_05a8: ldstr "STRAY SHOT"
L_05ad: call System.Object[] Empty[Object]()
L_05b2: newobj Void .ctor(String, Object[])
L_05b7: ldarg.0
L_05b8: call BattleTech.AttackDirector get_Director()
L_05bd: callvirt BattleTech.CombatGameState get_Combat()
L_05c2: callvirt BattleTech.CombatGameConstants get_Constants()
L_05c7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05cc: ldfld System.Single floatieSizeLarge
L_05d1: ldc.i4.5
L_05d2: ldloc.s 6 (UnityEngine.Vector3)
L_05d4: ldfld System.Single x
L_05d9: ldloc.s 6 (UnityEngine.Vector3)
L_05db: ldfld System.Single y
L_05e0: ldloc.s 6 (UnityEngine.Vector3)
L_05e2: ldfld System.Single z
L_05e7: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05ec: stloc.s 25 (BattleTech.FloatieMessage)
L_05ee: ldarg.0
L_05ef: call BattleTech.AttackDirector get_Director()
L_05f4: callvirt BattleTech.CombatGameState get_Combat()
L_05f9: callvirt MessageCenter get_MessageCenter()
L_05fe: ldloc.s 25 (BattleTech.FloatieMessage)
L_0600: callvirt Void PublishMessage(MessageCenterMessage)
L_0605: ldloc.s 11 (BattleTech.ICombatant)
L_0607: brfalse Label19
L_060c: ldloc.s 11 (BattleTech.ICombatant)
L_060e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0613: ldnull
L_0614: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0619: brfalse Label20
L_061e: ldloc.s 11 (BattleTech.ICombatant)
L_0620: callvirt BattleTech.GameRepresentation get_GameRep()
L_0625: ldloc.0
L_0626: ldfld BattleTech.WeaponHitInfo hitInfo
L_062b: ldloc.3
L_062c: ldloc.s 4 (BattleTech.Weapon)
L_062e: ldarg.0
L_062f: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0634: ldarg.0
L_0635: ldfld System.Single cumulativeDamage
L_063a: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_063f: Label20
L_063f: ldloc.s 11 (BattleTech.ICombatant)
L_0641: ldloc.s 5 (System.Int32)
L_0643: callvirt Single ArmorForLocation(Int32)
L_0648: ldloc.s 8 (System.Single)
L_064a: bge.un Label21
L_064f: ldloc.0
L_0650: ldflda BattleTech.WeaponHitInfo hitInfo
L_0655: ldfld System.String attackerId
L_065a: ldloc.s 11 (BattleTech.ICombatant)
L_065c: callvirt System.String get_GUID()
L_0661: ldstr "{0}"
L_0666: ldc.i4.1
L_0667: newarr System.Object
L_066c: dup
L_066d: ldc.i4.0
L_066e: ldc.r4 1
L_0673: ldloc.s 8 (System.Single)
L_0675: call Single Max(Single, Single)
L_067a: conv.i4
L_067b: box System.Int32
L_0680: stelem.ref
L_0681: newobj Void .ctor(String, Object[])
L_0686: ldarg.0
L_0687: call BattleTech.AttackDirector get_Director()
L_068c: callvirt BattleTech.CombatGameState get_Combat()
L_0691: callvirt BattleTech.CombatGameConstants get_Constants()
L_0696: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_069b: ldfld System.Single floatieSizeMedium
L_06a0: ldc.i4.8
L_06a1: ldloc.s 6 (UnityEngine.Vector3)
L_06a3: ldfld System.Single x
L_06a8: ldloc.s 6 (UnityEngine.Vector3)
L_06aa: ldfld System.Single y
L_06af: ldloc.s 6 (UnityEngine.Vector3)
L_06b1: ldfld System.Single z
L_06b6: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06bb: stloc.s 26 (BattleTech.FloatieMessage)
L_06bd: ldarg.0
L_06be: call BattleTech.AttackDirector get_Director()
L_06c3: callvirt BattleTech.CombatGameState get_Combat()
L_06c8: callvirt MessageCenter get_MessageCenter()
L_06cd: ldloc.s 26 (BattleTech.FloatieMessage)
L_06cf: callvirt Void PublishMessage(MessageCenterMessage)
L_06d4: br Label22
L_06d9: Label21
L_06d9: ldloc.0
L_06da: ldflda BattleTech.WeaponHitInfo hitInfo
L_06df: ldfld System.String attackerId
L_06e4: ldloc.s 11 (BattleTech.ICombatant)
L_06e6: callvirt System.String get_GUID()
L_06eb: ldstr "{0}"
L_06f0: ldc.i4.1
L_06f1: newarr System.Object
L_06f6: dup
L_06f7: ldc.i4.0
L_06f8: ldc.r4 1
L_06fd: ldloc.s 8 (System.Single)
L_06ff: call Single Max(Single, Single)
L_0704: conv.i4
L_0705: box System.Int32
L_070a: stelem.ref
L_070b: newobj Void .ctor(String, Object[])
L_0710: ldarg.0
L_0711: call BattleTech.AttackDirector get_Director()
L_0716: callvirt BattleTech.CombatGameState get_Combat()
L_071b: callvirt BattleTech.CombatGameConstants get_Constants()
L_0720: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0725: ldfld System.Single floatieSizeMedium
L_072a: ldc.i4.7
L_072b: ldloc.s 6 (UnityEngine.Vector3)
L_072d: ldfld System.Single x
L_0732: ldloc.s 6 (UnityEngine.Vector3)
L_0734: ldfld System.Single y
L_0739: ldloc.s 6 (UnityEngine.Vector3)
L_073b: ldfld System.Single z
L_0740: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0745: stloc.s 27 (BattleTech.FloatieMessage)
L_0747: ldarg.0
L_0748: call BattleTech.AttackDirector get_Director()
L_074d: callvirt BattleTech.CombatGameState get_Combat()
L_0752: callvirt MessageCenter get_MessageCenter()
L_0757: ldloc.s 27 (BattleTech.FloatieMessage)
L_0759: callvirt Void PublishMessage(MessageCenterMessage)
L_075e: Label7
L_075e: Label10
L_075e: Label11
L_075e: Label18
L_075e: Label19
L_075e: Label22
L_075e: ldloc.s 4 (BattleTech.Weapon)
L_0760: callvirt BattleTech.WeaponType get_Type()
L_0765: ldc.i4.3
L_0766: beq Label23
L_076b: ldloc.s 4 (BattleTech.Weapon)
L_076d: callvirt BattleTech.WeaponType get_Type()
L_0772: ldc.i4.7
L_0773: beq Label24
L_0778: call BattleTech.CameraControl get_Instance()
L_077d: ldloc.s 8 (System.Single)
L_077f: ldarg.0
L_0780: call BattleTech.AttackDirector get_Director()
L_0785: callvirt BattleTech.CombatGameState get_Combat()
L_078a: callvirt BattleTech.CombatGameConstants get_Constants()
L_078f: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0794: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_0799: mul
L_079a: ldarg.0
L_079b: call BattleTech.AttackDirector get_Director()
L_07a0: callvirt BattleTech.CombatGameState get_Combat()
L_07a5: callvirt BattleTech.CombatGameConstants get_Constants()
L_07aa: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07af: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07b4: add
L_07b5: ldc.r4 1
L_07ba: ldloc.s 6 (UnityEngine.Vector3)
L_07bc: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07c1: Label5
L_07c1: Label23
L_07c1: Label24
L_07c1: ldloc.s 13 (System.Boolean)
L_07c3: brtrue Label25
L_07c8: ldarg.0
L_07c9: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07ce: ldloc.0
L_07cf: callvirt Void StoreMessage(MessageCenterMessage)
L_07d4: br Label34
L_07d9: Label25
L_07d9: ldsfld HBS.Logging.ILog logger
L_07de: callvirt Boolean get_IsLogEnabled()
L_07e3: brfalse Label26
L_07e8: ldsfld HBS.Logging.ILog logger
L_07ed: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_07f2: ldc.i4.4
L_07f3: newarr System.Object
L_07f8: dup
L_07f9: ldc.i4.0
L_07fa: ldarg.0
L_07fb: ldfld System.Int32 id
L_0800: box System.Int32
L_0805: stelem.ref
L_0806: dup
L_0807: ldc.i4.1
L_0808: ldloc.1
L_0809: box System.Int32
L_080e: stelem.ref
L_080f: dup
L_0810: ldc.i4.2
L_0811: ldloc.2
L_0812: box System.Int32
L_0817: stelem.ref
L_0818: dup
L_0819: ldc.i4.3
L_081a: ldloc.3
L_081b: box System.Int32
L_0820: stelem.ref
L_0821: call System.String Format(System.String, System.Object[])
L_0826: callvirt Void Log(System.Object)
L_082b: ldsfld HBS.Logging.ILog logger
L_0830: callvirt Boolean get_IsDebugEnabled()
L_0835: brfalse Label27
L_083a: ldsfld HBS.Logging.ILog logger
L_083f: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0844: ldloc.s 4 (BattleTech.Weapon)
L_0846: callvirt System.String get_Name()
L_084b: ldarg.0
L_084c: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0851: constrained. BattleTech.MeleeAttackType
L_0857: callvirt System.String ToString()
L_085c: ldloca.s 5 (System.Int32)
L_085e: call System.String ToString()
L_0863: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0868: callvirt Void LogDebug(System.Object)
L_086d: Label26
L_086d: Label27
L_086d: ldloc.s 14 (System.Boolean)
L_086f: brfalse Label28
L_0874: ldarg.0
L_0875: ldarg.0
L_0876: ldfld System.Single cumulativeDamage
L_087b: ldloc.s 8 (System.Single)
L_087d: add
L_087e: stfld System.Single cumulativeDamage
L_0883: ldarg.0
L_0884: ldfld BattleTech.ICombatant chosenTarget
L_0889: ldloc.0
L_088a: ldfld BattleTech.WeaponHitInfo hitInfo
L_088f: ldloc.s 5 (System.Int32)
L_0891: ldloc.s 4 (BattleTech.Weapon)
L_0893: ldloc.s 8 (System.Single)
L_0895: ldloc.3
L_0896: ldc.i4.s 12
L_0898: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_089d: ldarg.0
L_089e: ldfld BattleTech.ICombatant chosenTarget
L_08a3: ldarg.0
L_08a4: ldfld BattleTech.AbstractActor attacker
L_08a9: callvirt System.String get_GUID()
L_08ae: callvirt Void HandleDeath(System.String)
L_08b3: br Label29
L_08b8: Label28
L_08b8: ldloc.s 10 (System.Boolean)
L_08ba: brfalse Label30
L_08bf: ldloc.s 11 (BattleTech.ICombatant)
L_08c1: brfalse Label31
L_08c6: ldloc.s 7 (System.Single)
L_08c8: ldloc.s 9 (System.Single)
L_08ca: mul
L_08cb: stloc.s 8 (System.Single)
L_08cd: ldloc.s 11 (BattleTech.ICombatant)
L_08cf: isinst BattleTech.AbstractActor
L_08d4: stloc.s 28 (BattleTech.AbstractActor)
L_08d6: ldloc.s 28 (BattleTech.AbstractActor)
L_08d8: brfalse Label32
L_08dd: ldarg.0
L_08de: ldfld BattleTech.AbstractActor attacker
L_08e3: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_08e8: ldloc.s 28 (BattleTech.AbstractActor)
L_08ea: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_08ef: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_08f1: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_08f3: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_08f8: stloc.s 29 (BattleTech.LineOfFireLevel)
L_08fa: ldloc.s 28 (BattleTech.AbstractActor)
L_08fc: ldloc.s 8 (System.Single)
L_08fe: ldloc.s 4 (BattleTech.Weapon)
L_0900: callvirt BattleTech.WeaponCategory get_Category()
L_0905: ldloc.s 28 (BattleTech.AbstractActor)
L_0907: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_090c: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_090e: ldc.i4.1
L_090f: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0914: stloc.s 8 (System.Single)
L_0916: ldloc.s 28 (BattleTech.AbstractActor)
L_0918: ldloc.s 8 (System.Single)
L_091a: ldloc.s 4 (BattleTech.Weapon)
L_091c: callvirt BattleTech.WeaponCategory get_Category()
L_0921: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0926: stloc.s 8 (System.Single)
L_0928: Label32
L_0928: ldloc.s 11 (BattleTech.ICombatant)
L_092a: ldloc.0
L_092b: ldfld BattleTech.WeaponHitInfo hitInfo
L_0930: ldloc.0
L_0931: ldflda BattleTech.WeaponHitInfo hitInfo
L_0936: ldloc.3
L_0937: call Int32 ShotHitLocation(Int32)
L_093c: ldloc.s 4 (BattleTech.Weapon)
L_093e: ldloc.s 8 (System.Single)
L_0940: ldloc.3
L_0941: ldc.i4.s 12
L_0943: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0948: ldloc.s 11 (BattleTech.ICombatant)
L_094a: ldarg.0
L_094b: ldfld BattleTech.AbstractActor attacker
L_0950: callvirt System.String get_GUID()
L_0955: callvirt Void HandleDeath(System.String)
L_095a: Label29
L_095a: Label30
L_095a: Label31
L_095a: ldarg.0
L_095b: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0960: ldloc.0
L_0961: callvirt Void MessageComplete(MessageCenterMessage)
L_0966: Label33
L_0966: Label34
L_0966: Label0
L_0966: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_Combat(BattleTech.CombatGameState)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: newobj Void .ctor(CombatGameState)
L_000e: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0013: ldarg.0
L_0014: ldarg.0
L_0015: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_001a: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0025: ldnull
L_0026: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_002b: brfalse Label1
L_0030: ldsfld HBS.Logging.ILog uiLogger
L_0035: ldstr "Couldn't find Selection Handler."
L_003a: callvirt Void LogWarning(System.Object)
L_003f: br Label2
L_0044: Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_004a: ldarg.1
L_004b: ldarg.0
L_004c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0051: Label2
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: ldc.i4.1
L_0054: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_0059: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_005e: ldarg.0
L_005f: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0064: ldnull
L_0065: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_006a: brfalse Label3
L_006f: ldsfld HBS.Logging.ILog uiLogger
L_0074: ldstr "Couldn't find MechTray under the CombatHUD."
L_0079: callvirt Void LogWarning(System.Object)
L_007e: br Label4
L_0083: Label3
L_0083: ldarg.0
L_0084: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0089: ldarg.1
L_008a: callvirt MessageCenter get_MessageCenter()
L_008f: ldarg.0
L_0090: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_0095: Label4
L_0095: ldarg.0
L_0096: ldarg.0
L_0097: ldc.i4.1
L_0098: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_009d: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00a2: ldarg.0
L_00a3: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00a8: ldnull
L_00a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ae: brfalse Label5
L_00b3: ldsfld HBS.Logging.ILog uiLogger
L_00b8: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00bd: callvirt Void LogWarning(System.Object)
L_00c2: br Label6
L_00c7: Label5
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00cd: ldarg.1
L_00ce: ldarg.0
L_00cf: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00d4: ldarg.0
L_00d5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00da: ldarg.1
L_00db: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00e0: callvirt Void RefreshTeam(BattleTech.Team)
L_00e5: Label6
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldc.i4.1
L_00e8: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00ed: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_00f2: ldarg.0
L_00f3: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_00f8: ldnull
L_00f9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label7
L_0103: ldsfld HBS.Logging.ILog uiLogger
L_0108: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_010d: callvirt Void LogWarning(System.Object)
L_0112: br Label8
L_0117: Label7
L_0117: ldarg.0
L_0118: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011d: ldnull
L_011e: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0123: ldarg.0
L_0124: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0129: ldarg.1
L_012a: ldarg.0
L_012b: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0130: Label8
L_0130: ldarg.0
L_0131: call BattleTech.UI.UIManager get_Instance()
L_0136: ldstr ""
L_013b: ldc.i4.1
L_013c: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0141: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0146: ldarg.0
L_0147: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_014c: ldnull
L_014d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0152: brfalse Label9
L_0157: ldsfld HBS.Logging.ILog uiLogger
L_015c: ldstr "Error creating PhaseTrack!"
L_0161: callvirt Void LogWarning(System.Object)
L_0166: br Label10
L_016b: Label9
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0171: ldarg.1
L_0172: ldarg.0
L_0173: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0178: Label10
L_0178: ldarg.0
L_0179: call BattleTech.UI.UIManager get_Instance()
L_017e: ldstr ""
L_0183: ldc.i4.1
L_0184: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_0189: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_018e: ldarg.0
L_018f: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_0194: ldnull
L_0195: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_019a: brfalse Label11
L_019f: ldsfld HBS.Logging.ILog uiLogger
L_01a4: ldstr "Error creating Turn Event Notification!"
L_01a9: callvirt Void LogError(System.Object)
L_01ae: br Label12
L_01b3: Label11
L_01b3: ldarg.0
L_01b4: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b9: ldarg.1
L_01ba: ldarg.0
L_01bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01c0: Label12
L_01c0: ldarg.1
L_01c1: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01c6: callvirt Boolean IsNetworkGameActive()
L_01cb: brfalse Label13
L_01d0: ldarg.0
L_01d1: call BattleTech.UI.UIManager get_Instance()
L_01d6: ldstr ""
L_01db: ldc.i4.1
L_01dc: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01e1: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01e6: ldarg.0
L_01e7: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01ec: ldnull
L_01ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f2: brfalse Label14
L_01f7: ldsfld HBS.Logging.ILog uiLogger
L_01fc: ldstr "Error creating multiplayer UI!"
L_0201: callvirt Void LogError(System.Object)
L_0206: br Label15
L_020b: Label14
L_020b: ldarg.0
L_020c: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0211: ldarg.0
L_0212: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0217: Label13
L_0217: Label15
L_0217: ldarg.0
L_0218: call BattleTech.UI.UIManager get_Instance()
L_021d: ldstr ""
L_0222: ldc.i4.1
L_0223: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0228: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0233: ldnull
L_0234: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0239: brfalse Label16
L_023e: ldsfld HBS.Logging.ILog uiLogger
L_0243: ldstr "Error creating Targeting Computer!"
L_0248: callvirt Void LogError(System.Object)
L_024d: br Label17
L_0252: Label16
L_0252: ldarg.0
L_0253: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0258: ldarg.0
L_0259: callvirt Void Init(BattleTech.UI.CombatHUD)
L_025e: Label17
L_025e: ldarg.0
L_025f: call BattleTech.UI.UIManager get_Instance()
L_0264: ldstr ""
L_0269: ldc.i4.1
L_026a: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_026f: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_027a: ldnull
L_027b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0280: brfalse Label18
L_0285: ldsfld HBS.Logging.ILog uiLogger
L_028a: ldstr "Error creating Called Shot Popup!"
L_028f: callvirt Void LogError(System.Object)
L_0294: br Label19
L_0299: Label18
L_0299: ldarg.0
L_029a: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029f: ldarg.0
L_02a0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02a5: Label19
L_02a5: ldarg.0
L_02a6: call BattleTech.UI.UIManager get_Instance()
L_02ab: ldstr ""
L_02b0: ldc.i4.1
L_02b1: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02b6: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02c1: ldnull
L_02c2: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02c7: brfalse Label20
L_02cc: ldsfld HBS.Logging.ILog uiLogger
L_02d1: ldstr "Error creating Attack Mode Selector!"
L_02d6: callvirt Void LogError(System.Object)
L_02db: br Label21
L_02e0: Label20
L_02e0: ldarg.0
L_02e1: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e6: ldarg.1
L_02e7: ldarg.0
L_02e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02ed: ldarg.0
L_02ee: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f3: ldc.i4.0
L_02f4: callvirt Void set_Visible(Boolean)
L_02f9: Label21
L_02f9: ldarg.0
L_02fa: ldarg.0
L_02fb: call UnityEngine.GameObject get_gameObject()
L_0300: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0305: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_030a: ldarg.0
L_030b: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0310: ldnull
L_0311: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0316: brfalse Label22
L_031b: ldsfld HBS.Logging.ILog uiLogger
L_0320: ldstr "Error finding InWorldElementMgr!"
L_0325: callvirt Void LogError(System.Object)
L_032a: br Label23
L_032f: Label22
L_032f: ldarg.0
L_0330: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0335: ldarg.1
L_0336: ldarg.0
L_0337: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_033c: Label23
L_033c: ldarg.0
L_033d: call BattleTech.UI.UIManager get_Instance()
L_0342: ldstr ""
L_0347: ldc.i4.1
L_0348: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_034d: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0352: ldarg.0
L_0353: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0358: ldnull
L_0359: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035e: brfalse Label24
L_0363: ldsfld HBS.Logging.ILog uiLogger
L_0368: ldstr "Error creating Objective Status Notification!"
L_036d: callvirt Void LogError(System.Object)
L_0372: Label24
L_0372: ldarg.0
L_0373: call BattleTech.UI.UIManager get_Instance()
L_0378: ldstr ""
L_037d: ldc.i4.1
L_037e: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0383: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0388: ldarg.0
L_0389: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_038e: ldnull
L_038f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0394: brfalse Label25
L_0399: ldsfld HBS.Logging.ILog uiLogger
L_039e: ldstr "Error creating Objective List!"
L_03a3: callvirt Void LogError(System.Object)
L_03a8: br Label26
L_03ad: Label25
L_03ad: ldarg.0
L_03ae: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b3: ldarg.1
L_03b4: ldarg.0
L_03b5: ldarg.0
L_03b6: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03bb: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03c0: Label26
L_03c0: call BattleTech.UI.UIManager get_Instance()
L_03c5: ldstr ""
L_03ca: ldc.i4.1
L_03cb: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03d0: stloc.0
L_03d1: ldloc.0
L_03d2: callvirt Void Init()
L_03d7: ldloc.0
L_03d8: ldc.i4.0
L_03d9: callvirt Void set_Visible(Boolean)
L_03de: ldarg.0
L_03df: call BattleTech.UI.UIManager get_Instance()
L_03e4: ldstr ""
L_03e9: ldc.i4.1
L_03ea: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_03ef: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_03f4: ldarg.0
L_03f5: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_03fa: ldnull
L_03fb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0400: brfalse Label27
L_0405: ldsfld HBS.Logging.ILog uiLogger
L_040a: ldstr "Error creating DialogSideStack!"
L_040f: callvirt Void LogError(System.Object)
L_0414: br Label28
L_0419: Label27
L_0419: ldarg.0
L_041a: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041f: ldarg.1
L_0420: ldarg.0
L_0421: ldloc.0
L_0422: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0427: Label28
L_0427: ldarg.0
L_0428: call BattleTech.UI.UIManager get_Instance()
L_042d: ldstr ""
L_0432: ldc.i4.1
L_0433: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0438: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_043d: ldarg.0
L_043e: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0443: ldnull
L_0444: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0449: brfalse Label29
L_044e: ldsfld HBS.Logging.ILog uiLogger
L_0453: ldstr "Error creating DialogWidget!"
L_0458: callvirt Void LogError(System.Object)
L_045d: br Label30
L_0462: Label29
L_0462: ldarg.0
L_0463: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0468: ldarg.1
L_0469: callvirt Void Init(BattleTech.CombatGameState)
L_046e: Label30
L_046e: ldarg.0
L_046f: call BattleTech.UI.UIManager get_Instance()
L_0474: ldstr ""
L_0479: ldc.i4.1
L_047a: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_047f: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0484: ldarg.0
L_0485: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_048a: ldnull
L_048b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0490: brfalse Label31
L_0495: ldsfld HBS.Logging.ILog uiLogger
L_049a: ldstr "Error creating RetreatEscMenu!"
L_049f: callvirt Void LogError(System.Object)
L_04a4: br Label32
L_04a9: Label31
L_04a9: ldarg.0
L_04aa: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04af: ldarg.1
L_04b0: ldarg.0
L_04b1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04b6: Label32
L_04b6: ldarg.0
L_04b7: call BattleTech.UI.UIManager get_Instance()
L_04bc: ldstr ""
L_04c1: ldc.i4.1
L_04c2: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04c7: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04cc: ldarg.0
L_04cd: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04d2: ldnull
L_04d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d8: brfalse Label33
L_04dd: ldsfld HBS.Logging.ILog uiLogger
L_04e2: ldstr "Error creating mission end screen!"
L_04e7: callvirt Void LogError(System.Object)
L_04ec: br Label34
L_04f1: Label33
L_04f1: ldarg.0
L_04f2: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f7: callvirt Void Init()
L_04fc: Label34
L_04fc: ldarg.0
L_04fd: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0502: ldnull
L_0503: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0508: brfalse Label35
L_050d: ldarg.0
L_050e: call BattleTech.UI.UIManager get_Instance()
L_0513: ldstr ""
L_0518: ldc.i4.1
L_0519: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_051e: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0523: ldarg.0
L_0524: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0529: ldnull
L_052a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_052f: brfalse Label36
L_0534: ldsfld HBS.Logging.ILog uiLogger
L_0539: ldstr "Error creating combat chat module"
L_053e: callvirt Void LogError(System.Object)
L_0543: br Label37
L_0548: Label36
L_0548: ldarg.0
L_0549: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054e: callvirt Void CombatInit()
L_0553: ldloc.0
L_0554: callvirt Void BumpUp()
L_0559: Label35
L_0559: Label37
L_0559: ldarg.0
L_055a: call BattleTech.UI.UIManager get_Instance()
L_055f: ldstr "DebugHUD"
L_0564: ldc.i4.1
L_0565: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_056a: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_056f: ldarg.0
L_0570: call BattleTech.UI.DebugHUD get_debugHUD()
L_0575: ldnull
L_0576: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_057b: brfalse Label38
L_0580: ldsfld HBS.Logging.ILog uiLogger
L_0585: ldstr "Error creating combat debug hud"
L_058a: callvirt Void LogError(System.Object)
L_058f: br Label39
L_0594: Label38
L_0594: ldarg.0
L_0595: call BattleTech.UI.DebugHUD get_debugHUD()
L_059a: ldarg.1
L_059b: ldarg.0
L_059c: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05a1: Label39
L_05a1: newobj Void .ctor()
L_05a6: stloc.1
L_05a7: ldarg.0
L_05a8: ldc.i4.1
L_05a9: ldloc.1
L_05aa: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05af: ldc.i4.0
L_05b0: stloc.2
L_05b1: br Label40
L_05b6: Label42
L_05b6: ldloc.1
L_05b7: ldloc.2
L_05b8: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05bd: callvirt Boolean get_IsInitialized()
L_05c2: brtrue Label41
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: ldarg.0
L_05cf: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05d4: Label41
L_05d4: ldloc.2
L_05d5: ldc.i4.1
L_05d6: add
L_05d7: stloc.2
L_05d8: Label40
L_05d8: ldloc.2
L_05d9: ldloc.1
L_05da: callvirt Int32 get_Count()
L_05df: blt Label42
L_05e4: ldarg.0
L_05e5: ldfld BattleTech.UI.UIManager uiManager
L_05ea: ldc.i4.1
L_05eb: callvirt Void SetUIRootInteractable(Boolean)
L_05f0: ldarg.1
L_05f1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_05f6: callvirt Int32 get_CurrentRound()
L_05fb: brfalse Label43
L_0600: ldarg.0
L_0601: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0606: ldarg.1
L_0607: callvirt BattleTech.TurnDirector get_TurnDirector()
L_060c: callvirt Int32 get_CurrentRound()
L_0611: callvirt Void SetRoundFromLoad(Int32)
L_0616: Label43
L_0616: ldarg.0
L_0617: ldc.i4.1
L_0618: call Void SubscribeToMessages(Boolean)
L_061d: ldarg.0
L_061e: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0623: ldarg.0
L_0624: ldarg 1
L_062a: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_062f: ret
DONE

### Patch BattleTech.AbstractActor, Void ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef, Int32)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 2: System.Boolean
L_0000: ldarg.1
L_0001: brfalse Label1
L_0006: ldarg.1
L_0007: ldfld BattleTech.EffectData stickyEffect
L_000c: brfalse Label2
L_0011: ldarg.1
L_0012: ldfld BattleTech.EffectData stickyEffect
L_0017: ldfld BattleTech.EffectType effectType
L_001c: brfalse Label3
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldarg.1
L_0025: ldfld BattleTech.EffectData stickyEffect
L_002a: ldnull
L_002b: ldarg.0
L_002c: call System.String get_GUID()
L_0031: ldarg.2
L_0032: ldarg.0
L_0033: ldc.i4.0
L_0034: call Boolean CreateEffect(BattleTech.EffectData, BattleTech.Ability, System.String, Int32, BattleTech.AbstractActor, Boolean)
L_0039: brfalse Label4
L_003e: ldarg.1
L_003f: ldfld BattleTech.EffectData stickyEffect
L_0044: ldfld BattleTech.EffectNature nature
L_0049: ldc.i4.1
L_004a: beq Label5
L_004f: ldc.i4.2
L_0050: br Label6
L_0055: Label5
L_0055: ldc.i4.1
L_0056: Label6
L_0056: stloc.1
L_0057: ldarg.0
L_0058: call BattleTech.CombatGameState get_Combat()
L_005d: callvirt MessageCenter get_MessageCenter()
L_0062: ldarg.0
L_0063: call System.String get_GUID()
L_0068: ldarg.0
L_0069: call System.String get_GUID()
L_006e: ldarg.1
L_006f: ldfld BattleTech.EffectData stickyEffect
L_0074: ldfld BattleTech.BaseDescriptionDef Description
L_0079: callvirt System.String get_Name()
L_007e: ldloc.1
L_007f: newobj Void .ctor(String, String, String, MessageNature)
L_0084: callvirt Void PublishMessage(MessageCenterMessage)
L_0089: ldc.i4.1
L_008a: stloc.0
L_008b: Label4
L_008b: ldsfld HBS.Logging.ILog logger
L_0090: callvirt Boolean get_IsDebugEnabled()
L_0095: brfalse Label7
L_009a: ldarg.1
L_009b: ldfld BattleTech.EffectData stickyEffect
L_00a0: ldfld BattleTech.StatisticEffectData statisticData
L_00a5: brfalse Label8
L_00aa: ldarg.1
L_00ab: ldfld BattleTech.EffectData stickyEffect
L_00b0: ldfld BattleTech.StatisticEffectData statisticData
L_00b5: ldfld System.String statName
L_00ba: ldstr "ReceivedInstabilityMultiplier"
L_00bf: call Boolean op_Equality(System.String, System.String)
L_00c4: br Label9
L_00c9: Label8
L_00c9: ldc.i4.0
L_00ca: Label9
L_00ca: stloc.2
L_00cb: ldsfld HBS.Logging.ILog logger
L_00d0: ldstr "[ApplyDesignMaskStickyEffect] Actor {0} applying {1}. Is InstabilityMultiplier? {2} Actually applied? {3}"
L_00d5: ldc.i4.4
L_00d6: newarr System.Object
L_00db: dup
L_00dc: ldc.i4.0
L_00dd: ldarg.0
L_00de: call System.String get_GUID()
L_00e3: stelem.ref
L_00e4: dup
L_00e5: ldc.i4.1
L_00e6: ldarg.1
L_00e7: ldfld BattleTech.EffectData stickyEffect
L_00ec: ldfld BattleTech.EffectType effectType
L_00f1: box BattleTech.EffectType
L_00f6: stelem.ref
L_00f7: dup
L_00f8: ldc.i4.2
L_00f9: ldloc.2
L_00fa: box System.Boolean
L_00ff: stelem.ref
L_0100: dup
L_0101: ldc.i4.3
L_0102: ldloc.0
L_0103: box System.Boolean
L_0108: stelem.ref
L_0109: call System.String Format(System.String, System.Object[])
L_010e: callvirt Void LogDebug(System.Object)
L_0113: Label1
L_0113: Label2
L_0113: Label3
L_0113: Label7
L_0113: ldarg.0
L_0114: ldarg 1
L_011a: ldarg 2
L_0120: call Void Postfix(BattleTech.AbstractActor, BattleTech.DesignMaskDef, Int32)
L_0125: ret
DONE

### Patch BattleTech.Rendering.Trees.RenderTrees, Void InitQuadTree()
L_0000: Local var 0: UnityEngine.TreeInstance[]
L_0000: Local var 1: UnityEngine.TreePrototype[]
L_0000: Local var 2: BattleTech.Rendering.Trees.TreeContainer
L_0000: Local var 3: UnityEngine.GameObject
L_0000: Local var 4: UnityEngine.GameObject
L_0000: Local var 5: UnityEngine.LODGroup[]
L_0000: Local var 6: System.Collections.Generic.List`1[[UnityEngine.LODGroup, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Collections.Generic.List`1[[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject
L_0000: Local var 11: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 12: System.Int32
L_0000: Local var 13: System.Int32
L_0000: Local var 14: UnityEngine.Vector3
L_0000: Local var 15: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 16: UnityEngine.Quaternion
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: UnityEngine.Matrix4x4
L_0000: Local var 19: System.Int32
L_0000: Local var 20: Gaia.StampParent
L_0000: Local var 21: UnityEngine.GameObject
L_0000: Local var 22: System.Int32
L_0000: Local var 23: UnityEngine.GameObject
L_0000: Local var 24: System.Int32
L_0000: Local var 25: UnityEngine.LODGroup
L_0000: Local var 26: System.String
L_0000: Local var 27: UnityEngine.Mesh
L_0000: Local var 28: BattleTech.Rendering.Trees.QuadTreePrototype
L_0000: Local var 29: UnityEngine.Matrix4x4
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: call UnityEngine.Terrain get_terrain()
L_0007: ldarg.0
L_0008: ldfld System.Int32 maxDepth
L_000d: ldarg.0
L_000e: ldflda UnityEngine.CullingGroup treeCullingGroup
L_0013: newobj Void .ctor(Terrain, Int32, CullingGroup&)
L_0018: stfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_001d: ldarg.0
L_001e: call UnityEngine.Terrain get_terrain()
L_0023: callvirt UnityEngine.TerrainData get_terrainData()
L_0028: callvirt UnityEngine.TreeInstance[] get_treeInstances()
L_002d: stloc.0
L_002e: ldarg.0
L_002f: call UnityEngine.Terrain get_terrain()
L_0034: callvirt UnityEngine.TerrainData get_terrainData()
L_0039: callvirt UnityEngine.TreePrototype[] get_treePrototypes()
L_003e: stloc.1
L_003f: ldloc.0
L_0040: ldlen
L_0041: brtrue Label1
L_0046: ldarg.0
L_0047: ldc.i4.0
L_0048: call Void set_enabled(Boolean)
L_004d: br Label45
L_0052: Label1
L_0052: ldarg.0
L_0053: ldloc.1
L_0054: ldloca.s 0 (UnityEngine.TreeInstance[])
L_0056: call Void SanatizeTrees(UnityEngine.TreePrototype[], UnityEngine.TreeInstance[] ByRef)
L_005b: ldarg.0
L_005c: ldloc.1
L_005d: ldlen
L_005e: conv.i4
L_005f: newarr BattleTech.Rendering.Trees.QuadTreePrototype
L_0064: stfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0069: ldc.i4.0
L_006a: stloc.s 7 (System.Int32)
L_006c: br Label2
L_0071: Label5
L_0071: ldloc.1
L_0072: ldloc.s 7 (System.Int32)
L_0074: ldelem.ref
L_0075: brfalse Label3
L_007a: ldloc.1
L_007b: ldloc.s 7 (System.Int32)
L_007d: ldelem.ref
L_007e: callvirt UnityEngine.GameObject get_prefab()
L_0083: ldnull
L_0084: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0089: brtrue Label4
L_008e: ldarg.0
L_008f: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0094: ldloc.s 7 (System.Int32)
L_0096: ldloc.1
L_0097: ldloc.s 7 (System.Int32)
L_0099: ldelem.ref
L_009a: newobj Void .ctor(TreePrototype)
L_009f: stelem.ref
L_00a0: Label3
L_00a0: Label4
L_00a0: ldloc.s 7 (System.Int32)
L_00a2: ldc.i4.1
L_00a3: add
L_00a4: stloc.s 7 (System.Int32)
L_00a6: Label2
L_00a6: ldloc.s 7 (System.Int32)
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_00ae: ldlen
L_00af: conv.i4
L_00b0: blt Label5
L_00b5: ldarg.0
L_00b6: call UnityEngine.Terrain get_terrain()
L_00bb: callvirt BattleTech.Rendering.Trees.TreeContainer GetComponent[TreeContainer]()
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: ldnull
L_00c3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c8: brfalse Label6
L_00cd: ldloc.2
L_00ce: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_00d3: stloc.s 8 (System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject])
L_00d5: ldc.i4.0
L_00d6: stloc.s 9 (System.Int32)
L_00d8: br Label7
L_00dd: Label10
L_00dd: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject])
L_00df: ldloc.s 9 (System.Int32)
L_00e1: callvirt TreeContainerObject get_Item(Int32)
L_00e6: stloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_00e8: ldarg.0
L_00e9: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_00ee: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_00f0: ldfld System.Int32 treeInstance
L_00f5: ldelem.ref
L_00f6: stloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_00fe: ldloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0100: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0102: ldfld UnityEngine.Matrix4x4 trs
L_0107: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0109: ldfld UnityEngine.Vector3 position
L_010e: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0110: ldfld UnityEngine.Quaternion rotation
L_0115: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0117: ldfld UnityEngine.Vector3 lossyScale
L_011c: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0121: ldc.i4.0
L_0122: stloc.s 12 (System.Int32)
L_0124: br Label8
L_0129: Label9
L_0129: ldarg.0
L_012a: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_012f: ldloc.s 12 (System.Int32)
L_0131: ldelem.ref
L_0132: ldloc.s 11 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0134: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0136: ldfld UnityEngine.Matrix4x4[] distantTrs
L_013b: ldloc.s 12 (System.Int32)
L_013d: ldelem UnityEngine.Matrix4x4
L_0142: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0144: ldfld UnityEngine.Vector3[] distantPosition
L_0149: ldloc.s 12 (System.Int32)
L_014b: ldelem UnityEngine.Vector3
L_0150: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0152: ldfld UnityEngine.Quaternion rotation
L_0157: ldloc.s 10 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0159: ldfld UnityEngine.Vector3 lossyScale
L_015e: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0163: ldloc.s 12 (System.Int32)
L_0165: ldc.i4.1
L_0166: add
L_0167: stloc.s 12 (System.Int32)
L_0169: Label8
L_0169: ldloc.s 12 (System.Int32)
L_016b: ldc.i4.8
L_016c: blt Label9
L_0171: ldloc.s 9 (System.Int32)
L_0173: ldc.i4.1
L_0174: add
L_0175: stloc.s 9 (System.Int32)
L_0177: Label7
L_0177: ldloc.s 9 (System.Int32)
L_0179: ldloc.2
L_017a: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_017f: callvirt Int32 get_Count()
L_0184: blt Label10
L_0189: br Label11
L_018e: Label6
L_018e: ldc.i4.0
L_018f: stloc.s 13 (System.Int32)
L_0191: br Label12
L_0196: Label17
L_0196: ldloc.1
L_0197: ldloc.0
L_0198: ldloc.s 13 (System.Int32)
L_019a: ldelema UnityEngine.TreeInstance
L_019f: ldfld System.Int32 prototypeIndex
L_01a4: ldelem.ref
L_01a5: callvirt UnityEngine.GameObject get_prefab()
L_01aa: ldnull
L_01ab: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01b0: brtrue Label13
L_01b5: ldloc.0
L_01b6: ldloc.s 13 (System.Int32)
L_01b8: ldelema UnityEngine.TreeInstance
L_01bd: ldfld UnityEngine.Vector3 position
L_01c2: stloc.s 14 (UnityEngine.Vector3)
L_01c4: ldloca.s 14 (UnityEngine.Vector3)
L_01c6: ldloc.s 14 (UnityEngine.Vector3)
L_01c8: ldfld System.Single x
L_01cd: ldarg.0
L_01ce: call UnityEngine.Terrain get_terrain()
L_01d3: callvirt UnityEngine.TerrainData get_terrainData()
L_01d8: callvirt UnityEngine.Vector3 get_size()
L_01dd: ldfld System.Single x
L_01e2: mul
L_01e3: ldarg.0
L_01e4: call UnityEngine.Terrain get_terrain()
L_01e9: callvirt UnityEngine.Transform get_transform()
L_01ee: callvirt UnityEngine.Vector3 get_position()
L_01f3: ldfld System.Single x
L_01f8: add
L_01f9: stfld System.Single x
L_01fe: ldloca.s 14 (UnityEngine.Vector3)
L_0200: ldloc.s 14 (UnityEngine.Vector3)
L_0202: ldfld System.Single y
L_0207: ldarg.0
L_0208: call UnityEngine.Terrain get_terrain()
L_020d: callvirt UnityEngine.TerrainData get_terrainData()
L_0212: callvirt UnityEngine.Vector3 get_size()
L_0217: ldfld System.Single y
L_021c: mul
L_021d: ldarg.0
L_021e: call UnityEngine.Terrain get_terrain()
L_0223: callvirt UnityEngine.Transform get_transform()
L_0228: callvirt UnityEngine.Vector3 get_position()
L_022d: ldfld System.Single y
L_0232: add
L_0233: stfld System.Single y
L_0238: ldloca.s 14 (UnityEngine.Vector3)
L_023a: ldloc.s 14 (UnityEngine.Vector3)
L_023c: ldfld System.Single z
L_0241: ldarg.0
L_0242: call UnityEngine.Terrain get_terrain()
L_0247: callvirt UnityEngine.TerrainData get_terrainData()
L_024c: callvirt UnityEngine.Vector3 get_size()
L_0251: ldfld System.Single z
L_0256: mul
L_0257: ldarg.0
L_0258: call UnityEngine.Terrain get_terrain()
L_025d: callvirt UnityEngine.Transform get_transform()
L_0262: callvirt UnityEngine.Vector3 get_position()
L_0267: ldfld System.Single z
L_026c: add
L_026d: stfld System.Single z
L_0272: ldarg.0
L_0273: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0278: ldloc.0
L_0279: ldloc.s 13 (System.Int32)
L_027b: ldelema UnityEngine.TreeInstance
L_0280: ldfld System.Int32 prototypeIndex
L_0285: ldelem.ref
L_0286: stloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0288: ldc.r4 0
L_028d: ldloc.0
L_028e: ldloc.s 13 (System.Int32)
L_0290: ldelema UnityEngine.TreeInstance
L_0295: ldfld System.Single rotation
L_029a: ldc.r4 57.29578
L_029f: mul
L_02a0: ldc.r4 0
L_02a5: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_02aa: stloc.s 16 (UnityEngine.Quaternion)
L_02ac: ldloca.s 17 (UnityEngine.Vector3)
L_02ae: ldloc.0
L_02af: ldloc.s 13 (System.Int32)
L_02b1: ldelema UnityEngine.TreeInstance
L_02b6: ldfld System.Single widthScale
L_02bb: ldloc.0
L_02bc: ldloc.s 13 (System.Int32)
L_02be: ldelema UnityEngine.TreeInstance
L_02c3: ldfld System.Single heightScale
L_02c8: ldloc.0
L_02c9: ldloc.s 13 (System.Int32)
L_02cb: ldelema UnityEngine.TreeInstance
L_02d0: ldfld System.Single widthScale
L_02d5: call Void .ctor(Single, Single, Single)
L_02da: ldloc.s 14 (UnityEngine.Vector3)
L_02dc: ldloc.s 16 (UnityEngine.Quaternion)
L_02de: ldloc.s 17 (UnityEngine.Vector3)
L_02e0: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_02e5: stloc.s 18 (UnityEngine.Matrix4x4)
L_02e7: ldarg.0
L_02e8: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_02ed: ldloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_02ef: ldloc.s 18 (UnityEngine.Matrix4x4)
L_02f1: ldloc.s 14 (UnityEngine.Vector3)
L_02f3: ldloc.s 16 (UnityEngine.Quaternion)
L_02f5: ldloc.s 17 (UnityEngine.Vector3)
L_02f7: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_02fc: ldarg.0
L_02fd: call Boolean get_isUrban()
L_0302: brtrue Label14
L_0307: ldc.i4.0
L_0308: stloc.s 19 (System.Int32)
L_030a: br Label15
L_030f: Label16
L_030f: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_0314: ldloc.s 19 (System.Int32)
L_0316: ldelema UnityEngine.Matrix4x4
L_031b: ldloc.s 14 (UnityEngine.Vector3)
L_031d: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_0322: ldloc.s 16 (UnityEngine.Quaternion)
L_0324: ldloc.s 17 (UnityEngine.Vector3)
L_0326: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_032b: stloc.s 18 (UnityEngine.Matrix4x4)
L_032d: ldarg.0
L_032e: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_0333: ldloc.s 19 (System.Int32)
L_0335: ldelem.ref
L_0336: ldloc.s 15 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0338: ldloc.s 18 (UnityEngine.Matrix4x4)
L_033a: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_033f: ldloc.s 19 (System.Int32)
L_0341: ldelema UnityEngine.Matrix4x4
L_0346: ldloc.s 14 (UnityEngine.Vector3)
L_0348: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_034d: ldloc.s 16 (UnityEngine.Quaternion)
L_034f: ldloc.s 17 (UnityEngine.Vector3)
L_0351: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0356: ldloc.s 19 (System.Int32)
L_0358: ldc.i4.1
L_0359: add
L_035a: stloc.s 19 (System.Int32)
L_035c: Label15
L_035c: ldloc.s 19 (System.Int32)
L_035e: ldc.i4.8
L_035f: blt Label16
L_0364: Label13
L_0364: Label14
L_0364: ldloc.s 13 (System.Int32)
L_0366: ldc.i4.1
L_0367: add
L_0368: stloc.s 13 (System.Int32)
L_036a: Label12
L_036a: ldloc.s 13 (System.Int32)
L_036c: ldloc.0
L_036d: ldlen
L_036e: conv.i4
L_036f: blt Label17
L_0374: Label11
L_0374: ldnull
L_0375: stloc.3
L_0376: ldstr "Parent_Placed_Trees"
L_037b: call UnityEngine.GameObject Find(System.String)
L_0380: stloc.s 4 (UnityEngine.GameObject)
L_0382: ldarg.0
L_0383: ldfld System.Boolean captureGaia
L_0388: brfalse Label18
L_038d: call Gaia.StampParent FindObjectOfType[StampParent]()
L_0392: stloc.s 20 (Gaia.StampParent)
L_0394: ldloc.s 20 (Gaia.StampParent)
L_0396: ldnull
L_0397: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_039c: brfalse Label19
L_03a1: ldloc.s 20 (Gaia.StampParent)
L_03a3: callvirt UnityEngine.GameObject get_gameObject()
L_03a8: stloc.3
L_03a9: br Label20
L_03ae: Label19
L_03ae: ldstr "GAME"
L_03b3: call UnityEngine.GameObject Find(System.String)
L_03b8: stloc.s 21 (UnityEngine.GameObject)
L_03ba: ldc.i4.0
L_03bb: stloc.s 22 (System.Int32)
L_03bd: br Label21
L_03c2: Label24
L_03c2: ldloc.s 21 (UnityEngine.GameObject)
L_03c4: callvirt UnityEngine.Transform get_transform()
L_03c9: ldloc.s 22 (System.Int32)
L_03cb: callvirt UnityEngine.Transform GetChild(Int32)
L_03d0: callvirt UnityEngine.GameObject get_gameObject()
L_03d5: stloc.s 23 (UnityEngine.GameObject)
L_03d7: ldloc.s 23 (UnityEngine.GameObject)
L_03d9: callvirt System.String get_name()
L_03de: ldstr "Parent_Stamp_Deco"
L_03e3: call Boolean op_Equality(System.String, System.String)
L_03e8: brfalse Label22
L_03ed: ldloc.s 23 (UnityEngine.GameObject)
L_03ef: stloc.3
L_03f0: br Label23
L_03f5: Label22
L_03f5: ldloc.s 22 (System.Int32)
L_03f7: ldc.i4.1
L_03f8: add
L_03f9: stloc.s 22 (System.Int32)
L_03fb: Label21
L_03fb: ldloc.s 22 (System.Int32)
L_03fd: ldloc.s 21 (UnityEngine.GameObject)
L_03ff: callvirt UnityEngine.Transform get_transform()
L_0404: callvirt Int32 get_childCount()
L_0409: blt Label24
L_040e: Label18
L_040e: Label20
L_040e: Label23
L_040e: ldloc.3
L_040f: ldnull
L_0410: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0415: brtrue Label25
L_041a: ldloc.3
L_041b: callvirt Boolean get_activeInHierarchy()
L_0420: brtrue Label26
L_0425: Label25
L_0425: ldloc.s 4 (UnityEngine.GameObject)
L_0427: ldnull
L_0428: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_042d: brtrue Label27
L_0432: ldloc.s 4 (UnityEngine.GameObject)
L_0434: callvirt Boolean get_activeInHierarchy()
L_0439: brtrue Label28
L_043e: Label27
L_043e: br Label46
L_0443: Label26
L_0443: Label28
L_0443: ldc.i4.0
L_0444: newarr UnityEngine.LODGroup
L_0449: stloc.s 5 (UnityEngine.LODGroup[])
L_044b: newobj Void .ctor()
L_0450: stloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0452: ldloc.3
L_0453: ldnull
L_0454: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0459: brfalse Label29
L_045e: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0460: ldloc.3
L_0461: callvirt UnityEngine.LODGroup[] GetComponentsInChildren[LODGroup]()
L_0466: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.LODGroup])
L_046b: Label29
L_046b: ldloc.s 4 (UnityEngine.GameObject)
L_046d: ldnull
L_046e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0473: brfalse Label30
L_0478: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_047a: ldloc.s 4 (UnityEngine.GameObject)
L_047c: callvirt UnityEngine.LODGroup[] GetComponentsInChildren[LODGroup]()
L_0481: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.LODGroup])
L_0486: Label30
L_0486: ldloc.s 6 (System.Collections.Generic.List`1[UnityEngine.LODGroup])
L_0488: callvirt UnityEngine.LODGroup[] ToArray()
L_048d: stloc.s 5 (UnityEngine.LODGroup[])
L_048f: ldc.i4.0
L_0490: stloc.s 24 (System.Int32)
L_0492: br Label31
L_0497: Label41
L_0497: ldloc.s 5 (UnityEngine.LODGroup[])
L_0499: ldloc.s 24 (System.Int32)
L_049b: ldelem.ref
L_049c: stloc.s 25 (UnityEngine.LODGroup)
L_049e: ldloc.s 25 (UnityEngine.LODGroup)
L_04a0: callvirt UnityEngine.GameObject get_gameObject()
L_04a5: callvirt System.String get_name()
L_04aa: stloc.s 26 (System.String)
L_04ac: ldloc.s 26 (System.String)
L_04ae: ldstr "Tree"
L_04b3: callvirt Boolean Contains(System.String)
L_04b8: brtrue Label32
L_04bd: ldloc.s 26 (System.String)
L_04bf: ldstr "Bush"
L_04c4: callvirt Boolean Contains(System.String)
L_04c9: brfalse Label33
L_04ce: Label32
L_04ce: ldloc.s 25 (UnityEngine.LODGroup)
L_04d0: callvirt UnityEngine.LOD[] GetLODs()
L_04d5: ldc.i4.0
L_04d6: ldelema UnityEngine.LOD
L_04db: ldfld UnityEngine.Renderer[] renderers
L_04e0: ldc.i4.0
L_04e1: ldelem.ref
L_04e2: callvirt UnityEngine.MeshFilter GetComponentInChildren[MeshFilter]()
L_04e7: callvirt UnityEngine.Mesh get_sharedMesh()
L_04ec: stloc.s 27 (UnityEngine.Mesh)
L_04ee: ldnull
L_04ef: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_04f1: ldc.i4.0
L_04f2: stloc.s 30 (System.Int32)
L_04f4: br Label34
L_04f9: Label39
L_04f9: ldarg.0
L_04fa: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_04ff: ldloc.s 30 (System.Int32)
L_0501: ldelem.ref
L_0502: brfalse Label35
L_0507: ldarg.0
L_0508: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_050d: ldloc.s 30 (System.Int32)
L_050f: ldelem.ref
L_0510: callvirt UnityEngine.Mesh[] get_meshes()
L_0515: brfalse Label36
L_051a: ldarg.0
L_051b: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0520: ldloc.s 30 (System.Int32)
L_0522: ldelem.ref
L_0523: callvirt UnityEngine.Mesh[] get_meshes()
L_0528: ldc.i4.0
L_0529: ldelem.ref
L_052a: ldloc.s 27 (UnityEngine.Mesh)
L_052c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0531: brfalse Label37
L_0536: ldarg.0
L_0537: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_053c: ldloc.s 30 (System.Int32)
L_053e: ldelem.ref
L_053f: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0541: br Label38
L_0546: Label35
L_0546: Label36
L_0546: Label37
L_0546: ldloc.s 30 (System.Int32)
L_0548: ldc.i4.1
L_0549: add
L_054a: stloc.s 30 (System.Int32)
L_054c: Label34
L_054c: ldloc.s 30 (System.Int32)
L_054e: ldarg.0
L_054f: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0554: ldlen
L_0555: conv.i4
L_0556: blt Label39
L_055b: Label38
L_055b: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_055d: brtrue Label40
L_0562: ldarg.0
L_0563: ldflda BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0568: ldarg.0
L_0569: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_056e: ldlen
L_056f: conv.i4
L_0570: ldc.i4.1
L_0571: add
L_0572: call Void Resize[QuadTreePrototype](BattleTech.Rendering.Trees.QuadTreePrototype[] ByRef, Int32)
L_0577: ldloc.s 25 (UnityEngine.LODGroup)
L_0579: newobj Void .ctor(LODGroup)
L_057e: stloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0580: ldarg.0
L_0581: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_0586: ldarg.0
L_0587: ldfld BattleTech.Rendering.Trees.QuadTreePrototype[] quadTreePrototypes
L_058c: ldlen
L_058d: conv.i4
L_058e: ldc.i4.1
L_058f: sub
L_0590: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_0592: stelem.ref
L_0593: Label40
L_0593: ldloc.s 25 (UnityEngine.LODGroup)
L_0595: callvirt UnityEngine.GameObject get_gameObject()
L_059a: callvirt UnityEngine.Transform get_transform()
L_059f: callvirt UnityEngine.Vector3 get_position()
L_05a4: ldloc.s 25 (UnityEngine.LODGroup)
L_05a6: callvirt UnityEngine.GameObject get_gameObject()
L_05ab: callvirt UnityEngine.Transform get_transform()
L_05b0: callvirt UnityEngine.Quaternion get_rotation()
L_05b5: ldloc.s 25 (UnityEngine.LODGroup)
L_05b7: callvirt UnityEngine.GameObject get_gameObject()
L_05bc: callvirt UnityEngine.Transform get_transform()
L_05c1: callvirt UnityEngine.Vector3 get_lossyScale()
L_05c6: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_05cb: stloc.s 29 (UnityEngine.Matrix4x4)
L_05cd: ldarg.0
L_05ce: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_05d3: ldloc.s 28 (BattleTech.Rendering.Trees.QuadTreePrototype)
L_05d5: ldloc.s 29 (UnityEngine.Matrix4x4)
L_05d7: ldloc.s 25 (UnityEngine.LODGroup)
L_05d9: callvirt UnityEngine.GameObject get_gameObject()
L_05de: callvirt UnityEngine.Transform get_transform()
L_05e3: callvirt UnityEngine.Vector3 get_position()
L_05e8: ldloc.s 25 (UnityEngine.LODGroup)
L_05ea: callvirt UnityEngine.GameObject get_gameObject()
L_05ef: callvirt UnityEngine.Transform get_transform()
L_05f4: callvirt UnityEngine.Quaternion get_rotation()
L_05f9: ldloc.s 25 (UnityEngine.LODGroup)
L_05fb: callvirt UnityEngine.GameObject get_gameObject()
L_0600: callvirt UnityEngine.Transform get_transform()
L_0605: callvirt UnityEngine.Vector3 get_lossyScale()
L_060a: callvirt Void Insert(BattleTech.Rendering.Trees.QuadTreePrototype, UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_060f: ldloc.s 25 (UnityEngine.LODGroup)
L_0611: callvirt UnityEngine.Transform get_transform()
L_0616: callvirt UnityEngine.Transform get_parent()
L_061b: callvirt UnityEngine.GameObject get_gameObject()
L_0620: ldc.i4.0
L_0621: callvirt Void SetActive(Boolean)
L_0626: Label33
L_0626: ldloc.s 24 (System.Int32)
L_0628: ldc.i4.1
L_0629: add
L_062a: stloc.s 24 (System.Int32)
L_062c: Label31
L_062c: ldloc.s 24 (System.Int32)
L_062e: ldloc.s 5 (UnityEngine.LODGroup[])
L_0630: ldlen
L_0631: conv.i4
L_0632: blt Label41
L_0637: newobj Void .ctor()
L_063c: stsfld System.Collections.Generic.Dictionary`2[BattleTech.Rendering.Trees.QuadTreePrototype,System.Collections.Generic.List`1[UnityEngine.Matrix4x4]] masterTreeList
L_0641: ldloc.s 4 (UnityEngine.GameObject)
L_0643: ldnull
L_0644: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0649: brfalse Label42
L_064e: ldloc.s 4 (UnityEngine.GameObject)
L_0650: ldc.i4.0
L_0651: callvirt Void SetActive(Boolean)
L_0656: Label42
L_0656: ldarg.0
L_0657: call Void RebakeImposters()
L_065c: ldarg.0
L_065d: ldfld BattleTech.Rendering.Trees.QuadTree _quadTree
L_0662: callvirt Void InitializeImposters()
L_0667: ldc.i4.0
L_0668: stloc.s 31 (System.Int32)
L_066a: br Label43
L_066f: Label44
L_066f: ldarg.0
L_0670: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_0675: ldloc.s 31 (System.Int32)
L_0677: ldelem.ref
L_0678: callvirt Void SetupImposters()
L_067d: ldloc.s 31 (System.Int32)
L_067f: ldc.i4.1
L_0680: add
L_0681: stloc.s 31 (System.Int32)
L_0683: Label43
L_0683: ldloc.s 31 (System.Int32)
L_0685: ldarg.0
L_0686: call BattleTech.Rendering.Trees.QuadTreeNode[] get_fakeNode()
L_068b: ldlen
L_068c: conv.i4
L_068d: blt Label44
L_0692: call UnityEngine.Transform get_ImposterRoot()
L_0697: callvirt UnityEngine.GameObject get_gameObject()
L_069c: call Void Combine(UnityEngine.GameObject)
L_06a1: Label45
L_06a1: Label46
L_06a1: ldarg.0
L_06a2: call Void Postfix(BattleTech.Rendering.Trees.RenderTrees)
L_06a7: ret
DONE

### Patch MissileEffect, Void Fire(BattleTech.WeaponHitInfo, Int32, Int32, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0009: ldarg.0
L_000a: ldarg.s 4
L_000c: stfld System.Boolean isIndirect
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld UnityEngine.Transform startingTransform
L_0018: callvirt UnityEngine.Vector3 get_position()
L_001d: stfld UnityEngine.Vector3 preFireEndPos
L_0022: ldarg.0
L_0023: ldfld MissileLauncherEffect parentLauncher
L_0028: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_002d: callvirt Int32 get_Count()
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: ldfld System.Boolean isIndirect
L_003d: brfalse Label2
L_0042: ldarg.0
L_0043: ldfld MissileLauncherEffect parentLauncher
L_0048: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_004d: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0052: ldfld System.Int32 IndirectFireMaxPoints
L_0057: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_005c: ldfld System.Single IndirectFireMinArcHeight
L_0061: ldarg.0
L_0062: ldfld UnityEngine.Vector3 preFireEndPos
L_0067: ldarg.0
L_0068: ldfld UnityEngine.Vector3 endPos
L_006d: call BattleTech.GameInstance get_BattleTechGame()
L_0072: callvirt BattleTech.CombatGameState get_Combat()
L_0077: callvirt BattleTech.MapMetaData get_MapMetaData()
L_007c: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0081: ldfld System.Single IndirectFireBuffer
L_0086: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_008b: ldfld System.Single IndirectFireMaxArcHeight
L_0090: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0095: ldfld System.Int32 IndirectFireCheckFreq
L_009a: ldc.i4.0
L_009b: call UnityEngine.Vector3[] GetPointsForArcDodgeBuildings(Int32, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.MapMetaData, Single, Single, Int32, Boolean)
L_00a0: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.Vector3])
L_00a5: Label1
L_00a5: Label2
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.Weapon weapon
L_00ab: ldfld BattleTech.AbstractActor parent
L_00b0: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b5: ldnull
L_00b6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00bb: brfalse Label3
L_00c0: ldarg.0
L_00c1: ldfld DopplerEffect doppler
L_00c6: ldnull
L_00c7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00cc: brfalse Label4
L_00d1: ldarg.0
L_00d2: ldarg.0
L_00d3: call UnityEngine.GameObject get_gameObject()
L_00d8: callvirt DopplerEffect AddComponent[DopplerEffect]()
L_00dd: stfld DopplerEffect doppler
L_00e2: Label4
L_00e2: ldarg.0
L_00e3: ldfld DopplerEffect doppler
L_00e8: ldc.i4.1
L_00e9: callvirt Void set_enabled(Boolean)
L_00ee: ldarg.0
L_00ef: ldfld DopplerEffect doppler
L_00f4: ldarg.0
L_00f5: ldfld AkGameObj projectileAudioObject
L_00fa: call BattleTech.CameraControl get_Instance()
L_00ff: callvirt UnityEngine.Camera GetMainCamera()
L_0104: callvirt UnityEngine.GameObject get_gameObject()
L_0109: callvirt Void Init(AkGameObj, UnityEngine.GameObject)
L_010e: Label3
L_010e: ldarg.0
L_010f: callvirt Void PlayPreFire()
L_0114: ldarg.0
L_0115: ldarga 1
L_011b: ldarg 2
L_0121: ldarg 3
L_0127: ldarg 4
L_012d: call Void Postfix(MissileEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, Boolean)
L_0132: ret
DONE

### Patch WeaponEffect, Void PublishWeaponCompleteMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean subEffect
L_0011: brtrue Label1
L_0016: ldarg.0
L_0017: call Boolean get_FiringComplete()
L_001c: brtrue Label2
L_0021: ldarg.0
L_0022: ldflda BattleTech.WeaponHitInfo hitInfo
L_0027: ldfld System.Int32 stackItemUID
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 attackSequenceId
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackGroupIndex
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackWeaponIndex
L_004d: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_0052: stloc.0
L_0053: ldarg.0
L_0054: ldfld BattleTech.CombatGameState Combat
L_0059: callvirt MessageCenter get_MessageCenter()
L_005e: ldloc.0
L_005f: callvirt Void PublishMessage(MessageCenterMessage)
L_0064: Label1
L_0064: Label2
L_0064: ldarg.0
L_0065: ldc.i4.1
L_0066: call Void set_FiringComplete(Boolean)
L_006b: Label0
L_006b: ldarg.0
L_006c: call Void Postfix(WeaponEffect)
L_0071: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnActorSelected(BattleTech.AbstractActor)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.AbstractActor selectedUnit
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: call Void updateHUDElements(BattleTech.AbstractActor)
L_000e: ldarg.0
L_000f: ldarg 1
L_0015: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.AbstractActor)
L_001a: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void RefreshDisplayedWeapon(BattleTech.ICombatant)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.String
L_0000: ldarg.0
L_0001: ldfld BattleTech.Weapon displayedWeapon
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: ldfld BattleTech.UI.CombatHUD HUD
L_0011: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0016: brtrue Label2
L_001b: br Label19
L_0020: Label2
L_0020: ldarg.0
L_0021: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0026: ldc.i4.1
L_0027: bne.un Label3
L_002c: ldarg.0
L_002d: call Void UpdateMeleeWeapon()
L_0032: br Label4
L_0037: Label3
L_0037: ldarg.0
L_0038: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_003d: ldc.i4.2
L_003e: bne.un Label5
L_0043: ldarg.0
L_0044: call Void UpdateDFAWeapon()
L_0049: br Label6
L_004e: Label5
L_004e: ldarg.0
L_004f: ldfld BattleTech.Weapon displayedWeapon
L_0054: callvirt Boolean get_HasAmmo()
L_0059: brtrue Label7
L_005e: ldarg.0
L_005f: ldfld BattleTech.Weapon displayedWeapon
L_0064: callvirt Void DisableWeapon()
L_0069: Label7
L_0069: ldarg.0
L_006a: ldfld BattleTech.UI.TMProWrapper.LocalizableText WeaponText
L_006f: ldarg.0
L_0070: ldfld BattleTech.Weapon displayedWeapon
L_0075: callvirt Localize.Text get_UIName()
L_007a: callvirt Void SetText(Localize.Text)
L_007f: ldarg.0
L_0080: ldfld BattleTech.UI.TMProWrapper.LocalizableText AmmoText
L_0085: ldarg.0
L_0086: ldfld BattleTech.Weapon displayedWeapon
L_008b: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0090: callvirt Boolean get_Is_NotSet()
L_0095: brtrue Label8
L_009a: ldarg.0
L_009b: ldfld BattleTech.Weapon displayedWeapon
L_00a0: callvirt Int32 get_CurrentAmmo()
L_00a5: stloc.0
L_00a6: ldloca.s 0 (System.Int32)
L_00a8: call System.String ToString()
L_00ad: br Label9
L_00b2: Label8
L_00b2: ldstr "--"
L_00b7: Label9
L_00b7: call System.Object[] Empty[Object]()
L_00bc: callvirt Void SetText(System.String, System.Object[])
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_00c7: ldarg.0
L_00c8: ldfld BattleTech.Weapon displayedWeapon
L_00cd: callvirt Boolean get_IsEnabled()
L_00d2: brfalse Label10
L_00d7: ldarg.0
L_00d8: ldfld BattleTech.Weapon displayedWeapon
L_00dd: callvirt Boolean get_IsDisabled()
L_00e2: ldc.i4.0
L_00e3: ceq
L_00e5: br Label11
L_00ea: Label10
L_00ea: ldc.i4.0
L_00eb: Label11
L_00eb: stfld System.Boolean isChecked
L_00f0: ldarg.0
L_00f1: ldfld BattleTech.UI.CombatHUD HUD
L_00f6: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00fb: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0100: callvirt BattleTech.IStackSequence get_Orders()
L_0105: brtrue Label12
L_010a: ldarg.0
L_010b: ldfld BattleTech.Weapon displayedWeapon
L_0110: callvirt Single DamagePerShotAdjusted()
L_0115: conv.i4
L_0116: stloc.1
L_0117: ldarg.0
L_0118: ldfld BattleTech.Weapon displayedWeapon
L_011d: callvirt Int32 get_DamageVariance()
L_0122: stloc.2
L_0123: ldloc.2
L_0124: ldc.i4.0
L_0125: bgt Label13
L_012a: ldstr "{0}"
L_012f: ldloc.1
L_0130: box System.Int32
L_0135: call System.String Format(System.String, System.Object)
L_013a: br Label14
L_013f: Label13
L_013f: ldstr "{0}-{1}"
L_0144: ldloc.1
L_0145: ldloc.2
L_0146: sub
L_0147: box System.Int32
L_014c: ldloc.1
L_014d: ldloc.2
L_014e: add
L_014f: box System.Int32
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: Label14
L_0159: stloc.3
L_015a: ldarg.0
L_015b: ldfld BattleTech.Weapon displayedWeapon
L_0160: callvirt Single get_HeatDamagePerShot()
L_0165: ldc.r4 0.01
L_016a: ble.un Label15
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.CombatHUD HUD
L_0175: callvirt BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_017a: ldfld System.String HeatFormatString
L_017f: ldloc.3
L_0180: ldarg.0
L_0181: ldfld BattleTech.Weapon displayedWeapon
L_0186: callvirt Single get_HeatDamagePerShot()
L_018b: call Int32 RoundToInt(Single)
L_0190: box System.Int32
L_0195: call System.String Format(System.String, System.Object, System.Object)
L_019a: stloc.3
L_019b: Label15
L_019b: ldarg.0
L_019c: ldfld BattleTech.Weapon displayedWeapon
L_01a1: callvirt Int32 get_ShotsWhenFired()
L_01a6: ldc.i4.1
L_01a7: ble Label16
L_01ac: ldstr "{0} (x{1})"
L_01b1: ldloc.3
L_01b2: ldarg.0
L_01b3: ldfld BattleTech.Weapon displayedWeapon
L_01b8: callvirt Int32 get_ShotsWhenFired()
L_01bd: box System.Int32
L_01c2: call System.String Format(System.String, System.Object, System.Object)
L_01c7: stloc.3
L_01c8: Label16
L_01c8: ldarg.0
L_01c9: ldfld BattleTech.UI.TMProWrapper.LocalizableText DamageText
L_01ce: ldloc.3
L_01cf: call System.Object[] Empty[Object]()
L_01d4: callvirt Void SetText(System.String, System.Object[])
L_01d9: Label4
L_01d9: Label6
L_01d9: Label12
L_01d9: ldarg.0
L_01da: ldfld BattleTech.UI.CombatHUD HUD
L_01df: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01e4: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_01e9: callvirt BattleTech.IStackSequence get_Orders()
L_01ee: brtrue Label17
L_01f3: ldarg.1
L_01f4: brfalse Label18
L_01f9: ldarg.0
L_01fa: ldarg.1
L_01fb: call Void SetHitChance(BattleTech.ICombatant)
L_0200: br Label20
L_0205: Label18
L_0205: ldarg.0
L_0206: call Void SetHitChance()
L_020b: Label1
L_020b: Label17
L_020b: Label19
L_020b: Label20
L_020b: ldarg.0
L_020c: call Void Postfix(BattleTech.UI.CombatHUDWeaponSlot)
L_0211: ret
DONE

### Patch BattleTech.MechComponent, Localize.Text get_UIName()
L_0000: Local var 0: Localize.Text
L_0000: ldnull
L_0001: stloc 0 (Localize.Text)
L_0002: ldarg.0
L_0003: call BattleTech.MechComponentDef get_componentDef()
L_0008: callvirt BattleTech.DescriptionDef get_Description()
L_000d: callvirt System.String get_UIName()
L_0012: call Boolean IsNullOrEmpty(System.String)
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: call BattleTech.MechComponentDef get_componentDef()
L_0022: callvirt BattleTech.DescriptionDef get_Description()
L_0027: callvirt System.String get_UIName()
L_002c: br Label2
L_0031: Label1
L_0031: ldarg.0
L_0032: call System.String get_Name()
L_0037: Label2
L_0037: call System.Object[] Empty[Object]()
L_003c: newobj Void .ctor(String, Object[])
L_0041: stloc 0 (Localize.Text)
L_0042: ldarg.0
L_0043: ldloca 0 (Localize.Text)
L_0045: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_004a: ldarg.0
L_004b: ldloca 0 (Localize.Text)
L_004d: call Void Postfix(BattleTech.MechComponent, Localize.Text ByRef)
L_0052: ldloc 0 (Localize.Text)
L_0053: ret
DONE

### Patch AttackEvaluator, Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 10: BattleTech.Mech
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]][]
L_0000: Local var 13: System.Collections.Generic.List`1[[AttackEvaluator+AttackEvaluation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Weapon
L_0000: Local var 19: System.Boolean
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: UnityEngine.Vector3
L_0000: Local var 23: System.Int32
L_0000: Local var 24: System.String
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.Single
L_0000: Local var 27: System.Single
L_0000: Local var 28: System.Single
L_0000: Local var 29: System.Single
L_0000: Local var 30: System.Int32
L_0000: Local var 31: System.Int32
L_0000: Local var 32: BattleTech.Weapon
L_0000: Local var 33: System.Int32
L_0000: Local var 34: AttackEvaluator+AttackEvaluation
L_0000: Local var 35: AIUtil+AttackType
L_0000: Local var 36: System.Int32
L_0000: Local var 37: AttackEvaluator+AttackEvaluation
L_0000: Local var 38: System.Boolean
L_0000: Local var 39: System.Boolean
L_0000: Local var 40: System.Boolean
L_0000: Local var 41: BattleTech.AbstractActor
L_0000: Local var 42: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 43: BattleTech.Weapon
L_0000: Local var 44: BehaviorTreeResults
L_0000: Local var 45: MultiTargetAttackOrderInfo
L_0000: Local var 46: CalledShotAttackOrderInfo
L_0000: Local var 47: CalledShotAttackOrderInfo
L_0000: Local var 48: AttackOrderInfo
L_0000: Local var 49: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 50: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 51: System.Single
L_0000: ldc.r4 0
L_0005: stloc 51 (System.Single)
L_0007: ldarg 0
L_000d: ldarg 1
L_0013: ldarg 2
L_0019: ldarg 3
L_001f: call Boolean Prefix(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean)
L_0024: brfalse Label0
L_0029: ldc.r4 0
L_002e: stloc.0
L_002f: ldc.r4 3.402823E+38
L_0034: stloc.1
L_0035: ldc.r4 0
L_003a: stloc.2
L_003b: ldarg.0
L_003c: isinst BattleTech.Mech
L_0041: stloc.3
L_0042: ldloc.3
L_0043: brfalse Label1
L_0048: ldloc.3
L_0049: callvirt Int32 get_CurrentHeat()
L_004e: conv.r4
L_004f: stloc.0
L_0050: ldloc.3
L_0051: call Single GetAcceptableHeatLevelForMech(BattleTech.Mech)
L_0056: stloc.1
L_0057: ldloc.3
L_0058: call Single LegDamageLevel(BattleTech.Mech)
L_005d: stloc.2
L_005e: Label1
L_005e: ldarg.0
L_005f: ldstr "heat level: "
L_0064: ldloc.0
L_0065: box System.Single
L_006a: call System.String Concat(System.Object, System.Object)
L_006f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0074: ldarg.0
L_0075: ldstr "acceptable heat: "
L_007a: ldloc.1
L_007b: box System.Single
L_0080: call System.String Concat(System.Object, System.Object)
L_0085: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_008a: ldarg.0
L_008b: ldfld BehaviorTree BehaviorTree
L_0090: ldc.i4.s 40
L_0092: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0097: callvirt Single get_FloatVal()
L_009c: stloc.s 4 (System.Single)
L_009e: ldarg.0
L_009f: ldfld BehaviorTree BehaviorTree
L_00a4: ldc.i4.s 42
L_00a6: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_00ab: callvirt Single get_FloatVal()
L_00b0: stloc.s 5 (System.Single)
L_00b2: ldarg.0
L_00b3: ldfld BehaviorTree BehaviorTree
L_00b8: ldc.i4.1
L_00b9: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_00be: callvirt Single get_FloatVal()
L_00c3: stloc.s 6 (System.Single)
L_00c5: ldarg.0
L_00c6: ldfld BehaviorTree BehaviorTree
L_00cb: ldfld System.Single weaponToHitThreshold
L_00d0: stloc.s 7 (System.Single)
L_00d2: ldarg.0
L_00d3: ldarg.1
L_00d4: call Single MaxDamageLevel(BattleTech.AbstractActor, BattleTech.ICombatant)
L_00d9: stloc.s 8 (System.Single)
L_00db: ldarg.0
L_00dc: ldc.i4.4
L_00dd: newarr System.Object
L_00e2: dup
L_00e3: ldc.i4.0
L_00e4: ldstr "Evaluating attack target "
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.1
L_00ec: ldarg.1
L_00ed: callvirt System.String get_DisplayName()
L_00f2: stelem.ref
L_00f3: dup
L_00f4: ldc.i4.2
L_00f5: ldstr " at "
L_00fa: stelem.ref
L_00fb: dup
L_00fc: ldc.i4.3
L_00fd: ldarg.1
L_00fe: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0103: box UnityEngine.Vector3
L_0108: stelem.ref
L_0109: call System.String Concat(System.Object[])
L_010e: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0113: ldarg.0
L_0114: ldarg.1
L_0115: call Boolean UnitHasVisibilityToTargetFromCurrentPosition(BattleTech.AbstractActor, BattleTech.ICombatant)
L_011a: brtrue Label2
L_011f: ldarg.s 4
L_0121: ldc.i4.0
L_0122: call BehaviorTreeResults BehaviorTreeResultsFromBoolean(Boolean)
L_0127: stind.ref
L_0128: ldc.r4 0
L_012d: br Label98
L_0132: Label2
L_0132: ldc.i4.3
L_0133: newarr System.Collections.Generic.List`1[BattleTech.Weapon]
L_0138: dup
L_0139: ldc.i4.0
L_013a: newobj Void .ctor()
L_013f: stelem.ref
L_0140: dup
L_0141: ldc.i4.1
L_0142: newobj Void .ctor()
L_0147: stelem.ref
L_0148: dup
L_0149: ldc.i4.2
L_014a: newobj Void .ctor()
L_014f: stelem.ref
L_0150: stloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0152: ldc.i4.0
L_0153: stloc.s 17 (System.Int32)
L_0155: br Label3
L_015a: Label9
L_015a: ldarg.0
L_015b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0160: ldloc.s 17 (System.Int32)
L_0162: callvirt BattleTech.Weapon get_Item(Int32)
L_0167: stloc.s 18 (BattleTech.Weapon)
L_0169: ldarg.0
L_016a: ldstr "Considering Weapon "
L_016f: ldloc.s 18 (BattleTech.Weapon)
L_0171: callvirt System.String get_Name()
L_0176: call System.String Concat(System.String, System.String)
L_017b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0180: ldloc.s 18 (BattleTech.Weapon)
L_0182: callvirt Boolean get_CanFire()
L_0187: brtrue Label4
L_018c: ldarg.0
L_018d: ldstr "disregarding because not can fire"
L_0192: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0197: br Label5
L_019c: Label4
L_019c: ldloc.s 18 (BattleTech.Weapon)
L_019e: ldarg.1
L_019f: ldarg.0
L_01a0: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a5: ldarg.0
L_01a6: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_01ab: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_01b0: stloc.s 19 (System.Boolean)
L_01b2: ldarg.0
L_01b3: callvirt BattleTech.CombatGameState get_Combat()
L_01b8: callvirt LOFCache get_LOFCache()
L_01bd: ldarg.0
L_01be: ldarg.1
L_01bf: ldloc.s 18 (BattleTech.Weapon)
L_01c1: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_01c6: stloc.s 20 (System.Boolean)
L_01c8: ldarg.1
L_01c9: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01ce: ldarg.0
L_01cf: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01d4: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_01d9: stloc.s 22 (UnityEngine.Vector3)
L_01db: ldloca.s 22 (UnityEngine.Vector3)
L_01dd: call Single get_magnitude()
L_01e2: ldloc.s 18 (BattleTech.Weapon)
L_01e4: callvirt Single get_MaxRange()
L_01e9: cgt.un
L_01eb: ldc.i4.0
L_01ec: ceq
L_01ee: stloc.s 21 (System.Boolean)
L_01f0: ldarg.0
L_01f1: ldstr "will fire at target? "
L_01f6: ldloca.s 19 (System.Boolean)
L_01f8: call System.String ToString()
L_01fd: call System.String Concat(System.String, System.String)
L_0202: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0207: ldarg.0
L_0208: ldstr "hasLOF? "
L_020d: ldloca.s 20 (System.Boolean)
L_020f: call System.String ToString()
L_0214: call System.String Concat(System.String, System.String)
L_0219: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_021e: ldarg.0
L_021f: ldstr "inRange? "
L_0224: ldloca.s 21 (System.Boolean)
L_0226: call System.String ToString()
L_022b: call System.String Concat(System.String, System.String)
L_0230: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0235: ldloc.s 19 (System.Boolean)
L_0237: ldloc.s 20 (System.Boolean)
L_0239: and
L_023a: ldloc.s 21 (System.Boolean)
L_023c: and
L_023d: brfalse Label6
L_0242: ldarg.0
L_0243: ldstr "willFireAtTarget and LOF"
L_0248: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_024d: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_024f: ldc.i4.0
L_0250: ldelem.ref
L_0251: ldloc.s 18 (BattleTech.Weapon)
L_0253: callvirt Void Add(BattleTech.Weapon)
L_0258: br Label7
L_025d: Label6
L_025d: ldarg.0
L_025e: ldstr "not WFAT or hasLOF or inRange"
L_0263: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0268: Label7
L_0268: ldloc.s 18 (BattleTech.Weapon)
L_026a: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_026f: ldc.i4.4
L_0270: bne.un Label8
L_0275: ldarg.0
L_0276: ldstr "adding to melee and DFA"
L_027b: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0280: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0282: ldc.i4.1
L_0283: ldelem.ref
L_0284: ldloc.s 18 (BattleTech.Weapon)
L_0286: callvirt Void Add(BattleTech.Weapon)
L_028b: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_028d: ldc.i4.2
L_028e: ldelem.ref
L_028f: ldloc.s 18 (BattleTech.Weapon)
L_0291: callvirt Void Add(BattleTech.Weapon)
L_0296: Label5
L_0296: Label8
L_0296: ldloc.s 17 (System.Int32)
L_0298: ldc.i4.1
L_0299: add
L_029a: stloc.s 17 (System.Int32)
L_029c: Label3
L_029c: ldloc.s 17 (System.Int32)
L_029e: ldarg.0
L_029f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_02a4: callvirt Int32 get_Count()
L_02a9: blt Label9
L_02ae: ldarg.1
L_02af: isinst BattleTech.Mech
L_02b4: stloc.s 10 (BattleTech.Mech)
L_02b6: ldloc.s 10 (BattleTech.Mech)
L_02b8: brfalse Label10
L_02bd: ldloc.s 10 (BattleTech.Mech)
L_02bf: callvirt Boolean get_IsEvasive()
L_02c4: br Label11
L_02c9: Label10
L_02c9: ldc.i4.0
L_02ca: Label11
L_02ca: stloc.s 11 (System.Boolean)
L_02cc: ldc.i4.3
L_02cd: newarr System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]]
L_02d2: stloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_02d4: ldc.i4.0
L_02d5: stloc.s 23 (System.Int32)
L_02d7: br Label12
L_02dc: Label44
L_02dc: ldarg.0
L_02dd: ldstr "considering attack type "
L_02e2: ldloc.s 23 (System.Int32)
L_02e4: box System.Int32
L_02e9: call System.String Concat(System.Object, System.Object)
L_02ee: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_02f3: ldloc.3
L_02f4: brtrue Label13
L_02f9: ldloc.s 23 (System.Int32)
L_02fb: ldc.i4.1
L_02fc: beq Label14
L_0301: ldloc.s 23 (System.Int32)
L_0303: ldc.i4.2
L_0304: bne.un Label15
L_0309: Label14
L_0309: ldarg.0
L_030a: ldstr "this unit can't melee or dfa"
L_030f: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0314: br Label16
L_0319: Label13
L_0319: Label15
L_0319: ldloc.s 23 (System.Int32)
L_031b: ldc.i4.1
L_031c: bne.un Label17
L_0321: ldloc.3
L_0322: ldarg.1
L_0323: ldloca.s 24 (System.String)
L_0325: callvirt Boolean CanEngageTarget(BattleTech.ICombatant, System.String ByRef)
L_032a: brtrue Label18
L_032f: ldarg.0
L_0330: ldstr "unit.CanEngageTarget returned FALSE because: "
L_0335: ldloc.s 24 (System.String)
L_0337: call System.String Concat(System.String, System.String)
L_033c: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0341: br Label19
L_0346: Label17
L_0346: Label18
L_0346: ldloc.s 23 (System.Int32)
L_0348: ldc.i4.1
L_0349: bne.un Label20
L_034e: ldloc.s 10 (BattleTech.Mech)
L_0350: brfalse Label21
L_0355: ldloc.s 10 (BattleTech.Mech)
L_0357: ldarg.0
L_0358: ldloc.s 10 (BattleTech.Mech)
L_035a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_035f: ldloc.3
L_0360: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0365: ldc.i4.0
L_0366: ldarg.0
L_0367: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_036c: stloc.s 25 (System.Single)
L_036e: ldloc.3
L_036f: ldarg.1
L_0370: ldloc.3
L_0371: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0376: ldarg.1
L_0377: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_037c: ldc.i4.0
L_037d: ldarg.0
L_037e: call Single ExpectedDamageForMeleeAttackUsingUnitsBVs(BattleTech.Mech, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, BattleTech.AbstractActor)
L_0383: stloc.s 26 (System.Single)
L_0385: ldloc.s 26 (System.Single)
L_0387: ldc.r4 0
L_038c: bgt.un Label22
L_0391: ldarg.0
L_0392: ldstr "expected damage: "
L_0397: ldloc.s 26 (System.Single)
L_0399: box System.Single
L_039e: call System.String Concat(System.Object, System.Object)
L_03a3: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_03a8: br Label23
L_03ad: Label22
L_03ad: ldloc.s 25 (System.Single)
L_03af: ldloc.s 26 (System.Single)
L_03b1: div
L_03b2: stloc.s 27 (System.Single)
L_03b4: ldarg.0
L_03b5: ldfld BehaviorTree BehaviorTree
L_03ba: ldc.i4.s 56
L_03bc: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_03c1: callvirt Single get_FloatVal()
L_03c6: stloc.s 28 (System.Single)
L_03c8: ldloc.s 27 (System.Single)
L_03ca: ldloc.s 28 (System.Single)
L_03cc: ble.un Label24
L_03d1: ldarg.0
L_03d2: ldc.i4.4
L_03d3: newarr System.Object
L_03d8: dup
L_03d9: ldc.i4.0
L_03da: ldstr "melee ratio too high: "
L_03df: stelem.ref
L_03e0: dup
L_03e1: ldc.i4.1
L_03e2: ldloc.s 27 (System.Single)
L_03e4: box System.Single
L_03e9: stelem.ref
L_03ea: dup
L_03eb: ldc.i4.2
L_03ec: ldstr " vs "
L_03f1: stelem.ref
L_03f2: dup
L_03f3: ldc.i4.3
L_03f4: ldloc.s 28 (System.Single)
L_03f6: box System.Single
L_03fb: stelem.ref
L_03fc: call System.String Concat(System.Object[])
L_0401: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0406: br Label25
L_040b: Label20
L_040b: Label21
L_040b: Label24
L_040b: ldloc.s 23 (System.Int32)
L_040d: ldc.i4.2
L_040e: bne.un Label26
L_0413: ldarg.0
L_0414: ldarg.1
L_0415: call Boolean IsDFAAcceptable(BattleTech.AbstractActor, BattleTech.ICombatant)
L_041a: brtrue Label27
L_041f: ldarg.0
L_0420: ldstr "unit cannot DFA"
L_0425: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_042a: br Label28
L_042f: Label26
L_042f: Label27
L_042f: ldloc.s 11 (System.Boolean)
L_0431: brfalse Label29
L_0436: ldarg.0
L_0437: callvirt BattleTech.UnitType get_UnitType()
L_043c: ldc.i4.1
L_043d: bne.un Label30
L_0442: ldarg.0
L_0443: ldfld BehaviorTree BehaviorTree
L_0448: ldc.i4 179
L_044d: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0452: callvirt Single get_FloatVal()
L_0457: ldc.r4 100
L_045c: div
L_045d: stloc.s 29 (System.Single)
L_045f: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0461: ldloc.s 23 (System.Int32)
L_0463: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0465: ldloc.s 23 (System.Int32)
L_0467: ldelem.ref
L_0468: ldloc.s 29 (System.Single)
L_046a: ldarg.1
L_046b: ldarg.0
L_046c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0471: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_0476: stelem.ref
L_0477: br Label31
L_047c: Label29
L_047c: Label30
L_047c: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_047e: ldloc.s 23 (System.Int32)
L_0480: ldloc.s 9 (System.Collections.Generic.List`1[BattleTech.Weapon][])
L_0482: ldloc.s 23 (System.Int32)
L_0484: ldelem.ref
L_0485: call System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSets(System.Collections.Generic.List`1[BattleTech.Weapon])
L_048a: stelem.ref
L_048b: Label31
L_048b: ldloc.3
L_048c: brfalse Label32
L_0491: ldloc.s 23 (System.Int32)
L_0493: ldc.i4.1
L_0494: beq Label33
L_0499: ldloc.s 23 (System.Int32)
L_049b: ldc.i4.2
L_049c: bne.un Label34
L_04a1: Label33
L_04a1: ldc.i4.0
L_04a2: stloc.s 30 (System.Int32)
L_04a4: br Label35
L_04a9: Label43
L_04a9: ldloc.s 23 (System.Int32)
L_04ab: ldc.i4.1
L_04ac: bne.un Label36
L_04b1: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04b3: ldloc.s 23 (System.Int32)
L_04b5: ldelem.ref
L_04b6: ldloc.s 30 (System.Int32)
L_04b8: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04bd: ldloc.3
L_04be: ldfld BattleTech.Weapon MeleeWeapon
L_04c3: callvirt Void Add(BattleTech.Weapon)
L_04c8: Label36
L_04c8: ldloc.s 23 (System.Int32)
L_04ca: ldc.i4.2
L_04cb: bne.un Label37
L_04d0: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_04d2: ldloc.s 23 (System.Int32)
L_04d4: ldelem.ref
L_04d5: ldloc.s 30 (System.Int32)
L_04d7: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_04dc: ldloc.3
L_04dd: ldfld BattleTech.Weapon DFAWeapon
L_04e2: callvirt Void Add(BattleTech.Weapon)
L_04e7: Label37
L_04e7: ldc.i4.0
L_04e8: stloc.s 31 (System.Int32)
L_04ea: br Label38
L_04ef: Label42
L_04ef: ldloc.3
L_04f0: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_04f5: ldloc.s 31 (System.Int32)
L_04f7: callvirt BattleTech.Weapon get_Item(Int32)
L_04fc: stloc.s 32 (BattleTech.Weapon)
L_04fe: ldloc.s 32 (BattleTech.Weapon)
L_0500: callvirt Boolean get_CanFire()
L_0505: brfalse Label39
L_050a: ldloc.s 32 (BattleTech.Weapon)
L_050c: call BattleTech.WeaponCategory Category(BattleTech.Weapon)
L_0511: ldc.i4.4
L_0512: bne.un Label40
L_0517: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0519: ldloc.s 23 (System.Int32)
L_051b: ldelem.ref
L_051c: ldloc.s 30 (System.Int32)
L_051e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0523: ldloc.s 32 (BattleTech.Weapon)
L_0525: callvirt Boolean Contains(BattleTech.Weapon)
L_052a: brtrue Label41
L_052f: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0531: ldloc.s 23 (System.Int32)
L_0533: ldelem.ref
L_0534: ldloc.s 30 (System.Int32)
L_0536: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_053b: ldloc.s 32 (BattleTech.Weapon)
L_053d: callvirt Void Add(BattleTech.Weapon)
L_0542: Label39
L_0542: Label40
L_0542: Label41
L_0542: ldloc.s 31 (System.Int32)
L_0544: ldc.i4.1
L_0545: add
L_0546: stloc.s 31 (System.Int32)
L_0548: Label38
L_0548: ldloc.s 31 (System.Int32)
L_054a: ldloc.3
L_054b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0550: callvirt Int32 get_Count()
L_0555: blt Label42
L_055a: ldloc.s 30 (System.Int32)
L_055c: ldc.i4.1
L_055d: add
L_055e: stloc.s 30 (System.Int32)
L_0560: Label35
L_0560: ldloc.s 30 (System.Int32)
L_0562: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0564: ldloc.s 23 (System.Int32)
L_0566: ldelem.ref
L_0567: callvirt Int32 get_Count()
L_056c: blt Label43
L_0571: Label16
L_0571: Label19
L_0571: Label23
L_0571: Label25
L_0571: Label28
L_0571: Label32
L_0571: Label34
L_0571: ldloc.s 23 (System.Int32)
L_0573: ldc.i4.1
L_0574: add
L_0575: stloc.s 23 (System.Int32)
L_0577: Label12
L_0577: ldloc.s 23 (System.Int32)
L_0579: ldc.i4.3
L_057a: blt Label44
L_057f: ldarg.0
L_0580: ldarg.1
L_0581: ldloc.s 12 (System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][])
L_0583: ldarg.0
L_0584: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0589: ldarg.1
L_058a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_058f: ldloc.s 11 (System.Boolean)
L_0591: call System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation] EvaluateAttacks(BattleTech.AbstractActor, BattleTech.ICombatant, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]][], UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0596: stloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0598: ldarg.0
L_0599: ldstr "found {0} different attack solutions"
L_059e: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05a0: callvirt Int32 get_Count()
L_05a5: box System.Int32
L_05aa: call System.String Format(System.String, System.Object)
L_05af: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_05b4: ldc.r4 0
L_05b9: stloc.s 14 (System.Single)
L_05bb: ldc.r4 0
L_05c0: stloc.s 15 (System.Single)
L_05c2: ldc.r4 0
L_05c7: stloc.s 16 (System.Single)
L_05c9: ldc.i4.0
L_05ca: stloc.s 33 (System.Int32)
L_05cc: br Label45
L_05d1: Label53
L_05d1: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_05d3: ldloc.s 33 (System.Int32)
L_05d5: callvirt AttackEvaluation get_Item(Int32)
L_05da: stloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05dc: ldarg.0
L_05dd: ldstr "evaluated attack of type {0} with {1} weapons and a result of {2}"
L_05e2: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05e4: ldfld AIUtil+AttackType AttackType
L_05e9: box AIUtil+AttackType
L_05ee: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_05f0: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_05f5: callvirt Int32 get_Count()
L_05fa: box System.Int32
L_05ff: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0601: ldfld System.Single ExpectedDamage
L_0606: box System.Single
L_060b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0610: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0615: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0617: ldfld AIUtil+AttackType AttackType
L_061c: stloc.s 35 (AIUtil+AttackType)
L_061e: ldloc.s 35 (AIUtil+AttackType)
L_0620: switch Labels46,47,48
L_0631: br Label49
L_0636: Label46
L_0636: ldloc.s 14 (System.Single)
L_0638: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_063a: ldfld System.Single ExpectedDamage
L_063f: call Single Max(Single, Single)
L_0644: stloc.s 14 (System.Single)
L_0646: br Label50
L_064b: Label47
L_064b: ldloc.s 15 (System.Single)
L_064d: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_064f: ldfld System.Single ExpectedDamage
L_0654: call Single Max(Single, Single)
L_0659: stloc.s 15 (System.Single)
L_065b: br Label51
L_0660: Label48
L_0660: ldloc.s 16 (System.Single)
L_0662: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_0664: ldfld System.Single ExpectedDamage
L_0669: call Single Max(Single, Single)
L_066e: stloc.s 16 (System.Single)
L_0670: br Label52
L_0675: Label49
L_0675: ldstr "unknown attack type: "
L_067a: ldloc.s 34 (AttackEvaluator+AttackEvaluation)
L_067c: ldfld AIUtil+AttackType AttackType
L_0681: box AIUtil+AttackType
L_0686: call System.String Concat(System.Object, System.Object)
L_068b: call Void Log(System.Object)
L_0690: Label50
L_0690: Label51
L_0690: Label52
L_0690: ldloc.s 33 (System.Int32)
L_0692: ldc.i4.1
L_0693: add
L_0694: stloc.s 33 (System.Int32)
L_0696: Label45
L_0696: ldloc.s 33 (System.Int32)
L_0698: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_069a: callvirt Int32 get_Count()
L_069f: blt Label53
L_06a4: ldarg.0
L_06a5: ldstr "best shooting: "
L_06aa: ldloc.s 14 (System.Single)
L_06ac: box System.Single
L_06b1: call System.String Concat(System.Object, System.Object)
L_06b6: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06bb: ldarg.0
L_06bc: ldstr "best melee: "
L_06c1: ldloc.s 15 (System.Single)
L_06c3: box System.Single
L_06c8: call System.String Concat(System.Object, System.Object)
L_06cd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06d2: ldarg.0
L_06d3: ldstr "best dfa: "
L_06d8: ldloc.s 16 (System.Single)
L_06da: box System.Single
L_06df: call System.String Concat(System.Object, System.Object)
L_06e4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_06e9: ldc.i4.0
L_06ea: stloc.s 36 (System.Int32)
L_06ec: br Label54
L_06f1: Label97
L_06f1: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_06f3: ldloc.s 36 (System.Int32)
L_06f5: callvirt AttackEvaluation get_Item(Int32)
L_06fa: stloc.s 37 (AttackEvaluator+AttackEvaluation)
L_06fc: ldarg.0
L_06fd: ldstr "evaluating attack solution #"
L_0702: ldloc.s 36 (System.Int32)
L_0704: box System.Int32
L_0709: call System.String Concat(System.Object, System.Object)
L_070e: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0713: ldarg.0
L_0714: ldstr "------"
L_0719: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_071e: ldarg.0
L_071f: ldstr "Weapons:"
L_0724: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0729: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_072b: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0730: callvirt Enumerator GetEnumerator()
L_0735: stloc.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_0737: br Label55
	L_073c: Label56
	L_073c: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_073e: call BattleTech.Weapon get_Current()
	L_0743: stloc.s 43 (BattleTech.Weapon)
	L_0745: ldarg.0
	L_0746: ldstr "Weapon: "
	L_074b: ldloc.s 43 (BattleTech.Weapon)
	L_074d: callvirt System.String get_Name()
	L_0752: call System.String Concat(System.String, System.String)
	L_0757: call Void LogShoot(BattleTech.AbstractActor, System.String)
	L_075c: Label55
	L_075c: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_075e: call Boolean MoveNext()
	L_0763: brtrue Label56
	L_0768: leave Label57
	L_076d: leave (autogenerated)
} // end try
.finally
{
	L_0772: ldloca.s 42 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0774: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_077a: callvirt Void Dispose()
	L_077f: endfinally
	L_0780: leave (autogenerated)
} // end handler
L_0781: Label57
L_0781: ldarg.0
L_0782: ldstr "heat generated for attack solution: "
L_0787: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0789: ldfld System.Single HeatGenerated
L_078e: box System.Single
L_0793: call System.String Concat(System.Object, System.Object)
L_0798: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_079d: ldarg.0
L_079e: ldstr "current heat: "
L_07a3: ldloc.0
L_07a4: box System.Single
L_07a9: call System.String Concat(System.Object, System.Object)
L_07ae: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07b3: ldarg.0
L_07b4: ldstr "acceptable heat: "
L_07b9: ldloc.1
L_07ba: box System.Single
L_07bf: call System.String Concat(System.Object, System.Object)
L_07c4: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07c9: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_07cb: ldfld System.Single HeatGenerated
L_07d0: ldloc.0
L_07d1: add
L_07d2: ldloc.1
L_07d3: cgt
L_07d5: stloc.s 38 (System.Boolean)
L_07d7: ldarg.0
L_07d8: ldstr "will overheat? "
L_07dd: ldloca.s 38 (System.Boolean)
L_07df: call System.String ToString()
L_07e4: call System.String Concat(System.String, System.String)
L_07e9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_07ee: ldloc.s 38 (System.Boolean)
L_07f0: brfalse Label58
L_07f5: ldloc.3
L_07f6: callvirt Boolean OverheatWillCauseDeath()
L_07fb: brfalse Label59
L_0800: ldarg.0
L_0801: ldstr "rejecting attack because overheat would cause own death"
L_0806: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_080b: br Label60
L_0810: Label58
L_0810: Label59
L_0810: ldloc.s 8 (System.Single)
L_0812: ldloc.s 6 (System.Single)
L_0814: clt.un
L_0816: ldc.i4.0
L_0817: ceq
L_0819: stloc.s 39 (System.Boolean)
L_081b: ldarg.0
L_081c: ldstr "but enough damage for overheat attack? "
L_0821: ldloca.s 39 (System.Boolean)
L_0823: call System.String ToString()
L_0828: call System.String Concat(System.String, System.String)
L_082d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0832: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0834: ldfld System.Single lowestHitChance
L_0839: ldloc.s 7 (System.Single)
L_083b: clt.un
L_083d: ldc.i4.0
L_083e: ceq
L_0840: stloc.s 40 (System.Boolean)
L_0842: ldarg.0
L_0843: ldstr "but enough accuracy for overheat attack? "
L_0848: ldloca.s 40 (System.Boolean)
L_084a: call System.String ToString()
L_084f: call System.String Concat(System.String, System.String)
L_0854: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0859: ldarg.1
L_085a: isinst BattleTech.AbstractActor
L_085f: stloc.s 41 (BattleTech.AbstractActor)
L_0861: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0863: ldfld AIUtil+AttackType AttackType
L_0868: ldc.i4.1
L_0869: bne.un Label61
L_086e: ldarg.0
L_086f: ldarg.1
L_0870: callvirt Boolean CanEngageTarget(BattleTech.ICombatant)
L_0875: brfalse Label62
L_087a: ldloc.s 41 (BattleTech.AbstractActor)
L_087c: brfalse Label63
L_0881: ldarg.3
L_0882: brtrue Label64
L_0887: Label62
L_0887: Label63
L_0887: ldarg.0
L_0888: ldstr "Can't Melee"
L_088d: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0892: br Label65
L_0897: Label61
L_0897: Label64
L_0897: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0899: ldfld AIUtil+AttackType AttackType
L_089e: ldc.i4.2
L_089f: bne.un Label66
L_08a4: ldarg.0
L_08a5: ldarg.1
L_08a6: ldarg.0
L_08a7: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_08ac: callvirt Boolean CanDFATargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_08b1: brfalse Label67
L_08b6: ldloc.s 8 (System.Single)
L_08b8: ldloc.s 4 (System.Single)
L_08ba: blt Label68
L_08bf: ldloc.2
L_08c0: ldloc.s 5 (System.Single)
L_08c2: ble.un Label69
L_08c7: Label67
L_08c7: Label68
L_08c7: ldarg.0
L_08c8: ldstr "Can't DFA"
L_08cd: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08d2: br Label70
L_08d7: Label66
L_08d7: Label69
L_08d7: ldloc.s 38 (System.Boolean)
L_08d9: brfalse Label71
L_08de: ldloc.s 39 (System.Boolean)
L_08e0: brfalse Label72
L_08e5: ldloc.s 40 (System.Boolean)
L_08e7: brtrue Label73
L_08ec: Label72
L_08ec: ldarg.0
L_08ed: ldstr "rejecting attack for not enough damage or accuracy on an attack that will overheat"
L_08f2: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_08f7: br Label74
L_08fc: Label71
L_08fc: Label73
L_08fc: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_08fe: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0903: callvirt Int32 get_Count()
L_0908: brtrue Label75
L_090d: ldarg.0
L_090e: ldstr "rejecting attack for not having any weapons"
L_0913: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0918: br Label76
L_091d: Label75
L_091d: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_091f: ldfld System.Single ExpectedDamage
L_0924: ldc.r4 0
L_0929: bgt.un Label77
L_092e: ldarg.0
L_092f: ldstr "rejecting attack for not having any expected damage"
L_0934: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0939: br Label78
L_093e: Label77
L_093e: ldc.i4.1
L_093f: newobj Void .ctor(BehaviorNodeState)
L_0944: stloc.s 44 (BehaviorTreeResults)
L_0946: ldarg.0
L_0947: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0949: ldarg.2
L_094a: call CalledShotAttackOrderInfo MakeOffensivePushOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_094f: stloc.s 47 (CalledShotAttackOrderInfo)
L_0951: ldloc.s 47 (CalledShotAttackOrderInfo)
L_0953: brfalse Label79
L_0958: ldloc.s 44 (BehaviorTreeResults)
L_095a: ldloc.s 47 (CalledShotAttackOrderInfo)
L_095c: stfld OrderInfo orderInfo
L_0961: ldloc.s 44 (BehaviorTreeResults)
L_0963: ldarg.0
L_0964: callvirt System.String get_DisplayName()
L_0969: ldstr " using offensive push"
L_096e: call System.String Concat(System.String, System.String)
L_0973: stfld System.String debugOrderString
L_0978: br Label80
L_097d: Label79
L_097d: ldarg.0
L_097e: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0980: ldarg.2
L_0981: ldc.i4.0
L_0982: call CalledShotAttackOrderInfo MakeCalledShotOrder(BattleTech.AbstractActor, AttackEvaluation, Int32, Boolean)
L_0987: dup
L_0988: stloc.s 46 (CalledShotAttackOrderInfo)
L_098a: brfalse Label81
L_098f: ldloc.s 44 (BehaviorTreeResults)
L_0991: ldloc.s 46 (CalledShotAttackOrderInfo)
L_0993: stfld OrderInfo orderInfo
L_0998: ldloc.s 44 (BehaviorTreeResults)
L_099a: ldarg.0
L_099b: callvirt System.String get_DisplayName()
L_09a0: ldstr " using called shot"
L_09a5: call System.String Concat(System.String, System.String)
L_09aa: stfld System.String debugOrderString
L_09af: br Label82
L_09b4: Label81
L_09b4: ldloc.s 38 (System.Boolean)
L_09b6: brtrue Label83
L_09bb: ldarg.0
L_09bc: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09be: ldarg.2
L_09bf: call MultiTargetAttackOrderInfo MakeMultiAttackOrder(BattleTech.AbstractActor, AttackEvaluation, Int32)
L_09c4: dup
L_09c5: stloc.s 45 (MultiTargetAttackOrderInfo)
L_09c7: brfalse Label84
L_09cc: ldloc.s 44 (BehaviorTreeResults)
L_09ce: ldloc.s 45 (MultiTargetAttackOrderInfo)
L_09d0: stfld OrderInfo orderInfo
L_09d5: ldloc.s 44 (BehaviorTreeResults)
L_09d7: ldarg.0
L_09d8: callvirt System.String get_DisplayName()
L_09dd: ldstr " using multi attack"
L_09e2: call System.String Concat(System.String, System.String)
L_09e7: stfld System.String debugOrderString
L_09ec: br Label85
L_09f1: Label83
L_09f1: Label84
L_09f1: ldarg.1
L_09f2: newobj Void .ctor(ICombatant)
L_09f7: stloc.s 48 (AttackOrderInfo)
L_09f9: ldloc.s 48 (AttackOrderInfo)
L_09fb: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_09fd: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] WeaponList
L_0a02: stfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a07: ldloc.s 48 (AttackOrderInfo)
L_0a09: ldarg.1
L_0a0a: stfld BattleTech.ICombatant TargetUnit
L_0a0f: ldloc.s 48 (AttackOrderInfo)
L_0a11: ldloc.s 38 (System.Boolean)
L_0a13: brfalse Label86
L_0a18: ldarg.0
L_0a19: callvirt Boolean get_HasVentCoolantAbility()
L_0a1e: brfalse Label87
L_0a23: ldarg.0
L_0a24: callvirt Boolean get_CanVentCoolant()
L_0a29: br Label88
L_0a2e: Label86
L_0a2e: Label87
L_0a2e: ldc.i4.0
L_0a2f: Label88
L_0a2f: stfld System.Boolean VentFirst
L_0a34: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0a36: ldfld AIUtil+AttackType AttackType
L_0a3b: stloc.s 35 (AIUtil+AttackType)
L_0a3d: ldloc.s 35 (AIUtil+AttackType)
L_0a3f: ldc.i4.1
L_0a40: beq Label89
L_0a45: ldloc.s 35 (AIUtil+AttackType)
L_0a47: ldc.i4.2
L_0a48: beq Label90
L_0a4d: br Label91
L_0a52: Label89
L_0a52: ldloc.s 48 (AttackOrderInfo)
L_0a54: ldc.i4.1
L_0a55: stfld System.Boolean IsMelee
L_0a5a: ldloc.s 48 (AttackOrderInfo)
L_0a5c: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a61: ldloc.3
L_0a62: ldfld BattleTech.Weapon MeleeWeapon
L_0a67: callvirt Boolean Remove(BattleTech.Weapon)
L_0a6c: pop
L_0a6d: ldloc.s 48 (AttackOrderInfo)
L_0a6f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0a74: ldloc.3
L_0a75: ldfld BattleTech.Weapon DFAWeapon
L_0a7a: callvirt Boolean Remove(BattleTech.Weapon)
L_0a7f: pop
L_0a80: ldloc.3
L_0a81: callvirt BattleTech.Pathing get_Pathing()
L_0a86: ldloc.s 41 (BattleTech.AbstractActor)
L_0a88: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0a8d: stloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a8f: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0a91: callvirt Int32 get_Count()
L_0a96: brtrue Label92
L_0a9b: ldarg.0
L_0a9c: ldstr "Failing for lack of melee destinations"
L_0aa1: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0aa6: br Label93
L_0aab: Label92
L_0aab: ldloc.s 48 (AttackOrderInfo)
L_0aad: ldloc.3
L_0aae: ldloc.s 41 (BattleTech.AbstractActor)
L_0ab0: ldloc.s 49 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ab2: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0ab7: stfld UnityEngine.Vector3 AttackFromLocation
L_0abc: br Label94
L_0ac1: Label90
L_0ac1: ldloc.s 48 (AttackOrderInfo)
L_0ac3: ldc.i4.1
L_0ac4: stfld System.Boolean IsDeathFromAbove
L_0ac9: ldloc.s 48 (AttackOrderInfo)
L_0acb: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0ad0: ldloc.3
L_0ad1: ldfld BattleTech.Weapon MeleeWeapon
L_0ad6: callvirt Boolean Remove(BattleTech.Weapon)
L_0adb: pop
L_0adc: ldloc.s 48 (AttackOrderInfo)
L_0ade: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0ae3: ldloc.3
L_0ae4: ldfld BattleTech.Weapon DFAWeapon
L_0ae9: callvirt Boolean Remove(BattleTech.Weapon)
L_0aee: pop
L_0aef: ldloc.3
L_0af0: callvirt BattleTech.JumpPathing get_JumpPathing()
L_0af5: ldloc.s 41 (BattleTech.AbstractActor)
L_0af7: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] GetDFADestsForTarget(BattleTech.AbstractActor)
L_0afc: stloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0afe: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b00: callvirt Int32 get_Count()
L_0b05: brtrue Label95
L_0b0a: ldarg.0
L_0b0b: ldstr "Failing for lack of DFA destinations"
L_0b10: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b15: br Label96
L_0b1a: Label95
L_0b1a: ldloc.s 48 (AttackOrderInfo)
L_0b1c: ldloc.3
L_0b1d: ldloc.s 41 (BattleTech.AbstractActor)
L_0b1f: ldloc.s 50 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b21: callvirt UnityEngine.Vector3 FindBestPositionToMeleeFrom(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.PathNode])
L_0b26: stfld UnityEngine.Vector3 AttackFromLocation
L_0b2b: Label91
L_0b2b: Label94
L_0b2b: ldloc.s 44 (BehaviorTreeResults)
L_0b2d: ldloc.s 48 (AttackOrderInfo)
L_0b2f: stfld OrderInfo orderInfo
L_0b34: ldloc.s 44 (BehaviorTreeResults)
L_0b36: ldc.i4.5
L_0b37: newarr System.Object
L_0b3c: dup
L_0b3d: ldc.i4.0
L_0b3e: ldarg.0
L_0b3f: callvirt System.String get_DisplayName()
L_0b44: stelem.ref
L_0b45: dup
L_0b46: ldc.i4.1
L_0b47: ldstr " using attack type: "
L_0b4c: stelem.ref
L_0b4d: dup
L_0b4e: ldc.i4.2
L_0b4f: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b51: ldfld AIUtil+AttackType AttackType
L_0b56: box AIUtil+AttackType
L_0b5b: stelem.ref
L_0b5c: dup
L_0b5d: ldc.i4.3
L_0b5e: ldstr " against: "
L_0b63: stelem.ref
L_0b64: dup
L_0b65: ldc.i4.4
L_0b66: ldarg.1
L_0b67: callvirt System.String get_DisplayName()
L_0b6c: stelem.ref
L_0b6d: call System.String Concat(System.Object[])
L_0b72: stfld System.String debugOrderString
L_0b77: Label80
L_0b77: Label82
L_0b77: Label85
L_0b77: ldarg.0
L_0b78: ldstr "attack order: "
L_0b7d: ldloc.s 44 (BehaviorTreeResults)
L_0b7f: ldfld System.String debugOrderString
L_0b84: call System.String Concat(System.String, System.String)
L_0b89: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0b8e: ldarg.s 4
L_0b90: ldloc.s 44 (BehaviorTreeResults)
L_0b92: stind.ref
L_0b93: ldloc.s 37 (AttackEvaluator+AttackEvaluation)
L_0b95: ldfld System.Single ExpectedDamage
L_0b9a: br Label100
L_0b9f: Label60
L_0b9f: Label65
L_0b9f: Label70
L_0b9f: Label74
L_0b9f: Label76
L_0b9f: Label78
L_0b9f: Label93
L_0b9f: Label96
L_0b9f: ldloc.s 36 (System.Int32)
L_0ba1: ldc.i4.1
L_0ba2: add
L_0ba3: stloc.s 36 (System.Int32)
L_0ba5: Label54
L_0ba5: ldloc.s 36 (System.Int32)
L_0ba7: ldloc.s 13 (System.Collections.Generic.List`1[AttackEvaluator+AttackEvaluation])
L_0ba9: callvirt Int32 get_Count()
L_0bae: blt Label97
L_0bb3: ldarg.0
L_0bb4: ldstr "There are no targets I can shoot at without overheating."
L_0bb9: call Void LogShoot(BattleTech.AbstractActor, System.String)
L_0bbe: ldarg.s 4
L_0bc0: ldnull
L_0bc1: stind.ref
L_0bc2: ldc.r4 0
L_0bc7: Label98
L_0bc7: Label100
L_0bc7: stloc 51 (System.Single)
L_0bc9: Label0
L_0bc9: ldloc 51 (System.Single)
L_0bcb: ret
DONE

### Patch AttackEvaluator, BehaviorTreeResults MakeAttackOrder(BattleTech.AbstractActor, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Single
L_0000: Local var 2: BehaviorTreeResults
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Single
L_0000: Local var 5: AITeam
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Int32
L_0000: Local var 12: BattleTech.ICombatant
L_0000: Local var 13: BattleTech.AbstractActor
L_0000: Local var 14: BehaviorTreeResults
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: BattleTech.Pilot
L_0000: Local var 18: System.String
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.Single
L_0000: Local var 21: AttackOrderInfo
L_0000: Local var 22: MultiTargetAttackOrderInfo
L_0000: Local var 23: System.Int32
L_0000: Local var 24: BattleTech.Weapon
L_0000: Local var 25: System.Int32
L_0000: Local var 26: AttackOrderInfo
L_0000: Local var 27: BattleTech.AbstractActor
L_0000: Local var 28: BattleTech.Pilot
L_0000: Local var 29: System.String
L_0000: Local var 30: System.Int32
L_0000: Local var 31: BattleTech.Weapon
L_0000: Local var 32: BehaviorTreeResults
L_0000: ldnull
L_0001: stloc 32 (BehaviorTreeResults)
L_0003: ldarg.0
L_0004: brtrue Label1
L_0009: ldc.i4.0
L_000a: newobj Void .ctor(BehaviorNodeState)
L_000f: br Label46
L_0014: Label1
L_0014: ldc.i4.0
L_0015: stloc.0
L_0016: ldarg.0
L_0017: ldfld BehaviorTree BehaviorTree
L_001c: ldfld System.Text.StringBuilder debugLogShootContextStringBuilder
L_0021: brtrue Label2
L_0026: ldc.i4.1
L_0027: stloc.0
L_0028: ldarg.0
L_0029: ldfld BehaviorTree BehaviorTree
L_002e: newobj Void .ctor()
L_0033: stfld System.Text.StringBuilder debugLogShootContextStringBuilder
L_0038: Label2
L_0038: ldarg.0
L_0039: ldfld BehaviorTree BehaviorTree
L_003e: ldc.i4.1
L_003f: ldstr "making attack order"
L_0044: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0049: ldarg.0
L_004a: ldfld BehaviorTree BehaviorTree
L_004f: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0054: callvirt Int32 get_Count()
L_0059: brtrue Label3
L_005e: ldstr "no enemy units"
L_0063: ldarg.0
L_0064: ldstr "AI.DecisionMaking"
L_0069: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_006e: ldarg.0
L_006f: ldfld BehaviorTree BehaviorTree
L_0074: ldc.i4.1
L_0075: ldstr "no enemy units. not shooting. Failure."
L_007a: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_007f: ldloc.0
L_0080: brfalse Label4
L_0085: ldarg.0
L_0086: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_008b: Label4
L_008b: ldc.i4.0
L_008c: newobj Void .ctor(BehaviorNodeState)
L_0091: br Label47
L_0096: Label3
L_0096: ldstr "enemy unit count: "
L_009b: ldarg.0
L_009c: ldfld BehaviorTree BehaviorTree
L_00a1: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00a6: callvirt Int32 get_Count()
L_00ab: box System.Int32
L_00b0: call System.String Concat(System.Object, System.Object)
L_00b5: ldarg.0
L_00b6: ldstr "AI.DecisionMaking"
L_00bb: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_00c0: ldarg.0
L_00c1: ldfld BehaviorTree BehaviorTree
L_00c6: ldc.i4.1
L_00c7: ldstr "Enemy Unit Count: "
L_00cc: ldarg.0
L_00cd: ldfld BehaviorTree BehaviorTree
L_00d2: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00d7: callvirt Int32 get_Count()
L_00dc: box System.Int32
L_00e1: call System.String Concat(System.Object, System.Object)
L_00e6: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_00eb: ldstr "Evaluating attack from pos "
L_00f0: ldarg.0
L_00f1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00f6: box UnityEngine.Vector3
L_00fb: call System.String Concat(System.Object, System.Object)
L_0100: ldarg.0
L_0101: ldstr "AI.DecisionMaking"
L_0106: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_010b: ldc.r4 0
L_0110: stloc.1
L_0111: ldnull
L_0112: stloc.2
L_0113: ldnull
L_0114: stloc.3
L_0115: ldc.r4 0
L_011a: stloc.s 4 (System.Single)
L_011c: ldarg.0
L_011d: callvirt BattleTech.Team get_team()
L_0122: isinst AITeam
L_0127: stloc.s 5 (AITeam)
L_0129: ldloc.s 5 (AITeam)
L_012b: brfalse Label5
L_0130: ldloc.s 5 (AITeam)
L_0132: ldfld System.Collections.Generic.Dictionary`2[Lance,BattleTech.AbstractActor] DesignatedTargetForLance
L_0137: ldarg.0
L_0138: callvirt Lance get_lance()
L_013d: callvirt Boolean ContainsKey(Lance)
L_0142: brfalse Label6
L_0147: ldloc.s 5 (AITeam)
L_0149: ldfld System.Collections.Generic.Dictionary`2[Lance,BattleTech.AbstractActor] DesignatedTargetForLance
L_014e: ldarg.0
L_014f: callvirt Lance get_lance()
L_0154: callvirt BattleTech.AbstractActor get_Item(Lance)
L_0159: stloc.3
L_015a: ldloc.3
L_015b: brfalse Label7
L_0160: ldloc.3
L_0161: callvirt Boolean get_IsDead()
L_0166: brtrue Label8
L_016b: ldc.i4.0
L_016c: stloc.s 10 (System.Int32)
L_016e: br Label9
L_0173: Label12
L_0173: ldarg.0
L_0174: ldfld BehaviorTree BehaviorTree
L_0179: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_017e: ldloc.s 10 (System.Int32)
L_0180: callvirt BattleTech.ICombatant get_Item(Int32)
L_0185: ldloc.3
L_0186: bne.un Label10
L_018b: ldarg.0
L_018c: ldloc.3
L_018d: ldloc.s 10 (System.Int32)
L_018f: ldarg.1
L_0190: ldloca.s 2 (BehaviorTreeResults)
L_0192: call Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_0197: stloc.1
L_0198: ldarg.0
L_0199: ldarg.0
L_019a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_019f: ldloc.3
L_01a0: ldloc.3
L_01a1: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_01a6: ldloc.3
L_01a7: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_01ac: ldarg.0
L_01ad: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_01b2: ldc.i4.0
L_01b3: call Single EvaluateFirepowerReductionFromAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_01b8: stloc.s 4 (System.Single)
L_01ba: br Label11
L_01bf: Label10
L_01bf: ldloc.s 10 (System.Int32)
L_01c1: ldc.i4.1
L_01c2: add
L_01c3: stloc.s 10 (System.Int32)
L_01c5: Label9
L_01c5: ldloc.s 10 (System.Int32)
L_01c7: ldarg.0
L_01c8: ldfld BehaviorTree BehaviorTree
L_01cd: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_01d2: callvirt Int32 get_Count()
L_01d7: blt Label12
L_01dc: Label5
L_01dc: Label6
L_01dc: Label7
L_01dc: Label8
L_01dc: Label11
L_01dc: ldarg.0
L_01dd: ldfld BehaviorTree BehaviorTree
L_01e2: ldc.i4.1
L_01e3: ldstr "Designated Target Attack Damage: "
L_01e8: ldloc.1
L_01e9: box System.Single
L_01ee: call System.String Concat(System.Object, System.Object)
L_01f3: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_01f8: ldarg.0
L_01f9: ldfld BehaviorTree BehaviorTree
L_01fe: ldc.i4.1
L_01ff: ldstr "Designated Target Firepower Takeaway: "
L_0204: ldloc.s 4 (System.Single)
L_0206: box System.Single
L_020b: call System.String Concat(System.Object, System.Object)
L_0210: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0215: ldarg.0
L_0216: ldfld BehaviorTree BehaviorTree
L_021b: ldc.i4 192
L_0220: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0225: callvirt Single get_FloatVal()
L_022a: stloc.s 6 (System.Single)
L_022c: ldloc.s 6 (System.Single)
L_022e: ldc.r4 100
L_0233: div
L_0234: stloc.s 7 (System.Single)
L_0236: ldarg.0
L_0237: ldfld BehaviorTree BehaviorTree
L_023c: ldc.i4.1
L_023d: ldstr "Opportunity Fire Damage Threshold (%): "
L_0242: ldloc.s 6 (System.Single)
L_0244: box System.Single
L_0249: call System.String Concat(System.Object, System.Object)
L_024e: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0253: ldarg.0
L_0254: ldfld BehaviorTree BehaviorTree
L_0259: ldc.i4 197
L_025e: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0263: callvirt Single get_FloatVal()
L_0268: stloc.s 8 (System.Single)
L_026a: ldloc.s 8 (System.Single)
L_026c: ldc.r4 100
L_0271: div
L_0272: stloc.s 9 (System.Single)
L_0274: ldarg.0
L_0275: ldfld BehaviorTree BehaviorTree
L_027a: ldc.i4.1
L_027b: ldstr "Opportunity Fire Takeaway Threshold (%): "
L_0280: ldloc.s 8 (System.Single)
L_0282: box System.Single
L_0287: call System.String Concat(System.Object, System.Object)
L_028c: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0291: ldc.i4.0
L_0292: stloc.s 11 (System.Int32)
L_0294: br Label13
L_0299: Label41
L_0299: ldarg.0
L_029a: ldfld BehaviorTree BehaviorTree
L_029f: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_02a4: ldloc.s 11 (System.Int32)
L_02a6: callvirt BattleTech.ICombatant get_Item(Int32)
L_02ab: stloc.s 12 (BattleTech.ICombatant)
L_02ad: ldloc.s 12 (BattleTech.ICombatant)
L_02af: ldloc.3
L_02b0: beq Label14
L_02b5: ldloc.s 12 (BattleTech.ICombatant)
L_02b7: callvirt Boolean get_IsDead()
L_02bc: brtrue Label15
L_02c1: ldloc.s 12 (BattleTech.ICombatant)
L_02c3: isinst BattleTech.AbstractActor
L_02c8: stloc.s 13 (BattleTech.AbstractActor)
L_02ca: ldloc.s 13 (BattleTech.AbstractActor)
L_02cc: brfalse Label16
L_02d1: ldloc.s 13 (BattleTech.AbstractActor)
L_02d3: callvirt BattleTech.Pilot GetPilot()
L_02d8: stloc.s 17 (BattleTech.Pilot)
L_02da: ldloc.s 17 (BattleTech.Pilot)
L_02dc: brfalse Label17
L_02e1: ldloc.s 17 (BattleTech.Pilot)
L_02e3: callvirt BattleTech.HumanDescriptionDef get_Description()
L_02e8: callvirt System.String get_Callsign()
L_02ed: br Label18
L_02f2: Label17
L_02f2: ldstr "???"
L_02f7: Label18
L_02f7: stloc.s 18 (System.String)
L_02f9: ldarg.0
L_02fa: ldfld BehaviorTree BehaviorTree
L_02ff: ldc.i4.1
L_0300: ldstr "Target: {0} {1} {2}"
L_0305: ldloc.s 13 (BattleTech.AbstractActor)
L_0307: callvirt System.String get_DisplayName()
L_030c: ldloc.s 13 (BattleTech.AbstractActor)
L_030e: callvirt System.String get_VariantName()
L_0313: ldloc.s 18 (System.String)
L_0315: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_031a: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_031f: br Label19
L_0324: Label16
L_0324: ldarg.0
L_0325: ldfld BehaviorTree BehaviorTree
L_032a: ldc.i4.1
L_032b: ldstr "Target: {0}"
L_0330: ldloc.s 12 (BattleTech.ICombatant)
L_0332: callvirt System.String get_DisplayName()
L_0337: call System.String Format(System.String, System.Object)
L_033c: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0341: Label19
L_0341: ldarg.0
L_0342: ldloc.s 12 (BattleTech.ICombatant)
L_0344: ldloc.s 11 (System.Int32)
L_0346: ldarg.1
L_0347: ldloca.s 14 (BehaviorTreeResults)
L_0349: call Single MakeAttackOrderForTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Boolean, BehaviorTreeResults ByRef)
L_034e: stloc.s 15 (System.Single)
L_0350: ldarg.0
L_0351: ldarg.0
L_0352: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0357: ldloc.s 12 (BattleTech.ICombatant)
L_0359: ldloc.s 12 (BattleTech.ICombatant)
L_035b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0360: ldloc.s 12 (BattleTech.ICombatant)
L_0362: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0367: ldarg.0
L_0368: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_036d: ldc.i4.0
L_036e: call Single EvaluateFirepowerReductionFromAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_0373: stloc.s 16 (System.Single)
L_0375: ldarg.0
L_0376: ldfld BehaviorTree BehaviorTree
L_037b: ldc.i4.1
L_037c: ldstr "Damage to Target: {0}"
L_0381: ldloc.s 15 (System.Single)
L_0383: box System.Single
L_0388: call System.String Format(System.String, System.Object)
L_038d: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0392: ldarg.0
L_0393: ldfld BehaviorTree BehaviorTree
L_0398: ldc.i4.1
L_0399: ldstr "Damage Takeaway from Target: {0}"
L_039e: ldloc.s 16 (System.Single)
L_03a0: box System.Single
L_03a5: call System.String Format(System.String, System.Object)
L_03aa: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_03af: ldloc.s 13 (BattleTech.AbstractActor)
L_03b1: brfalse Label20
L_03b6: ldloc.s 13 (BattleTech.AbstractActor)
L_03b8: callvirt Boolean get_IsEvasive()
L_03bd: brfalse Label21
L_03c2: ldarg.0
L_03c3: ldarg.0
L_03c4: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03c9: ldloc.s 13 (BattleTech.AbstractActor)
L_03cb: ldloc.s 12 (BattleTech.ICombatant)
L_03cd: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03d2: ldloc.s 12 (BattleTech.ICombatant)
L_03d4: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_03d9: ldarg.0
L_03da: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_03df: ldc.i4.0
L_03e0: call Int32 CountPipsRemovedByAttack(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.MeleeAttackType)
L_03e5: stloc.s 19 (System.Int32)
L_03e7: ldarg.0
L_03e8: ldfld BehaviorTree BehaviorTree
L_03ed: ldc.i4.1
L_03ee: ldstr "Pips Removed from Target: {0}"
L_03f3: ldloc.s 19 (System.Int32)
L_03f5: box System.Int32
L_03fa: call System.String Format(System.String, System.Object)
L_03ff: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0404: ldloc.s 19 (System.Int32)
L_0406: ldc.i4.0
L_0407: ble Label22
L_040c: ldarg.0
L_040d: ldloc.s 13 (BattleTech.AbstractActor)
L_040f: ldloc.s 12 (BattleTech.ICombatant)
L_0411: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0416: ldloc.s 19 (System.Int32)
L_0418: call Single AdditionalDamageFromFriendsGainedByAttackingEvasiveTarget(BattleTech.AbstractActor, BattleTech.AbstractActor, UnityEngine.Vector3, Int32)
L_041d: stloc.s 20 (System.Single)
L_041f: ldarg.0
L_0420: ldfld BehaviorTree BehaviorTree
L_0425: ldc.i4.1
L_0426: ldstr "Additional Damage Gained as a result of my attack: {0}"
L_042b: ldloc.s 20 (System.Single)
L_042d: box System.Single
L_0432: call System.String Format(System.String, System.Object)
L_0437: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_043c: ldloc.s 15 (System.Single)
L_043e: ldloc.s 20 (System.Single)
L_0440: add
L_0441: stloc.s 15 (System.Single)
L_0443: Label20
L_0443: Label21
L_0443: Label22
L_0443: ldarg.0
L_0444: ldfld BehaviorTree BehaviorTree
L_0449: ldc.i4.1
L_044a: ldstr "Comparing damage to: {0} and takeaway to: {1}"
L_044f: ldloc.1
L_0450: box System.Single
L_0455: ldloc.s 4 (System.Single)
L_0457: box System.Single
L_045c: call System.String Format(System.String, System.Object, System.Object)
L_0461: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0466: ldloc.s 14 (BehaviorTreeResults)
L_0468: brfalse Label23
L_046d: ldloc.s 14 (BehaviorTreeResults)
L_046f: ldfld OrderInfo orderInfo
L_0474: brfalse Label24
L_0479: ldloc.s 15 (System.Single)
L_047b: ldloc.1
L_047c: ldc.r4 1
L_0481: ldloc.s 7 (System.Single)
L_0483: add
L_0484: mul
L_0485: bgt Label25
L_048a: ldloc.s 16 (System.Single)
L_048c: ldloc.s 4 (System.Single)
L_048e: ldc.r4 1
L_0493: ldloc.s 9 (System.Single)
L_0495: add
L_0496: mul
L_0497: ble.un Label26
L_049c: Label25
L_049c: ldloc.s 14 (BehaviorTreeResults)
L_049e: ldfld OrderInfo orderInfo
L_04a3: isinst AttackOrderInfo
L_04a8: stloc.s 21 (AttackOrderInfo)
L_04aa: ldloc.s 14 (BehaviorTreeResults)
L_04ac: ldfld OrderInfo orderInfo
L_04b1: isinst MultiTargetAttackOrderInfo
L_04b6: stloc.s 22 (MultiTargetAttackOrderInfo)
L_04b8: ldloc.s 21 (AttackOrderInfo)
L_04ba: brfalse Label27
L_04bf: ldc.i4.0
L_04c0: stloc.s 23 (System.Int32)
L_04c2: br Label28
L_04c7: Label29
L_04c7: ldloc.s 21 (AttackOrderInfo)
L_04c9: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_04ce: ldloc.s 23 (System.Int32)
L_04d0: callvirt BattleTech.Weapon get_Item(Int32)
L_04d5: stloc.s 24 (BattleTech.Weapon)
L_04d7: ldarg.0
L_04d8: ldfld BehaviorTree BehaviorTree
L_04dd: ldc.i4.1
L_04de: ldstr "weapon: "
L_04e3: ldloc.s 24 (BattleTech.Weapon)
L_04e5: callvirt System.String get_Name()
L_04ea: call System.String Concat(System.String, System.String)
L_04ef: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_04f4: ldloc.s 23 (System.Int32)
L_04f6: ldc.i4.1
L_04f7: add
L_04f8: stloc.s 23 (System.Int32)
L_04fa: Label28
L_04fa: ldloc.s 23 (System.Int32)
L_04fc: ldloc.s 21 (AttackOrderInfo)
L_04fe: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0503: callvirt Int32 get_Count()
L_0508: blt Label29
L_050d: br Label30
L_0512: Label27
L_0512: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0514: brfalse Label31
L_0519: ldarg.0
L_051a: ldfld BehaviorTree BehaviorTree
L_051f: ldc.i4.1
L_0520: ldstr "multi-target order"
L_0525: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_052a: ldc.i4.0
L_052b: stloc.s 25 (System.Int32)
L_052d: br Label32
L_0532: Label39
L_0532: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0534: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_0539: ldloc.s 25 (System.Int32)
L_053b: callvirt AttackOrderInfo get_Item(Int32)
L_0540: stloc.s 26 (AttackOrderInfo)
L_0542: ldloc.s 26 (AttackOrderInfo)
L_0544: ldfld BattleTech.ICombatant TargetUnit
L_0549: isinst BattleTech.AbstractActor
L_054e: stloc.s 27 (BattleTech.AbstractActor)
L_0550: ldloc.s 27 (BattleTech.AbstractActor)
L_0552: brtrue Label33
L_0557: ldarg.0
L_0558: ldfld BehaviorTree BehaviorTree
L_055d: ldc.i4.1
L_055e: ldstr "target: "
L_0563: ldloc.s 26 (AttackOrderInfo)
L_0565: ldfld BattleTech.ICombatant TargetUnit
L_056a: callvirt System.String get_DisplayName()
L_056f: call System.String Concat(System.String, System.String)
L_0574: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0579: br Label34
L_057e: Label33
L_057e: ldloc.s 27 (BattleTech.AbstractActor)
L_0580: callvirt BattleTech.Pilot GetPilot()
L_0585: stloc.s 28 (BattleTech.Pilot)
L_0587: ldloc.s 28 (BattleTech.Pilot)
L_0589: brfalse Label35
L_058e: ldloc.s 28 (BattleTech.Pilot)
L_0590: callvirt BattleTech.HumanDescriptionDef get_Description()
L_0595: callvirt System.String get_Callsign()
L_059a: br Label36
L_059f: Label35
L_059f: ldstr "???"
L_05a4: Label36
L_05a4: stloc.s 29 (System.String)
L_05a6: ldarg.0
L_05a7: ldfld BehaviorTree BehaviorTree
L_05ac: ldc.i4.1
L_05ad: ldstr "target: "
L_05b2: ldloc.s 26 (AttackOrderInfo)
L_05b4: ldfld BattleTech.ICombatant TargetUnit
L_05b9: callvirt System.String get_DisplayName()
L_05be: ldstr " "
L_05c3: ldloc.s 29 (System.String)
L_05c5: call System.String Concat(System.String, System.String, System.String, System.String)
L_05ca: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_05cf: Label34
L_05cf: ldc.i4.0
L_05d0: stloc.s 30 (System.Int32)
L_05d2: br Label37
L_05d7: Label38
L_05d7: ldloc.s 26 (AttackOrderInfo)
L_05d9: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_05de: ldloc.s 30 (System.Int32)
L_05e0: callvirt BattleTech.Weapon get_Item(Int32)
L_05e5: stloc.s 31 (BattleTech.Weapon)
L_05e7: ldarg.0
L_05e8: ldfld BehaviorTree BehaviorTree
L_05ed: ldc.i4.1
L_05ee: ldstr "weapon: "
L_05f3: ldloc.s 31 (BattleTech.Weapon)
L_05f5: callvirt System.String get_Name()
L_05fa: call System.String Concat(System.String, System.String)
L_05ff: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0604: ldloc.s 30 (System.Int32)
L_0606: ldc.i4.1
L_0607: add
L_0608: stloc.s 30 (System.Int32)
L_060a: Label37
L_060a: ldloc.s 30 (System.Int32)
L_060c: ldloc.s 26 (AttackOrderInfo)
L_060e: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_0613: callvirt Int32 get_Count()
L_0618: blt Label38
L_061d: ldloc.s 25 (System.Int32)
L_061f: ldc.i4.1
L_0620: add
L_0621: stloc.s 25 (System.Int32)
L_0623: Label32
L_0623: ldloc.s 25 (System.Int32)
L_0625: ldloc.s 22 (MultiTargetAttackOrderInfo)
L_0627: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_062c: callvirt Int32 get_Count()
L_0631: blt Label39
L_0636: Label30
L_0636: Label31
L_0636: ldarg.0
L_0637: ldfld BehaviorTree BehaviorTree
L_063c: ldc.i4.1
L_063d: ldstr "taking opportunity fire shot. Success"
L_0642: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0647: ldloc.0
L_0648: brfalse Label40
L_064d: ldarg.0
L_064e: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_0653: Label40
L_0653: ldloc.s 14 (BehaviorTreeResults)
L_0655: br Label48
L_065a: Label14
L_065a: Label15
L_065a: Label23
L_065a: Label24
L_065a: Label26
L_065a: ldloc.s 11 (System.Int32)
L_065c: ldc.i4.1
L_065d: add
L_065e: stloc.s 11 (System.Int32)
L_0660: Label13
L_0660: ldloc.s 11 (System.Int32)
L_0662: ldarg.0
L_0663: ldfld BehaviorTree BehaviorTree
L_0668: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_066d: callvirt Int32 get_Count()
L_0672: blt Label41
L_0677: ldloc.2
L_0678: brfalse Label42
L_067d: ldloc.2
L_067e: ldfld OrderInfo orderInfo
L_0683: brfalse Label43
L_0688: ldarg.0
L_0689: ldfld BehaviorTree BehaviorTree
L_068e: ldc.i4.1
L_068f: ldstr "attacking designated target. Success"
L_0694: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_0699: ldloc.0
L_069a: brfalse Label44
L_069f: ldarg.0
L_06a0: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_06a5: Label44
L_06a5: ldloc.2
L_06a6: br Label49
L_06ab: Label42
L_06ab: Label43
L_06ab: ldarg.0
L_06ac: ldfld BehaviorTree BehaviorTree
L_06b1: ldc.i4.1
L_06b2: ldstr "no good attacks. not shooting. Failure."
L_06b7: callvirt Void AddMessageToDebugContext(AIDebugContext, System.String)
L_06bc: ldloc.0
L_06bd: brfalse Label45
L_06c2: ldarg.0
L_06c3: call Void FinalizeShootContextLog(BattleTech.AbstractActor)
L_06c8: Label45
L_06c8: ldc.i4.0
L_06c9: newobj Void .ctor(BehaviorNodeState)
L_06ce: Label46
L_06ce: Label47
L_06ce: Label48
L_06ce: Label49
L_06ce: stloc 32 (BehaviorTreeResults)
L_06d0: ldarg 0
L_06d6: ldarg 1
L_06dc: ldloc 32 (BehaviorTreeResults)
L_06de: call Void Postfix(BattleTech.AbstractActor, Boolean, BehaviorTreeResults)
L_06e3: ldloc 32 (BehaviorTreeResults)
L_06e5: ret
DONE

### Patch BattleTech.AmmunitionDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(BattleTech.AmmunitionDef, System.String ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call System.String FromJSON[AmmunitionDef](BattleTech.AmmunitionDef, System.String)
L_0018: pop
L_0019: ldarg.0
L_001a: call Void UpgradeToDataDrivenEnums()
L_001f: Label0
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.AmmunitionDef)
L_0025: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarga 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_001d: brfalse Label0
L_0022: ldarg.1
L_0023: castclass BattleTech.AttackSequenceImpactMessage
L_0028: stloc.0
L_0029: ldloc.0
L_002a: ldflda BattleTech.WeaponHitInfo hitInfo
L_002f: ldfld System.Int32 attackSequenceId
L_0034: ldarg.0
L_0035: ldfld System.Int32 id
L_003a: beq Label1
L_003f: br Label33
L_0044: Label1
L_0044: ldloc.0
L_0045: ldflda BattleTech.WeaponHitInfo hitInfo
L_004a: ldfld System.Int32 attackGroupIndex
L_004f: stloc.1
L_0050: ldloc.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldfld System.Int32 attackWeaponIndex
L_005b: stloc.2
L_005c: ldloc.0
L_005d: ldfld System.Int32 hitIndex
L_0062: stloc.3
L_0063: ldarg.0
L_0064: ldloc.1
L_0065: ldloc.2
L_0066: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_006b: stloc.s 4 (BattleTech.Weapon)
L_006d: ldloc.0
L_006e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0073: ldloc.3
L_0074: call Int32 ShotHitLocation(Int32)
L_0079: stloc.s 5 (System.Int32)
L_007b: ldloc.0
L_007c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0081: ldfld UnityEngine.Vector3[] hitPositions
L_0086: ldloc.3
L_0087: ldelem UnityEngine.Vector3
L_008c: stloc.s 6 (UnityEngine.Vector3)
L_008e: ldloc.0
L_008f: ldfld System.Single hitDamage
L_0094: stloc.s 7 (System.Single)
L_0096: ldloc.s 7 (System.Single)
L_0098: stloc.s 8 (System.Single)
L_009a: ldarg.0
L_009b: call BattleTech.AttackDirector get_Director()
L_00a0: callvirt BattleTech.CombatGameState get_Combat()
L_00a5: callvirt BattleTech.ToHit get_ToHit()
L_00aa: ldloc.0
L_00ab: ldflda BattleTech.WeaponHitInfo hitInfo
L_00b0: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00b5: ldloc.3
L_00b6: ldelem.i4
L_00b7: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00bc: stloc.s 9 (System.Single)
L_00be: ldloc.s 7 (System.Single)
L_00c0: ldloc.s 9 (System.Single)
L_00c2: mul
L_00c3: stloc.s 8 (System.Single)
L_00c5: ldloc.0
L_00c6: ldflda BattleTech.WeaponHitInfo hitInfo
L_00cb: ldfld System.String[] secondaryTargetIds
L_00d0: ldloc.3
L_00d1: ldelem.ref
L_00d2: call Boolean IsNullOrEmpty(System.String)
L_00d7: ldc.i4.0
L_00d8: ceq
L_00da: stloc.s 10 (System.Boolean)
L_00dc: ldnull
L_00dd: stloc.s 11 (BattleTech.ICombatant)
L_00df: ldloc.s 10 (System.Boolean)
L_00e1: brfalse Label2
L_00e6: ldarg.0
L_00e7: call BattleTech.AttackDirector get_Director()
L_00ec: callvirt BattleTech.CombatGameState get_Combat()
L_00f1: ldloc.0
L_00f2: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f7: ldfld System.String[] secondaryTargetIds
L_00fc: ldloc.3
L_00fd: ldelem.ref
L_00fe: ldc.i4.0
L_00ff: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0104: stloc.s 11 (BattleTech.ICombatant)
L_0106: Label2
L_0106: ldarg.0
L_0107: ldfld BattleTech.ICombatant chosenTarget
L_010c: isinst BattleTech.AbstractActor
L_0111: stloc.s 12 (BattleTech.AbstractActor)
L_0113: ldloc.s 12 (BattleTech.AbstractActor)
L_0115: brfalse Label3
L_011a: ldarg.0
L_011b: ldfld BattleTech.AbstractActor attacker
L_0120: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0125: ldloc.s 12 (BattleTech.AbstractActor)
L_0127: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_012c: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_012e: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0130: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0135: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0137: ldloc.s 12 (BattleTech.AbstractActor)
L_0139: ldloc.s 8 (System.Single)
L_013b: ldloc.s 4 (BattleTech.Weapon)
L_013d: callvirt BattleTech.WeaponCategory get_Category()
L_0142: ldloc.s 12 (BattleTech.AbstractActor)
L_0144: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0149: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_014b: ldc.i4.1
L_014c: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0151: stloc.s 8 (System.Single)
L_0153: ldloc.s 12 (BattleTech.AbstractActor)
L_0155: ldloc.s 8 (System.Single)
L_0157: ldloc.s 4 (BattleTech.Weapon)
L_0159: callvirt BattleTech.WeaponCategory get_Category()
L_015e: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0163: stloc.s 8 (System.Single)
L_0165: Label3
L_0165: ldloc.s 8 (System.Single)
L_0167: ldc.r4 0
L_016c: bgt.un Label4
L_0171: ldsfld HBS.Logging.ILog attackLogger
L_0176: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_017b: ldloc.s 7 (System.Single)
L_017d: box System.Single
L_0182: ldloc.s 8 (System.Single)
L_0184: box System.Single
L_0189: call System.String Format(System.String, System.Object, System.Object)
L_018e: callvirt Void LogWarning(System.Object)
L_0193: ldc.r4 0
L_0198: stloc.s 8 (System.Single)
L_019a: Label4
L_019a: ldarg.0
L_019b: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01a0: ldloc.0
L_01a1: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01a6: stloc.s 13 (System.Boolean)
L_01a8: ldloc.0
L_01a9: ldflda BattleTech.WeaponHitInfo hitInfo
L_01ae: ldloc.3
L_01af: call Boolean DidShotHitChosenTarget(Int32)
L_01b4: stloc.s 14 (System.Boolean)
L_01b6: ldloc.0
L_01b7: ldfld System.Boolean hasPlayedImpact
L_01bc: brtrue Label5
L_01c1: ldsfld HBS.Logging.ILog logger
L_01c6: callvirt Boolean get_IsDebugEnabled()
L_01cb: brfalse Label6
L_01d0: ldsfld HBS.Logging.ILog logger
L_01d5: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01da: ldc.i4.5
L_01db: newarr System.Object
L_01e0: dup
L_01e1: ldc.i4.0
L_01e2: ldarg.0
L_01e3: ldfld System.Int32 id
L_01e8: box System.Int32
L_01ed: stelem.ref
L_01ee: dup
L_01ef: ldc.i4.1
L_01f0: ldloc.1
L_01f1: box System.Int32
L_01f6: stelem.ref
L_01f7: dup
L_01f8: ldc.i4.2
L_01f9: ldloc.2
L_01fa: box System.Int32
L_01ff: stelem.ref
L_0200: dup
L_0201: ldc.i4.3
L_0202: ldloc.3
L_0203: box System.Int32
L_0208: stelem.ref
L_0209: dup
L_020a: ldc.i4.4
L_020b: ldloc.s 13 (System.Boolean)
L_020d: box System.Boolean
L_0212: stelem.ref
L_0213: call System.String Format(System.String, System.Object[])
L_0218: callvirt Void LogDebug(System.Object)
L_021d: Label6
L_021d: ldloc.0
L_021e: ldc.i4.1
L_021f: stfld System.Boolean hasPlayedImpact
L_0224: ldarg.0
L_0225: ldfld BattleTech.ICombatant chosenTarget
L_022a: callvirt BattleTech.GameRepresentation get_GameRep()
L_022f: ldnull
L_0230: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0235: brfalse Label7
L_023a: ldloc.s 14 (System.Boolean)
L_023c: brfalse Label8
L_0241: ldarg.0
L_0242: ldfld BattleTech.ICombatant chosenTarget
L_0247: callvirt BattleTech.GameRepresentation get_GameRep()
L_024c: ldloc.0
L_024d: ldfld BattleTech.WeaponHitInfo hitInfo
L_0252: ldloc.3
L_0253: ldloc.s 4 (BattleTech.Weapon)
L_0255: ldarg.0
L_0256: ldfld BattleTech.MeleeAttackType meleeAttackType
L_025b: ldarg.0
L_025c: ldfld System.Single cumulativeDamage
L_0261: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0266: ldloc.s 6 (UnityEngine.Vector3)
L_0268: stloc.s 17 (UnityEngine.Vector3)
L_026a: ldarg.0
L_026b: ldfld BattleTech.ICombatant chosenTarget
L_0270: ldloc.s 5 (System.Int32)
L_0272: callvirt Single ArmorForLocation(Int32)
L_0277: ldloc.s 8 (System.Single)
L_0279: bge.un Label9
L_027e: ldloc.0
L_027f: ldflda BattleTech.WeaponHitInfo hitInfo
L_0284: ldfld System.String attackerId
L_0289: ldarg.0
L_028a: ldfld BattleTech.ICombatant chosenTarget
L_028f: callvirt System.String get_GUID()
L_0294: ldstr "{0}"
L_0299: ldc.i4.1
L_029a: newarr System.Object
L_029f: dup
L_02a0: ldc.i4.0
L_02a1: ldc.r4 1
L_02a6: ldloc.s 8 (System.Single)
L_02a8: call Single Max(Single, Single)
L_02ad: conv.i4
L_02ae: box System.Int32
L_02b3: stelem.ref
L_02b4: newobj Void .ctor(String, Object[])
L_02b9: ldarg.0
L_02ba: call BattleTech.AttackDirector get_Director()
L_02bf: callvirt BattleTech.CombatGameState get_Combat()
L_02c4: callvirt BattleTech.CombatGameConstants get_Constants()
L_02c9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02ce: ldfld System.Single floatieSizeMedium
L_02d3: ldc.i4.8
L_02d4: ldloc.s 17 (UnityEngine.Vector3)
L_02d6: ldfld System.Single x
L_02db: ldloc.s 17 (UnityEngine.Vector3)
L_02dd: ldfld System.Single y
L_02e2: ldloc.s 17 (UnityEngine.Vector3)
L_02e4: ldfld System.Single z
L_02e9: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02ee: stloc.s 18 (BattleTech.FloatieMessage)
L_02f0: ldarg.0
L_02f1: call BattleTech.AttackDirector get_Director()
L_02f6: callvirt BattleTech.CombatGameState get_Combat()
L_02fb: callvirt MessageCenter get_MessageCenter()
L_0300: ldloc.s 18 (BattleTech.FloatieMessage)
L_0302: callvirt Void PublishMessage(MessageCenterMessage)
L_0307: br Label10
L_030c: Label9
L_030c: ldloc.0
L_030d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0312: ldfld System.String attackerId
L_0317: ldarg.0
L_0318: ldfld BattleTech.ICombatant chosenTarget
L_031d: callvirt System.String get_GUID()
L_0322: ldstr "{0}"
L_0327: ldc.i4.1
L_0328: newarr System.Object
L_032d: dup
L_032e: ldc.i4.0
L_032f: ldc.r4 1
L_0334: ldloc.s 8 (System.Single)
L_0336: call Single Max(Single, Single)
L_033b: conv.i4
L_033c: box System.Int32
L_0341: stelem.ref
L_0342: newobj Void .ctor(String, Object[])
L_0347: ldarg.0
L_0348: call BattleTech.AttackDirector get_Director()
L_034d: callvirt BattleTech.CombatGameState get_Combat()
L_0352: callvirt BattleTech.CombatGameConstants get_Constants()
L_0357: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_035c: ldfld System.Single floatieSizeMedium
L_0361: ldc.i4.7
L_0362: ldloc.s 17 (UnityEngine.Vector3)
L_0364: ldfld System.Single x
L_0369: ldloc.s 17 (UnityEngine.Vector3)
L_036b: ldfld System.Single y
L_0370: ldloc.s 17 (UnityEngine.Vector3)
L_0372: ldfld System.Single z
L_0377: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_037c: stloc.s 19 (BattleTech.FloatieMessage)
L_037e: ldarg.0
L_037f: call BattleTech.AttackDirector get_Director()
L_0384: callvirt BattleTech.CombatGameState get_Combat()
L_0389: callvirt MessageCenter get_MessageCenter()
L_038e: ldloc.s 19 (BattleTech.FloatieMessage)
L_0390: callvirt Void PublishMessage(MessageCenterMessage)
L_0395: br Label11
L_039a: Label8
L_039a: ldarg.0
L_039b: ldfld BattleTech.ICombatant chosenTarget
L_03a0: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03a5: call UnityEngine.Vector3 get_insideUnitSphere()
L_03aa: ldc.r4 5
L_03af: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03b4: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03b9: stloc.s 20 (UnityEngine.Vector3)
L_03bb: ldloc.0
L_03bc: ldflda BattleTech.WeaponHitInfo hitInfo
L_03c1: ldfld System.Boolean[] dodgeSuccesses
L_03c6: ldloc.3
L_03c7: ldelem.u1
L_03c8: brfalse Label12
L_03cd: ldarg.0
L_03ce: ldfld BattleTech.ICombatant chosenTarget
L_03d3: callvirt BattleTech.GameRepresentation get_GameRep()
L_03d8: ldloc.0
L_03d9: ldfld BattleTech.WeaponHitInfo hitInfo
L_03de: ldloc.3
L_03df: ldloc.s 4 (BattleTech.Weapon)
L_03e1: ldarg.0
L_03e2: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03e7: ldarg.0
L_03e8: ldfld System.Single cumulativeDamage
L_03ed: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_03f2: ldloc.0
L_03f3: ldflda BattleTech.WeaponHitInfo hitInfo
L_03f8: ldfld System.String attackerId
L_03fd: ldarg.0
L_03fe: ldfld BattleTech.ICombatant chosenTarget
L_0403: callvirt System.String get_GUID()
L_0408: ldstr "EVADE"
L_040d: call System.Object[] Empty[Object]()
L_0412: newobj Void .ctor(String, Object[])
L_0417: ldarg.0
L_0418: call BattleTech.AttackDirector get_Director()
L_041d: callvirt BattleTech.CombatGameState get_Combat()
L_0422: callvirt BattleTech.CombatGameConstants get_Constants()
L_0427: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_042c: ldfld System.Single floatieSizeMedium
L_0431: ldc.i4.6
L_0432: ldloc.s 20 (UnityEngine.Vector3)
L_0434: ldfld System.Single x
L_0439: ldloc.s 20 (UnityEngine.Vector3)
L_043b: ldfld System.Single y
L_0440: ldloc.s 20 (UnityEngine.Vector3)
L_0442: ldfld System.Single z
L_0447: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_044c: stloc.s 21 (BattleTech.FloatieMessage)
L_044e: ldarg.0
L_044f: call BattleTech.AttackDirector get_Director()
L_0454: callvirt BattleTech.CombatGameState get_Combat()
L_0459: callvirt MessageCenter get_MessageCenter()
L_045e: ldloc.s 21 (BattleTech.FloatieMessage)
L_0460: callvirt Void PublishMessage(MessageCenterMessage)
L_0465: br Label13
L_046a: Label12
L_046a: ldarg.0
L_046b: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0470: brfalse Label14
L_0475: ldarg.0
L_0476: ldfld BattleTech.ICombatant chosenTarget
L_047b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0480: ldloc.0
L_0481: ldfld BattleTech.WeaponHitInfo hitInfo
L_0486: ldloc.3
L_0487: ldloc.s 4 (BattleTech.Weapon)
L_0489: ldarg.0
L_048a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_048f: ldarg.0
L_0490: ldfld System.Single cumulativeDamage
L_0495: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_049a: ldloc.0
L_049b: ldflda BattleTech.WeaponHitInfo hitInfo
L_04a0: ldfld System.String attackerId
L_04a5: ldloc.0
L_04a6: ldflda BattleTech.WeaponHitInfo hitInfo
L_04ab: ldfld System.String targetId
L_04b0: ldstr "MISS!"
L_04b5: call System.Object[] Empty[Object]()
L_04ba: newobj Void .ctor(String, Object[])
L_04bf: ldarg.0
L_04c0: call BattleTech.AttackDirector get_Director()
L_04c5: callvirt BattleTech.CombatGameState get_Combat()
L_04ca: callvirt BattleTech.CombatGameConstants get_Constants()
L_04cf: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04d4: ldfld System.Single floatieSizeMedium
L_04d9: ldc.i4.5
L_04da: ldloc.s 20 (UnityEngine.Vector3)
L_04dc: ldfld System.Single x
L_04e1: ldloc.s 20 (UnityEngine.Vector3)
L_04e3: ldfld System.Single y
L_04e8: ldloc.s 20 (UnityEngine.Vector3)
L_04ea: ldfld System.Single z
L_04ef: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_04f4: stloc.s 22 (BattleTech.FloatieMessage)
L_04f6: ldarg.0
L_04f7: call BattleTech.AttackDirector get_Director()
L_04fc: callvirt BattleTech.CombatGameState get_Combat()
L_0501: callvirt MessageCenter get_MessageCenter()
L_0506: ldloc.s 22 (BattleTech.FloatieMessage)
L_0508: callvirt Void PublishMessage(MessageCenterMessage)
L_050d: br Label15
L_0512: Label14
L_0512: ldloc.s 4 (BattleTech.Weapon)
L_0514: callvirt Int32 get_ShotsWhenFired()
L_0519: ldc.i4.1
L_051a: bgt Label16
L_051f: ldc.i4.5
L_0520: br Label17
L_0525: Label16
L_0525: ldc.i4.4
L_0526: Label17
L_0526: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0528: ldloc.0
L_0529: ldflda BattleTech.WeaponHitInfo hitInfo
L_052e: ldfld System.String attackerId
L_0533: ldloc.0
L_0534: ldflda BattleTech.WeaponHitInfo hitInfo
L_0539: ldfld System.String targetId
L_053e: ldstr "MISS!"
L_0543: call System.Object[] Empty[Object]()
L_0548: newobj Void .ctor(String, Object[])
L_054d: ldarg.0
L_054e: call BattleTech.AttackDirector get_Director()
L_0553: callvirt BattleTech.CombatGameState get_Combat()
L_0558: callvirt BattleTech.CombatGameConstants get_Constants()
L_055d: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0562: ldfld System.Single floatieSizeMedium
L_0567: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0569: ldloc.s 20 (UnityEngine.Vector3)
L_056b: ldfld System.Single x
L_0570: ldloc.s 20 (UnityEngine.Vector3)
L_0572: ldfld System.Single y
L_0577: ldloc.s 20 (UnityEngine.Vector3)
L_0579: ldfld System.Single z
L_057e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0583: stloc.s 24 (BattleTech.FloatieMessage)
L_0585: ldarg.0
L_0586: call BattleTech.AttackDirector get_Director()
L_058b: callvirt BattleTech.CombatGameState get_Combat()
L_0590: callvirt MessageCenter get_MessageCenter()
L_0595: ldloc.s 24 (BattleTech.FloatieMessage)
L_0597: callvirt Void PublishMessage(MessageCenterMessage)
L_059c: Label13
L_059c: Label15
L_059c: ldloc.s 10 (System.Boolean)
L_059e: brfalse Label18
L_05a3: ldloc.0
L_05a4: ldflda BattleTech.WeaponHitInfo hitInfo
L_05a9: ldfld System.String attackerId
L_05ae: ldloc.0
L_05af: ldflda BattleTech.WeaponHitInfo hitInfo
L_05b4: ldfld System.String targetId
L_05b9: ldstr "STRAY SHOT"
L_05be: call System.Object[] Empty[Object]()
L_05c3: newobj Void .ctor(String, Object[])
L_05c8: ldarg.0
L_05c9: call BattleTech.AttackDirector get_Director()
L_05ce: callvirt BattleTech.CombatGameState get_Combat()
L_05d3: callvirt BattleTech.CombatGameConstants get_Constants()
L_05d8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05dd: ldfld System.Single floatieSizeLarge
L_05e2: ldc.i4.5
L_05e3: ldloc.s 6 (UnityEngine.Vector3)
L_05e5: ldfld System.Single x
L_05ea: ldloc.s 6 (UnityEngine.Vector3)
L_05ec: ldfld System.Single y
L_05f1: ldloc.s 6 (UnityEngine.Vector3)
L_05f3: ldfld System.Single z
L_05f8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05fd: stloc.s 25 (BattleTech.FloatieMessage)
L_05ff: ldarg.0
L_0600: call BattleTech.AttackDirector get_Director()
L_0605: callvirt BattleTech.CombatGameState get_Combat()
L_060a: callvirt MessageCenter get_MessageCenter()
L_060f: ldloc.s 25 (BattleTech.FloatieMessage)
L_0611: callvirt Void PublishMessage(MessageCenterMessage)
L_0616: ldloc.s 11 (BattleTech.ICombatant)
L_0618: brfalse Label19
L_061d: ldloc.s 11 (BattleTech.ICombatant)
L_061f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0624: ldnull
L_0625: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_062a: brfalse Label20
L_062f: ldloc.s 11 (BattleTech.ICombatant)
L_0631: callvirt BattleTech.GameRepresentation get_GameRep()
L_0636: ldloc.0
L_0637: ldfld BattleTech.WeaponHitInfo hitInfo
L_063c: ldloc.3
L_063d: ldloc.s 4 (BattleTech.Weapon)
L_063f: ldarg.0
L_0640: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0645: ldarg.0
L_0646: ldfld System.Single cumulativeDamage
L_064b: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0650: Label20
L_0650: ldloc.s 11 (BattleTech.ICombatant)
L_0652: ldloc.s 5 (System.Int32)
L_0654: callvirt Single ArmorForLocation(Int32)
L_0659: ldloc.s 8 (System.Single)
L_065b: bge.un Label21
L_0660: ldloc.0
L_0661: ldflda BattleTech.WeaponHitInfo hitInfo
L_0666: ldfld System.String attackerId
L_066b: ldloc.s 11 (BattleTech.ICombatant)
L_066d: callvirt System.String get_GUID()
L_0672: ldstr "{0}"
L_0677: ldc.i4.1
L_0678: newarr System.Object
L_067d: dup
L_067e: ldc.i4.0
L_067f: ldc.r4 1
L_0684: ldloc.s 8 (System.Single)
L_0686: call Single Max(Single, Single)
L_068b: conv.i4
L_068c: box System.Int32
L_0691: stelem.ref
L_0692: newobj Void .ctor(String, Object[])
L_0697: ldarg.0
L_0698: call BattleTech.AttackDirector get_Director()
L_069d: callvirt BattleTech.CombatGameState get_Combat()
L_06a2: callvirt BattleTech.CombatGameConstants get_Constants()
L_06a7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06ac: ldfld System.Single floatieSizeMedium
L_06b1: ldc.i4.8
L_06b2: ldloc.s 6 (UnityEngine.Vector3)
L_06b4: ldfld System.Single x
L_06b9: ldloc.s 6 (UnityEngine.Vector3)
L_06bb: ldfld System.Single y
L_06c0: ldloc.s 6 (UnityEngine.Vector3)
L_06c2: ldfld System.Single z
L_06c7: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06cc: stloc.s 26 (BattleTech.FloatieMessage)
L_06ce: ldarg.0
L_06cf: call BattleTech.AttackDirector get_Director()
L_06d4: callvirt BattleTech.CombatGameState get_Combat()
L_06d9: callvirt MessageCenter get_MessageCenter()
L_06de: ldloc.s 26 (BattleTech.FloatieMessage)
L_06e0: callvirt Void PublishMessage(MessageCenterMessage)
L_06e5: br Label22
L_06ea: Label21
L_06ea: ldloc.0
L_06eb: ldflda BattleTech.WeaponHitInfo hitInfo
L_06f0: ldfld System.String attackerId
L_06f5: ldloc.s 11 (BattleTech.ICombatant)
L_06f7: callvirt System.String get_GUID()
L_06fc: ldstr "{0}"
L_0701: ldc.i4.1
L_0702: newarr System.Object
L_0707: dup
L_0708: ldc.i4.0
L_0709: ldc.r4 1
L_070e: ldloc.s 8 (System.Single)
L_0710: call Single Max(Single, Single)
L_0715: conv.i4
L_0716: box System.Int32
L_071b: stelem.ref
L_071c: newobj Void .ctor(String, Object[])
L_0721: ldarg.0
L_0722: call BattleTech.AttackDirector get_Director()
L_0727: callvirt BattleTech.CombatGameState get_Combat()
L_072c: callvirt BattleTech.CombatGameConstants get_Constants()
L_0731: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0736: ldfld System.Single floatieSizeMedium
L_073b: ldc.i4.7
L_073c: ldloc.s 6 (UnityEngine.Vector3)
L_073e: ldfld System.Single x
L_0743: ldloc.s 6 (UnityEngine.Vector3)
L_0745: ldfld System.Single y
L_074a: ldloc.s 6 (UnityEngine.Vector3)
L_074c: ldfld System.Single z
L_0751: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0756: stloc.s 27 (BattleTech.FloatieMessage)
L_0758: ldarg.0
L_0759: call BattleTech.AttackDirector get_Director()
L_075e: callvirt BattleTech.CombatGameState get_Combat()
L_0763: callvirt MessageCenter get_MessageCenter()
L_0768: ldloc.s 27 (BattleTech.FloatieMessage)
L_076a: callvirt Void PublishMessage(MessageCenterMessage)
L_076f: Label7
L_076f: Label10
L_076f: Label11
L_076f: Label18
L_076f: Label19
L_076f: Label22
L_076f: ldloc.s 4 (BattleTech.Weapon)
L_0771: callvirt BattleTech.WeaponType get_Type()
L_0776: ldc.i4.3
L_0777: beq Label23
L_077c: ldloc.s 4 (BattleTech.Weapon)
L_077e: callvirt BattleTech.WeaponType get_Type()
L_0783: ldc.i4.7
L_0784: beq Label24
L_0789: call BattleTech.CameraControl get_Instance()
L_078e: ldloc.s 8 (System.Single)
L_0790: ldarg.0
L_0791: call BattleTech.AttackDirector get_Director()
L_0796: callvirt BattleTech.CombatGameState get_Combat()
L_079b: callvirt BattleTech.CombatGameConstants get_Constants()
L_07a0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07a5: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07aa: mul
L_07ab: ldarg.0
L_07ac: call BattleTech.AttackDirector get_Director()
L_07b1: callvirt BattleTech.CombatGameState get_Combat()
L_07b6: callvirt BattleTech.CombatGameConstants get_Constants()
L_07bb: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07c0: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07c5: add
L_07c6: ldc.r4 1
L_07cb: ldloc.s 6 (UnityEngine.Vector3)
L_07cd: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07d2: Label5
L_07d2: Label23
L_07d2: Label24
L_07d2: ldloc.s 13 (System.Boolean)
L_07d4: brtrue Label25
L_07d9: ldarg.0
L_07da: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07df: ldloc.0
L_07e0: callvirt Void StoreMessage(MessageCenterMessage)
L_07e5: br Label34
L_07ea: Label25
L_07ea: ldsfld HBS.Logging.ILog logger
L_07ef: callvirt Boolean get_IsLogEnabled()
L_07f4: brfalse Label26
L_07f9: ldsfld HBS.Logging.ILog logger
L_07fe: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_0803: ldc.i4.4
L_0804: newarr System.Object
L_0809: dup
L_080a: ldc.i4.0
L_080b: ldarg.0
L_080c: ldfld System.Int32 id
L_0811: box System.Int32
L_0816: stelem.ref
L_0817: dup
L_0818: ldc.i4.1
L_0819: ldloc.1
L_081a: box System.Int32
L_081f: stelem.ref
L_0820: dup
L_0821: ldc.i4.2
L_0822: ldloc.2
L_0823: box System.Int32
L_0828: stelem.ref
L_0829: dup
L_082a: ldc.i4.3
L_082b: ldloc.3
L_082c: box System.Int32
L_0831: stelem.ref
L_0832: call System.String Format(System.String, System.Object[])
L_0837: callvirt Void Log(System.Object)
L_083c: ldsfld HBS.Logging.ILog logger
L_0841: callvirt Boolean get_IsDebugEnabled()
L_0846: brfalse Label27
L_084b: ldsfld HBS.Logging.ILog logger
L_0850: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0855: ldloc.s 4 (BattleTech.Weapon)
L_0857: callvirt System.String get_Name()
L_085c: ldarg.0
L_085d: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0862: constrained. BattleTech.MeleeAttackType
L_0868: callvirt System.String ToString()
L_086d: ldloca.s 5 (System.Int32)
L_086f: call System.String ToString()
L_0874: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0879: callvirt Void LogDebug(System.Object)
L_087e: Label26
L_087e: Label27
L_087e: ldloc.s 14 (System.Boolean)
L_0880: brfalse Label28
L_0885: ldarg.0
L_0886: ldarg.0
L_0887: ldfld System.Single cumulativeDamage
L_088c: ldloc.s 8 (System.Single)
L_088e: add
L_088f: stfld System.Single cumulativeDamage
L_0894: ldarg.0
L_0895: ldfld BattleTech.ICombatant chosenTarget
L_089a: ldloc.0
L_089b: ldfld BattleTech.WeaponHitInfo hitInfo
L_08a0: ldloc.s 5 (System.Int32)
L_08a2: ldloc.s 4 (BattleTech.Weapon)
L_08a4: ldloc.s 8 (System.Single)
L_08a6: ldloc.3
L_08a7: ldc.i4.s 12
L_08a9: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08ae: ldarg.0
L_08af: ldfld BattleTech.ICombatant chosenTarget
L_08b4: ldarg.0
L_08b5: ldfld BattleTech.AbstractActor attacker
L_08ba: callvirt System.String get_GUID()
L_08bf: callvirt Void HandleDeath(System.String)
L_08c4: br Label29
L_08c9: Label28
L_08c9: ldloc.s 10 (System.Boolean)
L_08cb: brfalse Label30
L_08d0: ldloc.s 11 (BattleTech.ICombatant)
L_08d2: brfalse Label31
L_08d7: ldloc.s 7 (System.Single)
L_08d9: ldloc.s 9 (System.Single)
L_08db: mul
L_08dc: stloc.s 8 (System.Single)
L_08de: ldloc.s 11 (BattleTech.ICombatant)
L_08e0: isinst BattleTech.AbstractActor
L_08e5: stloc.s 28 (BattleTech.AbstractActor)
L_08e7: ldloc.s 28 (BattleTech.AbstractActor)
L_08e9: brfalse Label32
L_08ee: ldarg.0
L_08ef: ldfld BattleTech.AbstractActor attacker
L_08f4: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_08f9: ldloc.s 28 (BattleTech.AbstractActor)
L_08fb: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0900: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0902: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0904: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0909: stloc.s 29 (BattleTech.LineOfFireLevel)
L_090b: ldloc.s 28 (BattleTech.AbstractActor)
L_090d: ldloc.s 8 (System.Single)
L_090f: ldloc.s 4 (BattleTech.Weapon)
L_0911: callvirt BattleTech.WeaponCategory get_Category()
L_0916: ldloc.s 28 (BattleTech.AbstractActor)
L_0918: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_091d: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_091f: ldc.i4.1
L_0920: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0925: stloc.s 8 (System.Single)
L_0927: ldloc.s 28 (BattleTech.AbstractActor)
L_0929: ldloc.s 8 (System.Single)
L_092b: ldloc.s 4 (BattleTech.Weapon)
L_092d: callvirt BattleTech.WeaponCategory get_Category()
L_0932: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0937: stloc.s 8 (System.Single)
L_0939: Label32
L_0939: ldloc.s 11 (BattleTech.ICombatant)
L_093b: ldloc.0
L_093c: ldfld BattleTech.WeaponHitInfo hitInfo
L_0941: ldloc.0
L_0942: ldflda BattleTech.WeaponHitInfo hitInfo
L_0947: ldloc.3
L_0948: call Int32 ShotHitLocation(Int32)
L_094d: ldloc.s 4 (BattleTech.Weapon)
L_094f: ldloc.s 8 (System.Single)
L_0951: ldloc.3
L_0952: ldc.i4.s 12
L_0954: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0959: ldloc.s 11 (BattleTech.ICombatant)
L_095b: ldarg.0
L_095c: ldfld BattleTech.AbstractActor attacker
L_0961: callvirt System.String get_GUID()
L_0966: callvirt Void HandleDeath(System.String)
L_096b: Label29
L_096b: Label30
L_096b: Label31
L_096b: ldarg.0
L_096c: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0971: ldloc.0
L_0972: callvirt Void MessageComplete(MessageCenterMessage)
L_0977: Label33
L_0977: Label34
L_0977: Label0
L_0977: ret
DONE

### Patch BattleTech.AbstractActor, Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.String
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Single
L_0000: ldc.r4 0
L_0005: stloc 5 (System.Single)
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: ldarg.2
L_000a: ldarg.s 4
L_000c: ldarg.s 5
L_000e: call Single GetReducedDamage(Single, BattleTech.WeaponCategory, BattleTech.LineOfFireLevel, Boolean)
L_0013: stloc.0
L_0014: ldarg.3
L_0015: brtrue Label1
L_001a: ldloc.0
L_001b: br Label19
L_0020: Label1
L_0020: ldc.r4 1
L_0025: stloc.1
L_0026: ldloc.1
L_0027: stloc.2
L_0028: ldnull
L_0029: stloc.3
L_002a: ldloc.1
L_002b: ldarg.3
L_002c: ldfld System.Single allDamageTakenMultiplier
L_0031: mul
L_0032: stloc.1
L_0033: ldsfld System.String Empty
L_0038: stloc.s 4 (System.String)
L_003a: ldarg.s 5
L_003c: brfalse Label2
L_0041: ldsfld HBS.Logging.ILog damageLogger
L_0046: callvirt Boolean get_IsLogEnabled()
L_004b: brfalse Label3
L_0050: ldloc.2
L_0051: ldloc.1
L_0052: call Boolean Approximately(Single, Single)
L_0057: brtrue Label4
L_005c: ldstr "{0}'s allDamageTakenMultiplier"
L_0061: ldarg.3
L_0062: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0067: callvirt System.String get_Name()
L_006c: call System.String Format(System.String, System.Object)
L_0071: stloc.3
L_0072: ldarg.0
L_0073: ldstr "!!! Damage Multiplier (part two) now {0} from {1}"
L_0078: ldloc.1
L_0079: box System.Single
L_007e: ldloc.3
L_007f: call System.String Format(System.String, System.Object, System.Object)
L_0084: call System.String BuildLogMessage(System.String)
L_0089: stloc.s 4 (System.String)
L_008b: ldsfld HBS.Logging.ILog damageLogger
L_0090: ldloc.s 4 (System.String)
L_0092: callvirt Void Log(System.Object)
L_0097: Label2
L_0097: Label3
L_0097: Label4
L_0097: ldloc.1
L_0098: stloc.2
L_0099: ldarg.2
L_009a: ldc.i4.1
L_009b: sub
L_009c: switch Labels5,6,7,8,9,10
L_00b9: br Label11
L_00be: Label8
L_00be: ldloc.1
L_00bf: ldarg.3
L_00c0: ldfld System.Single antipersonnelDamageTakenMultiplier
L_00c5: mul
L_00c6: stloc.1
L_00c7: ldstr "{0}'s DamageReductionMultiplierAntipersonnel"
L_00cc: ldarg.3
L_00cd: callvirt BattleTech.BaseDescriptionDef get_Description()
L_00d2: callvirt System.String get_Name()
L_00d7: call System.String Format(System.String, System.Object)
L_00dc: stloc.3
L_00dd: br Label12
L_00e2: Label5
L_00e2: ldloc.1
L_00e3: ldarg.3
L_00e4: ldfld System.Single ballisticDamageTakenMultiplier
L_00e9: mul
L_00ea: stloc.1
L_00eb: ldstr "{0}'s DamageReductionMultiplierBallistic"
L_00f0: ldarg.3
L_00f1: callvirt BattleTech.BaseDescriptionDef get_Description()
L_00f6: callvirt System.String get_Name()
L_00fb: call System.String Format(System.String, System.Object)
L_0100: stloc.3
L_0101: br Label13
L_0106: Label6
L_0106: ldloc.1
L_0107: ldarg.3
L_0108: ldfld System.Single energyDamageTakenMultiplier
L_010d: mul
L_010e: stloc.1
L_010f: ldstr "{0}'s DamageReductionMultiplierEnergy"
L_0114: ldarg.3
L_0115: callvirt BattleTech.BaseDescriptionDef get_Description()
L_011a: callvirt System.String get_Name()
L_011f: call System.String Format(System.String, System.Object)
L_0124: stloc.3
L_0125: br Label14
L_012a: Label10
L_012a: ldstr "{0}'s DamageReductionMultiplierMelee"
L_012f: ldarg.3
L_0130: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0135: callvirt System.String get_Name()
L_013a: call System.String Format(System.String, System.Object)
L_013f: stloc.3
L_0140: br Label15
L_0145: Label7
L_0145: ldloc.1
L_0146: ldarg.3
L_0147: ldfld System.Single missileDamageTakenMultiplier
L_014c: mul
L_014d: stloc.1
L_014e: ldstr "{0}'s DamageReductionMultiplierMissile"
L_0153: ldarg.3
L_0154: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0159: callvirt System.String get_Name()
L_015e: call System.String Format(System.String, System.Object)
L_0163: stloc.3
L_0164: Label9
L_0164: Label11
L_0164: Label12
L_0164: Label13
L_0164: Label14
L_0164: Label15
L_0164: ldarg.s 5
L_0166: brfalse Label16
L_016b: ldsfld HBS.Logging.ILog damageLogger
L_0170: callvirt Boolean get_IsLogEnabled()
L_0175: brfalse Label17
L_017a: ldloc.2
L_017b: ldloc.1
L_017c: call Boolean Approximately(Single, Single)
L_0181: brtrue Label18
L_0186: ldarg.0
L_0187: ldstr "!!! Damage Multiplier (part two) now {0} from {1}"
L_018c: ldloc.1
L_018d: box System.Single
L_0192: ldloc.3
L_0193: call System.String Format(System.String, System.Object, System.Object)
L_0198: call System.String BuildLogMessage(System.String)
L_019d: stloc.s 4 (System.String)
L_019f: ldsfld HBS.Logging.ILog damageLogger
L_01a4: ldloc.s 4 (System.String)
L_01a6: ldarg.0
L_01a7: call BattleTech.GameRepresentation get_GameRep()
L_01ac: callvirt Void Log(System.Object, UnityEngine.Object)
L_01b1: Label16
L_01b1: Label17
L_01b1: Label18
L_01b1: ldloc.0
L_01b2: ldloc.1
L_01b3: mul
L_01b4: Label19
L_01b4: stloc 5 (System.Single)
L_01b6: ldarg.0
L_01b7: ldarg 1
L_01bd: ldarg 2
L_01c3: ldarg 3
L_01c9: ldarg 4
L_01cf: ldarg 5
L_01d5: ldloca 5 (System.Single)
L_01d7: call Void Postfix(BattleTech.AbstractActor, Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean, Single ByRef)
L_01dc: ldloc 5 (System.Single)
L_01de: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarga 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldarga 1
L_0029: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_002e: brfalse Label0
L_0033: ldarg.1
L_0034: castclass BattleTech.AttackSequenceImpactMessage
L_0039: stloc.0
L_003a: ldloc.0
L_003b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0040: ldfld System.Int32 attackSequenceId
L_0045: ldarg.0
L_0046: ldfld System.Int32 id
L_004b: beq Label1
L_0050: br Label33
L_0055: Label1
L_0055: ldloc.0
L_0056: ldflda BattleTech.WeaponHitInfo hitInfo
L_005b: ldfld System.Int32 attackGroupIndex
L_0060: stloc.1
L_0061: ldloc.0
L_0062: ldflda BattleTech.WeaponHitInfo hitInfo
L_0067: ldfld System.Int32 attackWeaponIndex
L_006c: stloc.2
L_006d: ldloc.0
L_006e: ldfld System.Int32 hitIndex
L_0073: stloc.3
L_0074: ldarg.0
L_0075: ldloc.1
L_0076: ldloc.2
L_0077: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_007c: stloc.s 4 (BattleTech.Weapon)
L_007e: ldloc.0
L_007f: ldflda BattleTech.WeaponHitInfo hitInfo
L_0084: ldloc.3
L_0085: call Int32 ShotHitLocation(Int32)
L_008a: stloc.s 5 (System.Int32)
L_008c: ldloc.0
L_008d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0092: ldfld UnityEngine.Vector3[] hitPositions
L_0097: ldloc.3
L_0098: ldelem UnityEngine.Vector3
L_009d: stloc.s 6 (UnityEngine.Vector3)
L_009f: ldloc.0
L_00a0: ldfld System.Single hitDamage
L_00a5: stloc.s 7 (System.Single)
L_00a7: ldloc.s 7 (System.Single)
L_00a9: stloc.s 8 (System.Single)
L_00ab: ldarg.0
L_00ac: call BattleTech.AttackDirector get_Director()
L_00b1: callvirt BattleTech.CombatGameState get_Combat()
L_00b6: callvirt BattleTech.ToHit get_ToHit()
L_00bb: ldloc.0
L_00bc: ldflda BattleTech.WeaponHitInfo hitInfo
L_00c1: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00c6: ldloc.3
L_00c7: ldelem.i4
L_00c8: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00cd: stloc.s 9 (System.Single)
L_00cf: ldloc.s 7 (System.Single)
L_00d1: ldloc.s 9 (System.Single)
L_00d3: mul
L_00d4: stloc.s 8 (System.Single)
L_00d6: ldloc.0
L_00d7: ldflda BattleTech.WeaponHitInfo hitInfo
L_00dc: ldfld System.String[] secondaryTargetIds
L_00e1: ldloc.3
L_00e2: ldelem.ref
L_00e3: call Boolean IsNullOrEmpty(System.String)
L_00e8: ldc.i4.0
L_00e9: ceq
L_00eb: stloc.s 10 (System.Boolean)
L_00ed: ldnull
L_00ee: stloc.s 11 (BattleTech.ICombatant)
L_00f0: ldloc.s 10 (System.Boolean)
L_00f2: brfalse Label2
L_00f7: ldarg.0
L_00f8: call BattleTech.AttackDirector get_Director()
L_00fd: callvirt BattleTech.CombatGameState get_Combat()
L_0102: ldloc.0
L_0103: ldflda BattleTech.WeaponHitInfo hitInfo
L_0108: ldfld System.String[] secondaryTargetIds
L_010d: ldloc.3
L_010e: ldelem.ref
L_010f: ldc.i4.0
L_0110: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0115: stloc.s 11 (BattleTech.ICombatant)
L_0117: Label2
L_0117: ldarg.0
L_0118: ldfld BattleTech.ICombatant chosenTarget
L_011d: isinst BattleTech.AbstractActor
L_0122: stloc.s 12 (BattleTech.AbstractActor)
L_0124: ldloc.s 12 (BattleTech.AbstractActor)
L_0126: brfalse Label3
L_012b: ldarg.0
L_012c: ldfld BattleTech.AbstractActor attacker
L_0131: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0136: ldloc.s 12 (BattleTech.AbstractActor)
L_0138: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_013d: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_013f: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0141: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0146: stloc.s 15 (BattleTech.LineOfFireLevel)
L_0148: ldloc.s 12 (BattleTech.AbstractActor)
L_014a: ldloc.s 8 (System.Single)
L_014c: ldloc.s 4 (BattleTech.Weapon)
L_014e: callvirt BattleTech.WeaponCategory get_Category()
L_0153: ldloc.s 12 (BattleTech.AbstractActor)
L_0155: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_015a: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_015c: ldc.i4.1
L_015d: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0162: stloc.s 8 (System.Single)
L_0164: ldloc.s 12 (BattleTech.AbstractActor)
L_0166: ldloc.s 8 (System.Single)
L_0168: ldloc.s 4 (BattleTech.Weapon)
L_016a: callvirt BattleTech.WeaponCategory get_Category()
L_016f: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0174: stloc.s 8 (System.Single)
L_0176: Label3
L_0176: ldloc.s 8 (System.Single)
L_0178: ldc.r4 0
L_017d: bgt.un Label4
L_0182: ldsfld HBS.Logging.ILog attackLogger
L_0187: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_018c: ldloc.s 7 (System.Single)
L_018e: box System.Single
L_0193: ldloc.s 8 (System.Single)
L_0195: box System.Single
L_019a: call System.String Format(System.String, System.Object, System.Object)
L_019f: callvirt Void LogWarning(System.Object)
L_01a4: ldc.r4 0
L_01a9: stloc.s 8 (System.Single)
L_01ab: Label4
L_01ab: ldarg.0
L_01ac: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01b1: ldloc.0
L_01b2: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01b7: stloc.s 13 (System.Boolean)
L_01b9: ldloc.0
L_01ba: ldflda BattleTech.WeaponHitInfo hitInfo
L_01bf: ldloc.3
L_01c0: call Boolean DidShotHitChosenTarget(Int32)
L_01c5: stloc.s 14 (System.Boolean)
L_01c7: ldloc.0
L_01c8: ldfld System.Boolean hasPlayedImpact
L_01cd: brtrue Label5
L_01d2: ldsfld HBS.Logging.ILog logger
L_01d7: callvirt Boolean get_IsDebugEnabled()
L_01dc: brfalse Label6
L_01e1: ldsfld HBS.Logging.ILog logger
L_01e6: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_01eb: ldc.i4.5
L_01ec: newarr System.Object
L_01f1: dup
L_01f2: ldc.i4.0
L_01f3: ldarg.0
L_01f4: ldfld System.Int32 id
L_01f9: box System.Int32
L_01fe: stelem.ref
L_01ff: dup
L_0200: ldc.i4.1
L_0201: ldloc.1
L_0202: box System.Int32
L_0207: stelem.ref
L_0208: dup
L_0209: ldc.i4.2
L_020a: ldloc.2
L_020b: box System.Int32
L_0210: stelem.ref
L_0211: dup
L_0212: ldc.i4.3
L_0213: ldloc.3
L_0214: box System.Int32
L_0219: stelem.ref
L_021a: dup
L_021b: ldc.i4.4
L_021c: ldloc.s 13 (System.Boolean)
L_021e: box System.Boolean
L_0223: stelem.ref
L_0224: call System.String Format(System.String, System.Object[])
L_0229: callvirt Void LogDebug(System.Object)
L_022e: Label6
L_022e: ldloc.0
L_022f: ldc.i4.1
L_0230: stfld System.Boolean hasPlayedImpact
L_0235: ldarg.0
L_0236: ldfld BattleTech.ICombatant chosenTarget
L_023b: callvirt BattleTech.GameRepresentation get_GameRep()
L_0240: ldnull
L_0241: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0246: brfalse Label7
L_024b: ldloc.s 14 (System.Boolean)
L_024d: brfalse Label8
L_0252: ldarg.0
L_0253: ldfld BattleTech.ICombatant chosenTarget
L_0258: callvirt BattleTech.GameRepresentation get_GameRep()
L_025d: ldloc.0
L_025e: ldfld BattleTech.WeaponHitInfo hitInfo
L_0263: ldloc.3
L_0264: ldloc.s 4 (BattleTech.Weapon)
L_0266: ldarg.0
L_0267: ldfld BattleTech.MeleeAttackType meleeAttackType
L_026c: ldarg.0
L_026d: ldfld System.Single cumulativeDamage
L_0272: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0277: ldloc.s 6 (UnityEngine.Vector3)
L_0279: stloc.s 17 (UnityEngine.Vector3)
L_027b: ldarg.0
L_027c: ldfld BattleTech.ICombatant chosenTarget
L_0281: ldloc.s 5 (System.Int32)
L_0283: callvirt Single ArmorForLocation(Int32)
L_0288: ldloc.s 8 (System.Single)
L_028a: bge.un Label9
L_028f: ldloc.0
L_0290: ldflda BattleTech.WeaponHitInfo hitInfo
L_0295: ldfld System.String attackerId
L_029a: ldarg.0
L_029b: ldfld BattleTech.ICombatant chosenTarget
L_02a0: callvirt System.String get_GUID()
L_02a5: ldstr "{0}"
L_02aa: ldc.i4.1
L_02ab: newarr System.Object
L_02b0: dup
L_02b1: ldc.i4.0
L_02b2: ldc.r4 1
L_02b7: ldloc.s 8 (System.Single)
L_02b9: call Single Max(Single, Single)
L_02be: conv.i4
L_02bf: box System.Int32
L_02c4: stelem.ref
L_02c5: newobj Void .ctor(String, Object[])
L_02ca: ldarg.0
L_02cb: call BattleTech.AttackDirector get_Director()
L_02d0: callvirt BattleTech.CombatGameState get_Combat()
L_02d5: callvirt BattleTech.CombatGameConstants get_Constants()
L_02da: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02df: ldfld System.Single floatieSizeMedium
L_02e4: ldc.i4.8
L_02e5: ldloc.s 17 (UnityEngine.Vector3)
L_02e7: ldfld System.Single x
L_02ec: ldloc.s 17 (UnityEngine.Vector3)
L_02ee: ldfld System.Single y
L_02f3: ldloc.s 17 (UnityEngine.Vector3)
L_02f5: ldfld System.Single z
L_02fa: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_02ff: stloc.s 18 (BattleTech.FloatieMessage)
L_0301: ldarg.0
L_0302: call BattleTech.AttackDirector get_Director()
L_0307: callvirt BattleTech.CombatGameState get_Combat()
L_030c: callvirt MessageCenter get_MessageCenter()
L_0311: ldloc.s 18 (BattleTech.FloatieMessage)
L_0313: callvirt Void PublishMessage(MessageCenterMessage)
L_0318: br Label10
L_031d: Label9
L_031d: ldloc.0
L_031e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0323: ldfld System.String attackerId
L_0328: ldarg.0
L_0329: ldfld BattleTech.ICombatant chosenTarget
L_032e: callvirt System.String get_GUID()
L_0333: ldstr "{0}"
L_0338: ldc.i4.1
L_0339: newarr System.Object
L_033e: dup
L_033f: ldc.i4.0
L_0340: ldc.r4 1
L_0345: ldloc.s 8 (System.Single)
L_0347: call Single Max(Single, Single)
L_034c: conv.i4
L_034d: box System.Int32
L_0352: stelem.ref
L_0353: newobj Void .ctor(String, Object[])
L_0358: ldarg.0
L_0359: call BattleTech.AttackDirector get_Director()
L_035e: callvirt BattleTech.CombatGameState get_Combat()
L_0363: callvirt BattleTech.CombatGameConstants get_Constants()
L_0368: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_036d: ldfld System.Single floatieSizeMedium
L_0372: ldc.i4.7
L_0373: ldloc.s 17 (UnityEngine.Vector3)
L_0375: ldfld System.Single x
L_037a: ldloc.s 17 (UnityEngine.Vector3)
L_037c: ldfld System.Single y
L_0381: ldloc.s 17 (UnityEngine.Vector3)
L_0383: ldfld System.Single z
L_0388: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_038d: stloc.s 19 (BattleTech.FloatieMessage)
L_038f: ldarg.0
L_0390: call BattleTech.AttackDirector get_Director()
L_0395: callvirt BattleTech.CombatGameState get_Combat()
L_039a: callvirt MessageCenter get_MessageCenter()
L_039f: ldloc.s 19 (BattleTech.FloatieMessage)
L_03a1: callvirt Void PublishMessage(MessageCenterMessage)
L_03a6: br Label11
L_03ab: Label8
L_03ab: ldarg.0
L_03ac: ldfld BattleTech.ICombatant chosenTarget
L_03b1: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03b6: call UnityEngine.Vector3 get_insideUnitSphere()
L_03bb: ldc.r4 5
L_03c0: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03c5: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03ca: stloc.s 20 (UnityEngine.Vector3)
L_03cc: ldloc.0
L_03cd: ldflda BattleTech.WeaponHitInfo hitInfo
L_03d2: ldfld System.Boolean[] dodgeSuccesses
L_03d7: ldloc.3
L_03d8: ldelem.u1
L_03d9: brfalse Label12
L_03de: ldarg.0
L_03df: ldfld BattleTech.ICombatant chosenTarget
L_03e4: callvirt BattleTech.GameRepresentation get_GameRep()
L_03e9: ldloc.0
L_03ea: ldfld BattleTech.WeaponHitInfo hitInfo
L_03ef: ldloc.3
L_03f0: ldloc.s 4 (BattleTech.Weapon)
L_03f2: ldarg.0
L_03f3: ldfld BattleTech.MeleeAttackType meleeAttackType
L_03f8: ldarg.0
L_03f9: ldfld System.Single cumulativeDamage
L_03fe: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0403: ldloc.0
L_0404: ldflda BattleTech.WeaponHitInfo hitInfo
L_0409: ldfld System.String attackerId
L_040e: ldarg.0
L_040f: ldfld BattleTech.ICombatant chosenTarget
L_0414: callvirt System.String get_GUID()
L_0419: ldstr "EVADE"
L_041e: call System.Object[] Empty[Object]()
L_0423: newobj Void .ctor(String, Object[])
L_0428: ldarg.0
L_0429: call BattleTech.AttackDirector get_Director()
L_042e: callvirt BattleTech.CombatGameState get_Combat()
L_0433: callvirt BattleTech.CombatGameConstants get_Constants()
L_0438: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_043d: ldfld System.Single floatieSizeMedium
L_0442: ldc.i4.6
L_0443: ldloc.s 20 (UnityEngine.Vector3)
L_0445: ldfld System.Single x
L_044a: ldloc.s 20 (UnityEngine.Vector3)
L_044c: ldfld System.Single y
L_0451: ldloc.s 20 (UnityEngine.Vector3)
L_0453: ldfld System.Single z
L_0458: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_045d: stloc.s 21 (BattleTech.FloatieMessage)
L_045f: ldarg.0
L_0460: call BattleTech.AttackDirector get_Director()
L_0465: callvirt BattleTech.CombatGameState get_Combat()
L_046a: callvirt MessageCenter get_MessageCenter()
L_046f: ldloc.s 21 (BattleTech.FloatieMessage)
L_0471: callvirt Void PublishMessage(MessageCenterMessage)
L_0476: br Label13
L_047b: Label12
L_047b: ldarg.0
L_047c: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0481: brfalse Label14
L_0486: ldarg.0
L_0487: ldfld BattleTech.ICombatant chosenTarget
L_048c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0491: ldloc.0
L_0492: ldfld BattleTech.WeaponHitInfo hitInfo
L_0497: ldloc.3
L_0498: ldloc.s 4 (BattleTech.Weapon)
L_049a: ldarg.0
L_049b: ldfld BattleTech.MeleeAttackType meleeAttackType
L_04a0: ldarg.0
L_04a1: ldfld System.Single cumulativeDamage
L_04a6: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_04ab: ldloc.0
L_04ac: ldflda BattleTech.WeaponHitInfo hitInfo
L_04b1: ldfld System.String attackerId
L_04b6: ldloc.0
L_04b7: ldflda BattleTech.WeaponHitInfo hitInfo
L_04bc: ldfld System.String targetId
L_04c1: ldstr "MISS!"
L_04c6: call System.Object[] Empty[Object]()
L_04cb: newobj Void .ctor(String, Object[])
L_04d0: ldarg.0
L_04d1: call BattleTech.AttackDirector get_Director()
L_04d6: callvirt BattleTech.CombatGameState get_Combat()
L_04db: callvirt BattleTech.CombatGameConstants get_Constants()
L_04e0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04e5: ldfld System.Single floatieSizeMedium
L_04ea: ldc.i4.5
L_04eb: ldloc.s 20 (UnityEngine.Vector3)
L_04ed: ldfld System.Single x
L_04f2: ldloc.s 20 (UnityEngine.Vector3)
L_04f4: ldfld System.Single y
L_04f9: ldloc.s 20 (UnityEngine.Vector3)
L_04fb: ldfld System.Single z
L_0500: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0505: stloc.s 22 (BattleTech.FloatieMessage)
L_0507: ldarg.0
L_0508: call BattleTech.AttackDirector get_Director()
L_050d: callvirt BattleTech.CombatGameState get_Combat()
L_0512: callvirt MessageCenter get_MessageCenter()
L_0517: ldloc.s 22 (BattleTech.FloatieMessage)
L_0519: callvirt Void PublishMessage(MessageCenterMessage)
L_051e: br Label15
L_0523: Label14
L_0523: ldloc.s 4 (BattleTech.Weapon)
L_0525: callvirt Int32 get_ShotsWhenFired()
L_052a: ldc.i4.1
L_052b: bgt Label16
L_0530: ldc.i4.5
L_0531: br Label17
L_0536: Label16
L_0536: ldc.i4.4
L_0537: Label17
L_0537: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0539: ldloc.0
L_053a: ldflda BattleTech.WeaponHitInfo hitInfo
L_053f: ldfld System.String attackerId
L_0544: ldloc.0
L_0545: ldflda BattleTech.WeaponHitInfo hitInfo
L_054a: ldfld System.String targetId
L_054f: ldstr "MISS!"
L_0554: call System.Object[] Empty[Object]()
L_0559: newobj Void .ctor(String, Object[])
L_055e: ldarg.0
L_055f: call BattleTech.AttackDirector get_Director()
L_0564: callvirt BattleTech.CombatGameState get_Combat()
L_0569: callvirt BattleTech.CombatGameConstants get_Constants()
L_056e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0573: ldfld System.Single floatieSizeMedium
L_0578: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_057a: ldloc.s 20 (UnityEngine.Vector3)
L_057c: ldfld System.Single x
L_0581: ldloc.s 20 (UnityEngine.Vector3)
L_0583: ldfld System.Single y
L_0588: ldloc.s 20 (UnityEngine.Vector3)
L_058a: ldfld System.Single z
L_058f: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0594: stloc.s 24 (BattleTech.FloatieMessage)
L_0596: ldarg.0
L_0597: call BattleTech.AttackDirector get_Director()
L_059c: callvirt BattleTech.CombatGameState get_Combat()
L_05a1: callvirt MessageCenter get_MessageCenter()
L_05a6: ldloc.s 24 (BattleTech.FloatieMessage)
L_05a8: callvirt Void PublishMessage(MessageCenterMessage)
L_05ad: Label13
L_05ad: Label15
L_05ad: ldloc.s 10 (System.Boolean)
L_05af: brfalse Label18
L_05b4: ldloc.0
L_05b5: ldflda BattleTech.WeaponHitInfo hitInfo
L_05ba: ldfld System.String attackerId
L_05bf: ldloc.0
L_05c0: ldflda BattleTech.WeaponHitInfo hitInfo
L_05c5: ldfld System.String targetId
L_05ca: ldstr "STRAY SHOT"
L_05cf: call System.Object[] Empty[Object]()
L_05d4: newobj Void .ctor(String, Object[])
L_05d9: ldarg.0
L_05da: call BattleTech.AttackDirector get_Director()
L_05df: callvirt BattleTech.CombatGameState get_Combat()
L_05e4: callvirt BattleTech.CombatGameConstants get_Constants()
L_05e9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_05ee: ldfld System.Single floatieSizeLarge
L_05f3: ldc.i4.5
L_05f4: ldloc.s 6 (UnityEngine.Vector3)
L_05f6: ldfld System.Single x
L_05fb: ldloc.s 6 (UnityEngine.Vector3)
L_05fd: ldfld System.Single y
L_0602: ldloc.s 6 (UnityEngine.Vector3)
L_0604: ldfld System.Single z
L_0609: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_060e: stloc.s 25 (BattleTech.FloatieMessage)
L_0610: ldarg.0
L_0611: call BattleTech.AttackDirector get_Director()
L_0616: callvirt BattleTech.CombatGameState get_Combat()
L_061b: callvirt MessageCenter get_MessageCenter()
L_0620: ldloc.s 25 (BattleTech.FloatieMessage)
L_0622: callvirt Void PublishMessage(MessageCenterMessage)
L_0627: ldloc.s 11 (BattleTech.ICombatant)
L_0629: brfalse Label19
L_062e: ldloc.s 11 (BattleTech.ICombatant)
L_0630: callvirt BattleTech.GameRepresentation get_GameRep()
L_0635: ldnull
L_0636: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_063b: brfalse Label20
L_0640: ldloc.s 11 (BattleTech.ICombatant)
L_0642: callvirt BattleTech.GameRepresentation get_GameRep()
L_0647: ldloc.0
L_0648: ldfld BattleTech.WeaponHitInfo hitInfo
L_064d: ldloc.3
L_064e: ldloc.s 4 (BattleTech.Weapon)
L_0650: ldarg.0
L_0651: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0656: ldarg.0
L_0657: ldfld System.Single cumulativeDamage
L_065c: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0661: Label20
L_0661: ldloc.s 11 (BattleTech.ICombatant)
L_0663: ldloc.s 5 (System.Int32)
L_0665: callvirt Single ArmorForLocation(Int32)
L_066a: ldloc.s 8 (System.Single)
L_066c: bge.un Label21
L_0671: ldloc.0
L_0672: ldflda BattleTech.WeaponHitInfo hitInfo
L_0677: ldfld System.String attackerId
L_067c: ldloc.s 11 (BattleTech.ICombatant)
L_067e: callvirt System.String get_GUID()
L_0683: ldstr "{0}"
L_0688: ldc.i4.1
L_0689: newarr System.Object
L_068e: dup
L_068f: ldc.i4.0
L_0690: ldc.r4 1
L_0695: ldloc.s 8 (System.Single)
L_0697: call Single Max(Single, Single)
L_069c: conv.i4
L_069d: box System.Int32
L_06a2: stelem.ref
L_06a3: newobj Void .ctor(String, Object[])
L_06a8: ldarg.0
L_06a9: call BattleTech.AttackDirector get_Director()
L_06ae: callvirt BattleTech.CombatGameState get_Combat()
L_06b3: callvirt BattleTech.CombatGameConstants get_Constants()
L_06b8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06bd: ldfld System.Single floatieSizeMedium
L_06c2: ldc.i4.8
L_06c3: ldloc.s 6 (UnityEngine.Vector3)
L_06c5: ldfld System.Single x
L_06ca: ldloc.s 6 (UnityEngine.Vector3)
L_06cc: ldfld System.Single y
L_06d1: ldloc.s 6 (UnityEngine.Vector3)
L_06d3: ldfld System.Single z
L_06d8: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06dd: stloc.s 26 (BattleTech.FloatieMessage)
L_06df: ldarg.0
L_06e0: call BattleTech.AttackDirector get_Director()
L_06e5: callvirt BattleTech.CombatGameState get_Combat()
L_06ea: callvirt MessageCenter get_MessageCenter()
L_06ef: ldloc.s 26 (BattleTech.FloatieMessage)
L_06f1: callvirt Void PublishMessage(MessageCenterMessage)
L_06f6: br Label22
L_06fb: Label21
L_06fb: ldloc.0
L_06fc: ldflda BattleTech.WeaponHitInfo hitInfo
L_0701: ldfld System.String attackerId
L_0706: ldloc.s 11 (BattleTech.ICombatant)
L_0708: callvirt System.String get_GUID()
L_070d: ldstr "{0}"
L_0712: ldc.i4.1
L_0713: newarr System.Object
L_0718: dup
L_0719: ldc.i4.0
L_071a: ldc.r4 1
L_071f: ldloc.s 8 (System.Single)
L_0721: call Single Max(Single, Single)
L_0726: conv.i4
L_0727: box System.Int32
L_072c: stelem.ref
L_072d: newobj Void .ctor(String, Object[])
L_0732: ldarg.0
L_0733: call BattleTech.AttackDirector get_Director()
L_0738: callvirt BattleTech.CombatGameState get_Combat()
L_073d: callvirt BattleTech.CombatGameConstants get_Constants()
L_0742: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0747: ldfld System.Single floatieSizeMedium
L_074c: ldc.i4.7
L_074d: ldloc.s 6 (UnityEngine.Vector3)
L_074f: ldfld System.Single x
L_0754: ldloc.s 6 (UnityEngine.Vector3)
L_0756: ldfld System.Single y
L_075b: ldloc.s 6 (UnityEngine.Vector3)
L_075d: ldfld System.Single z
L_0762: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0767: stloc.s 27 (BattleTech.FloatieMessage)
L_0769: ldarg.0
L_076a: call BattleTech.AttackDirector get_Director()
L_076f: callvirt BattleTech.CombatGameState get_Combat()
L_0774: callvirt MessageCenter get_MessageCenter()
L_0779: ldloc.s 27 (BattleTech.FloatieMessage)
L_077b: callvirt Void PublishMessage(MessageCenterMessage)
L_0780: Label7
L_0780: Label10
L_0780: Label11
L_0780: Label18
L_0780: Label19
L_0780: Label22
L_0780: ldloc.s 4 (BattleTech.Weapon)
L_0782: callvirt BattleTech.WeaponType get_Type()
L_0787: ldc.i4.3
L_0788: beq Label23
L_078d: ldloc.s 4 (BattleTech.Weapon)
L_078f: callvirt BattleTech.WeaponType get_Type()
L_0794: ldc.i4.7
L_0795: beq Label24
L_079a: call BattleTech.CameraControl get_Instance()
L_079f: ldloc.s 8 (System.Single)
L_07a1: ldarg.0
L_07a2: call BattleTech.AttackDirector get_Director()
L_07a7: callvirt BattleTech.CombatGameState get_Combat()
L_07ac: callvirt BattleTech.CombatGameConstants get_Constants()
L_07b1: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07b6: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07bb: mul
L_07bc: ldarg.0
L_07bd: call BattleTech.AttackDirector get_Director()
L_07c2: callvirt BattleTech.CombatGameState get_Combat()
L_07c7: callvirt BattleTech.CombatGameConstants get_Constants()
L_07cc: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07d1: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07d6: add
L_07d7: ldc.r4 1
L_07dc: ldloc.s 6 (UnityEngine.Vector3)
L_07de: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07e3: Label5
L_07e3: Label23
L_07e3: Label24
L_07e3: ldloc.s 13 (System.Boolean)
L_07e5: brtrue Label25
L_07ea: ldarg.0
L_07eb: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_07f0: ldloc.0
L_07f1: callvirt Void StoreMessage(MessageCenterMessage)
L_07f6: br Label34
L_07fb: Label25
L_07fb: ldsfld HBS.Logging.ILog logger
L_0800: callvirt Boolean get_IsLogEnabled()
L_0805: brfalse Label26
L_080a: ldsfld HBS.Logging.ILog logger
L_080f: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_0814: ldc.i4.4
L_0815: newarr System.Object
L_081a: dup
L_081b: ldc.i4.0
L_081c: ldarg.0
L_081d: ldfld System.Int32 id
L_0822: box System.Int32
L_0827: stelem.ref
L_0828: dup
L_0829: ldc.i4.1
L_082a: ldloc.1
L_082b: box System.Int32
L_0830: stelem.ref
L_0831: dup
L_0832: ldc.i4.2
L_0833: ldloc.2
L_0834: box System.Int32
L_0839: stelem.ref
L_083a: dup
L_083b: ldc.i4.3
L_083c: ldloc.3
L_083d: box System.Int32
L_0842: stelem.ref
L_0843: call System.String Format(System.String, System.Object[])
L_0848: callvirt Void Log(System.Object)
L_084d: ldsfld HBS.Logging.ILog logger
L_0852: callvirt Boolean get_IsDebugEnabled()
L_0857: brfalse Label27
L_085c: ldsfld HBS.Logging.ILog logger
L_0861: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_0866: ldloc.s 4 (BattleTech.Weapon)
L_0868: callvirt System.String get_Name()
L_086d: ldarg.0
L_086e: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0873: constrained. BattleTech.MeleeAttackType
L_0879: callvirt System.String ToString()
L_087e: ldloca.s 5 (System.Int32)
L_0880: call System.String ToString()
L_0885: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_088a: callvirt Void LogDebug(System.Object)
L_088f: Label26
L_088f: Label27
L_088f: ldloc.s 14 (System.Boolean)
L_0891: brfalse Label28
L_0896: ldarg.0
L_0897: ldarg.0
L_0898: ldfld System.Single cumulativeDamage
L_089d: ldloc.s 8 (System.Single)
L_089f: add
L_08a0: stfld System.Single cumulativeDamage
L_08a5: ldarg.0
L_08a6: ldfld BattleTech.ICombatant chosenTarget
L_08ab: ldloc.0
L_08ac: ldfld BattleTech.WeaponHitInfo hitInfo
L_08b1: ldloc.s 5 (System.Int32)
L_08b3: ldloc.s 4 (BattleTech.Weapon)
L_08b5: ldloc.s 8 (System.Single)
L_08b7: ldloc.3
L_08b8: ldc.i4.s 12
L_08ba: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08bf: ldarg.0
L_08c0: ldfld BattleTech.ICombatant chosenTarget
L_08c5: ldarg.0
L_08c6: ldfld BattleTech.AbstractActor attacker
L_08cb: callvirt System.String get_GUID()
L_08d0: callvirt Void HandleDeath(System.String)
L_08d5: br Label29
L_08da: Label28
L_08da: ldloc.s 10 (System.Boolean)
L_08dc: brfalse Label30
L_08e1: ldloc.s 11 (BattleTech.ICombatant)
L_08e3: brfalse Label31
L_08e8: ldloc.s 7 (System.Single)
L_08ea: ldloc.s 9 (System.Single)
L_08ec: mul
L_08ed: stloc.s 8 (System.Single)
L_08ef: ldloc.s 11 (BattleTech.ICombatant)
L_08f1: isinst BattleTech.AbstractActor
L_08f6: stloc.s 28 (BattleTech.AbstractActor)
L_08f8: ldloc.s 28 (BattleTech.AbstractActor)
L_08fa: brfalse Label32
L_08ff: ldarg.0
L_0900: ldfld BattleTech.AbstractActor attacker
L_0905: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_090a: ldloc.s 28 (BattleTech.AbstractActor)
L_090c: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0911: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0913: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0915: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_091a: stloc.s 29 (BattleTech.LineOfFireLevel)
L_091c: ldloc.s 28 (BattleTech.AbstractActor)
L_091e: ldloc.s 8 (System.Single)
L_0920: ldloc.s 4 (BattleTech.Weapon)
L_0922: callvirt BattleTech.WeaponCategory get_Category()
L_0927: ldloc.s 28 (BattleTech.AbstractActor)
L_0929: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_092e: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_0930: ldc.i4.1
L_0931: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0936: stloc.s 8 (System.Single)
L_0938: ldloc.s 28 (BattleTech.AbstractActor)
L_093a: ldloc.s 8 (System.Single)
L_093c: ldloc.s 4 (BattleTech.Weapon)
L_093e: callvirt BattleTech.WeaponCategory get_Category()
L_0943: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_0948: stloc.s 8 (System.Single)
L_094a: Label32
L_094a: ldloc.s 11 (BattleTech.ICombatant)
L_094c: ldloc.0
L_094d: ldfld BattleTech.WeaponHitInfo hitInfo
L_0952: ldloc.0
L_0953: ldflda BattleTech.WeaponHitInfo hitInfo
L_0958: ldloc.3
L_0959: call Int32 ShotHitLocation(Int32)
L_095e: ldloc.s 4 (BattleTech.Weapon)
L_0960: ldloc.s 8 (System.Single)
L_0962: ldloc.3
L_0963: ldc.i4.s 12
L_0965: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_096a: ldloc.s 11 (BattleTech.ICombatant)
L_096c: ldarg.0
L_096d: ldfld BattleTech.AbstractActor attacker
L_0972: callvirt System.String get_GUID()
L_0977: callvirt Void HandleDeath(System.String)
L_097c: Label29
L_097c: Label30
L_097c: Label31
L_097c: ldarg.0
L_097d: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0982: ldloc.0
L_0983: callvirt Void MessageComplete(MessageCenterMessage)
L_0988: Label33
L_0988: Label34
L_0988: Label0
L_0988: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void setState(MeleeSequenceState)
L_0000: Local var 0: BattleTech.Mech
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(BattleTech.MechMeleeSequence, System.IConvertible ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechMeleeSequence+MeleeSequenceState state
L_0017: ldarg.1
L_0018: bne.un Label1
L_001d: br Label9
L_0022: Label1
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: stfld BattleTech.MechMeleeSequence+MeleeSequenceState state
L_0029: ldarg.1
L_002a: ldc.i4.1
L_002b: sub
L_002c: switch Labels2,3,4,5
L_0041: br Label10
L_0046: Label2
L_0046: ldarg.0
L_0047: call Void FireWeapons()
L_004c: br Label11
L_0051: Label3
L_0051: ldarg.0
L_0052: call Void ExecuteMove()
L_0057: br Label12
L_005c: Label4
L_005c: ldarg.0
L_005d: call Void ExecuteMelee()
L_0062: br Label13
L_0067: Label5
L_0067: ldarg.0
L_0068: call BattleTech.ICombatant get_MeleeTarget()
L_006d: isinst BattleTech.Mech
L_0072: stloc.0
L_0073: ldloc.0
L_0074: brfalse Label6
L_0079: ldloc.0
L_007a: ldarg.0
L_007b: call BattleTech.Mech get_OwningMech()
L_0080: callvirt Void OnMeleed(BattleTech.Mech)
L_0085: ldloc.0
L_0086: callvirt BattleTech.MechRepresentation get_GameRep()
L_008b: ldnull
L_008c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0091: brfalse Label7
L_0096: ldloc.0
L_0097: callvirt BattleTech.MechRepresentation get_GameRep()
L_009c: ldc.i4.1
L_009d: callvirt Void SetMeleeIdleState(Boolean)
L_00a2: Label6
L_00a2: Label7
L_00a2: ldarg.0
L_00a3: call BattleTech.Mech get_OwningMech()
L_00a8: callvirt BattleTech.MechRepresentation get_GameRep()
L_00ad: ldnull
L_00ae: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00b3: brfalse Label8
L_00b8: ldarg.0
L_00b9: call BattleTech.Mech get_OwningMech()
L_00be: callvirt BattleTech.MechRepresentation get_GameRep()
L_00c3: ldc.i4.1
L_00c4: callvirt Void SetMeleeIdleState(Boolean)
L_00c9: ldarg.0
L_00ca: call BattleTech.Mech get_OwningMech()
L_00cf: callvirt BattleTech.MechRepresentation get_GameRep()
L_00d4: ldc.r4 50
L_00d9: ldc.r4 0
L_00de: ldc.r4 2
L_00e3: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_00e8: Label8
L_00e8: ldarg.0
L_00e9: ldc.i4.1
L_00ea: call Void set_OrdersAreComplete(Boolean)
L_00ef: Label9
L_00ef: Label10
L_00ef: Label11
L_00ef: Label12
L_00ef: Label13
L_00ef: Label0
L_00ef: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void BuildMeleeDirectorSequence()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldarg.0
L_000d: call BattleTech.Mech get_OwningMech()
L_0012: ldarg.0
L_0013: call BattleTech.ICombatant get_MeleeTarget()
L_0018: ldarg.0
L_0019: ldfld BattleTech.ActorMovementSequence moveSequence
L_001e: callvirt UnityEngine.Vector3 get_FinalPos()
L_0023: ldarg.0
L_0024: ldfld BattleTech.ActorMovementSequence moveSequence
L_0029: callvirt UnityEngine.Vector3 get_FinalHeading()
L_002e: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0033: newobj Void .ctor()
L_0038: dup
L_0039: ldarg.0
L_003a: call BattleTech.Mech get_OwningMech()
L_003f: ldfld BattleTech.Weapon MeleeWeapon
L_0044: callvirt Void Add(BattleTech.Weapon)
L_0049: ldarg.0
L_004a: call Boolean get_MoveIsCharge()
L_004f: brtrue Label1
L_0054: ldarg.0
L_0055: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_005a: br Label2
L_005f: Label1
L_005f: ldc.i4.5
L_0060: Label2
L_0060: ldc.i4.0
L_0061: ldc.i4.m1
L_0062: newobj Void .ctor(AbstractActor, ICombatant, Vector3, Quaternion, List`1, MeleeAttackType, Int32, Int32)
L_0067: stfld BattleTech.AttackStackSequence meleeSequence
L_006c: ldarg.0
L_006d: ldfld BattleTech.AttackStackSequence meleeSequence
L_0072: ldc.i4.0
L_0073: stfld System.Boolean willConsumeFiring
L_0078: ldarg.0
L_0079: ldfld BattleTech.AttackStackSequence meleeSequence
L_007e: ldc.i4.1
L_007f: stfld System.Boolean hasOwningSequence
L_0084: ldarg.0
L_0085: ldfld BattleTech.AttackStackSequence meleeSequence
L_008a: ldarg.0
L_008b: call Int32 get_RootSequenceGUID()
L_0090: callvirt Void set_RootSequenceGUID(Int32)
L_0095: ldarg.0
L_0096: call BattleTech.CameraSequence get_cameraSequence()
L_009b: brfalse Label3
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.AttackStackSequence meleeSequence
L_00a6: ldarg.0
L_00a7: call BattleTech.CameraSequence get_cameraSequence()
L_00ac: ldarg.0
L_00ad: call Int32 get_MessageIndex()
L_00b2: callvirt Void SetCamera(BattleTech.CameraSequence, Int32)
L_00b7: Label3
L_00b7: Label0
L_00b7: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void ExecuteMelee()
L_0000: Local var 0: System.Boolean
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "MeleeSequence ExecuteMelee: attack is charge? "
L_000a: ldarg.0
L_000b: call Boolean get_MoveIsCharge()
L_0010: stloc.0
L_0011: ldloca.s 0 (System.Boolean)
L_0013: call System.String ToString()
L_0018: call System.String Concat(System.String, System.String)
L_001d: callvirt Void Log(System.Object)
L_0022: ldarg.0
L_0023: call Void BuildMeleeDirectorSequence()
L_0028: ldarg.0
L_0029: call Void BuildWeaponDirectorSequence()
L_002e: ldarg.0
L_002f: call BattleTech.Mech get_OwningMech()
L_0034: callvirt BattleTech.MechRepresentation get_GameRep()
L_0039: ldnull
L_003a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_003f: brfalse Label1
L_0044: ldarg.0
L_0045: call BattleTech.Mech get_OwningMech()
L_004a: callvirt BattleTech.MechRepresentation get_GameRep()
L_004f: ldc.i4.1
L_0050: ldc.r4 0.5
L_0055: ldarg.0
L_0056: call Int32 get_RootSequenceGUID()
L_005b: ldarg.0
L_005c: call Int32 get_SequenceGUID()
L_0061: ldnull
L_0062: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_0067: Label1
L_0067: ldarg.0
L_0068: call BattleTech.Mech get_OwningMech()
L_006d: callvirt BattleTech.MechRepresentation get_GameRep()
L_0072: ldnull
L_0073: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0078: brfalse Label2
L_007d: ldarg.0
L_007e: call BattleTech.Mech get_OwningMech()
L_0083: callvirt BattleTech.MechRepresentation get_GameRep()
L_0088: ldc.r4 0
L_008d: ldc.r4 50
L_0092: ldc.r4 1
L_0097: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_009c: Label2
L_009c: ldarg.0
L_009d: call BattleTech.CombatGameState get_Combat()
L_00a2: callvirt MessageCenter get_MessageCenter()
L_00a7: ldc.i4.s 40
L_00a9: ldarg.0
L_00aa: ldftn Void OnMeleeComplete(MessageCenterMessage)
L_00b0: newobj Void .ctor(Object, IntPtr)
L_00b5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ba: ldarg.0
L_00bb: call BattleTech.CombatGameState get_Combat()
L_00c0: callvirt MessageCenter get_MessageCenter()
L_00c5: ldc.i4.s 33
L_00c7: ldarg.0
L_00c8: ldftn Void OnMeleeReady(MessageCenterMessage)
L_00ce: newobj Void .ctor(Object, IntPtr)
L_00d3: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00d8: ldarg.0
L_00d9: call BattleTech.CombatGameState get_Combat()
L_00de: callvirt MessageCenter get_MessageCenter()
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.AttackStackSequence meleeSequence
L_00e9: newobj Void .ctor(IStackSequence)
L_00ee: callvirt Void PublishMessage(MessageCenterMessage)
L_00f3: ldarg.0
L_00f4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00f9: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "MeleeSequence CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: call BattleTech.Mech get_OwningMech()
L_0020: callvirt BattleTech.MechRepresentation get_GameRep()
L_0025: ldnull
L_0026: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_002b: pop
L_002c: ldarg.0
L_002d: call BattleTech.ICombatant get_MeleeTarget()
L_0032: ldarg.0
L_0033: ldfld BattleTech.AbstractActor owningActor
L_0038: callvirt System.String get_GUID()
L_003d: callvirt Void HandleDeath(System.String)
L_0042: ldarg.0
L_0043: call BattleTech.ICombatant get_MeleeTarget()
L_0048: callvirt Boolean get_IsDead()
L_004d: brtrue Label1
L_0052: ldarg.0
L_0053: call BattleTech.ICombatant get_MeleeTarget()
L_0058: isinst BattleTech.AbstractActor
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label2
L_0064: ldloc.0
L_0065: callvirt Boolean CheckForInstability()
L_006a: pop
L_006b: ldloc.0
L_006c: ldarg.0
L_006d: call Int32 get_RootSequenceGUID()
L_0072: ldarg.0
L_0073: ldfld BattleTech.AbstractActor owningActor
L_0078: callvirt System.String get_GUID()
L_007d: call UnityEngine.Vector2 get_one()
L_0082: ldnull
L_0083: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0088: Label1
L_0088: Label2
L_0088: Label0
L_0088: ldarg.0
L_0089: call Void Postfix(BattleTech.MechMeleeSequence)
L_008e: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void GenerateMeleePath()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_MoveIsCharge(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.Mech get_OwningMech()
L_000d: callvirt BattleTech.Pathing get_Pathing()
L_0012: callvirt Void SetWalking()
L_0017: ldarg.0
L_0018: call BattleTech.Mech get_OwningMech()
L_001d: callvirt BattleTech.Pathing get_Pathing()
L_0022: ldarg.0
L_0023: call BattleTech.ICombatant get_MeleeTarget()
L_0028: isinst BattleTech.AbstractActor
L_002d: callvirt Void SetMeleeTarget(BattleTech.AbstractActor)
L_0032: ldarg.0
L_0033: call BattleTech.Mech get_OwningMech()
L_0038: callvirt BattleTech.Pathing get_Pathing()
L_003d: ldarg.0
L_003e: call UnityEngine.Vector3 get_DesiredMeleePosition()
L_0043: callvirt Void SelectMeleeDest(UnityEngine.Vector3)
L_0048: ldarg.0
L_0049: call BattleTech.Mech get_OwningMech()
L_004e: callvirt BattleTech.Pathing get_Pathing()
L_0053: ldarg.0
L_0054: call BattleTech.ICombatant get_MeleeTarget()
L_0059: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_005e: ldc.i4.0
L_005f: callvirt Void Update(UnityEngine.Vector3, Boolean)
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: call BattleTech.Mech get_OwningMech()
L_006b: newobj Void .ctor(AbstractActor)
L_0070: stfld BattleTech.ActorMovementSequence moveSequence
L_0075: ldarg.0
L_0076: ldfld BattleTech.ActorMovementSequence moveSequence
L_007b: ldarg.0
L_007c: call Boolean get_MoveIsCharge()
L_0081: stfld System.Boolean IgnoreEndSmoothing
L_0086: ldarg.0
L_0087: ldfld BattleTech.ActorMovementSequence moveSequence
L_008c: ldarg.0
L_008d: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0092: stfld BattleTech.MeleeAttackType meleeType
L_0097: ldarg.0
L_0098: ldfld BattleTech.ActorMovementSequence moveSequence
L_009d: ldc.i4.1
L_009e: stfld System.Boolean hasOwningSequence
L_00a3: ldarg.0
L_00a4: call BattleTech.Mech get_OwningMech()
L_00a9: callvirt BattleTech.Pathing get_Pathing()
L_00ae: callvirt Void ClearMeleeTarget()
L_00b3: ldarg.0
L_00b4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00b9: ret
DONE

### Patch BattleTech.ActorMovementSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.PilotableActorRepresentation
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_OwningActor()
L_0006: callvirt BattleTech.GameRepresentation get_GameRep()
L_000b: ldnull
L_000c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: call Boolean get_isVehicle()
L_001c: brfalse Label2
L_0021: ldarg.0
L_0022: call BattleTech.Vehicle get_OwningVehicle()
L_0027: callvirt BattleTech.VehicleRepresentation get_GameRep()
L_002c: callvirt Void PlayMovementStopAudio()
L_0031: Label2
L_0031: ldarg.0
L_0032: call BattleTech.AbstractActor get_OwningActor()
L_0037: callvirt BattleTech.Team get_team()
L_003c: ldarg.0
L_003d: call BattleTech.AbstractActor get_OwningActor()
L_0042: callvirt BattleTech.CombatGameState get_Combat()
L_0047: callvirt BattleTech.Team get_LocalPlayerTeam()
L_004c: callvirt Boolean IsFriendly(BattleTech.Team)
L_0051: brtrue Label3
L_0056: ldarg.0
L_0057: call BattleTech.AbstractActor get_OwningActor()
L_005c: callvirt BattleTech.CombatGameState get_Combat()
L_0061: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0066: ldarg.0
L_0067: call BattleTech.AbstractActor get_OwningActor()
L_006c: callvirt BattleTech.VisibilityLevel VisibilityToTarget(BattleTech.ICombatant)
L_0071: ldc.i4.s 9
L_0073: bne.un Label4
L_0078: Label3
L_0078: ldarg.0
L_0079: call BattleTech.AbstractActor get_OwningActor()
L_007e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0083: isinst BattleTech.PilotableActorRepresentation
L_0088: stloc.0
L_0089: ldloc.0
L_008a: ldnull
L_008b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0090: brfalse Label5
L_0095: ldloc.0
L_0096: ldarg.0
L_0097: ldfld System.Single throttleAudioValue
L_009c: ldc.r4 0
L_00a1: ldc.r4 2
L_00a6: callvirt Void FadeThrottleAudio(Single, Single, Single)
L_00ab: br Label6
L_00b0: Label4
L_00b0: ldc.i4 389
L_00b5: ldc.r4 0
L_00ba: ldarg.0
L_00bb: call BattleTech.AbstractActor get_OwningActor()
L_00c0: callvirt BattleTech.GameRepresentation get_GameRep()
L_00c5: ldfld AkGameObj audioObject
L_00ca: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_00cf: Label1
L_00cf: Label5
L_00cf: Label6
L_00cf: ldarg.0
L_00d0: call Boolean get_isSprinting()
L_00d5: brfalse Label7
L_00da: ldarg.0
L_00db: call BattleTech.AbstractActor get_OwningActor()
L_00e0: ldarg.0
L_00e1: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_00e6: ldarg.0
L_00e7: call UnityEngine.Vector3 get_FinalPos()
L_00ec: ldarg.0
L_00ed: call UnityEngine.Vector3 get_FinalHeading()
L_00f2: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_00f7: ldarg.0
L_00f8: call Int32 get_SequenceGUID()
L_00fd: ldarg.0
L_00fe: ldfld System.Collections.Generic.List`1[BattleTech.DesignMaskDef] stickyMasks
L_0103: callvirt Void OnSprintComplete(System.Collections.Generic.List`1[BattleTech.WayPoint], UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.DesignMaskDef])
L_0108: br Label8
L_010d: Label7
L_010d: ldarg.0
L_010e: call BattleTech.AbstractActor get_OwningActor()
L_0113: ldarg.0
L_0114: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_0119: ldarg.0
L_011a: call UnityEngine.Vector3 get_FinalPos()
L_011f: ldarg.0
L_0120: call UnityEngine.Vector3 get_FinalHeading()
L_0125: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_012a: ldarg.0
L_012b: call Int32 get_SequenceGUID()
L_0130: ldarg.0
L_0131: ldfld System.Collections.Generic.List`1[BattleTech.DesignMaskDef] stickyMasks
L_0136: ldarg.0
L_0137: call Boolean get_IsMelee()
L_013c: callvirt Void OnMoveComplete(System.Collections.Generic.List`1[BattleTech.WayPoint], UnityEngine.Vector3, UnityEngine.Quaternion, Int32, System.Collections.Generic.List`1[BattleTech.DesignMaskDef], Boolean)
L_0141: Label8
L_0141: ldarg.0
L_0142: call UnityEngine.Animator get_ThisAnimator()
L_0147: ldnull
L_0148: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_014d: brfalse Label9
L_0152: ldarg.0
L_0153: call UnityEngine.Animator get_ThisAnimator()
L_0158: ldc.r4 1
L_015d: callvirt Void set_speed(Single)
L_0162: Label9
L_0162: ldarg.0
L_0163: call BattleTech.CombatGameState get_Combat()
L_0168: callvirt MessageCenter get_MessageCenter()
L_016d: ldc.i4.s 112
L_016f: ldarg.0
L_0170: ldftn Void OnBlipAcquired(MessageCenterMessage)
L_0176: newobj Void .ctor(Object, IntPtr)
L_017b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0180: ldarg.0
L_0181: call BattleTech.CombatGameState get_Combat()
L_0186: callvirt MessageCenter get_MessageCenter()
L_018b: ldc.i4.s 78
L_018d: ldarg.0
L_018e: ldftn Void OnPlayerVisChanged(MessageCenterMessage)
L_0194: newobj Void .ctor(Object, IntPtr)
L_0199: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_019e: ldarg.0
L_019f: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01a4: callvirt Void Clear()
L_01a9: ldarg.0
L_01aa: ldfld HBS.Pooling.GameObjectPool`1[FluffyUnderware.Curvy.CurvySpline] availableSplines
L_01af: ldarg.0
L_01b0: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01b5: callvirt Void PoolComponent(FluffyUnderware.Curvy.CurvySpline)
L_01ba: ldarg.0
L_01bb: ldfld System.Boolean adjustedPlayerCamera
L_01c0: brfalse Label10
L_01c5: ldarg.0
L_01c6: call BattleTech.CombatGameState get_Combat()
L_01cb: callvirt BattleTech.Team get_LocalPlayerTeam()
L_01d0: callvirt Boolean get_AreAnyActorsMoving()
L_01d5: brtrue Label11
L_01da: ldarg.0
L_01db: call Void RestorePlayerCamera()
L_01e0: Label10
L_01e0: Label11
L_01e0: ldarg.0
L_01e1: ldc.i4.0
L_01e2: stfld System.Boolean adjustedPlayerCamera
L_01e7: ldarg.0
L_01e8: call Void Postfix(BattleTech.ActorMovementSequence)
L_01ed: ret
DONE

### Patch BattleTech.MechJumpSequence, Void CompleteOrders()
L_0000: ldarg.0
L_0001: call BattleTech.Mech get_OwningMech()
L_0006: ldarg.0
L_0007: call UnityEngine.Vector3 get_FinalPos()
L_000c: ldarg.0
L_000d: call UnityEngine.Quaternion get_FinalHeading()
L_0012: ldarg.0
L_0013: call Int32 get_RootSequenceGUID()
L_0018: callvirt Void OnJumpComplete(UnityEngine.Vector3, UnityEngine.Quaternion, Int32)
L_001d: ldarg.0
L_001e: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0023: callvirt Void Clear()
L_0028: ldarg.0
L_0029: ldfld HBS.Pooling.GameObjectPool`1[FluffyUnderware.Curvy.CurvySpline] availableSplines
L_002e: ldarg.0
L_002f: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0034: callvirt Void PoolComponent(FluffyUnderware.Curvy.CurvySpline)
L_0039: ldarg.0
L_003a: ldfld BattleTech.AbstractActor owningActor
L_003f: callvirt BattleTech.CombatGameState get_Combat()
L_0044: callvirt BattleTech.Data.DataManager get_DataManager()
L_0049: ldstr "JumpjetCurves"
L_004e: ldarg.0
L_004f: ldfld UnityEngine.GameObject jumpjetCurvePrefab
L_0054: callvirt Void PoolGameObject(System.String, UnityEngine.GameObject)
L_0059: ldarg.0
L_005a: call Void Postfix(BattleTech.MechJumpSequence)
L_005f: ret
DONE

### Patch BattleTech.MechDFASequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "DFA CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: ldfld BattleTech.AbstractActor owningActor
L_0020: ldarg.0
L_0021: ldfld BattleTech.AbstractActor owningActor
L_0026: callvirt System.String get_GUID()
L_002b: callvirt Void HandleDeath(System.String)
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor owningActor
L_0036: callvirt Boolean get_IsDead()
L_003b: brtrue Label1
L_0040: ldarg.0
L_0041: ldfld BattleTech.AbstractActor owningActor
L_0046: ldarg.0
L_0047: call Int32 get_RootSequenceGUID()
L_004c: ldarg.0
L_004d: ldfld BattleTech.AbstractActor owningActor
L_0052: callvirt System.String get_GUID()
L_0057: call UnityEngine.Vector2 get_one()
L_005c: ldnull
L_005d: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0062: Label1
L_0062: ldarg.0
L_0063: call BattleTech.ICombatant get_DFATarget()
L_0068: ldarg.0
L_0069: ldfld BattleTech.AbstractActor owningActor
L_006e: callvirt System.String get_GUID()
L_0073: callvirt Void HandleDeath(System.String)
L_0078: ldarg.0
L_0079: call BattleTech.ICombatant get_DFATarget()
L_007e: callvirt Boolean get_IsDead()
L_0083: brtrue Label2
L_0088: ldarg.0
L_0089: call BattleTech.ICombatant get_DFATarget()
L_008e: isinst BattleTech.AbstractActor
L_0093: stloc.0
L_0094: ldloc.0
L_0095: brfalse Label3
L_009a: ldloc.0
L_009b: callvirt Boolean CheckForInstability()
L_00a0: pop
L_00a1: ldloc.0
L_00a2: ldarg.0
L_00a3: call Int32 get_RootSequenceGUID()
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AbstractActor owningActor
L_00ae: callvirt System.String get_GUID()
L_00b3: call UnityEngine.Vector2 get_one()
L_00b8: ldnull
L_00b9: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_00be: Label2
L_00be: Label3
L_00be: Label0
L_00be: ldarg.0
L_00bf: call Void Postfix(BattleTech.MechDFASequence)
L_00c4: ret
DONE

### Patch BattleTech.AbstractActor, Void OnActivationEnd(System.String, Int32)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AbstractActor)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldarg 2
L_0013: call Boolean Prefix(BattleTech.AbstractActor, System.String, Int32)
L_0018: brfalse Label0
L_001d: ldsfld HBS.Logging.ILog attackLogger
L_0022: ldstr "[OnActivationEnd] {1} {2} HasActivatedThisRound {0}"
L_0027: ldarg.0
L_0028: call Boolean get_HasActivatedThisRound()
L_002d: box System.Boolean
L_0032: ldarg.0
L_0033: callvirt System.String get_UnitName()
L_0038: ldarg.0
L_0039: call System.String get_GUID()
L_003e: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0043: callvirt Void LogDebug(System.Object)
L_0048: ldarg.0
L_0049: call Boolean get_HasActivatedThisRound()
L_004e: brfalse Label1
L_0053: br Label10
L_0058: Label1
L_0058: ldarg.0
L_0059: call Void LogActivationComplete()
L_005e: ldarg.0
L_005f: ldc.i4.1
L_0060: call Void set_HasActivatedThisRound(Boolean)
L_0065: ldarg.0
L_0066: ldc.i4.0
L_0067: call Void set_IsCompletingActivation(Boolean)
L_006c: ldarg.0
L_006d: ldc.i4.0
L_006e: call Void set_IsAttacking(Boolean)
L_0073: ldarg.0
L_0074: callvirt Boolean get_IsProne()
L_0079: brfalse Label2
L_007e: ldarg.0
L_007f: call BattleTech.StatCollection get_StatCollection()
L_0084: ldstr "PhaseModifier"
L_0089: ldc.i4.1
L_008a: ldarg.0
L_008b: ldfld BattleTech.StatCollection statCollection
L_0090: ldstr "PhaseModifierSelf"
L_0095: callvirt Int32 GetValue[Int32](System.String)
L_009a: add
L_009b: callvirt Boolean Set[Int32](System.String, Int32)
L_00a0: pop
L_00a1: br Label3
L_00a6: Label2
L_00a6: ldarg.0
L_00a7: call BattleTech.StatCollection get_StatCollection()
L_00ac: ldstr "PhaseModifier"
L_00b1: ldarg.0
L_00b2: ldfld BattleTech.StatCollection statCollection
L_00b7: ldstr "PhaseModifierSelf"
L_00bc: callvirt Int32 GetValue[Int32](System.String)
L_00c1: callvirt Boolean Set[Int32](System.String, Int32)
L_00c6: pop
L_00c7: Label3
L_00c7: ldarg.0
L_00c8: call BattleTech.StatCollection get_StatCollection()
L_00cd: ldstr "PhaseModifierSelf"
L_00d2: ldc.i4.0
L_00d3: callvirt Boolean Set[Int32](System.String, Int32)
L_00d8: pop
L_00d9: ldarg.0
L_00da: call Boolean get_HasMovedThisRound()
L_00df: brtrue Label4
L_00e4: ldarg.0
L_00e5: ldc.r4 0
L_00ea: call Void set_DistMovedThisRound(Single)
L_00ef: ldarg.0
L_00f0: ldc.i4.0
L_00f1: call Void set_JumpedLastRound(Boolean)
L_00f6: ldarg.0
L_00f7: ldc.i4.0
L_00f8: call Void set_MeleeAttackedLastRound(Boolean)
L_00fd: ldarg.0
L_00fe: ldc.i4.0
L_00ff: call Void set_SprintedLastRound(Boolean)
L_0104: ldarg.0
L_0105: ldc.i4.0
L_0106: call Void set_MovedLastRound(Boolean)
L_010b: Label4
L_010b: ldarg.0
L_010c: callvirt BattleTech.Pilot GetPilot()
L_0111: stloc.0
L_0112: ldloc.0
L_0113: brfalse Label5
L_0118: ldloc.0
L_0119: ldarg.1
L_011a: ldarg.2
L_011b: callvirt Void OnActivationEnd(System.String, Int32)
L_0120: Label5
L_0120: ldarg.0
L_0121: ldc.i4.0
L_0122: call Void ResetPathing(Boolean)
L_0127: ldarg.0
L_0128: call BattleTech.CombatGameState get_Combat()
L_012d: callvirt MessageCenter get_MessageCenter()
L_0132: ldarg.0
L_0133: call System.String get_GUID()
L_0138: newobj Void .ctor(String)
L_013d: callvirt Void PublishMessage(MessageCenterMessage)
L_0142: ldarg.0
L_0143: call BattleTech.CombatGameState get_Combat()
L_0148: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call UnityEngine.Vector3 get_CurrentPosition()
L_0154: ldc.i4.6
L_0155: ldc.i4.1
L_0156: call Void UpdateAurasToActor(System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.EffectTriggerType, Boolean)
L_015b: ldc.i4.0
L_015c: stloc.1
L_015d: br Label6
L_0162: Label7
L_0162: ldarg.0
L_0163: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0168: ldloc.1
L_0169: callvirt BattleTech.Ability get_Item(Int32)
L_016e: ldarg.1
L_016f: ldarg.2
L_0170: callvirt Void OnActivationComplete(System.String, Int32)
L_0175: ldloc.1
L_0176: ldc.i4.1
L_0177: add
L_0178: stloc.1
L_0179: Label6
L_0179: ldloc.1
L_017a: ldarg.0
L_017b: call System.Collections.Generic.List`1[BattleTech.Ability] get_ComponentAbilities()
L_0180: callvirt Int32 get_Count()
L_0185: blt Label7
L_018a: ldarg.0
L_018b: call BattleTech.Team get_team()
L_0190: ldarg.0
L_0191: call System.String get_GUID()
L_0196: ldc.i4.0
L_0197: callvirt Void OnTurnActorActivationComplete(System.String, Boolean)
L_019c: ldarg.0
L_019d: call BattleTech.CombatGameState get_Combat()
L_01a2: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01a7: callvirt Boolean get_IsAnyAttackSequenceActive()
L_01ac: brfalse Label8
L_01b1: ldarg.0
L_01b2: call BattleTech.CombatGameState get_Combat()
L_01b7: callvirt BattleTech.AttackDirector get_AttackDirector()
L_01bc: ldarg.0
L_01bd: callvirt System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] GetAllAttackSequencesWithAttacker(BattleTech.ICombatant)
L_01c2: callvirt Int32 get_Count()
L_01c7: ldc.i4.0
L_01c8: ble Label9
L_01cd: ldsfld HBS.Logging.ILog attackLogger
L_01d2: ldstr "ERROR! There is an attack still active on the Attack Director."
L_01d7: callvirt Void LogError(System.Object)
L_01dc: Label8
L_01dc: Label9
L_01dc: ldarg.0
L_01dd: ldarg.0
L_01de: call BattleTech.CombatGameState get_Combat()
L_01e3: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] GetAllLivingCombatants()
L_01e8: callvirt Void UpdateVisibilityCache(System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01ed: Label10
L_01ed: Label0
L_01ed: ret
DONE

### Patch BattleTech.UI.MoveStatusPreview, Void DisplayPreviewStatus(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.MoveType)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MapEncounterLayerDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.DesignMaskDef
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Boolean
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: Localize.Text
L_0000: Local var 6: Localize.Text
L_0000: Local var 7: Localize.Text
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: call BattleTech.UI.CombatHUD get_HUD()
L_000d: callvirt BattleTech.CombatGameState get_Combat()
L_0012: callvirt BattleTech.EncounterLayerData get_EncounterLayerData()
L_0017: ldarg.2
L_0018: callvirt BattleTech.MapEncounterLayerDataCell GetCellAt(UnityEngine.Vector3)
L_001d: callvirt Void Add(BattleTech.MapEncounterLayerDataCell)
L_0022: ldarg.0
L_0023: ldfld BattleTech.UI.CombatHUDStatusPanel PreviewStatusPanel
L_0028: ldarg.1
L_0029: ldloc.0
L_002a: ldarg.3
L_002b: ldarg.2
L_002c: callvirt Void ShowPreviewStatuses(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.MapEncounterLayerDataCell], BattleTech.MoveType, UnityEngine.Vector3)
L_0031: ldarg.1
L_0032: callvirt BattleTech.CombatGameState get_Combat()
L_0037: callvirt BattleTech.MapMetaData get_MapMetaData()
L_003c: ldloc.0
L_003d: ldc.i4.0
L_003e: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0043: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0048: callvirt BattleTech.DesignMaskDef GetPriorityDesignMask(BattleTech.MapTerrainDataCell)
L_004d: stloc.1
L_004e: ldloc.0
L_004f: ldc.i4.0
L_0050: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0055: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_005a: ldfld BattleTech.TerrainMaskFlags terrainMask
L_005f: call Boolean IsDropshipLandingZone(BattleTech.TerrainMaskFlags)
L_0064: stloc.2
L_0065: ldloc.0
L_0066: ldc.i4.0
L_0067: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_006c: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0071: ldfld BattleTech.TerrainMaskFlags terrainMask
L_0076: call Boolean IsDropPodLandingZone(BattleTech.TerrainMaskFlags)
L_007b: stloc.3
L_007c: ldloc.0
L_007d: ldc.i4.0
L_007e: callvirt BattleTech.MapEncounterLayerDataCell get_Item(Int32)
L_0083: ldfld BattleTech.MapTerrainDataCell relatedTerrainCell
L_0088: ldfld BattleTech.TerrainMaskFlags terrainMask
L_008d: call Boolean IsDangerousLocation(BattleTech.TerrainMaskFlags)
L_0092: stloc.s 4 (System.Boolean)
L_0094: ldloc.1
L_0095: ldnull
L_0096: cgt.un
L_0098: ldloc.2
L_0099: or
L_009a: ldloc.3
L_009b: or
L_009c: ldloc.s 4 (System.Boolean)
L_009e: or
L_009f: brfalse Label1
L_00a4: newobj Void .ctor()
L_00a9: stloc.s 5 (Localize.Text)
L_00ab: newobj Void .ctor()
L_00b0: stloc.s 6 (Localize.Text)
L_00b2: ldloc.s 4 (System.Boolean)
L_00b4: brfalse Label2
L_00b9: ldarg.0
L_00ba: call BattleTech.UI.CombatHUD get_HUD()
L_00bf: callvirt BattleTech.CombatGameState get_Combat()
L_00c4: callvirt BattleTech.CombatGameConstants get_Constants()
L_00c9: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_00ce: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_00d3: callvirt System.String get_Name()
L_00d8: call System.Object[] Empty[Object]()
L_00dd: newobj Void .ctor(String, Object[])
L_00e2: stloc.s 6 (Localize.Text)
L_00e4: ldarg.0
L_00e5: call BattleTech.UI.CombatHUD get_HUD()
L_00ea: callvirt BattleTech.CombatGameState get_Combat()
L_00ef: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f4: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_00f9: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_00fe: callvirt System.String get_Details()
L_0103: call System.Object[] Empty[Object]()
L_0108: newobj Void .ctor(String, Object[])
L_010d: stloc.s 5 (Localize.Text)
L_010f: ldloc.2
L_0110: brfalse Label3
L_0115: ldstr "{0}
{1}"
L_011a: ldc.i4.2
L_011b: newarr System.Object
L_0120: dup
L_0121: ldc.i4.0
L_0122: ldloc.s 5 (Localize.Text)
L_0124: stelem.ref
L_0125: dup
L_0126: ldc.i4.1
L_0127: ldarg.0
L_0128: call BattleTech.UI.CombatHUD get_HUD()
L_012d: callvirt BattleTech.CombatGameState get_Combat()
L_0132: callvirt BattleTech.CombatGameConstants get_Constants()
L_0137: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_013c: ldfld BattleTech.BaseDescriptionDef DrophipLocationDesc
L_0141: callvirt System.String get_Details()
L_0146: stelem.ref
L_0147: newobj Void .ctor(String, Object[])
L_014c: stloc.s 5 (Localize.Text)
L_014e: br Label4
L_0153: Label3
L_0153: ldloc.3
L_0154: brfalse Label5
L_0159: ldstr "{0}
{1}"
L_015e: ldc.i4.2
L_015f: newarr System.Object
L_0164: dup
L_0165: ldc.i4.0
L_0166: ldloc.s 5 (Localize.Text)
L_0168: stelem.ref
L_0169: dup
L_016a: ldc.i4.1
L_016b: ldarg.0
L_016c: call BattleTech.UI.CombatHUD get_HUD()
L_0171: callvirt BattleTech.CombatGameState get_Combat()
L_0176: callvirt BattleTech.CombatGameConstants get_Constants()
L_017b: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0180: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0185: callvirt System.String get_Details()
L_018a: stelem.ref
L_018b: newobj Void .ctor(String, Object[])
L_0190: stloc.s 5 (Localize.Text)
L_0192: br Label6
L_0197: Label2
L_0197: ldloc.2
L_0198: brfalse Label7
L_019d: ldarg.0
L_019e: call BattleTech.UI.CombatHUD get_HUD()
L_01a3: callvirt BattleTech.CombatGameState get_Combat()
L_01a8: callvirt BattleTech.CombatGameConstants get_Constants()
L_01ad: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_01b2: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_01b7: callvirt System.String get_Name()
L_01bc: call System.Object[] Empty[Object]()
L_01c1: newobj Void .ctor(String, Object[])
L_01c6: stloc.s 6 (Localize.Text)
L_01c8: ldarg.0
L_01c9: call BattleTech.UI.CombatHUD get_HUD()
L_01ce: callvirt BattleTech.CombatGameState get_Combat()
L_01d3: callvirt BattleTech.CombatGameConstants get_Constants()
L_01d8: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_01dd: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_01e2: callvirt System.String get_Details()
L_01e7: call System.Object[] Empty[Object]()
L_01ec: newobj Void .ctor(String, Object[])
L_01f1: stloc.s 5 (Localize.Text)
L_01f3: ldloc.s 4 (System.Boolean)
L_01f5: brfalse Label8
L_01fa: ldstr "{0}
{1}"
L_01ff: ldc.i4.2
L_0200: newarr System.Object
L_0205: dup
L_0206: ldc.i4.0
L_0207: ldloc.s 5 (Localize.Text)
L_0209: stelem.ref
L_020a: dup
L_020b: ldc.i4.1
L_020c: ldarg.0
L_020d: call BattleTech.UI.CombatHUD get_HUD()
L_0212: callvirt BattleTech.CombatGameState get_Combat()
L_0217: callvirt BattleTech.CombatGameConstants get_Constants()
L_021c: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0221: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_0226: callvirt System.String get_Details()
L_022b: stelem.ref
L_022c: newobj Void .ctor(String, Object[])
L_0231: stloc.s 5 (Localize.Text)
L_0233: br Label9
L_0238: Label7
L_0238: ldloc.3
L_0239: brfalse Label10
L_023e: ldarg.0
L_023f: call BattleTech.UI.CombatHUD get_HUD()
L_0244: callvirt BattleTech.CombatGameState get_Combat()
L_0249: callvirt BattleTech.CombatGameConstants get_Constants()
L_024e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0253: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0258: callvirt System.String get_Name()
L_025d: call System.Object[] Empty[Object]()
L_0262: newobj Void .ctor(String, Object[])
L_0267: stloc.s 6 (Localize.Text)
L_0269: ldarg.0
L_026a: call BattleTech.UI.CombatHUD get_HUD()
L_026f: callvirt BattleTech.CombatGameState get_Combat()
L_0274: callvirt BattleTech.CombatGameConstants get_Constants()
L_0279: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_027e: ldfld BattleTech.BaseDescriptionDef DropPodLocationDesc
L_0283: callvirt System.String get_Details()
L_0288: call System.Object[] Empty[Object]()
L_028d: newobj Void .ctor(String, Object[])
L_0292: stloc.s 5 (Localize.Text)
L_0294: ldloc.s 4 (System.Boolean)
L_0296: brfalse Label11
L_029b: ldstr "{0}
{1}"
L_02a0: ldc.i4.2
L_02a1: newarr System.Object
L_02a6: dup
L_02a7: ldc.i4.0
L_02a8: ldloc.s 5 (Localize.Text)
L_02aa: stelem.ref
L_02ab: dup
L_02ac: ldc.i4.1
L_02ad: ldarg.0
L_02ae: call BattleTech.UI.CombatHUD get_HUD()
L_02b3: callvirt BattleTech.CombatGameState get_Combat()
L_02b8: callvirt BattleTech.CombatGameConstants get_Constants()
L_02bd: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02c2: ldfld BattleTech.BaseDescriptionDef DangerousLocationDesc
L_02c7: callvirt System.String get_Details()
L_02cc: stelem.ref
L_02cd: newobj Void .ctor(String, Object[])
L_02d2: stloc.s 5 (Localize.Text)
L_02d4: br Label12
L_02d9: Label10
L_02d9: ldloc.1
L_02da: brfalse Label13
L_02df: ldloc.1
L_02e0: callvirt BattleTech.BaseDescriptionDef get_Description()
L_02e5: callvirt System.String get_Name()
L_02ea: call System.Object[] Empty[Object]()
L_02ef: newobj Void .ctor(String, Object[])
L_02f4: stloc.s 6 (Localize.Text)
L_02f6: ldarg.0
L_02f7: ldloc.1
L_02f8: call System.String GetDesignMaskDetails(BattleTech.DesignMaskDef)
L_02fd: call System.Object[] Empty[Object]()
L_0302: newobj Void .ctor(String, Object[])
L_0307: stloc.s 5 (Localize.Text)
L_0309: Label4
L_0309: Label5
L_0309: Label6
L_0309: Label8
L_0309: Label9
L_0309: Label11
L_0309: Label12
L_0309: Label13
L_0309: ldnull
L_030a: stloc.s 7 (Localize.Text)
L_030c: ldarg.0
L_030d: call BattleTech.UI.CombatHUDInfoSidePanel get_sidePanel()
L_0312: ldloc.s 6 (Localize.Text)
L_0314: ldloc.s 5 (Localize.Text)
L_0316: ldloc.s 7 (Localize.Text)
L_0318: ldloc.2
L_0319: ldloc.s 4 (System.Boolean)
L_031b: or
L_031c: callvirt Void ForceShowSingleFrame(Localize.Text, Localize.Text, Localize.Text, Boolean)
L_0321: Label1
L_0321: ldarg.3
L_0322: ldc.i4.1
L_0323: sub
L_0324: switch Labels14,15,16,17,18
L_033d: br Label19
L_0342: Label17
L_0342: ldarg.0
L_0343: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_0348: ldarg.0
L_0349: call BattleTech.UI.CombatHUD get_HUD()
L_034e: callvirt BattleTech.UI.CombatHUDActionButton get_JumpButton()
L_0353: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_0358: callvirt System.String get_text()
L_035d: call System.Object[] Empty[Object]()
L_0362: callvirt Void SetText(System.String, System.Object[])
L_0367: br Label20
L_036c: Label15
L_036c: ldarg.0
L_036d: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_0372: ldarg.0
L_0373: call BattleTech.UI.CombatHUD get_HUD()
L_0378: callvirt BattleTech.UI.CombatHUDActionButton get_SprintButton()
L_037d: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_0382: callvirt System.String get_text()
L_0387: call System.Object[] Empty[Object]()
L_038c: callvirt Void SetText(System.String, System.Object[])
L_0391: br Label21
L_0396: Label14
L_0396: ldarg.0
L_0397: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_039c: ldarg.0
L_039d: call BattleTech.UI.CombatHUD get_HUD()
L_03a2: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_03a7: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_03ac: callvirt System.String get_text()
L_03b1: call System.Object[] Empty[Object]()
L_03b6: callvirt Void SetText(System.String, System.Object[])
L_03bb: br Label22
L_03c0: Label18
L_03c0: ldarg.0
L_03c1: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_03c6: ldarg.0
L_03c7: call BattleTech.UI.CombatHUD get_HUD()
L_03cc: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_03d1: ldfld BattleTech.UI.TMProWrapper.LocalizableText Tooltip
L_03d6: callvirt System.String get_text()
L_03db: call System.Object[] Empty[Object]()
L_03e0: callvirt Void SetText(System.String, System.Object[])
L_03e5: br Label23
L_03ea: Label19
L_03ea: ldarg.0
L_03eb: ldfld BattleTech.UI.TMProWrapper.LocalizableText MoveTypeText
L_03f0: ldstr ""
L_03f5: call System.Object[] Empty[Object]()
L_03fa: callvirt Void SetText(System.String, System.Object[])
L_03ff: Label16
L_03ff: Label20
L_03ff: Label21
L_03ff: Label22
L_03ff: Label23
L_03ff: ldarg.0
L_0400: ldarg 1
L_0406: ldarg 2
L_040c: ldarg 3
L_0412: call Void Postfix(BattleTech.UI.MoveStatusPreview, BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.MoveType)
L_0417: ret
DONE

### Patch BattleTech.MapMetaData, BattleTech.DesignMaskDef GetPriorityDesignMask(BattleTech.MapTerrainDataCell)
L_0000: Local var 0: BattleTech.TerrainMaskFlags
L_0000: Local var 1: BattleTech.DesignMaskDef
L_0000: Local var 2: System.Exception
L_0000: Local var 3: BattleTech.DesignMaskDef
L_0000: ldnull
L_0001: stloc 3 (BattleTech.DesignMaskDef)
L_0002: ldc.i4.0
L_0003: stloc.0
.try
{
	L_0004: ldarg.1
	L_0005: ldarg.0
	L_0006: stfld BattleTech.MapMetaData mapMetaData
	L_000b: ldarg.1
	L_000c: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
	L_0011: stloc.0
	L_0012: ldloc.0
	L_0013: brfalse Label1
	L_0018: ldarg.0
	L_0019: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.DesignMaskDef] designMaskDefs
	L_001e: ldloc.0
	L_001f: callvirt BattleTech.DesignMaskDef get_Item(Int32)
	L_0024: stloc.1
	L_0025: leave Label2
	L_002a: Label1
	L_002a: leave Label3
	L_002f: leave (autogenerated)
} // end try
.catch System.Exception
{
	L_0034: stloc.2
	L_0035: ldsfld HBS.Logging.ILog logger
	L_003a: ldstr "Caught exception while looking for terrainMask[{0}] in the designMaskDefs"
	L_003f: ldloc.0
	L_0040: box BattleTech.TerrainMaskFlags
	L_0045: call System.String Format(System.String, System.Object)
	L_004a: callvirt Void LogError(System.Object)
	L_004f: ldsfld HBS.Logging.ILog logger
	L_0054: ldloc.2
	L_0055: callvirt Void LogException(System.Exception)
	L_005a: leave Label4
	L_005f: leave (autogenerated)
} // end handler
L_0064: Label3
L_0064: Label4
L_0064: ldnull
L_0065: br Label6
L_006a: Label2
L_006a: ldloc.1
L_006b: Label6
L_006b: stloc 3 (BattleTech.DesignMaskDef)
L_006c: ldarg.0
L_006d: ldarg 1
L_0073: ldloca 3 (BattleTech.DesignMaskDef)
L_0075: call Void Postfix(BattleTech.MapMetaData, BattleTech.MapTerrainDataCell, BattleTech.DesignMaskDef ByRef)
L_007a: ldloc 3 (BattleTech.DesignMaskDef)
L_007b: ret
DONE

### Patch BattleTech.MapTerrainDataCell, AudioSwitch_surface_type GetAudioSurfaceType()
L_0000: Local var 0: AudioSwitch_surface_type
L_0000: Local var 1: BattleTech.TerrainMaskFlags
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.DesignMaskDef
L_0000: Local var 4: AudioSwitch_surface_type
L_0000: ldc.i4 0
L_0005: stloc 4 (AudioSwitch_surface_type)
L_0007: ldc.i4.0
L_0008: stloc.0
L_0009: ldarg.0
L_000a: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
L_000f: stloc.1
L_0010: call Boolean get_HasInstance()
L_0015: brfalse Label1
L_001a: call BattleTech.Rendering.Mood.MoodController get_Instance()
L_001f: callvirt Boolean IsRaining()
L_0024: br Label2
L_0029: Label1
L_0029: ldc.i4.0
L_002a: Label2
L_002a: stloc.2
L_002b: ldarg.0
L_002c: ldfld BattleTech.MapEncounterLayerDataCell mapEncounterLayerDataCell
L_0031: callvirt BattleTech.BuildingRaycastHit GetTopmostBuilding()
L_0036: ldnull
L_0037: cgt.un
L_0039: ldarg.0
L_003a: ldfld BattleTech.MapMetaData mapMetaData
L_003f: ldloc.1
L_0040: callvirt BattleTech.DesignMaskDef GetDesignMask(BattleTech.TerrainMaskFlags)
L_0045: stloc.3
L_0046: brfalse Label3
L_004b: ldloc.1
L_004c: ldc.i4.8
L_004d: beq Label4
L_0052: ldloc.1
L_0053: ldc.i4 256
L_0058: beq Label5
L_005d: ldloc.1
L_005e: ldc.i4.s 16
L_0060: beq Label6
L_0065: ldc.i4.7
L_0066: stloc.0
L_0067: br Label7
L_006c: Label3
L_006c: Label4
L_006c: Label5
L_006c: Label6
L_006c: ldloc.1
L_006d: ldc.i4 1024
L_0072: bne.un Label8
L_0077: ldc.i4.8
L_0078: stloc.0
L_0079: br Label9
L_007e: Label8
L_007e: ldloc.2
L_007f: brfalse Label10
L_0084: ldloc.3
L_0085: ldfld AudioSwitch_surface_type audioSwitchRainingSurfaceType
L_008a: stloc.0
L_008b: br Label11
L_0090: Label10
L_0090: ldloc.3
L_0091: ldfld AudioSwitch_surface_type audioSwitchSurfaceType
L_0096: stloc.0
L_0097: Label7
L_0097: Label9
L_0097: Label11
L_0097: ldloc.0
L_0098: stloc 4 (AudioSwitch_surface_type)
L_009a: ldarg.0
L_009b: ldloca 4 (AudioSwitch_surface_type)
L_009d: call Void Postfix(BattleTech.MapTerrainDataCell, AudioSwitch_surface_type ByRef)
L_00a2: ldloc 4 (AudioSwitch_surface_type)
L_00a4: ret
DONE

### Patch BattleTech.MapTerrainDataCell, System.String GetVFXNameModifier()
L_0000: Local var 0: BattleTech.TerrainMaskFlags
L_0000: Local var 1: System.String
L_0000: ldnull
L_0001: stloc 1 (System.String)
L_0002: ldarg.0
L_0003: call BattleTech.TerrainMaskFlags GetPriorityTerrainMaskFlags(BattleTech.MapTerrainDataCell)
L_0008: stloc.0
L_0009: ldarg.0
L_000a: ldfld BattleTech.MapMetaData mapMetaData
L_000f: ldloc.0
L_0010: callvirt BattleTech.DesignMaskDef GetDesignMask(BattleTech.TerrainMaskFlags)
L_0015: ldfld System.String vfxNameModifier
L_001a: stloc 1 (System.String)
L_001b: ldarg.0
L_001c: ldloca 1 (System.String)
L_001e: call Void Postfix(BattleTech.MapTerrainDataCell, System.String ByRef)
L_0023: ldloc 1 (System.String)
L_0024: ret
DONE

### Patch BattleTech.MapMetaData, Void Load(HBS.Util.SerializationStream, BattleTech.Data.DataManager)
L_0000: Local var 0: BattleTech.Data.LoadRequest
L_0000: Local var 1: System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.TerrainMaskFlags, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.String
L_0000: ldarg.0
L_0001: ldarg.2
L_0002: stfld BattleTech.Data.DataManager dataManager
L_0007: ldarg.0
L_0008: ldarg.1
L_0009: call Void Load(HBS.Util.SerializationStream)
L_000e: ldarg.0
L_000f: newobj Void .ctor()
L_0014: stfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0019: ldarg.0
L_001a: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_001f: ldstr "DesignMaskImpassable"
L_0024: ldc.i4 512
L_0029: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_002e: ldarg.0
L_002f: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0034: ldstr "DesignMaskDestroyedBuilding"
L_0039: ldc.i4 1024
L_003e: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0043: ldarg.0
L_0044: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0049: ldarg.0
L_004a: ldfld System.String waterDesignMaskName
L_004f: ldc.i4.8
L_0050: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0055: ldarg.0
L_0056: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_005b: ldarg.0
L_005c: ldfld System.String deepWaterDesignMaskName
L_0061: ldc.i4 256
L_0066: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_006b: ldarg.0
L_006c: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0071: ldarg.0
L_0072: ldfld System.String roughDesignMaskName
L_0077: ldc.i4.s 32
L_0079: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_007e: ldarg.0
L_007f: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0084: ldarg.0
L_0085: ldfld System.String roadDesignMaskName
L_008a: ldc.i4 128
L_008f: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_0094: ldarg.0
L_0095: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_009a: ldarg.0
L_009b: ldfld System.String forestDesignMaskName
L_00a0: ldc.i4.s 16
L_00a2: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00a7: ldarg.0
L_00a8: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ad: ldarg.0
L_00ae: ldfld System.String customDesignMaskName
L_00b3: ldc.i4.s 64
L_00b5: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00ba: ldarg.0
L_00bb: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00c0: ldstr "DesignMaskMapBoundary"
L_00c5: ldc.i4 2048
L_00ca: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00cf: ldarg.0
L_00d0: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00d5: ldstr "DesignMaskDropshipLandingZone"
L_00da: ldc.i4 4096
L_00df: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00e4: ldarg.0
L_00e5: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ea: ldstr "DesignMaskDropPodLandingZone"
L_00ef: ldc.i4 32768
L_00f4: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_00f9: ldarg.0
L_00fa: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_00ff: ldstr "DesignMaskDangerousLocation"
L_0104: ldc.i4 8192
L_0109: callvirt Void Add(System.String, BattleTech.TerrainMaskFlags)
L_010e: ldarg.0
L_010f: newobj Void .ctor()
L_0114: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.DesignMaskDef] designMaskDefs
L_0119: ldarg.2
L_011a: ldnull
L_011b: ldc.i4.0
L_011c: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_0121: stloc.0
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.TerrainMaskFlags] requestedDesignMasks
L_0128: callvirt KeyCollection get_Keys()
L_012d: callvirt Enumerator GetEnumerator()
L_0132: stloc.1
.try
{
	L_0133: br Label1
	L_0138: Label2
	L_0138: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_013a: call System.String get_Current()
	L_013f: stloc.2
	L_0140: ldloc.0
	L_0141: ldc.i4.s 22
	L_0143: ldloc.2
	L_0144: ldarg.0
	L_0145: ldftn Void TrackLoadedMaskDef(System.String, BattleTech.DesignMaskDef)
	L_014b: newobj Void .ctor(Object, IntPtr)
	L_0150: ldc.i4.0
	L_0151: callvirt Void AddLoadRequest[DesignMaskDef](BattleTech.BattleTechResourceType, System.String, System.Action`2[System.String,BattleTech.DesignMaskDef], Boolean)
	L_0156: Label1
	L_0156: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_0158: call Boolean MoveNext()
	L_015d: brtrue Label2
	L_0162: leave Label3
	L_0167: leave (autogenerated)
} // end try
.finally
{
	L_016c: ldloca.s 1 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags])
	L_016e: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.String,BattleTech.TerrainMaskFlags]
	L_0174: callvirt Void Dispose()
	L_0179: endfinally
	L_017a: leave (autogenerated)
} // end handler
L_017b: Label3
L_017b: ldarg.0
L_017c: ldfld System.String biomeDesignMaskName
L_0181: call Boolean IsNullOrEmpty(System.String)
L_0186: brfalse Label4
L_018b: ldsfld HBS.Logging.ILog logger
L_0190: ldstr "NULL or Empty BiomeDesignMaskName from biome {0}. Any active level load will hang indefinitely."
L_0195: ldarg.0
L_0196: ldflda Biome+BIOMESKIN biomeSkin
L_019b: constrained. Biome+BIOMESKIN
L_01a1: callvirt System.String ToString()
L_01a6: call System.String Format(System.String, System.Object)
L_01ab: callvirt Void LogError(System.Object)
L_01b0: br Label5
L_01b5: Label4
L_01b5: ldloc.0
L_01b6: ldc.i4.s 22
L_01b8: ldarg.0
L_01b9: ldfld System.String biomeDesignMaskName
L_01be: ldarg.0
L_01bf: ldftn Void TrackLoadedMaskDef(System.String, BattleTech.DesignMaskDef)
L_01c5: newobj Void .ctor(Object, IntPtr)
L_01ca: ldc.i4.0
L_01cb: callvirt Void AddLoadRequest[DesignMaskDef](BattleTech.BattleTechResourceType, System.String, System.Action`2[System.String,BattleTech.DesignMaskDef], Boolean)
L_01d0: Label5
L_01d0: ldarg.0
L_01d1: ldc.i4.1
L_01d2: stfld System.Boolean loadRequested
L_01d7: ldloc.0
L_01d8: ldc.i4.s 10
L_01da: callvirt Void ProcessRequests(UInt32)
L_01df: ldarg.0
L_01e0: ldarg 1
L_01e6: ldarg 2
L_01ec: call Void Postfix(BattleTech.MapMetaData, HBS.Util.SerializationStream, BattleTech.Data.DataManager)
L_01f1: ret
DONE

### Patch BattleTech.MapMetaData, Void Load(HBS.Util.SerializationStream)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.EncounterLayerIdentifier
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: callvirt System.String GetString()
L_0007: stfld System.String mapName
L_000c: ldarg.0
L_000d: ldarg.1
L_000e: callvirt System.String GetString()
L_0013: stfld System.String biomeDesignMaskName
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: callvirt System.String GetString()
L_001f: stfld System.String waterDesignMaskName
L_0024: ldarg.0
L_0025: ldarg.1
L_0026: callvirt System.String GetString()
L_002b: stfld System.String deepWaterDesignMaskName
L_0030: ldarg.0
L_0031: ldarg.1
L_0032: callvirt System.String GetString()
L_0037: stfld System.String forestDesignMaskName
L_003c: ldarg.0
L_003d: ldarg.1
L_003e: callvirt System.String GetString()
L_0043: stfld System.String roughDesignMaskName
L_0048: ldarg.0
L_0049: ldarg.1
L_004a: callvirt System.String GetString()
L_004f: stfld System.String customDesignMaskName
L_0054: ldarg.0
L_0055: ldarg.1
L_0056: callvirt System.String GetString()
L_005b: stfld System.String roadDesignMaskName
L_0060: ldarg.1
L_0061: callvirt Int32 GetInt()
L_0066: pop
L_0067: ldarg.1
L_0068: callvirt Int32 GetInt()
L_006d: stloc.0
L_006e: ldarg.1
L_006f: callvirt Int32 GetInt()
L_0074: stloc.1
L_0075: ldarg.0
L_0076: ldloc.1
L_0077: ldloc.0
L_0078: newobj Void .ctor(Int32, Int32)
L_007d: stfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0082: ldc.i4.0
L_0083: stloc.3
L_0084: br Label1
L_0089: Label4
L_0089: ldc.i4.0
L_008a: stloc.s 4 (System.Int32)
L_008c: br Label2
L_0091: Label3
L_0091: ldarg.0
L_0092: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0097: ldloc.3
L_0098: ldloc.s 4 (System.Int32)
L_009a: newobj Void .ctor()
L_009f: call Void Set(Int32, Int32, BattleTech.MapTerrainDataCell)
L_00a4: ldarg.0
L_00a5: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00aa: ldloc.3
L_00ab: ldloc.s 4 (System.Int32)
L_00ad: call BattleTech.MapTerrainDataCell Get(Int32, Int32)
L_00b2: ldarg.1
L_00b3: callvirt Void Load(HBS.Util.SerializationStream)
L_00b8: ldarg.0
L_00b9: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00be: ldloc.3
L_00bf: ldloc.s 4 (System.Int32)
L_00c1: call BattleTech.MapTerrainDataCell Get(Int32, Int32)
L_00c6: ldarg.0
L_00c7: stfld BattleTech.MapMetaData mapMetaData
L_00cc: ldloc.s 4 (System.Int32)
L_00ce: ldc.i4.1
L_00cf: add
L_00d0: stloc.s 4 (System.Int32)
L_00d2: Label2
L_00d2: ldloc.s 4 (System.Int32)
L_00d4: ldloc.0
L_00d5: blt Label3
L_00da: ldloc.3
L_00db: ldc.i4.1
L_00dc: add
L_00dd: stloc.3
L_00de: Label1
L_00de: ldloc.3
L_00df: ldloc.1
L_00e0: blt Label4
L_00e5: ldarg.0
L_00e6: newobj Void .ctor()
L_00eb: stfld System.Collections.Generic.List`1[BattleTech.EncounterLayerIdentifier] encounterLayerIdentifierList
L_00f0: ldarg.1
L_00f1: callvirt Int32 GetInt()
L_00f6: stloc.2
L_00f7: ldc.i4.0
L_00f8: stloc.s 5 (System.Int32)
L_00fa: br Label5
L_00ff: Label6
L_00ff: newobj Void .ctor()
L_0104: stloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0106: ldloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0108: ldarg.1
L_0109: callvirt Void Load(HBS.Util.SerializationStream)
L_010e: ldarg.0
L_010f: ldfld System.Collections.Generic.List`1[BattleTech.EncounterLayerIdentifier] encounterLayerIdentifierList
L_0114: ldloc.s 6 (BattleTech.EncounterLayerIdentifier)
L_0116: callvirt Void Add(BattleTech.EncounterLayerIdentifier)
L_011b: ldloc.s 5 (System.Int32)
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.s 5 (System.Int32)
L_0121: Label5
L_0121: ldloc.s 5 (System.Int32)
L_0123: ldloc.2
L_0124: blt Label6
L_0129: ldarg.0
L_012a: newobj Void .ctor()
L_012f: stfld HBS.Collections.TagSet mapTags
L_0134: ldarg.0
L_0135: ldfld HBS.Collections.TagSet mapTags
L_013a: ldarg.1
L_013b: callvirt Void Load(HBS.Util.SerializationStream)
.try
{
	L_0140: ldarg.0
	L_0141: ldarg.1
	L_0142: callvirt BIOMESKIN GetEnum[BIOMESKIN]()
	L_0147: stfld Biome+BIOMESKIN biomeSkin
	L_014c: ldstr "MapMetaData - successfully loaded biomeskin "
	L_0151: ldarg.0
	L_0152: ldflda Biome+BIOMESKIN biomeSkin
	L_0157: constrained. Biome+BIOMESKIN
	L_015d: callvirt System.String ToString()
	L_0162: call System.String Concat(System.String, System.String)
	L_0167: call Void Log(System.Object)
	L_016c: leave Label7
	L_0171: leave (autogenerated)
} // end try
.catch System.Object
{
	L_0176: pop
	L_0177: ldstr "PROBLEM - This map needs to be reexported. It doesn't have the enumeration for biomeSkin stored in it's binary data. Loading with a biome that does NOT support Ice..."
	L_017c: call Void LogWarning(System.Object)
	L_0181: ldarg.0
	L_0182: ldc.i4.0
	L_0183: stfld Biome+BIOMESKIN biomeSkin
	L_0188: leave Label8
	L_018d: leave (autogenerated)
} // end handler
L_0192: Label7
L_0192: Label8
L_0192: ldarg.0
L_0193: ldfld Biome+BIOMESKIN biomeSkin
L_0198: stsfld Biome+BIOMESKIN staticBiomeSkin
L_019d: ldarg.0
L_019e: ldfld Biome+BIOMESKIN biomeSkin
L_01a3: call Void RefreshIsWaterIce(BIOMESKIN)
L_01a8: ldarg.0
L_01a9: ldarg 1
L_01af: call Void Postfix(BattleTech.MapMetaData, HBS.Util.SerializationStream)
L_01b4: ret
DONE

### Patch BattleTech.TurnDirector, Void EndCurrentRound()
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.AutoCompleteSequence
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AddSequenceToStackMessage
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "--- ending round "
L_000a: ldarg.0
L_000b: call Int32 get_CurrentRound()
L_0010: box System.Int32
L_0015: ldstr " ---"
L_001a: call System.String Concat(System.Object, System.Object, System.Object)
L_001f: callvirt Void Log(System.Object)
L_0024: ldarg.0
L_0025: call BattleTech.CombatGameState get_Combat()
L_002a: callvirt MessageCenter get_MessageCenter()
L_002f: ldarg.0
L_0030: call Int32 get_CurrentRound()
L_0035: ldsfld System.String Empty
L_003a: newobj Void .ctor(Int32, String)
L_003f: callvirt Void PublishMessage(MessageCenterMessage)
L_0044: newobj Void .ctor()
L_0049: stloc.0
L_004a: ldc.i4.0
L_004b: stloc.2
L_004c: br Label1
L_0051: Label2
L_0051: ldloc.0
L_0052: ldarg.0
L_0053: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_0058: ldloc.2
L_0059: callvirt BattleTech.TurnActor get_Item(Int32)
L_005e: ldarg.0
L_005f: call Int32 get_CurrentRound()
L_0064: callvirt System.Collections.Generic.List`1[BattleTech.IStackSequence] OnRoundEnd(Int32)
L_0069: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.IStackSequence])
L_006e: ldloc.2
L_006f: ldc.i4.1
L_0070: add
L_0071: stloc.2
L_0072: Label1
L_0072: ldloc.2
L_0073: ldarg.0
L_0074: call System.Collections.Generic.List`1[BattleTech.TurnActor] get_TurnActors()
L_0079: callvirt Int32 get_Count()
L_007e: blt Label2
L_0083: ldarg.0
L_0084: call BattleTech.CombatGameState get_Combat()
L_0089: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_008e: ldc.i4.1
L_008f: call Void UpdateAllAuras(System.Collections.Generic.List`1[BattleTech.AbstractActor], Boolean)
L_0094: ldarg.0
L_0095: ldstr "OnRoundEnd"
L_009a: ldarg.0
L_009b: ldftn Void OnRoundEndComplete()
L_00a1: newobj Void .ctor(Object, IntPtr)
L_00a6: call Boolean CheckAndFixStack(System.String, BattleTech.SequenceFinished)
L_00ab: stloc.1
L_00ac: ldloc.0
L_00ad: callvirt Int32 get_Count()
L_00b2: brtrue Label3
L_00b7: ldloc.1
L_00b8: brtrue Label4
L_00bd: ldarg.0
L_00be: call Void OnRoundEndComplete()
L_00c3: br Label8
L_00c8: Label3
L_00c8: ldloc.1
L_00c9: brtrue Label5
L_00ce: ldarg.0
L_00cf: call BattleTech.CombatGameState get_Combat()
L_00d4: ldarg.0
L_00d5: ldftn Void OnRoundEndComplete()
L_00db: newobj Void .ctor(Object, IntPtr)
L_00e0: newobj Void .ctor(CombatGameState, SequenceFinished)
L_00e5: stloc.3
L_00e6: ldarg.0
L_00e7: call BattleTech.CombatGameState get_Combat()
L_00ec: callvirt MessageCenter get_MessageCenter()
L_00f1: ldloc.3
L_00f2: newobj Void .ctor(IStackSequence)
L_00f7: callvirt Void PublishMessage(MessageCenterMessage)
L_00fc: Label5
L_00fc: ldc.i4.0
L_00fd: stloc.s 4 (System.Int32)
L_00ff: br Label6
L_0104: Label7
L_0104: ldloc.0
L_0105: ldloc.s 4 (System.Int32)
L_0107: callvirt BattleTech.IStackSequence get_Item(Int32)
L_010c: newobj Void .ctor(IStackSequence)
L_0111: stloc.s 5 (BattleTech.AddSequenceToStackMessage)
L_0113: ldarg.0
L_0114: call BattleTech.CombatGameState get_Combat()
L_0119: callvirt MessageCenter get_MessageCenter()
L_011e: ldloc.s 5 (BattleTech.AddSequenceToStackMessage)
L_0120: callvirt Void PublishMessage(MessageCenterMessage)
L_0125: ldloc.s 4 (System.Int32)
L_0127: ldc.i4.1
L_0128: add
L_0129: stloc.s 4 (System.Int32)
L_012b: Label6
L_012b: ldloc.s 4 (System.Int32)
L_012d: ldloc.0
L_012e: callvirt Int32 get_Count()
L_0133: blt Label7
L_0138: Label4
L_0138: Label8
L_0138: ldarg.0
L_0139: call Void Postfix(BattleTech.TurnDirector)
L_013e: ret
DONE

### Patch BattleTech.Rendering.Trees.TreeContainer, Void GatherTrees()
L_0000: Local var 0: UnityEngine.TreeInstance[]
L_0000: Local var 1: UnityEngine.TreePrototype[]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Quaternion
L_0000: Local var 5: UnityEngine.Vector3
L_0000: Local var 6: UnityEngine.Matrix4x4
L_0000: Local var 7: BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject
L_0000: Local var 8: System.Int32
L_0000: ldarg.0
L_0001: call UnityEngine.Terrain get_terrain()
L_0006: callvirt UnityEngine.TerrainData get_terrainData()
L_000b: callvirt UnityEngine.TreeInstance[] get_treeInstances()
L_0010: stloc.0
L_0011: ldarg.0
L_0012: call UnityEngine.Terrain get_terrain()
L_0017: callvirt UnityEngine.TerrainData get_terrainData()
L_001c: callvirt UnityEngine.TreePrototype[] get_treePrototypes()
L_0021: stloc.1
L_0022: ldarg.0
L_0023: ldloc.0
L_0024: ldlen
L_0025: conv.i4
L_0026: newobj Void .ctor(Int32)
L_002b: stfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_0030: ldc.i4.0
L_0031: stloc.2
L_0032: br Label1
L_0037: Label5
L_0037: ldloc.1
L_0038: ldloc.0
L_0039: ldloc.2
L_003a: ldelema UnityEngine.TreeInstance
L_003f: ldfld System.Int32 prototypeIndex
L_0044: ldelem.ref
L_0045: callvirt UnityEngine.GameObject get_prefab()
L_004a: ldnull
L_004b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0050: brtrue Label2
L_0055: ldloc.0
L_0056: ldloc.2
L_0057: ldelema UnityEngine.TreeInstance
L_005c: ldfld UnityEngine.Vector3 position
L_0061: stloc.3
L_0062: ldloca.s 3 (UnityEngine.Vector3)
L_0064: ldloc.3
L_0065: ldfld System.Single x
L_006a: ldarg.0
L_006b: call UnityEngine.Terrain get_terrain()
L_0070: callvirt UnityEngine.TerrainData get_terrainData()
L_0075: callvirt UnityEngine.Vector3 get_size()
L_007a: ldfld System.Single x
L_007f: mul
L_0080: ldarg.0
L_0081: call UnityEngine.Terrain get_terrain()
L_0086: callvirt UnityEngine.Transform get_transform()
L_008b: callvirt UnityEngine.Vector3 get_position()
L_0090: ldfld System.Single x
L_0095: add
L_0096: stfld System.Single x
L_009b: ldloca.s 3 (UnityEngine.Vector3)
L_009d: ldloc.3
L_009e: ldfld System.Single y
L_00a3: ldarg.0
L_00a4: call UnityEngine.Terrain get_terrain()
L_00a9: callvirt UnityEngine.TerrainData get_terrainData()
L_00ae: callvirt UnityEngine.Vector3 get_size()
L_00b3: ldfld System.Single y
L_00b8: mul
L_00b9: ldarg.0
L_00ba: call UnityEngine.Terrain get_terrain()
L_00bf: callvirt UnityEngine.Transform get_transform()
L_00c4: callvirt UnityEngine.Vector3 get_position()
L_00c9: ldfld System.Single y
L_00ce: add
L_00cf: stfld System.Single y
L_00d4: ldloca.s 3 (UnityEngine.Vector3)
L_00d6: ldloc.3
L_00d7: ldfld System.Single z
L_00dc: ldarg.0
L_00dd: call UnityEngine.Terrain get_terrain()
L_00e2: callvirt UnityEngine.TerrainData get_terrainData()
L_00e7: callvirt UnityEngine.Vector3 get_size()
L_00ec: ldfld System.Single z
L_00f1: mul
L_00f2: ldarg.0
L_00f3: call UnityEngine.Terrain get_terrain()
L_00f8: callvirt UnityEngine.Transform get_transform()
L_00fd: callvirt UnityEngine.Vector3 get_position()
L_0102: ldfld System.Single z
L_0107: add
L_0108: stfld System.Single z
L_010d: ldc.r4 0
L_0112: ldloc.0
L_0113: ldloc.2
L_0114: ldelema UnityEngine.TreeInstance
L_0119: ldfld System.Single rotation
L_011e: ldc.r4 57.29578
L_0123: mul
L_0124: ldc.r4 0
L_0129: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_012e: stloc.s 4 (UnityEngine.Quaternion)
L_0130: ldloca.s 5 (UnityEngine.Vector3)
L_0132: ldloc.0
L_0133: ldloc.2
L_0134: ldelema UnityEngine.TreeInstance
L_0139: ldfld System.Single widthScale
L_013e: ldloc.0
L_013f: ldloc.2
L_0140: ldelema UnityEngine.TreeInstance
L_0145: ldfld System.Single heightScale
L_014a: ldloc.0
L_014b: ldloc.2
L_014c: ldelema UnityEngine.TreeInstance
L_0151: ldfld System.Single widthScale
L_0156: call Void .ctor(Single, Single, Single)
L_015b: ldloc.3
L_015c: ldloc.s 4 (UnityEngine.Quaternion)
L_015e: ldloc.s 5 (UnityEngine.Vector3)
L_0160: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0165: stloc.s 6 (UnityEngine.Matrix4x4)
L_0167: newobj Void .ctor()
L_016c: stloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_016e: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0170: ldloc.0
L_0171: ldloc.2
L_0172: ldelema UnityEngine.TreeInstance
L_0177: ldfld System.Int32 prototypeIndex
L_017c: stfld System.Int32 treeInstance
L_0181: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0183: ldloc.3
L_0184: stfld UnityEngine.Vector3 position
L_0189: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_018b: ldloc.s 4 (UnityEngine.Quaternion)
L_018d: stfld UnityEngine.Quaternion rotation
L_0192: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0194: ldloc.s 5 (UnityEngine.Vector3)
L_0196: stfld UnityEngine.Vector3 lossyScale
L_019b: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_019d: ldloc.s 6 (UnityEngine.Matrix4x4)
L_019f: stfld UnityEngine.Matrix4x4 trs
L_01a4: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01a6: ldc.i4.8
L_01a7: newarr UnityEngine.Vector3
L_01ac: stfld UnityEngine.Vector3[] distantPosition
L_01b1: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01b3: ldc.i4.8
L_01b4: newarr UnityEngine.Matrix4x4
L_01b9: stfld UnityEngine.Matrix4x4[] distantTrs
L_01be: ldc.i4.0
L_01bf: stloc.s 8 (System.Int32)
L_01c1: br Label3
L_01c6: Label4
L_01c6: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01c8: ldfld UnityEngine.Vector3[] distantPosition
L_01cd: ldloc.s 8 (System.Int32)
L_01cf: ldsfld UnityEngine.Matrix4x4[] fakeTrs
L_01d4: ldloc.s 8 (System.Int32)
L_01d6: ldelema UnityEngine.Matrix4x4
L_01db: ldloc.3
L_01dc: call UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3)
L_01e1: stelem UnityEngine.Vector3
L_01e6: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01e8: ldfld UnityEngine.Matrix4x4[] distantTrs
L_01ed: ldloc.s 8 (System.Int32)
L_01ef: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_01f1: ldfld UnityEngine.Vector3[] distantPosition
L_01f6: ldloc.s 8 (System.Int32)
L_01f8: ldelem UnityEngine.Vector3
L_01fd: ldloc.s 4 (UnityEngine.Quaternion)
L_01ff: ldloc.s 5 (UnityEngine.Vector3)
L_0201: call UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3)
L_0206: stelem UnityEngine.Matrix4x4
L_020b: ldloc.s 8 (System.Int32)
L_020d: ldc.i4.1
L_020e: add
L_020f: stloc.s 8 (System.Int32)
L_0211: Label3
L_0211: ldloc.s 8 (System.Int32)
L_0213: ldc.i4.8
L_0214: blt Label4
L_0219: ldarg.0
L_021a: ldfld System.Collections.Generic.List`1[BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject] treeList
L_021f: ldloc.s 7 (BattleTech.Rendering.Trees.TreeContainer+TreeContainerObject)
L_0221: callvirt Void Add(TreeContainerObject)
L_0226: Label2
L_0226: ldloc.2
L_0227: ldc.i4.1
L_0228: add
L_0229: stloc.2
L_022a: Label1
L_022a: ldloc.2
L_022b: ldloc.0
L_022c: ldlen
L_022d: conv.i4
L_022e: blt Label5
L_0233: ldarg.0
L_0234: call Void Postfix(BattleTech.Rendering.Trees.TreeContainer)
L_0239: ret
DONE

### Patch BattleTech.Rendering.BTCustomRenderer, Void DrawDecals(UnityEngine.Camera)
L_0000: Local var 0: BattleTech.Rendering.BTCustomRenderer+CustomCommandBuffers
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: UnityEngine.Rendering.CommandBuffer
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Matrix4x4[]
L_0000: Local var 5: UnityEngine.Material
L_0000: Local var 6: System.Int32
L_0000: Local var 7: UnityEngine.Matrix4x4[]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call CustomCommandBuffers UseCamera(UnityEngine.Camera)
L_0007: stloc.0
L_0008: ldloc.0
L_0009: brtrue Label1
L_000e: br Label11
L_0013: Label1
L_0013: ldc.i4.0
L_0014: stloc.1
L_0015: ldarg.0
L_0016: call TerrainGenerator get_terrainGenerator()
L_001b: ldnull
L_001c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0021: brfalse Label2
L_0026: ldarg.0
L_0027: call TerrainGenerator get_terrainGenerator()
L_002c: ldfld Biome biome
L_0031: ldfld Biome+BIOMESKIN biomeSkin
L_0036: ldc.i4.s 14
L_0038: bne.un Label3
L_003d: ldc.i4.1
L_003e: stloc.1
L_003f: Label2
L_003f: Label3
L_003f: ldloc.0
L_0040: ldfld UnityEngine.Rendering.CommandBuffer deferredDecalsBuffer
L_0045: stloc.2
L_0046: ldarg.0
L_0047: ldfld System.Boolean skipDecals
L_004c: brtrue Label4
L_0051: ldloc.2
L_0052: ldarg.1
L_0053: call Void ProcessCommandBuffer(UnityEngine.Rendering.CommandBuffer, UnityEngine.Camera)
L_0058: Label4
L_0058: call Boolean get_isPlaying()
L_005d: brfalse Label5
L_0062: ldsfld System.Int32 effectsQuality
L_0067: ldc.i4.0
L_0068: ble Label6
L_006d: call BattleTech.Rendering.FootstepManager get_Instance()
L_0072: ldloca.s 3 (System.Int32)
L_0074: ldloc.1
L_0075: callvirt UnityEngine.Matrix4x4[] ProcessFootsteps(Int32 ByRef, Boolean)
L_007a: stloc.s 4 (UnityEngine.Matrix4x4[])
L_007c: ldloc.1
L_007d: brtrue Label7
L_0082: call BattleTech.Rendering.FootstepManager get_Instance()
L_0087: callvirt UnityEngine.Material get_footstepMaterial()
L_008c: br Label8
L_0091: Label7
L_0091: call BattleTech.Rendering.FootstepManager get_Instance()
L_0096: callvirt UnityEngine.Material get_urbanFootstepMaterial()
L_009b: Label8
L_009b: stloc.s 5 (UnityEngine.Material)
L_009d: ldloc.2
L_009e: ldsfld System.Int32 _FootstepScale
L_00a3: ldloc.1
L_00a4: brtrue Label9
L_00a9: ldc.r4 1
L_00ae: br Label10
L_00b3: Label9
L_00b3: ldc.r4 2
L_00b8: Label10
L_00b8: callvirt Void SetGlobalFloat(Int32, Single)
L_00bd: ldloc.2
L_00be: call UnityEngine.Mesh get_DecalMeshFull()
L_00c3: ldc.i4.0
L_00c4: ldloc.s 5 (UnityEngine.Material)
L_00c6: ldc.i4.0
L_00c7: ldloc.s 4 (UnityEngine.Matrix4x4[])
L_00c9: ldloc.3
L_00ca: ldnull
L_00cb: callvirt Void DrawMeshInstanced(UnityEngine.Mesh, Int32, UnityEngine.Material, Int32, UnityEngine.Matrix4x4[], Int32, UnityEngine.MaterialPropertyBlock)
L_00d0: call BattleTech.Rendering.FootstepManager get_Instance()
L_00d5: ldloca.s 6 (System.Int32)
L_00d7: callvirt UnityEngine.Matrix4x4[] ProcessScorches(Int32 ByRef)
L_00dc: stloc.s 7 (UnityEngine.Matrix4x4[])
L_00de: ldloc.2
L_00df: call UnityEngine.Mesh get_DecalMeshFull()
L_00e4: ldc.i4.0
L_00e5: call BattleTech.Rendering.FootstepManager get_Instance()
L_00ea: callvirt UnityEngine.Material get_scorchMaterial()
L_00ef: ldc.i4.0
L_00f0: ldloc.s 7 (UnityEngine.Matrix4x4[])
L_00f2: ldloc.s 6 (System.Int32)
L_00f4: ldnull
L_00f5: callvirt Void DrawMeshInstanced(UnityEngine.Mesh, Int32, UnityEngine.Material, Int32, UnityEngine.Matrix4x4[], Int32, UnityEngine.MaterialPropertyBlock)
L_00fa: Label5
L_00fa: Label6
L_00fa: Label11
L_00fa: ldarg.0
L_00fb: ldarg 1
L_0101: call Void Postfix(BattleTech.Rendering.BTCustomRenderer, UnityEngine.Camera)
L_0106: ret
DONE

### Patch BattleTech.Rendering.FootstepManager, BattleTech.Rendering.FootstepManager get_Instance()
L_0000: Local var 0: BattleTech.Rendering.FootstepManager
L_0000: ldnull
L_0001: stloc 0 (BattleTech.Rendering.FootstepManager)
L_0002: ldloca 0 (BattleTech.Rendering.FootstepManager)
L_0004: call Boolean Prefix(BattleTech.Rendering.FootstepManager ByRef)
L_0009: brfalse Label0
L_000e: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0013: ldnull
L_0014: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0019: brfalse Label1
L_001e: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0023: br Label3
L_0028: Label1
L_0028: ldtoken BattleTech.Rendering.FootstepManager
L_002d: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0032: call UnityEngine.Object FindObjectOfType(System.Type)
L_0037: castclass BattleTech.Rendering.FootstepManager
L_003c: stsfld BattleTech.Rendering.FootstepManager _instance
L_0041: ldsfld BattleTech.Rendering.FootstepManager _instance
L_0046: ldnull
L_0047: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004c: brfalse Label2
L_0051: ldstr "Footstep Manager"
L_0056: newobj Void .ctor(String)
L_005b: callvirt BattleTech.Rendering.FootstepManager AddComponent[FootstepManager]()
L_0060: stsfld BattleTech.Rendering.FootstepManager _instance
L_0065: Label2
L_0065: ldsfld BattleTech.Rendering.FootstepManager _instance
L_006a: Label3
L_006a: stloc 0 (BattleTech.Rendering.FootstepManager)
L_006b: Label0
L_006b: ldloc 0 (BattleTech.Rendering.FootstepManager)
L_006c: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldsfld HBS.Logging.ILog gameInfoLogger
L_001b: ldstr "CombatGameState Destroyed: {0}"
L_0020: call System.DateTime get_UtcNow()
L_0025: stloc.0
L_0026: ldloca.s 0 (System.DateTime)
L_0028: ldstr "ddd MMM d yyyy HH:mm:ss"
L_002d: call System.String ToString(System.String)
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void Log(System.Object)
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: brfalse Label1
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: newobj Void .ctor()
L_0052: dup
L_0053: call BattleTech.GameInstance get_BattleTechGame()
L_0058: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_005d: callvirt Boolean IsNetworkGameActive()
L_0062: callvirt Void set_IsNetworkGame(Boolean)
L_0067: callvirt Void PublishMessage(MessageCenterMessage)
L_006c: Label1
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: brfalse Label2
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: callvirt Void OnCombatGameDestroyed()
L_0082: ldarg.0
L_0083: ldnull
L_0084: call Void set_StackManager(BattleTech.StackManager)
L_0089: Label2
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: brfalse Label3
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: callvirt Void OnCombatGameDestroyed()
L_009f: Label3
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: brfalse Label4
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label4
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: brfalse Label5
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: ldc.i4.3
L_00c7: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00cc: Label5
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: brfalse Label6
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: callvirt Void Dispose()
L_00e2: Label6
L_00e2: call Boolean get_HasInstance()
L_00e7: brfalse Label7
L_00ec: call HBS.DebugConsole.DebugConsole get_Instance()
L_00f1: ldarg.0
L_00f2: ldftn Void DebugConsoleOnBeforeDump()
L_00f8: newobj Void .ctor(Object, IntPtr)
L_00fd: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0102: Label7
L_0102: call Boolean get_HasInstance()
L_0107: brfalse Label8
L_010c: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0111: callvirt Void OnCombatSceneEnd()
L_0116: Label8
L_0116: ldnull
L_0117: call Void set_destructionConstantsComponent(DestructionConstants)
L_011c: call Void ClearStaticData()
L_0121: call Void ClearStaticData()
L_0126: call Void ClearStaticData()
L_012b: call Void ClearStaticData()
L_0130: call Void ClearStaticData()
L_0135: ldsfld HBS.Logging.ILog gameInfoLogger
L_013a: ldstr "CombatGameState destroyed: {0}"
L_013f: call System.DateTime get_UtcNow()
L_0144: stloc.0
L_0145: ldloca.s 0 (System.DateTime)
L_0147: ldstr "ddd MMM d yyyy HH:mm:ss"
L_014c: call System.String ToString(System.String)
L_0151: call System.String Format(System.String, System.Object)
L_0156: callvirt Void Log(System.Object)
L_015b: Label0
L_015b: ret
DONE

### Patch BattleTech.MapMetaDataExporter, Void GenerateTerrainData(UnityEngine.Terrain, Boolean)
L_0000: Local var 0: BattleTech.MapTerrainDataCell
L_0000: Local var 1: TerrainGenerator
L_0000: Local var 2: BattleTech.SplatMapInfo
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.TerrainValues
L_0000: ldarg.0
L_0001: ldfld BattleTech.MapMetaData mapMetaData
L_0006: brtrue Label1
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: stfld BattleTech.MapMetaData mapMetaData
L_0016: Label1
L_0016: ldarg.0
L_0017: call Void RebuildEncounterLayerList()
L_001c: ldsfld System.Boolean forceSaveMapMetaData
L_0021: brfalse Label2
L_0026: br Label9
L_002b: Label2
L_002b: ldarg.1
L_002c: callvirt TerrainGenerator GetComponent[TerrainGenerator]()
L_0031: stloc.1
L_0032: ldarg.0
L_0033: ldfld BattleTech.MapMetaData mapMetaData
L_0038: ldloc.1
L_0039: ldfld Biome biome
L_003e: ldfld Biome+BIOMESKIN biomeSkin
L_0043: stfld Biome+BIOMESKIN biomeSkin
L_0048: ldarg.1
L_0049: callvirt BattleTech.SplatMapInfo GetComponent[SplatMapInfo]()
L_004e: stloc.2
L_004f: ldloc.2
L_0050: ldnull
L_0051: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0056: brfalse Label3
L_005b: ldsfld HBS.Logging.ILog logger
L_0060: ldstr "Without the SplatMapInfo component on the terrain, we can't have any terrain data from design."
L_0065: ldarg.1
L_0066: callvirt Void LogError(System.Object, UnityEngine.Object)
L_006b: br Label4
L_0070: Label3
L_0070: ldloc.2
L_0071: callvirt Void LoadSplatData()
L_0076: Label4
L_0076: ldarg.0
L_0077: ldfld BattleTech.MapMetaData mapMetaData
L_007c: ldarg.1
L_007d: callvirt UnityEngine.TerrainData get_terrainData()
L_0082: callvirt UnityEngine.Vector3 get_size()
L_0087: ldfld System.Single z
L_008c: conv.i4
L_008d: ldsfld System.Int32 cellSize
L_0092: div
L_0093: ldarg.1
L_0094: callvirt UnityEngine.TerrainData get_terrainData()
L_0099: callvirt UnityEngine.Vector3 get_size()
L_009e: ldfld System.Single x
L_00a3: conv.i4
L_00a4: ldsfld System.Int32 cellSize
L_00a9: div
L_00aa: newobj Void .ctor(Int32, Int32)
L_00af: stfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_00b4: ldarg.1
L_00b5: callvirt UnityEngine.TerrainData get_terrainData()
L_00ba: callvirt UnityEngine.Vector3 get_size()
L_00bf: ldfld System.Single z
L_00c4: stloc.3
L_00c5: ldarg.1
L_00c6: callvirt UnityEngine.TerrainData get_terrainData()
L_00cb: callvirt UnityEngine.Vector3 get_size()
L_00d0: ldfld System.Single x
L_00d5: stloc.s 4 (System.Single)
L_00d7: ldsfld System.Int32 cellSize
L_00dc: conv.r4
L_00dd: ldc.r4 2
L_00e2: div
L_00e3: stloc.s 5 (System.Single)
L_00e5: ldloc.s 5 (System.Single)
L_00e7: stloc.s 6 (System.Single)
L_00e9: br Label5
L_00ee: Label8
L_00ee: ldloc.s 5 (System.Single)
L_00f0: stloc.s 7 (System.Single)
L_00f2: br Label6
L_00f7: Label7
L_00f7: newobj Void .ctor()
L_00fc: stloc.0
L_00fd: ldloc.0
L_00fe: ldarg.0
L_00ff: ldfld BattleTech.MapMetaData mapMetaData
L_0104: stfld BattleTech.MapMetaData mapMetaData
L_0109: ldloc.s 7 (System.Single)
L_010b: ldloc.s 5 (System.Single)
L_010d: sub
L_010e: conv.i4
L_010f: stloc.s 8 (System.Int32)
L_0111: ldloc.s 6 (System.Single)
L_0113: ldloc.s 5 (System.Single)
L_0115: sub
L_0116: conv.i4
L_0117: stloc.s 9 (System.Int32)
L_0119: ldarg.1
L_011a: ldloc.s 8 (System.Int32)
L_011c: conv.r4
L_011d: ldloc.s 5 (System.Single)
L_011f: sub
L_0120: ldloc.s 9 (System.Int32)
L_0122: conv.r4
L_0123: ldloc.s 5 (System.Single)
L_0125: sub
L_0126: ldsfld System.Int32 cellSize
L_012b: ldloc.2
L_012c: call BattleTech.TerrainValues CalculateAverageTerrainValues(UnityEngine.Terrain, Single, Single, Int32, BattleTech.SplatMapInfo)
L_0131: stloc.s 10 (BattleTech.TerrainValues)
L_0133: ldloc.0
L_0134: ldloc.s 10 (BattleTech.TerrainValues)
L_0136: ldfld System.Single averageHeight
L_013b: stfld System.Single terrainHeight
L_0140: ldloc.0
L_0141: ldloc.s 10 (BattleTech.TerrainValues)
L_0143: ldfld System.Single averageSteepness
L_0148: stfld System.Single terrainSteepness
L_014d: ldloc.0
L_014e: ldloc.s 10 (BattleTech.TerrainValues)
L_0150: ldfld BattleTech.TerrainMaskFlags terrainMaskFlags
L_0155: stfld BattleTech.TerrainMaskFlags terrainMask
L_015a: ldarg.0
L_015b: ldfld BattleTech.MapMetaData mapMetaData
L_0160: ldfld BattleTech.MapTerrainDataCell[,] mapTerrainDataCells
L_0165: ldloc.s 9 (System.Int32)
L_0167: ldsfld System.Int32 cellSize
L_016c: div
L_016d: ldloc.s 8 (System.Int32)
L_016f: ldsfld System.Int32 cellSize
L_0174: div
L_0175: ldloc.0
L_0176: call Void Set(Int32, Int32, BattleTech.MapTerrainDataCell)
L_017b: ldloc.s 7 (System.Single)
L_017d: ldsfld System.Int32 cellSize
L_0182: conv.r4
L_0183: add
L_0184: stloc.s 7 (System.Single)
L_0186: Label6
L_0186: ldloc.s 7 (System.Single)
L_0188: ldloc.s 4 (System.Single)
L_018a: blt Label7
L_018f: ldloc.s 6 (System.Single)
L_0191: ldsfld System.Int32 cellSize
L_0196: conv.r4
L_0197: add
L_0198: stloc.s 6 (System.Single)
L_019a: Label5
L_019a: ldloc.s 6 (System.Single)
L_019c: ldloc.3
L_019d: blt Label8
L_01a2: Label9
L_01a2: ldarg.0
L_01a3: ldarg 1
L_01a9: ldarg 2
L_01af: call Void Postfix(BattleTech.MapMetaDataExporter, UnityEngine.Terrain, Boolean)
L_01b4: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, BattleTech.WeaponHitInfo GenerateHitInfo(BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single)
L_0000: Local var 0: BattleTech.WeaponHitInfo
L_0000: Local var 1: System.Single
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: BattleTech.LineOfFireLevel
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.String
L_0000: Local var 6: BattleTech.WeaponType
L_0000: Local var 7: BattleTech.WeaponHitInfo
L_0000: ldloca 7 (BattleTech.WeaponHitInfo)
L_0002: initobj BattleTech.WeaponHitInfo
L_0008: ldarg.0
L_0009: ldarg 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldarg 4
L_0021: ldarg 5
L_0027: ldarg 6
L_002d: ldloca 7 (BattleTech.WeaponHitInfo)
L_002f: call Boolean Prefix(AttackSequence, BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single, BattleTech.WeaponHitInfo ByRef)
L_0034: brfalse Label0
L_0039: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_003b: initobj BattleTech.WeaponHitInfo
L_0041: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0043: ldarg.0
L_0044: ldfld BattleTech.AbstractActor attacker
L_0049: callvirt System.String get_GUID()
L_004e: stfld System.String attackerId
L_0053: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0055: ldarg.0
L_0056: ldfld BattleTech.ICombatant chosenTarget
L_005b: callvirt System.String get_GUID()
L_0060: stfld System.String targetId
L_0065: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0067: ldarg.s 4
L_0069: stfld System.Int32 numberOfShots
L_006e: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0070: ldarg.0
L_0071: ldfld System.Int32 stackItemUID
L_0076: stfld System.Int32 stackItemUID
L_007b: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_007d: ldarg.0
L_007e: ldfld System.Int32 id
L_0083: stfld System.Int32 attackSequenceId
L_0088: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_008a: ldarg.2
L_008b: stfld System.Int32 attackGroupIndex
L_0090: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0092: ldarg.3
L_0093: stfld System.Int32 attackWeaponIndex
L_0098: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_009a: ldarg.s 4
L_009c: newarr System.Single
L_00a1: stfld System.Single[] toHitRolls
L_00a6: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00a8: ldarg.s 4
L_00aa: newarr System.Single
L_00af: stfld System.Single[] locationRolls
L_00b4: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00b6: ldarg.s 4
L_00b8: newarr System.Single
L_00bd: stfld System.Single[] dodgeRolls
L_00c2: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00c4: ldarg.s 4
L_00c6: newarr System.Boolean
L_00cb: stfld System.Boolean[] dodgeSuccesses
L_00d0: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00d2: ldarg.s 4
L_00d4: newarr System.Int32
L_00d9: stfld System.Int32[] hitLocations
L_00de: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00e0: ldarg.s 4
L_00e2: newarr UnityEngine.Vector3
L_00e7: stfld UnityEngine.Vector3[] hitPositions
L_00ec: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00ee: ldarg.s 4
L_00f0: newarr System.Int32
L_00f5: stfld System.Int32[] hitVariance
L_00fa: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_00fc: ldarg.s 4
L_00fe: newarr BattleTech.AttackImpactQuality
L_0103: stfld BattleTech.AttackImpactQuality[] hitQualities
L_0108: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_010a: ldarg.s 4
L_010c: newarr System.String
L_0111: stfld System.String[] secondaryTargetIds
L_0116: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0118: ldarg.s 4
L_011a: newarr System.Int32
L_011f: stfld System.Int32[] secondaryHitLocations
L_0124: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0126: ldarg.s 4
L_0128: newarr BattleTech.AttackDirection
L_012d: stfld BattleTech.AttackDirection[] attackDirections
L_0132: ldsfld HBS.Logging.ILog hitLogger
L_0137: callvirt Boolean get_IsLogEnabled()
L_013c: brfalse Label1
L_0141: ldarg.0
L_0142: call BattleTech.AttackDirector get_Director()
L_0147: callvirt BattleTech.CombatGameState get_Combat()
L_014c: callvirt BattleTech.LineOfSight get_LOS()
L_0151: ldarg.0
L_0152: ldfld BattleTech.AbstractActor attacker
L_0157: ldarg.0
L_0158: ldfld UnityEngine.Vector3 attackPosition
L_015d: ldarg.0
L_015e: ldfld BattleTech.ICombatant chosenTarget
L_0163: ldarg.0
L_0164: ldfld BattleTech.ICombatant chosenTarget
L_0169: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_016e: ldarg.0
L_016f: ldfld BattleTech.ICombatant chosenTarget
L_0174: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0179: ldloca.s 2 (UnityEngine.Vector3)
L_017b: callvirt BattleTech.LineOfFireLevel GetLineOfFire(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3 ByRef)
L_0180: stloc.3
L_0181: ldarg.0
L_0182: call BattleTech.AttackDirector get_Director()
L_0187: callvirt BattleTech.CombatGameState get_Combat()
L_018c: callvirt BattleTech.ToHit get_ToHit()
L_0191: ldarg.0
L_0192: ldfld BattleTech.AbstractActor attacker
L_0197: ldarg.1
L_0198: ldarg.0
L_0199: ldfld BattleTech.ICombatant chosenTarget
L_019e: ldarg.0
L_019f: ldfld UnityEngine.Vector3 attackPosition
L_01a4: ldarg.0
L_01a5: ldfld BattleTech.AbstractActor attacker
L_01aa: ldfld UnityEngine.Vector3 HighestLOSPosition
L_01af: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_01b4: ldarg.0
L_01b5: ldfld BattleTech.ICombatant chosenTarget
L_01ba: callvirt UnityEngine.Vector3 get_TargetPosition()
L_01bf: ldloc.3
L_01c0: ldarg.0
L_01c1: ldfld System.Boolean isMoraleAttack
L_01c6: callvirt Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_01cb: stloc.s 4 (System.Single)
L_01cd: ldarg.0
L_01ce: call BattleTech.AttackDirector get_Director()
L_01d3: callvirt BattleTech.CombatGameState get_Combat()
L_01d8: callvirt BattleTech.ToHit get_ToHit()
L_01dd: ldarg.0
L_01de: ldfld BattleTech.AbstractActor attacker
L_01e3: ldarg.1
L_01e4: ldarg.0
L_01e5: ldfld BattleTech.ICombatant chosenTarget
L_01ea: ldarg.0
L_01eb: ldfld UnityEngine.Vector3 attackPosition
L_01f0: ldarg.0
L_01f1: ldfld BattleTech.AbstractActor attacker
L_01f6: ldfld UnityEngine.Vector3 HighestLOSPosition
L_01fb: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0200: ldarg.0
L_0201: ldfld BattleTech.ICombatant chosenTarget
L_0206: callvirt UnityEngine.Vector3 get_TargetPosition()
L_020b: ldloc.3
L_020c: ldarg.0
L_020d: ldfld System.Boolean isMoraleAttack
L_0212: callvirt System.String GetAllModifiersDescription(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0217: stloc.s 5 (System.String)
L_0219: ldarg.0
L_021a: ldfld BattleTech.AbstractActor attacker
L_021f: callvirt BattleTech.Pilot GetPilot()
L_0224: ldsfld HBS.Logging.ILog hitLogger
L_0229: ldstr "======================================== Unit Firing: {0} | Weapon: {1} | Shots: {2}"
L_022e: ldarg.0
L_022f: ldfld BattleTech.AbstractActor attacker
L_0234: callvirt System.String get_DisplayName()
L_0239: ldarg.1
L_023a: callvirt System.String get_Name()
L_023f: ldarg.s 4
L_0241: box System.Int32
L_0246: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_024b: callvirt Void Log(System.Object)
L_0250: ldsfld HBS.Logging.ILog hitLogger
L_0255: ldstr "======================================== Hit Info: GROUP {0} | ID {1}"
L_025a: ldarg.2
L_025b: box System.Int32
L_0260: ldarg.3
L_0261: box System.Int32
L_0266: call System.String Format(System.String, System.Object, System.Object)
L_026b: callvirt Void Log(System.Object)
L_0270: ldsfld HBS.Logging.ILog hitLogger
L_0275: ldstr "======================================== MODIFIERS: {0}... FINAL: [[ {1} ]] "
L_027a: ldloc.s 5 (System.String)
L_027c: ldloc.s 4 (System.Single)
L_027e: box System.Single
L_0283: call System.String Format(System.String, System.Object, System.Object)
L_0288: callvirt Void Log(System.Object)
L_028d: brfalse Label2
L_0292: ldsfld HBS.Logging.ILog hitLogger
L_0297: ldarg.0
L_0298: call BattleTech.AttackDirector get_Director()
L_029d: callvirt BattleTech.CombatGameState get_Combat()
L_02a2: callvirt BattleTech.ToHit get_ToHit()
L_02a7: ldarg.0
L_02a8: ldfld BattleTech.AbstractActor attacker
L_02ad: callvirt System.String GetBaseToHitChanceDesc(BattleTech.AbstractActor)
L_02b2: callvirt Void Log(System.Object)
L_02b7: br Label3
L_02bc: Label2
L_02bc: ldsfld HBS.Logging.ILog hitLogger
L_02c1: ldstr "======================================== Gunnery Check: NO PILOT"
L_02c6: call System.Object[] Empty[Object]()
L_02cb: call System.String Format(System.String, System.Object[])
L_02d0: callvirt Void Log(System.Object)
L_02d5: Label1
L_02d5: Label3
L_02d5: ldarg.0
L_02d6: call BattleTech.AttackDirector get_Director()
L_02db: callvirt BattleTech.CombatGameState get_Combat()
L_02e0: callvirt BattleTech.ToHit get_ToHit()
L_02e5: ldarg.0
L_02e6: ldfld BattleTech.AbstractActor attacker
L_02eb: ldarg.1
L_02ec: ldarg.0
L_02ed: ldfld BattleTech.ICombatant chosenTarget
L_02f2: ldarg.0
L_02f3: ldfld UnityEngine.Vector3 attackPosition
L_02f8: ldarg.0
L_02f9: ldfld BattleTech.ICombatant chosenTarget
L_02fe: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0303: ldarg.0
L_0304: ldfld System.Int32 numTargets
L_0309: ldarg.0
L_030a: ldfld BattleTech.MeleeAttackType meleeAttackType
L_030f: ldarg.0
L_0310: ldfld System.Boolean isMoraleAttack
L_0315: callvirt Single GetToHitChance(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, Int32, BattleTech.MeleeAttackType, Boolean)
L_031a: stloc.1
L_031b: ldsfld System.Boolean TEST_KNOCKDOWN
L_0320: brfalse Label4
L_0325: ldc.r4 1
L_032a: stloc.1
L_032b: Label4
L_032b: ldsfld HBS.Logging.ILog hitLogger
L_0330: callvirt Boolean get_IsLogEnabled()
L_0335: brfalse Label5
L_033a: ldsfld HBS.Logging.ILog hitLogger
L_033f: ldstr "======================================== HIT CHANCE: [[ {0:P2} ]]"
L_0344: ldloc.1
L_0345: box System.Single
L_034a: call System.String Format(System.String, System.Object)
L_034f: callvirt Void Log(System.Object)
L_0354: Label5
L_0354: ldarg.1
L_0355: callvirt BattleTech.WeaponType get_Type()
L_035a: stloc.s 6 (BattleTech.WeaponType)
L_035c: ldloc.s 6 (BattleTech.WeaponType)
L_035e: ldc.i4.1
L_035f: sub
L_0360: switch Labels6,7,8,9,10,11,12,13,14
L_0389: br Label15
L_038e: Label6
L_038e: Label7
L_038e: Label8
L_038e: Label9
L_038e: Label12
L_038e: Label14
L_038e: ldarg.0
L_038f: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0391: ldarg.2
L_0392: ldarg.3
L_0393: ldarg.1
L_0394: ldloc.1
L_0395: ldarg.s 6
L_0397: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_039c: br Label16
L_03a1: Label13
L_03a1: ldarg.0
L_03a2: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03a4: ldarg.2
L_03a5: ldarg.3
L_03a6: ldarg.1
L_03a7: ldloc.1
L_03a8: ldarg.s 6
L_03aa: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03af: br Label17
L_03b4: Label10
L_03b4: ldarg.0
L_03b5: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03b7: ldarg.2
L_03b8: ldarg.3
L_03b9: ldarg.1
L_03ba: ldloc.1
L_03bb: ldarg.s 6
L_03bd: call Void GetClusteredHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03c2: br Label18
L_03c7: Label11
L_03c7: ldarg.0
L_03c8: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03ca: ldarg.2
L_03cb: ldarg.3
L_03cc: ldarg.1
L_03cd: ldloc.1
L_03ce: ldarg.s 6
L_03d0: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_03d5: br Label19
L_03da: Label15
L_03da: ldsfld HBS.Logging.ILog attackLogger
L_03df: ldstr "GenerateHitInfo found invalid weapon type: {0}, using basic hit info"
L_03e4: ldarg.1
L_03e5: callvirt BattleTech.WeaponType get_Type()
L_03ea: box BattleTech.WeaponType
L_03ef: call System.String Format(System.String, System.Object)
L_03f4: callvirt Void LogError(System.Object)
L_03f9: ldarg.0
L_03fa: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_03fc: ldarg.2
L_03fd: ldarg.3
L_03fe: ldarg.1
L_03ff: ldloc.1
L_0400: ldarg.s 6
L_0402: call Void GetIndividualHits(BattleTech.WeaponHitInfo ByRef, Int32, Int32, BattleTech.Weapon, Single, Single)
L_0407: Label16
L_0407: Label17
L_0407: Label18
L_0407: Label19
L_0407: ldloc.0
L_0408: stloc 7 (BattleTech.WeaponHitInfo)
L_040a: Label0
L_040a: ldloc 7 (BattleTech.WeaponHitInfo)
L_040c: ret
DONE

### Patch BattleTech.ToHit, Single GetEvasivePipsModifier(Int32, BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: ldc.r4 0
L_0005: stloc 4 (System.Single)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldloca 4 (System.Single)
L_0016: call Boolean Prefix(BattleTech.ToHit, Int32, BattleTech.Weapon, Single ByRef)
L_001b: brfalse Label0
L_0020: ldc.r4 0
L_0025: stloc.0
L_0026: ldarg.1
L_0027: ldc.i4.0
L_0028: ble Label1
L_002d: ldarg.1
L_002e: conv.r4
L_002f: ldc.r4 1
L_0034: sub
L_0035: ldarg.2
L_0036: brtrue Label2
L_003b: ldc.r4 0
L_0040: br Label3
L_0045: Label2
L_0045: ldarg.2
L_0046: callvirt BattleTech.WeaponDef get_weaponDef()
L_004b: callvirt Single get_EvasivePipsIgnored()
L_0050: Label3
L_0050: sub
L_0051: call Int32 RoundToInt(Single)
L_0056: stloc.1
L_0057: ldloc.1
L_0058: ldarg.0
L_0059: ldfld BattleTech.CombatGameState combat
L_005e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0063: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0068: ldfld System.Single[] ToHitMovingPipUMs
L_006d: ldlen
L_006e: conv.i4
L_006f: blt Label4
L_0074: ldarg.0
L_0075: ldfld BattleTech.CombatGameState combat
L_007a: callvirt BattleTech.CombatGameConstants get_Constants()
L_007f: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0084: ldfld System.Single[] ToHitMovingPipUMs
L_0089: ldlen
L_008a: conv.i4
L_008b: ldc.i4.1
L_008c: sub
L_008d: stloc.2
L_008e: ldarg.0
L_008f: ldfld BattleTech.CombatGameState combat
L_0094: callvirt BattleTech.CombatGameConstants get_Constants()
L_0099: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_009e: ldfld System.Single[] ToHitMovingPipUMs
L_00a3: ldloc.2
L_00a4: ldelem.r4
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.CombatGameState combat
L_00ab: callvirt BattleTech.CombatGameConstants get_Constants()
L_00b0: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_00b5: ldfld System.Single[] ToHitMovingPipUMs
L_00ba: ldloc.2
L_00bb: ldc.i4.1
L_00bc: sub
L_00bd: ldelem.r4
L_00be: sub
L_00bf: stloc.3
L_00c0: ldloc.0
L_00c1: ldloc.1
L_00c2: ldc.i4.1
L_00c3: add
L_00c4: conv.r4
L_00c5: ldloc.3
L_00c6: mul
L_00c7: add
L_00c8: stloc.0
L_00c9: br Label5
L_00ce: Label4
L_00ce: ldloc.1
L_00cf: ldc.i4.m1
L_00d0: ble Label6
L_00d5: ldloc.0
L_00d6: ldarg.0
L_00d7: ldfld BattleTech.CombatGameState combat
L_00dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_00e1: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_00e6: ldfld System.Single[] ToHitMovingPipUMs
L_00eb: ldloc.1
L_00ec: ldelem.r4
L_00ed: add
L_00ee: stloc.0
L_00ef: Label1
L_00ef: Label5
L_00ef: Label6
L_00ef: ldloc.0
L_00f0: stloc 4 (System.Single)
L_00f2: Label0
L_00f2: ldloc 4 (System.Single)
L_00f4: ret
DONE

### Patch AIUtil, Boolean UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.CombatGameState, UnityEngine.Vector3)
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Vector3
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Boolean UnitHasDirectLOFToTargetFromPosition(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.CombatGameState, UnityEngine.Vector3)
L_0009: brfalse Label1
L_000e: ldc.i4.1
L_000f: br Label8
L_0014: Label1
L_0014: ldarg.3
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_001b: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0020: stloc.1
L_0021: ldloca.s 1 (UnityEngine.Vector3)
L_0023: call Single get_magnitude()
L_0028: stloc.0
L_0029: ldc.i4.0
L_002a: stloc.2
L_002b: br Label2
L_0030: Label7
L_0030: ldarg.0
L_0031: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0036: ldloc.2
L_0037: callvirt BattleTech.Weapon get_Item(Int32)
L_003c: stloc.3
L_003d: ldloc.3
L_003e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0043: brfalse Label3
L_0048: ldloc.3
L_0049: callvirt Boolean get_CanFire()
L_004e: brfalse Label4
L_0053: ldloc.3
L_0054: callvirt Single get_MaxRange()
L_0059: ldloc.0
L_005a: blt Label5
L_005f: ldloc.3
L_0060: ldarg.1
L_0061: ldarg.3
L_0062: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3)
L_0067: brfalse Label6
L_006c: ldc.i4.1
L_006d: br Label9
L_0072: Label3
L_0072: Label4
L_0072: Label5
L_0072: Label6
L_0072: ldloc.2
L_0073: ldc.i4.1
L_0074: add
L_0075: stloc.2
L_0076: Label2
L_0076: ldloc.2
L_0077: ldarg.0
L_0078: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_007d: callvirt Int32 get_Count()
L_0082: blt Label7
L_0087: ldc.i4.0
L_0088: Label8
L_0088: Label9
L_0088: ret
DONE

### Patch AIUtil, Boolean UnitHasLOFToUnit(BattleTech.AbstractActor, BattleTech.AbstractActor, BattleTech.CombatGameState)
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Vector3
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.0
L_0001: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0006: ldarg.1
L_0007: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_000c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0011: stloc.1
L_0012: ldloca.s 1 (UnityEngine.Vector3)
L_0014: call Single get_magnitude()
L_0019: stloc.0
L_001a: ldc.i4.0
L_001b: stloc.2
L_001c: br Label1
L_0021: Label7
L_0021: ldarg.0
L_0022: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0027: ldloc.2
L_0028: callvirt BattleTech.Weapon get_Item(Int32)
L_002d: stloc.3
L_002e: ldloc.3
L_002f: callvirt Boolean get_CanFire()
L_0034: brfalse Label2
L_0039: ldloc.3
L_003a: callvirt Single get_MaxRange()
L_003f: ldloc.0
L_0040: blt Label3
L_0045: ldloc.3
L_0046: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_004b: brfalse Label4
L_0050: ldarg.0
L_0051: ldarg.1
L_0052: callvirt Boolean HasLOSToTargetUnit(BattleTech.ICombatant)
L_0057: brfalse Label5
L_005c: ldc.i4.1
L_005d: br Label8
L_0062: Label4
L_0062: Label5
L_0062: ldarg.2
L_0063: callvirt LOFCache get_LOFCache()
L_0068: ldarg.0
L_0069: ldarg.1
L_006a: ldloc.3
L_006b: callvirt Single get_MaxRange()
L_0070: ldarg.0
L_0071: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0076: ldarg.1
L_0077: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_007c: ldarg.0
L_007d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0082: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0087: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_008c: ldc.i4.0
L_008d: callvirt Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0092: brfalse Label6
L_0097: ldc.i4.1
L_0098: br Label9
L_009d: Label2
L_009d: Label3
L_009d: Label6
L_009d: ldloc.2
L_009e: ldc.i4.1
L_009f: add
L_00a0: stloc.2
L_00a1: Label1
L_00a1: ldloc.2
L_00a2: ldarg.0
L_00a3: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a8: callvirt Int32 get_Count()
L_00ad: blt Label7
L_00b2: ldc.i4.0
L_00b3: Label8
L_00b3: Label9
L_00b3: ret
DONE

### Patch BattleTech.AIRoleAssignment, Single EvaluateSniper(BattleTech.AbstractActor)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldc.i4.0
L_0003: stloc.1
L_0004: br Label1
L_0009: Label5
L_0009: ldarg.0
L_000a: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_000f: ldloc.1
L_0010: callvirt BattleTech.Weapon get_Item(Int32)
L_0015: stloc.2
L_0016: ldloc.2
L_0017: callvirt Boolean get_CanFire()
L_001c: brtrue Label2
L_0021: ldloc.2
L_0022: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0027: brfalse Label3
L_002c: ldc.i4.1
L_002d: stloc.0
L_002e: br Label4
L_0033: Label2
L_0033: Label3
L_0033: ldloc.1
L_0034: ldc.i4.1
L_0035: add
L_0036: stloc.1
L_0037: Label1
L_0037: ldloc.1
L_0038: ldarg.0
L_0039: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_003e: callvirt Int32 get_Count()
L_0043: blt Label5
L_0048: Label4
L_0048: ldarg.0
L_0049: call Single getDamageCentroid(BattleTech.AbstractActor)
L_004e: ldloc.0
L_004f: brtrue Label6
L_0054: ldc.r4 1
L_0059: br Label7
L_005e: Label6
L_005e: ldc.r4 2
L_0063: Label7
L_0063: mul
L_0064: ret
DONE

### Patch BattleTech.AbstractActor, BattleTech.Weapon GetLongestRangeWeapon(Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.Weapon
L_0000: Local var 2: System.Int32
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldnull
L_0007: stloc.1
L_0008: ldc.i4.0
L_0009: stloc.2
L_000a: br Label1
L_000f: Label9
L_000f: ldarg.0
L_0010: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0015: ldloc.2
L_0016: callvirt BattleTech.Weapon get_Item(Int32)
L_001b: callvirt Single get_MaxRange()
L_0020: ldloc.0
L_0021: ble.un Label2
L_0026: ldarg.0
L_0027: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_002c: ldloc.2
L_002d: callvirt BattleTech.Weapon get_Item(Int32)
L_0032: callvirt Boolean get_CanFire()
L_0037: brfalse Label3
L_003c: ldarg.2
L_003d: brfalse Label4
L_0042: ldarg.0
L_0043: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0048: ldloc.2
L_0049: callvirt BattleTech.Weapon get_Item(Int32)
L_004e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0053: brfalse Label5
L_0058: Label4
L_0058: ldarg.1
L_0059: brfalse Label6
L_005e: ldarg.0
L_005f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0064: ldloc.2
L_0065: callvirt BattleTech.Weapon get_Item(Int32)
L_006a: callvirt Boolean get_IsEnabled()
L_006f: brfalse Label7
L_0074: ldarg.0
L_0075: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_007a: ldloc.2
L_007b: callvirt BattleTech.Weapon get_Item(Int32)
L_0080: callvirt Boolean get_WillFire()
L_0085: brfalse Label8
L_008a: Label6
L_008a: ldarg.0
L_008b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0090: ldloc.2
L_0091: callvirt BattleTech.Weapon get_Item(Int32)
L_0096: stloc.1
L_0097: ldloc.1
L_0098: callvirt Single get_MaxRange()
L_009d: stloc.0
L_009e: Label2
L_009e: Label3
L_009e: Label5
L_009e: Label7
L_009e: Label8
L_009e: ldloc.2
L_009f: ldc.i4.1
L_00a0: add
L_00a1: stloc.2
L_00a2: Label1
L_00a2: ldloc.2
L_00a3: ldarg.0
L_00a4: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00a9: callvirt Int32 get_Count()
L_00ae: blt Label9
L_00b3: ldloc.1
L_00b4: ret
DONE

### Patch BattleTech.AbstractActor, Boolean HasIndirectLOFToTargetUnit(UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, Boolean)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.Weapon
L_0000: Local var 2: System.Int32
L_0000: ldarg.3
L_0001: isinst BattleTech.AbstractActor
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldarg.0
L_000e: ldloc.0
L_000f: callvirt Boolean HasLOSToTargetUnit(BattleTech.ICombatant)
L_0014: brtrue Label2
L_0019: ldc.i4.0
L_001a: br Label14
L_001f: Label1
L_001f: Label2
L_001f: ldarg.0
L_0020: ldarg.s 4
L_0022: ldc.i4.0
L_0023: call BattleTech.Weapon GetLongestRangeWeapon(Boolean, Boolean)
L_0028: stloc.1
L_0029: ldloc.1
L_002a: brfalse Label3
L_002f: ldarg.1
L_0030: ldarg.3
L_0031: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0036: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_003b: ldloc.1
L_003c: callvirt Single get_MaxRange()
L_0041: ble.un Label4
L_0046: Label3
L_0046: ldc.i4.0
L_0047: br Label15
L_004c: Label4
L_004c: ldarg.0
L_004d: ldarg.3
L_004e: ldloc.1
L_004f: callvirt Single get_MaxRange()
L_0054: ldarg.1
L_0055: ldarg.2
L_0056: ldc.i4.0
L_0057: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005c: brfalse Label5
L_0061: ldc.i4.0
L_0062: br Label16
L_0067: Label5
L_0067: ldc.i4.0
L_0068: stloc.2
L_0069: br Label6
L_006e: Label13
L_006e: ldarg.0
L_006f: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0074: ldloc.2
L_0075: callvirt BattleTech.Weapon get_Item(Int32)
L_007a: callvirt Boolean get_IsEnabled()
L_007f: brtrue Label7
L_0084: ldarg.s 4
L_0086: brtrue Label8
L_008b: Label7
L_008b: ldarg.0
L_008c: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_0091: ldloc.2
L_0092: callvirt BattleTech.Weapon get_Item(Int32)
L_0097: callvirt Boolean get_IsDisabled()
L_009c: brtrue Label9
L_00a1: ldarg.0
L_00a2: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00a7: ldloc.2
L_00a8: callvirt BattleTech.Weapon get_Item(Int32)
L_00ad: callvirt Boolean get_HasAmmo()
L_00b2: brfalse Label10
L_00b7: ldarg.0
L_00b8: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00bd: ldloc.2
L_00be: callvirt BattleTech.Weapon get_Item(Int32)
L_00c3: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00c8: brfalse Label11
L_00cd: ldarg.0
L_00ce: ldarg.3
L_00cf: ldarg.0
L_00d0: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00d5: ldloc.2
L_00d6: callvirt BattleTech.Weapon get_Item(Int32)
L_00db: callvirt Single get_MaxRange()
L_00e0: ldarg.1
L_00e1: ldarg.2
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_00e8: ldloc.2
L_00e9: callvirt BattleTech.Weapon get_Item(Int32)
L_00ee: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00f3: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_00f8: brtrue Label12
L_00fd: ldc.i4.0
L_00fe: br Label17
L_0103: Label8
L_0103: Label9
L_0103: Label10
L_0103: Label11
L_0103: Label12
L_0103: ldloc.2
L_0104: ldc.i4.1
L_0105: add
L_0106: stloc.2
L_0107: Label6
L_0107: ldloc.2
L_0108: ldarg.0
L_0109: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] weapons
L_010e: callvirt Int32 get_Count()
L_0113: blt Label13
L_0118: ldc.i4.1
L_0119: Label14
L_0119: Label15
L_0119: Label16
L_0119: Label17
L_0119: ret
DONE

### Patch BattleTech.AbstractActor, Boolean HasLOFToTargetUnit(BattleTech.ICombatant, BattleTech.Weapon)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: callvirt Single get_MaxRange()
L_0008: ldarg.2
L_0009: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_000e: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, Boolean)
L_0013: ret
DONE

### Patch BattleTech.HostileDamageFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label8
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.1
L_0026: callvirt BattleTech.CombatGameState get_Combat()
L_002b: callvirt LOFCache get_LOFCache()
L_0030: ldarg.1
L_0031: ldarg.s 4
L_0033: ldloc.2
L_0034: callvirt Single get_MaxRange()
L_0039: ldarg.2
L_003a: ldarg.3
L_003b: ldarg.s 5
L_003d: ldarg.s 6
L_003f: ldloc.2
L_0040: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0045: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_004a: brfalse Label3
L_004f: ldloc.2
L_0050: ldarg.s 4
L_0052: ldarg.2
L_0053: ldarg.3
L_0054: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0059: brfalse Label4
L_005e: ldloc.2
L_005f: callvirt Int32 get_ShotsWhenFired()
L_0064: stloc.3
L_0065: ldarg.s 4
L_0067: isinst BattleTech.AbstractActor
L_006c: stloc.s 5 (BattleTech.AbstractActor)
L_006e: ldarg.s 9
L_0070: brfalse Label5
L_0075: ldloc.s 5 (BattleTech.AbstractActor)
L_0077: brfalse Label6
L_007c: ldloc.s 5 (BattleTech.AbstractActor)
L_007e: callvirt Int32 get_EvasivePipsCurrent()
L_0083: stloc.s 8 (System.Int32)
L_0085: ldloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: ldarg.s 5
L_008b: ldloc.s 5 (BattleTech.AbstractActor)
L_008d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0092: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0097: stloc.s 9 (UnityEngine.Vector3)
L_0099: ldloca.s 9 (UnityEngine.Vector3)
L_009b: call Single get_magnitude()
L_00a0: ldarg.s 8
L_00a2: ldarg.s 7
L_00a4: ldc.i4.0
L_00a5: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00aa: callvirt Void set_EvasivePipsCurrent(Int32)
L_00af: ldloc.2
L_00b0: ldarg.s 4
L_00b2: ldc.i4.1
L_00b3: ldarg.2
L_00b4: ldarg.s 5
L_00b6: ldc.i4.1
L_00b7: ldarg.s 7
L_00b9: ldc.i4.0
L_00ba: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00bf: stloc.s 4 (System.Single)
L_00c1: ldloc.s 5 (BattleTech.AbstractActor)
L_00c3: ldloc.s 8 (System.Int32)
L_00c5: callvirt Void set_EvasivePipsCurrent(Int32)
L_00ca: br Label7
L_00cf: Label5
L_00cf: Label6
L_00cf: ldloc.2
L_00d0: ldarg.s 4
L_00d2: ldc.i4.1
L_00d3: ldarg.2
L_00d4: ldarg.s 5
L_00d6: ldc.i4.1
L_00d7: ldarg.s 7
L_00d9: ldc.i4.0
L_00da: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00df: stloc.s 4 (System.Single)
L_00e1: Label7
L_00e1: ldloc.2
L_00e2: ldc.i4.0
L_00e3: ldarg.2
L_00e4: ldarg.s 4
L_00e6: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_00eb: stloc.s 6 (System.Single)
L_00ed: ldc.r4 1
L_00f2: ldloc.2
L_00f3: callvirt Single get_HeatDamagePerShot()
L_00f8: add
L_00f9: stloc.s 7 (System.Single)
L_00fb: ldloc.0
L_00fc: ldloc.3
L_00fd: conv.r4
L_00fe: ldloc.s 4 (System.Single)
L_0100: mul
L_0101: ldloc.s 6 (System.Single)
L_0103: mul
L_0104: ldloc.s 7 (System.Single)
L_0106: mul
L_0107: add
L_0108: stloc.0
L_0109: Label2
L_0109: Label3
L_0109: Label4
L_0109: ldloc.1
L_010a: ldc.i4.1
L_010b: add
L_010c: stloc.1
L_010d: Label1
L_010d: ldloc.1
L_010e: ldarg.1
L_010f: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0114: callvirt Int32 get_Count()
L_0119: blt Label8
L_011e: ldloc.0
L_011f: ldarg.1
L_0120: ldfld BehaviorTree BehaviorTree
L_0125: ldc.i4.s 44
L_0127: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_012c: callvirt Single get_FloatVal()
L_0131: mul
L_0132: ret
DONE

### Patch BattleTech.MultiAttack, BattleTech.Weapon FindWeaponToHitTarget(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant)
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.Weapon
L_0000: ldarg.2
L_0001: isinst BattleTech.Mech
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: callvirt Boolean get_IsEvasive()
L_0013: br Label2
L_0018: Label1
L_0018: ldc.i4.0
L_0019: Label2
L_0019: stloc.1
L_001a: ldc.i4.0
L_001b: stloc.2
L_001c: br Label3
L_0021: Label6
L_0021: ldarg.1
L_0022: ldloc.2
L_0023: callvirt BattleTech.Weapon get_Item(Int32)
L_0028: stloc.3
L_0029: ldarg.0
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: callvirt LOFCache get_LOFCache()
L_0034: ldarg.0
L_0035: ldarg.2
L_0036: ldloc.3
L_0037: callvirt Single get_MaxRange()
L_003c: ldarg.0
L_003d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0042: ldarg.0
L_0043: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0048: ldarg.2
L_0049: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_004e: ldarg.2
L_004f: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0054: ldloc.3
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label4
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006b: ldarg.2
L_006c: ldarg.2
L_006d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0072: ldloc.1
L_0073: ldloc.3
L_0074: ldarg.0
L_0075: callvirt Int32 get_MaxTargets()
L_007a: call Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_007f: ldc.r4 0
L_0084: ble.un Label5
L_0089: ldloc.3
L_008a: br Label7
L_008f: Label4
L_008f: Label5
L_008f: ldloc.2
L_0090: ldc.i4.1
L_0091: add
L_0092: stloc.2
L_0093: Label3
L_0093: ldloc.2
L_0094: ldarg.1
L_0095: callvirt Int32 get_Count()
L_009a: blt Label6
L_009f: ldnull
L_00a0: Label7
L_00a0: ret
DONE

### Patch BattleTech.MultiAttack, Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: System.Single
L_0000: ldc.r4 0
L_0005: stloc 3 (System.Single)
L_0006: ldarg.3
L_0007: ldarg.1
L_0008: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_000d: stloc.2
L_000e: ldloca.s 2 (UnityEngine.Vector3)
L_0010: call Single get_magnitude()
L_0015: ldarg.s 5
L_0017: callvirt Single get_MaxRange()
L_001c: ble.un Label1
L_0021: ldc.r4 0
L_0026: br Label3
L_002b: Label1
L_002b: ldarg.0
L_002c: callvirt BattleTech.CombatGameState get_Combat()
L_0031: callvirt LOFCache get_LOFCache()
L_0036: ldarg.0
L_0037: ldarg.2
L_0038: ldarg.s 5
L_003a: callvirt Single get_MaxRange()
L_003f: ldarg.0
L_0040: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0045: ldarg.0
L_0046: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004b: ldarg.2
L_004c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0051: ldarg.2
L_0052: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0057: ldarg.s 5
L_0059: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005e: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0063: brtrue Label2
L_0068: ldc.r4 0
L_006d: br Label4
L_0072: Label2
L_0072: ldarg.s 5
L_0074: callvirt Int32 get_ShotsWhenFired()
L_0079: ldarg.s 5
L_007b: ldarg.2
L_007c: ldarg.s 6
L_007e: ldarg.1
L_007f: ldarg.3
L_0080: ldc.i4.1
L_0081: ldarg.s 4
L_0083: ldc.i4.0
L_0084: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0089: stloc.0
L_008a: ldarg.s 5
L_008c: ldc.i4.0
L_008d: ldarg.1
L_008e: ldarg.2
L_008f: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0094: stloc.1
L_0095: conv.r4
L_0096: ldloc.0
L_0097: mul
L_0098: ldloc.1
L_0099: mul
L_009a: Label3
L_009a: Label4
L_009a: stloc 3 (System.Single)
L_009b: ldarg 0
L_00a1: ldarg 1
L_00a7: ldarg 2
L_00ad: ldarg 3
L_00b3: ldarg 4
L_00b9: ldarg 5
L_00bf: ldarg 6
L_00c5: ldloca 3 (System.Single)
L_00c7: call Void Postfix(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32, Single ByRef)
L_00cc: ldloc 3 (System.Single)
L_00cd: ret
DONE

### Patch BattleTech.MultiAttack, System.Collections.Generic.List`1[BattleTech.Weapon] PartitionWeaponListToKillTarget(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.Weapon], BattleTech.ICombatant, Single)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.Collections.Generic.KeyValuePair`2[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.Weapon
L_0000: Local var 6: BattleTech.Mech
L_0000: Local var 7: System.Boolean
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.Weapon
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Collections.Generic.KeyValuePair`2[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.s 4 (System.Int32)
L_0009: br Label1
L_000e: Label5
L_000e: ldarg.1
L_000f: ldloc.s 4 (System.Int32)
L_0011: callvirt BattleTech.Weapon get_Item(Int32)
L_0016: stloc.s 5 (BattleTech.Weapon)
L_0018: ldarg.2
L_0019: isinst BattleTech.Mech
L_001e: stloc.s 6 (BattleTech.Mech)
L_0020: ldarg.0
L_0021: callvirt BattleTech.CombatGameState get_Combat()
L_0026: callvirt LOFCache get_LOFCache()
L_002b: ldarg.0
L_002c: ldarg.2
L_002d: ldloc.s 5 (BattleTech.Weapon)
L_002f: callvirt Single get_MaxRange()
L_0034: ldarg.0
L_0035: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_003a: ldarg.0
L_003b: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0040: ldarg.2
L_0041: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0046: ldarg.2
L_0047: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004c: ldloc.s 5 (BattleTech.Weapon)
L_004e: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0053: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0058: brfalse Label2
L_005d: ldloc.s 6 (BattleTech.Mech)
L_005f: brfalse Label3
L_0064: ldloc.s 6 (BattleTech.Mech)
L_0066: callvirt Boolean get_IsEvasive()
L_006b: br Label4
L_0070: Label3
L_0070: ldc.i4.0
L_0071: Label4
L_0071: stloc.s 7 (System.Boolean)
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_007a: ldarg.2
L_007b: ldarg.2
L_007c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0081: ldloc.s 7 (System.Boolean)
L_0083: ldloc.s 5 (BattleTech.Weapon)
L_0085: ldarg.0
L_0086: callvirt Int32 get_MaxTargets()
L_008b: call Single GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.ICombatant, UnityEngine.Vector3, Boolean, BattleTech.Weapon, Int32)
L_0090: stloc.s 8 (System.Single)
L_0092: ldloc.0
L_0093: ldloc.s 5 (BattleTech.Weapon)
L_0095: ldloc.s 8 (System.Single)
L_0097: newobj Void .ctor(Weapon, Single)
L_009c: callvirt Void Add(System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_00a1: Label2
L_00a1: ldloc.s 4 (System.Int32)
L_00a3: ldc.i4.1
L_00a4: add
L_00a5: stloc.s 4 (System.Int32)
L_00a7: Label1
L_00a7: ldloc.s 4 (System.Int32)
L_00a9: ldarg.1
L_00aa: callvirt Int32 get_Count()
L_00af: blt Label5
L_00b4: ldloc.0
L_00b5: ldsfld System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]] <>9__3_0
L_00ba: dup
L_00bb: brtrue Label6
L_00c0: pop
L_00c1: ldsfld BattleTech.MultiAttack+<>c <>9
L_00c6: ldftn Int32 <PartitionWeaponListToKillTarget>b__3_0(System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single], System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_00cc: newobj Void .ctor(Object, IntPtr)
L_00d1: dup
L_00d2: stsfld System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]] <>9__3_0
L_00d7: Label6
L_00d7: callvirt Void Sort(System.Comparison`1[System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single]])
L_00dc: ldloc.0
L_00dd: callvirt Void Reverse()
L_00e2: ldc.r4 0
L_00e7: stloc.1
L_00e8: ldarg.2
L_00e9: call Single MinHitPoints(BattleTech.ICombatant)
L_00ee: ldarg.3
L_00ef: mul
L_00f0: stloc.2
L_00f1: newobj Void .ctor()
L_00f6: stloc.3
L_00f7: ldc.i4.0
L_00f8: stloc.s 9 (System.Int32)
L_00fa: br Label7
L_00ff: Label9
L_00ff: ldloc.0
L_0100: ldloc.s 9 (System.Int32)
L_0102: callvirt System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single] get_Item(Int32)
L_0107: stloc.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_0109: ldloca.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_010b: call BattleTech.Weapon get_Key()
L_0110: stloc.s 10 (BattleTech.Weapon)
L_0112: ldloc.0
L_0113: ldloc.s 9 (System.Int32)
L_0115: callvirt System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single] get_Item(Int32)
L_011a: stloc.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_011c: ldloca.s 12 (System.Collections.Generic.KeyValuePair`2[BattleTech.Weapon,System.Single])
L_011e: call Single get_Value()
L_0123: stloc.s 11 (System.Single)
L_0125: ldloc.1
L_0126: ldloc.s 11 (System.Single)
L_0128: add
L_0129: stloc.1
L_012a: ldloc.3
L_012b: ldloc.s 10 (BattleTech.Weapon)
L_012d: callvirt Void Add(BattleTech.Weapon)
L_0132: ldloc.1
L_0133: ldloc.2
L_0134: blt.un Label8
L_0139: ldloc.3
L_013a: br Label10
L_013f: Label8
L_013f: ldloc.s 9 (System.Int32)
L_0141: ldc.i4.1
L_0142: add
L_0143: stloc.s 9 (System.Int32)
L_0145: Label7
L_0145: ldloc.s 9 (System.Int32)
L_0147: ldloc.0
L_0148: callvirt Int32 get_Count()
L_014d: blt Label9
L_0152: ldnull
L_0153: Label10
L_0153: ret
DONE

### Patch BattleTech.MultiAttack, Boolean ValidateMultiAttackOrder(MultiTargetAttackOrderInfo, BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: AttackOrderInfo
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[AttackOrderInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: AttackOrderInfo
L_0000: Local var 7: System.String
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: BattleTech.Weapon
L_0000: Local var 10: BattleTech.ICombatant
L_0000: ldstr "Multiattack validation"
L_0005: ldarg.1
L_0006: ldstr "AI.DecisionMaking"
L_000b: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_0010: ldc.i4.0
L_0011: stloc.1
L_0012: br Label1
L_0017: Label5
L_0017: ldarg.0
L_0018: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_001d: ldloc.1
L_001e: callvirt AttackOrderInfo get_Item(Int32)
L_0023: stloc.2
L_0024: ldstr "SubAttack #{0}: target {1} {2}"
L_0029: ldloc.1
L_002a: box System.Int32
L_002f: ldloc.2
L_0030: ldfld BattleTech.ICombatant TargetUnit
L_0035: callvirt System.String get_GUID()
L_003a: ldloc.2
L_003b: ldfld BattleTech.ICombatant TargetUnit
L_0040: callvirt System.String get_DisplayName()
L_0045: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_004a: ldstr "AI.DecisionMaking"
L_004f: call Void LogAI(System.String, System.String)
L_0054: ldloc.2
L_0055: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
L_005a: callvirt Enumerator GetEnumerator()
L_005f: stloc.3
.try
{
	L_0060: br Label2
	L_0065: Label3
	L_0065: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0067: call BattleTech.Weapon get_Current()
	L_006c: stloc.s 4 (BattleTech.Weapon)
	L_006e: ldstr "  Weapon {0}"
	L_0073: ldloc.s 4 (BattleTech.Weapon)
	L_0075: callvirt System.String get_Name()
	L_007a: call System.String Format(System.String, System.Object)
	L_007f: ldstr "AI.DecisionMaking"
	L_0084: call Void LogAI(System.String, System.String)
	L_0089: Label2
	L_0089: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_008b: call Boolean MoveNext()
	L_0090: brtrue Label3
	L_0095: leave Label4
	L_009a: leave (autogenerated)
} // end try
.finally
{
	L_009f: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_00a1: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_00a7: callvirt Void Dispose()
	L_00ac: endfinally
	L_00ad: leave (autogenerated)
} // end handler
L_00ae: Label4
L_00ae: ldloc.1
L_00af: ldc.i4.1
L_00b0: add
L_00b1: stloc.1
L_00b2: Label1
L_00b2: ldloc.1
L_00b3: ldarg.0
L_00b4: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_00b9: callvirt Int32 get_Count()
L_00be: blt Label5
L_00c3: newobj Void .ctor()
L_00c8: stloc.0
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.List`1[AttackOrderInfo] SubTargetOrders
L_00cf: callvirt Enumerator GetEnumerator()
L_00d4: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
.try
{
	L_00d6: br Label6
	L_00db: Label16
	L_00db: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_00dd: call AttackOrderInfo get_Current()
	L_00e2: stloc.s 6 (AttackOrderInfo)
	L_00e4: ldloc.s 6 (AttackOrderInfo)
	L_00e6: ldfld BattleTech.ICombatant TargetUnit
	L_00eb: callvirt System.String get_GUID()
	L_00f0: stloc.s 7 (System.String)
	L_00f2: ldloc.0
	L_00f3: ldloc.s 7 (System.String)
	L_00f5: callvirt Int32 IndexOf(System.String)
	L_00fa: ldc.i4.m1
	L_00fb: beq Label7
	L_0100: ldstr "Multiattack error: Duplicated target GUIDs"
	L_0105: ldarg.1
	L_0106: ldstr "AI.DecisionMaking"
	L_010b: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
	L_0110: ldc.i4.0
	L_0111: stloc.s 8 (System.Boolean)
	L_0113: leave Label8
	L_0118: Label7
	L_0118: ldloc.s 6 (AttackOrderInfo)
	L_011a: ldfld System.Collections.Generic.List`1[BattleTech.Weapon] Weapons
	L_011f: callvirt Enumerator GetEnumerator()
	L_0124: stloc.3
	.try
	{
		L_0125: br Label9
		L_012a: Label14
		L_012a: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_012c: call BattleTech.Weapon get_Current()
		L_0131: stloc.s 9 (BattleTech.Weapon)
		L_0133: ldloc.s 9 (BattleTech.Weapon)
		L_0135: callvirt Boolean get_CanFire()
		L_013a: brtrue Label10
		L_013f: ldstr "Multiattack error: weapon that cannot fire"
		L_0144: ldarg.1
		L_0145: ldstr "AI.DecisionMaking"
		L_014a: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
		L_014f: ldc.i4.0
		L_0150: stloc.s 8 (System.Boolean)
		L_0152: leave Label11
		L_0157: Label10
		L_0157: ldloc.s 6 (AttackOrderInfo)
		L_0159: ldfld BattleTech.ICombatant TargetUnit
		L_015e: stloc.s 10 (BattleTech.ICombatant)
		L_0160: ldarg.1
		L_0161: callvirt BattleTech.CombatGameState get_Combat()
		L_0166: callvirt LOFCache get_LOFCache()
		L_016b: ldarg.1
		L_016c: ldloc.s 10 (BattleTech.ICombatant)
		L_016e: ldloc.s 9 (BattleTech.Weapon)
		L_0170: callvirt Single get_MaxRange()
		L_0175: ldarg.1
		L_0176: callvirt UnityEngine.Vector3 get_CurrentPosition()
		L_017b: ldarg.1
		L_017c: callvirt UnityEngine.Quaternion get_CurrentRotation()
		L_0181: ldloc.s 10 (BattleTech.ICombatant)
		L_0183: callvirt UnityEngine.Vector3 get_CurrentPosition()
		L_0188: ldloc.s 10 (BattleTech.ICombatant)
		L_018a: callvirt UnityEngine.Quaternion get_CurrentRotation()
		L_018f: ldloc.s 9 (BattleTech.Weapon)
		L_0191: call Boolean IndirectFireCapable(BattleTech.Weapon)
		L_0196: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
		L_019b: brtrue Label12
		L_01a0: ldstr "Multiattack error: weapon that cannot fire"
		L_01a5: ldarg.1
		L_01a6: ldstr "AI.DecisionMaking"
		L_01ab: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
		L_01b0: ldc.i4.0
		L_01b1: stloc.s 8 (System.Boolean)
		L_01b3: leave Label13
		L_01b8: Label9
		L_01b8: Label12
		L_01b8: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_01ba: call Boolean MoveNext()
		L_01bf: brtrue Label14
		L_01c4: leave Label15
		L_01c9: leave (autogenerated)
	} // end try
	.finally
	{
		L_01ce: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
		L_01d0: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
		L_01d6: callvirt Void Dispose()
		L_01db: endfinally
		L_01dc: leave (autogenerated)
	} // end handler
	L_01dd: Label6
	L_01dd: Label15
	L_01dd: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_01df: call Boolean MoveNext()
	L_01e4: brtrue Label16
	L_01e9: leave Label17
	L_01ee: leave (autogenerated)
} // end try
.finally
{
	L_01f3: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[AttackOrderInfo])
	L_01f5: constrained. System.Collections.Generic.List`1+Enumerator[AttackOrderInfo]
	L_01fb: callvirt Void Dispose()
	L_0200: endfinally
	L_0201: leave (autogenerated)
} // end handler
L_0202: Label17
L_0202: ldstr "Multiattack validates OK"
L_0207: ldarg.1
L_0208: ldstr "AI.DecisionMaking"
L_020d: call Void LogAI(System.String, BattleTech.AbstractActor, System.String)
L_0212: ldc.i4.1
L_0213: br Label21
L_0218: Label8
L_0218: Label11
L_0218: Label13
L_0218: ldloc.s 8 (System.Boolean)
L_021a: Label21
L_021a: ret
DONE

### Patch BattleTech.PreferExposedAlonePositionalFactor, Void InitEvaluationForPhaseForUnit(BattleTech.AbstractActor)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Int32
L_0000: Local var 7: BattleTech.AbstractActor
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Boolean
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.Weapon
L_0000: ldarg.1
L_0001: ldfld BehaviorTree BehaviorTree
L_0006: ldc.i4 224
L_000b: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0010: callvirt Int32 get_IntVal()
L_0015: stloc.0
L_0016: ldarg.1
L_0017: ldfld BehaviorTree BehaviorTree
L_001c: ldc.i4 225
L_0021: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0026: callvirt Int32 get_IntVal()
L_002b: stloc.1
L_002c: ldloc.1
L_002d: ldloc.0
L_002e: ble Label1
L_0033: ldarg.1
L_0034: callvirt BattleTech.CombatGameState get_Combat()
L_0039: callvirt BattleTech.TurnDirector get_TurnDirector()
L_003e: callvirt Int32 get_CurrentRound()
L_0043: ldloc.0
L_0044: sub
L_0045: stloc.2
L_0046: ldarg.0
L_0047: ldloc.2
L_0048: ldarg.1
L_0049: ldfld BehaviorTree BehaviorTree
L_004e: ldc.i4 223
L_0053: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_0058: callvirt Int32 get_IntVal()
L_005d: cgt
L_005f: stfld System.Boolean exposureOK
L_0064: br Label2
L_0069: Label1
L_0069: ldarg.1
L_006a: callvirt BattleTech.CombatGameState get_Combat()
L_006f: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0074: callvirt Int32 get_CurrentRound()
L_0079: ldloc.1
L_007a: sub
L_007b: stloc.3
L_007c: ldarg.0
L_007d: ldloc.3
L_007e: ldarg.1
L_007f: ldfld BehaviorTree BehaviorTree
L_0084: ldc.i4 222
L_0089: callvirt BehaviorVariableValue GetBehaviorVariableValue(BehaviorVariableName)
L_008e: callvirt Int32 get_IntVal()
L_0093: cgt
L_0095: ldc.i4.0
L_0096: ceq
L_0098: stfld System.Boolean exposureOK
L_009d: Label2
L_009d: ldarg.0
L_009e: ldc.i4.0
L_009f: stfld System.Int32 exposedTeammateCount
L_00a4: ldarg.0
L_00a5: newobj Void .ctor()
L_00aa: stfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Single] maxRanges
L_00af: ldarg.0
L_00b0: newobj Void .ctor()
L_00b5: stfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Boolean] isIndirectFireCapable
L_00ba: ldc.i4.0
L_00bb: stloc.s 4 (System.Int32)
L_00bd: br Label3
L_00c2: Label7
L_00c2: ldarg.1
L_00c3: callvirt BattleTech.CombatGameState get_Combat()
L_00c8: callvirt ItemRegistry get_ItemRegistry()
L_00cd: ldarg.1
L_00ce: callvirt Lance get_lance()
L_00d3: ldfld System.Collections.Generic.List`1[System.String] unitGuids
L_00d8: ldloc.s 4 (System.Int32)
L_00da: callvirt System.String get_Item(Int32)
L_00df: callvirt BattleTech.AbstractActor GetItemByGUID[AbstractActor](System.String)
L_00e4: stloc.s 5 (BattleTech.AbstractActor)
L_00e6: ldloc.s 5 (BattleTech.AbstractActor)
L_00e8: brfalse Label4
L_00ed: ldloc.s 5 (BattleTech.AbstractActor)
L_00ef: callvirt Boolean get_IsDead()
L_00f4: brtrue Label5
L_00f9: ldloc.s 5 (BattleTech.AbstractActor)
L_00fb: ldarg.1
L_00fc: callvirt BattleTech.CombatGameState get_Combat()
L_0101: call Boolean IsExposedToHostileFire(BattleTech.AbstractActor, BattleTech.CombatGameState)
L_0106: brfalse Label6
L_010b: ldarg.0
L_010c: ldarg.0
L_010d: ldfld System.Int32 exposedTeammateCount
L_0112: ldc.i4.1
L_0113: add
L_0114: stfld System.Int32 exposedTeammateCount
L_0119: Label4
L_0119: Label5
L_0119: Label6
L_0119: ldloc.s 4 (System.Int32)
L_011b: ldc.i4.1
L_011c: add
L_011d: stloc.s 4 (System.Int32)
L_011f: Label3
L_011f: ldloc.s 4 (System.Int32)
L_0121: ldarg.1
L_0122: callvirt Lance get_lance()
L_0127: ldfld System.Collections.Generic.List`1[System.String] unitGuids
L_012c: callvirt Int32 get_Count()
L_0131: blt Label7
L_0136: ldc.i4.0
L_0137: stloc.s 6 (System.Int32)
L_0139: br Label8
L_013e: Label14
L_013e: ldarg.1
L_013f: ldfld BehaviorTree BehaviorTree
L_0144: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0149: ldloc.s 6 (System.Int32)
L_014b: callvirt BattleTech.ICombatant get_Item(Int32)
L_0150: isinst BattleTech.AbstractActor
L_0155: stloc.s 7 (BattleTech.AbstractActor)
L_0157: ldloc.s 7 (BattleTech.AbstractActor)
L_0159: brfalse Label9
L_015e: ldloc.s 7 (BattleTech.AbstractActor)
L_0160: callvirt Boolean get_IsDead()
L_0165: brtrue Label10
L_016a: ldc.r4 -3.402823E+38
L_016f: stloc.s 8 (System.Single)
L_0171: ldc.i4.0
L_0172: stloc.s 9 (System.Boolean)
L_0174: ldc.i4.0
L_0175: stloc.s 10 (System.Int32)
L_0177: br Label11
L_017c: Label13
L_017c: ldloc.s 7 (BattleTech.AbstractActor)
L_017e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0183: ldloc.s 10 (System.Int32)
L_0185: callvirt BattleTech.Weapon get_Item(Int32)
L_018a: stloc.s 11 (BattleTech.Weapon)
L_018c: ldloc.s 11 (BattleTech.Weapon)
L_018e: callvirt Boolean get_CanFire()
L_0193: brfalse Label12
L_0198: ldloc.s 9 (System.Boolean)
L_019a: ldloc.s 11 (BattleTech.Weapon)
L_019c: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_01a1: or
L_01a2: stloc.s 9 (System.Boolean)
L_01a4: ldloc.s 8 (System.Single)
L_01a6: ldloc.s 11 (BattleTech.Weapon)
L_01a8: callvirt Single get_MaxRange()
L_01ad: call Single Max(Single, Single)
L_01b2: stloc.s 8 (System.Single)
L_01b4: Label12
L_01b4: ldloc.s 10 (System.Int32)
L_01b6: ldc.i4.1
L_01b7: add
L_01b8: stloc.s 10 (System.Int32)
L_01ba: Label11
L_01ba: ldloc.s 10 (System.Int32)
L_01bc: ldloc.s 7 (BattleTech.AbstractActor)
L_01be: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_01c3: callvirt Int32 get_Count()
L_01c8: blt Label13
L_01cd: ldarg.0
L_01ce: ldfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Single] maxRanges
L_01d3: ldloc.s 7 (BattleTech.AbstractActor)
L_01d5: ldloc.s 8 (System.Single)
L_01d7: callvirt Void set_Item(BattleTech.AbstractActor, Single)
L_01dc: ldarg.0
L_01dd: ldfld System.Collections.Generic.Dictionary`2[BattleTech.AbstractActor,System.Boolean] isIndirectFireCapable
L_01e2: ldloc.s 7 (BattleTech.AbstractActor)
L_01e4: ldloc.s 9 (System.Boolean)
L_01e6: callvirt Void set_Item(BattleTech.AbstractActor, Boolean)
L_01eb: Label9
L_01eb: Label10
L_01eb: ldloc.s 6 (System.Int32)
L_01ed: ldc.i4.1
L_01ee: add
L_01ef: stloc.s 6 (System.Int32)
L_01f1: Label8
L_01f1: ldloc.s 6 (System.Int32)
L_01f3: ldarg.1
L_01f4: ldfld BehaviorTree BehaviorTree
L_01f9: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_01fe: callvirt Int32 get_Count()
L_0203: blt Label14
L_0208: ret
DONE

### Patch BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor, Single EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor, UnityEngine.Vector3, Single, BattleTech.MoveType, BattleTech.PathNode)
L_0000: Local var 0: UnityEngine.Quaternion
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: ldarg.0
L_0001: ldfld BattleTech.AbstractActor exposedAlly
L_0006: brtrue Label1
L_000b: ldc.r4 0
L_0010: br Label8
L_0015: Label1
L_0015: ldc.r4 0
L_001a: ldarg.3
L_001b: ldc.r4 0
L_0020: call UnityEngine.Quaternion Euler(Single, Single, Single)
L_0025: stloc.0
L_0026: ldc.r4 -3.402823E+38
L_002b: stloc.1
L_002c: ldc.i4.0
L_002d: stloc.2
L_002e: ldc.i4.0
L_002f: stloc.3
L_0030: br Label2
L_0035: Label4
L_0035: ldarg.1
L_0036: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_003b: ldloc.3
L_003c: callvirt BattleTech.Weapon get_Item(Int32)
L_0041: stloc.s 4 (BattleTech.Weapon)
L_0043: ldloc.s 4 (BattleTech.Weapon)
L_0045: callvirt Boolean get_CanFire()
L_004a: brfalse Label3
L_004f: ldloc.s 4 (BattleTech.Weapon)
L_0051: callvirt Single get_MaxRange()
L_0056: ldloc.1
L_0057: call Single Max(Single, Single)
L_005c: stloc.1
L_005d: ldloc.2
L_005e: ldloc.s 4 (BattleTech.Weapon)
L_0060: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0065: or
L_0066: stloc.2
L_0067: Label3
L_0067: ldloc.3
L_0068: ldc.i4.1
L_0069: add
L_006a: stloc.3
L_006b: Label2
L_006b: ldloc.3
L_006c: ldarg.1
L_006d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0072: callvirt Int32 get_Count()
L_0077: blt Label4
L_007c: ldc.i4.0
L_007d: stloc.2
L_007e: ldc.i4.0
L_007f: stloc.s 5 (System.Int32)
L_0081: br Label5
L_0086: Label7
L_0086: ldarg.1
L_0087: ldfld BehaviorTree BehaviorTree
L_008c: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_0091: ldloc.s 5 (System.Int32)
L_0093: callvirt BattleTech.ICombatant get_Item(Int32)
L_0098: stloc.s 6 (BattleTech.ICombatant)
L_009a: ldarg.1
L_009b: ldloc.s 6 (BattleTech.ICombatant)
L_009d: ldloc.1
L_009e: ldarg.2
L_009f: ldloc.0
L_00a0: ldloc.2
L_00a1: callvirt Boolean HasLOFToTargetUnit(BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_00a6: brfalse Label6
L_00ab: ldc.r4 1
L_00b0: br Label9
L_00b5: Label6
L_00b5: ldloc.s 5 (System.Int32)
L_00b7: ldc.i4.1
L_00b8: add
L_00b9: stloc.s 5 (System.Int32)
L_00bb: Label5
L_00bb: ldloc.s 5 (System.Int32)
L_00bd: ldarg.1
L_00be: ldfld BehaviorTree BehaviorTree
L_00c3: ldfld System.Collections.Generic.List`1[BattleTech.ICombatant] enemyUnits
L_00c8: callvirt Int32 get_Count()
L_00cd: blt Label7
L_00d2: ldc.r4 0
L_00d7: Label8
L_00d7: Label9
L_00d7: ret
DONE

### Patch BattleTech.PreferLethalDamageToRearArcFromHostileFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: UnityEngine.Quaternion
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label7
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.3
L_0026: ldarg.1
L_0027: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_002c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0031: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0036: stloc.3
L_0037: ldarg.1
L_0038: callvirt BattleTech.CombatGameState get_Combat()
L_003d: callvirt LOFCache get_LOFCache()
L_0042: ldarg.1
L_0043: ldarg.2
L_0044: ldloc.2
L_0045: callvirt Single get_MaxRange()
L_004a: ldarg.1
L_004b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0050: ldloc.3
L_0051: ldarg.3
L_0052: ldarg.s 4
L_0054: ldloc.2
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label3
L_0064: ldloc.2
L_0065: ldarg.2
L_0066: ldarg.1
L_0067: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006c: ldloc.3
L_006d: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0072: brfalse Label4
L_0077: ldloc.2
L_0078: callvirt Int32 get_ShotsWhenFired()
L_007d: stloc.s 4 (System.Int32)
L_007f: ldarg.2
L_0080: isinst BattleTech.AbstractActor
L_0085: stloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: brfalse Label5
L_008e: ldloc.s 5 (BattleTech.AbstractActor)
L_0090: callvirt Int32 get_EvasivePipsCurrent()
L_0095: stloc.s 9 (System.Int32)
L_0097: ldloc.s 5 (BattleTech.AbstractActor)
L_0099: ldloc.s 5 (BattleTech.AbstractActor)
L_009b: ldarg.3
L_009c: ldloc.s 5 (BattleTech.AbstractActor)
L_009e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a3: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00a8: stloc.s 10 (UnityEngine.Vector3)
L_00aa: ldloca.s 10 (UnityEngine.Vector3)
L_00ac: call Single get_magnitude()
L_00b1: ldarg.s 6
L_00b3: ldarg.s 5
L_00b5: ldc.i4.0
L_00b6: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00bb: callvirt Void set_EvasivePipsCurrent(Int32)
L_00c0: ldloc.2
L_00c1: ldarg.2
L_00c2: ldc.i4.1
L_00c3: ldarg.1
L_00c4: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00c9: ldarg.3
L_00ca: ldc.i4.1
L_00cb: ldarg.s 5
L_00cd: ldc.i4.0
L_00ce: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00d3: stloc.s 6 (System.Single)
L_00d5: ldloc.s 5 (BattleTech.AbstractActor)
L_00d7: ldloc.s 9 (System.Int32)
L_00d9: callvirt Void set_EvasivePipsCurrent(Int32)
L_00de: br Label6
L_00e3: Label5
L_00e3: ldloc.2
L_00e4: ldarg.2
L_00e5: ldc.i4.1
L_00e6: ldarg.1
L_00e7: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00ec: ldarg.3
L_00ed: ldc.i4.1
L_00ee: ldarg.s 5
L_00f0: ldc.i4.0
L_00f1: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00f6: stloc.s 6 (System.Single)
L_00f8: Label6
L_00f8: ldloc.2
L_00f9: ldc.i4.0
L_00fa: ldarg.1
L_00fb: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0100: ldarg.2
L_0101: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0106: stloc.s 7 (System.Single)
L_0108: ldc.r4 1
L_010d: ldloc.2
L_010e: callvirt Single get_HeatDamagePerShot()
L_0113: add
L_0114: stloc.s 8 (System.Single)
L_0116: ldloc.0
L_0117: ldloc.s 4 (System.Int32)
L_0119: conv.r4
L_011a: ldloc.s 6 (System.Single)
L_011c: mul
L_011d: ldloc.s 7 (System.Single)
L_011f: mul
L_0120: ldloc.s 8 (System.Single)
L_0122: mul
L_0123: add
L_0124: stloc.0
L_0125: Label2
L_0125: Label3
L_0125: Label4
L_0125: ldloc.1
L_0126: ldc.i4.1
L_0127: add
L_0128: stloc.1
L_0129: Label1
L_0129: ldloc.1
L_012a: ldarg.1
L_012b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0130: callvirt Int32 get_Count()
L_0135: blt Label7
L_013a: ldloc.0
L_013b: ret
DONE

### Patch BattleTech.PreferNotLethalPositionFactor, Single expectedDamageForShooting(BattleTech.AbstractActor, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, BattleTech.MoveType)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.Weapon
L_0000: Local var 3: UnityEngine.Quaternion
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.AbstractActor
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: UnityEngine.Vector3
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: br Label1
L_000d: Label7
L_000d: ldarg.1
L_000e: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0013: ldloc.1
L_0014: callvirt BattleTech.Weapon get_Item(Int32)
L_0019: stloc.2
L_001a: ldloc.2
L_001b: callvirt Boolean get_CanFire()
L_0020: brfalse Label2
L_0025: ldarg.3
L_0026: ldarg.1
L_0027: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_002c: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0031: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0036: stloc.3
L_0037: ldarg.1
L_0038: callvirt BattleTech.CombatGameState get_Combat()
L_003d: callvirt LOFCache get_LOFCache()
L_0042: ldarg.1
L_0043: ldarg.2
L_0044: ldloc.2
L_0045: callvirt Single get_MaxRange()
L_004a: ldarg.1
L_004b: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0050: ldloc.3
L_0051: ldarg.3
L_0052: ldarg.s 4
L_0054: ldloc.2
L_0055: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_005a: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_005f: brfalse Label3
L_0064: ldloc.2
L_0065: ldarg.2
L_0066: ldarg.1
L_0067: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006c: ldloc.3
L_006d: callvirt Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0072: brfalse Label4
L_0077: ldloc.2
L_0078: callvirt Int32 get_ShotsWhenFired()
L_007d: stloc.s 4 (System.Int32)
L_007f: ldarg.2
L_0080: isinst BattleTech.AbstractActor
L_0085: stloc.s 5 (BattleTech.AbstractActor)
L_0087: ldloc.s 5 (BattleTech.AbstractActor)
L_0089: brfalse Label5
L_008e: ldloc.s 5 (BattleTech.AbstractActor)
L_0090: callvirt Int32 get_EvasivePipsCurrent()
L_0095: stloc.s 9 (System.Int32)
L_0097: ldloc.s 5 (BattleTech.AbstractActor)
L_0099: ldloc.s 5 (BattleTech.AbstractActor)
L_009b: ldarg.3
L_009c: ldarg.2
L_009d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00a2: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00a7: stloc.s 10 (UnityEngine.Vector3)
L_00a9: ldloca.s 10 (UnityEngine.Vector3)
L_00ab: call Single get_magnitude()
L_00b0: ldarg.s 5
L_00b2: ldc.i4.4
L_00b3: ceq
L_00b5: ldarg.s 5
L_00b7: ldc.i4.2
L_00b8: ceq
L_00ba: ldarg.s 5
L_00bc: ldc.i4.5
L_00bd: ceq
L_00bf: callvirt Int32 GetEvasivePipsResult(Single, Boolean, Boolean, Boolean)
L_00c4: callvirt Void set_EvasivePipsCurrent(Int32)
L_00c9: ldloc.2
L_00ca: ldarg.2
L_00cb: ldc.i4.1
L_00cc: ldarg.1
L_00cd: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00d2: ldarg.3
L_00d3: ldc.i4.1
L_00d4: ldarg.s 5
L_00d6: ldc.i4.2
L_00d7: ceq
L_00d9: ldc.i4.0
L_00da: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_00df: stloc.s 6 (System.Single)
L_00e1: ldloc.s 5 (BattleTech.AbstractActor)
L_00e3: ldloc.s 9 (System.Int32)
L_00e5: callvirt Void set_EvasivePipsCurrent(Int32)
L_00ea: br Label6
L_00ef: Label5
L_00ef: ldloc.2
L_00f0: ldarg.2
L_00f1: ldc.i4.1
L_00f2: ldarg.1
L_00f3: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00f8: ldarg.3
L_00f9: ldc.i4.1
L_00fa: ldarg.s 5
L_00fc: ldc.i4.2
L_00fd: ceq
L_00ff: ldc.i4.0
L_0100: callvirt Single GetToHitFromPosition(BattleTech.ICombatant, Int32, UnityEngine.Vector3, UnityEngine.Vector3, Boolean, Boolean, Boolean)
L_0105: stloc.s 6 (System.Single)
L_0107: Label6
L_0107: ldloc.2
L_0108: ldc.i4.0
L_0109: ldarg.1
L_010a: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_010f: ldarg.2
L_0110: callvirt Single DamagePerShotFromPosition(BattleTech.MeleeAttackType, UnityEngine.Vector3, BattleTech.ICombatant)
L_0115: stloc.s 7 (System.Single)
L_0117: ldc.r4 1
L_011c: ldloc.2
L_011d: callvirt Single get_HeatDamagePerShot()
L_0122: add
L_0123: stloc.s 8 (System.Single)
L_0125: ldloc.0
L_0126: ldloc.s 4 (System.Int32)
L_0128: conv.r4
L_0129: ldloc.s 6 (System.Single)
L_012b: mul
L_012c: ldloc.s 7 (System.Single)
L_012e: mul
L_012f: ldloc.s 8 (System.Single)
L_0131: mul
L_0132: add
L_0133: stloc.0
L_0134: Label2
L_0134: Label3
L_0134: Label4
L_0134: ldloc.1
L_0135: ldc.i4.1
L_0136: add
L_0137: stloc.1
L_0138: Label1
L_0138: ldloc.1
L_0139: ldarg.1
L_013a: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_013f: callvirt Int32 get_Count()
L_0144: blt Label7
L_0149: ldloc.0
L_014a: ret
DONE

### Patch BattleTech.ToHit, Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Single
L_0000: Local var 13: System.Single
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Single
L_0000: Local var 18: System.Single
L_0000: Local var 19: System.Single
L_0000: Local var 20: System.Single
L_0000: Local var 21: System.Single
L_0000: Local var 22: System.Single
L_0000: Local var 23: System.Single
L_0000: ldc.r4 0
L_0005: stloc 23 (System.Single)
L_0007: ldarg.s 6
L_0009: ldc.i4.2
L_000a: bge Label1
L_000f: ldarg.2
L_0010: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0015: br Label2
L_001a: Label1
L_001a: ldc.i4.0
L_001b: Label2
L_001b: stloc.0
L_001c: ldarg.0
L_001d: ldarg.2
L_001e: ldarg.s 4
L_0020: ldarg.s 5
L_0022: call Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_0027: ldarg.0
L_0028: ldarg.1
L_0029: ldarg.3
L_002a: ldarg.s 6
L_002c: call Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_0031: stloc.1
L_0032: ldarg.0
L_0033: ldarg.1
L_0034: call Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_0039: stloc.2
L_003a: ldarg.0
L_003b: ldarg.1
L_003c: call Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0041: stloc.3
L_0042: ldarg.0
L_0043: ldarg.2
L_0044: call Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0049: stloc.s 4 (System.Single)
L_004b: ldarg.0
L_004c: ldarg.1
L_004d: call Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0052: stloc.s 5 (System.Single)
L_0054: ldarg.0
L_0055: ldarg.s 4
L_0057: ldfld System.Single y
L_005c: ldarg.s 5
L_005e: ldfld System.Single y
L_0063: call Single GetHeightModifier(Single, Single)
L_0068: stloc.s 6 (System.Single)
L_006a: ldarg.0
L_006b: ldarg.1
L_006c: call Single GetHeatModifier(BattleTech.AbstractActor)
L_0071: stloc.s 7 (System.Single)
L_0073: ldarg.0
L_0074: ldarg.3
L_0075: ldarg.s 5
L_0077: ldc.i4.0
L_0078: call Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_007d: stloc.s 8 (System.Single)
L_007f: ldarg.0
L_0080: ldarg.s 4
L_0082: ldc.i4.0
L_0083: call Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_0088: stloc.s 9 (System.Single)
L_008a: ldarg.0
L_008b: ldarg.3
L_008c: ldarg.2
L_008d: call Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0092: stloc.s 10 (System.Single)
L_0094: ldarg.0
L_0095: ldarg.1
L_0096: ldarg.2
L_0097: call Single GetSelfDamageModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_009c: stloc.s 11 (System.Single)
L_009e: ldarg.0
L_009f: ldarg.3
L_00a0: call Single GetTargetSizeModifier(BattleTech.ICombatant)
L_00a5: stloc.s 12 (System.Single)
L_00a7: ldarg.0
L_00a8: ldarg.3
L_00a9: ldc.i4.0
L_00aa: call Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_00af: stloc.s 13 (System.Single)
L_00b1: ldarg.0
L_00b2: ldarg.3
L_00b3: ldc.i4.0
L_00b4: call Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_00b9: stloc.s 14 (System.Single)
L_00bb: ldarg.0
L_00bc: ldarg.1
L_00bd: ldarg.2
L_00be: call Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00c3: stloc.s 15 (System.Single)
L_00c5: ldarg.0
L_00c6: ldarg.1
L_00c7: call Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_00cc: stloc.s 16 (System.Single)
L_00ce: ldarg.0
L_00cf: ldarg.3
L_00d0: ldarg.2
L_00d1: call Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_00d6: stloc.s 17 (System.Single)
L_00d8: ldarg.0
L_00d9: ldarg.2
L_00da: call Single GetRefireModifier(BattleTech.Weapon)
L_00df: stloc.s 18 (System.Single)
L_00e1: ldarg.0
L_00e2: ldarg.3
L_00e3: ldloc.0
L_00e4: call Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_00e9: stloc.s 19 (System.Single)
L_00eb: ldarg.0
L_00ec: ldarg.1
L_00ed: ldloc.0
L_00ee: call Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_00f3: stloc.s 20 (System.Single)
L_00f5: ldarg.0
L_00f6: ldarg.3
L_00f7: ldarg.s 7
L_00f9: call Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_00fe: stloc.s 21 (System.Single)
L_0100: ldloc.1
L_0101: add
L_0102: ldloc.2
L_0103: add
L_0104: ldloc.3
L_0105: add
L_0106: ldloc.s 4 (System.Single)
L_0108: add
L_0109: ldloc.s 5 (System.Single)
L_010b: add
L_010c: ldloc.s 6 (System.Single)
L_010e: add
L_010f: ldloc.s 7 (System.Single)
L_0111: add
L_0112: ldloc.s 8 (System.Single)
L_0114: add
L_0115: ldloc.s 9 (System.Single)
L_0117: add
L_0118: ldloc.s 10 (System.Single)
L_011a: add
L_011b: ldloc.s 11 (System.Single)
L_011d: add
L_011e: ldloc.s 12 (System.Single)
L_0120: add
L_0121: ldloc.s 13 (System.Single)
L_0123: add
L_0124: ldloc.s 14 (System.Single)
L_0126: add
L_0127: ldloc.s 15 (System.Single)
L_0129: add
L_012a: ldloc.s 16 (System.Single)
L_012c: add
L_012d: ldloc.s 17 (System.Single)
L_012f: add
L_0130: ldloc.s 18 (System.Single)
L_0132: add
L_0133: ldloc.s 19 (System.Single)
L_0135: add
L_0136: ldloc.s 20 (System.Single)
L_0138: add
L_0139: ldloc.s 21 (System.Single)
L_013b: add
L_013c: stloc.s 22 (System.Single)
L_013e: ldloc.s 22 (System.Single)
L_0140: ldc.r4 0
L_0145: bge.un Label3
L_014a: ldarg.0
L_014b: ldfld BattleTech.CombatGameState combat
L_0150: callvirt BattleTech.CombatGameConstants get_Constants()
L_0155: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_015a: ldfld System.Boolean AllowTotalNegativeModifier
L_015f: brtrue Label4
L_0164: ldc.r4 0
L_0169: stloc.s 22 (System.Single)
L_016b: Label3
L_016b: Label4
L_016b: ldloc.s 22 (System.Single)
L_016d: stloc 23 (System.Single)
L_016f: ldarg.0
L_0170: ldloca 23 (System.Single)
L_0172: ldarg 1
L_0178: ldarg 2
L_017e: ldarg 3
L_0184: ldarg 4
L_018a: ldarg 5
L_0190: ldarg 6
L_0196: ldarg 7
L_019c: call Void Postfix(BattleTech.ToHit, Single ByRef, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_01a1: ldarg.0
L_01a2: ldarg 1
L_01a8: ldarg 2
L_01ae: ldarg 3
L_01b4: ldarg 4
L_01ba: ldarg 5
L_01c0: ldarg 6
L_01c6: ldarg 7
L_01cc: ldloca 23 (System.Single)
L_01ce: call Void Postfix(BattleTech.ToHit, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean, Single ByRef)
L_01d3: ldloc 23 (System.Single)
L_01d5: ret
DONE

### Patch BattleTech.ToHit, System.String GetAllModifiersDescription(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Single
L_0000: Local var 13: System.Single
L_0000: Local var 14: System.Single
L_0000: Local var 15: System.Single
L_0000: Local var 16: System.Single
L_0000: Local var 17: System.Single
L_0000: Local var 18: System.Single
L_0000: Local var 19: System.Single
L_0000: Local var 20: System.Single
L_0000: Local var 21: System.Single
L_0000: Local var 22: System.Single
L_0000: Local var 23: System.Single
L_0000: Local var 24: System.Single
L_0000: Local var 25: System.Single
L_0000: Local var 26: System.String
L_0000: ldnull
L_0001: stloc 26 (System.String)
L_0003: ldstr ""
L_0008: stloc.0
L_0009: ldarg.s 6
L_000b: ldc.i4.2
L_000c: bge Label1
L_0011: ldarg.2
L_0012: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0017: br Label2
L_001c: Label1
L_001c: ldc.i4.0
L_001d: Label2
L_001d: stloc.1
L_001e: ldarg.0
L_001f: ldarg.2
L_0020: ldarg.s 4
L_0022: ldarg.s 5
L_0024: call Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_0029: stloc.2
L_002a: ldarg.0
L_002b: ldarg.1
L_002c: ldarg.3
L_002d: ldarg.s 6
L_002f: call Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_0034: stloc.3
L_0035: ldarg.0
L_0036: ldarg.1
L_0037: call Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_003c: stloc.s 4 (System.Single)
L_003e: ldarg.0
L_003f: ldarg.1
L_0040: call Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0045: stloc.s 5 (System.Single)
L_0047: ldarg.0
L_0048: ldarg.2
L_0049: call Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_004e: stloc.s 6 (System.Single)
L_0050: ldarg.0
L_0051: ldarg.1
L_0052: call Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0057: stloc.s 7 (System.Single)
L_0059: ldarg.0
L_005a: ldarg.s 4
L_005c: ldfld System.Single y
L_0061: ldarg.s 5
L_0063: ldfld System.Single y
L_0068: call Single GetHeightModifier(Single, Single)
L_006d: stloc.s 8 (System.Single)
L_006f: ldarg.0
L_0070: ldarg.1
L_0071: call Single GetHeatModifier(BattleTech.AbstractActor)
L_0076: stloc.s 9 (System.Single)
L_0078: ldarg.0
L_0079: ldarg.3
L_007a: ldarg.s 5
L_007c: ldc.i4.0
L_007d: call Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_0082: stloc.s 10 (System.Single)
L_0084: ldarg.0
L_0085: ldarg.s 4
L_0087: ldc.i4.0
L_0088: call Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_008d: stloc.s 11 (System.Single)
L_008f: ldarg.0
L_0090: ldarg.3
L_0091: ldarg.2
L_0092: call Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0097: stloc.s 12 (System.Single)
L_0099: ldarg.0
L_009a: ldarg.1
L_009b: ldarg.2
L_009c: call Single GetSelfDamageModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00a1: stloc.s 13 (System.Single)
L_00a3: ldarg.0
L_00a4: ldarg.3
L_00a5: call Single GetTargetSizeModifier(BattleTech.ICombatant)
L_00aa: stloc.s 14 (System.Single)
L_00ac: ldarg.0
L_00ad: ldarg.3
L_00ae: ldc.i4.0
L_00af: call Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_00b4: stloc.s 15 (System.Single)
L_00b6: ldarg.0
L_00b7: ldarg.3
L_00b8: ldc.i4.0
L_00b9: call Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_00be: stloc.s 16 (System.Single)
L_00c0: ldarg.0
L_00c1: ldarg.1
L_00c2: ldarg.2
L_00c3: call Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_00c8: stloc.s 17 (System.Single)
L_00ca: ldarg.0
L_00cb: ldarg.1
L_00cc: call Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_00d1: stloc.s 18 (System.Single)
L_00d3: ldarg.0
L_00d4: ldarg.3
L_00d5: ldarg.2
L_00d6: call Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_00db: stloc.s 19 (System.Single)
L_00dd: ldarg.0
L_00de: ldarg.2
L_00df: call Single GetRefireModifier(BattleTech.Weapon)
L_00e4: stloc.s 20 (System.Single)
L_00e6: ldarg.0
L_00e7: ldarg.3
L_00e8: ldloc.1
L_00e9: call Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_00ee: stloc.s 21 (System.Single)
L_00f0: ldarg.0
L_00f1: ldarg.1
L_00f2: ldloc.1
L_00f3: call Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_00f8: stloc.s 22 (System.Single)
L_00fa: ldarg.0
L_00fb: ldarg.3
L_00fc: ldarg.s 7
L_00fe: call Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_0103: stloc.s 23 (System.Single)
L_0105: ldloc.2
L_0106: call Boolean FloatIsNearZero(Single)
L_010b: brtrue Label3
L_0110: ldstr "{0}RANGE {1:+#;-#}; "
L_0115: ldloc.0
L_0116: ldloc.2
L_0117: conv.i4
L_0118: box System.Int32
L_011d: call System.String Format(System.String, System.Object, System.Object)
L_0122: stloc.0
L_0123: Label3
L_0123: ldloc.3
L_0124: call Boolean FloatIsNearZero(Single)
L_0129: brtrue Label4
L_012e: ldstr "{0}COVER {1:+#;-#}; "
L_0133: ldloc.0
L_0134: ldloc.2
L_0135: conv.i4
L_0136: box System.Int32
L_013b: call System.String Format(System.String, System.Object, System.Object)
L_0140: stloc.0
L_0141: Label4
L_0141: ldloc.s 4 (System.Single)
L_0143: call Boolean FloatIsNearZero(Single)
L_0148: brtrue Label5
L_014d: ldstr "{0}SELF-MOVED {1:+#;-#}; "
L_0152: ldloc.0
L_0153: ldloc.s 4 (System.Single)
L_0155: conv.i4
L_0156: box System.Int32
L_015b: call System.String Format(System.String, System.Object, System.Object)
L_0160: stloc.0
L_0161: Label5
L_0161: ldloc.s 5 (System.Single)
L_0163: call Boolean FloatIsNearZero(Single)
L_0168: brtrue Label6
L_016d: ldstr "{0}SELF-SPRINTED {1:+#;-#}; "
L_0172: ldloc.0
L_0173: ldloc.s 5 (System.Single)
L_0175: conv.i4
L_0176: box System.Int32
L_017b: call System.String Format(System.String, System.Object, System.Object)
L_0180: stloc.0
L_0181: Label6
L_0181: ldloc.s 6 (System.Single)
L_0183: call Boolean FloatIsNearZero(Single)
L_0188: brtrue Label7
L_018d: ldstr "{0}SELF-ARM MOUNTED {1:+#;-#}; "
L_0192: ldloc.0
L_0193: ldloc.s 6 (System.Single)
L_0195: conv.i4
L_0196: box System.Int32
L_019b: call System.String Format(System.String, System.Object, System.Object)
L_01a0: stloc.0
L_01a1: Label7
L_01a1: ldloc.s 7 (System.Single)
L_01a3: call Boolean FloatIsNearZero(Single)
L_01a8: brtrue Label8
L_01ad: ldstr "{0}STOOD UP {1:+#;-#}; "
L_01b2: ldloc.0
L_01b3: ldloc.s 7 (System.Single)
L_01b5: conv.i4
L_01b6: box System.Int32
L_01bb: call System.String Format(System.String, System.Object, System.Object)
L_01c0: stloc.0
L_01c1: Label8
L_01c1: ldloc.s 8 (System.Single)
L_01c3: call Boolean FloatIsNearZero(Single)
L_01c8: brtrue Label9
L_01cd: ldstr "{0}HEIGHT {1:+#;-#}; "
L_01d2: ldloc.0
L_01d3: ldloc.s 8 (System.Single)
L_01d5: conv.i4
L_01d6: box System.Int32
L_01db: call System.String Format(System.String, System.Object, System.Object)
L_01e0: stloc.0
L_01e1: Label9
L_01e1: ldloc.s 9 (System.Single)
L_01e3: call Boolean FloatIsNearZero(Single)
L_01e8: brtrue Label10
L_01ed: ldstr "{0}HEAT {1:+#;-#}; "
L_01f2: ldloc.0
L_01f3: ldloc.s 9 (System.Single)
L_01f5: conv.i4
L_01f6: box System.Int32
L_01fb: call System.String Format(System.String, System.Object, System.Object)
L_0200: stloc.0
L_0201: Label10
L_0201: ldloc.s 10 (System.Single)
L_0203: call Boolean FloatIsNearZero(Single)
L_0208: brtrue Label11
L_020d: ldstr "{0}TERRAIN {1:+#;-#}; "
L_0212: ldloc.0
L_0213: ldloc.s 10 (System.Single)
L_0215: conv.i4
L_0216: box System.Int32
L_021b: call System.String Format(System.String, System.Object, System.Object)
L_0220: stloc.0
L_0221: Label11
L_0221: ldloc.s 11 (System.Single)
L_0223: call Boolean FloatIsNearZero(Single)
L_0228: brtrue Label12
L_022d: ldstr "{0}TERRAIN SELF {1:+#;-#}; "
L_0232: ldloc.0
L_0233: ldloc.s 11 (System.Single)
L_0235: conv.i4
L_0236: box System.Int32
L_023b: call System.String Format(System.String, System.Object, System.Object)
L_0240: stloc.0
L_0241: Label12
L_0241: ldloc.s 12 (System.Single)
L_0243: call Boolean FloatIsNearZero(Single)
L_0248: brtrue Label13
L_024d: ldstr "{0}TARGET-SPEED {1:+#;-#}; "
L_0252: ldloc.0
L_0253: ldloc.s 12 (System.Single)
L_0255: conv.i4
L_0256: box System.Int32
L_025b: call System.String Format(System.String, System.Object, System.Object)
L_0260: stloc.0
L_0261: Label13
L_0261: ldloc.s 13 (System.Single)
L_0263: call Boolean FloatIsNearZero(Single)
L_0268: brtrue Label14
L_026d: ldstr "{0}SELF-DAMAGE {1:+#;-#}; "
L_0272: ldloc.0
L_0273: ldloc.s 13 (System.Single)
L_0275: conv.i4
L_0276: box System.Int32
L_027b: call System.String Format(System.String, System.Object, System.Object)
L_0280: stloc.0
L_0281: Label14
L_0281: ldloc.s 14 (System.Single)
L_0283: call Boolean FloatIsNearZero(Single)
L_0288: brtrue Label15
L_028d: ldstr "{0}TARGET-SIZE {1:+#;-#}; "
L_0292: ldloc.0
L_0293: ldloc.s 14 (System.Single)
L_0295: conv.i4
L_0296: box System.Int32
L_029b: call System.String Format(System.String, System.Object, System.Object)
L_02a0: stloc.0
L_02a1: Label15
L_02a1: ldloc.s 15 (System.Single)
L_02a3: call Boolean FloatIsNearZero(Single)
L_02a8: brtrue Label16
L_02ad: ldstr "{0}TARGET-SHUTDOWN {1:+#;-#}; "
L_02b2: ldloc.0
L_02b3: ldloc.s 15 (System.Single)
L_02b5: conv.i4
L_02b6: box System.Int32
L_02bb: call System.String Format(System.String, System.Object, System.Object)
L_02c0: stloc.0
L_02c1: Label16
L_02c1: ldloc.s 16 (System.Single)
L_02c3: call Boolean FloatIsNearZero(Single)
L_02c8: brtrue Label17
L_02cd: ldstr "{0}TARGET-PRONE {1:+#;-#}; "
L_02d2: ldloc.0
L_02d3: ldloc.s 16 (System.Single)
L_02d5: conv.i4
L_02d6: box System.Int32
L_02db: call System.String Format(System.String, System.Object, System.Object)
L_02e0: stloc.0
L_02e1: Label17
L_02e1: ldloc.s 17 (System.Single)
L_02e3: call Boolean FloatIsNearZero(Single)
L_02e8: brtrue Label18
L_02ed: ldstr "{0}ATTACKER-EFFECTS {1:+#;-#}; "
L_02f2: ldloc.0
L_02f3: ldloc.s 17 (System.Single)
L_02f5: conv.i4
L_02f6: box System.Int32
L_02fb: call System.String Format(System.String, System.Object, System.Object)
L_0300: stloc.0
L_0301: Label18
L_0301: ldloc.s 18 (System.Single)
L_0303: call Boolean FloatIsNearZero(Single)
L_0308: brtrue Label19
L_030d: ldstr "{0}ATTACKER-SELF-EFFECTS {1:+#;-#}; "
L_0312: ldloc.0
L_0313: ldloc.s 18 (System.Single)
L_0315: conv.i4
L_0316: box System.Int32
L_031b: call System.String Format(System.String, System.Object, System.Object)
L_0320: stloc.0
L_0321: Label19
L_0321: ldloc.s 19 (System.Single)
L_0323: call Boolean FloatIsNearZero(Single)
L_0328: brtrue Label20
L_032d: ldstr "{0}ENEMY-EFFECTS {1:+#;-#}; "
L_0332: ldloc.0
L_0333: ldloc.s 19 (System.Single)
L_0335: conv.i4
L_0336: box System.Int32
L_033b: call System.String Format(System.String, System.Object, System.Object)
L_0340: stloc.0
L_0341: Label20
L_0341: ldloc.s 20 (System.Single)
L_0343: call Boolean FloatIsNearZero(Single)
L_0348: brtrue Label21
L_034d: ldstr "{0}REFIRE {1:+#;-#}; "
L_0352: ldloc.0
L_0353: ldloc.s 20 (System.Single)
L_0355: conv.i4
L_0356: box System.Int32
L_035b: call System.String Format(System.String, System.Object, System.Object)
L_0360: stloc.0
L_0361: Label21
L_0361: ldloc.s 21 (System.Single)
L_0363: call Boolean FloatIsNearZero(Single)
L_0368: brtrue Label22
L_036d: ldstr "{0}DIRECT-FIRE {1:+#;-#}; "
L_0372: ldloc.0
L_0373: ldloc.s 21 (System.Single)
L_0375: conv.i4
L_0376: box System.Int32
L_037b: call System.String Format(System.String, System.Object, System.Object)
L_0380: stloc.0
L_0381: Label22
L_0381: ldloc.s 22 (System.Single)
L_0383: call Boolean FloatIsNearZero(Single)
L_0388: brtrue Label23
L_038d: ldstr "{0}INDIRECT-FIRE {1:+#;-#}; "
L_0392: ldloc.0
L_0393: ldloc.s 22 (System.Single)
L_0395: conv.i4
L_0396: box System.Int32
L_039b: call System.String Format(System.String, System.Object, System.Object)
L_03a0: stloc.0
L_03a1: Label23
L_03a1: ldloc.s 23 (System.Single)
L_03a3: call Boolean FloatIsNearZero(Single)
L_03a8: brtrue Label24
L_03ad: ldstr "{0}CALLED-SHOT {1:+#;-#}; "
L_03b2: ldloc.0
L_03b3: ldloc.s 23 (System.Single)
L_03b5: conv.i4
L_03b6: box System.Int32
L_03bb: call System.String Format(System.String, System.Object, System.Object)
L_03c0: stloc.0
L_03c1: Label24
L_03c1: ldloc.2
L_03c2: ldloc.3
L_03c3: add
L_03c4: ldloc.s 4 (System.Single)
L_03c6: add
L_03c7: ldloc.s 5 (System.Single)
L_03c9: add
L_03ca: ldloc.s 6 (System.Single)
L_03cc: add
L_03cd: ldloc.s 7 (System.Single)
L_03cf: add
L_03d0: ldloc.s 8 (System.Single)
L_03d2: add
L_03d3: ldloc.s 9 (System.Single)
L_03d5: add
L_03d6: ldloc.s 10 (System.Single)
L_03d8: add
L_03d9: ldloc.s 11 (System.Single)
L_03db: add
L_03dc: ldloc.s 12 (System.Single)
L_03de: add
L_03df: ldloc.s 13 (System.Single)
L_03e1: add
L_03e2: ldloc.s 14 (System.Single)
L_03e4: add
L_03e5: ldloc.s 15 (System.Single)
L_03e7: add
L_03e8: ldloc.s 16 (System.Single)
L_03ea: add
L_03eb: ldloc.s 17 (System.Single)
L_03ed: add
L_03ee: ldloc.s 18 (System.Single)
L_03f0: add
L_03f1: ldloc.s 19 (System.Single)
L_03f3: add
L_03f4: ldloc.s 20 (System.Single)
L_03f6: add
L_03f7: ldloc.s 21 (System.Single)
L_03f9: add
L_03fa: ldloc.s 22 (System.Single)
L_03fc: add
L_03fd: ldloc.s 23 (System.Single)
L_03ff: add
L_0400: stloc.s 24 (System.Single)
L_0402: ldloc.s 24 (System.Single)
L_0404: ldc.r4 0
L_0409: bge.un Label25
L_040e: ldarg.0
L_040f: ldfld BattleTech.CombatGameState combat
L_0414: callvirt BattleTech.CombatGameConstants get_Constants()
L_0419: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_041e: ldfld System.Boolean AllowTotalNegativeModifier
L_0423: brtrue Label26
L_0428: ldc.r4 0
L_042d: stloc.s 24 (System.Single)
L_042f: Label25
L_042f: Label26
L_042f: ldarg.0
L_0430: ldarg.1
L_0431: ldarg.2
L_0432: ldarg.3
L_0433: ldarg.s 4
L_0435: ldarg.s 5
L_0437: ldarg.s 6
L_0439: ldarg.s 7
L_043b: call Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0440: stloc.s 25 (System.Single)
L_0442: ldloc.s 25 (System.Single)
L_0444: ldloc.s 24 (System.Single)
L_0446: call Boolean FloatsAreEqual(Single, Single)
L_044b: brtrue Label27
L_0450: ldsfld HBS.Logging.ILog attackLogger
L_0455: ldc.i4.4
L_0456: newarr System.Object
L_045b: dup
L_045c: ldc.i4.0
L_045d: ldstr "ERROR!!! breakdown of Universal Modifier didn't match actual Universal Modifier. Check TargetingRules! current modifier: "
L_0462: stelem.ref
L_0463: dup
L_0464: ldc.i4.1
L_0465: ldloc.s 24 (System.Single)
L_0467: box System.Single
L_046c: stelem.ref
L_046d: dup
L_046e: ldc.i4.2
L_046f: ldstr ", doubleCheck modifier: "
L_0474: stelem.ref
L_0475: dup
L_0476: ldc.i4.3
L_0477: ldloc.s 25 (System.Single)
L_0479: box System.Single
L_047e: stelem.ref
L_047f: call System.String Concat(System.Object[])
L_0484: callvirt Void LogError(System.Object)
L_0489: Label27
L_0489: ldloc.0
L_048a: stloc 26 (System.String)
L_048c: ldarg.0
L_048d: ldloca 26 (System.String)
L_048f: ldarg 1
L_0495: ldarg 2
L_049b: ldarg 3
L_04a1: ldarg 4
L_04a7: ldarg 5
L_04ad: ldarg 6
L_04b3: ldarg 7
L_04b9: call Void Postfix(BattleTech.ToHit, System.String ByRef, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_04be: ldarg.0
L_04bf: ldarg 1
L_04c5: ldarg 2
L_04cb: ldarg 3
L_04d1: ldarg 4
L_04d7: ldarg 5
L_04dd: ldarg 6
L_04e3: ldarg 7
L_04e9: ldloca 26 (System.String)
L_04eb: call Void Postfix(BattleTech.ToHit, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean, System.String ByRef)
L_04f0: ldloc 26 (System.String)
L_04f2: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void UpdateToolTipsFiring(BattleTech.ICombatant)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.LineOfFireLevel
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Single
L_0000: ldarg.1
L_0001: isinst BattleTech.AbstractActor
L_0006: stloc.0
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.CombatHUD HUD
L_000d: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0012: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0017: callvirt BattleTech.FiringPreviewManager get_FiringPreview()
L_001c: ldloc.0
L_001d: callvirt PreviewInfo GetPreviewInfo(BattleTech.ICombatant)
L_0022: ldfld BattleTech.LineOfFireLevel LOFLevel
L_0027: stloc.1
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUD HUD
L_002e: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0033: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0038: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_003d: ldc.i4.8
L_003e: ceq
L_0040: stloc.2
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0047: ldarg.0
L_0048: ldfld BattleTech.CombatGameState Combat
L_004d: callvirt BattleTech.ToHit get_ToHit()
L_0052: ldarg.0
L_0053: ldfld BattleTech.UI.CombatHUD HUD
L_0058: callvirt BattleTech.AbstractActor get_SelectedActor()
L_005d: ldarg.0
L_005e: ldfld BattleTech.Weapon displayedWeapon
L_0063: ldarg.1
L_0064: ldarg.0
L_0065: ldfld BattleTech.UI.CombatHUD HUD
L_006a: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_006f: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0074: callvirt UnityEngine.Vector3 get_PreviewPos()
L_0079: ldarg.1
L_007a: callvirt UnityEngine.Vector3 get_TargetPosition()
L_007f: ldloc.1
L_0080: ldloc.2
L_0081: callvirt Single GetAllModifiers(BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.LineOfFireLevel, Boolean)
L_0086: conv.i4
L_0087: stfld System.Int32 BasicModifierInt
L_008c: ldarg.0
L_008d: ldarg.0
L_008e: ldfld BattleTech.CombatGameState Combat
L_0093: callvirt BattleTech.ToHit get_ToHit()
L_0098: ldarg.0
L_0099: ldfld BattleTech.Weapon displayedWeapon
L_009e: ldarg.0
L_009f: ldfld BattleTech.UI.CombatHUD HUD
L_00a4: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00a9: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_00ae: callvirt UnityEngine.Vector3 get_PreviewPos()
L_00b3: ldarg.1
L_00b4: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00b9: callvirt Single GetRangeModifier(BattleTech.Weapon, UnityEngine.Vector3, UnityEngine.Vector3)
L_00be: conv.i4
L_00bf: stfld System.Int32 modifier
L_00c4: ldarg.0
L_00c5: ldfld BattleTech.Weapon displayedWeapon
L_00ca: ldfld BattleTech.AbstractActor parent
L_00cf: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00d4: ldarg.1
L_00d5: callvirt UnityEngine.Vector3 get_TargetPosition()
L_00da: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_00df: stloc.3
L_00e0: ldloc.3
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.Weapon displayedWeapon
L_00e7: callvirt Single get_MinRange()
L_00ec: bge.un Label1
L_00f1: ldarg.0
L_00f2: ldstr "MIN RANGE"
L_00f7: ldarg.0
L_00f8: ldfld System.Int32 modifier
L_00fd: call Void AddToolTipDetail(System.String, Int32)
L_0102: br Label2
L_0107: Label1
L_0107: ldloc.3
L_0108: ldarg.0
L_0109: ldfld BattleTech.Weapon displayedWeapon
L_010e: callvirt Single get_ShortRange()
L_0113: bge.un Label3
L_0118: ldarg.0
L_0119: ldstr "SHORT RANGE"
L_011e: ldarg.0
L_011f: ldfld System.Int32 modifier
L_0124: call Void AddToolTipDetail(System.String, Int32)
L_0129: br Label4
L_012e: Label3
L_012e: ldloc.3
L_012f: ldarg.0
L_0130: ldfld BattleTech.Weapon displayedWeapon
L_0135: callvirt Single get_MediumRange()
L_013a: bge.un Label5
L_013f: ldarg.0
L_0140: ldstr "MEDIUM RANGE"
L_0145: ldarg.0
L_0146: ldfld System.Int32 modifier
L_014b: call Void AddToolTipDetail(System.String, Int32)
L_0150: br Label6
L_0155: Label5
L_0155: ldloc.3
L_0156: ldarg.0
L_0157: ldfld BattleTech.Weapon displayedWeapon
L_015c: callvirt Single get_LongRange()
L_0161: bge.un Label7
L_0166: ldarg.0
L_0167: ldstr "LONG RANGE"
L_016c: ldarg.0
L_016d: ldfld System.Int32 modifier
L_0172: call Void AddToolTipDetail(System.String, Int32)
L_0177: br Label8
L_017c: Label7
L_017c: ldloc.3
L_017d: ldarg.0
L_017e: ldfld BattleTech.Weapon displayedWeapon
L_0183: callvirt Single get_MaxRange()
L_0188: bge.un Label9
L_018d: ldarg.0
L_018e: ldstr "MAX RANGE"
L_0193: ldarg.0
L_0194: ldfld System.Int32 modifier
L_0199: call Void AddToolTipDetail(System.String, Int32)
L_019e: br Label10
L_01a3: Label9
L_01a3: ldarg.0
L_01a4: ldstr "OUT OF RANGE"
L_01a9: ldarg.0
L_01aa: ldfld System.Int32 modifier
L_01af: call Void AddToolTipDetail(System.String, Int32)
L_01b4: Label2
L_01b4: Label4
L_01b4: Label6
L_01b4: Label8
L_01b4: Label10
L_01b4: ldarg.0
L_01b5: ldarg.0
L_01b6: ldfld BattleTech.CombatGameState Combat
L_01bb: callvirt BattleTech.ToHit get_ToHit()
L_01c0: ldarg.0
L_01c1: ldfld BattleTech.UI.CombatHUD HUD
L_01c6: callvirt BattleTech.AbstractActor get_SelectedActor()
L_01cb: ldarg.1
L_01cc: ldloc.1
L_01cd: callvirt Single GetCoverModifier(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.LineOfFireLevel)
L_01d2: conv.i4
L_01d3: stfld System.Int32 modifier
L_01d8: ldarg.0
L_01d9: ldstr "OBSTRUCTED"
L_01de: ldarg.0
L_01df: ldfld System.Int32 modifier
L_01e4: call Void AddToolTipDetail(System.String, Int32)
L_01e9: ldarg.0
L_01ea: ldarg.0
L_01eb: ldfld BattleTech.CombatGameState Combat
L_01f0: callvirt BattleTech.ToHit get_ToHit()
L_01f5: ldarg.0
L_01f6: ldfld BattleTech.Weapon displayedWeapon
L_01fb: ldfld BattleTech.AbstractActor parent
L_0200: callvirt Single GetSelfSpeedModifier(BattleTech.AbstractActor)
L_0205: conv.i4
L_0206: stfld System.Int32 modifier
L_020b: ldarg.0
L_020c: ldstr "MOVED SELF"
L_0211: ldarg.0
L_0212: ldfld System.Int32 modifier
L_0217: call Void AddToolTipDetail(System.String, Int32)
L_021c: ldarg.0
L_021d: ldarg.0
L_021e: ldfld BattleTech.CombatGameState Combat
L_0223: callvirt BattleTech.ToHit get_ToHit()
L_0228: ldarg.0
L_0229: ldfld BattleTech.Weapon displayedWeapon
L_022e: ldfld BattleTech.AbstractActor parent
L_0233: callvirt Single GetSelfSprintedModifier(BattleTech.AbstractActor)
L_0238: conv.i4
L_0239: stfld System.Int32 modifier
L_023e: ldarg.0
L_023f: ldstr "SPRINTED"
L_0244: ldarg.0
L_0245: ldfld System.Int32 modifier
L_024a: call Void AddToolTipDetail(System.String, Int32)
L_024f: ldarg.0
L_0250: ldarg.0
L_0251: ldfld BattleTech.CombatGameState Combat
L_0256: callvirt BattleTech.ToHit get_ToHit()
L_025b: ldarg.0
L_025c: ldfld BattleTech.Weapon displayedWeapon
L_0261: callvirt Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0266: conv.i4
L_0267: stfld System.Int32 modifier
L_026c: ldarg.0
L_026d: ldstr "ARM MOUNTED"
L_0272: ldarg.0
L_0273: ldfld System.Int32 modifier
L_0278: call Void AddToolTipDetail(System.String, Int32)
L_027d: ldarg.0
L_027e: ldarg.0
L_027f: ldfld BattleTech.CombatGameState Combat
L_0284: callvirt BattleTech.ToHit get_ToHit()
L_0289: ldarg.0
L_028a: ldfld BattleTech.Weapon displayedWeapon
L_028f: ldfld BattleTech.AbstractActor parent
L_0294: callvirt Single GetStoodUpModifier(BattleTech.AbstractActor)
L_0299: conv.i4
L_029a: stfld System.Int32 modifier
L_029f: ldarg.0
L_02a0: ldstr "STOOD UP"
L_02a5: ldarg.0
L_02a6: ldfld System.Int32 modifier
L_02ab: call Void AddToolTipDetail(System.String, Int32)
L_02b0: ldarg.0
L_02b1: ldarg.0
L_02b2: ldfld BattleTech.CombatGameState Combat
L_02b7: callvirt BattleTech.ToHit get_ToHit()
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.CombatHUD HUD
L_02c2: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_02c7: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_02cc: callvirt UnityEngine.Vector3 get_PreviewPos()
L_02d1: ldfld System.Single y
L_02d6: ldarg.1
L_02d7: callvirt UnityEngine.Vector3 get_TargetPosition()
L_02dc: ldfld System.Single y
L_02e1: callvirt Single GetHeightModifier(Single, Single)
L_02e6: conv.i4
L_02e7: stfld System.Int32 modifier
L_02ec: ldarg.0
L_02ed: ldstr "HEIGHT DIFF"
L_02f2: ldarg.0
L_02f3: ldfld System.Int32 modifier
L_02f8: call Void AddToolTipDetail(System.String, Int32)
L_02fd: ldarg.0
L_02fe: ldarg.0
L_02ff: ldfld BattleTech.CombatGameState Combat
L_0304: callvirt BattleTech.ToHit get_ToHit()
L_0309: ldarg.0
L_030a: ldfld BattleTech.Weapon displayedWeapon
L_030f: ldfld BattleTech.AbstractActor parent
L_0314: callvirt Single GetHeatModifier(BattleTech.AbstractActor)
L_0319: conv.i4
L_031a: stfld System.Int32 modifier
L_031f: ldarg.0
L_0320: ldstr "HEAT"
L_0325: ldarg.0
L_0326: ldfld System.Int32 modifier
L_032b: call Void AddToolTipDetail(System.String, Int32)
L_0330: ldloc.0
L_0331: brfalse Label11
L_0336: ldarg.0
L_0337: ldfld BattleTech.Weapon displayedWeapon
L_033c: ldfld BattleTech.AbstractActor parent
L_0341: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0346: brfalse Label12
L_034b: ldarg.0
L_034c: ldarg.0
L_034d: ldfld BattleTech.CombatGameState Combat
L_0352: callvirt BattleTech.ToHit get_ToHit()
L_0357: ldarg.0
L_0358: ldfld BattleTech.UI.CombatHUD HUD
L_035d: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0362: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0367: callvirt UnityEngine.Vector3 get_PreviewPos()
L_036c: ldc.i4.0
L_036d: callvirt Single GetSelfTerrainModifier(UnityEngine.Vector3, Boolean)
L_0372: conv.i4
L_0373: stfld System.Int32 modifier
L_0378: ldarg.0
L_0379: ldstr "FROM {0}"
L_037e: ldc.i4.1
L_037f: newarr System.Object
L_0384: dup
L_0385: ldc.i4.0
L_0386: ldarg.0
L_0387: ldfld BattleTech.Weapon displayedWeapon
L_038c: ldfld BattleTech.AbstractActor parent
L_0391: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0396: callvirt BattleTech.BaseDescriptionDef get_Description()
L_039b: callvirt System.String get_Name()
L_03a0: stelem.ref
L_03a1: call System.String T(System.String, System.Object[])
L_03a6: ldarg.0
L_03a7: ldfld System.Int32 modifier
L_03ac: call Void AddToolTipDetail(System.String, Int32)
L_03b1: Label12
L_03b1: ldloc.0
L_03b2: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_03b7: brfalse Label13
L_03bc: ldarg.0
L_03bd: ldarg.0
L_03be: ldfld BattleTech.CombatGameState Combat
L_03c3: callvirt BattleTech.ToHit get_ToHit()
L_03c8: ldarg.1
L_03c9: ldarg.1
L_03ca: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_03cf: ldc.i4.0
L_03d0: callvirt Single GetTargetTerrainModifier(BattleTech.ICombatant, UnityEngine.Vector3, Boolean)
L_03d5: conv.i4
L_03d6: stfld System.Int32 modifier
L_03db: ldarg.0
L_03dc: ldstr "INTO {0}"
L_03e1: ldc.i4.1
L_03e2: newarr System.Object
L_03e7: dup
L_03e8: ldc.i4.0
L_03e9: ldloc.0
L_03ea: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_03ef: callvirt BattleTech.BaseDescriptionDef get_Description()
L_03f4: callvirt System.String get_Name()
L_03f9: stelem.ref
L_03fa: call System.String T(System.String, System.Object[])
L_03ff: ldarg.0
L_0400: ldfld System.Int32 modifier
L_0405: call Void AddToolTipDetail(System.String, Int32)
L_040a: Label11
L_040a: Label13
L_040a: ldarg.0
L_040b: ldarg.0
L_040c: ldfld BattleTech.CombatGameState Combat
L_0411: callvirt BattleTech.ToHit get_ToHit()
L_0416: ldarg.1
L_0417: ldarg.0
L_0418: ldfld BattleTech.Weapon displayedWeapon
L_041d: callvirt Single GetTargetSpeedModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_0422: conv.i4
L_0423: stfld System.Int32 modifier
L_0428: ldarg.0
L_0429: ldstr "TARGET MOVED"
L_042e: ldarg.0
L_042f: ldfld System.Int32 modifier
L_0434: call Void AddToolTipDetail(System.String, Int32)
L_0439: ldarg.0
L_043a: ldarg.0
L_043b: ldfld BattleTech.Weapon displayedWeapon
L_0440: ldfld BattleTech.AbstractActor parent
L_0445: castclass BattleTech.Mech
L_044a: ldarg.0
L_044b: ldfld BattleTech.Weapon displayedWeapon
L_0450: call Single GetToHitModifierLocationDamage(BattleTech.Mech, BattleTech.Weapon)
L_0455: conv.i4
L_0456: stfld System.Int32 modifier
L_045b: ldarg.0
L_045c: ldstr "{0} DAMAGED"
L_0461: ldc.i4.1
L_0462: newarr System.Object
L_0467: dup
L_0468: ldc.i4.0
L_0469: ldarg.0
L_046a: ldfld BattleTech.Weapon displayedWeapon
L_046f: callvirt Int32 get_Location()
L_0474: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0479: stelem.ref
L_047a: call System.String T(System.String, System.Object[])
L_047f: ldarg.0
L_0480: ldfld System.Int32 modifier
L_0485: call Void AddToolTipDetail(System.String, Int32)
L_048a: ldarg.0
L_048b: ldarg.0
L_048c: ldfld BattleTech.Weapon displayedWeapon
L_0491: ldfld BattleTech.AbstractActor parent
L_0496: castclass BattleTech.Mech
L_049b: ldarg.0
L_049c: ldfld BattleTech.Weapon displayedWeapon
L_04a1: call Single GetToHitModifierWeaponDamage(BattleTech.Mech, BattleTech.Weapon)
L_04a6: conv.i4
L_04a7: stfld System.Int32 modifier
L_04ac: ldarg.0
L_04ad: ldstr "WEAPON DAMAGED"
L_04b2: ldarg.0
L_04b3: ldfld System.Int32 modifier
L_04b8: call Void AddToolTipDetail(System.String, Int32)
L_04bd: ldarg.0
L_04be: ldarg.0
L_04bf: ldfld BattleTech.CombatGameState Combat
L_04c4: callvirt BattleTech.ToHit get_ToHit()
L_04c9: ldarg.1
L_04ca: callvirt Single GetTargetSizeModifier(BattleTech.ICombatant)
L_04cf: conv.i4
L_04d0: stfld System.Int32 modifier
L_04d5: ldarg.0
L_04d6: ldstr "TARGET SIZE"
L_04db: ldarg.0
L_04dc: ldfld System.Int32 modifier
L_04e1: call Void AddToolTipDetail(System.String, Int32)
L_04e6: ldarg.0
L_04e7: ldarg.0
L_04e8: ldfld BattleTech.CombatGameState Combat
L_04ed: callvirt BattleTech.ToHit get_ToHit()
L_04f2: ldarg.1
L_04f3: ldc.i4.0
L_04f4: callvirt Single GetTargetShutdownModifier(BattleTech.ICombatant, Boolean)
L_04f9: conv.i4
L_04fa: stfld System.Int32 modifier
L_04ff: ldarg.0
L_0500: ldstr "TARGET SHUTDOWN"
L_0505: ldarg.0
L_0506: ldfld System.Int32 modifier
L_050b: call Void AddToolTipDetail(System.String, Int32)
L_0510: ldarg.0
L_0511: ldarg.0
L_0512: ldfld BattleTech.CombatGameState Combat
L_0517: callvirt BattleTech.ToHit get_ToHit()
L_051c: ldarg.1
L_051d: ldc.i4.0
L_051e: callvirt Single GetTargetProneModifier(BattleTech.ICombatant, Boolean)
L_0523: conv.i4
L_0524: stfld System.Int32 modifier
L_0529: ldarg.0
L_052a: ldstr "TARGET PRONE"
L_052f: ldarg.0
L_0530: ldfld System.Int32 modifier
L_0535: call Void AddToolTipDetail(System.String, Int32)
L_053a: ldarg.0
L_053b: ldarg.0
L_053c: ldfld BattleTech.CombatGameState Combat
L_0541: callvirt BattleTech.ToHit get_ToHit()
L_0546: ldarg.0
L_0547: ldfld BattleTech.UI.CombatHUD HUD
L_054c: callvirt BattleTech.AbstractActor get_SelectedActor()
L_0551: ldarg.0
L_0552: ldfld BattleTech.Weapon displayedWeapon
L_0557: callvirt Single GetWeaponAccuracyModifier(BattleTech.AbstractActor, BattleTech.Weapon)
L_055c: conv.i4
L_055d: stfld System.Int32 modifier
L_0562: ldarg.0
L_0563: ldstr "WEAPON ACCURACY"
L_0568: ldarg.0
L_0569: ldfld System.Int32 modifier
L_056e: call Void AddToolTipDetail(System.String, Int32)
L_0573: ldarg.0
L_0574: ldarg.0
L_0575: ldfld BattleTech.CombatGameState Combat
L_057a: callvirt BattleTech.ToHit get_ToHit()
L_057f: ldarg.0
L_0580: ldfld BattleTech.UI.CombatHUD HUD
L_0585: callvirt BattleTech.AbstractActor get_SelectedActor()
L_058a: callvirt Single GetAttackerAccuracyModifier(BattleTech.AbstractActor)
L_058f: conv.i4
L_0590: stfld System.Int32 modifier
L_0595: ldarg.0
L_0596: ldfld System.Int32 modifier
L_059b: ldc.i4.0
L_059c: ble Label14
L_05a1: ldarg.0
L_05a2: ldstr "SENSORS IMPAIRED"
L_05a7: ldarg.0
L_05a8: ldfld System.Int32 modifier
L_05ad: call Void AddToolTipDetail(System.String, Int32)
L_05b2: br Label15
L_05b7: Label14
L_05b7: ldarg.0
L_05b8: ldstr "INSPIRED"
L_05bd: ldarg.0
L_05be: ldfld System.Int32 modifier
L_05c3: call Void AddToolTipDetail(System.String, Int32)
L_05c8: Label15
L_05c8: ldarg.0
L_05c9: ldarg.0
L_05ca: ldfld BattleTech.CombatGameState Combat
L_05cf: callvirt BattleTech.ToHit get_ToHit()
L_05d4: ldarg.1
L_05d5: ldarg.0
L_05d6: ldfld BattleTech.Weapon displayedWeapon
L_05db: callvirt Single GetEnemyEffectModifier(BattleTech.ICombatant, BattleTech.Weapon)
L_05e0: conv.i4
L_05e1: stfld System.Int32 modifier
L_05e6: ldarg.0
L_05e7: ldstr "ENEMY EFFECTS"
L_05ec: ldarg.0
L_05ed: ldfld System.Int32 modifier
L_05f2: call Void AddToolTipDetail(System.String, Int32)
L_05f7: ldarg.0
L_05f8: ldarg.0
L_05f9: ldfld BattleTech.CombatGameState Combat
L_05fe: callvirt BattleTech.ToHit get_ToHit()
L_0603: ldarg.0
L_0604: ldfld BattleTech.Weapon displayedWeapon
L_0609: callvirt Single GetRefireModifier(BattleTech.Weapon)
L_060e: conv.i4
L_060f: stfld System.Int32 modifier
L_0614: ldarg.0
L_0615: ldstr "REFIRE"
L_061a: ldarg.0
L_061b: ldfld System.Int32 modifier
L_0620: call Void AddToolTipDetail(System.String, Int32)
L_0625: ldarg.0
L_0626: ldarg.0
L_0627: ldfld BattleTech.CombatGameState Combat
L_062c: callvirt BattleTech.ToHit get_ToHit()
L_0631: ldarg.1
L_0632: ldloc.1
L_0633: ldc.i4.2
L_0634: bge Label16
L_0639: ldarg.0
L_063a: ldfld BattleTech.Weapon displayedWeapon
L_063f: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0644: br Label17
L_0649: Label16
L_0649: ldc.i4.0
L_064a: Label17
L_064a: callvirt Single GetTargetDirectFireModifier(BattleTech.ICombatant, Boolean)
L_064f: conv.i4
L_0650: stfld System.Int32 modifier
L_0655: ldarg.0
L_0656: ldstr "SENSOR LOCK"
L_065b: ldarg.0
L_065c: ldfld System.Int32 modifier
L_0661: call Void AddToolTipDetail(System.String, Int32)
L_0666: ldarg.0
L_0667: ldarg.0
L_0668: ldfld BattleTech.CombatGameState Combat
L_066d: callvirt BattleTech.ToHit get_ToHit()
L_0672: ldarg.0
L_0673: ldfld BattleTech.Weapon displayedWeapon
L_0678: ldfld BattleTech.AbstractActor parent
L_067d: ldloc.1
L_067e: ldc.i4.2
L_067f: bge Label18
L_0684: ldarg.0
L_0685: ldfld BattleTech.Weapon displayedWeapon
L_068a: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_068f: br Label19
L_0694: Label18
L_0694: ldc.i4.0
L_0695: Label19
L_0695: callvirt Single GetIndirectModifier(BattleTech.AbstractActor, Boolean)
L_069a: conv.i4
L_069b: stfld System.Int32 modifier
L_06a0: ldarg.0
L_06a1: ldstr "INDIRECT FIRE"
L_06a6: ldarg.0
L_06a7: ldfld System.Int32 modifier
L_06ac: call Void AddToolTipDetail(System.String, Int32)
L_06b1: ldarg.0
L_06b2: ldarg.0
L_06b3: ldfld BattleTech.CombatGameState Combat
L_06b8: callvirt BattleTech.ToHit get_ToHit()
L_06bd: ldarg.1
L_06be: ldloc.2
L_06bf: callvirt Single GetMoraleAttackModifier(BattleTech.ICombatant, Boolean)
L_06c4: conv.i4
L_06c5: stfld System.Int32 modifier
L_06ca: ldarg.0
L_06cb: ldarg.0
L_06cc: ldfld BattleTech.CombatGameState Combat
L_06d1: callvirt BattleTech.CombatGameConstants get_Constants()
L_06d6: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06db: ldfld BattleTech.BaseDescriptionDef MoraleAttackDescription
L_06e0: callvirt System.String get_Name()
L_06e5: ldarg.0
L_06e6: ldfld System.Int32 modifier
L_06eb: call Void AddToolTipDetail(System.String, Int32)
L_06f0: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponTickMarks, Void GetValidSlots(System.Collections.Generic.List`1[BattleTech.UI.CombatHUDWeaponSlot], Single, Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDWeaponSlot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.UI.CombatHUDWeaponTickMarks+<>c__DisplayClass41_0
L_0000: Local var 3: System.Boolean
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: stfld System.Int32 numWeaponsAimingAt
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.CombatHUD HUD
L_000d: callvirt BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0012: callvirt System.Collections.Generic.List`1[BattleTech.UI.CombatHUDWeaponSlot] get_DisplayedWeaponSlots()
L_0017: stloc.0
L_0018: ldc.i4.0
L_0019: stloc.1
L_001a: br Label1
L_001f: Label11
L_001f: newobj Void .ctor()
L_0024: stloc.2
L_0025: ldloc.2
L_0026: ldloc.0
L_0027: ldloc.1
L_0028: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_002d: callvirt BattleTech.Weapon get_DisplayedWeapon()
L_0032: stfld BattleTech.Weapon weapon
L_0037: ldc.i4.0
L_0038: stloc.3
L_0039: ldarg.0
L_003a: ldfld BattleTech.UI.CombatHUD HUD
L_003f: callvirt BattleTech.CombatGameState get_Combat()
L_0044: callvirt BattleTech.CombatGameConstants get_Constants()
L_0049: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_004e: ldfld System.Boolean collapseWeaponTypesInTickMarks
L_0053: brfalse Label2
L_0058: ldarg.1
L_0059: ldloc.2
L_005a: ldftn Boolean <GetValidSlots>b__0(BattleTech.UI.CombatHUDWeaponSlot)
L_0060: newobj Void .ctor(Object, IntPtr)
L_0065: callvirt BattleTech.UI.CombatHUDWeaponSlot Find(System.Predicate`1[BattleTech.UI.CombatHUDWeaponSlot])
L_006a: ldnull
L_006b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0070: stloc.3
L_0071: Label2
L_0071: ldloc.2
L_0072: ldfld BattleTech.Weapon weapon
L_0077: callvirt BattleTech.WeaponType get_Type()
L_007c: ldc.i4.s 9
L_007e: beq Label3
L_0083: ldarg.0
L_0084: ldloc.0
L_0085: ldloc.1
L_0086: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_008b: callvirt Int32 get_TargetIndex()
L_0090: call Boolean shouldShowThisWeapon(Int32)
L_0095: brfalse Label4
L_009a: ldloc.2
L_009b: ldfld BattleTech.Weapon weapon
L_00a0: callvirt Boolean get_IsEnabled()
L_00a5: brfalse Label5
L_00aa: ldloc.2
L_00ab: ldfld BattleTech.Weapon weapon
L_00b0: callvirt Boolean get_WillFire()
L_00b5: brfalse Label6
L_00ba: ldarg.3
L_00bb: brtrue Label7
L_00c0: ldloc.2
L_00c1: ldfld BattleTech.Weapon weapon
L_00c6: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_00cb: brfalse Label8
L_00d0: Label7
L_00d0: ldarg.2
L_00d1: ldloc.2
L_00d2: ldfld BattleTech.Weapon weapon
L_00d7: callvirt Single get_MaxRange()
L_00dc: bge.un Label9
L_00e1: ldarg.0
L_00e2: ldarg.0
L_00e3: ldfld System.Int32 numWeaponsAimingAt
L_00e8: ldc.i4.1
L_00e9: add
L_00ea: stfld System.Int32 numWeaponsAimingAt
L_00ef: ldloc.3
L_00f0: brtrue Label10
L_00f5: ldarg.1
L_00f6: ldloc.0
L_00f7: ldloc.1
L_00f8: callvirt BattleTech.UI.CombatHUDWeaponSlot get_Item(Int32)
L_00fd: callvirt Void Add(BattleTech.UI.CombatHUDWeaponSlot)
L_0102: Label3
L_0102: Label4
L_0102: Label5
L_0102: Label6
L_0102: Label8
L_0102: Label9
L_0102: Label10
L_0102: ldloc.1
L_0103: ldc.i4.1
L_0104: add
L_0105: stloc.1
L_0106: Label1
L_0106: ldloc.1
L_0107: ldloc.0
L_0108: callvirt Int32 get_Count()
L_010d: blt Label11
L_0112: ret
DONE

### Patch BattleTech.Weapon, Boolean WillFireAtTargetFromPosition(BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean get_IsDisabled()
L_000c: brfalse Label1
L_0011: ldc.i4.0
L_0012: br Label3
L_0017: Label1
L_0017: ldarg.0
L_0018: call Boolean get_HasAmmo()
L_001d: brtrue Label2
L_0022: ldc.i4.0
L_0023: br Label4
L_0028: Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.CombatGameState combat
L_002e: callvirt LOFCache get_LOFCache()
L_0033: ldarg.0
L_0034: ldfld BattleTech.AbstractActor parent
L_0039: ldarg.1
L_003a: ldarg.0
L_003b: call Single get_MaxRange()
L_0040: ldarg.2
L_0041: ldarg.3
L_0042: ldarg.1
L_0043: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0048: ldarg.1
L_0049: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_004e: ldarg.0
L_004f: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_0054: callvirt Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0059: Label3
L_0059: Label4
L_0059: stloc 0 (System.Boolean)
L_005a: ldarg.0
L_005b: ldarg 1
L_0061: ldarg 2
L_0067: ldarg 3
L_006d: ldloca 0 (System.Boolean)
L_006f: call Void Postfix(BattleTech.Weapon, BattleTech.ICombatant, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean ByRef)
L_0074: ldloc 0 (System.Boolean)
L_0075: ret
DONE

### Patch LOFCache, Boolean UnitHasLOFToTarget(BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg.1
L_0008: ldarg.2
L_0009: ldarg.3
L_000a: callvirt Single get_MaxRange()
L_000f: ldarg.1
L_0010: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_001b: ldarg.2
L_001c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0021: ldarg.2
L_0022: callvirt UnityEngine.Quaternion get_CurrentRotation()
L_0027: ldarg.3
L_0028: call Boolean IndirectFireCapable(BattleTech.Weapon)
L_002d: call Boolean UnitHasLOFToTargetAtTargetPosition(BattleTech.AbstractActor, BattleTech.ICombatant, Single, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean)
L_0032: stloc 0 (System.Boolean)
L_0033: ldarg.0
L_0034: ldarg 1
L_003a: ldarg 2
L_0040: ldarg 3
L_0046: ldloca 0 (System.Boolean)
L_0048: call Void Postfix(LOFCache, BattleTech.AbstractActor, BattleTech.ICombatant, BattleTech.Weapon, Boolean ByRef)
L_004d: ldloc 0 (System.Boolean)
L_004e: ret
DONE

### Patch BattleTech.WeaponHitInfo, Single ConsolidateInstability(System.String, Single, Single, Single, Single)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: ldc.r4 0
L_0005: stloc 2 (System.Single)
L_0006: ldc.r4 0
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: br Label1
L_0013: Label3
L_0013: ldarg.0
L_0014: ldarg.1
L_0015: ldloc.1
L_0016: call Boolean DidShotHitTarget(System.String, Int32)
L_001b: brfalse Label2
L_0020: ldloc.0
L_0021: ldarg.2
L_0022: add
L_0023: stloc.0
L_0024: Label2
L_0024: ldloc.1
L_0025: ldc.i4.1
L_0026: add
L_0027: stloc.1
L_0028: Label1
L_0028: ldloc.1
L_0029: ldarg.0
L_002a: ldfld System.Int32 numberOfShots
L_002f: blt Label3
L_0034: ldloc.0
L_0035: stloc 2 (System.Single)
L_0036: ldarga 0
L_003c: ldarg 1
L_0042: ldarg 2
L_0048: ldarg 3
L_004e: ldarg 4
L_0054: ldarg 5
L_005a: ldloca 2 (System.Single)
L_005c: call Void Postfix(BattleTech.WeaponHitInfo ByRef, System.String, Single, Single, Single, Single, Single ByRef)
L_0061: ldloc 2 (System.Single)
L_0062: ret
DONE

### Patch BattleTech.AttackDirector, Void ResolveSequenceTookDamage(System.String, AttackSequence)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.Mech
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Boolean
L_0000: Local var 8: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 13: System.Collections.Generic.List`1[[BattleTech.AmmoCategoryValue, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: BattleTech.AmmunitionBox
L_0000: Local var 16: System.Boolean
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.AmmunitionBox
L_0000: Local var 19: System.Nullable`1[[BattleTech.VOEvents, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: br Label1
L_0007: Label52
L_0007: ldarg.0
L_0008: call BattleTech.CombatGameState get_Combat()
L_000d: ldarg.2
L_000e: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0013: ldloc.0
L_0014: callvirt System.String get_Item(Int32)
L_0019: ldc.i4.0
L_001a: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_001f: stloc.1
L_0020: ldloc.1
L_0021: brfalse Label2
L_0026: ldloc.1
L_0027: callvirt BattleTech.Team get_team()
L_002c: callvirt Boolean get_LocalPlayerControlsTeam()
L_0031: brfalse Label3
L_0036: ldloc.1
L_0037: callvirt Boolean get_IsDead()
L_003c: brtrue Label4
L_0041: ldloc.1
L_0042: isinst BattleTech.AbstractActor
L_0047: stloc.3
L_0048: ldloc.3
L_0049: brfalse Label5
L_004e: ldc.i4.0
L_004f: stloc.s 4 (System.Boolean)
L_0051: ldarg.2
L_0052: ldloc.1
L_0053: callvirt System.String get_GUID()
L_0058: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] GetAttackWeaponCrits(System.String)
L_005d: stloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_005f: ldarg.2
L_0060: ldloc.1
L_0061: callvirt System.String get_GUID()
L_0066: callvirt System.Collections.Generic.List`1[BattleTech.AmmunitionBox] GetAttackAmmoCrits(System.String)
L_006b: stloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_006d: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_006f: callvirt Int32 get_Count()
L_0074: ldc.i4.0
L_0075: ble Label6
L_007a: ldc.i4.1
L_007b: stloc.s 4 (System.Boolean)
L_007d: ldc.i4.1
L_007e: stloc.s 7 (System.Boolean)
L_0080: ldloc.3
L_0081: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0086: stloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0088: ldc.i4.0
L_0089: stloc.s 10 (System.Int32)
L_008b: br Label7
L_0090: Label11
L_0090: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0092: ldloc.s 10 (System.Int32)
L_0094: callvirt BattleTech.Weapon get_Item(Int32)
L_0099: callvirt Boolean get_IsDisabled()
L_009e: brtrue Label8
L_00a3: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00a5: ldloc.s 10 (System.Int32)
L_00a7: callvirt BattleTech.Weapon get_Item(Int32)
L_00ac: callvirt Boolean get_HasAmmo()
L_00b1: brfalse Label9
L_00b6: ldc.i4.0
L_00b7: stloc.s 7 (System.Boolean)
L_00b9: br Label10
L_00be: Label8
L_00be: Label9
L_00be: ldloc.s 10 (System.Int32)
L_00c0: ldc.i4.1
L_00c1: add
L_00c2: stloc.s 10 (System.Int32)
L_00c4: Label7
L_00c4: ldloc.s 10 (System.Int32)
L_00c6: ldloc.s 8 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00c8: callvirt Int32 get_Count()
L_00cd: blt Label11
L_00d2: Label10
L_00d2: ldc.i4.0
L_00d3: stloc.s 9 (System.Boolean)
L_00d5: ldc.i4.0
L_00d6: stloc.s 11 (System.Int32)
L_00d8: br Label12
L_00dd: Label15
L_00dd: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00df: ldloc.s 11 (System.Int32)
L_00e1: callvirt BattleTech.Weapon get_Item(Int32)
L_00e6: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_00eb: ldc.i4.2
L_00ec: ble Label13
L_00f1: ldc.i4.1
L_00f2: stloc.s 9 (System.Boolean)
L_00f4: br Label14
L_00f9: Label13
L_00f9: ldloc.s 11 (System.Int32)
L_00fb: ldc.i4.1
L_00fc: add
L_00fd: stloc.s 11 (System.Int32)
L_00ff: Label12
L_00ff: ldloc.s 11 (System.Int32)
L_0101: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_0103: callvirt Int32 get_Count()
L_0108: blt Label15
L_010d: Label14
L_010d: ldloc.s 7 (System.Boolean)
L_010f: brfalse Label16
L_0114: ldarg.1
L_0115: ldc.i4.s 103
L_0117: ldloc.3
L_0118: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_011d: br Label17
L_0122: Label16
L_0122: ldloc.s 9 (System.Boolean)
L_0124: brfalse Label18
L_0129: ldarg.1
L_012a: ldc.i4.s 102
L_012c: ldloc.3
L_012d: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0132: br Label19
L_0137: Label18
L_0137: ldarg.1
L_0138: ldc.i4.s 75
L_013a: ldloc.3
L_013b: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0140: br Label20
L_0145: Label6
L_0145: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_0147: callvirt Int32 get_Count()
L_014c: ldc.i4.0
L_014d: ble Label21
L_0152: ldc.i4.1
L_0153: stloc.s 4 (System.Boolean)
L_0155: newobj Void .ctor()
L_015a: stloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_015c: newobj Void .ctor()
L_0161: stloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0163: ldc.i4.0
L_0164: stloc.s 14 (System.Int32)
L_0166: br Label22
L_016b: Label31
L_016b: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_016d: ldloc.s 14 (System.Int32)
L_016f: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_0174: stloc.s 15 (BattleTech.AmmunitionBox)
L_0176: ldc.i4.0
L_0177: stloc.s 16 (System.Boolean)
L_0179: ldc.i4.0
L_017a: stloc.s 17 (System.Int32)
L_017c: br Label23
L_0181: Label28
L_0181: ldloc.3
L_0182: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0187: ldloc.s 17 (System.Int32)
L_0189: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_018e: stloc.s 18 (BattleTech.AmmunitionBox)
L_0190: ldloc.s 18 (BattleTech.AmmunitionBox)
L_0192: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_0197: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0199: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_019e: callvirt Boolean Equals(System.Object)
L_01a3: brfalse Label24
L_01a8: ldloc.s 18 (BattleTech.AmmunitionBox)
L_01aa: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_01af: brtrue Label25
L_01b4: ldloc.s 18 (BattleTech.AmmunitionBox)
L_01b6: callvirt Int32 get_CurrentAmmo()
L_01bb: ldc.i4.0
L_01bc: ble Label26
L_01c1: ldc.i4.1
L_01c2: stloc.s 16 (System.Boolean)
L_01c4: br Label27
L_01c9: Label24
L_01c9: Label25
L_01c9: Label26
L_01c9: ldloc.s 17 (System.Int32)
L_01cb: ldc.i4.1
L_01cc: add
L_01cd: stloc.s 17 (System.Int32)
L_01cf: Label23
L_01cf: ldloc.s 17 (System.Int32)
L_01d1: ldloc.3
L_01d2: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_01d7: callvirt Int32 get_Count()
L_01dc: blt Label28
L_01e1: Label27
L_01e1: ldloc.s 16 (System.Boolean)
L_01e3: brtrue Label29
L_01e8: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_01ea: ldloc.s 15 (BattleTech.AmmunitionBox)
L_01ec: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_01f1: callvirt Int64 get_AmmoCategoryID()
L_01f6: callvirt Boolean Contains(Int64)
L_01fb: brtrue Label30
L_0200: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_0202: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0204: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_0209: callvirt Int64 get_AmmoCategoryID()
L_020e: callvirt Void Add(Int64)
L_0213: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0215: ldloc.s 15 (BattleTech.AmmunitionBox)
L_0217: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
L_021c: callvirt Void Add(BattleTech.AmmoCategoryValue)
L_0221: Label29
L_0221: Label30
L_0221: ldloc.s 14 (System.Int32)
L_0223: ldc.i4.1
L_0224: add
L_0225: stloc.s 14 (System.Int32)
L_0227: Label22
L_0227: ldloc.s 14 (System.Int32)
L_0229: ldloc.s 6 (System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_022b: callvirt Int32 get_Count()
L_0230: blt Label31
L_0235: ldloc.s 12 (System.Collections.Generic.List`1[System.Int64])
L_0237: callvirt Int32 get_Count()
L_023c: ldc.i4.1
L_023d: ble Label32
L_0242: ldarg.1
L_0243: ldc.i4.s 52
L_0245: ldloc.3
L_0246: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_024b: br Label33
L_0250: Label32
L_0250: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_0252: callvirt Int32 get_Count()
L_0257: ldc.i4.0
L_0258: ble Label34
L_025d: ldloc.s 13 (System.Collections.Generic.List`1[BattleTech.AmmoCategoryValue])
L_025f: ldc.i4.0
L_0260: callvirt BattleTech.AmmoCategoryValue get_Item(Int32)
L_0265: callvirt System.Nullable`1[BattleTech.VOEvents] GetVOEventsEnum()
L_026a: stloc.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_026c: ldloca.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_026e: call Boolean get_HasValue()
L_0273: brfalse Label35
L_0278: ldarg.1
L_0279: ldloca.s 19 (System.Nullable`1[BattleTech.VOEvents])
L_027b: call BattleTech.VOEvents get_Value()
L_0280: ldarg.2
L_0281: ldfld BattleTech.AbstractActor attacker
L_0286: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_028b: br Label36
L_0290: Label35
L_0290: ldarg.1
L_0291: ldc.i4.s 52
L_0293: ldarg.2
L_0294: ldfld BattleTech.AbstractActor attacker
L_0299: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_029e: br Label37
L_02a3: Label21
L_02a3: ldarg.2
L_02a4: ldloc.1
L_02a5: callvirt System.String get_GUID()
L_02aa: callvirt Boolean GetAttackDestroyedLeg(System.String)
L_02af: brfalse Label38
L_02b4: ldc.i4.1
L_02b5: stloc.s 4 (System.Boolean)
L_02b7: br Label39
L_02bc: Label38
L_02bc: ldarg.2
L_02bd: ldloc.1
L_02be: callvirt System.String get_GUID()
L_02c3: callvirt Int32 GetAttackCritsCount(System.String)
L_02c8: ldc.i4.0
L_02c9: ble Label40
L_02ce: ldc.i4.1
L_02cf: stloc.s 4 (System.Boolean)
L_02d1: ldarg.1
L_02d2: ldc.i4.s 75
L_02d4: ldloc.3
L_02d5: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_02da: br Label41
L_02df: Label40
L_02df: ldarg.2
L_02e0: ldloc.1
L_02e1: callvirt System.String get_GUID()
L_02e6: callvirt Single GetStructureDamageDealt(System.String)
L_02eb: ldc.r4 0
L_02f0: ble.un Label42
L_02f5: ldc.i4.1
L_02f6: stloc.s 4 (System.Boolean)
L_02f8: ldarg.1
L_02f9: ldc.i4.s 77
L_02fb: ldloc.3
L_02fc: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0301: br Label43
L_0306: Label42
L_0306: ldarg.2
L_0307: ldfld System.Single cumulativeDamage
L_030c: ldarg.0
L_030d: call BattleTech.CombatGameState get_Combat()
L_0312: callvirt BattleTech.CombatGameConstants get_Constants()
L_0317: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_031c: ldfld System.Single HeavyDamageThreshold
L_0321: bge Label44
L_0326: ldarg.2
L_0327: ldloc.1
L_0328: callvirt System.String get_GUID()
L_032d: callvirt Boolean GetLowArmorStruck(System.String)
L_0332: brfalse Label45
L_0337: Label44
L_0337: ldc.i4.1
L_0338: stloc.s 4 (System.Boolean)
L_033a: ldarg.1
L_033b: ldc.i4.s 76
L_033d: ldloc.3
L_033e: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0343: br Label46
L_0348: Label45
L_0348: ldarg.2
L_0349: ldfld System.Single cumulativeDamage
L_034e: ldc.r4 0
L_0353: ble.un Label47
L_0358: ldarg.1
L_0359: ldc.i4.s 74
L_035b: ldloc.3
L_035c: call Void QueueVOEvent(System.String, BattleTech.VOEvents, BattleTech.AbstractActor)
L_0361: Label17
L_0361: Label19
L_0361: Label20
L_0361: Label33
L_0361: Label34
L_0361: Label36
L_0361: Label37
L_0361: Label39
L_0361: Label41
L_0361: Label43
L_0361: Label46
L_0361: Label47
L_0361: ldloc.s 4 (System.Boolean)
L_0363: brfalse Label48
L_0368: ldc.i4.0
L_0369: ldloc.3
L_036a: call Void SetPilotVOSwitch[AudioSwitch_dialog_dark_light](AudioSwitch_dialog_dark_light, BattleTech.AbstractActor)
L_036f: Label2
L_036f: Label3
L_036f: Label4
L_036f: Label5
L_036f: Label48
L_036f: ldloc.1
L_0370: isinst BattleTech.Mech
L_0375: stloc.2
L_0376: ldarg.2
L_0377: ldloc.1
L_0378: callvirt System.String get_GUID()
L_037d: callvirt Boolean GetAttackDidHeatDamage(System.String)
L_0382: brfalse Label49
L_0387: ldloc.2
L_0388: brfalse Label50
L_038d: ldloc.2
L_038e: callvirt Int32 get_TempHeat()
L_0393: ldc.i4.0
L_0394: ble Label51
L_0399: ldarg.0
L_039a: call BattleTech.CombatGameState get_Combat()
L_039f: callvirt MessageCenter get_MessageCenter()
L_03a4: ldarg.2
L_03a5: ldfld BattleTech.AbstractActor attacker
L_03aa: callvirt System.String get_GUID()
L_03af: ldloc.2
L_03b0: callvirt System.String get_GUID()
L_03b5: ldstr "+{0} HEAT"
L_03ba: ldc.i4.1
L_03bb: newarr System.Object
L_03c0: dup
L_03c1: ldc.i4.0
L_03c2: ldloc.2
L_03c3: callvirt Int32 get_TempHeat()
L_03c8: box System.Int32
L_03cd: stelem.ref
L_03ce: newobj Void .ctor(String, Object[])
L_03d3: ldc.i4.2
L_03d4: newobj Void .ctor(String, String, Text, MessageNature)
L_03d9: callvirt Void PublishMessage(MessageCenterMessage)
L_03de: ldloc.2
L_03df: ldarg.2
L_03e0: ldfld System.Int32 id
L_03e5: ldc.i4.0
L_03e6: ldc.i4.0
L_03e7: ldarg.2
L_03e8: ldfld BattleTech.AbstractActor attacker
L_03ed: callvirt System.String get_GUID()
L_03f2: callvirt Void GenerateAndPublishHeatSequence(Int32, Boolean, Boolean, System.String)
L_03f7: Label49
L_03f7: Label50
L_03f7: Label51
L_03f7: ldloc.0
L_03f8: ldc.i4.1
L_03f9: add
L_03fa: stloc.0
L_03fb: Label1
L_03fb: ldloc.0
L_03fc: ldarg.2
L_03fd: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0402: callvirt Int32 get_Count()
L_0407: blt Label52
L_040c: ldarg.0
L_040d: ldarg 1
L_0413: ldarg 2
L_0419: call Void Postfix(BattleTech.AttackDirector, System.String, AttackSequence)
L_041e: ret
DONE

### Patch BattleTech.Mech, Void ResolveWeaponDamage(BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: BattleTech.LineOfFireLevel
L_0000: Local var 3: System.Single
L_0000: Local var 4: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 5: System.Collections.Generic.Dictionary`2+Enumerator[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Collections.Generic.KeyValuePair`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: BattleTech.ChassisLocations
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: callvirt BattleTech.AttackDirector get_AttackDirector()
L_000b: ldarg.1
L_000c: ldfld System.Int32 attackSequenceId
L_0011: callvirt AttackSequence GetAttackSequence(Int32)
L_0016: stloc.0
L_0017: ldarg.2
L_0018: ldfld BattleTech.AbstractActor parent
L_001d: brtrue Label1
L_0022: ldarg.2
L_0023: callvirt Single get_DamagePerShot()
L_0028: stloc.1
L_0029: br Label2
L_002e: Label1
L_002e: ldarg.2
L_002f: ldarg.2
L_0030: ldfld BattleTech.AbstractActor parent
L_0035: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_003a: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_003f: stloc.1
L_0040: Label2
L_0040: ldarg.0
L_0041: call BattleTech.CombatGameState get_Combat()
L_0046: ldarg.1
L_0047: ldfld System.String attackerId
L_004c: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0051: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0056: ldarg.0
L_0057: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_005c: stloc.s 4 (BattleTech.VisibilityLevelAndAttribution)
L_005e: ldloca.s 4 (BattleTech.VisibilityLevelAndAttribution)
L_0060: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0065: stloc.2
L_0066: ldarg.0
L_0067: ldloc.1
L_0068: ldarg.2
L_0069: callvirt BattleTech.WeaponCategory get_Category()
L_006e: ldarg.0
L_006f: call BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0074: ldloc.2
L_0075: ldc.i4.0
L_0076: call Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_007b: stloc.1
L_007c: ldarga.s 1
L_007e: ldarg.0
L_007f: call System.String get_GUID()
L_0084: ldloc.1
L_0085: call System.Collections.Generic.Dictionary`2[System.Int32,System.Single] ConsolidateCriticalHitInfo(System.String, Single)
L_008a: callvirt Enumerator GetEnumerator()
L_008f: stloc.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
.try
{
	L_0091: br Label3
	L_0096: Label8
	L_0096: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_0098: call System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single] get_Current()
	L_009d: stloc.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_009f: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00a1: call Int32 get_Key()
	L_00a6: brfalse Label4
	L_00ab: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00ad: call Int32 get_Key()
	L_00b2: ldc.i4 65536
	L_00b7: beq Label5
	L_00bc: ldarg.0
	L_00bd: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00bf: call Int32 get_Key()
	L_00c4: callvirt Single ArmorForLocation(Int32)
	L_00c9: ldc.r4 0
	L_00ce: bgt.un Label6
	L_00d3: ldloca.s 6 (System.Collections.Generic.KeyValuePair`2[System.Int32,System.Single])
	L_00d5: call Int32 get_Key()
	L_00da: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
	L_00df: stloc.s 7 (BattleTech.ChassisLocations)
	L_00e1: ldarg.0
	L_00e2: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00e4: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
	L_00e9: brtrue Label7
	L_00ee: ldarg.0
	L_00ef: ldarg.1
	L_00f0: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00f2: ldarg.2
	L_00f3: call Void CheckForCrit(BattleTech.WeaponHitInfo, BattleTech.ChassisLocations, BattleTech.Weapon)
	L_00f8: Label3
	L_00f8: Label4
	L_00f8: Label5
	L_00f8: Label6
	L_00f8: Label7
	L_00f8: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_00fa: call Boolean MoveNext()
	L_00ff: brtrue Label8
	L_0104: leave Label9
	L_0109: leave (autogenerated)
} // end try
.finally
{
	L_010e: ldloca.s 5 (System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single])
	L_0110: constrained. System.Collections.Generic.Dictionary`2+Enumerator[System.Int32,System.Single]
	L_0116: callvirt Void Dispose()
	L_011b: endfinally
	L_011c: leave (autogenerated)
} // end handler
L_011d: Label9
L_011d: ldarg.2
L_011e: call Single HeatDamagePerShot(BattleTech.Weapon)
L_0123: ldc.r4 0
L_0128: ble.un Label10
L_012d: ldc.i4.0
L_012e: stloc.s 8 (System.Boolean)
L_0130: ldc.i4.0
L_0131: stloc.s 9 (System.Int32)
L_0133: br Label11
L_0138: Label15
L_0138: ldarga.s 1
L_013a: ldarg.0
L_013b: call System.String get_GUID()
L_0140: ldloc.s 9 (System.Int32)
L_0142: call Boolean DidShotHitTarget(System.String, Int32)
L_0147: brfalse Label12
L_014c: ldarga.s 1
L_014e: ldloc.s 9 (System.Int32)
L_0150: call Int32 ShotHitLocation(Int32)
L_0155: brfalse Label13
L_015a: ldarga.s 1
L_015c: ldloc.s 9 (System.Int32)
L_015e: call Int32 ShotHitLocation(Int32)
L_0163: ldc.i4 65536
L_0168: beq Label14
L_016d: ldc.i4.1
L_016e: stloc.s 8 (System.Boolean)
L_0170: ldarg.0
L_0171: ldstr "Heat Damage from {0}"
L_0176: ldarg.2
L_0177: callvirt BattleTech.DescriptionDef get_Description()
L_017c: callvirt System.String get_Name()
L_0181: call System.String Format(System.String, System.Object)
L_0186: ldarg.2
L_0187: ldarg.1
L_0188: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_018d: ldloc.s 9 (System.Int32)
L_018f: ldelem.i4
L_0190: callvirt Single HeatDamagePerShotAdjusted(BattleTech.AttackImpactQuality)
L_0195: conv.i4
L_0196: callvirt Void AddExternalHeat(System.String, Int32)
L_019b: Label12
L_019b: Label13
L_019b: Label14
L_019b: ldloc.s 9 (System.Int32)
L_019d: ldc.i4.1
L_019e: add
L_019f: stloc.s 9 (System.Int32)
L_01a1: Label11
L_01a1: ldloc.s 9 (System.Int32)
L_01a3: ldarg.1
L_01a4: ldfld System.Int32 numberOfShots
L_01a9: blt Label15
L_01ae: ldloc.s 8 (System.Boolean)
L_01b0: brfalse Label16
L_01b5: ldloc.0
L_01b6: brfalse Label17
L_01bb: ldloc.0
L_01bc: ldarg.0
L_01bd: call System.String get_GUID()
L_01c2: callvirt Void FlagAttackDidHeatDamage(System.String)
L_01c7: Label10
L_01c7: Label16
L_01c7: Label17
L_01c7: ldarga.s 1
L_01c9: ldarg.0
L_01ca: call System.String get_GUID()
L_01cf: ldarg.2
L_01d0: callvirt Single Instability()
L_01d5: ldarg.0
L_01d6: call BattleTech.CombatGameState get_Combat()
L_01db: callvirt BattleTech.CombatGameConstants get_Constants()
L_01e0: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_01e5: ldfld System.Single GlancingBlowDamageMultiplier
L_01ea: ldarg.0
L_01eb: call BattleTech.CombatGameState get_Combat()
L_01f0: callvirt BattleTech.CombatGameConstants get_Constants()
L_01f5: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_01fa: ldfld System.Single NormalBlowDamageMultiplier
L_01ff: ldarg.0
L_0200: call BattleTech.CombatGameState get_Combat()
L_0205: callvirt BattleTech.CombatGameConstants get_Constants()
L_020a: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_020f: ldfld System.Single SolidBlowDamageMultiplier
L_0214: call Single ConsolidateInstability(System.String, Single, Single, Single, Single)
L_0219: stloc.3
L_021a: ldloc.3
L_021b: ldarg.0
L_021c: call BattleTech.StatCollection get_StatCollection()
L_0221: ldstr "ReceivedInstabilityMultiplier"
L_0226: callvirt Single GetValue[Single](System.String)
L_022b: mul
L_022c: stloc.3
L_022d: ldloc.3
L_022e: ldarg.0
L_022f: call Single get_EntrenchedMultiplier()
L_0234: mul
L_0235: stloc.3
L_0236: ldarg.0
L_0237: ldloc.3
L_0238: ldc.i4.1
L_0239: ldarg.1
L_023a: ldfld System.String attackerId
L_023f: call Void AddAbsoluteInstability(Single, BattleTech.StabilityChangeSource, System.String)
L_0244: ldarg.0
L_0245: ldarg 1
L_024b: ldarg 2
L_0251: ldarg 3
L_0257: call Void Postfix(BattleTech.Mech, BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_025c: ldarg.0
L_025d: ldarg 1
L_0263: ldarg 2
L_0269: ldarg 3
L_026f: call Void Postfix(BattleTech.Mech, BattleTech.WeaponHitInfo, BattleTech.Weapon, BattleTech.MeleeAttackType)
L_0274: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceResolveDamage(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceResolveDamageMessage
L_0000: Local var 1: BattleTech.WeaponHitInfo
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.ICombatant
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.AbstractActor
L_0000: Local var 12: System.Int32
L_0000: Local var 13: BattleTech.EffectData[]
L_0000: Local var 14: System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 15: System.Int32
L_0000: Local var 16: BattleTech.EffectData
L_0000: Local var 17: System.String
L_0000: Local var 18: System.Int32
L_0000: Local var 19: BattleTech.EffectData
L_0000: Local var 20: System.String
L_0000: ldarga 1
L_0006: ldarg.0
L_0007: call Boolean Prefix(MessageCenterMessage ByRef, AttackSequence)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg 1
L_0018: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_001d: brfalse Label0
L_0022: ldarg.1
L_0023: castclass BattleTech.AttackSequenceResolveDamageMessage
L_0028: stloc.0
L_0029: ldloc.0
L_002a: ldfld BattleTech.WeaponHitInfo hitInfo
L_002f: stloc.1
L_0030: ldloc.1
L_0031: ldfld System.Int32 attackSequenceId
L_0036: ldarg.0
L_0037: ldfld System.Int32 id
L_003c: beq Label1
L_0041: br Label21
L_0046: Label1
L_0046: ldarg.0
L_0047: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_004c: ldloc.0
L_004d: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceResolveDamageMessage)
L_0052: brtrue Label2
L_0057: ldarg.0
L_0058: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_005d: ldloc.0
L_005e: callvirt Void StoreMessage(MessageCenterMessage)
L_0063: br Label22
L_0068: Label2
L_0068: ldsfld HBS.Logging.ILog logger
L_006d: callvirt Boolean get_IsLogEnabled()
L_0072: brfalse Label3
L_0077: ldsfld HBS.Logging.ILog logger
L_007c: ldstr "[OnAttackSequenceResolveDamage]  ID {0}, Group {1}, Weapon {2}, AttackerId [{3}], TargetId [{4}]"
L_0081: ldc.i4.5
L_0082: newarr System.Object
L_0087: dup
L_0088: ldc.i4.0
L_0089: ldarg.0
L_008a: ldfld System.Int32 id
L_008f: box System.Int32
L_0094: stelem.ref
L_0095: dup
L_0096: ldc.i4.1
L_0097: ldloc.1
L_0098: ldfld System.Int32 attackGroupIndex
L_009d: box System.Int32
L_00a2: stelem.ref
L_00a3: dup
L_00a4: ldc.i4.2
L_00a5: ldloc.1
L_00a6: ldfld System.Int32 attackWeaponIndex
L_00ab: box System.Int32
L_00b0: stelem.ref
L_00b1: dup
L_00b2: ldc.i4.3
L_00b3: ldloc.1
L_00b4: ldfld System.String attackerId
L_00b9: stelem.ref
L_00ba: dup
L_00bb: ldc.i4.4
L_00bc: ldloc.1
L_00bd: ldfld System.String targetId
L_00c2: stelem.ref
L_00c3: call System.String Format(System.String, System.Object[])
L_00c8: callvirt Void Log(System.Object)
L_00cd: Label3
L_00cd: ldloc.0
L_00ce: ldflda BattleTech.WeaponHitInfo hitInfo
L_00d3: ldfld System.Int32 attackGroupIndex
L_00d8: stloc.2
L_00d9: ldloc.0
L_00da: ldflda BattleTech.WeaponHitInfo hitInfo
L_00df: ldfld System.Int32 attackWeaponIndex
L_00e4: stloc.3
L_00e5: ldarg.0
L_00e6: ldloc.2
L_00e7: ldloc.3
L_00e8: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_00ed: stloc.s 4 (BattleTech.Weapon)
L_00ef: ldarg.0
L_00f0: ldfld System.Int32 BogusAssMeleeAttackType
L_00f5: ldc.i4.6
L_00f6: bne.un Label4
L_00fb: ldarg.0
L_00fc: ldfld BattleTech.AbstractActor attacker
L_0101: callvirt BattleTech.StatCollection get_StatCollection()
L_0106: ldstr "DFASelfDamage"
L_010b: callvirt Single GetValue[Single](System.String)
L_0110: stloc.s 7 (System.Single)
L_0112: ldarg.0
L_0113: ldfld BattleTech.AbstractActor attacker
L_0118: ldloc.0
L_0119: ldfld BattleTech.WeaponHitInfo hitInfo
L_011e: ldc.i4.s 64
L_0120: ldloc.s 4 (BattleTech.Weapon)
L_0122: ldloc.s 7 (System.Single)
L_0124: ldc.i4.0
L_0125: ldc.i4.6
L_0126: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_012b: ldarg.0
L_012c: ldfld BattleTech.AbstractActor attacker
L_0131: ldloc.0
L_0132: ldfld BattleTech.WeaponHitInfo hitInfo
L_0137: ldc.i4 128
L_013c: ldloc.s 4 (BattleTech.Weapon)
L_013e: ldloc.s 7 (System.Single)
L_0140: ldc.i4.0
L_0141: ldc.i4.6
L_0142: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0147: ldsfld HBS.Logging.ILog damageLogger
L_014c: callvirt Boolean get_IsLogEnabled()
L_0151: brfalse Label5
L_0156: ldsfld HBS.Logging.ILog damageLogger
L_015b: ldstr "@@@@@@@@ {0} takes {1} damage to its legs from the DFA attack!"
L_0160: ldarg.0
L_0161: ldfld BattleTech.AbstractActor attacker
L_0166: callvirt System.String get_DisplayName()
L_016b: ldloc.s 7 (System.Single)
L_016d: box System.Single
L_0172: call System.String Format(System.String, System.Object, System.Object)
L_0177: callvirt Void Log(System.Object)
L_017c: Label4
L_017c: Label5
L_017c: newobj Void .ctor()
L_0181: stloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0183: ldarg.0
L_0184: ldfld BattleTech.ICombatant chosenTarget
L_0189: ldloc.0
L_018a: ldfld BattleTech.WeaponHitInfo hitInfo
L_018f: callvirt Void ResolveWeaponDamage(BattleTech.WeaponHitInfo)
L_0194: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0196: ldarg.0
L_0197: ldfld BattleTech.ICombatant chosenTarget
L_019c: callvirt Void Add(BattleTech.ICombatant)
L_01a1: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.ICombatant chosenTarget
L_01a9: callvirt System.String get_GUID()
L_01ae: call Int32 GetFirstHitLocationForTarget(System.String)
L_01b3: ldc.i4.0
L_01b4: blt Label6
L_01b9: ldarg.0
L_01ba: ldc.i4.0
L_01bb: call Void set_attackCompletelyMissed(Boolean)
L_01c0: Label6
L_01c0: ldc.i4.0
L_01c1: stloc.s 8 (System.Int32)
L_01c3: br Label7
L_01c8: Label10
L_01c8: ldarg.0
L_01c9: call BattleTech.AttackDirector get_Director()
L_01ce: callvirt BattleTech.CombatGameState get_Combat()
L_01d3: ldloc.0
L_01d4: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d9: ldfld System.String[] secondaryTargetIds
L_01de: ldloc.s 8 (System.Int32)
L_01e0: ldelem.ref
L_01e1: ldc.i4.0
L_01e2: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01e7: stloc.s 9 (BattleTech.ICombatant)
L_01e9: ldloc.s 9 (BattleTech.ICombatant)
L_01eb: brfalse Label8
L_01f0: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_01f2: ldloc.s 9 (BattleTech.ICombatant)
L_01f4: callvirt Boolean Contains(BattleTech.ICombatant)
L_01f9: brtrue Label9
L_01fe: ldloc.s 5 (System.Collections.Generic.List`1[BattleTech.ICombatant])
L_0200: ldloc.s 9 (BattleTech.ICombatant)
L_0202: callvirt Void Add(BattleTech.ICombatant)
L_0207: ldloc.s 9 (BattleTech.ICombatant)
L_0209: ldloc.0
L_020a: ldfld BattleTech.WeaponHitInfo hitInfo
L_020f: callvirt Void ResolveWeaponDamage(BattleTech.WeaponHitInfo)
L_0214: Label8
L_0214: Label9
L_0214: ldloc.s 8 (System.Int32)
L_0216: ldc.i4.1
L_0217: add
L_0218: stloc.s 8 (System.Int32)
L_021a: Label7
L_021a: ldloc.s 8 (System.Int32)
L_021c: ldloc.0
L_021d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0222: ldfld System.String[] secondaryTargetIds
L_0227: ldlen
L_0228: conv.i4
L_0229: blt Label10
L_022e: ldarg.0
L_022f: call BattleTech.AttackDirector get_Director()
L_0234: ldloc.1
L_0235: ldfld System.Int32 attackSequenceId
L_023a: callvirt AttackSequence GetAttackSequence(Int32)
L_023f: stloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_0241: ldc.i4.0
L_0242: stloc.s 10 (System.Int32)
L_0244: br Label11
L_0249: Label20
L_0249: ldarg.0
L_024a: call BattleTech.AttackDirector get_Director()
L_024f: callvirt BattleTech.CombatGameState get_Combat()
L_0254: ldloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_0256: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_025b: ldloc.s 10 (System.Int32)
L_025d: callvirt System.String get_Item(Int32)
L_0262: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0267: stloc.s 11 (BattleTech.AbstractActor)
L_0269: ldloc.s 11 (BattleTech.AbstractActor)
L_026b: brfalse Label12
L_0270: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_0272: ldloc.s 11 (BattleTech.AbstractActor)
L_0274: callvirt System.String get_GUID()
L_0279: call Int32 GetFirstHitLocationForTarget(System.String)
L_027e: stloc.s 12 (System.Int32)
L_0280: ldloc.s 12 (System.Int32)
L_0282: ldc.i4.0
L_0283: blt Label13
L_0288: ldloc.s 11 (BattleTech.AbstractActor)
L_028a: callvirt Boolean get_IsDead()
L_028f: brtrue Label14
L_0294: ldloc.s 4 (BattleTech.Weapon)
L_0296: callvirt BattleTech.WeaponDef get_weaponDef()
L_029b: callvirt BattleTech.EffectData[] get_statusEffects()
L_02a0: stloc.s 13 (BattleTech.EffectData[])
L_02a2: ldc.i4.0
L_02a3: stloc.s 15 (System.Int32)
L_02a5: br Label15
L_02aa: Label17
L_02aa: ldloc.s 13 (BattleTech.EffectData[])
L_02ac: ldloc.s 15 (System.Int32)
L_02ae: ldelem.ref
L_02af: stloc.s 16 (BattleTech.EffectData)
L_02b1: ldloc.s 16 (BattleTech.EffectData)
L_02b3: ldflda BattleTech.EffectTargetingData targetingData
L_02b8: ldfld BattleTech.EffectTriggerType effectTriggerType
L_02bd: ldc.i4.2
L_02be: bne.un Label16
L_02c3: ldstr "OnHitEffect_{0}_{1}"
L_02c8: ldarg.0
L_02c9: ldfld BattleTech.AbstractActor attacker
L_02ce: callvirt System.String get_GUID()
L_02d3: ldloc.0
L_02d4: ldflda BattleTech.WeaponHitInfo hitInfo
L_02d9: ldfld System.Int32 attackSequenceId
L_02de: box System.Int32
L_02e3: call System.String Format(System.String, System.Object, System.Object)
L_02e8: stloc.s 17 (System.String)
L_02ea: ldarg.0
L_02eb: call BattleTech.AttackDirector get_Director()
L_02f0: callvirt BattleTech.CombatGameState get_Combat()
L_02f5: callvirt BattleTech.EffectManager get_EffectManager()
L_02fa: ldloc.s 16 (BattleTech.EffectData)
L_02fc: ldloc.s 17 (System.String)
L_02fe: ldarg.0
L_02ff: ldfld System.Int32 stackItemUID
L_0304: ldarg.0
L_0305: ldfld BattleTech.AbstractActor attacker
L_030a: ldloc.s 11 (BattleTech.AbstractActor)
L_030c: ldloc.1
L_030d: ldloc.s 12 (System.Int32)
L_030f: ldc.i4.0
L_0310: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_0315: pop
L_0316: ldarg.0
L_0317: call BattleTech.AttackDirector get_Director()
L_031c: callvirt BattleTech.CombatGameState get_Combat()
L_0321: callvirt MessageCenter get_MessageCenter()
L_0326: ldloc.s 11 (BattleTech.AbstractActor)
L_0328: callvirt System.String get_GUID()
L_032d: ldloc.s 11 (BattleTech.AbstractActor)
L_032f: callvirt System.String get_GUID()
L_0334: ldloc.s 16 (BattleTech.EffectData)
L_0336: ldfld BattleTech.BaseDescriptionDef Description
L_033b: callvirt System.String get_Name()
L_0340: ldc.i4.2
L_0341: newobj Void .ctor(String, String, String, MessageNature)
L_0346: callvirt Void PublishMessage(MessageCenterMessage)
L_034b: Label16
L_034b: ldloc.s 15 (System.Int32)
L_034d: ldc.i4.1
L_034e: add
L_034f: stloc.s 15 (System.Int32)
L_0351: Label15
L_0351: ldloc.s 15 (System.Int32)
L_0353: ldloc.s 13 (BattleTech.EffectData[])
L_0355: ldlen
L_0356: conv.i4
L_0357: blt Label17
L_035c: ldloc.s 11 (BattleTech.AbstractActor)
L_035e: ldc.i4.3
L_035f: callvirt System.Collections.Generic.List`1[BattleTech.EffectData] GetComponentStatusEffectsForTriggerType(BattleTech.EffectTriggerType)
L_0364: stloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_0366: ldc.i4.0
L_0367: stloc.s 18 (System.Int32)
L_0369: br Label18
L_036e: Label19
L_036e: ldloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_0370: ldloc.s 18 (System.Int32)
L_0372: callvirt BattleTech.EffectData get_Item(Int32)
L_0377: stloc.s 19 (BattleTech.EffectData)
L_0379: ldstr "OnDamagedEffect_{0}_{1}"
L_037e: ldloc.s 11 (BattleTech.AbstractActor)
L_0380: callvirt System.String get_GUID()
L_0385: ldloc.0
L_0386: ldflda BattleTech.WeaponHitInfo hitInfo
L_038b: ldfld System.Int32 attackSequenceId
L_0390: box System.Int32
L_0395: call System.String Format(System.String, System.Object, System.Object)
L_039a: stloc.s 20 (System.String)
L_039c: ldarg.0
L_039d: call BattleTech.AttackDirector get_Director()
L_03a2: callvirt BattleTech.CombatGameState get_Combat()
L_03a7: callvirt BattleTech.EffectManager get_EffectManager()
L_03ac: ldloc.s 19 (BattleTech.EffectData)
L_03ae: ldloc.s 20 (System.String)
L_03b0: ldarg.0
L_03b1: ldfld System.Int32 stackItemUID
L_03b6: ldloc.s 11 (BattleTech.AbstractActor)
L_03b8: ldarg.0
L_03b9: ldfld BattleTech.AbstractActor attacker
L_03be: ldloc.1
L_03bf: ldloc.s 12 (System.Int32)
L_03c1: ldc.i4.0
L_03c2: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_03c7: pop
L_03c8: ldloc.s 18 (System.Int32)
L_03ca: ldc.i4.1
L_03cb: add
L_03cc: stloc.s 18 (System.Int32)
L_03ce: Label18
L_03ce: ldloc.s 18 (System.Int32)
L_03d0: ldloc.s 14 (System.Collections.Generic.List`1[BattleTech.EffectData])
L_03d2: callvirt Int32 get_Count()
L_03d7: blt Label19
L_03dc: Label12
L_03dc: Label13
L_03dc: Label14
L_03dc: ldloc.s 10 (System.Int32)
L_03de: ldc.i4.1
L_03df: add
L_03e0: stloc.s 10 (System.Int32)
L_03e2: Label11
L_03e2: ldloc.s 10 (System.Int32)
L_03e4: ldloc.s 6 (BattleTech.AttackDirector+AttackSequence)
L_03e6: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_03eb: callvirt Int32 get_Count()
L_03f0: blt Label20
L_03f5: ldarg.0
L_03f6: ldfld BattleTech.AbstractActor attacker
L_03fb: ldarg.0
L_03fc: ldfld BattleTech.AbstractActor attacker
L_0401: callvirt System.String get_GUID()
L_0406: callvirt Void HandleDeath(System.String)
L_040b: ldarg.0
L_040c: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0411: ldloc.0
L_0412: callvirt Void MessageComplete(MessageCenterMessage)
L_0417: Label21
L_0417: Label22
L_0417: Label0
L_0417: ret
DONE

### Patch BattleTech.UI.CombatHUDActionButton, Void ExecuteClick()
L_0000: Local var 0: BattleTech.UI.SelectionState
L_0000: Local var 1: System.Boolean
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.CombatHUDActionButton)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: callvirt Boolean get_IsValidButton()
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: call ButtonState get_state()
L_001c: ldc.i4.2
L_001d: beq Label2
L_0022: ldarg.0
L_0023: call BattleTech.UI.CombatHUD get_HUD()
L_0028: callvirt BattleTech.AbstractActor get_SelectedActor()
L_002d: brfalse Label3
L_0032: ldarg.0
L_0033: call BattleTech.Ability get_Ability()
L_0038: brfalse Label4
L_003d: ldarg.0
L_003e: call BattleTech.Ability get_Ability()
L_0043: callvirt BattleTech.AbilityDef get_Def()
L_0048: callvirt ActivationTiming get_ActivationTime()
L_004d: ldc.i4.1
L_004e: bne.un Label5
L_0053: Label1
L_0053: Label2
L_0053: Label3
L_0053: ldc.i4 197
L_0058: call AkGameObj get_GlobalAudioObject()
L_005d: ldnull
L_005e: ldnull
L_005f: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_0064: pop
L_0065: br Label19
L_006a: Label4
L_006a: Label5
L_006a: ldarg.0
L_006b: ldc.i4.0
L_006c: call Void set_isAutoHighlighted(Boolean)
L_0071: ldarg.0
L_0072: call BattleTech.UI.SelectionType get_SelectionType()
L_0077: brtrue Label6
L_007c: ldarg.0
L_007d: call System.String get_GUID()
L_0082: ldstr "BTN_Restart"
L_0087: call Boolean op_Equality(System.String, System.String)
L_008c: brfalse Label7
L_0091: ldarg.0
L_0092: call BattleTech.UI.CombatHUD get_HUD()
L_0097: ldarg.0
L_0098: call System.String get_GUID()
L_009d: callvirt System.String ToString()
L_00a2: ldc.i4 223
L_00a7: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00ac: br Label20
L_00b1: Label7
L_00b1: ldarg.0
L_00b2: call BattleTech.Ability get_Ability()
L_00b7: brfalse Label8
L_00bc: ldarg.0
L_00bd: call Void ToggleAbilityState()
L_00c2: br Label21
L_00c7: Label8
L_00c7: ldarg.0
L_00c8: call BattleTech.UI.CombatHUD get_HUD()
L_00cd: ldarg.0
L_00ce: call System.String get_GUID()
L_00d3: callvirt System.String ToString()
L_00d8: ldc.i4 193
L_00dd: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00e2: br Label22
L_00e7: Label6
L_00e7: ldarg.0
L_00e8: call BattleTech.UI.CombatHUD get_HUD()
L_00ed: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00f2: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_00f7: stloc.0
L_00f8: ldarg.0
L_00f9: call Boolean get_IsActive()
L_00fe: brtrue Label9
L_0103: ldloc.0
L_0104: brfalse Label10
L_0109: ldloc.0
L_010a: callvirt BattleTech.IStackSequence get_Orders()
L_010f: ldnull
L_0110: cgt.un
L_0112: br Label11
L_0117: Label10
L_0117: ldc.i4.0
L_0118: Label11
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldc.i4.1
L_011b: call Void set_IsActive(Boolean)
L_0120: ldarg.0
L_0121: call BattleTech.UI.SelectionType get_SelectionType()
L_0126: ldc.i4.s 30
L_0128: bne.un Label12
L_012d: ldloc.1
L_012e: brtrue Label13
L_0133: ldarg.0
L_0134: call BattleTech.UI.CombatHUD get_HUD()
L_0139: ldarg.0
L_013a: call System.String get_GUID()
L_013f: callvirt System.String ToString()
L_0144: ldc.i4 193
L_0149: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_014e: Label12
L_014e: Label13
L_014e: ldarg.0
L_014f: call BattleTech.UI.SelectionType get_SelectionType()
L_0154: ldc.i4.3
L_0155: bne.un Label14
L_015a: ldc.i4 200
L_015f: call AkGameObj get_GlobalAudioObject()
L_0164: ldnull
L_0165: ldnull
L_0166: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_016b: pop
L_016c: br Label23
L_0171: Label14
L_0171: ldarg.0
L_0172: call BattleTech.UI.SelectionType get_SelectionType()
L_0177: ldc.i4.6
L_0178: bne.un Label15
L_017d: ldc.i4 196
L_0182: call AkGameObj get_GlobalAudioObject()
L_0187: ldnull
L_0188: ldnull
L_0189: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_018e: pop
L_018f: br Label24
L_0194: Label15
L_0194: ldc.i4 193
L_0199: call AkGameObj get_GlobalAudioObject()
L_019e: ldnull
L_019f: ldnull
L_01a0: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_01a5: pop
L_01a6: br Label25
L_01ab: Label9
L_01ab: ldloc.0
L_01ac: brfalse Label16
L_01b1: ldloc.0
L_01b2: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_01b7: ldarg.0
L_01b8: call BattleTech.UI.SelectionType get_SelectionType()
L_01bd: bne.un Label17
L_01c2: ldarg.0
L_01c3: call BattleTech.UI.CombatHUD get_HUD()
L_01c8: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_01cd: callvirt Boolean get_CanActiveStateBePopped()
L_01d2: brfalse Label18
L_01d7: ldarg.0
L_01d8: ldc.i4.0
L_01d9: call Void set_IsActive(Boolean)
L_01de: ldc.i4 193
L_01e3: call AkGameObj get_GlobalAudioObject()
L_01e8: ldnull
L_01e9: ldnull
L_01ea: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_01ef: pop
L_01f0: Label16
L_01f0: Label17
L_01f0: Label18
L_01f0: Label19
L_01f0: Label20
L_01f0: Label21
L_01f0: Label22
L_01f0: Label23
L_01f0: Label24
L_01f0: Label25
L_01f0: Label0
L_01f0: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void OnPointerDown(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: callvirt InputButton get_button()
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0022: ldc.i4.2
L_0023: beq Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_002e: ldc.i4.1
L_002f: beq Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.Weapon displayedWeapon
L_003a: callvirt Boolean get_IsDisabled()
L_003f: brtrue Label4
L_0044: ldarg.0
L_0045: ldfld BattleTech.Weapon displayedWeapon
L_004a: callvirt Boolean get_HasAmmo()
L_004f: brfalse Label5
L_0054: ldarg.0
L_0055: ldfld SVGImporter.SVGImage MainImage
L_005a: ldarg.0
L_005b: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0060: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_0065: callvirt UnityEngine.Color get_PressedBGColor()
L_006a: callvirt Void set_color(UnityEngine.Color)
L_006f: ldarg.0
L_0070: ldarg.0
L_0071: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0076: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_007b: callvirt UnityEngine.Color get_PressedTextColor()
L_0080: ldc.i4.1
L_0081: call Void ShowTextColor(UnityEngine.Color, Boolean)
L_0086: ldarg.0
L_0087: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_008c: ldfld SVGImporter.SVGImage childImage
L_0091: ldarg.0
L_0092: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0097: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_009c: callvirt UnityEngine.Color get_PressedToggleColor()
L_00a1: callvirt Void set_color(UnityEngine.Color)
L_00a6: Label1
L_00a6: Label2
L_00a6: Label3
L_00a6: Label4
L_00a6: Label5
L_00a6: Label0
L_00a6: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void OnPointerUp(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: callvirt InputButton get_button()
L_0017: brtrue Label1
L_001c: ldarg.0
L_001d: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0022: ldc.i4.2
L_0023: beq Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_002e: ldc.i4.1
L_002f: beq Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.Weapon displayedWeapon
L_003a: callvirt Boolean get_IsDisabled()
L_003f: brtrue Label4
L_0044: ldarg.0
L_0045: ldfld BattleTech.CombatGameState Combat
L_004a: callvirt BattleTech.StackManager get_StackManager()
L_004f: callvirt BattleTech.AttackStackSequence GetAnyAttackSequence()
L_0054: brfalse Label5
L_0059: Label4
L_0059: ldarg.0
L_005a: ldfld BattleTech.UI.CombatHUD HUD
L_005f: ldstr "WeaponSlot"
L_0064: ldc.i4 286
L_0069: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_006e: br Label6
L_0073: Label5
L_0073: ldarg.0
L_0074: ldfld BattleTech.UI.CombatHUD HUD
L_0079: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_007e: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0083: brfalse Label7
L_0088: ldarg.0
L_0089: ldfld BattleTech.UI.CombatHUD HUD
L_008e: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_0093: callvirt BattleTech.UI.SelectionState get_ActiveState()
L_0098: callvirt BattleTech.UI.SelectionType get_SelectionType()
L_009d: ldc.i4.s 9
L_009f: bne.un Label8
L_00a4: ldarg.0
L_00a5: call Void CycleWeapon()
L_00aa: br Label9
L_00af: Label7
L_00af: Label8
L_00af: ldarg.0
L_00b0: ldfld BattleTech.Weapon displayedWeapon
L_00b5: callvirt Boolean get_IsEnabled()
L_00ba: brtrue Label10
L_00bf: ldarg.0
L_00c0: ldfld BattleTech.UI.CombatHUD HUD
L_00c5: ldstr "WeaponSlot"
L_00ca: ldc.i4 285
L_00cf: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_00d4: ldarg.0
L_00d5: ldfld BattleTech.Weapon displayedWeapon
L_00da: callvirt Void EnableWeapon()
L_00df: ldarg.0
L_00e0: ldfld BattleTech.UI.CombatHUD HUD
L_00e5: callvirt Void OnWeaponModified()
L_00ea: br Label11
L_00ef: Label10
L_00ef: ldarg.0
L_00f0: ldfld BattleTech.UI.CombatHUD HUD
L_00f5: ldstr "WeaponSlot"
L_00fa: ldc.i4 287
L_00ff: callvirt Void GenerateButtonEvent(System.String, AudioEventList_ui)
L_0104: ldarg.0
L_0105: ldfld BattleTech.Weapon displayedWeapon
L_010a: callvirt Void DisableWeapon()
L_010f: ldarg.0
L_0110: ldfld BattleTech.UI.CombatHUD HUD
L_0115: callvirt Void OnWeaponModified()
L_011a: Label6
L_011a: Label9
L_011a: Label11
L_011a: ldarg.0
L_011b: ldnull
L_011c: call Void RefreshDisplayedWeapon(BattleTech.ICombatant)
L_0121: Label1
L_0121: Label2
L_0121: Label3
L_0121: Label0
L_0121: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void RefreshHighlighted()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.CombatHUDWeaponSlot)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld BattleTech.Weapon displayedWeapon
L_0011: callvirt Boolean get_IsDisabled()
L_0016: brtrue Label1
L_001b: ldarg.0
L_001c: ldfld BattleTech.Weapon displayedWeapon
L_0021: callvirt Boolean get_HasAmmo()
L_0026: brfalse Label2
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType weaponSlotType
L_0031: brtrue Label3
L_0036: ldarg.0
L_0037: ldfld SVGImporter.SVGImage MainImage
L_003c: ldarg.0
L_003d: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0042: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_0047: callvirt UnityEngine.Color get_HighlightedBGColor()
L_004c: callvirt Void set_color(UnityEngine.Color)
L_0051: ldarg.0
L_0052: ldarg.0
L_0053: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0058: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_005d: callvirt UnityEngine.Color get_HighlightedTextColor()
L_0062: ldc.i4.1
L_0063: call Void ShowTextColor(UnityEngine.Color, Boolean)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.SVGToggleButton ToggleButton
L_006e: ldfld SVGImporter.SVGImage childImage
L_0073: ldarg.0
L_0074: call BattleTech.UI.UILookAndColorConstants get_LookAndColorConstants()
L_0079: callvirt BattleTech.UI.CombatHUDWeaponSlotColors get_WeaponSlotColors()
L_007e: callvirt UnityEngine.Color get_HighlightedToggleColor()
L_0083: callvirt Void set_color(UnityEngine.Color)
L_0088: Label1
L_0088: Label2
L_0088: Label3
L_0088: Label0
L_0088: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean MechCanUseAmmo(BattleTech.AmmunitionBoxDef)
L_0000: Local var 0: BattleTech.AmmoCategoryValue
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: callvirt BattleTech.AmmunitionDef get_Ammo()
L_000c: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0011: stloc.0
L_0012: ldloc.0
L_0013: callvirt Boolean get_IsBallistic()
L_0018: brfalse Label1
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0023: ldfld System.Int32 totalBallisticHardpoints
L_0028: ldc.i4.0
L_0029: cgt
L_002b: br Label5
L_0030: Label1
L_0030: ldloc.0
L_0031: callvirt Boolean get_IsSupport()
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0041: ldfld System.Int32 totalSmallHardpoints
L_0046: ldc.i4.0
L_0047: cgt
L_0049: br Label6
L_004e: Label2
L_004e: ldloc.0
L_004f: callvirt Boolean get_IsMissile()
L_0054: brfalse Label3
L_0059: ldarg.0
L_005a: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_005f: ldfld System.Int32 totalMissileHardpoints
L_0064: ldc.i4.0
L_0065: cgt
L_0067: br Label7
L_006c: Label3
L_006c: ldloc.0
L_006d: callvirt Boolean get_IsEnergy()
L_0072: brfalse Label4
L_0077: ldarg.0
L_0078: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_007d: ldfld System.Int32 totalEnergyHardpoints
L_0082: ldc.i4.0
L_0083: cgt
L_0085: br Label8
L_008a: Label4
L_008a: ldc.i4.1
L_008b: Label5
L_008b: Label6
L_008b: Label7
L_008b: Label8
L_008b: stloc 1 (System.Boolean)
L_008c: ldarg.0
L_008d: ldarg 1
L_0093: ldloca 1 (System.Boolean)
L_0095: call Void Postfix(BattleTech.UI.MechLabPanel, BattleTech.AmmunitionBoxDef, Boolean ByRef)
L_009a: ldloc 1 (System.Boolean)
L_009b: ret
DONE

### Patch BattleTech.Weapon, Boolean get_WillFire()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.0
L_0007: call Boolean Prefix(BattleTech.Weapon)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: call Boolean get_HasFired()
L_0017: ldc.i4.0
L_0018: ceq
L_001a: stloc.0
L_001b: ldarg.0
L_001c: call Boolean get_CanFire()
L_0021: ldloc.0
L_0022: and
L_0023: stloc 1 (System.Boolean)
L_0024: Label0
L_0024: ldloc 1 (System.Boolean)
L_0025: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void Cleanup()
L_0000: ldarg.0
L_0001: call BattleTech.AttackDirector get_Director()
L_0006: callvirt BattleTech.CombatGameState get_Combat()
L_000b: callvirt MessageCenter get_MessageCenter()
L_0010: dup
L_0011: ldc.i4.s 32
L_0013: ldarg.0
L_0014: ldftn Void OnAttackSequenceGroupBegin(MessageCenterMessage)
L_001a: newobj Void .ctor(Object, IntPtr)
L_001f: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0024: dup
L_0025: ldc.i4.s 33
L_0027: ldarg.0
L_0028: ldftn Void OnAttackSequenceFire(MessageCenterMessage)
L_002e: newobj Void .ctor(Object, IntPtr)
L_0033: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0038: dup
L_0039: ldc.i4.s 34
L_003b: ldarg.0
L_003c: ldftn Void OnAttackSequenceWeaponPreFireComplete(MessageCenterMessage)
L_0042: newobj Void .ctor(Object, IntPtr)
L_0047: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_004c: dup
L_004d: ldc.i4.s 35
L_004f: ldarg.0
L_0050: ldftn Void OnAttackSequenceImpact(MessageCenterMessage)
L_0056: newobj Void .ctor(Object, IntPtr)
L_005b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0060: dup
L_0061: ldc.i4.s 36
L_0063: ldarg.0
L_0064: ldftn Void OnAttackSequenceResolveDamage(MessageCenterMessage)
L_006a: newobj Void .ctor(Object, IntPtr)
L_006f: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0074: dup
L_0075: ldc.i4.s 37
L_0077: ldarg.0
L_0078: ldftn Void OnAttackSequenceWeaponComplete(MessageCenterMessage)
L_007e: newobj Void .ctor(Object, IntPtr)
L_0083: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0088: ldc.i4.s 38
L_008a: ldarg.0
L_008b: ldftn Void OnAttackSequenceGroupEnd(MessageCenterMessage)
L_0091: newobj Void .ctor(Object, IntPtr)
L_0096: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_009b: ldarg.0
L_009c: call Void Postfix(AttackSequence)
L_00a1: ret
DONE

### Patch BattleTech.CombatGameState, Void RebuildAllLists()
L_0000: ldarg.0
L_0001: call Void RebuildAllActors()
L_0006: ldarg.0
L_0007: call Void RebuildAllMiscCombatants()
L_000c: ldarg.0
L_000d: call Void RebuildAllMechs()
L_0012: ldarg.0
L_0013: call Void RebuildAllCombatants()
L_0018: ldarg.0
L_0019: ldc.i4.0
L_001a: stfld System.Boolean combatantAdded
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.CombatGameState)
L_0025: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldsfld HBS.Logging.ILog gameInfoLogger
L_001b: ldstr "CombatGameState Destroyed: {0}"
L_0020: call System.DateTime get_UtcNow()
L_0025: stloc.0
L_0026: ldloca.s 0 (System.DateTime)
L_0028: ldstr "ddd MMM d yyyy HH:mm:ss"
L_002d: call System.String ToString(System.String)
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void Log(System.Object)
L_003c: ldarg.0
L_003d: call MessageCenter get_MessageCenter()
L_0042: brfalse Label1
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: newobj Void .ctor()
L_0052: dup
L_0053: call BattleTech.GameInstance get_BattleTechGame()
L_0058: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_005d: callvirt Boolean IsNetworkGameActive()
L_0062: callvirt Void set_IsNetworkGame(Boolean)
L_0067: callvirt Void PublishMessage(MessageCenterMessage)
L_006c: Label1
L_006c: ldarg.0
L_006d: call BattleTech.StackManager get_StackManager()
L_0072: brfalse Label2
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: callvirt Void OnCombatGameDestroyed()
L_0082: ldarg.0
L_0083: ldnull
L_0084: call Void set_StackManager(BattleTech.StackManager)
L_0089: Label2
L_0089: ldarg.0
L_008a: call BattleTech.TurnDirector get_TurnDirector()
L_008f: brfalse Label3
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: callvirt Void OnCombatGameDestroyed()
L_009f: Label3
L_009f: ldarg.0
L_00a0: call BattleTech.InvocationHandler get_InvocationHandler()
L_00a5: brfalse Label4
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label4
L_00b5: ldarg.0
L_00b6: call MessageCenter get_MessageCenter()
L_00bb: brfalse Label5
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: ldc.i4.3
L_00c7: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00cc: Label5
L_00cc: ldarg.0
L_00cd: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00d2: brfalse Label6
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: callvirt Void Dispose()
L_00e2: Label6
L_00e2: call Boolean get_HasInstance()
L_00e7: brfalse Label7
L_00ec: call HBS.DebugConsole.DebugConsole get_Instance()
L_00f1: ldarg.0
L_00f2: ldftn Void DebugConsoleOnBeforeDump()
L_00f8: newobj Void .ctor(Object, IntPtr)
L_00fd: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0102: Label7
L_0102: call Boolean get_HasInstance()
L_0107: brfalse Label8
L_010c: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0111: callvirt Void OnCombatSceneEnd()
L_0116: Label8
L_0116: ldnull
L_0117: call Void set_destructionConstantsComponent(DestructionConstants)
L_011c: call Void ClearStaticData()
L_0121: call Void ClearStaticData()
L_0126: call Void ClearStaticData()
L_012b: call Void ClearStaticData()
L_0130: call Void ClearStaticData()
L_0135: ldsfld HBS.Logging.ILog gameInfoLogger
L_013a: ldstr "CombatGameState destroyed: {0}"
L_013f: call System.DateTime get_UtcNow()
L_0144: stloc.0
L_0145: ldloca.s 0 (System.DateTime)
L_0147: ldstr "ddd MMM d yyyy HH:mm:ss"
L_014c: call System.String ToString(System.String)
L_0151: call System.String Format(System.String, System.Object)
L_0156: callvirt Void Log(System.Object)
L_015b: Label0
L_015b: ldarg.0
L_015c: call Void Postfix(BattleTech.CombatGameState)
L_0161: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_Combat(BattleTech.CombatGameState)
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: newobj Void .ctor(CombatGameState)
L_001f: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0024: ldarg.0
L_0025: ldarg.0
L_0026: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_002b: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0030: ldarg.0
L_0031: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0036: ldnull
L_0037: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_003c: brfalse Label1
L_0041: ldsfld HBS.Logging.ILog uiLogger
L_0046: ldstr "Couldn't find Selection Handler."
L_004b: callvirt Void LogWarning(System.Object)
L_0050: br Label2
L_0055: Label1
L_0055: ldarg.0
L_0056: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_005b: ldarg.1
L_005c: ldarg.0
L_005d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0062: Label2
L_0062: ldarg.0
L_0063: ldarg.0
L_0064: ldc.i4.1
L_0065: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_006a: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_006f: ldarg.0
L_0070: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0075: ldnull
L_0076: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_007b: brfalse Label3
L_0080: ldsfld HBS.Logging.ILog uiLogger
L_0085: ldstr "Couldn't find MechTray under the CombatHUD."
L_008a: callvirt Void LogWarning(System.Object)
L_008f: br Label4
L_0094: Label3
L_0094: ldarg.0
L_0095: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_009a: ldarg.1
L_009b: callvirt MessageCenter get_MessageCenter()
L_00a0: ldarg.0
L_00a1: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_00a6: Label4
L_00a6: ldarg.0
L_00a7: ldarg.0
L_00a8: ldc.i4.1
L_00a9: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_00ae: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00b3: ldarg.0
L_00b4: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00b9: ldnull
L_00ba: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00bf: brfalse Label5
L_00c4: ldsfld HBS.Logging.ILog uiLogger
L_00c9: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00ce: callvirt Void LogWarning(System.Object)
L_00d3: br Label6
L_00d8: Label5
L_00d8: ldarg.0
L_00d9: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00de: ldarg.1
L_00df: ldarg.0
L_00e0: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00e5: ldarg.0
L_00e6: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00eb: ldarg.1
L_00ec: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00f1: callvirt Void RefreshTeam(BattleTech.Team)
L_00f6: Label6
L_00f6: ldarg.0
L_00f7: ldarg.0
L_00f8: ldc.i4.1
L_00f9: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_00fe: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_0103: ldarg.0
L_0104: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_0109: ldnull
L_010a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_010f: brfalse Label7
L_0114: ldsfld HBS.Logging.ILog uiLogger
L_0119: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_011e: callvirt Void LogWarning(System.Object)
L_0123: br Label8
L_0128: Label7
L_0128: ldarg.0
L_0129: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_012e: ldnull
L_012f: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0134: ldarg.0
L_0135: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_013a: ldarg.1
L_013b: ldarg.0
L_013c: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0141: Label8
L_0141: ldarg.0
L_0142: call BattleTech.UI.UIManager get_Instance()
L_0147: ldstr ""
L_014c: ldc.i4.1
L_014d: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0152: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0157: ldarg.0
L_0158: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_015d: ldnull
L_015e: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0163: brfalse Label9
L_0168: ldsfld HBS.Logging.ILog uiLogger
L_016d: ldstr "Error creating PhaseTrack!"
L_0172: callvirt Void LogWarning(System.Object)
L_0177: br Label10
L_017c: Label9
L_017c: ldarg.0
L_017d: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0182: ldarg.1
L_0183: ldarg.0
L_0184: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0189: Label10
L_0189: ldarg.0
L_018a: call BattleTech.UI.UIManager get_Instance()
L_018f: ldstr ""
L_0194: ldc.i4.1
L_0195: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_019a: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_019f: ldarg.0
L_01a0: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01a5: ldnull
L_01a6: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01ab: brfalse Label11
L_01b0: ldsfld HBS.Logging.ILog uiLogger
L_01b5: ldstr "Error creating Turn Event Notification!"
L_01ba: callvirt Void LogError(System.Object)
L_01bf: br Label12
L_01c4: Label11
L_01c4: ldarg.0
L_01c5: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01ca: ldarg.1
L_01cb: ldarg.0
L_01cc: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01d1: Label12
L_01d1: ldarg.1
L_01d2: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01d7: callvirt Boolean IsNetworkGameActive()
L_01dc: brfalse Label13
L_01e1: ldarg.0
L_01e2: call BattleTech.UI.UIManager get_Instance()
L_01e7: ldstr ""
L_01ec: ldc.i4.1
L_01ed: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_01f2: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_01f7: ldarg.0
L_01f8: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_01fd: ldnull
L_01fe: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0203: brfalse Label14
L_0208: ldsfld HBS.Logging.ILog uiLogger
L_020d: ldstr "Error creating multiplayer UI!"
L_0212: callvirt Void LogError(System.Object)
L_0217: br Label15
L_021c: Label14
L_021c: ldarg.0
L_021d: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0222: ldarg.0
L_0223: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0228: Label13
L_0228: Label15
L_0228: ldarg.0
L_0229: call BattleTech.UI.UIManager get_Instance()
L_022e: ldstr ""
L_0233: ldc.i4.1
L_0234: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_0239: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_023e: ldarg.0
L_023f: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0244: ldnull
L_0245: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_024a: brfalse Label16
L_024f: ldsfld HBS.Logging.ILog uiLogger
L_0254: ldstr "Error creating Targeting Computer!"
L_0259: callvirt Void LogError(System.Object)
L_025e: br Label17
L_0263: Label16
L_0263: ldarg.0
L_0264: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0269: ldarg.0
L_026a: callvirt Void Init(BattleTech.UI.CombatHUD)
L_026f: Label17
L_026f: ldarg.0
L_0270: call BattleTech.UI.UIManager get_Instance()
L_0275: ldstr ""
L_027a: ldc.i4.1
L_027b: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_0280: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0285: ldarg.0
L_0286: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_028b: ldnull
L_028c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0291: brfalse Label18
L_0296: ldsfld HBS.Logging.ILog uiLogger
L_029b: ldstr "Error creating Called Shot Popup!"
L_02a0: callvirt Void LogError(System.Object)
L_02a5: br Label19
L_02aa: Label18
L_02aa: ldarg.0
L_02ab: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_02b0: ldarg.0
L_02b1: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02b6: Label19
L_02b6: ldarg.0
L_02b7: call BattleTech.UI.UIManager get_Instance()
L_02bc: ldstr ""
L_02c1: ldc.i4.1
L_02c2: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02c7: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02cc: ldarg.0
L_02cd: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02d2: ldnull
L_02d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02d8: brfalse Label20
L_02dd: ldsfld HBS.Logging.ILog uiLogger
L_02e2: ldstr "Error creating Attack Mode Selector!"
L_02e7: callvirt Void LogError(System.Object)
L_02ec: br Label21
L_02f1: Label20
L_02f1: ldarg.0
L_02f2: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02f7: ldarg.1
L_02f8: ldarg.0
L_02f9: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_02fe: ldarg.0
L_02ff: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0304: ldc.i4.0
L_0305: callvirt Void set_Visible(Boolean)
L_030a: Label21
L_030a: ldarg.0
L_030b: ldarg.0
L_030c: call UnityEngine.GameObject get_gameObject()
L_0311: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0316: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_031b: ldarg.0
L_031c: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0321: ldnull
L_0322: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0327: brfalse Label22
L_032c: ldsfld HBS.Logging.ILog uiLogger
L_0331: ldstr "Error finding InWorldElementMgr!"
L_0336: callvirt Void LogError(System.Object)
L_033b: br Label23
L_0340: Label22
L_0340: ldarg.0
L_0341: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0346: ldarg.1
L_0347: ldarg.0
L_0348: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_034d: Label23
L_034d: ldarg.0
L_034e: call BattleTech.UI.UIManager get_Instance()
L_0353: ldstr ""
L_0358: ldc.i4.1
L_0359: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_035e: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0363: ldarg.0
L_0364: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_0369: ldnull
L_036a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_036f: brfalse Label24
L_0374: ldsfld HBS.Logging.ILog uiLogger
L_0379: ldstr "Error creating Objective Status Notification!"
L_037e: callvirt Void LogError(System.Object)
L_0383: Label24
L_0383: ldarg.0
L_0384: call BattleTech.UI.UIManager get_Instance()
L_0389: ldstr ""
L_038e: ldc.i4.1
L_038f: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_0394: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_0399: ldarg.0
L_039a: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_039f: ldnull
L_03a0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03a5: brfalse Label25
L_03aa: ldsfld HBS.Logging.ILog uiLogger
L_03af: ldstr "Error creating Objective List!"
L_03b4: callvirt Void LogError(System.Object)
L_03b9: br Label26
L_03be: Label25
L_03be: ldarg.0
L_03bf: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03c4: ldarg.1
L_03c5: ldarg.0
L_03c6: ldarg.0
L_03c7: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03cc: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03d1: Label26
L_03d1: call BattleTech.UI.UIManager get_Instance()
L_03d6: ldstr ""
L_03db: ldc.i4.1
L_03dc: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03e1: stloc.0
L_03e2: ldloc.0
L_03e3: callvirt Void Init()
L_03e8: ldloc.0
L_03e9: ldc.i4.0
L_03ea: callvirt Void set_Visible(Boolean)
L_03ef: ldarg.0
L_03f0: call BattleTech.UI.UIManager get_Instance()
L_03f5: ldstr ""
L_03fa: ldc.i4.1
L_03fb: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_0400: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_0405: ldarg.0
L_0406: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_040b: ldnull
L_040c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0411: brfalse Label27
L_0416: ldsfld HBS.Logging.ILog uiLogger
L_041b: ldstr "Error creating DialogSideStack!"
L_0420: callvirt Void LogError(System.Object)
L_0425: br Label28
L_042a: Label27
L_042a: ldarg.0
L_042b: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0430: ldarg.1
L_0431: ldarg.0
L_0432: ldloc.0
L_0433: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0438: Label28
L_0438: ldarg.0
L_0439: call BattleTech.UI.UIManager get_Instance()
L_043e: ldstr ""
L_0443: ldc.i4.1
L_0444: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_0449: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_044e: ldarg.0
L_044f: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0454: ldnull
L_0455: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_045a: brfalse Label29
L_045f: ldsfld HBS.Logging.ILog uiLogger
L_0464: ldstr "Error creating DialogWidget!"
L_0469: callvirt Void LogError(System.Object)
L_046e: br Label30
L_0473: Label29
L_0473: ldarg.0
L_0474: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0479: ldarg.1
L_047a: callvirt Void Init(BattleTech.CombatGameState)
L_047f: Label30
L_047f: ldarg.0
L_0480: call BattleTech.UI.UIManager get_Instance()
L_0485: ldstr ""
L_048a: ldc.i4.1
L_048b: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_0490: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_0495: ldarg.0
L_0496: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_049b: ldnull
L_049c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04a1: brfalse Label31
L_04a6: ldsfld HBS.Logging.ILog uiLogger
L_04ab: ldstr "Error creating RetreatEscMenu!"
L_04b0: callvirt Void LogError(System.Object)
L_04b5: br Label32
L_04ba: Label31
L_04ba: ldarg.0
L_04bb: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04c0: ldarg.1
L_04c1: ldarg.0
L_04c2: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04c7: Label32
L_04c7: ldarg.0
L_04c8: call BattleTech.UI.UIManager get_Instance()
L_04cd: ldstr ""
L_04d2: ldc.i4.1
L_04d3: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04d8: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04dd: ldarg.0
L_04de: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04e3: ldnull
L_04e4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04e9: brfalse Label33
L_04ee: ldsfld HBS.Logging.ILog uiLogger
L_04f3: ldstr "Error creating mission end screen!"
L_04f8: callvirt Void LogError(System.Object)
L_04fd: br Label34
L_0502: Label33
L_0502: ldarg.0
L_0503: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_0508: callvirt Void Init()
L_050d: Label34
L_050d: ldarg.0
L_050e: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0513: ldnull
L_0514: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0519: brfalse Label35
L_051e: ldarg.0
L_051f: call BattleTech.UI.UIManager get_Instance()
L_0524: ldstr ""
L_0529: ldc.i4.1
L_052a: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_052f: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0534: ldarg.0
L_0535: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_053a: ldnull
L_053b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0540: brfalse Label36
L_0545: ldsfld HBS.Logging.ILog uiLogger
L_054a: ldstr "Error creating combat chat module"
L_054f: callvirt Void LogError(System.Object)
L_0554: br Label37
L_0559: Label36
L_0559: ldarg.0
L_055a: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_055f: callvirt Void CombatInit()
L_0564: ldloc.0
L_0565: callvirt Void BumpUp()
L_056a: Label35
L_056a: Label37
L_056a: ldarg.0
L_056b: call BattleTech.UI.UIManager get_Instance()
L_0570: ldstr "DebugHUD"
L_0575: ldc.i4.1
L_0576: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_057b: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_0580: ldarg.0
L_0581: call BattleTech.UI.DebugHUD get_debugHUD()
L_0586: ldnull
L_0587: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_058c: brfalse Label38
L_0591: ldsfld HBS.Logging.ILog uiLogger
L_0596: ldstr "Error creating combat debug hud"
L_059b: callvirt Void LogError(System.Object)
L_05a0: br Label39
L_05a5: Label38
L_05a5: ldarg.0
L_05a6: call BattleTech.UI.DebugHUD get_debugHUD()
L_05ab: ldarg.1
L_05ac: ldarg.0
L_05ad: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05b2: Label39
L_05b2: newobj Void .ctor()
L_05b7: stloc.1
L_05b8: ldarg.0
L_05b9: ldc.i4.1
L_05ba: ldloc.1
L_05bb: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05c0: ldc.i4.0
L_05c1: stloc.2
L_05c2: br Label40
L_05c7: Label42
L_05c7: ldloc.1
L_05c8: ldloc.2
L_05c9: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05ce: callvirt Boolean get_IsInitialized()
L_05d3: brtrue Label41
L_05d8: ldloc.1
L_05d9: ldloc.2
L_05da: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05df: ldarg.0
L_05e0: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05e5: Label41
L_05e5: ldloc.2
L_05e6: ldc.i4.1
L_05e7: add
L_05e8: stloc.2
L_05e9: Label40
L_05e9: ldloc.2
L_05ea: ldloc.1
L_05eb: callvirt Int32 get_Count()
L_05f0: blt Label42
L_05f5: ldarg.0
L_05f6: ldfld BattleTech.UI.UIManager uiManager
L_05fb: ldc.i4.1
L_05fc: callvirt Void SetUIRootInteractable(Boolean)
L_0601: ldarg.1
L_0602: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0607: callvirt Int32 get_CurrentRound()
L_060c: brfalse Label43
L_0611: ldarg.0
L_0612: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0617: ldarg.1
L_0618: callvirt BattleTech.TurnDirector get_TurnDirector()
L_061d: callvirt Int32 get_CurrentRound()
L_0622: callvirt Void SetRoundFromLoad(Int32)
L_0627: Label43
L_0627: ldarg.0
L_0628: ldc.i4.1
L_0629: call Void SubscribeToMessages(Boolean)
L_062e: Label0
L_062e: ldarg.0
L_062f: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0634: ldarg.0
L_0635: ldarg 1
L_063b: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_0640: ret
DONE

### Patch BattleTech.Weapon, Int32 DecrementAmmo(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: Local var 3: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 3 (System.Int32)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldloca 3 (System.Int32)
L_000f: call Boolean Prefix(BattleTech.Weapon, Int32, Int32 ByRef)
L_0014: brfalse Label0
L_0019: ldarg.0
L_001a: call Int32 get_ShotsWhenFired()
L_001f: stloc.0
L_0020: ldarg.0
L_0021: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0026: callvirt Boolean get_Is_NotSet()
L_002b: brtrue Label1
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor parent
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.AbstractActor parent
L_0041: callvirt BattleTech.UnitType get_UnitType()
L_0046: ldc.i4.4
L_0047: bne.un Label3
L_004c: Label1
L_004c: ldloc.0
L_004d: br Label12
L_0052: Label2
L_0052: Label3
L_0052: ldarg.0
L_0053: call Int32 get_InternalAmmo()
L_0058: ldloc.0
L_0059: blt Label4
L_005e: ldarg.0
L_005f: call BattleTech.StatCollection get_StatCollection()
L_0064: ldarg.0
L_0065: call System.String get_uid()
L_006a: ldarg.1
L_006b: ldstr "InternalAmmo"
L_0070: ldc.i4.2
L_0071: ldloc.0
L_0072: ldc.i4.m1
L_0073: ldc.i4.1
L_0074: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0079: pop
L_007a: ldc.i4.0
L_007b: stloc.0
L_007c: br Label5
L_0081: Label4
L_0081: ldloc.0
L_0082: ldarg.0
L_0083: call Int32 get_InternalAmmo()
L_0088: sub
L_0089: stloc.0
L_008a: ldarg.0
L_008b: call BattleTech.StatCollection get_StatCollection()
L_0090: ldarg.0
L_0091: call System.String get_uid()
L_0096: ldarg.1
L_0097: ldstr "InternalAmmo"
L_009c: ldc.i4.0
L_009d: ldc.i4.0
L_009e: ldc.i4.m1
L_009f: ldc.i4.1
L_00a0: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00a5: pop
L_00a6: Label5
L_00a6: ldloc.0
L_00a7: ldc.i4.0
L_00a8: ble Label6
L_00ad: ldc.i4.0
L_00ae: stloc.1
L_00af: br Label7
L_00b4: Label11
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_00ba: ldloc.1
L_00bb: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: callvirt Int32 get_CurrentAmmo()
L_00c7: ldloc.0
L_00c8: blt Label8
L_00cd: ldloc.2
L_00ce: callvirt BattleTech.StatCollection get_StatCollection()
L_00d3: ldarg.0
L_00d4: call System.String get_uid()
L_00d9: ldarg.1
L_00da: ldstr "CurrentAmmo"
L_00df: ldc.i4.2
L_00e0: ldloc.0
L_00e1: ldc.i4.m1
L_00e2: ldc.i4.1
L_00e3: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00e8: pop
L_00e9: ldc.i4.0
L_00ea: stloc.0
L_00eb: br Label9
L_00f0: Label8
L_00f0: ldloc.0
L_00f1: ldloc.2
L_00f2: callvirt Int32 get_CurrentAmmo()
L_00f7: sub
L_00f8: stloc.0
L_00f9: ldloc.2
L_00fa: callvirt BattleTech.StatCollection get_StatCollection()
L_00ff: ldarg.0
L_0100: call System.String get_uid()
L_0105: ldarg.1
L_0106: ldstr "CurrentAmmo"
L_010b: ldc.i4.0
L_010c: ldc.i4.0
L_010d: ldc.i4.m1
L_010e: ldc.i4.1
L_010f: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0114: pop
L_0115: Label9
L_0115: ldloc.0
L_0116: ldc.i4.0
L_0117: ble Label10
L_011c: ldloc.1
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.1
L_0120: Label7
L_0120: ldloc.1
L_0121: ldarg.0
L_0122: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0127: callvirt Int32 get_Count()
L_012c: blt Label11
L_0131: Label6
L_0131: Label10
L_0131: ldarg.0
L_0132: call Int32 get_ShotsWhenFired()
L_0137: ldloc.0
L_0138: sub
L_0139: Label12
L_0139: stloc 3 (System.Int32)
L_013a: Label0
L_013a: ldloc 3 (System.Int32)
L_013b: ret
DONE

### Patch BattleTech.Weapon, Void SetAmmoBoxes(System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.AmmunitionBox, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Weapon, System.Collections.Generic.List`1[BattleTech.AmmunitionBox])
L_000c: brfalse Label0
L_0011: newobj Void .ctor()
L_0016: stloc.0
L_0017: ldarg.1
L_0018: callvirt Enumerator GetEnumerator()
L_001d: stloc.1
.try
{
	L_001e: br Label1
	L_0023: Label3
	L_0023: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_0025: call BattleTech.AmmunitionBox get_Current()
	L_002a: stloc.2
	L_002b: ldloc.2
	L_002c: callvirt BattleTech.AmmoCategoryValue get_ammoCategoryValue()
	L_0031: ldarg.0
	L_0032: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
	L_0037: callvirt Boolean Equals(System.Object)
	L_003c: brfalse Label2
	L_0041: ldloc.0
	L_0042: ldloc.2
	L_0043: callvirt Void Add(BattleTech.AmmunitionBox)
	L_0048: Label1
	L_0048: Label2
	L_0048: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_004a: call Boolean MoveNext()
	L_004f: brtrue Label3
	L_0054: leave Label4
	L_0059: leave (autogenerated)
} // end try
.finally
{
	L_005e: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox])
	L_0060: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.AmmunitionBox]
	L_0066: callvirt Void Dispose()
	L_006b: endfinally
	L_006c: leave (autogenerated)
} // end handler
L_006d: Label4
L_006d: ldarg.0
L_006e: ldloc.0
L_006f: stfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0074: Label0
L_0074: ret
DONE

### Patch BattleTech.Weapon, Int32 get_CurrentAmmo()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Int32)
L_0006: ldarg.0
L_0007: ldloca 2 (System.Int32)
L_0009: call Boolean Prefix(BattleTech.Weapon, Int32 ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Int32 get_InternalAmmo()
L_0019: stloc.0
L_001a: ldc.i4.0
L_001b: stloc.1
L_001c: br Label1
L_0021: Label2
L_0021: ldloc.0
L_0022: ldarg.0
L_0023: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0028: ldloc.1
L_0029: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_002e: callvirt Int32 get_CurrentAmmo()
L_0033: add
L_0034: stloc.0
L_0035: ldloc.1
L_0036: ldc.i4.1
L_0037: add
L_0038: stloc.1
L_0039: Label1
L_0039: ldloc.1
L_003a: ldarg.0
L_003b: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0040: callvirt Int32 get_Count()
L_0045: blt Label2
L_004a: ldloc.0
L_004b: stloc 2 (System.Int32)
L_004c: Label0
L_004c: ldloc 2 (System.Int32)
L_004d: ret
DONE

### Patch BattleTech.MechValidationRules, Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.List`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: Local var 4: BattleTech.WeaponDef
L_0000: Local var 5: BattleTech.AmmunitionBoxDef
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: System.Int64
L_0000: Local var 8: BattleTech.AmmoCategoryValue
L_0000: Local var 9: System.Int64
L_0000: Local var 10: BattleTech.AmmoCategoryValue
L_0000: ldarg 0
L_0006: ldarg 1
L_000c: ldarg 2
L_0012: ldarg 3
L_0018: ldarg 4
L_001e: call Boolean Prefix(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0023: brfalse Label0
L_0028: newobj Void .ctor()
L_002d: stloc.0
L_002e: newobj Void .ctor()
L_0033: stloc.1
L_0034: ldc.i4.0
L_0035: stloc.2
L_0036: br Label1
L_003b: Label14
L_003b: ldarg.1
L_003c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0041: ldloc.2
L_0042: ldelem.ref
L_0043: stloc.3
L_0044: ldloc.3
L_0045: callvirt Void RefreshComponentDef()
L_004a: ldloc.3
L_004b: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0050: ldc.i4.1
L_0051: bne.un Label2
L_0056: ldloc.3
L_0057: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_005c: brfalse Label3
L_0061: ldloc.3
L_0062: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0067: ldc.i4.3
L_0068: beq Label4
L_006d: ldloc.3
L_006e: ldarg.2
L_006f: ldarg.3
L_0070: call Boolean MechComponentUnderMaintenance(BattleTech.MechComponentRef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab)
L_0075: brfalse Label5
L_007a: Label3
L_007a: Label4
L_007a: ldloc.3
L_007b: callvirt BattleTech.MechComponentDef get_Def()
L_0080: isinst BattleTech.WeaponDef
L_0085: stloc.s 4 (BattleTech.WeaponDef)
L_0087: ldloc.s 4 (BattleTech.WeaponDef)
L_0089: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_008e: callvirt Boolean get_Is_NotSet()
L_0093: brtrue Label6
L_0098: ldloc.s 4 (BattleTech.WeaponDef)
L_009a: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_009f: callvirt Boolean get_UsesInternalAmmo()
L_00a4: brtrue Label7
L_00a9: ldloc.0
L_00aa: ldloc.s 4 (BattleTech.WeaponDef)
L_00ac: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b1: callvirt Int64 get_AmmoCategoryID()
L_00b6: callvirt Boolean Contains(Int64)
L_00bb: brtrue Label8
L_00c0: ldloc.0
L_00c1: ldloc.s 4 (BattleTech.WeaponDef)
L_00c3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00c8: callvirt Int64 get_AmmoCategoryID()
L_00cd: callvirt Void Add(Int64)
L_00d2: br Label9
L_00d7: Label2
L_00d7: ldloc.3
L_00d8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00dd: ldc.i4.2
L_00de: bne.un Label10
L_00e3: ldloc.3
L_00e4: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00e9: brfalse Label11
L_00ee: ldloc.3
L_00ef: ldarg.2
L_00f0: ldarg.3
L_00f1: call Boolean MechComponentUnderMaintenance(BattleTech.MechComponentRef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab)
L_00f6: brfalse Label12
L_00fb: Label11
L_00fb: ldloc.3
L_00fc: callvirt BattleTech.MechComponentDef get_Def()
L_0101: isinst BattleTech.AmmunitionBoxDef
L_0106: stloc.s 5 (BattleTech.AmmunitionBoxDef)
L_0108: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_010a: ldarg.0
L_010b: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_0110: ldloc.1
L_0111: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_0113: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0118: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_011d: callvirt Int64 get_AmmoCategoryID()
L_0122: callvirt Boolean Contains(Int64)
L_0127: brtrue Label13
L_012c: ldloc.1
L_012d: ldloc.s 5 (BattleTech.AmmunitionBoxDef)
L_012f: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0134: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0139: callvirt Int64 get_AmmoCategoryID()
L_013e: callvirt Void Add(Int64)
L_0143: Label5
L_0143: Label6
L_0143: Label7
L_0143: Label8
L_0143: Label9
L_0143: Label10
L_0143: Label12
L_0143: Label13
L_0143: ldloc.2
L_0144: ldc.i4.1
L_0145: add
L_0146: stloc.2
L_0147: Label1
L_0147: ldloc.2
L_0148: ldarg.1
L_0149: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_014e: ldlen
L_014f: conv.i4
L_0150: blt Label14
L_0155: ldloc.0
L_0156: callvirt Enumerator GetEnumerator()
L_015b: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
.try
{
	L_015d: br Label15
	L_0162: Label17
	L_0162: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_0164: call Int64 get_Current()
	L_0169: stloc.s 7 (System.Int64)
	L_016b: ldloc.s 7 (System.Int64)
	L_016d: conv.i4
	L_016e: call BattleTech.AmmoCategoryValue GetAmmoCategoryByID(Int32)
	L_0173: stloc.s 8 (BattleTech.AmmoCategoryValue)
	L_0175: ldloc.1
	L_0176: ldloc.s 7 (System.Int64)
	L_0178: callvirt Boolean Contains(Int64)
	L_017d: brtrue Label16
	L_0182: ldarg.s 4
	L_0184: ldc.i4.5
	L_0185: ldstr "MISSING AMMO: This 'Mech does not have an undamaged {0} Ammo Bin"
	L_018a: ldc.i4.1
	L_018b: newarr System.Object
	L_0190: dup
	L_0191: ldc.i4.0
	L_0192: ldloc.s 8 (BattleTech.AmmoCategoryValue)
	L_0194: callvirt System.String get_Name()
	L_0199: stelem.ref
	L_019a: newobj Void .ctor(String, Object[])
	L_019f: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_01a4: Label15
	L_01a4: Label16
	L_01a4: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01a6: call Boolean MoveNext()
	L_01ab: brtrue Label17
	L_01b0: leave Label18
	L_01b5: leave (autogenerated)
} // end try
.finally
{
	L_01ba: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01bc: constrained. System.Collections.Generic.List`1+Enumerator[System.Int64]
	L_01c2: callvirt Void Dispose()
	L_01c7: endfinally
	L_01c8: leave (autogenerated)
} // end handler
L_01c9: Label18
L_01c9: ldloc.1
L_01ca: callvirt Enumerator GetEnumerator()
L_01cf: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
.try
{
	L_01d1: br Label19
	L_01d6: Label21
	L_01d6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_01d8: call Int64 get_Current()
	L_01dd: stloc.s 9 (System.Int64)
	L_01df: ldloc.s 9 (System.Int64)
	L_01e1: conv.i4
	L_01e2: call BattleTech.AmmoCategoryValue GetAmmoCategoryByID(Int32)
	L_01e7: stloc.s 10 (BattleTech.AmmoCategoryValue)
	L_01e9: ldloc.0
	L_01ea: ldloc.s 9 (System.Int64)
	L_01ec: callvirt Boolean Contains(Int64)
	L_01f1: brtrue Label20
	L_01f6: ldarg.s 4
	L_01f8: ldc.i4.6
	L_01f9: ldstr "EXTRA AMMO: This 'Mech carries unusable {0} Ammo"
	L_01fe: ldc.i4.1
	L_01ff: newarr System.Object
	L_0204: dup
	L_0205: ldc.i4.0
	L_0206: ldloc.s 10 (BattleTech.AmmoCategoryValue)
	L_0208: callvirt System.String get_Name()
	L_020d: stelem.ref
	L_020e: newobj Void .ctor(String, Object[])
	L_0213: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_0218: Label19
	L_0218: Label20
	L_0218: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_021a: call Boolean MoveNext()
	L_021f: brtrue Label21
	L_0224: leave Label22
	L_0229: leave (autogenerated)
} // end try
.finally
{
	L_022e: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.Int64])
	L_0230: constrained. System.Collections.Generic.List`1+Enumerator[System.Int64]
	L_0236: callvirt Void Dispose()
	L_023b: endfinally
	L_023c: leave (autogenerated)
} // end handler
L_023d: Label22
L_023d: Label0
L_023d: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void Init(BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: UnityEngine.Transform[]
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldfld BattleTech.AbstractActor parent
L_0007: ldarg.2
L_0008: ldarg.3
L_0009: ldc.i4.0
L_000a: ldarg.s 4
L_000c: call Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: call Void set_mechComponent(BattleTech.MechComponent)
L_0018: ldarg.0
L_0019: ldarg.s 5
L_001b: call Void set_mountedLocation(Int32)
L_0020: ldnull
L_0021: stloc.0
L_0022: ldarg.1
L_0023: callvirt BattleTech.WeaponDef get_weaponDef()
L_0028: callvirt System.String get_WeaponEffectID()
L_002d: call Boolean IsNullOrEmpty(System.String)
L_0032: brtrue Label1
L_0037: ldarg.0
L_0038: call BattleTech.ICombatant get_parentCombatant()
L_003d: callvirt BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.Data.DataManager get_DataManager()
L_0047: ldarg.1
L_0048: callvirt BattleTech.WeaponDef get_weaponDef()
L_004d: callvirt System.String get_WeaponEffectID()
L_0052: ldc.i4.s 45
L_0054: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0056: initobj System.Nullable`1[UnityEngine.Vector3]
L_005c: ldloc.2
L_005d: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_005f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0065: ldloc.3
L_0066: ldnull
L_0067: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_006c: stloc.0
L_006d: Label1
L_006d: ldloc.0
L_006e: ldnull
L_006f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0074: brfalse Label2
L_0079: ldstr "Error instantiating WeaponEffect [{0}], Weapon [{1}], Parent[{2}] "
L_007e: ldarg.1
L_007f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0084: callvirt System.String get_WeaponEffectID()
L_0089: ldarg.1
L_008a: callvirt System.String get_Name()
L_008f: ldarg.s 4
L_0091: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0096: ldarg.0
L_0097: call Void LogError(System.Object, UnityEngine.Object)
L_009c: br Label12
L_00a1: Label2
L_00a1: ldloc.0
L_00a2: callvirt UnityEngine.Transform get_transform()
L_00a7: ldarg.0
L_00a8: call UnityEngine.Transform get_transform()
L_00ad: callvirt Void set_parent(UnityEngine.Transform)
L_00b2: ldloc.0
L_00b3: callvirt UnityEngine.Transform get_transform()
L_00b8: call UnityEngine.Vector3 get_zero()
L_00bd: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00c2: ldloc.0
L_00c3: callvirt UnityEngine.Transform get_transform()
L_00c8: call UnityEngine.Quaternion get_identity()
L_00cd: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00d2: ldarg.0
L_00d3: ldloc.0
L_00d4: callvirt WeaponEffect GetComponent[WeaponEffect]()
L_00d9: stfld WeaponEffect weaponEffect
L_00de: ldarg.0
L_00df: ldfld WeaponEffect weaponEffect
L_00e4: ldnull
L_00e5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ea: brfalse Label3
L_00ef: ldstr "Error finding WeaponEffect on GO [{0}], Weapon [{1}], Parent[{2}] "
L_00f4: ldarg.1
L_00f5: callvirt BattleTech.WeaponDef get_weaponDef()
L_00fa: callvirt System.String get_WeaponEffectID()
L_00ff: ldarg.1
L_0100: callvirt System.String get_Name()
L_0105: ldarg.s 4
L_0107: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_010c: ldarg.0
L_010d: call Void LogError(System.Object, UnityEngine.Object)
L_0112: br Label13
L_0117: Label3
L_0117: ldc.i4.0
L_0118: stloc.1
L_0119: ldarg.0
L_011a: ldfld UnityEngine.Transform[] vfxTransforms
L_011f: brfalse Label4
L_0124: ldarg.0
L_0125: ldfld UnityEngine.Transform[] vfxTransforms
L_012a: ldlen
L_012b: conv.i4
L_012c: ldc.i4.1
L_012d: bge Label5
L_0132: Label4
L_0132: ldc.i4.1
L_0133: stloc.1
L_0134: br Label6
L_0139: Label5
L_0139: ldarg.0
L_013a: ldfld UnityEngine.Transform[] vfxTransforms
L_013f: stloc.s 4 (UnityEngine.Transform[])
L_0141: ldc.i4.0
L_0142: stloc.s 5 (System.Int32)
L_0144: br Label7
L_0149: Label10
L_0149: ldloc.s 4 (UnityEngine.Transform[])
L_014b: ldloc.s 5 (System.Int32)
L_014d: ldelem.ref
L_014e: ldnull
L_014f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0154: brfalse Label8
L_0159: ldc.i4.1
L_015a: stloc.1
L_015b: br Label9
L_0160: Label8
L_0160: ldloc.s 5 (System.Int32)
L_0162: ldc.i4.1
L_0163: add
L_0164: stloc.s 5 (System.Int32)
L_0166: Label7
L_0166: ldloc.s 5 (System.Int32)
L_0168: ldloc.s 4 (UnityEngine.Transform[])
L_016a: ldlen
L_016b: conv.i4
L_016c: blt Label10
L_0171: Label6
L_0171: Label9
L_0171: ldloc.1
L_0172: brfalse Label11
L_0177: ldc.i4.5
L_0178: newarr System.String
L_017d: dup
L_017e: ldc.i4.0
L_017f: ldstr "WeaponRepresentation for ["
L_0184: stelem.ref
L_0185: dup
L_0186: ldc.i4.1
L_0187: ldarg.1
L_0188: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_018d: ldfld System.String prefabName
L_0192: stelem.ref
L_0193: dup
L_0194: ldc.i4.2
L_0195: ldstr "] on "
L_019a: stelem.ref
L_019b: dup
L_019c: ldc.i4.3
L_019d: ldarg.s 4
L_019f: stelem.ref
L_01a0: dup
L_01a1: ldc.i4.4
L_01a2: ldstr " had no vfxTransforms. Using WeaponRepresentation position as fallback"
L_01a7: stelem.ref
L_01a8: call System.String Concat(System.String[])
L_01ad: call Void LogError(System.Object)
L_01b2: ldarg.0
L_01b3: ldc.i4.1
L_01b4: newarr UnityEngine.Transform
L_01b9: dup
L_01ba: ldc.i4.0
L_01bb: ldarg.0
L_01bc: call UnityEngine.GameObject get_gameObject()
L_01c1: callvirt UnityEngine.Transform get_transform()
L_01c6: stelem.ref
L_01c7: stfld UnityEngine.Transform[] vfxTransforms
L_01cc: Label11
L_01cc: ldarg.0
L_01cd: ldfld WeaponEffect weaponEffect
L_01d2: ldarg.1
L_01d3: callvirt Void Init(BattleTech.Weapon)
L_01d8: Label12
L_01d8: Label13
L_01d8: ldarg.0
L_01d9: ldarg 1
L_01df: ldarg 2
L_01e5: ldarg 3
L_01eb: ldarg 4
L_01f1: ldarg 5
L_01f7: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_01fc: ldarg.0
L_01fd: ldarg 1
L_0203: ldarg 2
L_0209: ldarg 3
L_020f: ldarg 4
L_0215: ldarg 5
L_021b: call Void Postfix(BattleTech.WeaponRepresentation, BattleTech.Weapon, UnityEngine.Transform, Boolean, System.String, Int32)
L_0220: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void PlayWeaponEffect(BattleTech.WeaponHitInfo)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.WeaponRepresentation, BattleTech.WeaponHitInfo)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld WeaponEffect weaponEffect
L_0017: ldnull
L_0018: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_001d: brfalse Label1
L_0022: ldarg.0
L_0023: ldfld WeaponEffect weaponEffect
L_0028: ldarg.1
L_0029: ldc.i4.0
L_002a: ldc.i4.0
L_002b: callvirt Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0030: Label1
L_0030: Label0
L_0030: ret
DONE

### Patch BattleTech.WeaponRepresentation, Void ResetWeaponEffect()
L_0000: ldarg.0
L_0001: ldfld WeaponEffect weaponEffect
L_0006: ldnull
L_0007: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldfld WeaponEffect weaponEffect
L_0017: callvirt Void Reset()
L_001c: Label1
L_001c: ldarg.0
L_001d: call Void Postfix(BattleTech.WeaponRepresentation)
L_0022: ret
DONE

### Patch BattleTech.CombatGameState, Void ShutdownCombatState()
L_0000: call BattleTech.GameInstance get_BattleTechGame()
L_0005: callvirt BattleTech.CombatGameState get_Combat()
L_000a: brfalse Label1
L_000f: call BattleTech.GameInstance get_BattleTechGame()
L_0014: callvirt BattleTech.CombatGameState get_Combat()
L_0019: callvirt Void ClearStackManager()
L_001e: Label1
L_001e: call Void ShutdownCombatAudio()
L_0023: call BattleTech.UI.UIManager get_Instance()
L_0028: callvirt Void PoolAllModules()
L_002d: call Boolean get_HasInstance()
L_0032: brfalse Label2
L_0037: call BattleTech.Rendering.UI.UICameraRenderer get_Instance()
L_003c: callvirt Void DisableRenderTexture()
L_0041: Label2
L_0041: ldnull
L_0042: call Void Postfix(BattleTech.CombatGameState)
L_0047: ret
DONE

### Patch MissileEffect, Void PlayProjectile()
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: callvirt Void PlayMuzzleFlash()
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld UnityEngine.Vector3 preFireEndPos
L_0018: stfld UnityEngine.Vector3 startPos
L_001d: ldarg.0
L_001e: ldarg.0
L_001f: ldfld UnityEngine.Vector3 startPos
L_0024: stfld UnityEngine.Vector3 currentPos
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 startPos
L_002f: ldarg.0
L_0030: ldfld UnityEngine.Vector3 endPos
L_0035: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld System.Single projectileSpeed
L_0041: ldc.r4 0
L_0046: ble.un Label1
L_004b: ldarg.0
L_004c: ldloc.0
L_004d: ldarg.0
L_004e: ldfld System.Single projectileSpeed
L_0053: div
L_0054: stfld System.Single duration
L_0059: br Label2
L_005e: Label1
L_005e: ldarg.0
L_005f: ldc.r4 1
L_0064: stfld System.Single duration
L_0069: Label2
L_0069: ldarg.0
L_006a: ldfld System.Single duration
L_006f: ldc.r4 4
L_0074: ble.un Label3
L_0079: ldarg.0
L_007a: ldc.r4 4
L_007f: stfld System.Single duration
L_0084: Label3
L_0084: ldarg.0
L_0085: ldc.r4 1
L_008a: ldarg.0
L_008b: ldfld System.Single duration
L_0090: div
L_0091: stfld System.Single rate
L_0096: ldarg.0
L_0097: ldfld System.Boolean isIndirect
L_009c: brfalse Label4
L_00a1: ldarg.0
L_00a2: call Void GenerateIndirectMissilePath()
L_00a7: br Label5
L_00ac: Label4
L_00ac: ldarg.0
L_00ad: call Void GenerateMissilePath()
L_00b2: Label5
L_00b2: ldarg.0
L_00b3: call Void PlayProjectile()
L_00b8: ldarg.0
L_00b9: ldarg.0
L_00ba: ldfld UnityEngine.Vector3 preFireEndPos
L_00bf: stfld UnityEngine.Vector3 startPos
L_00c4: ldarg.0
L_00c5: ldfld System.Boolean isSRM
L_00ca: brfalse Label6
L_00cf: ldc.i4 380
L_00d4: ldarg.0
L_00d5: ldfld AkGameObj projectileAudioObject
L_00da: ldnull
L_00db: ldnull
L_00dc: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_00e1: pop
L_00e2: ldarg.0
L_00e3: ldfld System.Int32 hitIndex
L_00e8: ldarg.0
L_00e9: ldflda BattleTech.WeaponHitInfo hitInfo
L_00ee: ldfld System.Int32 numberOfShots
L_00f3: blt Label7
L_00f8: ldc.i4 379
L_00fd: ldarg.0
L_00fe: ldfld AkGameObj parentAudioObject
L_0103: ldnull
L_0104: ldnull
L_0105: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_010a: pop
L_010b: br Label9
L_0110: Label7
L_0110: ldc.i4 378
L_0115: ldarg.0
L_0116: ldfld AkGameObj parentAudioObject
L_011b: ldnull
L_011c: ldnull
L_011d: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0122: pop
L_0123: br Label10
L_0128: Label6
L_0128: ldc.i4 365
L_012d: ldarg.0
L_012e: ldfld AkGameObj projectileAudioObject
L_0133: ldnull
L_0134: ldnull
L_0135: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_013a: pop
L_013b: ldarg.0
L_013c: ldfld System.Int32 hitIndex
L_0141: ldarg.0
L_0142: ldflda BattleTech.WeaponHitInfo hitInfo
L_0147: ldfld System.Int32 numberOfShots
L_014c: blt Label8
L_0151: ldc.i4 364
L_0156: ldarg.0
L_0157: ldfld AkGameObj parentAudioObject
L_015c: ldnull
L_015d: ldnull
L_015e: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0163: pop
L_0164: br Label11
L_0169: Label8
L_0169: ldc.i4 363
L_016e: ldarg.0
L_016f: ldfld AkGameObj parentAudioObject
L_0174: ldnull
L_0175: ldnull
L_0176: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_017b: pop
L_017c: Label9
L_017c: Label10
L_017c: Label11
L_017c: Label0
L_017c: ret
DONE

### Patch WeaponEffect, Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0000: Local var 0: BattleTech.ICombatant
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: UnityEngine.Vector3
L_0000: ldloca 3 (UnityEngine.Vector3)
L_0002: initobj UnityEngine.Vector3
L_0008: ldarg.0
L_0009: ldarga 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldloca 3 (UnityEngine.Vector3)
L_001d: call Boolean Prefix(WeaponEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, UnityEngine.Vector3 ByRef)
L_0022: brfalse Label0
L_0027: ldarg.0
L_0028: ldc.r4 0
L_002d: stfld System.Single t
L_0032: ldarg.0
L_0033: ldarg.2
L_0034: stfld System.Int32 hitIndex
L_0039: ldarg.0
L_003a: ldarg.3
L_003b: stfld System.Int32 emitterIndex
L_0040: ldarg.0
L_0041: ldarg.1
L_0042: stfld BattleTech.WeaponHitInfo hitInfo
L_0047: ldarg.0
L_0048: ldarg.0
L_0049: ldfld BattleTech.WeaponRepresentation weaponRep
L_004e: ldfld UnityEngine.Transform[] vfxTransforms
L_0053: ldarg.3
L_0054: ldelem.ref
L_0055: stfld UnityEngine.Transform startingTransform
L_005a: ldarg.0
L_005b: ldarg.0
L_005c: ldfld UnityEngine.Transform startingTransform
L_0061: callvirt UnityEngine.Vector3 get_position()
L_0066: stfld UnityEngine.Vector3 startPos
L_006b: ldarga.s 1
L_006d: ldarg.2
L_006e: call Boolean DidShotHitChosenTarget(Int32)
L_0073: brfalse Label1
L_0078: ldarg.0
L_0079: ldfld BattleTech.CombatGameState Combat
L_007e: ldarga.s 1
L_0080: ldarg.2
L_0081: call System.String ShotTargetId(Int32)
L_0086: ldc.i4.0
L_0087: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_008c: stloc.0
L_008d: ldloc.0
L_008e: brfalse Label2
L_0093: ldnull
L_0094: stloc.1
L_0095: ldc.i4.0
L_0096: stloc.2
L_0097: ldarg.1
L_0098: ldfld UnityEngine.Vector3[] hitPositions
L_009d: ldarg.2
L_009e: ldloc.0
L_009f: ldarg.0
L_00a0: ldfld BattleTech.WeaponRepresentation weaponRep
L_00a5: callvirt BattleTech.ICombatant get_parentCombatant()
L_00aa: isinst BattleTech.AbstractActor
L_00af: ldarg.0
L_00b0: ldfld UnityEngine.Vector3 startPos
L_00b5: ldarg.0
L_00b6: ldfld BattleTech.Weapon weapon
L_00bb: ldarg.1
L_00bc: ldfld System.Int32[] hitLocations
L_00c1: ldarg.2
L_00c2: ldelema System.Int32
L_00c7: ldarg.1
L_00c8: ldfld BattleTech.AttackDirection[] attackDirections
L_00cd: ldarg.2
L_00ce: ldelema BattleTech.AttackDirection
L_00d3: ldloca.s 1 (System.String)
L_00d5: ldloca.s 2 (System.Int32)
L_00d7: callvirt UnityEngine.Vector3 GetImpactPosition(BattleTech.AbstractActor, UnityEngine.Vector3, BattleTech.Weapon, Int32 ByRef, BattleTech.AttackDirection ByRef, System.String ByRef, Int32 ByRef)
L_00dc: stelem UnityEngine.Vector3
L_00e1: Label1
L_00e1: Label2
L_00e1: ldarg.0
L_00e2: ldarg.1
L_00e3: ldfld UnityEngine.Vector3[] hitPositions
L_00e8: ldarg.2
L_00e9: ldelem UnityEngine.Vector3
L_00ee: stfld UnityEngine.Vector3 endPos
L_00f3: ldarg.0
L_00f4: ldarg.0
L_00f5: ldfld UnityEngine.Vector3 startPos
L_00fa: stfld UnityEngine.Vector3 currentPos
L_00ff: ldarg.0
L_0100: ldc.i4.0
L_0101: call Void set_FiringComplete(Boolean)
L_0106: ldarg.0
L_0107: callvirt Void InitProjectile()
L_010c: ldarg.0
L_010d: ldc.i4.1
L_010e: stfld WeaponEffect+WeaponEffectState currentState
L_0113: Label0
L_0113: ldarg.0
L_0114: ldarga 1
L_011a: ldarg 2
L_0120: ldarg 3
L_0126: ldloca 3 (UnityEngine.Vector3)
L_0128: call Void Postfix(WeaponEffect, BattleTech.WeaponHitInfo ByRef, Int32, Int32, UnityEngine.Vector3 ByRef)
L_012d: ret
DONE

### Patch WeaponEffect, Void PlayImpact()
L_0000: Local var 0: System.String
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: System.String
L_0000: Local var 3: UnityEngine.GameObject
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: UnityEngine.ParticleSystem
L_0000: Local var 8: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 9: AutoPoolObject
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0011: ldarg.0
L_0012: ldfld System.Int32 hitIndex
L_0017: call Boolean DidShotHitAnything(Int32)
L_001c: brfalse Label1
L_0021: ldarg.0
L_0022: ldfld System.String impactVFXBase
L_0027: call Boolean IsNullOrEmpty(System.String)
L_002c: brtrue Label2
L_0031: ldstr ""
L_0036: stloc.0
L_0037: ldarg.0
L_0038: ldfld BattleTech.CombatGameState Combat
L_003d: ldarg.0
L_003e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0043: ldarg.0
L_0044: ldfld System.Int32 hitIndex
L_0049: call System.String ShotTargetId(Int32)
L_004e: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0053: stloc.1
L_0054: ldloc.1
L_0055: brfalse Label3
L_005a: ldarg.0
L_005b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0060: ldarg.0
L_0061: ldfld System.Int32 hitIndex
L_0066: call Int32 ShotHitLocation(Int32)
L_006b: ldc.i4 65536
L_0070: beq Label4
L_0075: ldarg.0
L_0076: ldfld BattleTech.Weapon weapon
L_007b: ldarg.0
L_007c: ldfld BattleTech.Weapon weapon
L_0081: ldfld BattleTech.AbstractActor parent
L_0086: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_008b: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_0090: ldloc.1
L_0091: ldarg.0
L_0092: ldflda BattleTech.WeaponHitInfo hitInfo
L_0097: ldarg.0
L_0098: ldfld System.Int32 hitIndex
L_009d: call Int32 ShotHitLocation(Int32)
L_00a2: callvirt Single ArmorForLocation(Int32)
L_00a7: ble.un Label5
L_00ac: ldstr "_crit"
L_00b1: stloc.0
L_00b2: br Label6
L_00b7: Label3
L_00b7: Label4
L_00b7: Label5
L_00b7: ldarg.0
L_00b8: ldfld System.String[] impactVFXVariations
L_00bd: brfalse Label7
L_00c2: ldarg.0
L_00c3: ldfld System.String[] impactVFXVariations
L_00c8: ldlen
L_00c9: brfalse Label8
L_00ce: ldc.i4.0
L_00cf: ldarg.0
L_00d0: ldfld System.String[] impactVFXVariations
L_00d5: ldlen
L_00d6: conv.i4
L_00d7: call Int32 Range(Int32, Int32)
L_00dc: stloc.s 4 (System.Int32)
L_00de: ldstr "_"
L_00e3: ldarg.0
L_00e4: ldfld System.String[] impactVFXVariations
L_00e9: ldloc.s 4 (System.Int32)
L_00eb: ldelem.ref
L_00ec: call System.String Concat(System.String, System.String)
L_00f1: stloc.0
L_00f2: Label6
L_00f2: Label7
L_00f2: Label8
L_00f2: ldstr "{0}{1}"
L_00f7: ldarg.0
L_00f8: ldfld System.String impactVFXBase
L_00fd: ldloc.0
L_00fe: call System.String Format(System.String, System.Object, System.Object)
L_0103: stloc.2
L_0104: ldarg.0
L_0105: ldfld BattleTech.Weapon weapon
L_010a: ldfld BattleTech.AbstractActor parent
L_010f: callvirt BattleTech.CombatGameState get_Combat()
L_0114: callvirt BattleTech.Data.DataManager get_DataManager()
L_0119: ldloc.2
L_011a: ldc.i4.s 45
L_011c: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_011e: initobj System.Nullable`1[UnityEngine.Vector3]
L_0124: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0126: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0128: initobj System.Nullable`1[UnityEngine.Quaternion]
L_012e: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0130: ldnull
L_0131: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0136: stloc.3
L_0137: ldloc.3
L_0138: ldnull
L_0139: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_013e: brfalse Label9
L_0143: ldsfld HBS.Logging.ILog logger
L_0148: ldarg.0
L_0149: ldfld BattleTech.Weapon weapon
L_014e: callvirt System.String get_Name()
L_0153: ldstr " WeaponEffect.PlayImpact had an invalid VFX name: "
L_0158: ldloc.2
L_0159: call System.String Concat(System.String, System.String, System.String)
L_015e: callvirt Void LogError(System.Object)
L_0163: br Label10
L_0168: Label9
L_0168: ldloc.3
L_0169: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_016e: stloc.s 7 (UnityEngine.ParticleSystem)
L_0170: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0172: ldc.i4.1
L_0173: callvirt Void Stop(Boolean)
L_0178: ldloc.s 7 (UnityEngine.ParticleSystem)
L_017a: ldc.i4.1
L_017b: callvirt Void Clear(Boolean)
L_0180: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0182: callvirt UnityEngine.Transform get_transform()
L_0187: ldarg.0
L_0188: ldfld UnityEngine.Vector3 endPos
L_018d: callvirt Void set_position(UnityEngine.Vector3)
L_0192: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0194: callvirt UnityEngine.Transform get_transform()
L_0199: ldarg.0
L_019a: ldfld UnityEngine.Transform startingTransform
L_019f: callvirt UnityEngine.Vector3 get_position()
L_01a4: callvirt Void LookAt(UnityEngine.Vector3)
L_01a9: ldloc.s 7 (UnityEngine.ParticleSystem)
L_01ab: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_01b0: ldloc.s 7 (UnityEngine.ParticleSystem)
L_01b2: ldc.i4.1
L_01b3: callvirt Void Play(Boolean)
L_01b8: ldloc.3
L_01b9: ldc.i4.1
L_01ba: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_01bf: stloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01c1: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01c3: ldnull
L_01c4: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01c9: brfalse Label11
L_01ce: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01d0: callvirt Void StopAnimation()
L_01d5: ldloc.s 8 (BattleTech.Rendering.BTLightAnimator)
L_01d7: callvirt Void PlayAnimation()
L_01dc: Label11
L_01dc: ldloc.3
L_01dd: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_01e2: stloc.s 9 (AutoPoolObject)
L_01e4: ldloc.s 9 (AutoPoolObject)
L_01e6: ldnull
L_01e7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01ec: brfalse Label12
L_01f1: ldloc.3
L_01f2: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_01f7: stloc.s 9 (AutoPoolObject)
L_01f9: Label12
L_01f9: ldloc.s 9 (AutoPoolObject)
L_01fb: ldarg.0
L_01fc: ldfld BattleTech.Weapon weapon
L_0201: ldfld BattleTech.AbstractActor parent
L_0206: callvirt BattleTech.CombatGameState get_Combat()
L_020b: callvirt BattleTech.Data.DataManager get_DataManager()
L_0210: ldloc.2
L_0211: ldloc.s 7 (UnityEngine.ParticleSystem)
L_0213: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_0218: Label1
L_0218: Label2
L_0218: Label10
L_0218: ldarg.0
L_0219: callvirt Void PlayImpactDamageOverlay()
L_021e: ldarg.0
L_021f: ldfld UnityEngine.GameObject projectileMeshObject
L_0224: ldnull
L_0225: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_022a: brfalse Label13
L_022f: ldarg.0
L_0230: ldfld UnityEngine.GameObject projectileMeshObject
L_0235: ldc.i4.0
L_0236: callvirt Void SetActive(Boolean)
L_023b: Label13
L_023b: ldarg.0
L_023c: ldfld UnityEngine.GameObject projectileLightObject
L_0241: ldnull
L_0242: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0247: brfalse Label14
L_024c: ldarg.0
L_024d: ldfld UnityEngine.GameObject projectileLightObject
L_0252: ldc.i4.0
L_0253: callvirt Void SetActive(Boolean)
L_0258: Label14
L_0258: ldarg.0
L_0259: ldc.r4 0
L_025e: callvirt Void OnImpact(Single)
L_0263: Label0
L_0263: ret
DONE

### Patch WeaponEffect, Void PlayImpactAudio()
L_0000: Local var 0: AudioSwitch_surface_type
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.AbstractActor
L_0000: Local var 3: BattleTech.MapTerrainDataCell
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0011: ldarg.0
L_0012: ldfld System.Int32 hitIndex
L_0017: call Boolean DidShotHitAnything(Int32)
L_001c: brfalse Label1
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldfld BattleTech.Weapon weapon
L_0029: ldfld BattleTech.AbstractActor parent
L_002e: callvirt BattleTech.CombatGameState get_Combat()
L_0033: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0038: ldarg.0
L_0039: ldfld BattleTech.WeaponHitInfo hitInfo
L_003e: ldarg.0
L_003f: ldfld System.Int32 hitIndex
L_0044: callvirt BattleTech.ICombatant GetHitInfoTarget(BattleTech.WeaponHitInfo, Int32)
L_0049: stloc.1
L_004a: ldloc.1
L_004b: brfalse Label2
L_0050: ldloc.1
L_0051: isinst BattleTech.AbstractActor
L_0056: stloc.2
L_0057: ldloc.2
L_0058: brfalse Label3
L_005d: ldc.i4.2
L_005e: stloc.0
L_005f: ldloc.2
L_0060: ldarg.0
L_0061: ldflda BattleTech.WeaponHitInfo hitInfo
L_0066: ldarg.0
L_0067: ldfld System.Int32 hitIndex
L_006c: call Int32 ShotHitLocation(Int32)
L_0071: callvirt Single ArmorForLocation(Int32)
L_0076: ldc.r4 0
L_007b: bgt.un Label4
L_0080: ldc.i4.s 16
L_0082: stloc.0
L_0083: br Label5
L_0088: Label3
L_0088: ldc.i4.7
L_0089: stloc.0
L_008a: br Label6
L_008f: Label2
L_008f: ldarg.0
L_0090: ldfld BattleTech.Weapon weapon
L_0095: ldfld BattleTech.AbstractActor parent
L_009a: callvirt BattleTech.CombatGameState get_Combat()
L_009f: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00a4: ldarg.0
L_00a5: ldflda BattleTech.WeaponHitInfo hitInfo
L_00aa: ldfld UnityEngine.Vector3[] hitPositions
L_00af: ldarg.0
L_00b0: ldfld System.Int32 hitIndex
L_00b5: ldelem UnityEngine.Vector3
L_00ba: callvirt BattleTech.MapTerrainDataCell GetCellAt(UnityEngine.Vector3)
L_00bf: stloc.3
L_00c0: ldloc.3
L_00c1: brfalse Label7
L_00c6: ldloc.3
L_00c7: callvirt AudioSwitch_surface_type GetAudioSurfaceType()
L_00cc: stloc.0
L_00cd: Label4
L_00cd: Label5
L_00cd: Label6
L_00cd: Label7
L_00cd: ldloc.0
L_00ce: ldarg.0
L_00cf: ldfld AkGameObj projectileAudioObject
L_00d4: call Void SetSwitch[AudioSwitch_surface_type](AudioSwitch_surface_type, AkGameObj)
L_00d9: ldc.i4 335
L_00de: ldarg.0
L_00df: ldfld AkGameObj projectileAudioObject
L_00e4: ldnull
L_00e5: ldnull
L_00e6: call UInt32 PostEvent[AudioEventList_impact](AudioEventList_impact, AkGameObj, EventCallback, System.Object)
L_00eb: pop
L_00ec: Label1
L_00ec: Label0
L_00ec: ret
DONE

### Patch WeaponEffect, Void OnImpact(Single)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Boolean Prefix(WeaponEffect, Single ByRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.WeaponHitInfo hitInfo
L_0017: ldarg.0
L_0018: ldfld System.Int32 hitIndex
L_001d: ldarg.1
L_001e: newobj Void .ctor(WeaponHitInfo, Int32, Single)
L_0023: stloc.0
L_0024: ldarg.0
L_0025: ldfld BattleTech.CombatGameState Combat
L_002a: callvirt MessageCenter get_MessageCenter()
L_002f: ldloc.0
L_0030: callvirt Void PublishMessage(MessageCenterMessage)
L_0035: Label0
L_0035: ldarg.0
L_0036: ldarga 1
L_003c: call Void Postfix(WeaponEffect, Single ByRef)
L_0041: ret
DONE

### Patch WeaponEffect, Void OnComplete()
L_0000: Local var 0: BattleTech.AttackSequenceResolveDamageMessage
L_0000: Local var 1: AutoPoolObject
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld WeaponEffect+WeaponEffectState currentState
L_0011: ldc.i4.4
L_0012: bne.un Label1
L_0017: br Label5
L_001c: Label1
L_001c: ldarg.0
L_001d: ldc.i4.4
L_001e: stfld WeaponEffect+WeaponEffectState currentState
L_0023: ldarg.0
L_0024: ldfld System.Boolean subEffect
L_0029: brtrue Label2
L_002e: ldarg.0
L_002f: ldfld BattleTech.WeaponHitInfo hitInfo
L_0034: newobj Void .ctor(WeaponHitInfo)
L_0039: stloc.0
L_003a: ldarg.0
L_003b: ldfld BattleTech.CombatGameState Combat
L_0040: callvirt MessageCenter get_MessageCenter()
L_0045: ldloc.0
L_0046: callvirt Void PublishMessage(MessageCenterMessage)
L_004b: Label2
L_004b: ldarg.0
L_004c: call Void PublishNextWeaponMessage()
L_0051: ldarg.0
L_0052: call Void PublishWeaponCompleteMessage()
L_0057: ldarg.0
L_0058: ldfld UnityEngine.GameObject projectilePrefab
L_005d: ldnull
L_005e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0063: brfalse Label3
L_0068: ldarg.0
L_0069: ldfld UnityEngine.GameObject projectile
L_006e: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_0073: stloc.1
L_0074: ldloc.1
L_0075: ldnull
L_0076: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_007b: brfalse Label4
L_0080: ldarg.0
L_0081: ldfld UnityEngine.GameObject projectile
L_0086: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_008b: stloc.1
L_008c: Label4
L_008c: ldloc.1
L_008d: ldarg.0
L_008e: ldfld BattleTech.Weapon weapon
L_0093: ldfld BattleTech.AbstractActor parent
L_0098: callvirt BattleTech.CombatGameState get_Combat()
L_009d: callvirt BattleTech.Data.DataManager get_DataManager()
L_00a2: ldarg.0
L_00a3: ldfld System.String activeProjectileName
L_00a8: ldc.r4 4
L_00ad: callvirt Void Init(BattleTech.Data.DataManager, System.String, Single)
L_00b2: ldarg.0
L_00b3: ldnull
L_00b4: stfld UnityEngine.GameObject projectile
L_00b9: Label3
L_00b9: Label5
L_00b9: Label0
L_00b9: ret
DONE

### Patch WeaponEffect, Void PublishNextWeaponMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponPreFireCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean subEffect
L_0011: brtrue Label1
L_0016: ldarg.0
L_0017: ldfld System.Boolean hasSentNextWeaponMessage
L_001c: brtrue Label2
L_0021: ldarg.0
L_0022: ldflda BattleTech.WeaponHitInfo hitInfo
L_0027: ldfld System.Int32 stackItemUID
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 attackSequenceId
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackGroupIndex
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackWeaponIndex
L_004d: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_0052: stloc.0
L_0053: ldarg.0
L_0054: ldfld BattleTech.CombatGameState Combat
L_0059: callvirt MessageCenter get_MessageCenter()
L_005e: ldloc.0
L_005f: callvirt Void PublishMessage(MessageCenterMessage)
L_0064: Label1
L_0064: Label2
L_0064: ldarg.0
L_0065: ldc.r4 -1
L_006a: stfld System.Single attackSequenceNextDelayTimer
L_006f: ldarg.0
L_0070: ldc.i4.1
L_0071: stfld System.Boolean hasSentNextWeaponMessage
L_0076: Label0
L_0076: ret
DONE

### Patch WeaponEffect, Void PublishWeaponCompleteMessage()
L_0000: Local var 0: BattleTech.AttackSequenceWeaponCompleteMessage
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(WeaponEffect)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: ldfld System.Boolean subEffect
L_001c: brtrue Label1
L_0021: ldarg.0
L_0022: call Boolean get_FiringComplete()
L_0027: brtrue Label2
L_002c: ldarg.0
L_002d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0032: ldfld System.Int32 stackItemUID
L_0037: ldarg.0
L_0038: ldflda BattleTech.WeaponHitInfo hitInfo
L_003d: ldfld System.Int32 attackSequenceId
L_0042: ldarg.0
L_0043: ldflda BattleTech.WeaponHitInfo hitInfo
L_0048: ldfld System.Int32 attackGroupIndex
L_004d: ldarg.0
L_004e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0053: ldfld System.Int32 attackWeaponIndex
L_0058: newobj Void .ctor(Int32, Int32, Int32, Int32)
L_005d: stloc.0
L_005e: ldarg.0
L_005f: ldfld BattleTech.CombatGameState Combat
L_0064: callvirt MessageCenter get_MessageCenter()
L_0069: ldloc.0
L_006a: callvirt Void PublishMessage(MessageCenterMessage)
L_006f: Label1
L_006f: Label2
L_006f: ldarg.0
L_0070: ldc.i4.1
L_0071: call Void set_FiringComplete(Boolean)
L_0076: Label0
L_0076: ldarg.0
L_0077: call Void Postfix(WeaponEffect)
L_007c: ret
DONE

### Patch BallisticEffect, Void OnBulletImpact(BulletEffect)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BallisticEffect, BulletEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldc.r4 0
L_0017: callvirt Void OnImpact(Single)
L_001c: ldarg.0
L_001d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0022: ldarg.0
L_0023: ldfld System.Int32 hitIndex
L_0028: call Boolean DidShotHitAnything(Int32)
L_002d: brfalse Label1
L_0032: ldarg.1
L_0033: ldfld System.Int32 bulletIdx
L_0038: ldarg.0
L_0039: ldfld BattleTech.Weapon weapon
L_003e: callvirt Int32 get_ProjectilesPerShot()
L_0043: ldc.i4.1
L_0044: sub
L_0045: bge Label2
L_004a: ldarg.0
L_004b: ldfld BattleTech.CombatGameState Combat
L_0050: ldarg.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldarg.0
L_0057: ldfld System.Int32 hitIndex
L_005c: call System.String ShotTargetId(Int32)
L_0061: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0066: stloc.0
L_0067: ldloc.0
L_0068: brfalse Label3
L_006d: ldloc.0
L_006e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0073: ldnull
L_0074: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0079: brfalse Label4
L_007e: ldloc.0
L_007f: callvirt BattleTech.GameRepresentation get_GameRep()
L_0084: ldarg.0
L_0085: ldfld BattleTech.WeaponHitInfo hitInfo
L_008a: ldarg.0
L_008b: ldfld System.Int32 hitIndex
L_0090: ldarg.0
L_0091: ldfld BattleTech.Weapon weapon
L_0096: ldc.i4.0
L_0097: ldc.r4 0
L_009c: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_00a1: Label1
L_00a1: Label2
L_00a1: Label3
L_00a1: Label4
L_00a1: Label0
L_00a1: ret
DONE

### Patch BallisticEffect, Void SetupBullets()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: BulletEffect
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: call Boolean Prefix(BallisticEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldc.i4.0
L_000d: stfld System.Int32 currentBullet
L_0012: ldarg.0
L_0013: ldfld System.Single shotDelay
L_0018: ldc.r4 0
L_001d: bgt.un Label1
L_0022: ldarg.0
L_0023: ldc.r4 0.5
L_0028: stfld System.Single shotDelay
L_002d: Label1
L_002d: ldarg.0
L_002e: ldc.r4 1
L_0033: ldarg.0
L_0034: ldfld System.Single shotDelay
L_0039: div
L_003a: stfld System.Single rate
L_003f: ldarg.0
L_0040: call Void ClearBullets()
L_0045: ldc.i4.0
L_0046: stloc.0
L_0047: br Label2
L_004c: Label5
L_004c: ldarg.0
L_004d: ldfld BattleTech.CombatGameState Combat
L_0052: callvirt BattleTech.Data.DataManager get_DataManager()
L_0057: ldarg.0
L_0058: ldfld UnityEngine.GameObject bulletPrefab
L_005d: callvirt System.String get_name()
L_0062: ldc.i4.s 45
L_0064: ldloca.s 3 (System.Nullable`1[UnityEngine.Vector3])
L_0066: initobj System.Nullable`1[UnityEngine.Vector3]
L_006c: ldloc.3
L_006d: ldloca.s 4 (System.Nullable`1[UnityEngine.Quaternion])
L_006f: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0075: ldloc.s 4 (System.Nullable`1[UnityEngine.Quaternion])
L_0077: ldnull
L_0078: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_007d: stloc.1
L_007e: ldloc.1
L_007f: ldnull
L_0080: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0085: brfalse Label3
L_008a: ldsfld HBS.Logging.ILog logger
L_008f: ldstr "Error instantiating BulletObject "
L_0094: ldarg.0
L_0095: ldfld UnityEngine.GameObject bulletPrefab
L_009a: callvirt System.String get_name()
L_009f: call System.String Concat(System.String, System.String)
L_00a4: ldarg.0
L_00a5: callvirt Void LogError(System.Object, UnityEngine.Object)
L_00aa: br Label6
L_00af: Label3
L_00af: ldloc.1
L_00b0: callvirt UnityEngine.Transform get_transform()
L_00b5: ldnull
L_00b6: callvirt Void set_parent(UnityEngine.Transform)
L_00bb: ldloc.1
L_00bc: callvirt BulletEffect GetComponent[BulletEffect]()
L_00c1: stloc.2
L_00c2: ldloc.2
L_00c3: ldnull
L_00c4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00c9: brfalse Label4
L_00ce: ldsfld HBS.Logging.ILog logger
L_00d3: ldstr "Error finding BulletEffect on GO "
L_00d8: ldarg.0
L_00d9: ldfld UnityEngine.GameObject bulletPrefab
L_00de: callvirt System.String get_name()
L_00e3: call System.String Concat(System.String, System.String)
L_00e8: ldarg.0
L_00e9: callvirt Void LogError(System.Object, UnityEngine.Object)
L_00ee: br Label7
L_00f3: Label4
L_00f3: ldarg.0
L_00f4: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_00f9: ldloc.2
L_00fa: callvirt Void Add(BulletEffect)
L_00ff: ldloc.2
L_0100: ldarg.0
L_0101: ldfld BattleTech.Weapon weapon
L_0106: ldarg.0
L_0107: callvirt Void Init(BattleTech.Weapon, BallisticEffect)
L_010c: ldloc.0
L_010d: ldc.i4.1
L_010e: add
L_010f: stloc.0
L_0110: Label2
L_0110: ldloc.0
L_0111: ldarg.0
L_0112: ldfld BattleTech.Weapon weapon
L_0117: callvirt Int32 get_ProjectilesPerShot()
L_011c: blt Label5
L_0121: Label6
L_0121: Label7
L_0121: Label0
L_0121: ret
DONE

### Patch BallisticEffect, Void FireNextBullet()
L_0000: Local var 0: System.String
L_0000: ldarg.0
L_0001: call Boolean Prefix(BallisticEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Int32 currentBullet
L_0011: ldc.i4.0
L_0012: blt Label1
L_0017: ldarg.0
L_0018: ldfld System.Int32 currentBullet
L_001d: ldarg.0
L_001e: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_0023: callvirt Int32 get_Count()
L_0028: bge Label2
L_002d: ldarg.0
L_002e: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_0033: ldarg.0
L_0034: ldfld System.Int32 currentBullet
L_0039: callvirt BulletEffect get_Item(Int32)
L_003e: dup
L_003f: ldarg.0
L_0040: ldfld System.Int32 currentBullet
L_0045: stfld System.Int32 bulletIdx
L_004a: ldarg.0
L_004b: ldfld BattleTech.WeaponHitInfo hitInfo
L_0050: ldc.i4.0
L_0051: ldc.i4.0
L_0052: callvirt Void Fire(BattleTech.WeaponHitInfo, Int32, Int32)
L_0057: ldarg.0
L_0058: callvirt Void PlayMuzzleFlash()
L_005d: ldstr ""
L_0062: stloc.0
L_0063: ldarg.0
L_0064: ldfld System.Int32 currentBullet
L_0069: brtrue Label3
L_006e: ldarg.0
L_006f: ldfld System.String firstShotSFX
L_0074: stloc.0
L_0075: br Label4
L_007a: Label3
L_007a: ldarg.0
L_007b: ldfld System.Int32 currentBullet
L_0080: ldarg.0
L_0081: ldfld BattleTech.Weapon weapon
L_0086: callvirt Int32 get_ProjectilesPerShot()
L_008b: ldc.i4.1
L_008c: sub
L_008d: bne.un Label5
L_0092: ldarg.0
L_0093: ldfld System.String lastShotSFX
L_0098: stloc.0
L_0099: br Label6
L_009e: Label5
L_009e: ldarg.0
L_009f: ldfld System.String middleShotSFX
L_00a4: stloc.0
L_00a5: Label4
L_00a5: Label6
L_00a5: ldloc.0
L_00a6: call Boolean IsNullOrEmpty(System.String)
L_00ab: brtrue Label7
L_00b0: ldloc.0
L_00b1: ldarg.0
L_00b2: ldfld AkGameObj parentAudioObject
L_00b7: ldnull
L_00b8: ldnull
L_00b9: call UInt32 PostEvent(System.String, AkGameObj, EventCallback, System.Object)
L_00be: pop
L_00bf: Label7
L_00bf: ldarg.0
L_00c0: ldarg.0
L_00c1: ldfld System.Int32 currentBullet
L_00c6: ldc.i4.1
L_00c7: add
L_00c8: stfld System.Int32 currentBullet
L_00cd: ldarg.0
L_00ce: ldc.r4 0
L_00d3: stfld System.Single t
L_00d8: ldarg.0
L_00d9: ldfld System.Int32 currentBullet
L_00de: ldarg.0
L_00df: ldfld System.Collections.Generic.List`1[BulletEffect] bullets
L_00e4: callvirt Int32 get_Count()
L_00e9: blt Label8
L_00ee: ldarg.0
L_00ef: ldc.i4.3
L_00f0: stfld WeaponEffect+WeaponEffectState currentState
L_00f5: Label1
L_00f5: Label2
L_00f5: Label8
L_00f5: Label0
L_00f5: ret
DONE

### Patch BallisticEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: ldflda System.Int32 hitIndex
L_0006: ldarg.0
L_0007: call Boolean Prefix(Int32 ByRef, BallisticEffect)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: ldfld BattleTech.Weapon weapon
L_0018: ldarg.0
L_0019: ldfld BattleTech.Weapon weapon
L_001e: ldfld BattleTech.AbstractActor parent
L_0023: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0028: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_002d: ldarg.0
L_002e: ldfld BattleTech.Weapon weapon
L_0033: callvirt Int32 get_ShotsWhenFired()
L_0038: conv.r4
L_0039: mul
L_003a: callvirt Void OnImpact(Single)
L_003f: ldarg.0
L_0040: call Void OnComplete()
L_0045: Label0
L_0045: ldarg.0
L_0046: call Void Postfix(WeaponEffect)
L_004b: ret
DONE

### Patch BulletEffect, Void OnComplete()
L_0000: ldarg.0
L_0001: call Void OnComplete()
L_0006: ldarg.0
L_0007: call Void Postfix(WeaponEffect)
L_000c: ret
DONE

### Patch MissileEffect, Void PlayProjectile()
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(MissileEffect)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: callvirt Void PlayMuzzleFlash()
L_001c: ldarg.0
L_001d: ldarg.0
L_001e: ldfld UnityEngine.Vector3 preFireEndPos
L_0023: stfld UnityEngine.Vector3 startPos
L_0028: ldarg.0
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 startPos
L_002f: stfld UnityEngine.Vector3 currentPos
L_0034: ldarg.0
L_0035: ldfld UnityEngine.Vector3 startPos
L_003a: ldarg.0
L_003b: ldfld UnityEngine.Vector3 endPos
L_0040: call Single Distance(UnityEngine.Vector3, UnityEngine.Vector3)
L_0045: stloc.0
L_0046: ldarg.0
L_0047: ldfld System.Single projectileSpeed
L_004c: ldc.r4 0
L_0051: ble.un Label1
L_0056: ldarg.0
L_0057: ldloc.0
L_0058: ldarg.0
L_0059: ldfld System.Single projectileSpeed
L_005e: div
L_005f: stfld System.Single duration
L_0064: br Label2
L_0069: Label1
L_0069: ldarg.0
L_006a: ldc.r4 1
L_006f: stfld System.Single duration
L_0074: Label2
L_0074: ldarg.0
L_0075: ldfld System.Single duration
L_007a: ldc.r4 4
L_007f: ble.un Label3
L_0084: ldarg.0
L_0085: ldc.r4 4
L_008a: stfld System.Single duration
L_008f: Label3
L_008f: ldarg.0
L_0090: ldc.r4 1
L_0095: ldarg.0
L_0096: ldfld System.Single duration
L_009b: div
L_009c: stfld System.Single rate
L_00a1: ldarg.0
L_00a2: ldfld System.Boolean isIndirect
L_00a7: brfalse Label4
L_00ac: ldarg.0
L_00ad: call Void GenerateIndirectMissilePath()
L_00b2: br Label5
L_00b7: Label4
L_00b7: ldarg.0
L_00b8: call Void GenerateMissilePath()
L_00bd: Label5
L_00bd: ldarg.0
L_00be: call Void PlayProjectile()
L_00c3: ldarg.0
L_00c4: ldarg.0
L_00c5: ldfld UnityEngine.Vector3 preFireEndPos
L_00ca: stfld UnityEngine.Vector3 startPos
L_00cf: ldarg.0
L_00d0: ldfld System.Boolean isSRM
L_00d5: brfalse Label6
L_00da: ldc.i4 380
L_00df: ldarg.0
L_00e0: ldfld AkGameObj projectileAudioObject
L_00e5: ldnull
L_00e6: ldnull
L_00e7: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_00ec: pop
L_00ed: ldarg.0
L_00ee: ldfld System.Int32 hitIndex
L_00f3: ldarg.0
L_00f4: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f9: ldfld System.Int32 numberOfShots
L_00fe: blt Label7
L_0103: ldc.i4 379
L_0108: ldarg.0
L_0109: ldfld AkGameObj parentAudioObject
L_010e: ldnull
L_010f: ldnull
L_0110: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0115: pop
L_0116: br Label9
L_011b: Label7
L_011b: ldc.i4 378
L_0120: ldarg.0
L_0121: ldfld AkGameObj parentAudioObject
L_0126: ldnull
L_0127: ldnull
L_0128: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_012d: pop
L_012e: br Label10
L_0133: Label6
L_0133: ldc.i4 365
L_0138: ldarg.0
L_0139: ldfld AkGameObj projectileAudioObject
L_013e: ldnull
L_013f: ldnull
L_0140: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0145: pop
L_0146: ldarg.0
L_0147: ldfld System.Int32 hitIndex
L_014c: ldarg.0
L_014d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0152: ldfld System.Int32 numberOfShots
L_0157: blt Label8
L_015c: ldc.i4 364
L_0161: ldarg.0
L_0162: ldfld AkGameObj parentAudioObject
L_0167: ldnull
L_0168: ldnull
L_0169: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_016e: pop
L_016f: br Label11
L_0174: Label8
L_0174: ldc.i4 363
L_0179: ldarg.0
L_017a: ldfld AkGameObj parentAudioObject
L_017f: ldnull
L_0180: ldnull
L_0181: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_0186: pop
L_0187: Label9
L_0187: Label10
L_0187: Label11
L_0187: Label0
L_0187: ret
DONE

### Patch MissileEffect, Void SpawnImpactExplosion(System.String)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: UnityEngine.ParticleSystem
L_0000: Local var 2: BattleTech.Rendering.BTLight
L_0000: Local var 3: BattleTech.Rendering.BTWindZone
L_0000: Local var 4: AutoPoolObject
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(MissileEffect, System.String)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.Weapon weapon
L_0017: ldfld BattleTech.AbstractActor parent
L_001c: callvirt BattleTech.CombatGameState get_Combat()
L_0021: callvirt BattleTech.Data.DataManager get_DataManager()
L_0026: ldarg.1
L_0027: ldc.i4.s 45
L_0029: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_002b: initobj System.Nullable`1[UnityEngine.Vector3]
L_0031: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0033: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0035: initobj System.Nullable`1[UnityEngine.Quaternion]
L_003b: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_003d: ldnull
L_003e: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0043: stloc.0
L_0044: ldloc.0
L_0045: ldnull
L_0046: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004b: brfalse Label1
L_0050: ldsfld HBS.Logging.ILog logger
L_0055: ldstr "Missile impact had an invalid explosion prefab : "
L_005a: ldarg.1
L_005b: call System.String Concat(System.String, System.String)
L_0060: callvirt Void LogError(System.Object)
L_0065: br Label7
L_006a: Label1
L_006a: ldloc.0
L_006b: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_0070: stloc.1
L_0071: ldloc.0
L_0072: ldc.i4.1
L_0073: callvirt BattleTech.Rendering.BTLight GetComponentInChildren[BTLight](Boolean)
L_0078: stloc.2
L_0079: ldloc.0
L_007a: ldc.i4.1
L_007b: callvirt BattleTech.Rendering.BTWindZone GetComponentInChildren[BTWindZone](Boolean)
L_0080: stloc.3
L_0081: ldloc.1
L_0082: ldc.i4.1
L_0083: callvirt Void Stop(Boolean)
L_0088: ldloc.1
L_0089: ldc.i4.1
L_008a: callvirt Void Clear(Boolean)
L_008f: ldloc.1
L_0090: callvirt UnityEngine.Transform get_transform()
L_0095: ldarg.0
L_0096: ldfld UnityEngine.Vector3 endPos
L_009b: callvirt Void set_position(UnityEngine.Vector3)
L_00a0: ldloc.1
L_00a1: callvirt UnityEngine.Transform get_transform()
L_00a6: ldarg.0
L_00a7: ldfld UnityEngine.Vector3 preFireEndPos
L_00ac: callvirt Void LookAt(UnityEngine.Vector3)
L_00b1: ldloc.1
L_00b2: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_00b7: ldloc.1
L_00b8: ldc.i4.1
L_00b9: callvirt Void Play(Boolean)
L_00be: ldloc.2
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label2
L_00ca: ldloc.2
L_00cb: ldc.i4.1
L_00cc: stfld System.Boolean contributeVolumetrics
L_00d1: ldloc.2
L_00d2: ldc.r4 1000
L_00d7: stfld System.Single volumetricsMultiplier
L_00dc: ldloc.2
L_00dd: ldarg.0
L_00de: ldfld System.Single impactLightIntensity
L_00e3: stfld System.Single intensity
L_00e8: ldloc.2
L_00e9: ldc.r4 0
L_00ee: ldc.r4 0.5
L_00f3: callvirt Void FadeIntensity(Single, Single)
L_00f8: ldloc.2
L_00f9: ldc.i4.1
L_00fa: callvirt Void RefreshLightSettings(Boolean)
L_00ff: Label2
L_00ff: ldloc.3
L_0100: ldnull
L_0101: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0106: brfalse Label3
L_010b: ldloc.3
L_010c: callvirt Void PlayAnimCurve()
L_0111: Label3
L_0111: ldloc.0
L_0112: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_0117: stloc.s 4 (AutoPoolObject)
L_0119: ldloc.s 4 (AutoPoolObject)
L_011b: ldnull
L_011c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0121: brfalse Label4
L_0126: ldloc.0
L_0127: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_012c: stloc.s 4 (AutoPoolObject)
L_012e: Label4
L_012e: ldloc.s 4 (AutoPoolObject)
L_0130: ldarg.0
L_0131: ldfld BattleTech.Weapon weapon
L_0136: ldfld BattleTech.AbstractActor parent
L_013b: callvirt BattleTech.CombatGameState get_Combat()
L_0140: callvirt BattleTech.Data.DataManager get_DataManager()
L_0145: ldarg.1
L_0146: ldloc.1
L_0147: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_014c: ldloc.0
L_014d: callvirt UnityEngine.Transform get_transform()
L_0152: call UnityEngine.Quaternion get_rotationUniform()
L_0157: callvirt Void set_rotation(UnityEngine.Quaternion)
L_015c: ldarg.0
L_015d: ldfld System.Boolean isSRM
L_0162: brfalse Label5
L_0167: ldc.i4 322
L_016c: ldarg.0
L_016d: ldfld AkGameObj projectileAudioObject
L_0172: ldnull
L_0173: ldnull
L_0174: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0179: pop
L_017a: br Label6
L_017f: Label5
L_017f: ldc.i4 323
L_0184: ldarg.0
L_0185: ldfld AkGameObj projectileAudioObject
L_018a: ldnull
L_018b: ldnull
L_018c: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0191: pop
L_0192: Label6
L_0192: ldarg.0
L_0193: callvirt Void DestroyFlimsyObjects()
L_0198: Label7
L_0198: Label0
L_0198: ret
DONE

### Patch MissileEffect, Void GenerateMissilePath()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Single
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: UnityEngine.Vector3[]
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld MissileLauncherEffect parentLauncher
L_0011: ldfld System.Single missileCurveStrength
L_0016: stloc.0
L_0017: ldc.i4.2
L_0018: ldarg.0
L_0019: ldfld MissileLauncherEffect parentLauncher
L_001e: ldfld System.Int32 missileCurveFrequency
L_0023: call Int32 Range(Int32, Int32)
L_0028: stloc.1
L_0029: ldloc.0
L_002a: ldarg.0
L_002b: ldfld System.Single ArcMinForce
L_0030: blt Label1
L_0035: ldarg.0
L_0036: ldfld MissileLauncherEffect parentLauncher
L_003b: ldfld System.Int32 missileCurveFrequency
L_0040: ldc.i4.1
L_0041: bge Label2
L_0046: Label1
L_0046: ldc.r4 0
L_004b: stloc.0
L_004c: ldc.i4.2
L_004d: stloc.1
L_004e: Label2
L_004e: ldarg.0
L_004f: ldfld System.Boolean isSRM
L_0054: brfalse Label3
L_0059: ldarg.0
L_005a: ldflda BattleTech.WeaponHitInfo hitInfo
L_005f: ldarg.0
L_0060: ldfld System.Int32 hitIndex
L_0065: call Boolean DidShotHitChosenTarget(Int32)
L_006a: brtrue Label4
L_006f: ldloc.0
L_0070: ldc.r4 5
L_0075: ldc.r4 12
L_007a: call Single Range(Single, Single)
L_007f: add
L_0080: stloc.0
L_0081: ldloc.1
L_0082: ldc.i4.3
L_0083: ldc.i4.s 9
L_0085: call Int32 Range(Int32, Int32)
L_008a: add
L_008b: stloc.1
L_008c: Label3
L_008c: Label4
L_008c: ldc.r4 1
L_0091: ldloc.1
L_0092: conv.r4
L_0093: div
L_0094: stloc.2
L_0095: ldarg.0
L_0096: ldfld UnityEngine.Vector3 startPos
L_009b: pop
L_009c: call UnityEngine.Vector3 get_up()
L_00a1: stloc.3
L_00a2: ldarg.0
L_00a3: ldfld UnityEngine.Vector3 endPos
L_00a8: ldarg.0
L_00a9: ldfld UnityEngine.Vector3 startPos
L_00ae: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_00b3: stloc.s 4 (UnityEngine.Vector3)
L_00b5: ldloc.1
L_00b6: ldc.i4.1
L_00b7: add
L_00b8: newarr UnityEngine.Vector3
L_00bd: stloc.s 5 (UnityEngine.Vector3[])
L_00bf: ldloc.s 5 (UnityEngine.Vector3[])
L_00c1: ldc.i4.0
L_00c2: ldarg.0
L_00c3: ldfld UnityEngine.Vector3 startPos
L_00c8: stelem UnityEngine.Vector3
L_00cd: ldarg.0
L_00ce: ldfld System.Boolean isSRM
L_00d3: brtrue Label5
L_00d8: ldc.r4 25
L_00dd: br Label6
L_00e2: Label5
L_00e2: ldc.r4 0
L_00e7: Label6
L_00e7: stloc.s 6 (System.Single)
L_00e9: ldc.i4.1
L_00ea: stloc.s 7 (System.Int32)
L_00ec: br Label7
L_00f1: Label10
L_00f1: ldarg.0
L_00f2: ldfld UnityEngine.Vector3 startPos
L_00f7: ldarg.0
L_00f8: ldfld UnityEngine.Vector3 endPos
L_00fd: ldloc.2
L_00fe: ldloc.s 7 (System.Int32)
L_0100: conv.r4
L_0101: mul
L_0102: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_0107: ldloc.0
L_0108: neg
L_0109: ldloc.0
L_010a: call Single Range(Single, Single)
L_010f: stloc.s 8 (System.Single)
L_0111: call UnityEngine.Vector3 get_up()
L_0116: ldloc.s 8 (System.Single)
L_0118: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_011d: stloc.3
L_011e: ldc.i4.0
L_011f: ldc.i4 360
L_0124: call Int32 Range(Int32, Int32)
L_0129: conv.r4
L_012a: ldloc.s 4 (UnityEngine.Vector3)
L_012c: call UnityEngine.Quaternion AngleAxis(Single, UnityEngine.Vector3)
L_0131: ldloc.3
L_0132: call UnityEngine.Vector3 op_Multiply(UnityEngine.Quaternion, UnityEngine.Vector3)
L_0137: stloc.3
L_0138: ldloc.3
L_0139: ldfld System.Single y
L_013e: ldc.r4 0
L_0143: bge.un Label8
L_0148: ldloca.s 3 (UnityEngine.Vector3)
L_014a: ldc.r4 0
L_014f: stfld System.Single y
L_0154: Label8
L_0154: ldloc.3
L_0155: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_015a: stloc.s 9 (UnityEngine.Vector3)
L_015c: ldarg.0
L_015d: ldfld BattleTech.CombatGameState Combat
L_0162: callvirt BattleTech.MapMetaData get_MapMetaData()
L_0167: ldloc.s 9 (UnityEngine.Vector3)
L_0169: ldc.i4.0
L_016a: callvirt Single GetLerpedHeightAt(UnityEngine.Vector3, Boolean)
L_016f: stloc.s 10 (System.Single)
L_0171: ldloc.s 9 (UnityEngine.Vector3)
L_0173: ldfld System.Single y
L_0178: ldloc.s 10 (System.Single)
L_017a: bge.un Label9
L_017f: ldloca.s 9 (UnityEngine.Vector3)
L_0181: ldloc.s 10 (System.Single)
L_0183: ldloc.s 6 (System.Single)
L_0185: add
L_0186: stfld System.Single y
L_018b: Label9
L_018b: ldloc.s 5 (UnityEngine.Vector3[])
L_018d: ldloc.s 7 (System.Int32)
L_018f: ldloc.s 9 (UnityEngine.Vector3)
L_0191: stelem UnityEngine.Vector3
L_0196: ldloc.s 7 (System.Int32)
L_0198: ldc.i4.1
L_0199: add
L_019a: stloc.s 7 (System.Int32)
L_019c: Label7
L_019c: ldloc.s 7 (System.Int32)
L_019e: ldloc.1
L_019f: blt Label10
L_01a4: ldloc.s 5 (UnityEngine.Vector3[])
L_01a6: ldloc.1
L_01a7: ldarg.0
L_01a8: ldfld UnityEngine.Vector3 endPos
L_01ad: stelem UnityEngine.Vector3
L_01b2: ldarg.0
L_01b3: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01b8: ldc.i4.3
L_01b9: callvirt Void set_Interpolation(FluffyUnderware.Curvy.CurvyInterpolation)
L_01be: ldarg.0
L_01bf: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01c4: callvirt Void Clear()
L_01c9: ldarg.0
L_01ca: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01cf: ldc.i4.0
L_01d0: callvirt Void set_Closed(Boolean)
L_01d5: ldarg.0
L_01d6: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_01db: ldloc.s 5 (UnityEngine.Vector3[])
L_01dd: callvirt FluffyUnderware.Curvy.CurvySplineSegment[] Add(UnityEngine.Vector3[])
L_01e2: pop
L_01e3: Label0
L_01e3: ret
DONE

### Patch MissileEffect, Void GenerateIndirectMissilePath()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: UnityEngine.Vector3[]
L_0000: Local var 3: UnityEngine.Vector3
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: UnityEngine.Vector3
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Int32
L_0000: Local var 11: UnityEngine.Vector3
L_0000: Local var 12: System.Single
L_0000: ldarg.0
L_0001: call Boolean Prefix(MissileEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld MissileLauncherEffect parentLauncher
L_0011: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_0016: callvirt Int32 get_Count()
L_001b: brtrue Label1
L_0020: ldarg.0
L_0021: ldfld MissileLauncherEffect parentLauncher
L_0026: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_002b: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0030: ldfld System.Int32 IndirectFireMaxPoints
L_0035: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_003a: ldfld System.Single IndirectFireMinArcHeight
L_003f: ldarg.0
L_0040: ldfld UnityEngine.Vector3 startPos
L_0045: ldarg.0
L_0046: ldfld UnityEngine.Vector3 endPos
L_004b: call BattleTech.GameInstance get_BattleTechGame()
L_0050: callvirt BattleTech.CombatGameState get_Combat()
L_0055: callvirt BattleTech.MapMetaData get_MapMetaData()
L_005a: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_005f: ldfld System.Single IndirectFireBuffer
L_0064: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0069: ldfld System.Single IndirectFireMaxArcHeight
L_006e: call BattleTech.UI.WeaponRangeIndicators get_Instance()
L_0073: ldfld System.Int32 IndirectFireCheckFreq
L_0078: ldc.i4.0
L_0079: call UnityEngine.Vector3[] GetPointsForArcDodgeBuildings(Int32, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.MapMetaData, Single, Single, Int32, Boolean)
L_007e: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[UnityEngine.Vector3])
L_0083: Label1
L_0083: ldarg.0
L_0084: ldfld MissileLauncherEffect parentLauncher
L_0089: ldfld System.Single missileCurveStrength
L_008e: stloc.0
L_008f: ldc.i4.2
L_0090: ldarg.0
L_0091: ldfld MissileLauncherEffect parentLauncher
L_0096: ldfld System.Int32 missileCurveFrequency
L_009b: call Int32 Range(Int32, Int32)
L_00a0: ldarg.0
L_00a1: ldfld System.Int32 IndirectArcMinPoints
L_00a6: call Int32 Max(Int32, Int32)
L_00ab: stloc.1
L_00ac: ldloc.0
L_00ad: ldarg.0
L_00ae: ldfld System.Single ArcMinForce
L_00b3: bge.un Label2
L_00b8: ldc.r4 0
L_00bd: stloc.0
L_00be: Label2
L_00be: ldloc.1
L_00bf: newarr UnityEngine.Vector3
L_00c4: stloc.2
L_00c5: ldloc.2
L_00c6: ldc.i4.0
L_00c7: ldarg.0
L_00c8: ldfld UnityEngine.Vector3 startPos
L_00cd: stelem UnityEngine.Vector3
L_00d2: call UnityEngine.Vector3 get_up()
L_00d7: stloc.3
L_00d8: ldarg.0
L_00d9: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00de: ldc.i4.3
L_00df: callvirt Void set_Interpolation(FluffyUnderware.Curvy.CurvyInterpolation)
L_00e4: ldarg.0
L_00e5: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00ea: callvirt Void Clear()
L_00ef: ldarg.0
L_00f0: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00f5: ldc.i4.0
L_00f6: callvirt Void set_Closed(Boolean)
L_00fb: ldarg.0
L_00fc: ldfld UnityEngine.Vector3 endPos
L_0101: ldarg.0
L_0102: ldfld UnityEngine.Vector3 startPos
L_0107: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_010c: stloc.s 4 (UnityEngine.Vector3)
L_010e: ldarg.0
L_010f: ldfld UnityEngine.Vector3 startPos
L_0114: ldarg.0
L_0115: ldfld MissileLauncherEffect parentLauncher
L_011a: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_011f: ldc.i4.0
L_0120: callvirt UnityEngine.Vector3 get_Item(Int32)
L_0125: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_012a: stloc.s 5 (UnityEngine.Vector3)
L_012c: ldarg.0
L_012d: ldfld UnityEngine.Vector3 endPos
L_0132: ldarg.0
L_0133: ldfld MissileLauncherEffect parentLauncher
L_0138: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_013d: ldarg.0
L_013e: ldfld MissileLauncherEffect parentLauncher
L_0143: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_0148: callvirt Int32 get_Count()
L_014d: ldc.i4.1
L_014e: sub
L_014f: callvirt UnityEngine.Vector3 get_Item(Int32)
L_0154: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0159: stloc.s 6 (UnityEngine.Vector3)
L_015b: ldc.i4.1
L_015c: stloc.s 7 (System.Int32)
L_015e: br Label3
L_0163: Label6
L_0163: ldloc.s 7 (System.Int32)
L_0165: conv.r4
L_0166: ldloc.1
L_0167: ldc.i4.1
L_0168: sub
L_0169: conv.r4
L_016a: div
L_016b: stloc.s 8 (System.Single)
L_016d: ldloc.s 8 (System.Single)
L_016f: ldarg.0
L_0170: ldfld MissileLauncherEffect parentLauncher
L_0175: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_017a: callvirt Int32 get_Count()
L_017f: conv.r4
L_0180: mul
L_0181: call Int32 FloorToInt(Single)
L_0186: stloc.s 9 (System.Int32)
L_0188: ldloc.s 9 (System.Int32)
L_018a: ldc.i4.1
L_018b: add
L_018c: stloc.s 10 (System.Int32)
L_018e: ldloc.s 10 (System.Int32)
L_0190: ldarg.0
L_0191: ldfld MissileLauncherEffect parentLauncher
L_0196: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_019b: callvirt Int32 get_Count()
L_01a0: blt Label4
L_01a5: ldarg.0
L_01a6: ldfld MissileLauncherEffect parentLauncher
L_01ab: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01b0: ldloc.s 9 (System.Int32)
L_01b2: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01b7: stloc.s 11 (UnityEngine.Vector3)
L_01b9: br Label5
L_01be: Label4
L_01be: ldarg.0
L_01bf: ldfld MissileLauncherEffect parentLauncher
L_01c4: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01c9: ldloc.s 9 (System.Int32)
L_01cb: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01d0: ldarg.0
L_01d1: ldfld MissileLauncherEffect parentLauncher
L_01d6: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01db: ldloc.s 10 (System.Int32)
L_01dd: callvirt UnityEngine.Vector3 get_Item(Int32)
L_01e2: ldloc.s 8 (System.Single)
L_01e4: ldarg.0
L_01e5: ldfld MissileLauncherEffect parentLauncher
L_01ea: ldfld System.Collections.Generic.List`1[UnityEngine.Vector3] cachedIndirectFireArc
L_01ef: callvirt Int32 get_Count()
L_01f4: conv.r4
L_01f5: mul
L_01f6: ldc.r4 1
L_01fb: rem
L_01fc: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_0201: stloc.s 11 (UnityEngine.Vector3)
L_0203: Label5
L_0203: ldloc.s 11 (UnityEngine.Vector3)
L_0205: ldloc.s 5 (UnityEngine.Vector3)
L_0207: ldc.r4 1
L_020c: ldloc.s 8 (System.Single)
L_020e: sub
L_020f: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0214: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0219: stloc.s 11 (UnityEngine.Vector3)
L_021b: ldloc.s 11 (UnityEngine.Vector3)
L_021d: ldloc.s 6 (UnityEngine.Vector3)
L_021f: ldloc.s 8 (System.Single)
L_0221: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0226: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_022b: stloc.s 11 (UnityEngine.Vector3)
L_022d: ldloc.0
L_022e: neg
L_022f: ldloc.0
L_0230: call Single Range(Single, Single)
L_0235: stloc.s 12 (System.Single)
L_0237: call UnityEngine.Vector3 get_up()
L_023c: ldloc.s 12 (System.Single)
L_023e: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0243: stloc.3
L_0244: ldc.i4.0
L_0245: ldc.i4 360
L_024a: call Int32 Range(Int32, Int32)
L_024f: conv.r4
L_0250: ldloc.s 4 (UnityEngine.Vector3)
L_0252: call UnityEngine.Quaternion AngleAxis(Single, UnityEngine.Vector3)
L_0257: ldloc.3
L_0258: call UnityEngine.Vector3 op_Multiply(UnityEngine.Quaternion, UnityEngine.Vector3)
L_025d: stloc.3
L_025e: ldloc.s 11 (UnityEngine.Vector3)
L_0260: ldloc.3
L_0261: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0266: stloc.s 11 (UnityEngine.Vector3)
L_0268: ldloc.2
L_0269: ldloc.s 7 (System.Int32)
L_026b: ldloc.s 11 (UnityEngine.Vector3)
L_026d: stelem UnityEngine.Vector3
L_0272: ldloc.s 7 (System.Int32)
L_0274: ldc.i4.1
L_0275: add
L_0276: stloc.s 7 (System.Int32)
L_0278: Label3
L_0278: ldloc.s 7 (System.Int32)
L_027a: ldloc.1
L_027b: ldc.i4.1
L_027c: sub
L_027d: blt Label6
L_0282: ldloc.2
L_0283: ldloc.1
L_0284: ldc.i4.1
L_0285: sub
L_0286: ldarg.0
L_0287: ldfld UnityEngine.Vector3 endPos
L_028c: stelem UnityEngine.Vector3
L_0291: ldarg.0
L_0292: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0297: ldloc.2
L_0298: callvirt FluffyUnderware.Curvy.CurvySplineSegment[] Add(UnityEngine.Vector3[])
L_029d: pop
L_029e: Label0
L_029e: ret
DONE

### Patch MissileEffect, Void Update()
L_0000: Local var 0: System.Single
L_0000: Local var 1: UnityEngine.Quaternion
L_0000: ldarg.0
L_0001: call Void Update()
L_0006: ldarg.0
L_0007: ldfld WeaponEffect+WeaponEffectState currentState
L_000c: ldc.i4.1
L_000d: bne.un Label1
L_0012: ldarg.0
L_0013: ldfld System.Single t
L_0018: ldc.r4 1
L_001d: bge.un Label2
L_0022: ldarg.0
L_0023: ldarg.0
L_0024: ldfld UnityEngine.Vector3 startPos
L_0029: ldarg.0
L_002a: ldfld UnityEngine.Vector3 preFireEndPos
L_002f: ldarg.0
L_0030: ldfld System.Single t
L_0035: call UnityEngine.Vector3 Lerp(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_003a: stfld UnityEngine.Vector3 currentPos
L_003f: ldarg.0
L_0040: ldfld UnityEngine.Transform projectileTransform
L_0045: ldarg.0
L_0046: ldfld UnityEngine.Vector3 currentPos
L_004b: callvirt Void set_position(UnityEngine.Vector3)
L_0050: ldarg.0
L_0051: ldfld UnityEngine.Vector3 currentPos
L_0056: ldarg.0
L_0057: ldfld UnityEngine.Vector3 preFireEndPos
L_005c: call Boolean op_Inequality(UnityEngine.Vector3, UnityEngine.Vector3)
L_0061: brfalse Label3
L_0066: ldarg.0
L_0067: ldfld UnityEngine.Transform projectileTransform
L_006c: ldarg.0
L_006d: ldfld UnityEngine.Vector3 preFireEndPos
L_0072: callvirt Void LookAt(UnityEngine.Vector3)
L_0077: Label1
L_0077: Label2
L_0077: Label3
L_0077: ldarg.0
L_0078: ldfld WeaponEffect+WeaponEffectState currentState
L_007d: ldc.i4.2
L_007e: bne.un Label4
L_0083: ldarg.0
L_0084: ldfld System.Single t
L_0089: ldc.r4 1
L_008e: bge.un Label5
L_0093: ldarg.0
L_0094: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_0099: callvirt Int32 get_Count()
L_009e: ldc.i4.0
L_009f: ble Label6
L_00a4: ldarg.0
L_00a5: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00aa: callvirt Single get_Length()
L_00af: ldarg.0
L_00b0: ldfld System.Single t
L_00b5: mul
L_00b6: stloc.0
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00be: ldloc.0
L_00bf: callvirt UnityEngine.Vector3 InterpolateByDistance(Single)
L_00c4: stfld UnityEngine.Vector3 currentPos
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.Transform projectileTransform
L_00cf: ldarg.0
L_00d0: ldfld UnityEngine.Vector3 currentPos
L_00d5: callvirt Void set_position(UnityEngine.Vector3)
L_00da: ldarg.0
L_00db: ldfld FluffyUnderware.Curvy.CurvySpline spline
L_00e0: ldarg.0
L_00e1: ldfld System.Single t
L_00e6: ldc.i4.0
L_00e7: callvirt UnityEngine.Quaternion GetOrientationFast(Single, Boolean)
L_00ec: stloc.1
L_00ed: ldarg.0
L_00ee: ldfld UnityEngine.Transform projectileTransform
L_00f3: ldloc.1
L_00f4: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00f9: Label5
L_00f9: Label6
L_00f9: ldarg.0
L_00fa: ldfld System.Single t
L_00ff: ldc.r4 1
L_0104: blt.un Label7
L_0109: ldarg.0
L_010a: callvirt Void PlayImpact()
L_010f: ldarg.0
L_0110: callvirt Void OnComplete()
L_0115: Label4
L_0115: Label7
L_0115: ldarg.0
L_0116: call Void Postfix(MissileEffect)
L_011b: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateToHitInfo()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 6: System.Int32[]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0006: callvirt Int32 get_Count()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldloc.0
L_000e: newarr System.Nullable`1[BattleTech.WeaponHitInfo][]
L_0013: stfld System.Nullable`1[BattleTech.WeaponHitInfo][][] weaponHitInfo
L_0018: ldc.r4 0
L_001d: stloc.1
L_001e: ldc.i4.0
L_001f: stloc.2
L_0020: br Label1
L_0025: Label6
L_0025: ldarg.0
L_0026: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_002b: ldloc.2
L_002c: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0031: stloc.3
L_0032: ldloc.3
L_0033: callvirt Int32 get_Count()
L_0038: stloc.s 4 (System.Int32)
L_003a: ldloc.s 4 (System.Int32)
L_003c: newarr System.Nullable`1[BattleTech.WeaponHitInfo]
L_0041: stloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_0043: ldarg.0
L_0044: ldfld System.Int32[][] numberOfShots
L_0049: ldloc.2
L_004a: ldelem.ref
L_004b: stloc.s 6 (System.Int32[])
L_004d: ldc.i4.0
L_004e: stloc.s 7 (System.Int32)
L_0050: br Label2
L_0055: Label5
L_0055: ldloc.3
L_0056: ldloc.s 7 (System.Int32)
L_0058: callvirt BattleTech.Weapon get_Item(Int32)
L_005d: stloc.s 8 (BattleTech.Weapon)
L_005f: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_0061: ldloc.s 7 (System.Int32)
L_0063: ldelema System.Nullable`1[BattleTech.WeaponHitInfo]
L_0068: initobj System.Nullable`1[BattleTech.WeaponHitInfo]
L_006e: ldloc.s 6 (System.Int32[])
L_0070: ldloc.s 7 (System.Int32)
L_0072: ldelem.i4
L_0073: stloc.s 9 (System.Int32)
L_0075: ldloc.s 9 (System.Int32)
L_0077: ldc.i4.m1
L_0078: beq Label3
L_007d: ldloc.s 9 (System.Int32)
L_007f: brfalse Label4
L_0084: ldarg.0
L_0085: ldloc.s 8 (BattleTech.Weapon)
L_0087: ldloc.2
L_0088: ldloc.s 7 (System.Int32)
L_008a: ldloc.s 9 (System.Int32)
L_008c: ldarg.0
L_008d: ldfld System.Boolean indirectFire
L_0092: ldloc.1
L_0093: call BattleTech.WeaponHitInfo GenerateHitInfo(BattleTech.Weapon, Int32, Int32, Int32, Boolean, Single)
L_0098: stloc.s 10 (BattleTech.WeaponHitInfo)
L_009a: ldarg.0
L_009b: ldloc.s 10 (BattleTech.WeaponHitInfo)
L_009d: call Void AddAllAffectedTargets(BattleTech.WeaponHitInfo)
L_00a2: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_00a4: ldloc.s 7 (System.Int32)
L_00a6: ldloc.s 10 (BattleTech.WeaponHitInfo)
L_00a8: newobj Void .ctor(WeaponHitInfo)
L_00ad: stelem System.Nullable`1[BattleTech.WeaponHitInfo]
L_00b2: Label3
L_00b2: Label4
L_00b2: ldloc.s 7 (System.Int32)
L_00b4: ldc.i4.1
L_00b5: add
L_00b6: stloc.s 7 (System.Int32)
L_00b8: Label2
L_00b8: ldloc.s 7 (System.Int32)
L_00ba: ldloc.s 4 (System.Int32)
L_00bc: blt Label5
L_00c1: ldarg.0
L_00c2: ldfld System.Nullable`1[BattleTech.WeaponHitInfo][][] weaponHitInfo
L_00c7: ldloc.2
L_00c8: ldloc.s 5 (System.Nullable`1[BattleTech.WeaponHitInfo][])
L_00ca: stelem.ref
L_00cb: ldloc.2
L_00cc: ldc.i4.1
L_00cd: add
L_00ce: stloc.2
L_00cf: Label1
L_00cf: ldloc.2
L_00d0: ldloc.0
L_00d1: blt Label6
L_00d6: ldarg.0
L_00d7: call Void Postfix(AttackSequence)
L_00dc: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage)
L_000c: brfalse Label0
L_0011: ldarg.1
L_0012: castclass BattleTech.AttackCompleteMessage
L_0017: stloc.0
L_0018: ldloc.0
L_0019: ldfld System.Int32 sequenceId
L_001e: stloc.1
L_001f: ldarg.0
L_0020: ldloc.1
L_0021: call AttackSequence GetAttackSequence(Int32)
L_0026: stloc.2
L_0027: ldloc.2
L_0028: brtrue Label1
L_002d: ldsfld HBS.Logging.ILog logger
L_0032: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_0037: ldloc.1
L_0038: box System.Int32
L_003d: call System.String Format(System.String, System.Object)
L_0042: callvirt Void LogError(System.Object)
L_0047: ldstr "OnAttackComplete received invalid sequenceID: "
L_004c: ldloc.1
L_004d: box System.Int32
L_0052: call System.String Concat(System.Object, System.Object)
L_0057: newobj Void .ctor(String)
L_005c: throw
L_005d: Label1
L_005d: ldsfld HBS.Logging.ILog logger
L_0062: callvirt Boolean get_IsLogEnabled()
L_0067: brfalse Label2
L_006c: ldsfld HBS.Logging.ILog logger
L_0071: ldstr "[OnAttackComplete] ID {0}"
L_0076: ldloc.1
L_0077: box System.Int32
L_007c: call System.String Format(System.String, System.Object)
L_0081: callvirt Void Log(System.Object)
L_0086: Label2
L_0086: ldloc.2
L_0087: ldfld BattleTech.AbstractActor attacker
L_008c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0091: ldnull
L_0092: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0097: brfalse Label3
L_009c: ldloc.2
L_009d: ldfld BattleTech.AbstractActor attacker
L_00a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_00a7: ldc.i4.0
L_00a8: ldc.r4 0.5
L_00ad: ldloc.0
L_00ae: ldfld System.Int32 stackItemUID
L_00b3: ldloc.0
L_00b4: ldfld System.Int32 sequenceId
L_00b9: ldnull
L_00ba: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00bf: ldloc.2
L_00c0: ldfld BattleTech.AbstractActor attacker
L_00c5: callvirt BattleTech.GameRepresentation get_GameRep()
L_00ca: ldc.i4.0
L_00cb: callvirt Void SetVFXColliderEnabled(Boolean)
L_00d0: ldloc.2
L_00d1: ldfld BattleTech.AbstractActor attacker
L_00d6: callvirt BattleTech.GameRepresentation get_GameRep()
L_00db: isinst BattleTech.MechRepresentation
L_00e0: stloc.3
L_00e1: ldloc.3
L_00e2: ldnull
L_00e3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00e8: brfalse Label4
L_00ed: ldloc.3
L_00ee: ldc.i4.1
L_00ef: callvirt Void ToggleRandomIdles(Boolean)
L_00f4: Label4
L_00f4: ldloc.2
L_00f5: ldfld BattleTech.AbstractActor attacker
L_00fa: callvirt BattleTech.Team get_team()
L_00ff: callvirt System.String get_GUID()
L_0104: ldarg.0
L_0105: call BattleTech.CombatGameState get_Combat()
L_010a: callvirt System.String get_LocalPlayerTeamGuid()
L_010f: call Boolean op_Equality(System.String, System.String)
L_0114: brfalse Label5
L_0119: ldloc.2
L_011a: ldfld BattleTech.AbstractActor attacker
L_011f: callvirt BattleTech.Team get_team()
L_0124: ldloc.2
L_0125: ldfld BattleTech.ICombatant chosenTarget
L_012a: callvirt BattleTech.Team get_team()
L_012f: ldloc.2
L_0130: ldfld System.Single previousTeamHealthDifference
L_0135: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_013a: Label3
L_013a: Label5
L_013a: ldloc.2
L_013b: ldfld BattleTech.ICombatant chosenTarget
L_0140: callvirt BattleTech.GameRepresentation get_GameRep()
L_0145: ldnull
L_0146: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_014b: brfalse Label6
L_0150: ldloc.2
L_0151: ldfld BattleTech.ICombatant chosenTarget
L_0156: callvirt BattleTech.GameRepresentation get_GameRep()
L_015b: isinst BattleTech.MechRepresentation
L_0160: stloc.s 4 (BattleTech.MechRepresentation)
L_0162: ldloc.s 4 (BattleTech.MechRepresentation)
L_0164: ldnull
L_0165: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_016a: brfalse Label7
L_016f: ldloc.s 4 (BattleTech.MechRepresentation)
L_0171: ldc.i4.1
L_0172: callvirt Void ToggleRandomIdles(Boolean)
L_0177: Label7
L_0177: ldloc.2
L_0178: ldfld BattleTech.ICombatant chosenTarget
L_017d: callvirt BattleTech.Team get_team()
L_0182: callvirt System.String get_GUID()
L_0187: ldarg.0
L_0188: call BattleTech.CombatGameState get_Combat()
L_018d: callvirt System.String get_LocalPlayerTeamGuid()
L_0192: call Boolean op_Equality(System.String, System.String)
L_0197: brfalse Label8
L_019c: ldloc.2
L_019d: ldfld BattleTech.ICombatant chosenTarget
L_01a2: callvirt BattleTech.Team get_team()
L_01a7: ldloc.2
L_01a8: ldfld BattleTech.AbstractActor attacker
L_01ad: callvirt BattleTech.Team get_team()
L_01b2: ldloc.2
L_01b3: ldfld System.Single previousTeamHealthDifference
L_01b8: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01bd: Label6
L_01bd: Label8
L_01bd: ldc.i4.0
L_01be: stloc.s 5 (System.Int32)
L_01c0: br Label9
L_01c5: Label13
L_01c5: ldarg.0
L_01c6: call BattleTech.CombatGameState get_Combat()
L_01cb: ldloc.2
L_01cc: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01d1: ldloc.s 5 (System.Int32)
L_01d3: callvirt System.String get_Item(Int32)
L_01d8: ldc.i4.0
L_01d9: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01de: stloc.s 6 (BattleTech.ICombatant)
L_01e0: ldloc.s 6 (BattleTech.ICombatant)
L_01e2: brfalse Label10
L_01e7: ldloc.s 6 (BattleTech.ICombatant)
L_01e9: callvirt BattleTech.GameRepresentation get_GameRep()
L_01ee: ldnull
L_01ef: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01f4: brtrue Label11
L_01f9: ldloc.s 6 (BattleTech.ICombatant)
L_01fb: callvirt BattleTech.GameRepresentation get_GameRep()
L_0200: isinst BattleTech.MechRepresentation
L_0205: stloc.s 7 (BattleTech.MechRepresentation)
L_0207: ldloc.s 7 (BattleTech.MechRepresentation)
L_0209: ldnull
L_020a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_020f: brfalse Label12
L_0214: ldloc.s 7 (BattleTech.MechRepresentation)
L_0216: ldc.i4.1
L_0217: callvirt Void ToggleRandomIdles(Boolean)
L_021c: Label10
L_021c: Label11
L_021c: Label12
L_021c: ldloc.s 5 (System.Int32)
L_021e: ldc.i4.1
L_021f: add
L_0220: stloc.s 5 (System.Int32)
L_0222: Label9
L_0222: ldloc.s 5 (System.Int32)
L_0224: ldloc.2
L_0225: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_022a: callvirt Int32 get_Count()
L_022f: blt Label13
L_0234: ldarg.0
L_0235: ldloc.2
L_0236: call Void RecordAttackSequenceStats(AttackSequence)
L_023b: ldarg.0
L_023c: call BattleTech.CombatGameState get_Combat()
L_0241: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0246: ldloc.2
L_0247: callvirt Void RecordAttackSequence(AttackSequence)
L_024c: ldarg.0
L_024d: ldloc.1
L_024e: call Boolean RemoveAttackSequence(Int32)
L_0253: pop
L_0254: Label0
L_0254: ldarg.0
L_0255: ldarg 1
L_025b: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_0260: ret
DONE

### Patch BattleTech.AttackDirectorHelpers.MessageCoordinator, Void Initialize(AttackSequence, System.Nullable`1[BattleTech.WeaponHitInfo][][])
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]][]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Nullable`1[[BattleTech.WeaponHitInfo, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.AttackDirector+AttackSequence attackSequence
L_0007: ldc.i4.0
L_0008: stloc.0
L_0009: br Label1
L_000e: Label8
L_000e: ldarg.2
L_000f: ldloc.0
L_0010: ldelem.ref
L_0011: stloc.1
L_0012: ldc.i4.0
L_0013: stloc.2
L_0014: br Label2
L_0019: Label7
L_0019: ldloc.1
L_001a: ldloc.2
L_001b: ldelem System.Nullable`1[BattleTech.WeaponHitInfo]
L_0020: stloc.3
L_0021: ldsfld HBS.Logging.ILog logger
L_0026: callvirt Boolean get_IsDebugEnabled()
L_002b: brfalse Label3
L_0030: ldsfld HBS.Logging.ILog logger
L_0035: ldstr "Initializing Group {0} Weapon {1}"
L_003a: ldloc.0
L_003b: box System.Int32
L_0040: ldloc.2
L_0041: box System.Int32
L_0046: call System.String Format(System.String, System.Object, System.Object)
L_004b: callvirt Void LogDebug(System.Object)
L_0050: Label3
L_0050: ldloca.s 3 (System.Nullable`1[BattleTech.WeaponHitInfo])
L_0052: call Boolean get_HasValue()
L_0057: brtrue Label4
L_005c: ldsfld HBS.Logging.ILog logger
L_0061: callvirt Boolean get_IsDebugEnabled()
L_0066: brfalse Label5
L_006b: ldsfld HBS.Logging.ILog logger
L_0070: ldstr "Group {0} Weapon {1} has no value"
L_0075: ldloc.0
L_0076: box System.Int32
L_007b: ldloc.2
L_007c: box System.Int32
L_0081: call System.String Format(System.String, System.Object, System.Object)
L_0086: callvirt Void LogDebug(System.Object)
L_008b: br Label6
L_0090: Label4
L_0090: ldarg.0
L_0091: ldloca.s 3 (System.Nullable`1[BattleTech.WeaponHitInfo])
L_0093: call BattleTech.WeaponHitInfo get_Value()
L_0098: call Void AddExpectedMessages(BattleTech.WeaponHitInfo)
L_009d: Label5
L_009d: Label6
L_009d: ldloc.2
L_009e: ldc.i4.1
L_009f: add
L_00a0: stloc.2
L_00a1: Label2
L_00a1: ldloc.2
L_00a2: ldloc.1
L_00a3: ldlen
L_00a4: conv.i4
L_00a5: blt Label7
L_00aa: ldloc.0
L_00ab: ldc.i4.1
L_00ac: add
L_00ad: stloc.0
L_00ae: Label1
L_00ae: ldloc.0
L_00af: ldarg.2
L_00b0: ldlen
L_00b1: conv.i4
L_00b2: blt Label8
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirectorHelpers.ExpectedMessage] expectedMessages
L_00be: callvirt Int32 get_Count()
L_00c3: stfld System.Int32 expectedMessageCount
L_00c8: ldarg.0
L_00c9: ldarg 2
L_00cf: call Void Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator, System.Nullable`1[BattleTech.WeaponHitInfo][][])
L_00d4: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void OnAttackSequenceImpact(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceImpactMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: UnityEngine.Vector3
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Boolean
L_0000: Local var 11: BattleTech.ICombatant
L_0000: Local var 12: BattleTech.AbstractActor
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: BattleTech.LineOfFireLevel
L_0000: Local var 16: BattleTech.VisibilityLevelAndAttribution
L_0000: Local var 17: UnityEngine.Vector3
L_0000: Local var 18: BattleTech.FloatieMessage
L_0000: Local var 19: BattleTech.FloatieMessage
L_0000: Local var 20: UnityEngine.Vector3
L_0000: Local var 21: BattleTech.FloatieMessage
L_0000: Local var 22: BattleTech.FloatieMessage
L_0000: Local var 23: BattleTech.FloatieMessage+MessageNature
L_0000: Local var 24: BattleTech.FloatieMessage
L_0000: Local var 25: BattleTech.FloatieMessage
L_0000: Local var 26: BattleTech.FloatieMessage
L_0000: Local var 27: BattleTech.FloatieMessage
L_0000: Local var 28: BattleTech.AbstractActor
L_0000: Local var 29: BattleTech.LineOfFireLevel
L_0000: Local var 30: CustomAmmoCategoriesPatches.ImpactAOEState
L_0000: ldnull
L_0001: stloc 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_0003: ldarg.0
L_0004: ldloca 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_0006: ldarga 1
L_000c: call Boolean Prefix(AttackSequence, CustomAmmoCategoriesPatches.ImpactAOEState ByRef, MessageCenterMessage ByRef)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: ldarg 1
L_001d: call Boolean Prefix(AttackSequence, MessageCenterMessage)
L_0022: brfalse Label0
L_0027: ldarg.0
L_0028: ldarga 1
L_002e: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_0033: brfalse Label0
L_0038: ldarg.0
L_0039: ldarga 1
L_003f: call Boolean Prefix(AttackSequence, MessageCenterMessage ByRef)
L_0044: brfalse Label0
L_0049: ldarg.1
L_004a: castclass BattleTech.AttackSequenceImpactMessage
L_004f: stloc.0
L_0050: ldloc.0
L_0051: ldflda BattleTech.WeaponHitInfo hitInfo
L_0056: ldfld System.Int32 attackSequenceId
L_005b: ldarg.0
L_005c: ldfld System.Int32 id
L_0061: beq Label1
L_0066: br Label33
L_006b: Label1
L_006b: ldloc.0
L_006c: ldflda BattleTech.WeaponHitInfo hitInfo
L_0071: ldfld System.Int32 attackGroupIndex
L_0076: stloc.1
L_0077: ldloc.0
L_0078: ldflda BattleTech.WeaponHitInfo hitInfo
L_007d: ldfld System.Int32 attackWeaponIndex
L_0082: stloc.2
L_0083: ldloc.0
L_0084: ldfld System.Int32 hitIndex
L_0089: stloc.3
L_008a: ldarg.0
L_008b: ldloc.1
L_008c: ldloc.2
L_008d: call BattleTech.Weapon GetWeapon(Int32, Int32)
L_0092: stloc.s 4 (BattleTech.Weapon)
L_0094: ldloc.0
L_0095: ldflda BattleTech.WeaponHitInfo hitInfo
L_009a: ldloc.3
L_009b: call Int32 ShotHitLocation(Int32)
L_00a0: stloc.s 5 (System.Int32)
L_00a2: ldloc.0
L_00a3: ldflda BattleTech.WeaponHitInfo hitInfo
L_00a8: ldfld UnityEngine.Vector3[] hitPositions
L_00ad: ldloc.3
L_00ae: ldelem UnityEngine.Vector3
L_00b3: stloc.s 6 (UnityEngine.Vector3)
L_00b5: ldloc.0
L_00b6: ldfld System.Single hitDamage
L_00bb: stloc.s 7 (System.Single)
L_00bd: ldloc.s 7 (System.Single)
L_00bf: stloc.s 8 (System.Single)
L_00c1: ldarg.0
L_00c2: call BattleTech.AttackDirector get_Director()
L_00c7: callvirt BattleTech.CombatGameState get_Combat()
L_00cc: callvirt BattleTech.ToHit get_ToHit()
L_00d1: ldloc.0
L_00d2: ldflda BattleTech.WeaponHitInfo hitInfo
L_00d7: ldfld BattleTech.AttackImpactQuality[] hitQualities
L_00dc: ldloc.3
L_00dd: ldelem.i4
L_00de: callvirt Single GetBlowQualityMultiplier(BattleTech.AttackImpactQuality)
L_00e3: stloc.s 9 (System.Single)
L_00e5: ldloc.s 7 (System.Single)
L_00e7: ldloc.s 9 (System.Single)
L_00e9: mul
L_00ea: stloc.s 8 (System.Single)
L_00ec: ldloc.0
L_00ed: ldflda BattleTech.WeaponHitInfo hitInfo
L_00f2: ldfld System.String[] secondaryTargetIds
L_00f7: ldloc.3
L_00f8: ldelem.ref
L_00f9: call Boolean IsNullOrEmpty(System.String)
L_00fe: ldc.i4.0
L_00ff: ceq
L_0101: stloc.s 10 (System.Boolean)
L_0103: ldnull
L_0104: stloc.s 11 (BattleTech.ICombatant)
L_0106: ldloc.s 10 (System.Boolean)
L_0108: brfalse Label2
L_010d: ldarg.0
L_010e: call BattleTech.AttackDirector get_Director()
L_0113: callvirt BattleTech.CombatGameState get_Combat()
L_0118: ldloc.0
L_0119: ldflda BattleTech.WeaponHitInfo hitInfo
L_011e: ldfld System.String[] secondaryTargetIds
L_0123: ldloc.3
L_0124: ldelem.ref
L_0125: ldc.i4.0
L_0126: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_012b: stloc.s 11 (BattleTech.ICombatant)
L_012d: Label2
L_012d: ldarg.0
L_012e: ldfld BattleTech.ICombatant chosenTarget
L_0133: isinst BattleTech.AbstractActor
L_0138: stloc.s 12 (BattleTech.AbstractActor)
L_013a: ldloc.s 12 (BattleTech.AbstractActor)
L_013c: brfalse Label3
L_0141: ldarg.0
L_0142: ldfld BattleTech.AbstractActor attacker
L_0147: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_014c: ldloc.s 12 (BattleTech.AbstractActor)
L_014e: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0153: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0155: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0157: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_015c: stloc.s 15 (BattleTech.LineOfFireLevel)
L_015e: ldloc.s 12 (BattleTech.AbstractActor)
L_0160: ldloc.s 8 (System.Single)
L_0162: ldloc.s 4 (BattleTech.Weapon)
L_0164: callvirt BattleTech.WeaponCategory get_Category()
L_0169: ldloc.s 12 (BattleTech.AbstractActor)
L_016b: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0170: ldloc.s 15 (BattleTech.LineOfFireLevel)
L_0172: ldc.i4.1
L_0173: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_0178: stloc.s 8 (System.Single)
L_017a: ldloc.s 12 (BattleTech.AbstractActor)
L_017c: ldloc.s 8 (System.Single)
L_017e: ldloc.s 4 (BattleTech.Weapon)
L_0180: callvirt BattleTech.WeaponCategory get_Category()
L_0185: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_018a: stloc.s 8 (System.Single)
L_018c: Label3
L_018c: ldloc.s 8 (System.Single)
L_018e: ldc.r4 0
L_0193: bgt.un Label4
L_0198: ldsfld HBS.Logging.ILog attackLogger
L_019d: ldstr "OnAttackSequenceImpact is dealing <= 0 damage: base dmg: {0}, total: {1}"
L_01a2: ldloc.s 7 (System.Single)
L_01a4: box System.Single
L_01a9: ldloc.s 8 (System.Single)
L_01ab: box System.Single
L_01b0: call System.String Format(System.String, System.Object, System.Object)
L_01b5: callvirt Void LogWarning(System.Object)
L_01ba: ldc.r4 0
L_01bf: stloc.s 8 (System.Single)
L_01c1: Label4
L_01c1: ldarg.0
L_01c2: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_01c7: ldloc.0
L_01c8: callvirt Boolean CanProcessMessage(BattleTech.AttackSequenceImpactMessage)
L_01cd: stloc.s 13 (System.Boolean)
L_01cf: ldloc.0
L_01d0: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d5: ldloc.3
L_01d6: call Boolean DidShotHitChosenTarget(Int32)
L_01db: stloc.s 14 (System.Boolean)
L_01dd: ldloc.0
L_01de: ldfld System.Boolean hasPlayedImpact
L_01e3: brtrue Label5
L_01e8: ldsfld HBS.Logging.ILog logger
L_01ed: callvirt Boolean get_IsDebugEnabled()
L_01f2: brfalse Label6
L_01f7: ldsfld HBS.Logging.ILog logger
L_01fc: ldstr "[OnAttackSequenceImpact] playing impact "visuals" for ID {0}, Group {1}, Weapon {2}, Hit {3}. Will process during this call? {4}"
L_0201: ldc.i4.5
L_0202: newarr System.Object
L_0207: dup
L_0208: ldc.i4.0
L_0209: ldarg.0
L_020a: ldfld System.Int32 id
L_020f: box System.Int32
L_0214: stelem.ref
L_0215: dup
L_0216: ldc.i4.1
L_0217: ldloc.1
L_0218: box System.Int32
L_021d: stelem.ref
L_021e: dup
L_021f: ldc.i4.2
L_0220: ldloc.2
L_0221: box System.Int32
L_0226: stelem.ref
L_0227: dup
L_0228: ldc.i4.3
L_0229: ldloc.3
L_022a: box System.Int32
L_022f: stelem.ref
L_0230: dup
L_0231: ldc.i4.4
L_0232: ldloc.s 13 (System.Boolean)
L_0234: box System.Boolean
L_0239: stelem.ref
L_023a: call System.String Format(System.String, System.Object[])
L_023f: callvirt Void LogDebug(System.Object)
L_0244: Label6
L_0244: ldloc.0
L_0245: ldc.i4.1
L_0246: stfld System.Boolean hasPlayedImpact
L_024b: ldarg.0
L_024c: ldfld BattleTech.ICombatant chosenTarget
L_0251: callvirt BattleTech.GameRepresentation get_GameRep()
L_0256: ldnull
L_0257: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_025c: brfalse Label7
L_0261: ldloc.s 14 (System.Boolean)
L_0263: brfalse Label8
L_0268: ldarg.0
L_0269: ldfld BattleTech.ICombatant chosenTarget
L_026e: callvirt BattleTech.GameRepresentation get_GameRep()
L_0273: ldloc.0
L_0274: ldfld BattleTech.WeaponHitInfo hitInfo
L_0279: ldloc.3
L_027a: ldloc.s 4 (BattleTech.Weapon)
L_027c: ldarg.0
L_027d: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0282: ldarg.0
L_0283: ldfld System.Single cumulativeDamage
L_0288: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_028d: ldloc.s 6 (UnityEngine.Vector3)
L_028f: stloc.s 17 (UnityEngine.Vector3)
L_0291: ldarg.0
L_0292: ldfld BattleTech.ICombatant chosenTarget
L_0297: ldloc.s 5 (System.Int32)
L_0299: callvirt Single ArmorForLocation(Int32)
L_029e: ldloc.s 8 (System.Single)
L_02a0: bge.un Label9
L_02a5: ldloc.0
L_02a6: ldflda BattleTech.WeaponHitInfo hitInfo
L_02ab: ldfld System.String attackerId
L_02b0: ldarg.0
L_02b1: ldfld BattleTech.ICombatant chosenTarget
L_02b6: callvirt System.String get_GUID()
L_02bb: ldstr "{0}"
L_02c0: ldc.i4.1
L_02c1: newarr System.Object
L_02c6: dup
L_02c7: ldc.i4.0
L_02c8: ldc.r4 1
L_02cd: ldloc.s 8 (System.Single)
L_02cf: call Single Max(Single, Single)
L_02d4: conv.i4
L_02d5: box System.Int32
L_02da: stelem.ref
L_02db: newobj Void .ctor(String, Object[])
L_02e0: ldarg.0
L_02e1: call BattleTech.AttackDirector get_Director()
L_02e6: callvirt BattleTech.CombatGameState get_Combat()
L_02eb: callvirt BattleTech.CombatGameConstants get_Constants()
L_02f0: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_02f5: ldfld System.Single floatieSizeMedium
L_02fa: ldc.i4.8
L_02fb: ldloc.s 17 (UnityEngine.Vector3)
L_02fd: ldfld System.Single x
L_0302: ldloc.s 17 (UnityEngine.Vector3)
L_0304: ldfld System.Single y
L_0309: ldloc.s 17 (UnityEngine.Vector3)
L_030b: ldfld System.Single z
L_0310: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0315: stloc.s 18 (BattleTech.FloatieMessage)
L_0317: ldarg.0
L_0318: call BattleTech.AttackDirector get_Director()
L_031d: callvirt BattleTech.CombatGameState get_Combat()
L_0322: callvirt MessageCenter get_MessageCenter()
L_0327: ldloc.s 18 (BattleTech.FloatieMessage)
L_0329: callvirt Void PublishMessage(MessageCenterMessage)
L_032e: br Label10
L_0333: Label9
L_0333: ldloc.0
L_0334: ldflda BattleTech.WeaponHitInfo hitInfo
L_0339: ldfld System.String attackerId
L_033e: ldarg.0
L_033f: ldfld BattleTech.ICombatant chosenTarget
L_0344: callvirt System.String get_GUID()
L_0349: ldstr "{0}"
L_034e: ldc.i4.1
L_034f: newarr System.Object
L_0354: dup
L_0355: ldc.i4.0
L_0356: ldc.r4 1
L_035b: ldloc.s 8 (System.Single)
L_035d: call Single Max(Single, Single)
L_0362: conv.i4
L_0363: box System.Int32
L_0368: stelem.ref
L_0369: newobj Void .ctor(String, Object[])
L_036e: ldarg.0
L_036f: call BattleTech.AttackDirector get_Director()
L_0374: callvirt BattleTech.CombatGameState get_Combat()
L_0379: callvirt BattleTech.CombatGameConstants get_Constants()
L_037e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0383: ldfld System.Single floatieSizeMedium
L_0388: ldc.i4.7
L_0389: ldloc.s 17 (UnityEngine.Vector3)
L_038b: ldfld System.Single x
L_0390: ldloc.s 17 (UnityEngine.Vector3)
L_0392: ldfld System.Single y
L_0397: ldloc.s 17 (UnityEngine.Vector3)
L_0399: ldfld System.Single z
L_039e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_03a3: stloc.s 19 (BattleTech.FloatieMessage)
L_03a5: ldarg.0
L_03a6: call BattleTech.AttackDirector get_Director()
L_03ab: callvirt BattleTech.CombatGameState get_Combat()
L_03b0: callvirt MessageCenter get_MessageCenter()
L_03b5: ldloc.s 19 (BattleTech.FloatieMessage)
L_03b7: callvirt Void PublishMessage(MessageCenterMessage)
L_03bc: br Label11
L_03c1: Label8
L_03c1: ldarg.0
L_03c2: ldfld BattleTech.ICombatant chosenTarget
L_03c7: callvirt UnityEngine.Vector3 get_TargetPosition()
L_03cc: call UnityEngine.Vector3 get_insideUnitSphere()
L_03d1: ldc.r4 5
L_03d6: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_03db: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_03e0: stloc.s 20 (UnityEngine.Vector3)
L_03e2: ldloc.0
L_03e3: ldflda BattleTech.WeaponHitInfo hitInfo
L_03e8: ldfld System.Boolean[] dodgeSuccesses
L_03ed: ldloc.3
L_03ee: ldelem.u1
L_03ef: brfalse Label12
L_03f4: ldarg.0
L_03f5: ldfld BattleTech.ICombatant chosenTarget
L_03fa: callvirt BattleTech.GameRepresentation get_GameRep()
L_03ff: ldloc.0
L_0400: ldfld BattleTech.WeaponHitInfo hitInfo
L_0405: ldloc.3
L_0406: ldloc.s 4 (BattleTech.Weapon)
L_0408: ldarg.0
L_0409: ldfld BattleTech.MeleeAttackType meleeAttackType
L_040e: ldarg.0
L_040f: ldfld System.Single cumulativeDamage
L_0414: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0419: ldloc.0
L_041a: ldflda BattleTech.WeaponHitInfo hitInfo
L_041f: ldfld System.String attackerId
L_0424: ldarg.0
L_0425: ldfld BattleTech.ICombatant chosenTarget
L_042a: callvirt System.String get_GUID()
L_042f: ldstr "EVADE"
L_0434: call System.Object[] Empty[Object]()
L_0439: newobj Void .ctor(String, Object[])
L_043e: ldarg.0
L_043f: call BattleTech.AttackDirector get_Director()
L_0444: callvirt BattleTech.CombatGameState get_Combat()
L_0449: callvirt BattleTech.CombatGameConstants get_Constants()
L_044e: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0453: ldfld System.Single floatieSizeMedium
L_0458: ldc.i4.6
L_0459: ldloc.s 20 (UnityEngine.Vector3)
L_045b: ldfld System.Single x
L_0460: ldloc.s 20 (UnityEngine.Vector3)
L_0462: ldfld System.Single y
L_0467: ldloc.s 20 (UnityEngine.Vector3)
L_0469: ldfld System.Single z
L_046e: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0473: stloc.s 21 (BattleTech.FloatieMessage)
L_0475: ldarg.0
L_0476: call BattleTech.AttackDirector get_Director()
L_047b: callvirt BattleTech.CombatGameState get_Combat()
L_0480: callvirt MessageCenter get_MessageCenter()
L_0485: ldloc.s 21 (BattleTech.FloatieMessage)
L_0487: callvirt Void PublishMessage(MessageCenterMessage)
L_048c: br Label13
L_0491: Label12
L_0491: ldarg.0
L_0492: ldfld BattleTech.MeleeAttackType meleeAttackType
L_0497: brfalse Label14
L_049c: ldarg.0
L_049d: ldfld BattleTech.ICombatant chosenTarget
L_04a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_04a7: ldloc.0
L_04a8: ldfld BattleTech.WeaponHitInfo hitInfo
L_04ad: ldloc.3
L_04ae: ldloc.s 4 (BattleTech.Weapon)
L_04b0: ldarg.0
L_04b1: ldfld BattleTech.MeleeAttackType meleeAttackType
L_04b6: ldarg.0
L_04b7: ldfld System.Single cumulativeDamage
L_04bc: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_04c1: ldloc.0
L_04c2: ldflda BattleTech.WeaponHitInfo hitInfo
L_04c7: ldfld System.String attackerId
L_04cc: ldloc.0
L_04cd: ldflda BattleTech.WeaponHitInfo hitInfo
L_04d2: ldfld System.String targetId
L_04d7: ldstr "MISS!"
L_04dc: call System.Object[] Empty[Object]()
L_04e1: newobj Void .ctor(String, Object[])
L_04e6: ldarg.0
L_04e7: call BattleTech.AttackDirector get_Director()
L_04ec: callvirt BattleTech.CombatGameState get_Combat()
L_04f1: callvirt BattleTech.CombatGameConstants get_Constants()
L_04f6: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_04fb: ldfld System.Single floatieSizeMedium
L_0500: ldc.i4.5
L_0501: ldloc.s 20 (UnityEngine.Vector3)
L_0503: ldfld System.Single x
L_0508: ldloc.s 20 (UnityEngine.Vector3)
L_050a: ldfld System.Single y
L_050f: ldloc.s 20 (UnityEngine.Vector3)
L_0511: ldfld System.Single z
L_0516: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_051b: stloc.s 22 (BattleTech.FloatieMessage)
L_051d: ldarg.0
L_051e: call BattleTech.AttackDirector get_Director()
L_0523: callvirt BattleTech.CombatGameState get_Combat()
L_0528: callvirt MessageCenter get_MessageCenter()
L_052d: ldloc.s 22 (BattleTech.FloatieMessage)
L_052f: callvirt Void PublishMessage(MessageCenterMessage)
L_0534: br Label15
L_0539: Label14
L_0539: ldloc.s 4 (BattleTech.Weapon)
L_053b: callvirt Int32 get_ShotsWhenFired()
L_0540: ldc.i4.1
L_0541: bgt Label16
L_0546: ldc.i4.5
L_0547: br Label17
L_054c: Label16
L_054c: ldc.i4.4
L_054d: Label17
L_054d: stloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_054f: ldloc.0
L_0550: ldflda BattleTech.WeaponHitInfo hitInfo
L_0555: ldfld System.String attackerId
L_055a: ldloc.0
L_055b: ldflda BattleTech.WeaponHitInfo hitInfo
L_0560: ldfld System.String targetId
L_0565: ldstr "MISS!"
L_056a: call System.Object[] Empty[Object]()
L_056f: newobj Void .ctor(String, Object[])
L_0574: ldarg.0
L_0575: call BattleTech.AttackDirector get_Director()
L_057a: callvirt BattleTech.CombatGameState get_Combat()
L_057f: callvirt BattleTech.CombatGameConstants get_Constants()
L_0584: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0589: ldfld System.Single floatieSizeMedium
L_058e: ldloc.s 23 (BattleTech.FloatieMessage+MessageNature)
L_0590: ldloc.s 20 (UnityEngine.Vector3)
L_0592: ldfld System.Single x
L_0597: ldloc.s 20 (UnityEngine.Vector3)
L_0599: ldfld System.Single y
L_059e: ldloc.s 20 (UnityEngine.Vector3)
L_05a0: ldfld System.Single z
L_05a5: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_05aa: stloc.s 24 (BattleTech.FloatieMessage)
L_05ac: ldarg.0
L_05ad: call BattleTech.AttackDirector get_Director()
L_05b2: callvirt BattleTech.CombatGameState get_Combat()
L_05b7: callvirt MessageCenter get_MessageCenter()
L_05bc: ldloc.s 24 (BattleTech.FloatieMessage)
L_05be: callvirt Void PublishMessage(MessageCenterMessage)
L_05c3: Label13
L_05c3: Label15
L_05c3: ldloc.s 10 (System.Boolean)
L_05c5: brfalse Label18
L_05ca: ldloc.0
L_05cb: ldflda BattleTech.WeaponHitInfo hitInfo
L_05d0: ldfld System.String attackerId
L_05d5: ldloc.0
L_05d6: ldflda BattleTech.WeaponHitInfo hitInfo
L_05db: ldfld System.String targetId
L_05e0: ldstr "STRAY SHOT"
L_05e5: call System.Object[] Empty[Object]()
L_05ea: newobj Void .ctor(String, Object[])
L_05ef: ldarg.0
L_05f0: call BattleTech.AttackDirector get_Director()
L_05f5: callvirt BattleTech.CombatGameState get_Combat()
L_05fa: callvirt BattleTech.CombatGameConstants get_Constants()
L_05ff: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0604: ldfld System.Single floatieSizeLarge
L_0609: ldc.i4.5
L_060a: ldloc.s 6 (UnityEngine.Vector3)
L_060c: ldfld System.Single x
L_0611: ldloc.s 6 (UnityEngine.Vector3)
L_0613: ldfld System.Single y
L_0618: ldloc.s 6 (UnityEngine.Vector3)
L_061a: ldfld System.Single z
L_061f: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_0624: stloc.s 25 (BattleTech.FloatieMessage)
L_0626: ldarg.0
L_0627: call BattleTech.AttackDirector get_Director()
L_062c: callvirt BattleTech.CombatGameState get_Combat()
L_0631: callvirt MessageCenter get_MessageCenter()
L_0636: ldloc.s 25 (BattleTech.FloatieMessage)
L_0638: callvirt Void PublishMessage(MessageCenterMessage)
L_063d: ldloc.s 11 (BattleTech.ICombatant)
L_063f: brfalse Label19
L_0644: ldloc.s 11 (BattleTech.ICombatant)
L_0646: callvirt BattleTech.GameRepresentation get_GameRep()
L_064b: ldnull
L_064c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0651: brfalse Label20
L_0656: ldloc.s 11 (BattleTech.ICombatant)
L_0658: callvirt BattleTech.GameRepresentation get_GameRep()
L_065d: ldloc.0
L_065e: ldfld BattleTech.WeaponHitInfo hitInfo
L_0663: ldloc.3
L_0664: ldloc.s 4 (BattleTech.Weapon)
L_0666: ldarg.0
L_0667: ldfld BattleTech.MeleeAttackType meleeAttackType
L_066c: ldarg.0
L_066d: ldfld System.Single cumulativeDamage
L_0672: callvirt Void PlayImpactAnim(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, BattleTech.MeleeAttackType, Single)
L_0677: Label20
L_0677: ldloc.s 11 (BattleTech.ICombatant)
L_0679: ldloc.s 5 (System.Int32)
L_067b: callvirt Single ArmorForLocation(Int32)
L_0680: ldloc.s 8 (System.Single)
L_0682: bge.un Label21
L_0687: ldloc.0
L_0688: ldflda BattleTech.WeaponHitInfo hitInfo
L_068d: ldfld System.String attackerId
L_0692: ldloc.s 11 (BattleTech.ICombatant)
L_0694: callvirt System.String get_GUID()
L_0699: ldstr "{0}"
L_069e: ldc.i4.1
L_069f: newarr System.Object
L_06a4: dup
L_06a5: ldc.i4.0
L_06a6: ldc.r4 1
L_06ab: ldloc.s 8 (System.Single)
L_06ad: call Single Max(Single, Single)
L_06b2: conv.i4
L_06b3: box System.Int32
L_06b8: stelem.ref
L_06b9: newobj Void .ctor(String, Object[])
L_06be: ldarg.0
L_06bf: call BattleTech.AttackDirector get_Director()
L_06c4: callvirt BattleTech.CombatGameState get_Combat()
L_06c9: callvirt BattleTech.CombatGameConstants get_Constants()
L_06ce: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_06d3: ldfld System.Single floatieSizeMedium
L_06d8: ldc.i4.8
L_06d9: ldloc.s 6 (UnityEngine.Vector3)
L_06db: ldfld System.Single x
L_06e0: ldloc.s 6 (UnityEngine.Vector3)
L_06e2: ldfld System.Single y
L_06e7: ldloc.s 6 (UnityEngine.Vector3)
L_06e9: ldfld System.Single z
L_06ee: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_06f3: stloc.s 26 (BattleTech.FloatieMessage)
L_06f5: ldarg.0
L_06f6: call BattleTech.AttackDirector get_Director()
L_06fb: callvirt BattleTech.CombatGameState get_Combat()
L_0700: callvirt MessageCenter get_MessageCenter()
L_0705: ldloc.s 26 (BattleTech.FloatieMessage)
L_0707: callvirt Void PublishMessage(MessageCenterMessage)
L_070c: br Label22
L_0711: Label21
L_0711: ldloc.0
L_0712: ldflda BattleTech.WeaponHitInfo hitInfo
L_0717: ldfld System.String attackerId
L_071c: ldloc.s 11 (BattleTech.ICombatant)
L_071e: callvirt System.String get_GUID()
L_0723: ldstr "{0}"
L_0728: ldc.i4.1
L_0729: newarr System.Object
L_072e: dup
L_072f: ldc.i4.0
L_0730: ldc.r4 1
L_0735: ldloc.s 8 (System.Single)
L_0737: call Single Max(Single, Single)
L_073c: conv.i4
L_073d: box System.Int32
L_0742: stelem.ref
L_0743: newobj Void .ctor(String, Object[])
L_0748: ldarg.0
L_0749: call BattleTech.AttackDirector get_Director()
L_074e: callvirt BattleTech.CombatGameState get_Combat()
L_0753: callvirt BattleTech.CombatGameConstants get_Constants()
L_0758: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_075d: ldfld System.Single floatieSizeMedium
L_0762: ldc.i4.7
L_0763: ldloc.s 6 (UnityEngine.Vector3)
L_0765: ldfld System.Single x
L_076a: ldloc.s 6 (UnityEngine.Vector3)
L_076c: ldfld System.Single y
L_0771: ldloc.s 6 (UnityEngine.Vector3)
L_0773: ldfld System.Single z
L_0778: newobj Void .ctor(String, String, Text, Single, MessageNature, Single, Single, Single)
L_077d: stloc.s 27 (BattleTech.FloatieMessage)
L_077f: ldarg.0
L_0780: call BattleTech.AttackDirector get_Director()
L_0785: callvirt BattleTech.CombatGameState get_Combat()
L_078a: callvirt MessageCenter get_MessageCenter()
L_078f: ldloc.s 27 (BattleTech.FloatieMessage)
L_0791: callvirt Void PublishMessage(MessageCenterMessage)
L_0796: Label7
L_0796: Label10
L_0796: Label11
L_0796: Label18
L_0796: Label19
L_0796: Label22
L_0796: ldloc.s 4 (BattleTech.Weapon)
L_0798: callvirt BattleTech.WeaponType get_Type()
L_079d: ldc.i4.3
L_079e: beq Label23
L_07a3: ldloc.s 4 (BattleTech.Weapon)
L_07a5: callvirt BattleTech.WeaponType get_Type()
L_07aa: ldc.i4.7
L_07ab: beq Label24
L_07b0: call BattleTech.CameraControl get_Instance()
L_07b5: ldloc.s 8 (System.Single)
L_07b7: ldarg.0
L_07b8: call BattleTech.AttackDirector get_Director()
L_07bd: callvirt BattleTech.CombatGameState get_Combat()
L_07c2: callvirt BattleTech.CombatGameConstants get_Constants()
L_07c7: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07cc: ldfld System.Single ScreenShakeRangedDamageRelativeMod
L_07d1: mul
L_07d2: ldarg.0
L_07d3: call BattleTech.AttackDirector get_Director()
L_07d8: callvirt BattleTech.CombatGameState get_Combat()
L_07dd: callvirt BattleTech.CombatGameConstants get_Constants()
L_07e2: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_07e7: ldfld System.Single ScreenShakeRangedDamageAbsoluteMod
L_07ec: add
L_07ed: ldc.r4 1
L_07f2: ldloc.s 6 (UnityEngine.Vector3)
L_07f4: callvirt Void AddCameraShake(Single, Single, UnityEngine.Vector3)
L_07f9: Label5
L_07f9: Label23
L_07f9: Label24
L_07f9: ldloc.s 13 (System.Boolean)
L_07fb: brtrue Label25
L_0800: ldarg.0
L_0801: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0806: ldloc.0
L_0807: callvirt Void StoreMessage(MessageCenterMessage)
L_080c: br Label34
L_0811: Label25
L_0811: ldsfld HBS.Logging.ILog logger
L_0816: callvirt Boolean get_IsLogEnabled()
L_081b: brfalse Label26
L_0820: ldsfld HBS.Logging.ILog logger
L_0825: ldstr "[OnAttackSequenceImpact]  ID {0}, Group {1}, Weapon {2}, Hit {3}."
L_082a: ldc.i4.4
L_082b: newarr System.Object
L_0830: dup
L_0831: ldc.i4.0
L_0832: ldarg.0
L_0833: ldfld System.Int32 id
L_0838: box System.Int32
L_083d: stelem.ref
L_083e: dup
L_083f: ldc.i4.1
L_0840: ldloc.1
L_0841: box System.Int32
L_0846: stelem.ref
L_0847: dup
L_0848: ldc.i4.2
L_0849: ldloc.2
L_084a: box System.Int32
L_084f: stelem.ref
L_0850: dup
L_0851: ldc.i4.3
L_0852: ldloc.3
L_0853: box System.Int32
L_0858: stelem.ref
L_0859: call System.String Format(System.String, System.Object[])
L_085e: callvirt Void Log(System.Object)
L_0863: ldsfld HBS.Logging.ILog logger
L_0868: callvirt Boolean get_IsDebugEnabled()
L_086d: brfalse Label27
L_0872: ldsfld HBS.Logging.ILog logger
L_0877: ldstr "	 WeaponName {0}, MeleeType {1}, HitLocation {2}"
L_087c: ldloc.s 4 (BattleTech.Weapon)
L_087e: callvirt System.String get_Name()
L_0883: ldarg.0
L_0884: ldflda BattleTech.MeleeAttackType meleeAttackType
L_0889: constrained. BattleTech.MeleeAttackType
L_088f: callvirt System.String ToString()
L_0894: ldloca.s 5 (System.Int32)
L_0896: call System.String ToString()
L_089b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_08a0: callvirt Void LogDebug(System.Object)
L_08a5: Label26
L_08a5: Label27
L_08a5: ldloc.s 14 (System.Boolean)
L_08a7: brfalse Label28
L_08ac: ldarg.0
L_08ad: ldarg.0
L_08ae: ldfld System.Single cumulativeDamage
L_08b3: ldloc.s 8 (System.Single)
L_08b5: add
L_08b6: stfld System.Single cumulativeDamage
L_08bb: ldarg.0
L_08bc: ldfld BattleTech.ICombatant chosenTarget
L_08c1: ldloc.0
L_08c2: ldfld BattleTech.WeaponHitInfo hitInfo
L_08c7: ldloc.s 5 (System.Int32)
L_08c9: ldloc.s 4 (BattleTech.Weapon)
L_08cb: ldloc.s 8 (System.Single)
L_08cd: ldloc.3
L_08ce: ldc.i4.s 12
L_08d0: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_08d5: ldarg.0
L_08d6: ldfld BattleTech.ICombatant chosenTarget
L_08db: ldarg.0
L_08dc: ldfld BattleTech.AbstractActor attacker
L_08e1: callvirt System.String get_GUID()
L_08e6: callvirt Void HandleDeath(System.String)
L_08eb: br Label29
L_08f0: Label28
L_08f0: ldloc.s 10 (System.Boolean)
L_08f2: brfalse Label30
L_08f7: ldloc.s 11 (BattleTech.ICombatant)
L_08f9: brfalse Label31
L_08fe: ldloc.s 7 (System.Single)
L_0900: ldloc.s 9 (System.Single)
L_0902: mul
L_0903: stloc.s 8 (System.Single)
L_0905: ldloc.s 11 (BattleTech.ICombatant)
L_0907: isinst BattleTech.AbstractActor
L_090c: stloc.s 28 (BattleTech.AbstractActor)
L_090e: ldloc.s 28 (BattleTech.AbstractActor)
L_0910: brfalse Label32
L_0915: ldarg.0
L_0916: ldfld BattleTech.AbstractActor attacker
L_091b: callvirt BattleTech.VisibilityCache get_VisibilityCache()
L_0920: ldloc.s 28 (BattleTech.AbstractActor)
L_0922: callvirt BattleTech.VisibilityLevelAndAttribution VisibilityToTarget(BattleTech.ICombatant)
L_0927: stloc.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_0929: ldloca.s 16 (BattleTech.VisibilityLevelAndAttribution)
L_092b: call BattleTech.LineOfFireLevel get_LineOfFireLevel()
L_0930: stloc.s 29 (BattleTech.LineOfFireLevel)
L_0932: ldloc.s 28 (BattleTech.AbstractActor)
L_0934: ldloc.s 8 (System.Single)
L_0936: ldloc.s 4 (BattleTech.Weapon)
L_0938: callvirt BattleTech.WeaponCategory get_Category()
L_093d: ldloc.s 28 (BattleTech.AbstractActor)
L_093f: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0944: ldloc.s 29 (BattleTech.LineOfFireLevel)
L_0946: ldc.i4.1
L_0947: callvirt Single GetAdjustedDamage(Single, BattleTech.WeaponCategory, BattleTech.DesignMaskDef, BattleTech.LineOfFireLevel, Boolean)
L_094c: stloc.s 8 (System.Single)
L_094e: ldloc.s 28 (BattleTech.AbstractActor)
L_0950: ldloc.s 8 (System.Single)
L_0952: ldloc.s 4 (BattleTech.Weapon)
L_0954: callvirt BattleTech.WeaponCategory get_Category()
L_0959: callvirt Single GetAdjustedDamageForMelee(Single, BattleTech.WeaponCategory)
L_095e: stloc.s 8 (System.Single)
L_0960: Label32
L_0960: ldloc.s 11 (BattleTech.ICombatant)
L_0962: ldloc.0
L_0963: ldfld BattleTech.WeaponHitInfo hitInfo
L_0968: ldloc.0
L_0969: ldflda BattleTech.WeaponHitInfo hitInfo
L_096e: ldloc.3
L_096f: call Int32 ShotHitLocation(Int32)
L_0974: ldloc.s 4 (BattleTech.Weapon)
L_0976: ldloc.s 8 (System.Single)
L_0978: ldloc.3
L_0979: ldc.i4.s 12
L_097b: callvirt Void TakeWeaponDamage(BattleTech.WeaponHitInfo, Int32, BattleTech.Weapon, Single, Int32, BattleTech.DamageType)
L_0980: ldloc.s 11 (BattleTech.ICombatant)
L_0982: ldarg.0
L_0983: ldfld BattleTech.AbstractActor attacker
L_0988: callvirt System.String get_GUID()
L_098d: callvirt Void HandleDeath(System.String)
L_0992: Label29
L_0992: Label30
L_0992: Label31
L_0992: ldarg.0
L_0993: ldfld BattleTech.AttackDirectorHelpers.MessageCoordinator messageCoordinator
L_0998: ldloc.0
L_0999: callvirt Void MessageComplete(MessageCenterMessage)
L_099e: Label33
L_099e: Label34
L_099e: Label0
L_099e: ldarg.0
L_099f: ldloca 30 (CustomAmmoCategoriesPatches.ImpactAOEState)
L_09a1: ldarga 1
L_09a7: call Void Postfix(AttackSequence, CustomAmmoCategoriesPatches.ImpactAOEState ByRef, MessageCenterMessage ByRef)
L_09ac: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.3
L_0043: brfalse Label1
L_0048: ldarg.3
L_0049: ldc.i4 65536
L_004e: bne.un Label2
L_0053: Label1
L_0053: ldc.i4.0
L_0054: br Label23
L_0059: Label2
L_0059: ldsfld HBS.Logging.ILog attackSequenceLogger
L_005e: callvirt Boolean get_IsDebugEnabled()
L_0063: brfalse Label3
L_0068: ldsfld HBS.Logging.ILog attackSequenceLogger
L_006d: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_0072: ldc.i4.6
L_0073: newarr System.Object
L_0078: dup
L_0079: ldc.i4.0
L_007a: ldarg.2
L_007b: ldfld System.Int32 attackWeaponIndex
L_0080: box System.Int32
L_0085: stelem.ref
L_0086: dup
L_0087: ldc.i4.1
L_0088: ldarga.s 3
L_008a: constrained. BattleTech.ArmorLocation
L_0090: callvirt System.String ToString()
L_0095: stelem.ref
L_0096: dup
L_0097: ldc.i4.2
L_0098: ldarg.s 5
L_009a: box System.Single
L_009f: stelem.ref
L_00a0: dup
L_00a1: ldc.i4.3
L_00a2: ldarg.2
L_00a3: ldfld System.Int32 attackGroupIndex
L_00a8: box System.Int32
L_00ad: stelem.ref
L_00ae: dup
L_00af: ldc.i4.4
L_00b0: ldarg.0
L_00b1: call System.String get_GUID()
L_00b6: stelem.ref
L_00b7: dup
L_00b8: ldc.i4.5
L_00b9: ldarg.s 6
L_00bb: box System.Int32
L_00c0: stelem.ref
L_00c1: call System.String Format(System.String, System.Object[])
L_00c6: callvirt Void LogDebug(System.Object)
L_00cb: Label3
L_00cb: ldarg.0
L_00cc: call BattleTech.CombatGameState get_Combat()
L_00d1: callvirt BattleTech.AttackDirector get_AttackDirector()
L_00d6: ldarg.2
L_00d7: ldfld System.Int32 attackSequenceId
L_00dc: callvirt AttackSequence GetAttackSequence(Int32)
L_00e1: stloc.0
L_00e2: ldsfld HBS.Logging.ILog damageLogger
L_00e7: callvirt Boolean get_IsLogEnabled()
L_00ec: brfalse Label4
L_00f1: ldsfld HBS.Logging.ILog damageLogger
L_00f6: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_00fb: ldc.i4.5
L_00fc: newarr System.Object
L_0101: dup
L_0102: ldc.i4.0
L_0103: ldarg.0
L_0104: callvirt BattleTech.DescriptionDef get_Description()
L_0109: callvirt System.String get_Name()
L_010e: stelem.ref
L_010f: dup
L_0110: ldc.i4.1
L_0111: ldarg.s 5
L_0113: box System.Single
L_0118: stelem.ref
L_0119: dup
L_011a: ldc.i4.2
L_011b: ldarga.s 3
L_011d: constrained. BattleTech.ArmorLocation
L_0123: callvirt System.String ToString()
L_0128: stelem.ref
L_0129: dup
L_012a: ldc.i4.3
L_012b: ldarg.s 4
L_012d: callvirt System.String get_Name()
L_0132: stelem.ref
L_0133: dup
L_0134: ldc.i4.4
L_0135: ldarg.2
L_0136: ldfld System.Int32 attackWeaponIndex
L_013b: box System.Int32
L_0140: stelem.ref
L_0141: call System.String Format(System.String, System.Object[])
L_0146: callvirt Void Log(System.Object)
L_014b: Label4
L_014b: ldloc.0
L_014c: brfalse Label5
L_0151: ldloc.0
L_0152: ldarg.0
L_0153: call System.String get_GUID()
L_0158: callvirt Void FlagAttackDidDamage(System.String)
L_015d: ldarg.0
L_015e: call BattleTech.CombatGameState get_Combat()
L_0163: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_0168: ldarg.0
L_0169: call System.String get_GUID()
L_016e: ldarg.1
L_016f: ldarg.2
L_0170: ldarg.3
L_0171: ldarg.s 4
L_0173: ldarg.s 5
L_0175: ldarg.s 6
L_0177: ldarg.s 7
L_0179: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_017e: Label5
L_017e: ldarg.s 5
L_0180: stloc.1
L_0181: ldarg.0
L_0182: ldarg.3
L_0183: call Single GetCurrentArmor(BattleTech.ArmorLocation)
L_0188: stloc.2
L_0189: ldloc.2
L_018a: ldc.r4 0
L_018f: ble.un Label6
L_0194: ldarg.s 5
L_0196: ldloc.2
L_0197: call Single Min(Single, Single)
L_019c: stloc.s 7 (System.Single)
L_019e: ldsfld HBS.Logging.ILog attackLogger
L_01a3: callvirt Boolean get_IsLogEnabled()
L_01a8: brfalse Label7
L_01ad: ldsfld HBS.Logging.ILog attackLogger
L_01b2: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01b7: ldc.i4.5
L_01b8: newarr System.Object
L_01bd: dup
L_01be: ldc.i4.0
L_01bf: ldarg.2
L_01c0: ldfld System.Int32 attackSequenceId
L_01c5: box System.Int32
L_01ca: stelem.ref
L_01cb: dup
L_01cc: ldc.i4.1
L_01cd: ldarg.2
L_01ce: ldfld System.Int32 attackWeaponIndex
L_01d3: box System.Int32
L_01d8: stelem.ref
L_01d9: dup
L_01da: ldc.i4.2
L_01db: ldarg.1
L_01dc: box System.Int32
L_01e1: stelem.ref
L_01e2: dup
L_01e3: ldc.i4.3
L_01e4: ldarga.s 3
L_01e6: constrained. BattleTech.ArmorLocation
L_01ec: callvirt System.String ToString()
L_01f1: stelem.ref
L_01f2: dup
L_01f3: ldc.i4.4
L_01f4: ldloc.s 7 (System.Single)
L_01f6: box System.Single
L_01fb: stelem.ref
L_01fc: call System.String Format(System.String, System.Object[])
L_0201: callvirt Void Log(System.Object)
L_0206: Label7
L_0206: ldsfld HBS.Logging.ILog damageLogger
L_020b: callvirt Boolean get_IsLogEnabled()
L_0210: brfalse Label8
L_0215: ldloc.2
L_0216: ldloc.s 7 (System.Single)
L_0218: sub
L_0219: stloc.s 8 (System.Single)
L_021b: ldsfld HBS.Logging.ILog damageLogger
L_0220: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_0225: ldloc.s 7 (System.Single)
L_0227: box System.Single
L_022c: ldloc.2
L_022d: box System.Single
L_0232: ldloc.s 8 (System.Single)
L_0234: box System.Single
L_0239: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_023e: callvirt Void Log(System.Object)
L_0243: Label8
L_0243: ldarg.0
L_0244: ldarg.3
L_0245: ldloc.s 7 (System.Single)
L_0247: ldarg.2
L_0248: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_024d: ldarg.s 5
L_024f: ldloc.s 7 (System.Single)
L_0251: sub
L_0252: stloc.1
L_0253: Label6
L_0253: ldloc.1
L_0254: ldc.r4 0
L_0259: bgt.un Label9
L_025e: ldarg.0
L_025f: call BattleTech.CombatGameState get_Combat()
L_0264: callvirt MessageCenter get_MessageCenter()
L_0269: ldarg.2
L_026a: ldfld System.String attackerId
L_026f: ldarg.0
L_0270: call System.String get_GUID()
L_0275: ldarg.s 5
L_0277: ldarg.3
L_0278: newobj Void .ctor(String, String, Single, ArmorLocation)
L_027d: callvirt Void PublishMessage(MessageCenterMessage)
L_0282: ldc.i4.1
L_0283: br Label24
L_0288: Label9
L_0288: ldarg.3
L_0289: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_028e: stloc.3
L_028f: call UnityEngine.Vector3 get_one()
L_0294: stloc.s 4 (UnityEngine.Vector3)
L_0296: ldarg.0
L_0297: call BattleTech.MechRepresentation get_GameRep()
L_029c: ldnull
L_029d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02a2: brfalse Label10
L_02a7: ldarg.s 4
L_02a9: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02ae: ldnull
L_02af: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02b4: brfalse Label11
L_02b9: ldarg.s 4
L_02bb: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02c0: ldfld UnityEngine.Transform[] vfxTransforms
L_02c5: ldc.i4.0
L_02c6: ldelem.ref
L_02c7: callvirt UnityEngine.Vector3 get_position()
L_02cc: stloc.s 9 (UnityEngine.Vector3)
L_02ce: ldarg.0
L_02cf: call BattleTech.MechRepresentation get_GameRep()
L_02d4: ldloc.3
L_02d5: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_02da: callvirt UnityEngine.Vector3 get_position()
L_02df: ldloc.s 9 (UnityEngine.Vector3)
L_02e1: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_02e6: stloc.s 4 (UnityEngine.Vector3)
L_02e8: ldloca.s 4 (UnityEngine.Vector3)
L_02ea: call Void Normalize()
L_02ef: ldloca.s 4 (UnityEngine.Vector3)
L_02f1: ldc.r4 0.5
L_02f6: stfld System.Single y
L_02fb: ldloc.s 4 (UnityEngine.Vector3)
L_02fd: ldarg.s 5
L_02ff: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0304: stloc.s 4 (UnityEngine.Vector3)
L_0306: Label10
L_0306: Label11
L_0306: ldarg.0
L_0307: ldloc.3
L_0308: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_030d: stloc.s 5 (System.Single)
L_030f: ldloc.s 5 (System.Single)
L_0311: ldc.r4 0
L_0316: ble.un Label12
L_031b: ldloc.1
L_031c: ldloc.s 5 (System.Single)
L_031e: call Single Min(Single, Single)
L_0323: stloc.s 10 (System.Single)
L_0325: ldsfld HBS.Logging.ILog attackLogger
L_032a: callvirt Boolean get_IsLogEnabled()
L_032f: brfalse Label13
L_0334: ldsfld HBS.Logging.ILog attackLogger
L_0339: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_033e: ldc.i4.5
L_033f: newarr System.Object
L_0344: dup
L_0345: ldc.i4.0
L_0346: ldarg.2
L_0347: ldfld System.Int32 attackSequenceId
L_034c: box System.Int32
L_0351: stelem.ref
L_0352: dup
L_0353: ldc.i4.1
L_0354: ldarg.2
L_0355: ldfld System.Int32 attackWeaponIndex
L_035a: box System.Int32
L_035f: stelem.ref
L_0360: dup
L_0361: ldc.i4.2
L_0362: ldarg.1
L_0363: box System.Int32
L_0368: stelem.ref
L_0369: dup
L_036a: ldc.i4.3
L_036b: ldloca.s 3 (BattleTech.ChassisLocations)
L_036d: constrained. BattleTech.ChassisLocations
L_0373: callvirt System.String ToString()
L_0378: stelem.ref
L_0379: dup
L_037a: ldc.i4.4
L_037b: ldloc.s 10 (System.Single)
L_037d: box System.Single
L_0382: stelem.ref
L_0383: call System.String Format(System.String, System.Object[])
L_0388: callvirt Void Log(System.Object)
L_038d: Label13
L_038d: ldsfld HBS.Logging.ILog damageLogger
L_0392: callvirt Boolean get_IsLogEnabled()
L_0397: brfalse Label14
L_039c: ldloc.s 5 (System.Single)
L_039e: ldloc.s 10 (System.Single)
L_03a0: sub
L_03a1: stloc.s 11 (System.Single)
L_03a3: ldsfld HBS.Logging.ILog damageLogger
L_03a8: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03ad: ldloc.s 10 (System.Single)
L_03af: box System.Single
L_03b4: ldloc.s 5 (System.Single)
L_03b6: box System.Single
L_03bb: ldloc.s 11 (System.Single)
L_03bd: box System.Single
L_03c2: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03c7: callvirt Void Log(System.Object)
L_03cc: Label14
L_03cc: ldarg.0
L_03cd: ldloc.3
L_03ce: ldloc.s 10 (System.Single)
L_03d0: ldarg.2
L_03d1: call Void ApplyStructureStatDamage(BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_03d6: ldloc.1
L_03d7: ldloc.s 10 (System.Single)
L_03d9: sub
L_03da: stloc.1
L_03db: ldarg.0
L_03dc: ldloc.3
L_03dd: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_03e2: brfalse Label15
L_03e7: ldloc.s 10 (System.Single)
L_03e9: ldc.r4 0.01
L_03ee: ble.un Label16
L_03f3: ldarg.0
L_03f4: ldarg.2
L_03f5: ldarg.1
L_03f6: ldloc.3
L_03f7: ldloc.s 4 (UnityEngine.Vector3)
L_03f9: ldarg.s 8
L_03fb: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_0400: br Label17
L_0405: Label12
L_0405: ldarg.0
L_0406: callvirt Boolean get_IsDead()
L_040b: brfalse Label18
L_0410: ldloc.1
L_0411: ldc.r4 0
L_0416: ble.un Label19
L_041b: ldarg.0
L_041c: ldarg.2
L_041d: ldfld System.String attackerId
L_0422: ldloc.3
L_0423: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_0428: ldc.i4.8
L_0429: ldstr "{0}"
L_042e: ldc.r4 1
L_0433: ldloc.1
L_0434: call Single Max(Single, Single)
L_0439: conv.i4
L_043a: box System.Int32
L_043f: call System.String Format(System.String, System.Object)
L_0444: ldarg.0
L_0445: call BattleTech.CombatGameState get_Combat()
L_044a: callvirt BattleTech.CombatGameConstants get_Constants()
L_044f: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0454: ldfld System.Single floatieSizeMedium
L_0459: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_045e: Label15
L_045e: Label16
L_045e: Label17
L_045e: Label18
L_045e: Label19
L_045e: ldarg.0
L_045f: call BattleTech.CombatGameState get_Combat()
L_0464: callvirt MessageCenter get_MessageCenter()
L_0469: ldarg.2
L_046a: ldfld System.String attackerId
L_046f: ldarg.0
L_0470: call System.String get_GUID()
L_0475: ldarg.s 5
L_0477: ldarg.3
L_0478: newobj Void .ctor(String, String, Single, ArmorLocation)
L_047d: callvirt Void PublishMessage(MessageCenterMessage)
L_0482: ldloc.1
L_0483: ldc.r4 0
L_0488: bgt.un Label20
L_048d: ldc.i4.1
L_048e: br Label25
L_0493: Label20
L_0493: ldarg.3
L_0494: ldarg.2
L_0495: ldfld BattleTech.AttackDirection[] attackDirections
L_049a: ldarg.s 6
L_049c: ldelem.i4
L_049d: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04a2: stloc.s 6 (BattleTech.ArmorLocation)
L_04a4: ldsfld HBS.Logging.ILog attackLogger
L_04a9: callvirt Boolean get_IsLogEnabled()
L_04ae: brfalse Label21
L_04b3: ldsfld HBS.Logging.ILog attackLogger
L_04b8: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04bd: ldc.i4.6
L_04be: newarr System.Object
L_04c3: dup
L_04c4: ldc.i4.0
L_04c5: ldarg.2
L_04c6: ldfld System.Int32 attackSequenceId
L_04cb: box System.Int32
L_04d0: stelem.ref
L_04d1: dup
L_04d2: ldc.i4.1
L_04d3: ldarg.2
L_04d4: ldfld System.Int32 attackWeaponIndex
L_04d9: box System.Int32
L_04de: stelem.ref
L_04df: dup
L_04e0: ldc.i4.2
L_04e1: ldarg.1
L_04e2: box System.Int32
L_04e7: stelem.ref
L_04e8: dup
L_04e9: ldc.i4.3
L_04ea: ldloca.s 3 (BattleTech.ChassisLocations)
L_04ec: constrained. BattleTech.ChassisLocations
L_04f2: callvirt System.String ToString()
L_04f7: stelem.ref
L_04f8: dup
L_04f9: ldc.i4.4
L_04fa: ldloc.1
L_04fb: box System.Single
L_0500: stelem.ref
L_0501: dup
L_0502: ldc.i4.5
L_0503: ldloca.s 6 (BattleTech.ArmorLocation)
L_0505: constrained. BattleTech.ArmorLocation
L_050b: callvirt System.String ToString()
L_0510: stelem.ref
L_0511: call System.String Format(System.String, System.Object[])
L_0516: callvirt Void Log(System.Object)
L_051b: Label21
L_051b: ldsfld HBS.Logging.ILog damageLogger
L_0520: callvirt Boolean get_IsLogEnabled()
L_0525: brfalse Label22
L_052a: ldsfld HBS.Logging.ILog damageLogger
L_052f: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_0534: ldloca.s 3 (BattleTech.ChassisLocations)
L_0536: constrained. BattleTech.ChassisLocations
L_053c: callvirt System.String ToString()
L_0541: ldloc.1
L_0542: box System.Single
L_0547: ldloca.s 6 (BattleTech.ArmorLocation)
L_0549: constrained. BattleTech.ArmorLocation
L_054f: callvirt System.String ToString()
L_0554: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0559: callvirt Void Log(System.Object)
L_055e: Label22
L_055e: ldarg.0
L_055f: ldarg.1
L_0560: ldarg.2
L_0561: ldloc.s 6 (BattleTech.ArmorLocation)
L_0563: ldarg.s 4
L_0565: ldloc.1
L_0566: ldarg.s 6
L_0568: ldarg.s 7
L_056a: ldarg.s 8
L_056c: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0571: Label23
L_0571: Label24
L_0571: Label25
L_0571: stloc 12 (System.Boolean)
L_0573: Label0
L_0573: ldloc 12 (System.Boolean)
L_0575: ret
DONE

### Patch WeaponEffect, Void DestroyFlimsyObjects()
L_0000: Local var 0: UnityEngine.Collider[]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: UnityEngine.Vector3
L_0000: Local var 3: System.Single
L_0000: Local var 4: DestructibleObject
L_0000: Local var 5: BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy
L_0000: Local var 6: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Boolean shotsDestroyFlimsyObjects
L_0011: brtrue Label1
L_0016: br Label7
L_001b: Label1
L_001b: ldarg.0
L_001c: ldfld UnityEngine.Vector3 endPos
L_0021: ldc.r4 15
L_0026: ldc.i4.s -5
L_0028: ldc.i4.1
L_0029: call UnityEngine.Collider[] OverlapSphere(UnityEngine.Vector3, Single, Int32, UnityEngine.QueryTriggerInteraction)
L_002e: stloc.0
L_002f: ldc.i4.0
L_0030: stloc.1
L_0031: br Label2
L_0036: Label6
L_0036: ldloc.0
L_0037: ldloc.1
L_0038: ldelem.ref
L_0039: dup
L_003a: callvirt UnityEngine.Transform get_transform()
L_003f: callvirt UnityEngine.Vector3 get_position()
L_0044: ldarg.0
L_0045: ldfld UnityEngine.Vector3 endPos
L_004a: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_004f: stloc.s 6 (UnityEngine.Vector3)
L_0051: ldloca.s 6 (UnityEngine.Vector3)
L_0053: call UnityEngine.Vector3 get_normalized()
L_0058: stloc.2
L_0059: ldarg.0
L_005a: ldfld BattleTech.Weapon weapon
L_005f: callvirt Single get_DamagePerShot()
L_0064: ldarg.0
L_0065: ldfld BattleTech.CombatGameState Combat
L_006a: callvirt BattleTech.CombatGameConstants get_Constants()
L_006f: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_0074: ldfld System.Single FlimsyDestructionForceMultiplier
L_0079: add
L_007a: stloc.3
L_007b: dup
L_007c: callvirt UnityEngine.GameObject get_gameObject()
L_0081: callvirt DestructibleObject GetComponent[DestructibleObject]()
L_0086: stloc.s 4 (DestructibleObject)
L_0088: callvirt UnityEngine.GameObject get_gameObject()
L_008d: callvirt BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy GetComponent[DestructibleUrbanFlimsy]()
L_0092: stloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_0094: ldloc.s 4 (DestructibleObject)
L_0096: ldnull
L_0097: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_009c: brfalse Label3
L_00a1: ldloc.s 4 (DestructibleObject)
L_00a3: ldfld System.Boolean isFlimsy
L_00a8: brfalse Label4
L_00ad: ldloc.s 4 (DestructibleObject)
L_00af: ldarg.0
L_00b0: ldfld UnityEngine.Vector3 endPos
L_00b5: ldloc.2
L_00b6: ldloc.3
L_00b7: callvirt Void TakeDamage(UnityEngine.Vector3, UnityEngine.Vector3, Single)
L_00bc: ldloc.s 4 (DestructibleObject)
L_00be: ldloc.2
L_00bf: ldloc.3
L_00c0: callvirt Void Collapse(UnityEngine.Vector3, Single)
L_00c5: Label3
L_00c5: Label4
L_00c5: ldloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_00c7: ldnull
L_00c8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00cd: brfalse Label5
L_00d2: ldloc.s 5 (BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy)
L_00d4: ldloc.2
L_00d5: ldloc.3
L_00d6: callvirt Void PlayDestruction(UnityEngine.Vector3, Single)
L_00db: Label5
L_00db: ldloc.1
L_00dc: ldc.i4.1
L_00dd: add
L_00de: stloc.1
L_00df: Label2
L_00df: ldloc.1
L_00e0: ldloc.0
L_00e1: ldlen
L_00e2: conv.i4
L_00e3: blt Label6
L_00e8: Label7
L_00e8: Label0
L_00e8: ret
DONE

### Patch MissileEffect, Void PlayImpact()
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.String
L_0000: Local var 5: BattleTech.MapTerrainDataCell
L_0000: Local var 6: AudioSwitch_surface_type
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call Void PlayImpactAudio()
L_0006: ldarg.0
L_0007: ldfld System.Boolean isSRM
L_000c: brfalse Label1
L_0011: ldc.i4 381
L_0016: ldarg.0
L_0017: ldfld AkGameObj projectileAudioObject
L_001c: ldnull
L_001d: ldnull
L_001e: call UInt32 PostEvent[AudioEventList_srm](AudioEventList_srm, AkGameObj, EventCallback, System.Object)
L_0023: pop
L_0024: br Label2
L_0029: Label1
L_0029: ldc.i4 366
L_002e: ldarg.0
L_002f: ldfld AkGameObj projectileAudioObject
L_0034: ldnull
L_0035: ldnull
L_0036: call UInt32 PostEvent[AudioEventList_lrm](AudioEventList_lrm, AkGameObj, EventCallback, System.Object)
L_003b: pop
L_003c: Label2
L_003c: ldarg.0
L_003d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0042: ldarg.0
L_0043: ldfld System.Int32 hitIndex
L_0048: call Boolean DidShotHitAnything(Int32)
L_004d: brfalse Label3
L_0052: ldarg.0
L_0053: ldfld System.String impactVFXBase
L_0058: call Boolean IsNullOrEmpty(System.String)
L_005d: brtrue Label4
L_0062: ldstr ""
L_0067: stloc.0
L_0068: ldc.i4.0
L_0069: stloc.1
L_006a: ldsfld System.String Empty
L_006f: stloc.2
L_0070: ldarg.0
L_0071: ldfld BattleTech.CombatGameState Combat
L_0076: ldarg.0
L_0077: ldflda BattleTech.WeaponHitInfo hitInfo
L_007c: ldarg.0
L_007d: ldfld System.Int32 hitIndex
L_0082: call System.String ShotTargetId(Int32)
L_0087: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_008c: stloc.3
L_008d: ldarg.0
L_008e: ldflda BattleTech.WeaponHitInfo hitInfo
L_0093: ldfld System.Int32[] hitLocations
L_0098: ldarg.0
L_0099: ldfld System.Int32 hitIndex
L_009e: ldelem.i4
L_009f: ldc.i4 65536
L_00a4: bne.un Label5
L_00a9: ldc.i4.1
L_00aa: stloc.1
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.Weapon weapon
L_00b1: ldfld BattleTech.AbstractActor parent
L_00b6: callvirt BattleTech.CombatGameState get_Combat()
L_00bb: callvirt BattleTech.MapMetaData get_MapMetaData()
L_00c0: ldarg.0
L_00c1: ldfld UnityEngine.Vector3 endPos
L_00c6: callvirt BattleTech.MapTerrainDataCell GetCellAt(UnityEngine.Vector3)
L_00cb: stloc.s 5 (BattleTech.MapTerrainDataCell)
L_00cd: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00cf: brfalse Label6
L_00d4: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00d6: callvirt System.String GetVFXNameModifier()
L_00db: stloc.2
L_00dc: ldloc.s 5 (BattleTech.MapTerrainDataCell)
L_00de: callvirt AudioSwitch_surface_type GetAudioSurfaceType()
L_00e3: stloc.s 6 (AudioSwitch_surface_type)
L_00e5: ldloc.s 6 (AudioSwitch_surface_type)
L_00e7: switch Labels7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
L_012c: br Label23
L_0131: Label13
L_0131: ldstr "_brush"
L_0136: stloc.0
L_0137: br Label24
L_013c: Label14
L_013c: ldstr "_concrete"
L_0141: stloc.0
L_0142: br Label25
L_0147: Label15
L_0147: ldstr "_debris_glass"
L_014c: stloc.0
L_014d: br Label26
L_0152: Label7
L_0152: ldstr "_dirt"
L_0157: stloc.0
L_0158: br Label27
L_015d: Label16
L_015d: ldstr "_gravel"
L_0162: stloc.0
L_0163: br Label28
L_0168: Label17
L_0168: ldstr "_ice"
L_016d: stloc.0
L_016e: br Label29
L_0173: Label18
L_0173: ldstr "_lava"
L_0178: stloc.0
L_0179: br Label30
L_017e: Label9
L_017e: ldstr "_metal"
L_0183: stloc.0
L_0184: br Label31
L_0189: Label19
L_0189: ldstr "_mud"
L_018e: stloc.0
L_018f: br Label32
L_0194: Label20
L_0194: ldstr "_sand"
L_0199: stloc.0
L_019a: br Label33
L_019f: Label11
L_019f: ldstr "_snow"
L_01a4: stloc.0
L_01a5: br Label34
L_01aa: Label21
L_01aa: Label22
L_01aa: ldstr "_water"
L_01af: stloc.0
L_01b0: br Label35
L_01b5: Label12
L_01b5: ldstr "_wood"
L_01ba: stloc.0
L_01bb: br Label36
L_01c0: Label8
L_01c0: Label10
L_01c0: Label23
L_01c0: ldstr "_dirt"
L_01c5: stloc.0
L_01c6: br Label37
L_01cb: Label5
L_01cb: ldloc.3
L_01cc: brfalse Label38
L_01d1: ldarg.0
L_01d2: ldflda BattleTech.WeaponHitInfo hitInfo
L_01d7: ldarg.0
L_01d8: ldfld System.Int32 hitIndex
L_01dd: call Int32 ShotHitLocation(Int32)
L_01e2: ldc.i4 65536
L_01e7: beq Label39
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.Weapon weapon
L_01f2: ldarg.0
L_01f3: ldfld BattleTech.Weapon weapon
L_01f8: ldfld BattleTech.AbstractActor parent
L_01fd: callvirt BattleTech.DesignMaskDef get_occupiedDesignMask()
L_0202: callvirt Single DamagePerShotAdjusted(BattleTech.DesignMaskDef)
L_0207: ldloc.3
L_0208: ldarg.0
L_0209: ldflda BattleTech.WeaponHitInfo hitInfo
L_020e: ldarg.0
L_020f: ldfld System.Int32 hitIndex
L_0214: call Int32 ShotHitLocation(Int32)
L_0219: callvirt Single ArmorForLocation(Int32)
L_021e: ble.un Label40
L_0223: ldstr "_crit"
L_0228: stloc.0
L_0229: br Label41
L_022e: Label38
L_022e: Label39
L_022e: Label40
L_022e: ldarg.0
L_022f: ldfld System.String[] impactVFXVariations
L_0234: brfalse Label42
L_0239: ldarg.0
L_023a: ldfld System.String[] impactVFXVariations
L_023f: ldlen
L_0240: brfalse Label43
L_0245: ldc.i4.0
L_0246: ldarg.0
L_0247: ldfld System.String[] impactVFXVariations
L_024c: ldlen
L_024d: conv.i4
L_024e: call Int32 Range(Int32, Int32)
L_0253: stloc.s 7 (System.Int32)
L_0255: ldstr "_"
L_025a: ldarg.0
L_025b: ldfld System.String[] impactVFXVariations
L_0260: ldloc.s 7 (System.Int32)
L_0262: ldelem.ref
L_0263: call System.String Concat(System.String, System.String)
L_0268: stloc.0
L_0269: Label6
L_0269: Label24
L_0269: Label25
L_0269: Label26
L_0269: Label27
L_0269: Label28
L_0269: Label29
L_0269: Label30
L_0269: Label31
L_0269: Label32
L_0269: Label33
L_0269: Label34
L_0269: Label35
L_0269: Label36
L_0269: Label37
L_0269: Label41
L_0269: Label42
L_0269: Label43
L_0269: ldstr "{0}{1}{2}"
L_026e: ldarg.0
L_026f: ldfld System.String impactVFXBase
L_0274: ldloc.0
L_0275: ldloc.2
L_0276: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_027b: stloc.s 4 (System.String)
L_027d: ldarg.0
L_027e: ldloc.s 4 (System.String)
L_0280: call Void SpawnImpactExplosion(System.String)
L_0285: ldloc.1
L_0286: brfalse Label44
L_028b: ldc.r4 20
L_0290: ldc.r4 25
L_0295: call Single Range(Single, Single)
L_029a: ldarg.0
L_029b: ldfld System.Boolean isSRM
L_02a0: brtrue Label45
L_02a5: ldc.r4 1
L_02aa: br Label46
L_02af: Label45
L_02af: ldc.r4 0.75
L_02b4: Label46
L_02b4: mul
L_02b5: stloc.s 8 (System.Single)
L_02b7: ldloca.s 9 (UnityEngine.Vector3)
L_02b9: ldc.r4 0
L_02be: ldc.r4 1
L_02c3: call Single Range(Single, Single)
L_02c8: ldc.r4 0
L_02cd: ldc.r4 0
L_02d2: ldc.r4 1
L_02d7: call Single Range(Single, Single)
L_02dc: call Void .ctor(Single, Single, Single)
L_02e1: call BattleTech.Rendering.FootstepManager get_Instance()
L_02e6: ldarg.0
L_02e7: ldfld UnityEngine.Vector3 endPos
L_02ec: ldloca.s 9 (UnityEngine.Vector3)
L_02ee: call UnityEngine.Vector3 get_normalized()
L_02f3: ldloc.s 8 (System.Single)
L_02f5: ldloc.s 8 (System.Single)
L_02f7: ldloc.s 8 (System.Single)
L_02f9: newobj Void .ctor(Single, Single, Single)
L_02fe: ldc.i4.0
L_02ff: callvirt Boolean AddScorch(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, Boolean)
L_0304: pop
L_0305: Label3
L_0305: Label4
L_0305: Label44
L_0305: ldarg.0
L_0306: callvirt Void PlayImpactDamageOverlay()
L_030b: ldarg.0
L_030c: ldfld UnityEngine.GameObject projectileMeshObject
L_0311: ldnull
L_0312: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0317: brfalse Label47
L_031c: ldarg.0
L_031d: ldfld UnityEngine.GameObject projectileMeshObject
L_0322: ldc.i4.0
L_0323: callvirt Void SetActive(Boolean)
L_0328: Label47
L_0328: ldarg.0
L_0329: ldfld UnityEngine.GameObject projectileLightObject
L_032e: ldnull
L_032f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0334: brfalse Label48
L_0339: ldarg.0
L_033a: ldfld UnityEngine.GameObject projectileLightObject
L_033f: ldc.i4.0
L_0340: callvirt Void SetActive(Boolean)
L_0345: Label48
L_0345: ldarg.0
L_0346: ldc.r4 0
L_034b: callvirt Void OnImpact(Single)
L_0350: ldarg.0
L_0351: call Void Postfix(WeaponEffect)
L_0356: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldsfld HBS.Logging.ILog gameInfoLogger
L_0026: ldstr "CombatGameState Destroyed: {0}"
L_002b: call System.DateTime get_UtcNow()
L_0030: stloc.0
L_0031: ldloca.s 0 (System.DateTime)
L_0033: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0038: call System.String ToString(System.String)
L_003d: call System.String Format(System.String, System.Object)
L_0042: callvirt Void Log(System.Object)
L_0047: ldarg.0
L_0048: call MessageCenter get_MessageCenter()
L_004d: brfalse Label1
L_0052: ldarg.0
L_0053: call MessageCenter get_MessageCenter()
L_0058: newobj Void .ctor()
L_005d: dup
L_005e: call BattleTech.GameInstance get_BattleTechGame()
L_0063: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0068: callvirt Boolean IsNetworkGameActive()
L_006d: callvirt Void set_IsNetworkGame(Boolean)
L_0072: callvirt Void PublishMessage(MessageCenterMessage)
L_0077: Label1
L_0077: ldarg.0
L_0078: call BattleTech.StackManager get_StackManager()
L_007d: brfalse Label2
L_0082: ldarg.0
L_0083: call BattleTech.StackManager get_StackManager()
L_0088: callvirt Void OnCombatGameDestroyed()
L_008d: ldarg.0
L_008e: ldnull
L_008f: call Void set_StackManager(BattleTech.StackManager)
L_0094: Label2
L_0094: ldarg.0
L_0095: call BattleTech.TurnDirector get_TurnDirector()
L_009a: brfalse Label3
L_009f: ldarg.0
L_00a0: call BattleTech.TurnDirector get_TurnDirector()
L_00a5: callvirt Void OnCombatGameDestroyed()
L_00aa: Label3
L_00aa: ldarg.0
L_00ab: call BattleTech.InvocationHandler get_InvocationHandler()
L_00b0: brfalse Label4
L_00b5: ldarg.0
L_00b6: call BattleTech.InvocationHandler get_InvocationHandler()
L_00bb: callvirt Void OnCombatGameDestroyed()
L_00c0: Label4
L_00c0: ldarg.0
L_00c1: call MessageCenter get_MessageCenter()
L_00c6: brfalse Label5
L_00cb: ldarg.0
L_00cc: call MessageCenter get_MessageCenter()
L_00d1: ldc.i4.3
L_00d2: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00d7: Label5
L_00d7: ldarg.0
L_00d8: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00dd: brfalse Label6
L_00e2: ldarg.0
L_00e3: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00e8: callvirt Void Dispose()
L_00ed: Label6
L_00ed: call Boolean get_HasInstance()
L_00f2: brfalse Label7
L_00f7: call HBS.DebugConsole.DebugConsole get_Instance()
L_00fc: ldarg.0
L_00fd: ldftn Void DebugConsoleOnBeforeDump()
L_0103: newobj Void .ctor(Object, IntPtr)
L_0108: callvirt Void remove_OnBeforeDump(DumpHandler)
L_010d: Label7
L_010d: call Boolean get_HasInstance()
L_0112: brfalse Label8
L_0117: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_011c: callvirt Void OnCombatSceneEnd()
L_0121: Label8
L_0121: ldnull
L_0122: call Void set_destructionConstantsComponent(DestructionConstants)
L_0127: call Void ClearStaticData()
L_012c: call Void ClearStaticData()
L_0131: call Void ClearStaticData()
L_0136: call Void ClearStaticData()
L_013b: call Void ClearStaticData()
L_0140: ldsfld HBS.Logging.ILog gameInfoLogger
L_0145: ldstr "CombatGameState destroyed: {0}"
L_014a: call System.DateTime get_UtcNow()
L_014f: stloc.0
L_0150: ldloca.s 0 (System.DateTime)
L_0152: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0157: call System.String ToString(System.String)
L_015c: call System.String Format(System.String, System.Object)
L_0161: callvirt Void Log(System.Object)
L_0166: Label0
L_0166: ldarg.0
L_0167: call Void Postfix(BattleTech.CombatGameState)
L_016c: ret
DONE

### Patch BattleTech.AttackDirector+AttackSequence, Void GenerateRandomCache()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single[][]
L_0000: Local var 5: System.Int32[]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 11: System.Int32
L_0000: Local var 12: System.Int32[][]
L_0000: Local var 13: System.Int32[]
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Int32[]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32[]
L_0000: Local var 20: System.Int32
L_0000: Local var 21: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(AttackSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_0011: callvirt Int32 get_Count()
L_0016: stloc.0
L_0017: ldarg.0
L_0018: ldloc.0
L_0019: newarr System.Single[][]
L_001e: stfld System.Single[][][] randomCache
L_0023: ldarg.0
L_0024: ldloc.0
L_0025: newarr System.Int32[]
L_002a: stfld System.Int32[][] randomCacheValuesUsed
L_002f: ldc.i4.0
L_0030: stloc.1
L_0031: br Label1
L_0036: Label4
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_003c: ldloc.1
L_003d: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_0042: stloc.2
L_0043: ldloc.2
L_0044: callvirt Int32 get_Count()
L_0049: stloc.3
L_004a: ldloc.3
L_004b: newarr System.Single[]
L_0050: stloc.s 4 (System.Single[][])
L_0052: ldloc.3
L_0053: newarr System.Int32
L_0058: stloc.s 5 (System.Int32[])
L_005a: ldc.i4.0
L_005b: stloc.s 6 (System.Int32)
L_005d: br Label2
L_0062: Label3
L_0062: ldloc.2
L_0063: ldloc.s 6 (System.Int32)
L_0065: callvirt BattleTech.Weapon get_Item(Int32)
L_006a: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_006f: stloc.s 7 (System.Int32)
L_0071: ldc.i4.6
L_0072: ldloc.s 7 (System.Int32)
L_0074: mul
L_0075: ldc.i4.2
L_0076: add
L_0077: ldc.i4.5
L_0078: add
L_0079: stloc.s 8 (System.Int32)
L_007b: ldloc.s 4 (System.Single[][])
L_007d: ldloc.s 6 (System.Int32)
L_007f: ldarg.0
L_0080: call BattleTech.AttackDirector get_Director()
L_0085: callvirt BattleTech.CombatGameState get_Combat()
L_008a: callvirt NetworkRandom get_NetworkRandom()
L_008f: ldloc.s 8 (System.Int32)
L_0091: callvirt Single[] GetRandomCache(Int32)
L_0096: stelem.ref
L_0097: ldloc.s 5 (System.Int32[])
L_0099: ldloc.s 6 (System.Int32)
L_009b: ldc.i4.0
L_009c: stelem.i4
L_009d: ldloc.s 6 (System.Int32)
L_009f: ldc.i4.1
L_00a0: add
L_00a1: stloc.s 6 (System.Int32)
L_00a3: Label2
L_00a3: ldloc.s 6 (System.Int32)
L_00a5: ldloc.3
L_00a6: blt Label3
L_00ab: ldarg.0
L_00ac: ldfld System.Single[][][] randomCache
L_00b1: ldloc.1
L_00b2: ldloc.s 4 (System.Single[][])
L_00b4: stelem.ref
L_00b5: ldarg.0
L_00b6: ldfld System.Int32[][] randomCacheValuesUsed
L_00bb: ldloc.1
L_00bc: ldloc.s 5 (System.Int32[])
L_00be: stelem.ref
L_00bf: ldloc.1
L_00c0: ldc.i4.1
L_00c1: add
L_00c2: stloc.1
L_00c3: Label1
L_00c3: ldloc.1
L_00c4: ldloc.0
L_00c5: blt Label4
L_00ca: ldarg.0
L_00cb: ldloc.0
L_00cc: newarr System.Int32[][]
L_00d1: stfld System.Int32[][][] varianceCache
L_00d6: ldarg.0
L_00d7: ldloc.0
L_00d8: newarr System.Int32[]
L_00dd: stfld System.Int32[][] varianceCacheValuesUsed
L_00e2: ldc.i4.0
L_00e3: stloc.s 9 (System.Int32)
L_00e5: br Label5
L_00ea: Label12
L_00ea: ldarg.0
L_00eb: ldfld System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] sortedWeapons
L_00f0: ldloc.s 9 (System.Int32)
L_00f2: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Item(Int32)
L_00f7: stloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00f9: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_00fb: callvirt Int32 get_Count()
L_0100: stloc.s 11 (System.Int32)
L_0102: ldloc.s 11 (System.Int32)
L_0104: newarr System.Int32[]
L_0109: stloc.s 12 (System.Int32[][])
L_010b: ldloc.s 11 (System.Int32)
L_010d: newarr System.Int32
L_0112: stloc.s 13 (System.Int32[])
L_0114: ldc.i4.0
L_0115: stloc.s 14 (System.Int32)
L_0117: br Label6
L_011c: Label11
L_011c: ldloc.s 10 (System.Collections.Generic.List`1[BattleTech.Weapon])
L_011e: ldloc.s 14 (System.Int32)
L_0120: callvirt BattleTech.Weapon get_Item(Int32)
L_0125: dup
L_0126: call Int32 ShotsWhenFiredRandomizerOverider(BattleTech.Weapon)
L_012b: stloc.s 15 (System.Int32)
L_012d: callvirt Int32 get_DamageVariance()
L_0132: stloc.s 16 (System.Int32)
L_0134: ldloc.s 15 (System.Int32)
L_0136: newarr System.Int32
L_013b: stloc.s 17 (System.Int32[])
L_013d: ldc.i4.0
L_013e: stloc.s 18 (System.Int32)
L_0140: br Label7
L_0145: Label10
L_0145: ldarg.0
L_0146: call BattleTech.AttackDirector get_Director()
L_014b: callvirt BattleTech.CombatGameState get_Combat()
L_0150: callvirt NetworkRandom get_NetworkRandom()
L_0155: ldloc.s 16 (System.Int32)
L_0157: callvirt Int32[] GetFudgeCache(Int32)
L_015c: stloc.s 19 (System.Int32[])
L_015e: ldc.i4.0
L_015f: stloc.s 20 (System.Int32)
L_0161: ldc.i4.0
L_0162: stloc.s 21 (System.Int32)
L_0164: br Label8
L_0169: Label9
L_0169: ldloc.s 20 (System.Int32)
L_016b: ldloc.s 19 (System.Int32[])
L_016d: ldloc.s 21 (System.Int32)
L_016f: ldelem.i4
L_0170: add
L_0171: stloc.s 20 (System.Int32)
L_0173: ldloc.s 21 (System.Int32)
L_0175: ldc.i4.1
L_0176: add
L_0177: stloc.s 21 (System.Int32)
L_0179: Label8
L_0179: ldloc.s 21 (System.Int32)
L_017b: ldloc.s 16 (System.Int32)
L_017d: blt Label9
L_0182: ldloc.s 17 (System.Int32[])
L_0184: ldloc.s 18 (System.Int32)
L_0186: ldloc.s 20 (System.Int32)
L_0188: stelem.i4
L_0189: ldloc.s 18 (System.Int32)
L_018b: ldc.i4.1
L_018c: add
L_018d: stloc.s 18 (System.Int32)
L_018f: Label7
L_018f: ldloc.s 18 (System.Int32)
L_0191: ldloc.s 15 (System.Int32)
L_0193: blt Label10
L_0198: ldloc.s 12 (System.Int32[][])
L_019a: ldloc.s 14 (System.Int32)
L_019c: ldloc.s 17 (System.Int32[])
L_019e: stelem.ref
L_019f: ldloc.s 13 (System.Int32[])
L_01a1: ldloc.s 14 (System.Int32)
L_01a3: ldc.i4.0
L_01a4: stelem.i4
L_01a5: ldloc.s 14 (System.Int32)
L_01a7: ldc.i4.1
L_01a8: add
L_01a9: stloc.s 14 (System.Int32)
L_01ab: Label6
L_01ab: ldloc.s 14 (System.Int32)
L_01ad: ldloc.s 11 (System.Int32)
L_01af: blt Label11
L_01b4: ldarg.0
L_01b5: ldfld System.Int32[][][] varianceCache
L_01ba: ldloc.s 9 (System.Int32)
L_01bc: ldloc.s 12 (System.Int32[][])
L_01be: stelem.ref
L_01bf: ldarg.0
L_01c0: ldfld System.Int32[][] varianceCacheValuesUsed
L_01c5: ldloc.s 9 (System.Int32)
L_01c7: ldloc.s 13 (System.Int32[])
L_01c9: stelem.ref
L_01ca: ldloc.s 9 (System.Int32)
L_01cc: ldc.i4.1
L_01cd: add
L_01ce: stloc.s 9 (System.Int32)
L_01d0: Label5
L_01d0: ldloc.s 9 (System.Int32)
L_01d2: ldloc.0
L_01d3: blt Label12
L_01d8: Label0
L_01d8: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldarg.0
L_0022: call Boolean Prefix(BattleTech.CombatGameState)
L_0027: brfalse Label0
L_002c: ldsfld HBS.Logging.ILog gameInfoLogger
L_0031: ldstr "CombatGameState Destroyed: {0}"
L_0036: call System.DateTime get_UtcNow()
L_003b: stloc.0
L_003c: ldloca.s 0 (System.DateTime)
L_003e: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0043: call System.String ToString(System.String)
L_0048: call System.String Format(System.String, System.Object)
L_004d: callvirt Void Log(System.Object)
L_0052: ldarg.0
L_0053: call MessageCenter get_MessageCenter()
L_0058: brfalse Label1
L_005d: ldarg.0
L_005e: call MessageCenter get_MessageCenter()
L_0063: newobj Void .ctor()
L_0068: dup
L_0069: call BattleTech.GameInstance get_BattleTechGame()
L_006e: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0073: callvirt Boolean IsNetworkGameActive()
L_0078: callvirt Void set_IsNetworkGame(Boolean)
L_007d: callvirt Void PublishMessage(MessageCenterMessage)
L_0082: Label1
L_0082: ldarg.0
L_0083: call BattleTech.StackManager get_StackManager()
L_0088: brfalse Label2
L_008d: ldarg.0
L_008e: call BattleTech.StackManager get_StackManager()
L_0093: callvirt Void OnCombatGameDestroyed()
L_0098: ldarg.0
L_0099: ldnull
L_009a: call Void set_StackManager(BattleTech.StackManager)
L_009f: Label2
L_009f: ldarg.0
L_00a0: call BattleTech.TurnDirector get_TurnDirector()
L_00a5: brfalse Label3
L_00aa: ldarg.0
L_00ab: call BattleTech.TurnDirector get_TurnDirector()
L_00b0: callvirt Void OnCombatGameDestroyed()
L_00b5: Label3
L_00b5: ldarg.0
L_00b6: call BattleTech.InvocationHandler get_InvocationHandler()
L_00bb: brfalse Label4
L_00c0: ldarg.0
L_00c1: call BattleTech.InvocationHandler get_InvocationHandler()
L_00c6: callvirt Void OnCombatGameDestroyed()
L_00cb: Label4
L_00cb: ldarg.0
L_00cc: call MessageCenter get_MessageCenter()
L_00d1: brfalse Label5
L_00d6: ldarg.0
L_00d7: call MessageCenter get_MessageCenter()
L_00dc: ldc.i4.3
L_00dd: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00e2: Label5
L_00e2: ldarg.0
L_00e3: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00e8: brfalse Label6
L_00ed: ldarg.0
L_00ee: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00f3: callvirt Void Dispose()
L_00f8: Label6
L_00f8: call Boolean get_HasInstance()
L_00fd: brfalse Label7
L_0102: call HBS.DebugConsole.DebugConsole get_Instance()
L_0107: ldarg.0
L_0108: ldftn Void DebugConsoleOnBeforeDump()
L_010e: newobj Void .ctor(Object, IntPtr)
L_0113: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0118: Label7
L_0118: call Boolean get_HasInstance()
L_011d: brfalse Label8
L_0122: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0127: callvirt Void OnCombatSceneEnd()
L_012c: Label8
L_012c: ldnull
L_012d: call Void set_destructionConstantsComponent(DestructionConstants)
L_0132: call Void ClearStaticData()
L_0137: call Void ClearStaticData()
L_013c: call Void ClearStaticData()
L_0141: call Void ClearStaticData()
L_0146: call Void ClearStaticData()
L_014b: ldsfld HBS.Logging.ILog gameInfoLogger
L_0150: ldstr "CombatGameState destroyed: {0}"
L_0155: call System.DateTime get_UtcNow()
L_015a: stloc.0
L_015b: ldloca.s 0 (System.DateTime)
L_015d: ldstr "ddd MMM d yyyy HH:mm:ss"
L_0162: call System.String ToString(System.String)
L_0167: call System.String Format(System.String, System.Object)
L_016c: callvirt Void Log(System.Object)
L_0171: Label0
L_0171: ldarg.0
L_0172: call Void Postfix(BattleTech.CombatGameState)
L_0177: ret
DONE

### Patch BattleTech.UI.SelectionState, Boolean get_CanDeselect()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean Prefix(BattleTech.UI.SelectionState, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call BattleTech.CombatGameState get_Combat()
L_0019: callvirt BattleTech.TurnDirector get_TurnDirector()
L_001e: callvirt Boolean get_IsInterleaved()
L_0023: brfalse Label1
L_0028: ldarg.0
L_0029: call BattleTech.AbstractActor get_SelectedActor()
L_002e: callvirt Boolean get_HasBegunActivation()
L_0033: brtrue Label2
L_0038: ldarg.0
L_0039: call BattleTech.AbstractActor get_SelectedActor()
L_003e: callvirt Boolean get_StoodUpThisRound()
L_0043: ldc.i4.0
L_0044: ceq
L_0046: br Label5
L_004b: Label2
L_004b: ldc.i4.0
L_004c: br Label6
L_0051: Label1
L_0051: ldarg.0
L_0052: call BattleTech.AbstractActor get_SelectedActor()
L_0057: callvirt Boolean get_HasBegunActivation()
L_005c: brfalse Label3
L_0061: ldarg.0
L_0062: call BattleTech.IStackSequence get_Orders()
L_0067: brfalse Label4
L_006c: ldarg.0
L_006d: callvirt Boolean get_ConsumesFiring()
L_0072: br Label7
L_0077: Label4
L_0077: ldc.i4.0
L_0078: br Label8
L_007d: Label3
L_007d: ldc.i4.1
L_007e: Label5
L_007e: Label6
L_007e: Label7
L_007e: Label8
L_007e: stloc 0 (System.Boolean)
L_007f: Label0
L_007f: ldloc 0 (System.Boolean)
L_0080: ret
DONE

### Patch BattleTech.UI.SelectionStateMoveBase, Boolean CreateMoveOrders(Boolean)
L_0000: Local var 0: BattleTech.Mech
L_0000: Local var 1: MessageCenterMessage
L_0000: Local var 2: System.Boolean
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_SelectedActor()
L_0006: isinst BattleTech.Mech
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label8
L_0018: Label1
L_0018: ldnull
L_0019: stloc.1
L_001a: ldarg.0
L_001b: call BattleTech.UI.CombatHUD get_HUD()
L_0020: callvirt BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_0025: ldc.i4.2
L_0026: callvirt Boolean ConfirmAbilities(ActivationTiming)
L_002b: stloc.2
L_002c: ldloc.2
L_002d: brtrue Label2
L_0032: ldarg.0
L_0033: call BattleTech.UI.CombatHUD get_HUD()
L_0038: callvirt BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_003d: callvirt BattleTech.UI.CombatHUDActionButton get_DoneWithMechButton()
L_0042: callvirt Boolean get_IsTutorialSuppressed()
L_0047: brfalse Label3
L_004c: ldarg.0
L_004d: call BattleTech.FiringPreviewManager get_FiringPreview()
L_0052: ldarg.0
L_0053: call BattleTech.AbstractActor get_SelectedActor()
L_0058: ldarg.0
L_0059: callvirt UnityEngine.Vector3 get_PreviewPos()
L_005e: ldarg.0
L_005f: callvirt UnityEngine.Quaternion get_PreviewRot()
L_0064: ldc.i4.0
L_0065: ldc.i4.0
L_0066: callvirt Void Recalc(BattleTech.AbstractActor, UnityEngine.Vector3, UnityEngine.Quaternion, Boolean, Boolean)
L_006b: ldarg.0
L_006c: call BattleTech.FiringPreviewManager get_FiringPreview()
L_0071: callvirt System.Collections.Generic.List`1[BattleTech.ICombatant] get_AllPossibleTargets()
L_0076: callvirt Int32 get_Count()
L_007b: ldc.i4.1
L_007c: bge Label4
L_0081: ldc.i4.1
L_0082: stloc.2
L_0083: Label2
L_0083: Label3
L_0083: Label4
L_0083: ldarg.1
L_0084: brfalse Label5
L_0089: ldloc.0
L_008a: ldnull
L_008b: ldloc.2
L_008c: newobj Void .ctor(Mech, ICombatant, Boolean)
L_0091: stloc.1
L_0092: br Label6
L_0097: Label5
L_0097: ldloc.0
L_0098: ldloc.2
L_0099: newobj Void .ctor(Mech, Boolean)
L_009e: stloc.1
L_009f: Label6
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: call BattleTech.CombatGameState get_Combat()
L_00a6: callvirt MessageCenter get_MessageCenter()
L_00ab: ldloc.1
L_00ac: call Void PublishInvocation(MessageCenter, MessageCenterMessage)
L_00b1: ldarg.0
L_00b2: callvirt Void OnInactivate()
L_00b7: ldarg.0
L_00b8: call BattleTech.UI.CombatHUD get_HUD()
L_00bd: ldc.i4 218
L_00c2: callvirt Void PlayAudioEvent(AudioEventList_ui)
L_00c7: ldarg.0
L_00c8: call BattleTech.CombatGameState get_Combat()
L_00cd: callvirt BattleTech.TurnDirector get_TurnDirector()
L_00d2: call Boolean IsInterleaved(BattleTech.TurnDirector)
L_00d7: brtrue Label7
L_00dc: ldarg.0
L_00dd: call BattleTech.UI.CombatHUD get_HUD()
L_00e2: callvirt BattleTech.UI.CombatSelectionHandler get_SelectionHandler()
L_00e7: callvirt Void AutoSelectActor()
L_00ec: Label7
L_00ec: ldc.i4.1
L_00ed: Label8
L_00ed: ret
DONE

### Patch BattleTech.AbstractActorMovementInvocation, Boolean Invoke(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.ActorMovementSequence
L_0000: ldsfld HBS.Logging.ILog logger
L_0005: ldstr "Invoking a MOVE!"
L_000a: callvirt Void Log(System.Object)
L_000f: ldarg.1
L_0010: ldarg.0
L_0011: call System.String get_ActorGUID()
L_0016: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_001b: stloc.0
L_001c: ldloc.0
L_001d: brtrue Label1
L_0022: ldsfld HBS.Logging.ILog logger
L_0027: ldstr "MechMovement.Invoke Actor with GUID {0} not found!"
L_002c: ldarg.0
L_002d: call System.String get_ActorGUID()
L_0032: call System.String Format(System.String, System.Object)
L_0037: callvirt Void LogError(System.Object)
L_003c: ldc.i4.0
L_003d: br Label6
L_0042: Label1
L_0042: ldnull
L_0043: stloc.1
L_0044: ldarg.0
L_0045: call System.String get_MeleeTargetGUID()
L_004a: call Boolean IsNullOrEmpty(System.String)
L_004f: brtrue Label2
L_0054: ldarg.1
L_0055: ldarg.0
L_0056: call System.String get_MeleeTargetGUID()
L_005b: ldc.i4.0
L_005c: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0061: stloc.1
L_0062: ldloc.1
L_0063: brtrue Label3
L_0068: ldsfld HBS.Logging.ILog logger
L_006d: ldstr "MechMovement.Invoke ICombatant with GUID {0} not found!"
L_0072: ldarg.0
L_0073: call System.String get_MeleeTargetGUID()
L_0078: call System.String Format(System.String, System.Object)
L_007d: callvirt Void LogError(System.Object)
L_0082: ldc.i4.0
L_0083: br Label7
L_0088: Label2
L_0088: Label3
L_0088: ldarg.1
L_0089: callvirt BattleTech.TurnDirector get_TurnDirector()
L_008e: callvirt Boolean get_IsInterleaved()
L_0093: brtrue Label4
L_0098: ldarg.0
L_0099: call BattleTech.MoveType get_MoveType()
L_009e: ldc.i4.2
L_009f: beq Label5
L_00a4: ldloc.0
L_00a5: ldc.i4.1
L_00a6: call Void AutoBrace(BattleTech.AbstractActor, Boolean)
L_00ab: Label4
L_00ab: Label5
L_00ab: ldloc.0
L_00ac: ldarg.0
L_00ad: call System.Collections.Generic.List`1[BattleTech.WayPoint] get_Waypoints()
L_00b2: ldarg.0
L_00b3: call UnityEngine.Vector3 get_FinalOrientation()
L_00b8: ldarg.0
L_00b9: call BattleTech.MoveType get_MoveType()
L_00be: ldloc.1
L_00bf: ldarg.0
L_00c0: call Boolean get_AbilityConsumesFiring()
L_00c5: newobj Void .ctor(AbstractActor, List`1, Vector3, MoveType, ICombatant, Boolean)
L_00ca: stloc.2
L_00cb: ldarg.0
L_00cc: ldarg.1
L_00cd: callvirt MessageCenter get_MessageCenter()
L_00d2: ldloc.2
L_00d3: ldarg.0
L_00d4: call Void PublishStackSequence(MessageCenter, BattleTech.IStackSequence, BattleTech.InvocationMessage)
L_00d9: ldc.i4.1
L_00da: Label6
L_00da: Label7
L_00da: ret
DONE

### Patch BattleTech.AbstractActor, Void ResolveAttackSequence(System.String, Int32, Int32, BattleTech.AttackDirection)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Effect, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.AbstractActor)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldarg 1
L_0012: ldarg 2
L_0018: ldarg 3
L_001e: ldarg 4
L_0024: call Boolean Prefix(BattleTech.AbstractActor, System.String, Int32, Int32, BattleTech.AttackDirection)
L_0029: brfalse Label0
L_002e: ldarg.0
L_002f: call Int32 get_EvasivePipsCurrent()
L_0034: stloc.0
L_0035: ldarg.0
L_0036: ldc.i4.1
L_0037: call Void ConsumeEvasivePip(Boolean)
L_003c: ldarg.0
L_003d: call Int32 get_EvasivePipsCurrent()
L_0042: ldloc.0
L_0043: bge Label1
L_0048: ldarg.0
L_0049: callvirt Boolean get_IsDead()
L_004e: brtrue Label2
L_0053: ldarg.0
L_0054: call Boolean get_IsFlaggedForDeath()
L_0059: brtrue Label3
L_005e: ldarg.0
L_005f: call BattleTech.CombatGameState get_Combat()
L_0064: callvirt MessageCenter get_MessageCenter()
L_0069: ldarg.0
L_006a: call System.String get_GUID()
L_006f: ldarg.0
L_0070: call System.String get_GUID()
L_0075: ldstr "-1 EVASION"
L_007a: ldc.i4.2
L_007b: newobj Void .ctor(String, String, String, MessageNature)
L_0080: callvirt Void PublishMessage(MessageCenterMessage)
L_0085: Label1
L_0085: Label2
L_0085: Label3
L_0085: ldarg.0
L_0086: call BattleTech.CombatGameState get_Combat()
L_008b: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0090: ldarg.2
L_0091: callvirt AttackSequence GetAttackSequence(Int32)
L_0096: stloc.1
L_0097: ldloc.1
L_0098: brfalse Label4
L_009d: ldloc.1
L_009e: ldarg.0
L_009f: call System.String get_GUID()
L_00a4: callvirt Boolean GetAttackDidDamage(System.String)
L_00a9: brtrue Label5
L_00ae: br Label13
L_00b3: Label5
L_00b3: ldarg.0
L_00b4: call BattleTech.CombatGameState get_Combat()
L_00b9: callvirt BattleTech.EffectManager get_EffectManager()
L_00be: ldarg.0
L_00bf: callvirt System.Collections.Generic.List`1[BattleTech.Effect] GetAllEffectsTargeting(System.Object)
L_00c4: ldsfld System.Predicate`1[BattleTech.Effect] <>9__690_0
L_00c9: dup
L_00ca: brtrue Label6
L_00cf: pop
L_00d0: ldsfld BattleTech.AbstractActor+<>c <>9
L_00d5: ldftn Boolean <ResolveAttackSequence>b__690_0(BattleTech.Effect)
L_00db: newobj Void .ctor(Object, IntPtr)
L_00e0: dup
L_00e1: stsfld System.Predicate`1[BattleTech.Effect] <>9__690_0
L_00e6: Label6
L_00e6: callvirt System.Collections.Generic.List`1[BattleTech.Effect] FindAll(System.Predicate`1[BattleTech.Effect])
L_00eb: stloc.2
L_00ec: ldc.i4.0
L_00ed: stloc.3
L_00ee: br Label7
L_00f3: Label8
L_00f3: ldloc.2
L_00f4: ldloc.3
L_00f5: callvirt BattleTech.Effect get_Item(Int32)
L_00fa: ldloc.1
L_00fb: ldfld BattleTech.AbstractActor attacker
L_0100: ldarg.0
L_0101: callvirt Void OnEffectTakeDamage(BattleTech.AbstractActor, BattleTech.AbstractActor)
L_0106: ldloc.3
L_0107: ldc.i4.1
L_0108: add
L_0109: stloc.3
L_010a: Label7
L_010a: ldloc.3
L_010b: ldloc.2
L_010c: callvirt Int32 get_Count()
L_0111: blt Label8
L_0116: ldloc.1
L_0117: ldfld System.Boolean isMelee
L_011c: brfalse Label9
L_0121: ldloc.1
L_0122: ldfld BattleTech.AbstractActor attacker
L_0127: callvirt BattleTech.StatCollection get_StatCollection()
L_012c: ldstr "MeleeHitPushBackPhases"
L_0131: callvirt Int32 GetValue[Int32](System.String)
L_0136: stloc.s 4 (System.Int32)
L_0138: ldloc.s 4 (System.Int32)
L_013a: ldc.i4.0
L_013b: ble Label10
L_0140: ldc.i4.0
L_0141: stloc.s 5 (System.Int32)
L_0143: br Label11
L_0148: Label12
L_0148: ldarg.0
L_0149: ldarg.1
L_014a: ldarg.3
L_014b: ldc.i4.0
L_014c: call Void ForceUnitOnePhaseDown(System.String, Int32, Boolean)
L_0151: ldloc.s 5 (System.Int32)
L_0153: ldc.i4.1
L_0154: add
L_0155: stloc.s 5 (System.Int32)
L_0157: Label11
L_0157: ldloc.s 5 (System.Int32)
L_0159: ldloc.s 4 (System.Int32)
L_015b: blt Label12
L_0160: Label4
L_0160: Label9
L_0160: Label10
L_0160: Label13
L_0160: Label0
L_0160: ldarg.0
L_0161: ldarg 1
L_0167: ldarg 2
L_016d: ldarg 3
L_0173: ldarg 4
L_0179: call Void Postfix(BattleTech.AbstractActor, System.String, Int32, Int32, BattleTech.AttackDirection)
L_017e: ret
DONE

### Patch BattleTech.UI.SelectionState, BattleTech.UI.SelectionState GetNewSelectionStateByType(BattleTech.UI.SelectionType, BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDActionButton, BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.UI.SelectionState
L_0000: ldnull
L_0001: stloc 0 (BattleTech.UI.SelectionState)
L_0002: ldarg 0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldloca 0 (BattleTech.UI.SelectionState)
L_0022: call Boolean Prefix(BattleTech.UI.SelectionType, BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDActionButton, BattleTech.AbstractActor, BattleTech.UI.SelectionState ByRef)
L_0027: brfalse Label0
L_002c: ldarg.0
L_002d: switch Labels1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33
L_00b6: br Label34
L_00bb: Label11
L_00bb: ldarg.1
L_00bc: ldarg.2
L_00bd: ldarg.3
L_00be: ldarg.s 4
L_00c0: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00c5: br Label35
L_00ca: Label2
L_00ca: ldarg.1
L_00cb: ldarg.2
L_00cc: ldarg.3
L_00cd: ldarg.s 4
L_00cf: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00d4: br Label36
L_00d9: Label8
L_00d9: ldarg.1
L_00da: ldarg.2
L_00db: ldarg.3
L_00dc: ldarg.s 4
L_00de: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00e3: br Label37
L_00e8: Label9
L_00e8: ldarg.1
L_00e9: ldarg.2
L_00ea: ldarg.3
L_00eb: ldarg.s 4
L_00ed: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_00f2: br Label38
L_00f7: Label10
L_00f7: ldarg.1
L_00f8: ldarg.2
L_00f9: ldarg.3
L_00fa: ldarg.s 4
L_00fc: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0101: br Label39
L_0106: Label18
L_0106: ldarg.1
L_0107: ldarg.2
L_0108: ldarg.3
L_0109: ldarg.s 4
L_010b: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0110: br Label40
L_0115: Label21
L_0115: ldarg.1
L_0116: ldarg.2
L_0117: ldarg.3
L_0118: ldarg.s 4
L_011a: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_011f: br Label41
L_0124: Label32
L_0124: ldarg.1
L_0125: ldarg.2
L_0126: ldarg.3
L_0127: ldarg.s 4
L_0129: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_012e: br Label42
L_0133: Label22
L_0133: ldarg.1
L_0134: ldarg.2
L_0135: ldarg.3
L_0136: ldarg.s 4
L_0138: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_013d: br Label43
L_0142: Label4
L_0142: ldarg.1
L_0143: ldarg.2
L_0144: ldarg.3
L_0145: ldarg.s 4
L_0147: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_014c: br Label44
L_0151: Label6
L_0151: ldarg.1
L_0152: ldarg.2
L_0153: ldarg.3
L_0154: ldarg.s 4
L_0156: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_015b: br Label45
L_0160: Label7
L_0160: ldarg.1
L_0161: ldarg.2
L_0162: ldarg.3
L_0163: ldarg.s 4
L_0165: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_016a: br Label46
L_016f: Label23
L_016f: ldarg.1
L_0170: ldarg.2
L_0171: ldarg.3
L_0172: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0177: br Label47
L_017c: Label24
L_017c: ldarg.1
L_017d: ldarg.2
L_017e: ldarg.3
L_017f: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0184: br Label48
L_0189: Label16
L_0189: ldarg.1
L_018a: ldarg.2
L_018b: ldarg.3
L_018c: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_0191: br Label49
L_0196: Label19
L_0196: ldarg.1
L_0197: ldarg.2
L_0198: ldarg.3
L_0199: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_019e: br Label50
L_01a3: Label17
L_01a3: ldarg.1
L_01a4: ldarg.2
L_01a5: ldarg.3
L_01a6: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01ab: br Label51
L_01b0: Label26
L_01b0: ldarg.1
L_01b1: ldarg.2
L_01b2: ldarg.3
L_01b3: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01b8: br Label52
L_01bd: Label25
L_01bd: ldarg.1
L_01be: ldarg.2
L_01bf: ldarg.3
L_01c0: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01c5: br Label53
L_01ca: Label27
L_01ca: ldarg.1
L_01cb: ldarg.2
L_01cc: ldarg.3
L_01cd: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01d2: br Label54
L_01d7: Label28
L_01d7: ldarg.1
L_01d8: ldarg.2
L_01d9: ldarg.3
L_01da: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01df: br Label55
L_01e4: Label29
L_01e4: ldarg.1
L_01e5: ldarg.2
L_01e6: ldarg.3
L_01e7: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton)
L_01ec: br Label56
L_01f1: Label3
L_01f1: ldarg.1
L_01f2: ldarg.2
L_01f3: ldarg.3
L_01f4: ldarg.s 4
L_01f6: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_01fb: br Label57
L_0200: Label31
L_0200: ldarg.1
L_0201: ldarg.2
L_0202: ldarg.3
L_0203: ldarg.s 4
L_0205: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_020a: br Label58
L_020f: Label33
L_020f: ldarg.1
L_0210: ldarg.2
L_0211: ldarg.3
L_0212: ldarg.s 4
L_0214: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0219: br Label59
L_021e: Label1
L_021e: ldnull
L_021f: br Label60
L_0224: Label5
L_0224: Label12
L_0224: Label13
L_0224: Label14
L_0224: Label15
L_0224: Label20
L_0224: Label30
L_0224: Label34
L_0224: ldstr "Error:: Need to update GetNewSelectionStateByType for type "
L_0229: ldarg.0
L_022a: box BattleTech.UI.SelectionType
L_022f: ldstr "!"
L_0234: call System.String Concat(System.Object, System.Object, System.Object)
L_0239: call Void LogError(System.Object)
L_023e: ldnull
L_023f: Label35
L_023f: Label36
L_023f: Label37
L_023f: Label38
L_023f: Label39
L_023f: Label40
L_023f: Label41
L_023f: Label42
L_023f: Label43
L_023f: Label44
L_023f: Label45
L_023f: Label46
L_023f: Label47
L_023f: Label48
L_023f: Label49
L_023f: Label50
L_023f: Label51
L_023f: Label52
L_023f: Label53
L_023f: Label54
L_023f: Label55
L_023f: Label56
L_023f: Label57
L_023f: Label58
L_023f: Label59
L_023f: Label60
L_023f: stloc 0 (BattleTech.UI.SelectionState)
L_0240: Label0
L_0240: ldloc 0 (BattleTech.UI.SelectionState)
L_0241: ret
DONE

### Patch BattleTech.UI.CombatSelectionHandler, Boolean TrySelectActor(BattleTech.AbstractActor, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldarg 2
L_0013: call Boolean Prefix(BattleTech.UI.CombatSelectionHandler, BattleTech.AbstractActor, Boolean)
L_0018: brfalse Label0
L_001d: ldarg.1
L_001e: brtrue Label1
L_0023: ldc.i4.0
L_0024: br Label33
L_0029: Label1
L_0029: ldarg.0
L_002a: call BattleTech.CombatGameState get_Combat()
L_002f: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0034: callvirt Boolean get_IsActive()
L_0039: brtrue Label2
L_003e: ldc.i4.0
L_003f: br Label34
L_0044: Label2
L_0044: ldarg.1
L_0045: callvirt Boolean get_HasBegunActivation()
L_004a: brfalse Label3
L_004f: ldarg.1
L_0050: callvirt Boolean get_HasActivatedThisRound()
L_0055: brtrue Label4
L_005a: ldc.i4.0
L_005b: br Label35
L_0060: Label3
L_0060: Label4
L_0060: ldarg.0
L_0061: call BattleTech.AbstractActor get_SelectedActor()
L_0066: brfalse Label5
L_006b: ldarg.0
L_006c: call Boolean get_IsSelectedActorChangeable()
L_0071: brfalse Label6
L_0076: Label5
L_0076: ldarg.1
L_0077: callvirt BattleTech.Team get_team()
L_007c: ldarg.0
L_007d: call BattleTech.CombatGameState get_Combat()
L_0082: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0087: bne.un Label7
L_008c: ldarg.1
L_008d: ldarg.0
L_008e: call BattleTech.AbstractActor get_SelectedActor()
L_0093: beq Label8
L_0098: ldarg.0
L_0099: call Boolean get_IsCommandButtonActive()
L_009e: brfalse Label9
L_00a3: ldarg.0
L_00a4: call Void UninvokeCommandTray()
L_00a9: br Label10
L_00ae: Label9
L_00ae: ldarg.0
L_00af: call Void ClearSelectionStack()
L_00b4: Label10
L_00b4: ldarg.0
L_00b5: call System.Collections.Generic.List`1[BattleTech.UI.CombatHUDActionButton] get_ActivatedAbilityButtons()
L_00ba: callvirt Void Clear()
L_00bf: ldarg.0
L_00c0: call BattleTech.CombatGameState get_Combat()
L_00c5: callvirt MessageCenter get_MessageCenter()
L_00ca: ldarg.1
L_00cb: callvirt System.String get_GUID()
L_00d0: newobj Void .ctor(String)
L_00d5: callvirt Void PublishMessage(MessageCenterMessage)
L_00da: ldarg.1
L_00db: callvirt Boolean get_IsAvailableThisPhase()
L_00e0: brfalse Label11
L_00e5: ldarg.1
L_00e6: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_00eb: brtrue Label12
L_00f0: ldarg.1
L_00f1: callvirt Boolean get_IsShutDown()
L_00f6: brtrue Label13
L_00fb: ldarg.1
L_00fc: callvirt Boolean get_IsProne()
L_0101: brfalse Label14
L_0106: Label13
L_0106: ldarg.1
L_0107: callvirt Boolean get_IsShutDown()
L_010c: brfalse Label15
L_0111: ldarg.0
L_0112: ldarg.0
L_0113: call BattleTech.CombatGameState get_Combat()
L_0118: ldarg.0
L_0119: call BattleTech.UI.CombatHUD get_HUD()
L_011e: ldnull
L_011f: ldarg.1
L_0120: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_0125: call Void addNewState(BattleTech.UI.SelectionState)
L_012a: br Label16
L_012f: Label15
L_012f: ldarg.1
L_0130: callvirt Boolean get_IsProne()
L_0135: brfalse Label17
L_013a: ldarg.0
L_013b: ldarg.0
L_013c: call BattleTech.CombatGameState get_Combat()
L_0141: ldarg.0
L_0142: call BattleTech.UI.CombatHUD get_HUD()
L_0147: ldnull
L_0148: ldarg.1
L_0149: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_014e: call Void addNewState(BattleTech.UI.SelectionState)
L_0153: br Label18
L_0158: Label14
L_0158: ldarg.0
L_0159: call BattleTech.UI.CombatHUD get_HUD()
L_015e: callvirt BattleTech.UI.CombatHUDActionButton get_MoveButton()
L_0163: callvirt Boolean get_IsTutorialSuppressed()
L_0168: brfalse Label19
L_016d: ldarg.0
L_016e: call BattleTech.UI.CombatHUD get_HUD()
L_0173: callvirt BattleTech.UI.CombatHUDActionButton get_SprintButton()
L_0178: ldfld System.Boolean isTutorialHighlighted
L_017d: brfalse Label20
L_0182: ldarg.0
L_0183: ldarg.1
L_0184: call Void AddSprintState(BattleTech.AbstractActor)
L_0189: br Label21
L_018e: Label20
L_018e: ldarg.0
L_018f: call BattleTech.UI.CombatHUD get_HUD()
L_0194: callvirt BattleTech.UI.CombatHUDActionButton get_JumpButton()
L_0199: ldfld System.Boolean isTutorialHighlighted
L_019e: brfalse Label22
L_01a3: ldarg.0
L_01a4: ldarg.1
L_01a5: call Void AddJumpState(BattleTech.AbstractActor)
L_01aa: br Label23
L_01af: Label22
L_01af: ldarg.0
L_01b0: ldarg.1
L_01b1: call Void AddFireState(BattleTech.AbstractActor)
L_01b6: br Label24
L_01bb: Label19
L_01bb: ldarg.0
L_01bc: call BattleTech.CombatGameState get_Combat()
L_01c1: callvirt BattleTech.TurnDirector get_TurnDirector()
L_01c6: callvirt Boolean get_IsInterleaved()
L_01cb: brtrue Label25
L_01d0: ldarg.1
L_01d1: callvirt Boolean get_CanSprint()
L_01d6: brtrue Label26
L_01db: Label25
L_01db: ldarg.0
L_01dc: ldarg.1
L_01dd: call Void AddMoveState(BattleTech.AbstractActor)
L_01e2: br Label27
L_01e7: Label26
L_01e7: ldarg.0
L_01e8: ldarg.1
L_01e9: call Void AddSprintState(BattleTech.AbstractActor)
L_01ee: Label16
L_01ee: Label17
L_01ee: Label18
L_01ee: Label21
L_01ee: Label23
L_01ee: Label24
L_01ee: Label27
L_01ee: ldarg.2
L_01ef: brfalse Label28
L_01f4: ldc.i4.s 64
L_01f6: ldarg.1
L_01f7: ldnull
L_01f8: ldnull
L_01f9: ldc.i4.1
L_01fa: call Boolean PlayPilotVO(BattleTech.VOEvents, BattleTech.AbstractActor, EventCallback, System.Object, Boolean)
L_01ff: pop
L_0200: Label28
L_0200: ldarg.1
L_0201: callvirt BattleTech.Pathing get_Pathing()
L_0206: callvirt Boolean get_ArePathGridsComplete()
L_020b: brtrue Label29
L_0210: ldarg.1
L_0211: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_0216: brtrue Label30
L_021b: ldarg.0
L_021c: call BattleTech.CombatGameState get_Combat()
L_0221: callvirt BattleTech.PathingManager get_PathingManager()
L_0226: ldarg.1
L_0227: callvirt BattleTech.Pathing get_Pathing()
L_022c: callvirt Void AddNewBlockingPath(BattleTech.Pathing)
L_0231: br Label31
L_0236: Label11
L_0236: Label12
L_0236: ldarg.0
L_0237: ldarg.0
L_0238: call BattleTech.CombatGameState get_Combat()
L_023d: ldarg.0
L_023e: call BattleTech.UI.CombatHUD get_HUD()
L_0243: ldnull
L_0244: ldarg.1
L_0245: newobj Void .ctor(CombatGameState, CombatHUD, CombatHUDActionButton, AbstractActor)
L_024a: call Void addNewState(BattleTech.UI.SelectionState)
L_024f: Label29
L_024f: Label30
L_024f: Label31
L_024f: call BattleTech.Save.CloudUserSettings get_CloudSettings()
L_0254: ldfld System.Boolean autoCenterOnSelection
L_0259: brfalse Label32
L_025e: call BattleTech.CameraControl get_Instance()
L_0263: ldarg.1
L_0264: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0269: ldc.r4 0.95
L_026e: callvirt Void SetMovingToGroundPos(UnityEngine.Vector3, Single)
L_0273: Label32
L_0273: ldarg.0
L_0274: call Void logSelectionStack()
L_0279: ldc.i4.1
L_027a: br Label36
L_027f: Label6
L_027f: Label7
L_027f: Label8
L_027f: ldc.i4.0
L_0280: Label33
L_0280: Label34
L_0280: Label35
L_0280: Label36
L_0280: stloc 0 (System.Boolean)
L_0281: Label0
L_0281: ldloc 0 (System.Boolean)
L_0282: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void OnAttackEnd(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceEndMessage
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: ldarg.1
L_0001: isinst BattleTech.AttackSequenceEndMessage
L_0006: stloc.0
L_0007: ldarg.0
L_0008: call BattleTech.CombatGameState get_Combat()
L_000d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0012: ldloc.0
L_0013: ldfld System.Int32 sequenceId
L_0018: callvirt AttackSequence GetAttackSequence(Int32)
L_001d: stloc.1
L_001e: ldloc.1
L_001f: brfalse Label1
L_0024: ldloc.1
L_0025: ldfld BattleTech.ICombatant chosenTarget
L_002a: ldarg.0
L_002b: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0030: callvirt BattleTech.ICombatant get_DisplayedCombatant()
L_0035: bne.un Label2
L_003a: ldarg.0
L_003b: ldarg.0
L_003c: ldloc.1
L_003d: ldfld BattleTech.ICombatant chosenTarget
L_0042: call System.Collections.IEnumerator DelayActorUnTargeted(BattleTech.ICombatant)
L_0047: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_004c: pop
L_004d: Label1
L_004d: Label2
L_004d: ldarg.0
L_004e: call BattleTech.CombatGameState get_Combat()
L_0053: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0058: stloc.2
L_0059: ldc.i4.0
L_005a: stloc.3
L_005b: br Label3
L_0060: Label4
L_0060: ldarg.0
L_0061: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0066: ldnull
L_0067: ldloc.2
L_0068: ldloc.3
L_0069: callvirt BattleTech.AbstractActor get_Item(Int32)
L_006e: ldc.i4.0
L_006f: ldc.r4 0
L_0074: ldc.i4.0
L_0075: ldc.i4.0
L_0076: callvirt Void ShowAttackDirection(BattleTech.AbstractActor, BattleTech.AbstractActor, BattleTech.AttackDirection, Single, BattleTech.MeleeAttackType, Int32)
L_007b: ldloc.3
L_007c: ldc.i4.1
L_007d: add
L_007e: stloc.3
L_007f: Label3
L_007f: ldloc.3
L_0080: ldloc.2
L_0081: callvirt Int32 get_Count()
L_0086: blt Label4
L_008b: ldarg.0
L_008c: ldarg 1
L_0092: call Void Postfix(BattleTech.UI.CombatHUD, MessageCenterMessage)
L_0097: ret
DONE

### Patch BattleTech.AttackDirector, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 3: BattleTech.MechRepresentation
L_0000: Local var 4: BattleTech.MechRepresentation
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.ICombatant
L_0000: Local var 7: BattleTech.MechRepresentation
L_0000: Local var 8: BattleTech.AbstractActor
L_0000: ldnull
L_0001: stloc 8 (BattleTech.AbstractActor)
L_0003: ldarg.0
L_0004: ldarg 1
L_000a: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage)
L_000f: brfalse Label0
L_0014: ldarg.0
L_0015: ldarg 1
L_001b: ldloca 8 (BattleTech.AbstractActor)
L_001d: call Boolean Prefix(BattleTech.AttackDirector, MessageCenterMessage, BattleTech.AbstractActor ByRef)
L_0022: brfalse Label0
L_0027: ldarg.1
L_0028: castclass BattleTech.AttackCompleteMessage
L_002d: stloc.0
L_002e: ldloc.0
L_002f: ldfld System.Int32 sequenceId
L_0034: stloc.1
L_0035: ldarg.0
L_0036: ldloc.1
L_0037: call AttackSequence GetAttackSequence(Int32)
L_003c: stloc.2
L_003d: ldloc.2
L_003e: brtrue Label1
L_0043: ldsfld HBS.Logging.ILog logger
L_0048: ldstr "[OnAttackComplete] invalid sequence ID: {0}"
L_004d: ldloc.1
L_004e: box System.Int32
L_0053: call System.String Format(System.String, System.Object)
L_0058: callvirt Void LogError(System.Object)
L_005d: ldstr "OnAttackComplete received invalid sequenceID: "
L_0062: ldloc.1
L_0063: box System.Int32
L_0068: call System.String Concat(System.Object, System.Object)
L_006d: newobj Void .ctor(String)
L_0072: throw
L_0073: Label1
L_0073: ldsfld HBS.Logging.ILog logger
L_0078: callvirt Boolean get_IsLogEnabled()
L_007d: brfalse Label2
L_0082: ldsfld HBS.Logging.ILog logger
L_0087: ldstr "[OnAttackComplete] ID {0}"
L_008c: ldloc.1
L_008d: box System.Int32
L_0092: call System.String Format(System.String, System.Object)
L_0097: callvirt Void Log(System.Object)
L_009c: Label2
L_009c: ldloc.2
L_009d: ldfld BattleTech.AbstractActor attacker
L_00a2: callvirt BattleTech.GameRepresentation get_GameRep()
L_00a7: ldnull
L_00a8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00ad: brfalse Label3
L_00b2: ldloc.2
L_00b3: ldfld BattleTech.AbstractActor attacker
L_00b8: callvirt BattleTech.GameRepresentation get_GameRep()
L_00bd: ldc.i4.0
L_00be: ldc.r4 0.5
L_00c3: ldloc.0
L_00c4: ldfld System.Int32 stackItemUID
L_00c9: ldloc.0
L_00ca: ldfld System.Int32 sequenceId
L_00cf: ldnull
L_00d0: callvirt Void ReturnToNeutralFacing(Boolean, Single, Int32, Int32, RotationCompleteDelegate)
L_00d5: ldloc.2
L_00d6: ldfld BattleTech.AbstractActor attacker
L_00db: callvirt BattleTech.GameRepresentation get_GameRep()
L_00e0: ldc.i4.0
L_00e1: callvirt Void SetVFXColliderEnabled(Boolean)
L_00e6: ldloc.2
L_00e7: ldfld BattleTech.AbstractActor attacker
L_00ec: callvirt BattleTech.GameRepresentation get_GameRep()
L_00f1: isinst BattleTech.MechRepresentation
L_00f6: stloc.3
L_00f7: ldloc.3
L_00f8: ldnull
L_00f9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00fe: brfalse Label4
L_0103: ldloc.3
L_0104: ldc.i4.1
L_0105: callvirt Void ToggleRandomIdles(Boolean)
L_010a: Label4
L_010a: ldloc.2
L_010b: ldfld BattleTech.AbstractActor attacker
L_0110: callvirt BattleTech.Team get_team()
L_0115: callvirt System.String get_GUID()
L_011a: ldarg.0
L_011b: call BattleTech.CombatGameState get_Combat()
L_0120: callvirt System.String get_LocalPlayerTeamGuid()
L_0125: call Boolean op_Equality(System.String, System.String)
L_012a: brfalse Label5
L_012f: ldloc.2
L_0130: ldfld BattleTech.AbstractActor attacker
L_0135: callvirt BattleTech.Team get_team()
L_013a: ldloc.2
L_013b: ldfld BattleTech.ICombatant chosenTarget
L_0140: callvirt BattleTech.Team get_team()
L_0145: ldloc.2
L_0146: ldfld System.Single previousTeamHealthDifference
L_014b: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_0150: Label3
L_0150: Label5
L_0150: ldloc.2
L_0151: ldfld BattleTech.ICombatant chosenTarget
L_0156: callvirt BattleTech.GameRepresentation get_GameRep()
L_015b: ldnull
L_015c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0161: brfalse Label6
L_0166: ldloc.2
L_0167: ldfld BattleTech.ICombatant chosenTarget
L_016c: callvirt BattleTech.GameRepresentation get_GameRep()
L_0171: isinst BattleTech.MechRepresentation
L_0176: stloc.s 4 (BattleTech.MechRepresentation)
L_0178: ldloc.s 4 (BattleTech.MechRepresentation)
L_017a: ldnull
L_017b: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0180: brfalse Label7
L_0185: ldloc.s 4 (BattleTech.MechRepresentation)
L_0187: ldc.i4.1
L_0188: callvirt Void ToggleRandomIdles(Boolean)
L_018d: Label7
L_018d: ldloc.2
L_018e: ldfld BattleTech.ICombatant chosenTarget
L_0193: callvirt BattleTech.Team get_team()
L_0198: callvirt System.String get_GUID()
L_019d: ldarg.0
L_019e: call BattleTech.CombatGameState get_Combat()
L_01a3: callvirt System.String get_LocalPlayerTeamGuid()
L_01a8: call Boolean op_Equality(System.String, System.String)
L_01ad: brfalse Label8
L_01b2: ldloc.2
L_01b3: ldfld BattleTech.ICombatant chosenTarget
L_01b8: callvirt BattleTech.Team get_team()
L_01bd: ldloc.2
L_01be: ldfld BattleTech.AbstractActor attacker
L_01c3: callvirt BattleTech.Team get_team()
L_01c8: ldloc.2
L_01c9: ldfld System.Single previousTeamHealthDifference
L_01ce: callvirt Void RefreshTeamHealthPercentageAudioEvents(BattleTech.Team, Single)
L_01d3: Label6
L_01d3: Label8
L_01d3: ldc.i4.0
L_01d4: stloc.s 5 (System.Int32)
L_01d6: br Label9
L_01db: Label13
L_01db: ldarg.0
L_01dc: call BattleTech.CombatGameState get_Combat()
L_01e1: ldloc.2
L_01e2: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_01e7: ldloc.s 5 (System.Int32)
L_01e9: callvirt System.String get_Item(Int32)
L_01ee: ldc.i4.0
L_01ef: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_01f4: stloc.s 6 (BattleTech.ICombatant)
L_01f6: ldloc.s 6 (BattleTech.ICombatant)
L_01f8: brfalse Label10
L_01fd: ldloc.s 6 (BattleTech.ICombatant)
L_01ff: callvirt BattleTech.GameRepresentation get_GameRep()
L_0204: ldnull
L_0205: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_020a: brtrue Label11
L_020f: ldloc.s 6 (BattleTech.ICombatant)
L_0211: callvirt BattleTech.GameRepresentation get_GameRep()
L_0216: isinst BattleTech.MechRepresentation
L_021b: stloc.s 7 (BattleTech.MechRepresentation)
L_021d: ldloc.s 7 (BattleTech.MechRepresentation)
L_021f: ldnull
L_0220: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0225: brfalse Label12
L_022a: ldloc.s 7 (BattleTech.MechRepresentation)
L_022c: ldc.i4.1
L_022d: callvirt Void ToggleRandomIdles(Boolean)
L_0232: Label10
L_0232: Label11
L_0232: Label12
L_0232: ldloc.s 5 (System.Int32)
L_0234: ldc.i4.1
L_0235: add
L_0236: stloc.s 5 (System.Int32)
L_0238: Label9
L_0238: ldloc.s 5 (System.Int32)
L_023a: ldloc.2
L_023b: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_0240: callvirt Int32 get_Count()
L_0245: blt Label13
L_024a: ldarg.0
L_024b: ldloc.2
L_024c: call Void RecordAttackSequenceStats(AttackSequence)
L_0251: ldarg.0
L_0252: call BattleTech.CombatGameState get_Combat()
L_0257: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_025c: ldloc.2
L_025d: callvirt Void RecordAttackSequence(AttackSequence)
L_0262: ldarg.0
L_0263: ldloc.1
L_0264: call Boolean RemoveAttackSequence(Int32)
L_0269: pop
L_026a: Label0
L_026a: ldarg.0
L_026b: ldarg 1
L_0271: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage)
L_0276: ldarg.0
L_0277: ldarg 1
L_027d: ldloca 8 (BattleTech.AbstractActor)
L_027f: call Void Postfix(BattleTech.AttackDirector, MessageCenterMessage, BattleTech.AbstractActor ByRef)
L_0284: ret
DONE

### Patch BattleTech.UI.CombatHUDActionButton, Void ActivateCommandAbility(System.String, UnityEngine.Vector3)
L_0000: Local var 0: MessageCenterMessage
L_0000: ldarg.0
L_0001: call BattleTech.Ability get_Ability()
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.Ability get_Ability()
L_0011: callvirt BattleTech.AbilityDef get_Def()
L_0016: callvirt ActivationTiming get_ActivationTime()
L_001b: ldc.i4.4
L_001c: bne.un Label2
L_0021: ldarg.1
L_0022: ldarg.1
L_0023: ldarg.0
L_0024: call BattleTech.Ability get_Ability()
L_0029: callvirt BattleTech.AbilityDef get_Def()
L_002e: callvirt System.String get_Id()
L_0033: ldarg.2
L_0034: call UnityEngine.Vector3 get_zero()
L_0039: newobj Void .ctor(String, String, String, Vector3, Vector3)
L_003e: stloc.0
L_003f: ldloc.0
L_0040: ldc.i4.1
L_0041: callvirt Void set_IsNetRouted(Boolean)
L_0046: ldarg.0
L_0047: call BattleTech.CombatGameState get_Combat()
L_004c: callvirt MessageCenter get_MessageCenter()
L_0051: ldloc.0
L_0052: callvirt Void PublishMessage(MessageCenterMessage)
L_0057: ldarg.1
L_0058: ldarg.1
L_0059: ldarg.0
L_005a: call BattleTech.Ability get_Ability()
L_005f: callvirt BattleTech.AbilityDef get_Def()
L_0064: callvirt System.String get_Id()
L_0069: ldarg.2
L_006a: call UnityEngine.Vector3 get_zero()
L_006f: newobj Void .ctor(String, String, String, Vector3, Vector3)
L_0074: stloc.0
L_0075: ldloc.0
L_0076: ldc.i4.1
L_0077: callvirt Void set_IsNetRouted(Boolean)
L_007c: ldarg.0
L_007d: call BattleTech.CombatGameState get_Combat()
L_0082: callvirt MessageCenter get_MessageCenter()
L_0087: ldloc.0
L_0088: callvirt Void PublishMessage(MessageCenterMessage)
L_008d: ldarg.0
L_008e: callvirt Void DisableButton()
L_0093: Label1
L_0093: Label2
L_0093: ldarg.0
L_0094: ldarg 1
L_009a: ldarg 2
L_00a0: call Void Postfix(BattleTech.UI.CombatHUDActionButton, System.String, UnityEngine.Vector3)
L_00a5: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.UI.CombatHUDSidePanelHoverElement
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.CombatGameState Combat
L_0007: ldarg.0
L_0008: ldarg.2
L_0009: stfld BattleTech.UI.CombatHUD HUD
L_000e: ldarg.0
L_000f: ldarg.0
L_0010: ldfld UnityEngine.GameObject[] PortraitHolders
L_0015: ldlen
L_0016: conv.i4
L_0017: newarr BattleTech.UI.CombatHUDPortrait
L_001c: stfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_0021: ldc.i4.0
L_0022: stloc.0
L_0023: br Label1
L_0028: Label2
L_0028: ldarg.0
L_0029: ldfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_002e: ldloc.0
L_002f: ldarg.0
L_0030: ldfld UnityEngine.GameObject[] PortraitHolders
L_0035: ldloc.0
L_0036: ldelem.ref
L_0037: ldc.i4.1
L_0038: callvirt BattleTech.UI.CombatHUDPortrait GetComponentInChildren[CombatHUDPortrait](Boolean)
L_003d: stelem.ref
L_003e: ldarg.0
L_003f: ldfld BattleTech.UI.CombatHUDPortrait[] Portraits
L_0044: ldloc.0
L_0045: ldelem.ref
L_0046: ldarg.1
L_0047: ldarg.2
L_0048: ldarg.0
L_0049: ldfld UnityEngine.GameObject[] PortraitHolders
L_004e: ldloc.0
L_004f: ldelem.ref
L_0050: callvirt UnityEngine.UI.LayoutElement GetComponent[LayoutElement]()
L_0055: ldarg.0
L_0056: ldfld BattleTech.UI.HBSDOTweenToggle[] portraitTweens
L_005b: ldloc.0
L_005c: ldelem.ref
L_005d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, UnityEngine.UI.LayoutElement, BattleTech.UI.HBSDOTweenToggle)
L_0062: ldloc.0
L_0063: ldc.i4.1
L_0064: add
L_0065: stloc.0
L_0066: Label1
L_0066: ldloc.0
L_0067: ldarg.0
L_0068: ldfld UnityEngine.GameObject[] PortraitHolders
L_006d: ldlen
L_006e: conv.i4
L_006f: blt Label2
L_0074: ldarg.0
L_0075: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_007a: ldlen
L_007b: conv.i4
L_007c: ldc.i4.s 11
L_007e: beq Label3
L_0083: ldsfld HBS.Logging.ILog uiLogger
L_0088: ldstr "Error: should be exactly 11 action buttons!"
L_008d: callvirt Void LogError(System.Object)
L_0092: Label3
L_0092: ldarg.0
L_0093: ldarg.0
L_0094: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_0099: ldlen
L_009a: conv.i4
L_009b: newarr BattleTech.UI.CombatHUDActionButton
L_00a0: call Void set_ActionButtons(BattleTech.UI.CombatHUDActionButton[])
L_00a5: ldc.i4.0
L_00a6: stloc.1
L_00a7: br Label4
L_00ac: Label7
L_00ac: ldarg.0
L_00ad: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00b2: ldloc.1
L_00b3: ldarg.0
L_00b4: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_00b9: ldloc.1
L_00ba: ldelem.ref
L_00bb: ldc.i4.1
L_00bc: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_00c1: stelem.ref
L_00c2: ldarg.0
L_00c3: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00c8: ldloc.1
L_00c9: ldelem.ref
L_00ca: ldc.i4.1
L_00cb: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement GetComponentInChildren[CombatHUDSidePanelHoverElement](Boolean)
L_00d0: stloc.2
L_00d1: ldloc.2
L_00d2: ldnull
L_00d3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00d8: brfalse Label5
L_00dd: ldarg.0
L_00de: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_00e3: ldloc.1
L_00e4: ldelem.ref
L_00e5: callvirt UnityEngine.GameObject get_gameObject()
L_00ea: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement AddComponent[CombatHUDSidePanelHoverElement]()
L_00ef: stloc.2
L_00f0: Label5
L_00f0: ldloc.2
L_00f1: ldarg.2
L_00f2: callvirt Void Init(BattleTech.UI.CombatHUD)
L_00f7: ldloc.1
L_00f8: ldc.i4.s 9
L_00fa: bge Label6
L_00ff: ldarg.0
L_0100: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0105: ldloc.1
L_0106: ldelem.ref
L_0107: ldarg.1
L_0108: ldarg.2
L_0109: call BattleTech.BTInput get_Instance()
L_010e: call System.Collections.Generic.List`1[InControl.PlayerAction] Combat_Abilities(BattleTech.BTInput)
L_0113: ldloc.1
L_0114: callvirt InControl.PlayerAction get_Item(Int32)
L_0119: ldc.i4.1
L_011a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_011f: Label6
L_011f: ldloc.1
L_0120: ldc.i4.1
L_0121: add
L_0122: stloc.1
L_0123: Label4
L_0123: ldloc.1
L_0124: ldarg.0
L_0125: ldfld UnityEngine.GameObject[] ActionButtonHolders
L_012a: ldlen
L_012b: conv.i4
L_012c: blt Label7
L_0131: ldarg.0
L_0132: ldarg.0
L_0133: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0138: ldc.i4.0
L_0139: ldelem.ref
L_013a: call Void set_FireButton(BattleTech.UI.CombatHUDActionButton)
L_013f: ldarg.0
L_0140: ldarg.0
L_0141: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0146: ldc.i4.1
L_0147: ldelem.ref
L_0148: call Void set_MoveButton(BattleTech.UI.CombatHUDActionButton)
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0154: ldc.i4.2
L_0155: ldelem.ref
L_0156: call Void set_SprintButton(BattleTech.UI.CombatHUDActionButton)
L_015b: ldarg.0
L_015c: ldarg.0
L_015d: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0162: ldc.i4.3
L_0163: ldelem.ref
L_0164: call Void set_JumpButton(BattleTech.UI.CombatHUDActionButton)
L_0169: ldarg.0
L_016a: ldarg.0
L_016b: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0170: ldc.i4.s 9
L_0172: ldelem.ref
L_0173: call Void set_DoneWithMechButton(BattleTech.UI.CombatHUDActionButton)
L_0178: ldarg.0
L_0179: ldarg.0
L_017a: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_017f: ldc.i4.s 10
L_0181: ldelem.ref
L_0182: call Void set_EjectButton(BattleTech.UI.CombatHUDActionButton)
L_0187: ldarg.0
L_0188: ldfld UnityEngine.GameObject MeleeButtonHolder
L_018d: ldc.i4.1
L_018e: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_0193: ldarg.1
L_0194: ldarg.2
L_0195: call BattleTech.BTInput get_Instance()
L_019a: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_019f: ldc.i4.1
L_01a0: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01a5: ldarg.0
L_01a6: ldfld UnityEngine.GameObject DFAButtonHolder
L_01ab: ldc.i4.1
L_01ac: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01b1: ldarg.1
L_01b2: ldarg.2
L_01b3: call BattleTech.BTInput get_Instance()
L_01b8: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_01bd: ldc.i4.1
L_01be: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01c3: ldarg.0
L_01c4: ldarg.0
L_01c5: ldfld UnityEngine.GameObject CommandButtonHolder
L_01ca: ldc.i4.1
L_01cb: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01d0: call Void set_CommandButton(BattleTech.UI.CombatHUDActionButton)
L_01d5: ldarg.0
L_01d6: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_01db: ldarg.1
L_01dc: ldarg.2
L_01dd: call BattleTech.BTInput get_Instance()
L_01e2: call InControl.PlayerAction Combat_CommandAbility(BattleTech.BTInput)
L_01e7: ldc.i4.1
L_01e8: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_01ed: ldarg.0
L_01ee: ldarg.0
L_01ef: ldfld UnityEngine.GameObject EquipmentButtonHolder
L_01f4: ldc.i4.1
L_01f5: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_01fa: call Void set_EquipmentButton(BattleTech.UI.CombatHUDActionButton)
L_01ff: ldarg.0
L_0200: call BattleTech.UI.CombatHUDActionButton get_EquipmentButton()
L_0205: ldarg.1
L_0206: ldarg.2
L_0207: call BattleTech.BTInput get_Instance()
L_020c: call InControl.PlayerAction Key_None(BattleTech.BTInput)
L_0211: ldc.i4.1
L_0212: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_0217: ldarg.0
L_0218: call BattleTech.UI.CombatHUDActionButton get_DoneWithMechButton()
L_021d: ldarg.1
L_021e: ldarg.2
L_021f: call BattleTech.BTInput get_Instance()
L_0224: call InControl.PlayerAction Combat_DoneWithMech(BattleTech.BTInput)
L_0229: ldc.i4.1
L_022a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_022f: ldarg.0
L_0230: call BattleTech.UI.CombatHUDActionButton get_EjectButton()
L_0235: ldarg.1
L_0236: ldarg.2
L_0237: call BattleTech.BTInput get_Instance()
L_023c: call InControl.PlayerAction Key_None(BattleTech.BTInput)
L_0241: ldc.i4.1
L_0242: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_0247: ldarg.0
L_0248: ldfld BattleTech.UI.CombatHUDMechTrayOtherTeamIndicator otherTurnIndicator
L_024d: ldarg.2
L_024e: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0253: ldarg.0
L_0254: ldc.i4.3
L_0255: newarr BattleTech.UI.CombatHUDActionButton
L_025a: call Void set_AbilityButtons(BattleTech.UI.CombatHUDActionButton[])
L_025f: ldc.i4.0
L_0260: stloc.3
L_0261: br Label8
L_0266: Label9
L_0266: ldarg.0
L_0267: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_026c: ldloc.3
L_026d: ldarg.0
L_026e: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_0273: ldloc.3
L_0274: ldc.i4.4
L_0275: add
L_0276: ldelem.ref
L_0277: stelem.ref
L_0278: ldloc.3
L_0279: ldc.i4.1
L_027a: add
L_027b: stloc.3
L_027c: Label8
L_027c: ldloc.3
L_027d: ldc.i4.3
L_027e: blt Label9
L_0283: ldarg.0
L_0284: ldc.i4.2
L_0285: newarr BattleTech.UI.CombatHUDActionButton
L_028a: call Void set_MoraleButtons(BattleTech.UI.CombatHUDActionButton[])
L_028f: ldc.i4.0
L_0290: stloc.s 4 (System.Int32)
L_0292: br Label10
L_0297: Label11
L_0297: ldarg.0
L_0298: call BattleTech.UI.CombatHUDActionButton[] get_MoraleButtons()
L_029d: ldloc.s 4 (System.Int32)
L_029f: ldarg.0
L_02a0: call BattleTech.UI.CombatHUDActionButton[] get_ActionButtons()
L_02a5: ldloc.s 4 (System.Int32)
L_02a7: ldc.i4.7
L_02a8: add
L_02a9: ldelem.ref
L_02aa: stelem.ref
L_02ab: ldloc.s 4 (System.Int32)
L_02ad: ldc.i4.1
L_02ae: add
L_02af: stloc.s 4 (System.Int32)
L_02b1: Label10
L_02b1: ldloc.s 4 (System.Int32)
L_02b3: ldc.i4.2
L_02b4: blt Label11
L_02b9: ldarg.0
L_02ba: ldarg.0
L_02bb: ldfld UnityEngine.GameObject RestartButtonHolder
L_02c0: ldc.i4.1
L_02c1: callvirt BattleTech.UI.CombatHUDActionButton GetComponentInChildren[CombatHUDActionButton](Boolean)
L_02c6: call Void set_RestartButton(BattleTech.UI.CombatHUDActionButton)
L_02cb: ldarg.0
L_02cc: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_02d1: ldarg.1
L_02d2: ldarg.2
L_02d3: call BattleTech.BTInput get_Instance()
L_02d8: call InControl.PlayerAction Key_Return(BattleTech.BTInput)
L_02dd: ldc.i4.1
L_02de: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, InControl.PlayerAction, Boolean)
L_02e3: ldarg.0
L_02e4: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_02e9: ldc.i4.0
L_02ea: ldnull
L_02eb: call BattleTech.UI.UIManager get_Instance()
L_02f0: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_02f5: ldfld SVGImporter.SVGAsset RestartButtonIcon
L_02fa: ldstr "BTN_Restart"
L_02ff: call BattleTech.UI.UIManager get_Instance()
L_0304: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0309: ldfld System.String Tooltip_Restart
L_030e: ldnull
L_030f: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0314: ldarg.0
L_0315: call BattleTech.UI.CombatHUDActionButton get_RestartButton()
L_031a: ldfld BattleTech.UI.TMProWrapper.LocalizableText Text
L_031f: ldstr "RESTART"
L_0324: call System.Object[] Empty[Object]()
L_0329: callvirt Void SetText(System.String, System.Object[])
L_032e: ldarg.0
L_032f: ldfld UnityEngine.GameObject RestartButtonHolder
L_0334: callvirt UnityEngine.GameObject get_gameObject()
L_0339: ldc.i4.0
L_033a: callvirt Void SetActive(Boolean)
L_033f: ldarg.0
L_0340: ldarg.0
L_0341: ldc.i4.1
L_0342: call BattleTech.UI.CombatHUDMoraleBar GetComponentInChildren[CombatHUDMoraleBar](Boolean)
L_0347: call Void set_moraleDisplay(BattleTech.UI.CombatHUDMoraleBar)
L_034c: ldarg.0
L_034d: call BattleTech.UI.CombatHUDMoraleBar get_moraleDisplay()
L_0352: ldarg.1
L_0353: ldarg.2
L_0354: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0359: ldarg.0
L_035a: ldc.i4.1
L_035b: call Void SubscribeMessages(Boolean)
L_0360: ldarg.0
L_0361: call UnityEngine.Transform get_transform()
L_0366: ldarg.0
L_0367: ldfld UnityEngine.Vector3 TrayPosDown
L_036c: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0371: ldarg.0
L_0372: ldarg.0
L_0373: ldfld UnityEngine.Vector3 TrayPosDown
L_0378: call Void set_targetTrayPos(UnityEngine.Vector3)
L_037d: ldarg.0
L_037e: ldarg.0
L_037f: ldfld UnityEngine.Vector3 TrayPosDown
L_0384: call Void set_lastTrayPos(UnityEngine.Vector3)
L_0389: ldarg.0
L_038a: ldarg 1
L_0390: ldarg 2
L_0396: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_039b: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void InitAbilityButtons(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Ability
L_0000: ldarg.1
L_0001: isinst BattleTech.Mech
L_0006: callvirt BattleTech.Pilot GetPilot()
L_000b: stloc.0
L_000c: ldloc.0
L_000d: brfalse Label1
L_0012: ldloc.0
L_0013: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_ActiveAbilities()
L_0018: newobj Void .ctor(IEnumerable`1)
L_001d: stloc.1
L_001e: ldc.i4.0
L_001f: stloc.3
L_0020: br Label2
L_0025: Label3
L_0025: ldarg.0
L_0026: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_002b: ldloc.3
L_002c: ldelem.ref
L_002d: ldloc.1
L_002e: ldloc.3
L_002f: callvirt BattleTech.Ability get_Item(Int32)
L_0034: callvirt BattleTech.AbilityDef get_Def()
L_0039: callvirt TargetingType get_Targeting()
L_003e: ldc.i4.0
L_003f: call BattleTech.UI.SelectionType GetSelectionTypeFromTargeting(TargetingType, Boolean)
L_0044: ldloc.1
L_0045: ldloc.3
L_0046: callvirt BattleTech.Ability get_Item(Int32)
L_004b: ldloc.1
L_004c: ldloc.3
L_004d: callvirt BattleTech.Ability get_Item(Int32)
L_0052: callvirt BattleTech.AbilityDef get_Def()
L_0057: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_005c: ldloc.1
L_005d: ldloc.3
L_005e: callvirt BattleTech.Ability get_Item(Int32)
L_0063: callvirt BattleTech.AbilityDef get_Def()
L_0068: callvirt BattleTech.BaseDescriptionDef get_Description()
L_006d: callvirt System.String get_Id()
L_0072: ldloc.1
L_0073: ldloc.3
L_0074: callvirt BattleTech.Ability get_Item(Int32)
L_0079: callvirt BattleTech.AbilityDef get_Def()
L_007e: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0083: callvirt System.String get_Name()
L_0088: ldarg.1
L_0089: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_008e: ldarg.0
L_008f: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0094: ldloc.3
L_0095: ldelem.ref
L_0096: ldc.i4.1
L_0097: stfld System.Boolean isClickable
L_009c: ldloc.3
L_009d: ldc.i4.1
L_009e: add
L_009f: stloc.3
L_00a0: Label2
L_00a0: ldloc.3
L_00a1: ldloc.1
L_00a2: callvirt Int32 get_Count()
L_00a7: blt Label3
L_00ac: ldloc.0
L_00ad: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_PassiveAbilities()
L_00b2: ldsfld System.Predicate`1[BattleTech.Ability] <>9__121_0
L_00b7: dup
L_00b8: brtrue Label4
L_00bd: pop
L_00be: ldsfld BattleTech.UI.CombatHUDMechwarriorTray+<>c <>9
L_00c3: ldftn Boolean <InitAbilityButtons>b__121_0(BattleTech.Ability)
L_00c9: newobj Void .ctor(Object, IntPtr)
L_00ce: dup
L_00cf: stsfld System.Predicate`1[BattleTech.Ability] <>9__121_0
L_00d4: Label4
L_00d4: callvirt System.Collections.Generic.List`1[BattleTech.Ability] FindAll(System.Predicate`1[BattleTech.Ability])
L_00d9: stloc.2
L_00da: ldloc.1
L_00db: callvirt Int32 get_Count()
L_00e0: stloc.s 4 (System.Int32)
L_00e2: br Label5
L_00e7: Label8
L_00e7: ldloc.s 4 (System.Int32)
L_00e9: ldloc.1
L_00ea: callvirt Int32 get_Count()
L_00ef: ldloc.2
L_00f0: callvirt Int32 get_Count()
L_00f5: add
L_00f6: bge Label6
L_00fb: ldloc.s 4 (System.Int32)
L_00fd: ldloc.1
L_00fe: callvirt Int32 get_Count()
L_0103: sub
L_0104: stloc.s 5 (System.Int32)
L_0106: ldarg.0
L_0107: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_010c: ldloc.s 4 (System.Int32)
L_010e: ldelem.ref
L_010f: ldc.i4.0
L_0110: ldloc.2
L_0111: ldloc.s 5 (System.Int32)
L_0113: callvirt BattleTech.Ability get_Item(Int32)
L_0118: ldloc.2
L_0119: ldloc.s 5 (System.Int32)
L_011b: callvirt BattleTech.Ability get_Item(Int32)
L_0120: callvirt BattleTech.AbilityDef get_Def()
L_0125: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_012a: ldloc.2
L_012b: ldloc.s 5 (System.Int32)
L_012d: callvirt BattleTech.Ability get_Item(Int32)
L_0132: callvirt BattleTech.AbilityDef get_Def()
L_0137: callvirt BattleTech.BaseDescriptionDef get_Description()
L_013c: callvirt System.String get_Id()
L_0141: ldloc.2
L_0142: ldloc.s 5 (System.Int32)
L_0144: callvirt BattleTech.Ability get_Item(Int32)
L_0149: callvirt BattleTech.AbilityDef get_Def()
L_014e: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0153: callvirt System.String get_Name()
L_0158: ldarg.1
L_0159: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_015e: ldarg.0
L_015f: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0164: ldloc.s 4 (System.Int32)
L_0166: ldelem.ref
L_0167: ldc.i4.0
L_0168: stfld System.Boolean isClickable
L_016d: ldarg.0
L_016e: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0173: ldloc.s 4 (System.Int32)
L_0175: ldelem.ref
L_0176: callvirt Void RefreshUIColors()
L_017b: br Label7
L_0180: Label6
L_0180: ldarg.0
L_0181: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_0186: ldloc.s 4 (System.Int32)
L_0188: ldelem.ref
L_0189: ldc.i4.0
L_018a: ldnull
L_018b: ldnull
L_018c: ldstr ""
L_0191: ldstr ""
L_0196: ldnull
L_0197: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_019c: ldarg.0
L_019d: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01a2: ldloc.s 4 (System.Int32)
L_01a4: ldelem.ref
L_01a5: ldc.i4.0
L_01a6: stfld System.Boolean isClickable
L_01ab: ldarg.0
L_01ac: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01b1: ldloc.s 4 (System.Int32)
L_01b3: ldelem.ref
L_01b4: callvirt Void RefreshUIColors()
L_01b9: Label7
L_01b9: ldloc.s 4 (System.Int32)
L_01bb: ldc.i4.1
L_01bc: add
L_01bd: stloc.s 4 (System.Int32)
L_01bf: Label5
L_01bf: ldloc.s 4 (System.Int32)
L_01c1: ldarg.0
L_01c2: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_01c7: ldlen
L_01c8: conv.i4
L_01c9: blt Label8
L_01ce: Label1
L_01ce: ldarg.1
L_01cf: callvirt BattleTech.Team get_team()
L_01d4: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_01d9: callvirt Int32 get_Count()
L_01de: ldc.i4.0
L_01df: ble Label9
L_01e4: ldarg.1
L_01e5: callvirt BattleTech.Team get_team()
L_01ea: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_01ef: ldc.i4.0
L_01f0: callvirt BattleTech.Ability get_Item(Int32)
L_01f5: stloc.s 6 (BattleTech.Ability)
L_01f7: ldarg.0
L_01f8: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_01fd: ldloc.s 6 (BattleTech.Ability)
L_01ff: callvirt BattleTech.AbilityDef get_Def()
L_0204: callvirt TargetingType get_Targeting()
L_0209: ldc.i4.0
L_020a: call BattleTech.UI.SelectionType GetSelectionTypeFromTargeting(TargetingType, Boolean)
L_020f: ldloc.s 6 (BattleTech.Ability)
L_0211: ldloc.s 6 (BattleTech.Ability)
L_0213: callvirt BattleTech.AbilityDef get_Def()
L_0218: callvirt SVGImporter.SVGAsset get_AbilityIcon()
L_021d: ldloc.s 6 (BattleTech.Ability)
L_021f: callvirt BattleTech.AbilityDef get_Def()
L_0224: callvirt BattleTech.BaseDescriptionDef get_Description()
L_0229: callvirt System.String get_Id()
L_022e: ldloc.s 6 (BattleTech.Ability)
L_0230: callvirt BattleTech.AbilityDef get_Def()
L_0235: callvirt BattleTech.BaseDescriptionDef get_Description()
L_023a: callvirt System.String get_Name()
L_023f: ldnull
L_0240: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0245: br Label10
L_024a: Label9
L_024a: ldarg.0
L_024b: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0250: ldc.i4.0
L_0251: ldnull
L_0252: ldnull
L_0253: ldstr ""
L_0258: ldstr ""
L_025d: ldnull
L_025e: callvirt Void InitButton(BattleTech.UI.SelectionType, BattleTech.Ability, SVGImporter.SVGAsset, System.String, System.String, BattleTech.AbstractActor)
L_0263: Label10
L_0263: ldarg.0
L_0264: ldarg 1
L_026a: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.AbstractActor)
L_026f: ret
DONE

### Patch BattleTech.UI.CombatHUDMechwarriorTray, Void ResetAbilityButtons(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.Pilot
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Ability, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: ldarg.1
L_0001: callvirt BattleTech.Pilot GetPilot()
L_0006: stloc.0
L_0007: ldarg.1
L_0008: callvirt Boolean get_HasActivatedThisRound()
L_000d: brtrue Label1
L_0012: ldarg.1
L_0013: callvirt BattleTech.PositionAndRotation get_MovingToPosition()
L_0018: brtrue Label2
L_001d: ldarg.0
L_001e: ldfld BattleTech.CombatGameState Combat
L_0023: callvirt BattleTech.StackManager get_StackManager()
L_0028: callvirt Boolean get_IsAnyOrderActive()
L_002d: brfalse Label3
L_0032: ldarg.0
L_0033: ldfld BattleTech.CombatGameState Combat
L_0038: callvirt BattleTech.TurnDirector get_TurnDirector()
L_003d: callvirt Boolean get_IsInterleaved()
L_0042: br Label4
L_0047: Label3
L_0047: ldc.i4.0
L_0048: br Label5
L_004d: Label1
L_004d: Label2
L_004d: ldc.i4.1
L_004e: Label4
L_004e: Label5
L_004e: stloc.1
L_004f: ldloc.0
L_0050: brfalse Label6
L_0055: ldloc.0
L_0056: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_ActiveAbilities()
L_005b: newobj Void .ctor(IEnumerable`1)
L_0060: stloc.2
L_0061: ldloc.2
L_0062: ldloc.0
L_0063: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_PassiveAbilities()
L_0068: ldsfld System.Predicate`1[BattleTech.Ability] <>9__122_0
L_006d: dup
L_006e: brtrue Label7
L_0073: pop
L_0074: ldsfld BattleTech.UI.CombatHUDMechwarriorTray+<>c <>9
L_0079: ldftn Boolean <ResetAbilityButtons>b__122_0(BattleTech.Ability)
L_007f: newobj Void .ctor(Object, IntPtr)
L_0084: dup
L_0085: stsfld System.Predicate`1[BattleTech.Ability] <>9__122_0
L_008a: Label7
L_008a: callvirt System.Collections.Generic.List`1[BattleTech.Ability] FindAll(System.Predicate`1[BattleTech.Ability])
L_008f: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.Ability])
L_0094: ldc.i4.0
L_0095: stloc.3
L_0096: br Label8
L_009b: Label11
L_009b: ldloc.3
L_009c: ldloc.2
L_009d: callvirt Int32 get_Count()
L_00a2: bge Label9
L_00a7: ldarg.0
L_00a8: ldarg.1
L_00a9: ldarg.0
L_00aa: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00af: ldloc.3
L_00b0: ldelem.ref
L_00b1: ldloc.2
L_00b2: ldloc.3
L_00b3: callvirt BattleTech.Ability get_Item(Int32)
L_00b8: ldloc.1
L_00b9: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_00be: br Label10
L_00c3: Label9
L_00c3: ldarg.0
L_00c4: ldarg.1
L_00c5: ldarg.0
L_00c6: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00cb: ldloc.3
L_00cc: ldelem.ref
L_00cd: ldnull
L_00ce: ldc.i4.0
L_00cf: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_00d4: Label10
L_00d4: ldloc.3
L_00d5: ldc.i4.1
L_00d6: add
L_00d7: stloc.3
L_00d8: Label8
L_00d8: ldloc.3
L_00d9: ldarg.0
L_00da: call BattleTech.UI.CombatHUDActionButton[] get_AbilityButtons()
L_00df: ldlen
L_00e0: conv.i4
L_00e1: blt Label11
L_00e6: ldarg.1
L_00e7: callvirt BattleTech.Team get_team()
L_00ec: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_00f1: callvirt Int32 get_Count()
L_00f6: ldc.i4.0
L_00f7: ble Label12
L_00fc: ldarg.0
L_00fd: ldarg.1
L_00fe: ldarg.0
L_00ff: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0104: ldarg.1
L_0105: callvirt BattleTech.Team get_team()
L_010a: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_CommandAbilities()
L_010f: ldc.i4.0
L_0110: callvirt BattleTech.Ability get_Item(Int32)
L_0115: ldloc.1
L_0116: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_011b: br Label13
L_0120: Label12
L_0120: ldarg.0
L_0121: ldarg.1
L_0122: ldarg.0
L_0123: call BattleTech.UI.CombatHUDActionButton get_CommandButton()
L_0128: ldnull
L_0129: ldc.i4.0
L_012a: call Void ResetAbilityButton(BattleTech.AbstractActor, BattleTech.UI.CombatHUDActionButton, BattleTech.Ability, Boolean)
L_012f: Label6
L_012f: Label13
L_012f: ldarg.0
L_0130: ldarg 1
L_0136: call Void Postfix(BattleTech.UI.CombatHUDMechwarriorTray, BattleTech.AbstractActor)
L_013b: ret
DONE

### Patch BattleTech.CombatGameState, Void OnCombatGameDestroyed()
L_0000: Local var 0: System.DateTime
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.CombatGameState)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Boolean Prefix(BattleTech.CombatGameState)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call Boolean Prefix(BattleTech.CombatGameState)
L_001c: brfalse Label0
L_0021: ldarg.0
L_0022: call Boolean Prefix(BattleTech.CombatGameState)
L_0027: brfalse Label0
L_002c: ldarg.0
L_002d: call Boolean Prefix(BattleTech.CombatGameState)
L_0032: brfalse Label0
L_0037: ldsfld HBS.Logging.ILog gameInfoLogger
L_003c: ldstr "CombatGameState Destroyed: {0}"
L_0041: call System.DateTime get_UtcNow()
L_0046: stloc.0
L_0047: ldloca.s 0 (System.DateTime)
L_0049: ldstr "ddd MMM d yyyy HH:mm:ss"
L_004e: call System.String ToString(System.String)
L_0053: call System.String Format(System.String, System.Object)
L_0058: callvirt Void Log(System.Object)
L_005d: ldarg.0
L_005e: call MessageCenter get_MessageCenter()
L_0063: brfalse Label1
L_0068: ldarg.0
L_0069: call MessageCenter get_MessageCenter()
L_006e: newobj Void .ctor()
L_0073: dup
L_0074: call BattleTech.GameInstance get_BattleTechGame()
L_0079: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_007e: callvirt Boolean IsNetworkGameActive()
L_0083: callvirt Void set_IsNetworkGame(Boolean)
L_0088: callvirt Void PublishMessage(MessageCenterMessage)
L_008d: Label1
L_008d: ldarg.0
L_008e: call BattleTech.StackManager get_StackManager()
L_0093: brfalse Label2
L_0098: ldarg.0
L_0099: call BattleTech.StackManager get_StackManager()
L_009e: callvirt Void OnCombatGameDestroyed()
L_00a3: ldarg.0
L_00a4: ldnull
L_00a5: call Void set_StackManager(BattleTech.StackManager)
L_00aa: Label2
L_00aa: ldarg.0
L_00ab: call BattleTech.TurnDirector get_TurnDirector()
L_00b0: brfalse Label3
L_00b5: ldarg.0
L_00b6: call BattleTech.TurnDirector get_TurnDirector()
L_00bb: callvirt Void OnCombatGameDestroyed()
L_00c0: Label3
L_00c0: ldarg.0
L_00c1: call BattleTech.InvocationHandler get_InvocationHandler()
L_00c6: brfalse Label4
L_00cb: ldarg.0
L_00cc: call BattleTech.InvocationHandler get_InvocationHandler()
L_00d1: callvirt Void OnCombatGameDestroyed()
L_00d6: Label4
L_00d6: ldarg.0
L_00d7: call MessageCenter get_MessageCenter()
L_00dc: brfalse Label5
L_00e1: ldarg.0
L_00e2: call MessageCenter get_MessageCenter()
L_00e7: ldc.i4.3
L_00e8: callvirt Void PurgeSubscribersForScope(MessageScope)
L_00ed: Label5
L_00ed: ldarg.0
L_00ee: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00f3: brfalse Label6
L_00f8: ldarg.0
L_00f9: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_00fe: callvirt Void Dispose()
L_0103: Label6
L_0103: call Boolean get_HasInstance()
L_0108: brfalse Label7
L_010d: call HBS.DebugConsole.DebugConsole get_Instance()
L_0112: ldarg.0
L_0113: ldftn Void DebugConsoleOnBeforeDump()
L_0119: newobj Void .ctor(Object, IntPtr)
L_011e: callvirt Void remove_OnBeforeDump(DumpHandler)
L_0123: Label7
L_0123: call Boolean get_HasInstance()
L_0128: brfalse Label8
L_012d: call BattleTech.Rendering.UrbanWarfare.VFXCullingController get_Instance()
L_0132: callvirt Void OnCombatSceneEnd()
L_0137: Label8
L_0137: ldnull
L_0138: call Void set_destructionConstantsComponent(DestructionConstants)
L_013d: call Void ClearStaticData()
L_0142: call Void ClearStaticData()
L_0147: call Void ClearStaticData()
L_014c: call Void ClearStaticData()
L_0151: call Void ClearStaticData()
L_0156: ldsfld HBS.Logging.ILog gameInfoLogger
L_015b: ldstr "CombatGameState destroyed: {0}"
L_0160: call System.DateTime get_UtcNow()
L_0165: stloc.0
L_0166: ldloca.s 0 (System.DateTime)
L_0168: ldstr "ddd MMM d yyyy HH:mm:ss"
L_016d: call System.String ToString(System.String)
L_0172: call System.String Format(System.String, System.Object)
L_0177: callvirt Void Log(System.Object)
L_017c: Label0
L_017c: ldarg.0
L_017d: call Void Postfix(BattleTech.CombatGameState)
L_0182: ret
DONE

### Patch AttackEvaluator, System.Collections.Generic.List`1[System.Collections.Generic.List`1[BattleTech.Weapon]] MakeWeaponSetsForEvasive(System.Collections.Generic.List`1[BattleTech.Weapon], Single, BattleTech.ICombatant, UnityEngine.Vector3)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Single
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.Weapon
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.Weapon
L_0000: Local var 12: System.Single
### Harmony id=io.github.denadan.CustomComponents, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CustomComponents.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomComponents\CustomComponents.dll
### At 2019-09-15 05.27.27
### Patch BattleTech.SimGameState, Void InitCompanyStats()
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.SimGameState+SimGameType
L_0000: Local var 2: BattleTech.DropshipType
L_0000: ldarg.0
L_0001: call BattleTech.StatCollection get_CompanyStats()
L_0006: ldarg.0
L_0007: call BattleTech.SimGameConstants get_Constants()
L_000c: callvirt BattleTech.StoryConstantsDef get_Story()
L_0011: ldfld System.String SystemMissionCompleteCountStat
L_0016: ldc.i4.0
L_0017: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_001c: pop
L_001d: ldarg.0
L_001e: ldfld BattleTech.StatCollection companyStats
L_0023: ldstr "Funds"
L_0028: ldc.i4.0
L_0029: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_002e: pop
L_002f: ldarg.0
L_0030: ldfld BattleTech.StatCollection companyStats
L_0035: ldstr "FundsEverGained"
L_003a: ldc.i4.0
L_003b: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0040: pop
L_0041: ldarg.0
L_0042: ldfld BattleTech.StatCollection companyStats
L_0047: ldstr "TaskDuration"
L_004c: ldc.i4.0
L_004d: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0052: pop
L_0053: ldarg.0
L_0054: ldfld BattleTech.StatCollection companyStats
L_0059: ldstr "TravelTime"
L_005e: ldc.i4.s 99
L_0060: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0065: pop
L_0066: ldarg.0
L_0067: ldfld BattleTech.StatCollection companyStats
L_006c: ldstr "Travel"
L_0071: ldc.i4.0
L_0072: callvirt BattleTech.Statistic AddStatistic[SimGameTravelStatus](System.String, BattleTech.SimGameTravelStatus)
L_0077: pop
L_0078: ldarg.0
L_0079: ldfld BattleTech.StatCollection companyStats
L_007e: ldstr "UpgradeValue"
L_0083: ldarg.0
L_0084: call BattleTech.SimGameConstants get_Constants()
L_0089: callvirt BattleTech.StoryConstantsDef get_Story()
L_008e: ldfld System.Int32 DailyUpgradeValue
L_0093: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0098: pop
L_0099: ldarg.0
L_009a: ldfld BattleTech.StatCollection companyStats
L_009f: ldstr "MechTechSkill"
L_00a4: ldarg.0
L_00a5: call BattleTech.SimGameConstants get_Constants()
L_00aa: callvirt BattleTech.StoryConstantsDef get_Story()
L_00af: ldfld System.Int32 StartingMechTechSkill
L_00b4: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00b9: pop
L_00ba: ldarg.0
L_00bb: ldfld BattleTech.StatCollection companyStats
L_00c0: ldstr "MedTechSkill"
L_00c5: ldarg.0
L_00c6: call BattleTech.SimGameConstants get_Constants()
L_00cb: callvirt BattleTech.StoryConstantsDef get_Story()
L_00d0: ldfld System.Int32 StartingMedTechSkill
L_00d5: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00da: pop
L_00db: ldarg.0
L_00dc: ldfld BattleTech.StatCollection companyStats
L_00e1: ldstr "ExperiencePerDay"
L_00e6: ldarg.0
L_00e7: call BattleTech.SimGameConstants get_Constants()
L_00ec: callvirt BattleTech.StoryConstantsDef get_Story()
L_00f1: ldfld System.Int32 StartingPassiveXPGain
L_00f6: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_00fb: pop
L_00fc: ldarg.0
L_00fd: ldfld BattleTech.StatCollection companyStats
L_0102: ldstr "ExperiencePerDayCap"
L_0107: ldarg.0
L_0108: call BattleTech.SimGameConstants get_Constants()
L_010d: callvirt BattleTech.StoryConstantsDef get_Story()
L_0112: ldfld System.Int32 StartingPassiveXPGainCap
L_0117: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_011c: pop
L_011d: ldarg.0
L_011e: call SimGameType get_SimGameMode()
L_0123: stloc.1
L_0124: ldloc.1
L_0125: ldc.i4.2
L_0126: bne.un Label1
L_012b: ldarg.0
L_012c: call BattleTech.SimGameConstants get_Constants()
L_0131: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0136: ldfld System.Int32 StartingGlobalContractDifficulty
L_013b: conv.r4
L_013c: stloc.0
L_013d: br Label2
L_0142: Label1
L_0142: ldarg.0
L_0143: call BattleTech.SimGameConstants get_Constants()
L_0148: callvirt BattleTech.StoryConstantsDef get_Story()
L_014d: ldfld System.Single StartingGlobalContractDifficulty
L_0152: stloc.0
L_0153: Label2
L_0153: ldarg.0
L_0154: ldfld BattleTech.StatCollection companyStats
L_0159: ldstr "Difficulty"
L_015e: ldloc.0
L_015f: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0164: pop
L_0165: ldarg.0
L_0166: ldfld BattleTech.StatCollection companyStats
L_016b: ldstr "ShipType"
L_0170: ldc.i4.0
L_0171: stloc.2
L_0172: ldloca.s 2 (BattleTech.DropshipType)
L_0174: constrained. BattleTech.DropshipType
L_017a: callvirt System.String ToString()
L_017f: callvirt BattleTech.Statistic AddStatistic[String](System.String, System.String)
L_0184: pop
L_0185: ldarg.0
L_0186: ldfld BattleTech.StatCollection companyStats
L_018b: ldarg.0
L_018c: call BattleTech.SimGameConstants get_Constants()
L_0191: callvirt BattleTech.StoryConstantsDef get_Story()
L_0196: ldfld System.String MechBayPodsID
L_019b: ldarg.0
L_019c: call BattleTech.SimGameConstants get_Constants()
L_01a1: callvirt BattleTech.StoryConstantsDef get_Story()
L_01a6: ldfld System.Int32 StartingMechPods
L_01ab: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_01b0: pop
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.StatCollection companyStats
L_01b7: ldarg.0
L_01b8: call BattleTech.SimGameConstants get_Constants()
L_01bd: callvirt BattleTech.StoryConstantsDef get_Story()
L_01c2: ldfld System.String BarracksPodsID
L_01c7: ldarg.0
L_01c8: call BattleTech.SimGameConstants get_Constants()
L_01cd: callvirt BattleTech.StoryConstantsDef get_Story()
L_01d2: ldfld System.Int32 StartingBarrackPods
L_01d7: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_01dc: pop
L_01dd: ldarg.0
L_01de: ldfld BattleTech.StatCollection companyStats
L_01e3: ldarg.0
L_01e4: call BattleTech.SimGameConstants get_Constants()
L_01e9: callvirt BattleTech.StoryConstantsDef get_Story()
L_01ee: ldfld System.String DriveTravelID
L_01f3: ldarg.0
L_01f4: call BattleTech.SimGameConstants get_Constants()
L_01f9: callvirt BattleTech.StoryConstantsDef get_Story()
L_01fe: ldfld System.Single StartingDriveMod
L_0203: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0208: pop
L_0209: ldarg.0
L_020a: ldfld BattleTech.StatCollection companyStats
L_020f: ldstr "COMPANY_MechKills"
L_0214: ldc.i4.0
L_0215: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_021a: pop
L_021b: ldarg.0
L_021c: ldfld BattleTech.StatCollection companyStats
L_0221: ldstr "COMPANY_OtherKills"
L_0226: ldc.i4.0
L_0227: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_022c: pop
L_022d: ldarg.0
L_022e: ldfld BattleTech.StatCollection companyStats
L_0233: ldstr "COMPANY_MissionsAttempted"
L_0238: ldc.i4.0
L_0239: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_023e: pop
L_023f: ldarg.0
L_0240: ldfld BattleTech.StatCollection companyStats
L_0245: ldstr "COMPANY_MissionsSucceeded"
L_024a: ldc.i4.0
L_024b: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0250: pop
L_0251: ldarg.0
L_0252: ldfld BattleTech.StatCollection companyStats
L_0257: ldstr "COMPANY_MissionsGoodFaith"
L_025c: ldc.i4.0
L_025d: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0262: pop
L_0263: ldarg.0
L_0264: ldfld BattleTech.StatCollection companyStats
L_0269: ldstr "COMPANY_MissionFailures"
L_026e: ldc.i4.0
L_026f: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0274: pop
L_0275: ldarg.0
L_0276: ldfld BattleTech.StatCollection companyStats
L_027b: ldstr "COMPANY_MissionAggregateDifficulty"
L_0280: ldc.i4.0
L_0281: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0286: pop
L_0287: ldarg.0
L_0288: ldfld BattleTech.StatCollection companyStats
L_028d: ldstr "COMPANY_MonthlyStartingFunds"
L_0292: ldc.i4.0
L_0293: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0298: pop
L_0299: ldarg.0
L_029a: ldfld BattleTech.StatCollection companyStats
L_029f: ldstr "COMPANY_MonthlyStartingMorale"
L_02a4: ldc.i4.0
L_02a5: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02aa: pop
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.StatCollection companyStats
L_02b1: ldstr "COMPANY_MechWarriorsHired"
L_02b6: ldc.i4.0
L_02b7: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02bc: pop
L_02bd: ldarg.0
L_02be: ldfld BattleTech.StatCollection companyStats
L_02c3: ldstr "COMPANY_MechWarriorsFired"
L_02c8: ldc.i4.0
L_02c9: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02ce: pop
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.StatCollection companyStats
L_02d5: ldstr "COMPANY_MechsAdded"
L_02da: ldc.i4.0
L_02db: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_02e0: pop
L_02e1: ldarg.0
L_02e2: ldfld BattleTech.StatCollection companyStats
L_02e7: ldstr "COMPANY_NotificationViewed_LowFunds"
L_02ec: ldarg.0
L_02ed: call BattleTech.SimGameConstants get_Constants()
L_02f2: callvirt BattleTech.StoryConstantsDef get_Story()
L_02f7: ldfld System.Int32 NotifLowFundsRecurrence
L_02fc: neg
L_02fd: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0302: pop
L_0303: ldarg.0
L_0304: ldfld BattleTech.StatCollection companyStats
L_0309: ldstr "COMPANY_NotificationViewed_ArgoUpgradeNeeded"
L_030e: ldarg.0
L_030f: call BattleTech.SimGameConstants get_Constants()
L_0314: callvirt BattleTech.StoryConstantsDef get_Story()
L_0319: ldfld System.Int32 NotifArgoUpgradesRecurrence
L_031e: neg
L_031f: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0324: pop
L_0325: ldarg.0
L_0326: ldfld BattleTech.StatCollection companyStats
L_032b: ldstr "COMPANY_NotificationViewed_BattleMechRepairsNeeded"
L_0330: ldarg.0
L_0331: call BattleTech.SimGameConstants get_Constants()
L_0336: callvirt BattleTech.StoryConstantsDef get_Story()
L_033b: ldfld System.Int32 NotifMechRepairsNeededRecurrence
L_0340: neg
L_0341: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0346: pop
L_0347: ldarg.0
L_0348: call Void InitCompanyStatValidators()
L_034d: ldarg.0
L_034e: call Void OnNewQuarterBegin()
L_0353: ldarg.0
L_0354: call Void Postfix(BattleTech.SimGameState)
L_0359: ret
DONE

### Patch BattleTech.UI.CombatHUD, Void Init(BattleTech.CombatGameState)
L_0000: Local var 0: BattleTech.UI.CombatHUDInfoSidePanel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.UI.CombatHUDSidePanelHoverElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg 1
L_0018: call Boolean Prefix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldarg.1
L_0024: call Void set_Combat(BattleTech.CombatGameState)
L_0029: ldarg.0
L_002a: ldarg.1
L_002b: newobj Void .ctor(CombatGameState)
L_0030: call Void set_FiringPreview(BattleTech.FiringPreviewManager)
L_0035: ldarg.0
L_0036: ldarg.0
L_0037: call BattleTech.UI.CombatSelectionHandler GetComponent[CombatSelectionHandler]()
L_003c: stfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_0047: ldnull
L_0048: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_004d: brfalse Label1
L_0052: ldsfld HBS.Logging.ILog uiLogger
L_0057: ldstr "Couldn't find Selection Handler."
L_005c: callvirt Void LogWarning(System.Object)
L_0061: br Label2
L_0066: Label1
L_0066: ldarg.0
L_0067: ldfld BattleTech.UI.CombatSelectionHandler selectionHandler
L_006c: ldarg.1
L_006d: ldarg.0
L_006e: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0073: Label2
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: ldc.i4.1
L_0076: call BattleTech.UI.CombatHUDMechTray GetComponentInChildren[CombatHUDMechTray](Boolean)
L_007b: call Void set_MechTray(BattleTech.UI.CombatHUDMechTray)
L_0080: ldarg.0
L_0081: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_0086: ldnull
L_0087: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_008c: brfalse Label3
L_0091: ldsfld HBS.Logging.ILog uiLogger
L_0096: ldstr "Couldn't find MechTray under the CombatHUD."
L_009b: callvirt Void LogWarning(System.Object)
L_00a0: br Label4
L_00a5: Label3
L_00a5: ldarg.0
L_00a6: call BattleTech.UI.CombatHUDMechTray get_MechTray()
L_00ab: ldarg.1
L_00ac: callvirt MessageCenter get_MessageCenter()
L_00b1: ldarg.0
L_00b2: callvirt Void Init(MessageCenter, BattleTech.UI.CombatHUD)
L_00b7: Label4
L_00b7: ldarg.0
L_00b8: ldarg.0
L_00b9: ldc.i4.1
L_00ba: call BattleTech.UI.CombatHUDMechwarriorTray GetComponentInChildren[CombatHUDMechwarriorTray](Boolean)
L_00bf: call Void set_MechWarriorTray(BattleTech.UI.CombatHUDMechwarriorTray)
L_00c4: ldarg.0
L_00c5: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00ca: ldnull
L_00cb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00d0: brfalse Label5
L_00d5: ldsfld HBS.Logging.ILog uiLogger
L_00da: ldstr "Couldn't find MechWarriorTray under the CombatHUD."
L_00df: callvirt Void LogWarning(System.Object)
L_00e4: br Label6
L_00e9: Label5
L_00e9: ldarg.0
L_00ea: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00ef: ldarg.1
L_00f0: ldarg.0
L_00f1: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_00f6: ldarg.0
L_00f7: call BattleTech.UI.CombatHUDMechwarriorTray get_MechWarriorTray()
L_00fc: ldarg.1
L_00fd: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0102: callvirt Void RefreshTeam(BattleTech.Team)
L_0107: Label6
L_0107: ldarg.0
L_0108: ldarg.0
L_0109: ldc.i4.1
L_010a: call BattleTech.UI.CombatHUDWeaponPanel GetComponentInChildren[CombatHUDWeaponPanel](Boolean)
L_010f: call Void set_WeaponPanel(BattleTech.UI.CombatHUDWeaponPanel)
L_0114: ldarg.0
L_0115: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_011a: ldnull
L_011b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0120: brfalse Label7
L_0125: ldsfld HBS.Logging.ILog uiLogger
L_012a: ldstr "Couldn't find WeaponPanel under the CombatHUD."
L_012f: callvirt Void LogWarning(System.Object)
L_0134: br Label8
L_0139: Label7
L_0139: ldarg.0
L_013a: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_013f: ldnull
L_0140: callvirt Void set_DisplayedActor(BattleTech.AbstractActor)
L_0145: ldarg.0
L_0146: call BattleTech.UI.CombatHUDWeaponPanel get_WeaponPanel()
L_014b: ldarg.1
L_014c: ldarg.0
L_014d: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_0152: Label8
L_0152: ldarg.0
L_0153: call BattleTech.UI.UIManager get_Instance()
L_0158: ldstr ""
L_015d: ldc.i4.1
L_015e: callvirt BattleTech.UI.CombatHUDPhaseTrack GetOrCreateUIModule[CombatHUDPhaseTrack](System.String, Boolean)
L_0163: call Void set_PhaseTrack(BattleTech.UI.CombatHUDPhaseTrack)
L_0168: ldarg.0
L_0169: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_016e: ldnull
L_016f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0174: brfalse Label9
L_0179: ldsfld HBS.Logging.ILog uiLogger
L_017e: ldstr "Error creating PhaseTrack!"
L_0183: callvirt Void LogWarning(System.Object)
L_0188: br Label10
L_018d: Label9
L_018d: ldarg.0
L_018e: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0193: ldarg.1
L_0194: ldarg.0
L_0195: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_019a: Label10
L_019a: ldarg.0
L_019b: call BattleTech.UI.UIManager get_Instance()
L_01a0: ldstr ""
L_01a5: ldc.i4.1
L_01a6: callvirt BattleTech.UI.TurnEventNotification GetOrCreateUIModule[TurnEventNotification](System.String, Boolean)
L_01ab: call Void set_TurnEventNotification(BattleTech.UI.TurnEventNotification)
L_01b0: ldarg.0
L_01b1: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01b6: ldnull
L_01b7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01bc: brfalse Label11
L_01c1: ldsfld HBS.Logging.ILog uiLogger
L_01c6: ldstr "Error creating Turn Event Notification!"
L_01cb: callvirt Void LogError(System.Object)
L_01d0: br Label12
L_01d5: Label11
L_01d5: ldarg.0
L_01d6: call BattleTech.UI.TurnEventNotification get_TurnEventNotification()
L_01db: ldarg.1
L_01dc: ldarg.0
L_01dd: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_01e2: Label12
L_01e2: ldarg.1
L_01e3: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01e8: callvirt Boolean IsNetworkGameActive()
L_01ed: brfalse Label13
L_01f2: ldarg.0
L_01f3: call BattleTech.UI.UIManager get_Instance()
L_01f8: ldstr ""
L_01fd: ldc.i4.1
L_01fe: callvirt BattleTech.UI.CombatHUDMultiplayer GetOrCreateUIModule[CombatHUDMultiplayer](System.String, Boolean)
L_0203: call Void set_MultiplayerHUD(BattleTech.UI.CombatHUDMultiplayer)
L_0208: ldarg.0
L_0209: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_020e: ldnull
L_020f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0214: brfalse Label14
L_0219: ldsfld HBS.Logging.ILog uiLogger
L_021e: ldstr "Error creating multiplayer UI!"
L_0223: callvirt Void LogError(System.Object)
L_0228: br Label15
L_022d: Label14
L_022d: ldarg.0
L_022e: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0233: ldarg.0
L_0234: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0239: Label13
L_0239: Label15
L_0239: ldarg.0
L_023a: call BattleTech.UI.UIManager get_Instance()
L_023f: ldstr ""
L_0244: ldc.i4.1
L_0245: callvirt BattleTech.UI.CombatHUDTargetingComputer GetOrCreateUIModule[CombatHUDTargetingComputer](System.String, Boolean)
L_024a: call Void set_TargetingComputer(BattleTech.UI.CombatHUDTargetingComputer)
L_024f: ldarg.0
L_0250: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_0255: ldnull
L_0256: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_025b: brfalse Label16
L_0260: ldsfld HBS.Logging.ILog uiLogger
L_0265: ldstr "Error creating Targeting Computer!"
L_026a: callvirt Void LogError(System.Object)
L_026f: br Label17
L_0274: Label16
L_0274: ldarg.0
L_0275: call BattleTech.UI.CombatHUDTargetingComputer get_TargetingComputer()
L_027a: ldarg.0
L_027b: callvirt Void Init(BattleTech.UI.CombatHUD)
L_0280: Label17
L_0280: ldarg.0
L_0281: call BattleTech.UI.UIManager get_Instance()
L_0286: ldstr ""
L_028b: ldc.i4.1
L_028c: callvirt BattleTech.UI.CombatHUDCalledShotPopUp GetOrCreateUIModule[CombatHUDCalledShotPopUp](System.String, Boolean)
L_0291: call Void set_CalledShotPopUp(BattleTech.UI.CombatHUDCalledShotPopUp)
L_0296: ldarg.0
L_0297: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_029c: ldnull
L_029d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02a2: brfalse Label18
L_02a7: ldsfld HBS.Logging.ILog uiLogger
L_02ac: ldstr "Error creating Called Shot Popup!"
L_02b1: callvirt Void LogError(System.Object)
L_02b6: br Label19
L_02bb: Label18
L_02bb: ldarg.0
L_02bc: call BattleTech.UI.CombatHUDCalledShotPopUp get_CalledShotPopUp()
L_02c1: ldarg.0
L_02c2: callvirt Void Init(BattleTech.UI.CombatHUD)
L_02c7: Label19
L_02c7: ldarg.0
L_02c8: call BattleTech.UI.UIManager get_Instance()
L_02cd: ldstr ""
L_02d2: ldc.i4.1
L_02d3: callvirt BattleTech.UI.CombatHUDAttackModeSelector GetOrCreateUIModule[CombatHUDAttackModeSelector](System.String, Boolean)
L_02d8: call Void set_AttackModeSelector(BattleTech.UI.CombatHUDAttackModeSelector)
L_02dd: ldarg.0
L_02de: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_02e3: ldnull
L_02e4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02e9: brfalse Label20
L_02ee: ldsfld HBS.Logging.ILog uiLogger
L_02f3: ldstr "Error creating Attack Mode Selector!"
L_02f8: callvirt Void LogError(System.Object)
L_02fd: br Label21
L_0302: Label20
L_0302: ldarg.0
L_0303: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0308: ldarg.1
L_0309: ldarg.0
L_030a: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_030f: ldarg.0
L_0310: call BattleTech.UI.CombatHUDAttackModeSelector get_AttackModeSelector()
L_0315: ldc.i4.0
L_0316: callvirt Void set_Visible(Boolean)
L_031b: Label21
L_031b: ldarg.0
L_031c: ldarg.0
L_031d: call UnityEngine.GameObject get_gameObject()
L_0322: callvirt BattleTech.UI.CombatHUDInWorldElementMgr AddComponent[CombatHUDInWorldElementMgr]()
L_0327: call Void set_InWorldMgr(BattleTech.UI.CombatHUDInWorldElementMgr)
L_032c: ldarg.0
L_032d: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0332: ldnull
L_0333: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0338: brfalse Label22
L_033d: ldsfld HBS.Logging.ILog uiLogger
L_0342: ldstr "Error finding InWorldElementMgr!"
L_0347: callvirt Void LogError(System.Object)
L_034c: br Label23
L_0351: Label22
L_0351: ldarg.0
L_0352: call BattleTech.UI.CombatHUDInWorldElementMgr get_InWorldMgr()
L_0357: ldarg.1
L_0358: ldarg.0
L_0359: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_035e: Label23
L_035e: ldarg.0
L_035f: call BattleTech.UI.UIManager get_Instance()
L_0364: ldstr ""
L_0369: ldc.i4.1
L_036a: callvirt BattleTech.UI.CombatHUDObjectiveStatusNotify GetOrCreateUIModule[CombatHUDObjectiveStatusNotify](System.String, Boolean)
L_036f: call Void set_ObjectiveStatusNotify(BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_0374: ldarg.0
L_0375: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_037a: ldnull
L_037b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0380: brfalse Label24
L_0385: ldsfld HBS.Logging.ILog uiLogger
L_038a: ldstr "Error creating Objective Status Notification!"
L_038f: callvirt Void LogError(System.Object)
L_0394: Label24
L_0394: ldarg.0
L_0395: call BattleTech.UI.UIManager get_Instance()
L_039a: ldstr ""
L_039f: ldc.i4.1
L_03a0: callvirt BattleTech.UI.CombatHUDObjectivesList GetOrCreateUIModule[CombatHUDObjectivesList](System.String, Boolean)
L_03a5: call Void set_ObjectivesList(BattleTech.UI.CombatHUDObjectivesList)
L_03aa: ldarg.0
L_03ab: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03b0: ldnull
L_03b1: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03b6: brfalse Label25
L_03bb: ldsfld HBS.Logging.ILog uiLogger
L_03c0: ldstr "Error creating Objective List!"
L_03c5: callvirt Void LogError(System.Object)
L_03ca: br Label26
L_03cf: Label25
L_03cf: ldarg.0
L_03d0: call BattleTech.UI.CombatHUDObjectivesList get_ObjectivesList()
L_03d5: ldarg.1
L_03d6: ldarg.0
L_03d7: ldarg.0
L_03d8: call BattleTech.UI.CombatHUDObjectiveStatusNotify get_ObjectiveStatusNotify()
L_03dd: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDObjectiveStatusNotify)
L_03e2: Label26
L_03e2: call BattleTech.UI.UIManager get_Instance()
L_03e7: ldstr ""
L_03ec: ldc.i4.1
L_03ed: callvirt BattleTech.UI.CombatHUDInfoSidePanel GetOrCreateUIModule[CombatHUDInfoSidePanel](System.String, Boolean)
L_03f2: stloc.0
L_03f3: ldloc.0
L_03f4: callvirt Void Init()
L_03f9: ldloc.0
L_03fa: ldc.i4.0
L_03fb: callvirt Void set_Visible(Boolean)
L_0400: ldarg.0
L_0401: call BattleTech.UI.UIManager get_Instance()
L_0406: ldstr ""
L_040b: ldc.i4.1
L_040c: callvirt BattleTech.UI.CombatHUDDialogSideStack GetOrCreateUIModule[CombatHUDDialogSideStack](System.String, Boolean)
L_0411: call Void set_DialogSideStack(BattleTech.UI.CombatHUDDialogSideStack)
L_0416: ldarg.0
L_0417: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_041c: ldnull
L_041d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0422: brfalse Label27
L_0427: ldsfld HBS.Logging.ILog uiLogger
L_042c: ldstr "Error creating DialogSideStack!"
L_0431: callvirt Void LogError(System.Object)
L_0436: br Label28
L_043b: Label27
L_043b: ldarg.0
L_043c: call BattleTech.UI.CombatHUDDialogSideStack get_DialogSideStack()
L_0441: ldarg.1
L_0442: ldarg.0
L_0443: ldloc.0
L_0444: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD, BattleTech.UI.CombatHUDInfoSidePanel)
L_0449: Label28
L_0449: ldarg.0
L_044a: call BattleTech.UI.UIManager get_Instance()
L_044f: ldstr ""
L_0454: ldc.i4.1
L_0455: callvirt BattleTech.UI.SGDialogWidget GetOrCreatePopupModule[SGDialogWidget](System.String, Boolean)
L_045a: call Void set_DialogWidget(BattleTech.UI.SGDialogWidget)
L_045f: ldarg.0
L_0460: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_0465: ldnull
L_0466: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_046b: brfalse Label29
L_0470: ldsfld HBS.Logging.ILog uiLogger
L_0475: ldstr "Error creating DialogWidget!"
L_047a: callvirt Void LogError(System.Object)
L_047f: br Label30
L_0484: Label29
L_0484: ldarg.0
L_0485: call BattleTech.UI.SGDialogWidget get_DialogWidget()
L_048a: ldarg.1
L_048b: callvirt Void Init(BattleTech.CombatGameState)
L_0490: Label30
L_0490: ldarg.0
L_0491: call BattleTech.UI.UIManager get_Instance()
L_0496: ldstr ""
L_049b: ldc.i4.1
L_049c: callvirt BattleTech.UI.CombatHUDRetreatEscMenu GetOrCreateUIModule[CombatHUDRetreatEscMenu](System.String, Boolean)
L_04a1: call Void set_RetreatEscMenu(BattleTech.UI.CombatHUDRetreatEscMenu)
L_04a6: ldarg.0
L_04a7: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04ac: ldnull
L_04ad: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04b2: brfalse Label31
L_04b7: ldsfld HBS.Logging.ILog uiLogger
L_04bc: ldstr "Error creating RetreatEscMenu!"
L_04c1: callvirt Void LogError(System.Object)
L_04c6: br Label32
L_04cb: Label31
L_04cb: ldarg.0
L_04cc: call BattleTech.UI.CombatHUDRetreatEscMenu get_RetreatEscMenu()
L_04d1: ldarg.1
L_04d2: ldarg.0
L_04d3: callvirt Void Init(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_04d8: Label32
L_04d8: ldarg.0
L_04d9: call BattleTech.UI.UIManager get_Instance()
L_04de: ldstr ""
L_04e3: ldc.i4.1
L_04e4: callvirt BattleTech.UI.CombatHUDMissionEnd GetOrCreateUIModule[CombatHUDMissionEnd](System.String, Boolean)
L_04e9: call Void set_MissionEndScreen(BattleTech.UI.CombatHUDMissionEnd)
L_04ee: ldarg.0
L_04ef: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_04f4: ldnull
L_04f5: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04fa: brfalse Label33
L_04ff: ldsfld HBS.Logging.ILog uiLogger
L_0504: ldstr "Error creating mission end screen!"
L_0509: callvirt Void LogError(System.Object)
L_050e: br Label34
L_0513: Label33
L_0513: ldarg.0
L_0514: call BattleTech.UI.CombatHUDMissionEnd get_MissionEndScreen()
L_0519: callvirt Void Init()
L_051e: Label34
L_051e: ldarg.0
L_051f: call BattleTech.UI.CombatHUDMultiplayer get_MultiplayerHUD()
L_0524: ldnull
L_0525: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_052a: brfalse Label35
L_052f: ldarg.0
L_0530: call BattleTech.UI.UIManager get_Instance()
L_0535: ldstr ""
L_053a: ldc.i4.1
L_053b: callvirt BattleTech.UI.CombatChatModule GetOrCreateUIModule[CombatChatModule](System.String, Boolean)
L_0540: call Void set_CombatChatModule(BattleTech.UI.CombatChatModule)
L_0545: ldarg.0
L_0546: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_054b: ldnull
L_054c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0551: brfalse Label36
L_0556: ldsfld HBS.Logging.ILog uiLogger
L_055b: ldstr "Error creating combat chat module"
L_0560: callvirt Void LogError(System.Object)
L_0565: br Label37
L_056a: Label36
L_056a: ldarg.0
L_056b: call BattleTech.UI.CombatChatModule get_CombatChatModule()
L_0570: callvirt Void CombatInit()
L_0575: ldloc.0
L_0576: callvirt Void BumpUp()
L_057b: Label35
L_057b: Label37
L_057b: ldarg.0
L_057c: call BattleTech.UI.UIManager get_Instance()
L_0581: ldstr "DebugHUD"
L_0586: ldc.i4.1
L_0587: callvirt BattleTech.UI.DebugHUD GetOrCreateDebugModule[DebugHUD](System.String, Boolean)
L_058c: call Void set_debugHUD(BattleTech.UI.DebugHUD)
L_0591: ldarg.0
L_0592: call BattleTech.UI.DebugHUD get_debugHUD()
L_0597: ldnull
L_0598: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_059d: brfalse Label38
L_05a2: ldsfld HBS.Logging.ILog uiLogger
L_05a7: ldstr "Error creating combat debug hud"
L_05ac: callvirt Void LogError(System.Object)
L_05b1: br Label39
L_05b6: Label38
L_05b6: ldarg.0
L_05b7: call BattleTech.UI.DebugHUD get_debugHUD()
L_05bc: ldarg.1
L_05bd: ldarg.0
L_05be: callvirt Void CreateCombatDebugHUD(BattleTech.CombatGameState, BattleTech.UI.CombatHUD)
L_05c3: Label39
L_05c3: newobj Void .ctor()
L_05c8: stloc.1
L_05c9: ldarg.0
L_05ca: ldc.i4.1
L_05cb: ldloc.1
L_05cc: call Void GetComponentsInChildren[CombatHUDSidePanelHoverElement](Boolean, System.Collections.Generic.List`1[BattleTech.UI.CombatHUDSidePanelHoverElement])
L_05d1: ldc.i4.0
L_05d2: stloc.2
L_05d3: br Label40
L_05d8: Label42
L_05d8: ldloc.1
L_05d9: ldloc.2
L_05da: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05df: callvirt Boolean get_IsInitialized()
L_05e4: brtrue Label41
L_05e9: ldloc.1
L_05ea: ldloc.2
L_05eb: callvirt BattleTech.UI.CombatHUDSidePanelHoverElement get_Item(Int32)
L_05f0: ldarg.0
L_05f1: callvirt Void Init(BattleTech.UI.CombatHUD)
L_05f6: Label41
L_05f6: ldloc.2
L_05f7: ldc.i4.1
L_05f8: add
L_05f9: stloc.2
L_05fa: Label40
L_05fa: ldloc.2
L_05fb: ldloc.1
L_05fc: callvirt Int32 get_Count()
L_0601: blt Label42
L_0606: ldarg.0
L_0607: ldfld BattleTech.UI.UIManager uiManager
L_060c: ldc.i4.1
L_060d: callvirt Void SetUIRootInteractable(Boolean)
L_0612: ldarg.1
L_0613: callvirt BattleTech.TurnDirector get_TurnDirector()
L_0618: callvirt Int32 get_CurrentRound()
L_061d: brfalse Label43
L_0622: ldarg.0
L_0623: call BattleTech.UI.CombatHUDPhaseTrack get_PhaseTrack()
L_0628: ldarg.1
L_0629: callvirt BattleTech.TurnDirector get_TurnDirector()
L_062e: callvirt Int32 get_CurrentRound()
L_0633: callvirt Void SetRoundFromLoad(Int32)
L_0638: Label43
L_0638: ldarg.0
L_0639: ldc.i4.1
L_063a: call Void SubscribeToMessages(Boolean)
L_063f: Label0
L_063f: ldarg.0
L_0640: call Void RunCombatStarts(BattleTech.UI.CombatHUD)
L_0645: ldarg.0
L_0646: ldarg 1
L_064c: call Void Postfix(BattleTech.UI.CombatHUD, BattleTech.CombatGameState)
L_0651: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_InventoryGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_InventoryGear, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_InventoryWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_InventoryWeapon, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryItemElement, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.MechComponentRef componentRef
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.MechComponentRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryItemElement_NotListView, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.MechComponentRef componentRef
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement_NotListView, BattleTech.MechComponentRef)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_InventoryGear_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_InventoryGear_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_InventoryWeapon_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_InventoryWeapon_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentRef componentRef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.LanceMechEquipmentListItem, Void SetData(System.String, BattleTech.ComponentDamageLevel, BattleTech.UI.UIColor, BattleTech.UI.UIColor)
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.TMProWrapper.LocalizableText itemText
L_0006: ldarg.1
L_0007: call System.Object[] Empty[Object]()
L_000c: callvirt Void SetText(System.String, System.Object[])
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0017: ldarg.3
L_0018: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0023: ldarg.s 4
L_0025: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_002a: ldarg.2
L_002b: ldc.i4.2
L_002c: ble Label1
L_0031: ldarg.0
L_0032: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0037: ldc.i4.7
L_0038: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_003d: br Label3
L_0042: Label1
L_0042: ldarg.2
L_0043: ldc.i4.0
L_0044: ble Label2
L_0049: ldarg.0
L_004a: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_004f: ldc.i4.6
L_0050: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0055: br Label4
L_005a: Label2
L_005a: ldarg.0
L_005b: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_0060: ldc.i4.1
L_0061: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0066: Label3
L_0066: Label4
L_0066: ldarg 2
L_006c: call Void SetColor(BattleTech.ComponentDamageLevel)
L_0071: ret
DONE

### Patch BattleTech.UI.LanceMechEquipmentListItem, Void SetTooltipData(BattleTech.MechComponentDef)
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_0006: ldnull
L_0007: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: call BattleTech.UI.Tooltips.HBSTooltip GetComponent[HBSTooltip]()
L_0018: stfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_001d: Label1
L_001d: ldarg.0
L_001e: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_0023: ldnull
L_0024: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0029: brfalse Label2
L_002e: ldarg.1
L_002f: brfalse Label3
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.Tooltips.HBSTooltip EquipmentTooltip
L_003a: ldarg.1
L_003b: call System.Object MechComponentDefHandlerForTooltip(BattleTech.MechComponentDef)
L_0040: call BattleTech.UI.Tooltips.HBSTooltipStateData GetStateDataFromObject(System.Object)
L_0045: callvirt Void SetDefaultStateData(BattleTech.UI.Tooltips.HBSTooltipStateData)
L_004a: Label2
L_004a: Label3
L_004a: ldarg.0
L_004b: ldarg 1
L_0051: ldarg.0
L_0052: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0057: ldarg.0
L_0058: ldfld BattleTech.UI.UIColorRefTracker itemTextColor
L_005d: call Void SetColor(BattleTech.UI.LanceMechEquipmentListItem, BattleTech.MechComponentDef, BattleTech.UI.UIColorRefTracker, BattleTech.UI.UIColorRefTracker)
L_0062: ret
DONE

### Patch BattleTech.MechComponentDef, BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.AmmunitionBoxDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmunitionDef
L_0000: Local var 5: BattleTech.UI.UIColor
L_0000: ldc.i4 0
L_0005: stloc 5 (BattleTech.UI.UIColor)
L_0007: ldc.i4.1
L_0008: stloc.0
L_0009: ldarg.0
L_000a: brtrue Label1
L_000f: ldloc.0
L_0010: br Label18
L_0015: Label1
L_0015: ldarg.0
L_0016: isinst BattleTech.WeaponDef
L_001b: stloc.1
L_001c: ldarg.0
L_001d: isinst BattleTech.AmmunitionBoxDef
L_0022: stloc.2
L_0023: ldloc.2
L_0024: brfalse Label2
L_0029: ldloc.2
L_002a: ldarg.0
L_002b: callvirt BattleTech.Data.DataManager get_DataManager()
L_0030: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_0035: Label2
L_0035: ldarg.0
L_0036: callvirt BattleTech.ComponentType get_ComponentType()
L_003b: ldc.i4.1
L_003c: bne.un Label3
L_0041: ldloc.1
L_0042: callvirt BattleTech.WeaponCategory get_Category()
L_0047: stloc.3
L_0048: ldloc.3
L_0049: ldc.i4.1
L_004a: sub
L_004b: switch Labels4,5,6,7
L_0060: br Label8
L_0065: Label4
L_0065: call BattleTech.UI.UIManager get_Instance()
L_006a: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_006f: ldflda BattleTech.UI.UIColorRef Ballistic
L_0074: ldfld BattleTech.UI.UIColor UIColor
L_0079: stloc.0
L_007a: br Label9
L_007f: Label5
L_007f: call BattleTech.UI.UIManager get_Instance()
L_0084: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0089: ldflda BattleTech.UI.UIColorRef Energy
L_008e: ldfld BattleTech.UI.UIColor UIColor
L_0093: stloc.0
L_0094: br Label10
L_0099: Label6
L_0099: call BattleTech.UI.UIManager get_Instance()
L_009e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00a3: ldflda BattleTech.UI.UIColorRef Missile
L_00a8: ldfld BattleTech.UI.UIColor UIColor
L_00ad: stloc.0
L_00ae: br Label11
L_00b3: Label7
L_00b3: call BattleTech.UI.UIManager get_Instance()
L_00b8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00bd: ldflda BattleTech.UI.UIColorRef Small
L_00c2: ldfld BattleTech.UI.UIColor UIColor
L_00c7: stloc.0
L_00c8: br Label12
L_00cd: Label8
L_00cd: call BattleTech.UI.UIManager get_Instance()
L_00d2: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00d7: ldflda BattleTech.UI.UIColorRef Equipment
L_00dc: ldfld BattleTech.UI.UIColor UIColor
L_00e1: stloc.0
L_00e2: br Label13
L_00e7: Label3
L_00e7: ldarg.0
L_00e8: callvirt BattleTech.ComponentType get_ComponentType()
L_00ed: ldc.i4.2
L_00ee: bne.un Label14
L_00f3: ldloc.2
L_00f4: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00f9: stloc.s 4 (BattleTech.AmmunitionDef)
L_00fb: ldloc.s 4 (BattleTech.AmmunitionDef)
L_00fd: brfalse Label15
L_0102: ldloc.s 4 (BattleTech.AmmunitionDef)
L_0104: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0109: callvirt BattleTech.UI.UIColor GetUIColor()
L_010e: stloc.0
L_010f: br Label16
L_0114: Label15
L_0114: call BattleTech.UI.UIManager get_Instance()
L_0119: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_011e: ldflda BattleTech.UI.UIColorRef Equipment
L_0123: ldfld BattleTech.UI.UIColor UIColor
L_0128: stloc.0
L_0129: br Label17
L_012e: Label14
L_012e: call BattleTech.UI.UIManager get_Instance()
L_0133: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0138: ldflda BattleTech.UI.UIColorRef Equipment
L_013d: ldfld BattleTech.UI.UIColor UIColor
L_0142: stloc.0
L_0143: Label9
L_0143: Label10
L_0143: Label11
L_0143: Label12
L_0143: Label13
L_0143: Label16
L_0143: Label17
L_0143: ldloc.0
L_0144: Label18
L_0144: stloc 5 (BattleTech.UI.UIColor)
L_0146: ldarg 0
L_014c: ldloca 5 (BattleTech.UI.UIColor)
L_014e: call Void Postfix(BattleTech.MechComponentDef, BattleTech.UI.UIColor ByRef)
L_0153: ldloc 5 (BattleTech.UI.UIColor)
L_0155: ret
DONE

### Patch BattleTech.MechComponentRef, BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.AmmunitionBoxDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmunitionDef
L_0000: Local var 5: BattleTech.UI.UIColor
L_0000: ldc.i4 0
L_0005: stloc 5 (BattleTech.UI.UIColor)
L_0007: ldc.i4.1
L_0008: stloc.0
L_0009: ldarg.0
L_000a: brtrue Label1
L_000f: ldloc.0
L_0010: br Label18
L_0015: Label1
L_0015: ldarg.0
L_0016: callvirt BattleTech.MechComponentDef get_Def()
L_001b: isinst BattleTech.WeaponDef
L_0020: stloc.1
L_0021: ldarg.0
L_0022: callvirt BattleTech.MechComponentDef get_Def()
L_0027: isinst BattleTech.AmmunitionBoxDef
L_002c: stloc.2
L_002d: ldloc.2
L_002e: brfalse Label2
L_0033: ldloc.2
L_0034: ldarg.0
L_0035: callvirt BattleTech.Data.DataManager get_DataManager()
L_003a: callvirt Void refreshAmmo(BattleTech.Data.DataManager)
L_003f: Label2
L_003f: ldarg.0
L_0040: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0045: ldc.i4.1
L_0046: bne.un Label3
L_004b: ldloc.1
L_004c: callvirt BattleTech.WeaponCategory get_Category()
L_0051: stloc.3
L_0052: ldloc.3
L_0053: ldc.i4.1
L_0054: sub
L_0055: switch Labels4,5,6,7
L_006a: br Label8
L_006f: Label4
L_006f: call BattleTech.UI.UIManager get_Instance()
L_0074: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0079: ldflda BattleTech.UI.UIColorRef Ballistic
L_007e: ldfld BattleTech.UI.UIColor UIColor
L_0083: stloc.0
L_0084: br Label9
L_0089: Label5
L_0089: call BattleTech.UI.UIManager get_Instance()
L_008e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0093: ldflda BattleTech.UI.UIColorRef Energy
L_0098: ldfld BattleTech.UI.UIColor UIColor
L_009d: stloc.0
L_009e: br Label10
L_00a3: Label6
L_00a3: call BattleTech.UI.UIManager get_Instance()
L_00a8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00ad: ldflda BattleTech.UI.UIColorRef Missile
L_00b2: ldfld BattleTech.UI.UIColor UIColor
L_00b7: stloc.0
L_00b8: br Label11
L_00bd: Label7
L_00bd: call BattleTech.UI.UIManager get_Instance()
L_00c2: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00c7: ldflda BattleTech.UI.UIColorRef Small
L_00cc: ldfld BattleTech.UI.UIColor UIColor
L_00d1: stloc.0
L_00d2: br Label12
L_00d7: Label8
L_00d7: call BattleTech.UI.UIManager get_Instance()
L_00dc: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00e1: ldflda BattleTech.UI.UIColorRef Equipment
L_00e6: ldfld BattleTech.UI.UIColor UIColor
L_00eb: stloc.0
L_00ec: br Label13
L_00f1: Label3
L_00f1: ldarg.0
L_00f2: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00f7: ldc.i4.2
L_00f8: bne.un Label14
L_00fd: ldloc.2
L_00fe: callvirt BattleTech.AmmunitionDef get_Ammo()
L_0103: stloc.s 4 (BattleTech.AmmunitionDef)
L_0105: ldloc.s 4 (BattleTech.AmmunitionDef)
L_0107: brfalse Label15
L_010c: ldloc.s 4 (BattleTech.AmmunitionDef)
L_010e: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0113: callvirt BattleTech.UI.UIColor GetUIColor()
L_0118: stloc.0
L_0119: br Label16
L_011e: Label15
L_011e: call BattleTech.UI.UIManager get_Instance()
L_0123: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0128: ldflda BattleTech.UI.UIColorRef Equipment
L_012d: ldfld BattleTech.UI.UIColor UIColor
L_0132: stloc.0
L_0133: br Label17
L_0138: Label14
L_0138: call BattleTech.UI.UIManager get_Instance()
L_013d: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0142: ldflda BattleTech.UI.UIColorRef Equipment
L_0147: ldfld BattleTech.UI.UIColor UIColor
L_014c: stloc.0
L_014d: Label9
L_014d: Label10
L_014d: Label11
L_014d: Label12
L_014d: Label13
L_014d: Label16
L_014d: Label17
L_014d: ldloc.0
L_014e: Label18
L_014e: stloc 5 (BattleTech.UI.UIColor)
L_0150: ldnull
L_0151: ldloca 5 (BattleTech.UI.UIColor)
L_0153: ldarg 0
L_0159: call Void Postfix(BattleTech.MechComponentRef, BattleTech.UI.UIColor ByRef, BattleTech.MechComponentRef)
L_015e: ldloc 5 (BattleTech.UI.UIColor)
L_0160: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_SalvageGear, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.SalvageDef salvageDef
L_002c: ldfld BattleTech.ComponentType ComponentType
L_0031: stloc.1
L_0032: ldloc.1
L_0033: ldc.i4.2
L_0034: sub
L_0035: switch Labels1,2,3,4
L_004a: br Label5
L_004f: Label3
L_004f: call BattleTech.UI.UIManager get_Instance()
L_0054: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0059: ldflda BattleTech.UI.UIColorRef Equipment
L_005e: ldfld BattleTech.UI.UIColor UIColor
L_0063: stloc.0
L_0064: br Label6
L_0069: Label4
L_0069: call BattleTech.UI.UIManager get_Instance()
L_006e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0073: ldflda BattleTech.UI.UIColorRef Upgrade
L_0078: ldfld BattleTech.UI.UIColor UIColor
L_007d: stloc.0
L_007e: br Label7
L_0083: Label2
L_0083: call BattleTech.UI.UIManager get_Instance()
L_0088: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_008d: ldflda BattleTech.UI.UIColorRef HeatSink
L_0092: ldfld BattleTech.UI.UIColor UIColor
L_0097: stloc.0
L_0098: br Label8
L_009d: Label1
L_009d: ldarg.0
L_009e: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a3: brfalse Label9
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00ae: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b8: callvirt BattleTech.UI.UIColor GetUIColor()
L_00bd: stloc.0
L_00be: Label5
L_00be: Label6
L_00be: Label7
L_00be: Label8
L_00be: Label9
L_00be: ldarg.1
L_00bf: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c4: stloc.2
L_00c5: ldc.i4.0
L_00c6: stloc.3
L_00c7: br Label10
L_00cc: Label11
L_00cc: ldloc.2
L_00cd: ldloc.3
L_00ce: ldelem.ref
L_00cf: ldloc.0
L_00d0: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00d5: ldloc.3
L_00d6: ldc.i4.1
L_00d7: add
L_00d8: stloc.3
L_00d9: Label10
L_00d9: ldloc.3
L_00da: ldloc.2
L_00db: ldlen
L_00dc: conv.i4
L_00dd: blt Label11
L_00e2: Label0
L_00e2: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryDataObject_SalvageWeapon, BattleTech.UI.InventoryItemElement)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentDef componentDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageGear_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_SalvageGear_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.SalvageDef salvageDef
L_002c: ldfld BattleTech.ComponentType ComponentType
L_0031: stloc.1
L_0032: ldloc.1
L_0033: ldc.i4.2
L_0034: sub
L_0035: switch Labels1,2,3,4
L_004a: br Label5
L_004f: Label3
L_004f: call BattleTech.UI.UIManager get_Instance()
L_0054: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0059: ldflda BattleTech.UI.UIColorRef Equipment
L_005e: ldfld BattleTech.UI.UIColor UIColor
L_0063: stloc.0
L_0064: br Label6
L_0069: Label4
L_0069: call BattleTech.UI.UIManager get_Instance()
L_006e: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0073: ldflda BattleTech.UI.UIColorRef Upgrade
L_0078: ldfld BattleTech.UI.UIColor UIColor
L_007d: stloc.0
L_007e: br Label7
L_0083: Label2
L_0083: call BattleTech.UI.UIManager get_Instance()
L_0088: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_008d: ldflda BattleTech.UI.UIColorRef HeatSink
L_0092: ldfld BattleTech.UI.UIColor UIColor
L_0097: stloc.0
L_0098: br Label8
L_009d: Label1
L_009d: ldarg.0
L_009e: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a3: brfalse Label9
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00ae: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b3: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00b8: callvirt BattleTech.UI.UIColor GetUIColor()
L_00bd: stloc.0
L_00be: Label5
L_00be: Label6
L_00be: Label7
L_00be: Label8
L_00be: Label9
L_00be: ldarg.1
L_00bf: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c4: stloc.2
L_00c5: ldc.i4.0
L_00c6: stloc.3
L_00c7: br Label10
L_00cc: Label11
L_00cc: ldloc.2
L_00cd: ldloc.3
L_00ce: ldelem.ref
L_00cf: ldloc.0
L_00d0: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00d5: ldloc.3
L_00d6: ldc.i4.1
L_00d7: add
L_00d8: stloc.3
L_00d9: Label10
L_00d9: ldloc.3
L_00da: ldloc.2
L_00db: ldlen
L_00dc: conv.i4
L_00dd: blt Label11
L_00e2: Label0
L_00e2: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageWeapon_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean ChangeColor(BattleTech.UI.ListElementController_SalvageWeapon_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.MechComponentDef componentDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageFullMech, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.InventoryDataObject_SalvageFullMech, BattleTech.UI.InventoryItemElement)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ldarg.1
L_0046: ldfld BattleTech.UI.UIColorRefTracker iconMechBackgroundColor
L_004b: ldc.i4.2
L_004c: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0051: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageFullMech_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.ListElementController_SalvageFullMech_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ldarg.1
L_0046: ldfld BattleTech.UI.UIColorRefTracker iconMechBackgroundColor
L_004b: ldc.i4.2
L_004c: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0051: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_SalvageMechPart, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.InventoryDataObject_SalvageMechPart, BattleTech.UI.InventoryItemElement)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ret
DONE

### Patch BattleTech.UI.ListElementController_SalvageMechPart_NotListView, Void RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void ChangeColor(BattleTech.UI.ListElementController_SalvageMechPart_NotListView, BattleTech.UI.InventoryItemElement_NotListView)
L_000c: call BattleTech.UI.UIManager get_Instance()
L_0011: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0016: ldflda BattleTech.UI.UIColorRef MechPart
L_001b: ldfld BattleTech.UI.UIColor UIColor
L_0020: stloc.0
L_0021: ldarg.1
L_0022: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0027: stloc.1
L_0028: ldc.i4.0
L_0029: stloc.2
L_002a: br Label1
L_002f: Label2
L_002f: ldloc.1
L_0030: ldloc.2
L_0031: ldelem.ref
L_0032: ldloc.0
L_0033: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0038: ldloc.2
L_0039: ldc.i4.1
L_003a: add
L_003b: stloc.2
L_003c: Label1
L_003c: ldloc.2
L_003d: ldloc.1
L_003e: ldlen
L_003f: conv.i4
L_0040: blt Label2
L_0045: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_ShopWeapon, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 2: System.Int32
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.UI.InventoryDataObject_ShopWeapon)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldfld BattleTech.WeaponDef weaponDef
L_0017: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentDef)
L_001c: stloc.0
L_001d: ldarg.1
L_001e: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_0023: stloc.1
L_0024: ldc.i4.0
L_0025: stloc.2
L_0026: br Label1
L_002b: Label2
L_002b: ldloc.1
L_002c: ldloc.2
L_002d: ldelem.ref
L_002e: ldloc.0
L_002f: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0034: ldloc.2
L_0035: ldc.i4.1
L_0036: add
L_0037: stloc.2
L_0038: Label1
L_0038: ldloc.2
L_0039: ldloc.1
L_003a: ldlen
L_003b: conv.i4
L_003c: blt Label2
L_0041: Label0
L_0041: ret
DONE

### Patch BattleTech.UI.InventoryDataObject_ShopGear, Void RefreshItemColor(BattleTech.UI.InventoryItemElement)
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: Local var 1: BattleTech.ComponentType
L_0000: Local var 2: BattleTech.UI.UIColorRefTracker[]
L_0000: Local var 3: System.Int32
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: call Boolean ChangeColor(BattleTech.UI.InventoryItemElement, BattleTech.UI.InventoryDataObject_ShopGear)
L_000c: brfalse Label0
L_0011: call BattleTech.UI.UIManager get_Instance()
L_0016: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_001b: ldflda BattleTech.UI.UIColorRef Equipment
L_0020: ldfld BattleTech.UI.UIColor UIColor
L_0025: stloc.0
L_0026: ldarg.0
L_0027: ldfld BattleTech.ShopDefItem shopDefItem
L_002c: callvirt BattleTech.ShopItemType get_Type()
L_0031: call BattleTech.ComponentType ShopItemTypeToComponentType(BattleTech.ShopItemType)
L_0036: stloc.1
L_0037: ldloc.1
L_0038: ldc.i4.2
L_0039: sub
L_003a: switch Labels1,2,3,4
L_004f: br Label5
L_0054: Label3
L_0054: call BattleTech.UI.UIManager get_Instance()
L_0059: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_005e: ldflda BattleTech.UI.UIColorRef Equipment
L_0063: ldfld BattleTech.UI.UIColor UIColor
L_0068: stloc.0
L_0069: br Label6
L_006e: Label4
L_006e: call BattleTech.UI.UIManager get_Instance()
L_0073: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0078: ldflda BattleTech.UI.UIColorRef Upgrade
L_007d: ldfld BattleTech.UI.UIColor UIColor
L_0082: stloc.0
L_0083: br Label7
L_0088: Label2
L_0088: call BattleTech.UI.UIManager get_Instance()
L_008d: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0092: ldflda BattleTech.UI.UIColorRef HeatSink
L_0097: ldfld BattleTech.UI.UIColor UIColor
L_009c: stloc.0
L_009d: br Label8
L_00a2: Label1
L_00a2: ldarg.0
L_00a3: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00a8: brfalse Label9
L_00ad: ldarg.0
L_00ae: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00b3: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00b8: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00bd: callvirt BattleTech.UI.UIColor GetUIColor()
L_00c2: stloc.0
L_00c3: Label5
L_00c3: Label6
L_00c3: Label7
L_00c3: Label8
L_00c3: Label9
L_00c3: ldarg.1
L_00c4: ldfld BattleTech.UI.UIColorRefTracker[] iconBGColors
L_00c9: stloc.2
L_00ca: ldc.i4.0
L_00cb: stloc.3
L_00cc: br Label10
L_00d1: Label11
L_00d1: ldloc.2
L_00d2: ldloc.3
L_00d3: ldelem.ref
L_00d4: ldloc.0
L_00d5: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_00da: ldloc.3
L_00db: ldc.i4.1
L_00dc: add
L_00dd: stloc.3
L_00de: Label10
L_00de: ldloc.3
L_00df: ldloc.2
L_00e0: ldlen
L_00e1: conv.i4
L_00e2: blt Label11
L_00e7: Label0
L_00e7: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Get(System.Type, System.String, System.Object, System.Object ByRef, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.s 4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MemberInfoHelper] members
L_002e: ldloc.0
L_002f: callvirt HBS.Reflection.MemberInfoHelper get_Item(System.String)
L_0034: ldarg.3
L_0035: ldarg.s 5
L_0037: callvirt System.Object GetValue(System.Object, System.Object[])
L_003c: stind.ref
L_003d: ldc.i4.1
L_003e: br Label2
L_0043: Label1
L_0043: ldarg.s 4
L_0045: ldnull
L_0046: stind.ref
L_0047: ldc.i4.0
L_0048: Label2
L_0048: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Set(System.Type, System.String, System.Object ByRef, System.Object, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.0
L_0027: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MemberInfoHelper] members
L_002c: ldloc.0
L_002d: callvirt HBS.Reflection.MemberInfoHelper get_Item(System.String)
L_0032: ldarg.3
L_0033: ldarg.s 4
L_0035: ldarg.s 5
L_0037: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_003c: ldc.i4.1
L_003d: br Label2
L_0042: Label1
L_0042: ldc.i4.0
L_0043: Label2
L_0043: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean Invoke(System.Type, System.String, System.Object, System.Object ByRef, System.Object[])
L_0000: Local var 0: System.String
L_0000: ldstr "{0}.{1}.{2}"
L_0005: ldarg.1
L_0006: callvirt System.String get_Namespace()
L_000b: ldarg.1
L_000c: call System.String GetName(System.Reflection.MemberInfo)
L_0011: ldarg.2
L_0012: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0017: stloc.0
L_0018: ldarg.0
L_0019: ldarg.1
L_001a: ldarg.2
L_001b: ldloc.0
L_001c: call Boolean TryCacheMethod(System.Type, System.String, System.String)
L_0021: brfalse Label1
L_0026: ldarg.s 4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.Dictionary`2[System.String,HBS.Reflection.MethodInfoHelper] methods
L_002e: ldloc.0
L_002f: callvirt HBS.Reflection.MethodInfoHelper get_Item(System.String)
L_0034: ldarg.3
L_0035: ldarg.s 5
L_0037: callvirt System.Object Call(System.Object, System.Object[])
L_003c: stind.ref
L_003d: ldc.i4.1
L_003e: br Label2
L_0043: Label1
L_0043: ldarg.s 4
L_0045: ldnull
L_0046: stind.ref
L_0047: ldc.i4.0
L_0048: Label2
L_0048: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean TryCacheMember(System.Type, System.String, System.String ByRef)
L_0000: ldarg.3
L_0001: ldstr "{0}.{1}.{2}"
L_0006: ldarg.1
L_0007: callvirt System.String get_Namespace()
L_000c: ldarg.1
L_000d: call System.String GetName(System.Reflection.MemberInfo)
L_0012: ldarg.2
L_0013: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0018: stind.ref
L_0019: ldarg.0
L_001a: ldarg.1
L_001b: ldarg.2
L_001c: ldarg.3
L_001d: ldind.ref
L_001e: call Boolean TryCacheMember(System.Type, System.String, System.String)
L_0023: ret
DONE

### Patch HBS.Reflection.ReflectionCache, Boolean TryCacheMethod(System.Type, System.String, System.String ByRef)
L_0000: ldarg.3
L_0001: ldstr "{0}.{1}.{2}"
L_0006: ldarg.1
L_0007: callvirt System.String get_Namespace()
L_000c: ldarg.1
L_000d: call System.String GetName(System.Reflection.MemberInfo)
L_0012: ldarg.2
L_0013: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0018: stind.ref
L_0019: ldarg.0
L_001a: ldarg.1
L_001b: ldarg.2
L_001c: ldarg.3
L_001d: ldind.ref
L_001e: call Boolean TryCacheMethod(System.Type, System.String, System.String)
L_0023: ret
DONE

### Patch BattleTech.UI.SkirmishMechBayPanel, Void RequestResources()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.SkirmishMechBayPanel)
L_0006: ldarg.0
L_0007: call BattleTech.Data.DataManager get_dataManager()
L_000c: ldarg.0
L_000d: ldftn Void LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest)
L_0013: newobj Void .ctor(Object, IntPtr)
L_0018: ldc.i4.0
L_0019: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_001e: dup
L_001f: ldc.i4.s 13
L_0021: ldc.i4.1
L_0022: newobj Void .ctor(Boolean)
L_0027: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_002c: dup
L_002d: ldc.i4.s 9
L_002f: ldc.i4.1
L_0030: newobj Void .ctor(Boolean)
L_0035: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_003a: ldarg.0
L_003b: newobj Void .ctor()
L_0040: stfld System.Collections.Generic.List`1[BattleTech.Pilot] allPilots
L_0045: ldarg.0
L_0046: newobj Void .ctor()
L_004b: stfld System.Collections.Generic.List`1[BattleTech.PilotDef] allPilotDefs
L_0050: dup
L_0051: ldc.i4.s 43
L_0053: ldarg.0
L_0054: ldftn Void <RequestResources>b__74_0(System.String, BattleTech.PilotDef)
L_005a: newobj Void .ctor(Object, IntPtr)
L_005f: ldc.i4.1
L_0060: newobj Void .ctor(Boolean)
L_0065: callvirt Void AddAllOfTypeLoadRequest[PilotDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.PilotDef], System.Nullable`1[System.Boolean])
L_006a: ldarg.0
L_006b: newobj Void .ctor()
L_0070: stfld System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_0075: dup
L_0076: ldc.i4.s 37
L_0078: ldarg.0
L_0079: ldftn Void <RequestResources>b__74_1(System.String, BattleTech.MechDef)
L_007f: newobj Void .ctor(Object, IntPtr)
L_0084: ldc.i4.1
L_0085: newobj Void .ctor(Boolean)
L_008a: callvirt Void AddAllOfTypeLoadRequest[MechDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.MechDef], System.Nullable`1[System.Boolean])
L_008f: ldarg.0
L_0090: newobj Void .ctor()
L_0095: stfld System.Collections.Generic.List`1[BattleTech.LanceDef] stockLances
L_009a: dup
L_009b: ldc.i4.s 33
L_009d: ldarg.0
L_009e: ldftn Void <RequestResources>b__74_2(System.String, BattleTech.LanceDef)
L_00a4: newobj Void .ctor(Object, IntPtr)
L_00a9: ldc.i4.1
L_00aa: newobj Void .ctor(Boolean)
L_00af: callvirt Void AddAllOfTypeLoadRequest[LanceDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.LanceDef], System.Nullable`1[System.Boolean])
L_00b4: ldc.i4.s 10
L_00b6: callvirt Void ProcessRequests(UInt32)
L_00bb: ret
DONE

### Patch BattleTech.UI.SkirmishSettings_Beta, Void LoadLanceConfiguratorData()
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIManager uiManager
L_0007: call Void Prefix(BattleTech.UI.SkirmishSettings_Beta, BattleTech.UI.UIManager)
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.UIManager uiManager
L_0012: callvirt BattleTech.Data.DataManager get_dataManager()
L_0017: ldarg.0
L_0018: ldftn Void OnLoadComplete(BattleTech.Data.LoadRequest)
L_001e: newobj Void .ctor(Object, IntPtr)
L_0023: ldc.i4.0
L_0024: callvirt BattleTech.Data.LoadRequest CreateLoadRequest(System.Action`1[BattleTech.Data.LoadRequest], Boolean)
L_0029: ldarg.0
L_002a: newobj Void .ctor()
L_002f: stfld System.Collections.Generic.List`1[BattleTech.Pilot] allLCPilots
L_0034: ldarg.0
L_0035: newobj Void .ctor()
L_003a: stfld System.Collections.Generic.List`1[BattleTech.PilotDef] allPilots
L_003f: dup
L_0040: ldc.i4.s 43
L_0042: ldarg.0
L_0043: ldftn Void <LoadLanceConfiguratorData>b__24_0(System.String, BattleTech.PilotDef)
L_0049: newobj Void .ctor(Object, IntPtr)
L_004e: ldc.i4.1
L_004f: newobj Void .ctor(Boolean)
L_0054: callvirt Void AddAllOfTypeLoadRequest[PilotDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.PilotDef], System.Nullable`1[System.Boolean])
L_0059: ldarg.0
L_005a: newobj Void .ctor()
L_005f: stfld System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_0064: dup
L_0065: ldc.i4.s 37
L_0067: ldarg.0
L_0068: ldftn Void <LoadLanceConfiguratorData>b__24_1(System.String, BattleTech.MechDef)
L_006e: newobj Void .ctor(Object, IntPtr)
L_0073: ldc.i4.1
L_0074: newobj Void .ctor(Boolean)
L_0079: callvirt Void AddAllOfTypeLoadRequest[MechDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.MechDef], System.Nullable`1[System.Boolean])
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.LanceDef] allLances
L_0089: dup
L_008a: ldc.i4.s 33
L_008c: ldarg.0
L_008d: ldftn Void <LoadLanceConfiguratorData>b__24_2(System.String, BattleTech.LanceDef)
L_0093: newobj Void .ctor(Object, IntPtr)
L_0098: ldc.i4.1
L_0099: newobj Void .ctor(Boolean)
L_009e: callvirt Void AddAllOfTypeLoadRequest[LanceDef](BattleTech.BattleTechResourceType, System.Action`2[System.String,BattleTech.LanceDef], System.Nullable`1[System.Boolean])
L_00a3: dup
L_00a4: ldc.i4.s 9
L_00a6: ldc.i4.0
L_00a7: newobj Void .ctor(Boolean)
L_00ac: callvirt Void AddAllOfTypeBlindLoadRequest(BattleTech.BattleTechResourceType, System.Nullable`1[System.Boolean])
L_00b1: ldc.i4.s 10
L_00b3: callvirt Void ProcessRequests(UInt32)
L_00b8: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget, Void ApplySorting(Boolean)
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.MechLabInventoryWidget)
L_0006: ldarg.0
L_0007: ldfld System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView] currentSort
L_000c: brtrue Label1
L_0011: br Label7
L_0016: Label1
L_0016: ldarg.0
L_0017: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_001c: ldarg.0
L_001d: ldfld System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView] currentSort
L_0022: callvirt Void Sort(System.Comparison`1[BattleTech.UI.InventoryItemElement_NotListView])
L_0027: ldc.i4.0
L_0028: stloc.0
L_0029: br Label2
L_002e: Label5
L_002e: ldarg.0
L_002f: ldfld System.Boolean invertSort
L_0034: brfalse Label3
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_003f: ldloc.0
L_0040: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0045: callvirt UnityEngine.GameObject get_gameObject()
L_004a: callvirt UnityEngine.Transform get_transform()
L_004f: callvirt Void SetAsLastSibling()
L_0054: br Label4
L_0059: Label3
L_0059: ldarg.0
L_005a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_005f: ldloc.0
L_0060: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0065: callvirt UnityEngine.GameObject get_gameObject()
L_006a: callvirt UnityEngine.Transform get_transform()
L_006f: callvirt Void SetAsFirstSibling()
L_0074: Label4
L_0074: ldloc.0
L_0075: ldc.i4.1
L_0076: add
L_0077: stloc.0
L_0078: Label2
L_0078: ldloc.0
L_0079: ldarg.0
L_007a: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_007f: callvirt Int32 get_Count()
L_0084: blt Label5
L_0089: ldarg.0
L_008a: call UnityEngine.GameObject get_gameObject()
L_008f: callvirt Boolean get_activeInHierarchy()
L_0094: ldarg.1
L_0095: and
L_0096: brfalse Label6
L_009b: ldarg.0
L_009c: ldarg.0
L_009d: call System.Collections.IEnumerator EndOfFrameScrollBarMovement()
L_00a2: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_00a7: pop
L_00a8: Label6
L_00a8: Label7
L_00a8: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget_ListView, Void ApplySorting()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.UI.MechLabInventoryWidget_ListView)
L_0006: ldarg.0
L_0007: ldfld System.Comparison`1[BattleTech.UI.InventoryDataObject_BASE] currentSort
L_000c: brtrue Label1
L_0011: br Label2
L_0016: Label1
L_0016: ldarg.0
L_0017: ldfld BattleTech.UI.HBSInventoryLoopingListView ListView
L_001c: ldarg.0
L_001d: ldfld System.Collections.Generic.IComparer`1[BattleTech.UI.InventoryDataObject_BASE] currentListItemSorter
L_0022: callvirt Void set_ListViewItemSorter(System.Collections.Generic.IComparer`1[BattleTech.UI.InventoryDataObject_BASE])
L_0027: ldarg.0
L_0028: ldfld BattleTech.UI.HBSInventoryLoopingListView ListView
L_002d: callvirt Void Sort()
L_0032: Label2
L_0032: ret
DONE

### Patch BattleTech.Contract, Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single[]
L_0000: Local var 4: System.Boolean
L_0000: Local var 5: BattleTech.MechComponentDef
L_0000: Local var 6: BattleTech.SalvageDef
L_0000: Local var 7: System.Collections.Generic.List`1[[BattleTech.Data.UpgradeDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: BattleTech.Data.UpgradeDef_MDD
L_0000: ldarga 2
L_0006: call Boolean Prefix(BattleTech.MechComponentDef ByRef)
L_000b: brfalse Label0
L_0010: ldarg.2
L_0011: callvirt HBS.Collections.TagSet get_ComponentTags()
L_0016: ldstr "BLACKLISTED"
L_001b: callvirt Boolean Contains(System.String)
L_0020: brfalse Label1
L_0025: br Label11
L_002a: Label1
L_002a: ldarg.2
L_002b: callvirt BattleTech.ComponentType get_ComponentType()
L_0030: ldc.i4.1
L_0031: bne.un Label2
L_0036: ldarg.0
L_0037: ldarg.1
L_0038: ldarg.2
L_0039: ldarg.3
L_003a: ldarg.s 4
L_003c: ldarg.s 5
L_003e: ldarg.s 6
L_0040: ldarg.s 7
L_0042: call Void AddWeaponToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0047: br Label12
L_004c: Label2
L_004c: ldarg.s 6
L_004e: ldc.r4 0
L_0053: ldc.r4 1
L_0058: callvirt Single Float(Single, Single)
L_005d: stloc.0
L_005e: ldarg.0
L_005f: call BattleTech.Framework.ContractOverride get_Override()
L_0064: ldfld System.Int32 finalDifficulty
L_0069: conv.r4
L_006a: ldarg.s 5
L_006c: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0071: ldfld System.Single VeryRareUpgradeChance
L_0076: add
L_0077: ldarg.s 5
L_0079: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_007e: ldfld System.Single UpgradeChanceDivisor
L_0083: div
L_0084: stloc.1
L_0085: ldarg.0
L_0086: call BattleTech.Framework.ContractOverride get_Override()
L_008b: ldfld System.Int32 finalDifficulty
L_0090: conv.r4
L_0091: ldarg.s 5
L_0093: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0098: ldfld System.Single RareUpgradeChance
L_009d: add
L_009e: ldarg.s 5
L_00a0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00a5: ldfld System.Single UpgradeChanceDivisor
L_00aa: div
L_00ab: stloc.2
L_00ac: ldnull
L_00ad: stloc.3
L_00ae: ldc.i4.0
L_00af: stloc.s 4 (System.Boolean)
L_00b1: ldarg.2
L_00b2: stloc.s 5 (BattleTech.MechComponentDef)
L_00b4: ldloc.0
L_00b5: ldloc.1
L_00b6: bge.un Label3
L_00bb: ldarg.s 5
L_00bd: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00c2: ldfld System.Single[] VeryRareUpgradeLevel
L_00c7: stloc.3
L_00c8: br Label4
L_00cd: Label3
L_00cd: ldloc.0
L_00ce: ldloc.2
L_00cf: bge.un Label5
L_00d4: ldarg.s 5
L_00d6: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00db: ldfld System.Single[] RareUpgradeLevel
L_00e0: stloc.3
L_00e1: Label4
L_00e1: Label5
L_00e1: ldloc.3
L_00e2: brfalse Label6
L_00e7: call BattleTech.Data.MetadataDatabase get_Instance()
L_00ec: ldloc.3
L_00ed: call System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD] GetUpgradesByRarityAndOwnership(BattleTech.Data.MetadataDatabase, Single[])
L_00f2: stloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00f4: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00f6: brfalse Label7
L_00fb: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_00fd: callvirt Int32 get_Count()
L_0102: ldc.i4.0
L_0103: ble Label8
L_0108: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_010a: call Void Shuffle[UpgradeDef_MDD](System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_010f: ldloc.s 7 (System.Collections.Generic.List`1[BattleTech.Data.UpgradeDef_MDD])
L_0111: ldc.i4.0
L_0112: callvirt BattleTech.Data.UpgradeDef_MDD get_Item(Int32)
L_0117: stloc.s 8 (BattleTech.Data.UpgradeDef_MDD)
L_0119: ldarg.0
L_011a: ldfld BattleTech.Data.DataManager dataManager
L_011f: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_0124: ldloc.s 8 (BattleTech.Data.UpgradeDef_MDD)
L_0126: callvirt System.String get_UpgradeDefID()
L_012b: callvirt BattleTech.UpgradeDef Get(System.String)
L_0130: stloc.s 5 (BattleTech.MechComponentDef)
L_0132: ldc.i4.1
L_0133: stloc.s 4 (System.Boolean)
L_0135: Label6
L_0135: Label7
L_0135: Label8
L_0135: newobj Void .ctor()
L_013a: stloc.s 6 (BattleTech.SalvageDef)
L_013c: ldloc.s 6 (BattleTech.SalvageDef)
L_013e: ldloc.s 5 (BattleTech.MechComponentDef)
L_0140: stfld BattleTech.MechComponentDef MechComponentDef
L_0145: ldloc.s 6 (BattleTech.SalvageDef)
L_0147: ldloc.s 5 (BattleTech.MechComponentDef)
L_0149: callvirt BattleTech.DescriptionDef get_Description()
L_014e: newobj Void .ctor(DescriptionDef)
L_0153: stfld BattleTech.DescriptionDef Description
L_0158: ldloc.s 6 (BattleTech.SalvageDef)
L_015a: ldarg.0
L_015b: call System.String GenerateRewardUID()
L_0160: stfld System.String RewardID
L_0165: ldloc.s 6 (BattleTech.SalvageDef)
L_0167: ldc.i4.1
L_0168: stfld BattleTech.SalvageDef+SalvageType Type
L_016d: ldloc.s 6 (BattleTech.SalvageDef)
L_016f: ldloc.s 5 (BattleTech.MechComponentDef)
L_0171: callvirt BattleTech.ComponentType get_ComponentType()
L_0176: stfld BattleTech.ComponentType ComponentType
L_017b: ldloc.s 6 (BattleTech.SalvageDef)
L_017d: ldc.i4.0
L_017e: stfld System.Boolean Damaged
L_0183: ldloc.s 6 (BattleTech.SalvageDef)
L_0185: ldarg.s 5
L_0187: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_018c: ldfld System.Int32 DefaultComponentWeight
L_0191: stfld System.Int32 Weight
L_0196: ldloc.s 6 (BattleTech.SalvageDef)
L_0198: ldc.i4.1
L_0199: stfld System.Int32 Count
L_019e: ldloc.s 5 (BattleTech.MechComponentDef)
L_01a0: callvirt BattleTech.DescriptionDef get_Description()
L_01a5: callvirt Single get_Rarity()
L_01aa: ldarg.s 5
L_01ac: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_01b1: ldfld System.Single ItemAutoCullLevel
L_01b6: bge.un Label9
L_01bb: ldarg.0
L_01bc: ldloc.s 6 (BattleTech.SalvageDef)
L_01be: call Boolean IsSalvageInContent(BattleTech.SalvageDef)
L_01c3: brfalse Label10
L_01c8: ldarg.0
L_01c9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_01ce: ldloc.s 6 (BattleTech.SalvageDef)
L_01d0: callvirt Void Add(BattleTech.SalvageDef)
L_01d5: br Label13
L_01da: Label9
L_01da: ldsfld HBS.Logging.ILog logger
L_01df: ldstr "CULLED ILLEGAL MECH COMPONENT ({0}) of RARITY ({1}). From Random Upgrade? {2}."
L_01e4: ldloc.s 5 (BattleTech.MechComponentDef)
L_01e6: callvirt BattleTech.DescriptionDef get_Description()
L_01eb: callvirt System.String get_Id()
L_01f0: ldloc.s 5 (BattleTech.MechComponentDef)
L_01f2: callvirt BattleTech.DescriptionDef get_Description()
L_01f7: callvirt Single get_Rarity()
L_01fc: box System.Single
L_0201: ldloc.s 4 (System.Boolean)
L_0203: box System.Boolean
L_0208: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_020d: callvirt Void LogWarning(System.Object)
L_0212: Label10
L_0212: Label11
L_0212: Label12
L_0212: Label13
L_0212: Label0
L_0212: ret
DONE

### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg.0
L_002a: ldarg.s 4
L_002c: stfld System.Boolean loggingSalvageResults
L_0031: ldarg.0
L_0032: call BattleTech.GameInstance get_BattleTechGame()
L_0037: callvirt BattleTech.SimGameState get_Simulation()
L_003c: brtrue Label1
L_0041: ldsfld HBS.Logging.ILog logger
L_0046: ldstr "Can't generate salvage without sim game."
L_004b: callvirt Void LogError(System.Object)
L_0050: br Label57
L_0055: Label1
L_0055: ldarg.0
L_0056: newobj Void .ctor()
L_005b: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0060: ldarg.0
L_0061: newobj Void .ctor()
L_0066: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_006b: ldarg.0
L_006c: newobj Void .ctor()
L_0071: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_0076: ldarg.0
L_0077: newobj Void .ctor()
L_007c: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0081: ldarg.0
L_0082: call BattleTech.GameInstance get_BattleTechGame()
L_0087: callvirt BattleTech.SimGameState get_Simulation()
L_008c: stloc.0
L_008d: ldloc.0
L_008e: callvirt BattleTech.SimGameConstants get_Constants()
L_0093: stloc.1
L_0094: ldc.i4.0
L_0095: stloc.s 8 (System.Int32)
L_0097: br Label2
L_009c: Label9
L_009c: ldarg.3
L_009d: ldloc.s 8 (System.Int32)
L_009f: callvirt BattleTech.UnitResult get_Item(Int32)
L_00a4: ldfld BattleTech.MechDef mech
L_00a9: stloc.s 9 (BattleTech.MechDef)
L_00ab: ldloc.0
L_00ac: callvirt NetworkRandom get_NetworkRandom()
L_00b1: ldc.r4 0
L_00b6: ldc.r4 1
L_00bb: callvirt Single Float(Single, Single)
L_00c0: stloc.s 10 (System.Single)
L_00c2: ldloc.s 10 (System.Single)
L_00c4: ldloc.1
L_00c5: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00ca: ldfld System.Single DestroyedMechRecoveryChance
L_00cf: cgt.un
L_00d1: ldc.i4.0
L_00d2: ceq
L_00d4: stloc.s 11 (System.Boolean)
L_00d6: ldsfld HBS.Logging.ILog logger
L_00db: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_00e0: ldloc.s 8 (System.Int32)
L_00e2: box System.Int32
L_00e7: ldloc.s 9 (BattleTech.MechDef)
L_00e9: callvirt BattleTech.DescriptionDef get_Description()
L_00ee: callvirt System.String get_Name()
L_00f3: ldloc.s 9 (BattleTech.MechDef)
L_00f5: ldc.i4.8
L_00f6: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_00fb: box System.Boolean
L_0100: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0105: callvirt Void LogWarning(System.Object)
L_010a: ldsfld HBS.Logging.ILog logger
L_010f: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_0114: ldloc.s 10 (System.Single)
L_0116: box System.Single
L_011b: ldloc.1
L_011c: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0121: ldfld System.Single DestroyedMechRecoveryChance
L_0126: box System.Single
L_012b: call System.String Format(System.String, System.Object, System.Object)
L_0130: callvirt Void LogWarning(System.Object)
L_0135: ldloc.s 9 (BattleTech.MechDef)
L_0137: ldc.i4.8
L_0138: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_013d: ldc.i4.0
L_013e: ceq
L_0140: ldloc.s 11 (System.Boolean)
L_0142: or
L_0143: brfalse Label3
L_0148: ldsfld HBS.Logging.ILog logger
L_014d: ldstr "Recovery Succeeded"
L_0152: callvirt Void LogWarning(System.Object)
L_0157: ldarg.3
L_0158: ldloc.s 8 (System.Int32)
L_015a: callvirt BattleTech.UnitResult get_Item(Int32)
L_015f: ldc.i4.0
L_0160: stfld System.Boolean mechLost
L_0165: br Label4
L_016a: Label3
L_016a: ldsfld HBS.Logging.ILog logger
L_016f: ldstr "Recovery Failed, Unit Lost"
L_0174: callvirt Void LogWarning(System.Object)
L_0179: ldarg.3
L_017a: ldloc.s 8 (System.Int32)
L_017c: callvirt BattleTech.UnitResult get_Item(Int32)
L_0181: ldc.i4.1
L_0182: stfld System.Boolean mechLost
L_0187: ldloc.s 9 (BattleTech.MechDef)
L_0189: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_018e: stloc.s 12 (BattleTech.MechComponentRef[])
L_0190: ldc.i4.0
L_0191: stloc.s 13 (System.Int32)
L_0193: br Label5
L_0198: Label8
L_0198: ldloc.s 12 (BattleTech.MechComponentRef[])
L_019a: ldloc.s 13 (System.Int32)
L_019c: ldelem.ref
L_019d: stloc.s 14 (BattleTech.MechComponentRef)
L_019f: ldloc.s 9 (BattleTech.MechDef)
L_01a1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01a3: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a8: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_01ad: brtrue Label6
L_01b2: ldloc.s 14 (BattleTech.MechComponentRef)
L_01b4: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01b9: ldc.i4.4
L_01ba: beq Label7
L_01bf: newobj Void .ctor()
L_01c4: stloc.s 15 (BattleTech.SalvageDef)
L_01c6: ldloc.s 15 (BattleTech.SalvageDef)
L_01c8: ldloc.s 14 (BattleTech.MechComponentRef)
L_01ca: callvirt BattleTech.MechComponentDef get_Def()
L_01cf: stfld BattleTech.MechComponentDef MechComponentDef
L_01d4: ldloc.s 15 (BattleTech.SalvageDef)
L_01d6: ldloc.s 14 (BattleTech.MechComponentRef)
L_01d8: callvirt BattleTech.MechComponentDef get_Def()
L_01dd: callvirt BattleTech.DescriptionDef get_Description()
L_01e2: newobj Void .ctor(DescriptionDef)
L_01e7: stfld BattleTech.DescriptionDef Description
L_01ec: ldloc.s 15 (BattleTech.SalvageDef)
L_01ee: ldarg.0
L_01ef: call System.String GenerateRewardUID()
L_01f4: stfld System.String RewardID
L_01f9: ldloc.s 15 (BattleTech.SalvageDef)
L_01fb: ldc.i4.1
L_01fc: stfld BattleTech.SalvageDef+SalvageType Type
L_0201: ldloc.s 15 (BattleTech.SalvageDef)
L_0203: ldloc.s 14 (BattleTech.MechComponentRef)
L_0205: callvirt BattleTech.MechComponentDef get_Def()
L_020a: callvirt BattleTech.ComponentType get_ComponentType()
L_020f: stfld BattleTech.ComponentType ComponentType
L_0214: ldloc.s 15 (BattleTech.SalvageDef)
L_0216: ldc.i4.0
L_0217: stfld System.Boolean Damaged
L_021c: ldloc.s 15 (BattleTech.SalvageDef)
L_021e: ldc.i4.1
L_021f: stfld System.Int32 Count
L_0224: ldarg.0
L_0225: ldloc.s 15 (BattleTech.SalvageDef)
L_0227: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_022c: Label6
L_022c: Label7
L_022c: ldloc.s 13 (System.Int32)
L_022e: ldc.i4.1
L_022f: add
L_0230: stloc.s 13 (System.Int32)
L_0232: Label5
L_0232: ldloc.s 13 (System.Int32)
L_0234: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0236: ldlen
L_0237: conv.i4
L_0238: blt Label8
L_023d: Label4
L_023d: ldloc.s 8 (System.Int32)
L_023f: ldc.i4.1
L_0240: add
L_0241: stloc.s 8 (System.Int32)
L_0243: Label2
L_0243: ldloc.s 8 (System.Int32)
L_0245: ldarg.3
L_0246: callvirt Int32 get_Count()
L_024b: blt Label9
L_0250: ldc.i4.0
L_0251: stloc.s 16 (System.Int32)
L_0253: br Label10
L_0258: Label36
L_0258: ldarg.1
L_0259: ldloc.s 16 (System.Int32)
L_025b: callvirt BattleTech.UnitResult get_Item(Int32)
L_0260: ldfld BattleTech.MechDef mech
L_0265: stloc.s 17 (BattleTech.MechDef)
L_0267: ldarg.1
L_0268: ldloc.s 16 (System.Int32)
L_026a: callvirt BattleTech.UnitResult get_Item(Int32)
L_026f: ldfld BattleTech.Pilot pilot
L_0274: stloc.s 18 (BattleTech.Pilot)
L_0276: ldnull
L_0277: stloc.s 19 (BattleTech.SalvageDef)
L_0279: ldc.i4.0
L_027a: stloc.s 20 (System.Boolean)
L_027c: ldc.i4.0
L_027d: stloc.s 21 (System.Boolean)
L_027f: ldloc.s 17 (BattleTech.MechDef)
L_0281: ldc.i4.8
L_0282: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0287: brfalse Label11
L_028c: ldarg.0
L_028d: ldloc.1
L_028e: ldloc.s 17 (BattleTech.MechDef)
L_0290: ldc.i4.1
L_0291: ldarg.0
L_0292: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0297: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_029c: br Label12
L_02a1: Label11
L_02a1: ldloc.s 17 (BattleTech.MechDef)
L_02a3: ldc.i4.s 64
L_02a5: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02aa: brfalse Label13
L_02af: ldloc.s 17 (BattleTech.MechDef)
L_02b1: ldc.i4 128
L_02b6: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02bb: brfalse Label14
L_02c0: ldc.i4.1
L_02c1: stloc.s 20 (System.Boolean)
L_02c3: ldarg.0
L_02c4: ldloc.1
L_02c5: ldloc.s 17 (BattleTech.MechDef)
L_02c7: ldc.i4.2
L_02c8: ldarg.0
L_02c9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02ce: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02d3: br Label15
L_02d8: Label13
L_02d8: Label14
L_02d8: ldloc.s 18 (BattleTech.Pilot)
L_02da: callvirt Boolean get_IsIncapacitated()
L_02df: brtrue Label16
L_02e4: ldloc.s 17 (BattleTech.MechDef)
L_02e6: ldc.i4.1
L_02e7: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02ec: brfalse Label17
L_02f1: Label16
L_02f1: ldarg.0
L_02f2: ldloc.1
L_02f3: ldloc.s 17 (BattleTech.MechDef)
L_02f5: ldc.i4.3
L_02f6: ldarg.0
L_02f7: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02fc: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0301: Label12
L_0301: Label15
L_0301: ldloc.s 17 (BattleTech.MechDef)
L_0303: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0308: stloc.s 12 (BattleTech.MechComponentRef[])
L_030a: ldc.i4.0
L_030b: stloc.s 13 (System.Int32)
L_030d: br Label18
L_0312: Label21
L_0312: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0314: ldloc.s 13 (System.Int32)
L_0316: ldelem.ref
L_0317: stloc.s 22 (BattleTech.MechComponentRef)
L_0319: ldloc.s 17 (BattleTech.MechDef)
L_031b: ldloc.s 22 (BattleTech.MechComponentRef)
L_031d: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0322: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0327: brtrue Label19
L_032c: ldloc.s 22 (BattleTech.MechComponentRef)
L_032e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0333: ldc.i4.4
L_0334: beq Label20
L_0339: ldarg.0
L_033a: ldarg.0
L_033b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0340: ldloc.s 22 (BattleTech.MechComponentRef)
L_0342: callvirt BattleTech.MechComponentDef get_Def()
L_0347: ldc.i4.0
L_0348: ldc.i4.0
L_0349: ldloc.1
L_034a: ldloc.0
L_034b: callvirt NetworkRandom get_NetworkRandom()
L_0350: ldc.i4.1
L_0351: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_0356: Label19
L_0356: Label20
L_0356: ldloc.s 13 (System.Int32)
L_0358: ldc.i4.1
L_0359: add
L_035a: stloc.s 13 (System.Int32)
L_035c: Label18
L_035c: ldloc.s 13 (System.Int32)
L_035e: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0360: ldlen
L_0361: conv.i4
L_0362: blt Label21
L_0367: ldloc.s 21 (System.Boolean)
L_0369: brfalse Label22
L_036e: newobj Void .ctor()
L_0373: stloc.s 19 (BattleTech.SalvageDef)
L_0375: ldloc.s 19 (BattleTech.SalvageDef)
L_0377: ldc.i4.3
L_0378: stfld BattleTech.SalvageDef+SalvageType Type
L_037d: ldloc.s 19 (BattleTech.SalvageDef)
L_037f: ldloc.s 17 (BattleTech.MechDef)
L_0381: callvirt BattleTech.ChassisDef get_Chassis()
L_0386: callvirt BattleTech.DescriptionDef get_Description()
L_038b: newobj Void .ctor(DescriptionDef)
L_0390: stfld BattleTech.DescriptionDef Description
L_0395: ldloc.s 19 (BattleTech.SalvageDef)
L_0397: ldc.i4.1
L_0398: stfld System.Int32 Count
L_039d: ldtoken BattleTech.ChassisLocations
L_03a2: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03a7: call System.Array GetValues(System.Type)
L_03ac: callvirt System.Collections.IEnumerator GetEnumerator()
L_03b1: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03b3: br Label23
	L_03b8: Label30
	L_03b8: ldloc.s 23 (System.Collections.IEnumerator)
	L_03ba: callvirt System.Object get_Current()
	L_03bf: unbox.any BattleTech.ChassisLocations
	L_03c4: stloc.s 24 (BattleTech.ChassisLocations)
	L_03c6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03c8: brfalse Label24
	L_03cd: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03cf: ldc.i4 255
	L_03d4: beq Label25
	L_03d9: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03db: ldc.i4.s 34
	L_03dd: beq Label26
	L_03e2: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03e4: ldc.i4 192
	L_03e9: beq Label27
	L_03ee: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f0: ldc.i4.s 28
	L_03f2: beq Label28
	L_03f7: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f9: ldc.i4.s 62
	L_03fb: beq Label29
	L_0400: ldloc.s 19 (BattleTech.SalvageDef)
	L_0402: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0407: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0409: callvirt Void Add(BattleTech.ChassisLocations)
	L_040e: ldloc.s 19 (BattleTech.SalvageDef)
	L_0410: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_0415: ldloc.s 17 (BattleTech.MechDef)
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_041e: ldfld System.Single CurrentInternalStructure
	L_0423: callvirt Void Add(Single)
	L_0428: Label23
	L_0428: Label24
	L_0428: Label25
	L_0428: Label26
	L_0428: Label27
	L_0428: Label28
	L_0428: Label29
	L_0428: ldloc.s 23 (System.Collections.IEnumerator)
	L_042a: callvirt Boolean MoveNext()
	L_042f: brtrue Label30
	L_0434: leave Label31
	L_0439: leave (autogenerated)
} // end try
.finally
{
	L_043e: ldloc.s 23 (System.Collections.IEnumerator)
	L_0440: isinst System.IDisposable
	L_0445: stloc.s 25 (System.IDisposable)
	L_0447: ldloc.s 25 (System.IDisposable)
	L_0449: brfalse Label32
	L_044e: ldloc.s 25 (System.IDisposable)
	L_0450: callvirt Void Dispose()
	L_0455: Label32
	L_0455: endfinally
	L_0456: leave (autogenerated)
} // end handler
L_0457: Label31
L_0457: ldloc.s 20 (System.Boolean)
L_0459: brfalse Label33
L_045e: ldc.i4.0
L_045f: stloc.s 26 (System.Int32)
L_0461: br Label34
L_0466: Label35
L_0466: ldloc.s 19 (BattleTech.SalvageDef)
L_0468: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_046d: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_046f: ldloc.s 26 (System.Int32)
L_0471: stloc.s 13 (System.Int32)
L_0473: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0475: ldloc.s 13 (System.Int32)
L_0477: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0479: ldloc.s 13 (System.Int32)
L_047b: callvirt Single get_Item(Int32)
L_0480: ldc.r4 2
L_0485: div
L_0486: callvirt Void set_Item(Int32, Single)
L_048b: ldloc.s 26 (System.Int32)
L_048d: ldc.i4.1
L_048e: add
L_048f: stloc.s 26 (System.Int32)
L_0491: Label34
L_0491: ldloc.s 26 (System.Int32)
L_0493: ldloc.s 19 (BattleTech.SalvageDef)
L_0495: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_049a: callvirt Int32 get_Count()
L_049f: blt Label35
L_04a4: Label33
L_04a4: ldloc.s 19 (BattleTech.SalvageDef)
L_04a6: ldloc.1
L_04a7: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04ac: ldfld System.Int32 DefaultChassisWeight
L_04b1: stfld System.Int32 Weight
L_04b6: ldarg.0
L_04b7: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: callvirt Void Add(BattleTech.SalvageDef)
L_04c3: Label17
L_04c3: Label22
L_04c3: ldloc.s 16 (System.Int32)
L_04c5: ldc.i4.1
L_04c6: add
L_04c7: stloc.s 16 (System.Int32)
L_04c9: Label10
L_04c9: ldloc.s 16 (System.Int32)
L_04cb: ldarg.1
L_04cc: callvirt Int32 get_Count()
L_04d1: blt Label36
L_04d6: ldc.i4.0
L_04d7: stloc.s 28 (System.Int32)
L_04d9: br Label37
L_04de: Label42
L_04de: ldarg.2
L_04df: ldloc.s 28 (System.Int32)
L_04e1: callvirt BattleTech.VehicleDef get_Item(Int32)
L_04e6: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_04eb: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_04f0: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_04f2: br Label38
	L_04f7: Label39
	L_04f7: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_04f9: callvirt BattleTech.VehicleComponentRef get_Current()
	L_04fe: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0500: ldarg.0
	L_0501: ldarg.0
	L_0502: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0507: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0509: callvirt BattleTech.MechComponentDef get_Def()
	L_050e: ldc.i4.0
	L_050f: ldc.i4.0
	L_0510: ldloc.1
	L_0511: ldloc.0
	L_0512: callvirt NetworkRandom get_NetworkRandom()
	L_0517: ldc.i4.1
	L_0518: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_051d: Label38
	L_051d: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_051f: callvirt Boolean MoveNext()
	L_0524: brtrue Label39
	L_0529: leave Label40
	L_052e: leave (autogenerated)
} // end try
.finally
{
	L_0533: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0535: brfalse Label41
	L_053a: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_053c: callvirt Void Dispose()
	L_0541: Label41
	L_0541: endfinally
	L_0542: leave (autogenerated)
} // end handler
L_0543: Label40
L_0543: ldloc.s 28 (System.Int32)
L_0545: ldc.i4.1
L_0546: add
L_0547: stloc.s 28 (System.Int32)
L_0549: Label37
L_0549: ldloc.s 28 (System.Int32)
L_054b: ldarg.2
L_054c: callvirt Int32 get_Count()
L_0551: blt Label42
L_0556: ldarg.0
L_0557: ldarg.0
L_0558: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_055d: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0562: ldarg.0
L_0563: call Int32 get_SalvagePotential()
L_0568: stloc.2
L_0569: ldloc.1
L_056a: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_056f: ldfld System.Single VictorySalvageChance
L_0574: stloc.3
L_0575: ldloc.1
L_0576: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_057b: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_0580: stloc.s 4 (System.Single)
L_0582: ldarg.0
L_0583: call ContractState get_State()
L_0588: ldc.i4.5
L_0589: bne.un Label43
L_058e: ldloc.1
L_058f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0594: ldfld System.Single DefeatSalvageChance
L_0599: stloc.3
L_059a: ldloc.1
L_059b: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a0: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05a5: stloc.s 4 (System.Single)
L_05a7: br Label44
L_05ac: Label43
L_05ac: ldarg.0
L_05ad: call ContractState get_State()
L_05b2: ldc.i4.4
L_05b3: bne.un Label45
L_05b8: ldloc.1
L_05b9: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05be: ldfld System.Single RetreatSalvageChance
L_05c3: stloc.3
L_05c4: ldloc.1
L_05c5: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05ca: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05cf: stloc.s 4 (System.Single)
L_05d1: Label44
L_05d1: Label45
L_05d1: ldloc.3
L_05d2: stloc.s 5 (System.Single)
L_05d4: ldloc.2
L_05d5: conv.r4
L_05d6: ldarg.0
L_05d7: call Single get_PercentageContractSalvage()
L_05dc: mul
L_05dd: stloc.s 6 (System.Single)
L_05df: ldloc.2
L_05e0: ldc.i4.0
L_05e1: ble Label46
L_05e6: ldloc.s 6 (System.Single)
L_05e8: ldloc.1
L_05e9: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_05ee: ldfld System.Int32 ContractFloorSalvageBonus
L_05f3: conv.r4
L_05f4: add
L_05f5: stloc.s 6 (System.Single)
L_05f7: Label46
L_05f7: ldc.r4 0
L_05fc: ldloc.s 5 (System.Single)
L_05fe: ldloc.s 4 (System.Single)
L_0600: ldarg.3
L_0601: callvirt Int32 get_Count()
L_0606: conv.r4
L_0607: mul
L_0608: sub
L_0609: call Single Max(Single, Single)
L_060e: stloc.3
L_060f: ldloc.s 6 (System.Single)
L_0611: conv.r4
L_0612: ldloc.3
L_0613: mul
L_0614: call Int32 FloorToInt(Single)
L_0619: stloc.s 7 (System.Int32)
L_061b: ldloc.2
L_061c: ldc.i4.0
L_061d: ble Label47
L_0622: ldloc.2
L_0623: ldloc.1
L_0624: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0629: ldfld System.Int32 ContractFloorSalvageBonus
L_062e: add
L_062f: stloc.2
L_0630: Label47
L_0630: ldarg.0
L_0631: ldloc.s 7 (System.Int32)
L_0633: call Void set_FinalSalvageCount(Int32)
L_0638: ldarg.0
L_0639: ldc.i4.7
L_063a: ldloc.s 7 (System.Int32)
L_063c: conv.r4
L_063d: ldloc.1
L_063e: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0643: ldfld System.Single PrioritySalvageModifier
L_0648: mul
L_0649: call Int32 FloorToInt(Single)
L_064e: call Int32 Min(Int32, Int32)
L_0653: call Void set_FinalPrioritySalvageCount(Int32)
L_0658: ldarg.0
L_0659: ldfld System.Boolean loggingSalvageResults
L_065e: brfalse Label48
L_0663: ldarg.0
L_0664: ldstr "Salvage"
L_0669: call Void PushReport(System.String)
L_066e: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_0673: ldc.i4.6
L_0674: newarr System.Object
L_0679: dup
L_067a: ldc.i4.0
L_067b: ldloc.2
L_067c: box System.Int32
L_0681: stelem.ref
L_0682: dup
L_0683: ldc.i4.1
L_0684: ldloc.s 5 (System.Single)
L_0686: box System.Single
L_068b: stelem.ref
L_068c: dup
L_068d: ldc.i4.2
L_068e: ldarg.3
L_068f: callvirt Int32 get_Count()
L_0694: box System.Int32
L_0699: stelem.ref
L_069a: dup
L_069b: ldc.i4.3
L_069c: ldloc.3
L_069d: box System.Single
L_06a2: stelem.ref
L_06a3: dup
L_06a4: ldc.i4.4
L_06a5: ldloc.s 7 (System.Int32)
L_06a7: box System.Int32
L_06ac: stelem.ref
L_06ad: dup
L_06ae: ldc.i4.5
L_06af: ldarg.0
L_06b0: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06b5: callvirt Int32 get_Count()
L_06ba: box System.Int32
L_06bf: stelem.ref
L_06c0: call System.String Format(System.String, System.Object[])
L_06c5: stloc.s 31 (System.String)
L_06c7: ldarg.0
L_06c8: ldloc.s 31 (System.String)
L_06ca: call Void ReportLog(System.String)
L_06cf: ldarg.0
L_06d0: ldstr "Potential Salvage"
L_06d5: call Void PushReport(System.String)
L_06da: ldarg.0
L_06db: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06e0: callvirt Enumerator GetEnumerator()
L_06e5: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_06e7: br Label49
	L_06ec: Label52
	L_06ec: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_06ee: call BattleTech.SalvageDef get_Current()
	L_06f3: stloc.s 33 (BattleTech.SalvageDef)
	L_06f5: ldarg.0
	L_06f6: ldstr "{0} of type {1} in damage state of {2}"
	L_06fb: ldloc.s 33 (BattleTech.SalvageDef)
	L_06fd: ldfld BattleTech.DescriptionDef Description
	L_0702: callvirt System.String get_Id()
	L_0707: ldloc.s 33 (BattleTech.SalvageDef)
	L_0709: ldfld BattleTech.SalvageDef+SalvageType Type
	L_070e: box BattleTech.SalvageDef+SalvageType
	L_0713: ldloc.s 33 (BattleTech.SalvageDef)
	L_0715: ldfld BattleTech.SalvageDef+SalvageType Type
	L_071a: ldc.i4.3
	L_071b: beq Label50
	L_0720: ldloc.s 33 (BattleTech.SalvageDef)
	L_0722: ldfld System.Boolean Damaged
	L_0727: br Label51
	L_072c: Label50
	L_072c: ldc.i4.1
	L_072d: Label51
	L_072d: box System.Boolean
	L_0732: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0737: call Void ReportLog(System.String)
	L_073c: Label49
	L_073c: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_073e: call Boolean MoveNext()
	L_0743: brtrue Label52
	L_0748: leave Label53
	L_074d: leave (autogenerated)
} // end try
.finally
{
	L_0752: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0754: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_075a: callvirt Void Dispose()
	L_075f: endfinally
	L_0760: leave (autogenerated)
} // end handler
L_0761: Label53
L_0761: ldarg.0
L_0762: call Void PopReport()
L_0767: ldsfld HBS.Logging.ILog logger
L_076c: ldloc.s 31 (System.String)
L_076e: callvirt Void LogWarning(System.Object)
L_0773: Label48
L_0773: ldloc.3
L_0774: ldc.r4 0
L_0779: beq Label54
L_077e: ldloc.s 7 (System.Int32)
L_0780: ldc.i4.1
L_0781: bge Label55
L_0786: Label54
L_0786: ldarg.0
L_0787: ldfld System.Boolean loggingSalvageResults
L_078c: brfalse Label56
L_0791: ldarg.0
L_0792: call Void PopReport()
L_0797: Label55
L_0797: Label56
L_0797: Label57
L_0797: Label0
L_0797: ret
DONE

### Patch BattleTech.SimGameState, Void RespondToDefsLoadComplete(BattleTech.Data.LoadRequest)
L_0000: ldarg.0
L_0001: call Void FixDefaults(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldc.i4 128
L_000c: call Void RemoveInitStateBits(InitStates)
L_0011: ldarg.0
L_0012: call Void _OnDefsLoadComplete()
L_0017: ldarg.0
L_0018: ldc.i4.2
L_0019: call Void SetInitStateBits(InitStates)
L_001e: ret
DONE

### Patch HBS.Util.JSONSerializationUtility, System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Type
L_0000: Local var 2: System.Collections.Generic.Dictionary`2+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: System.String
L_0000: Local var 4: System.Object
L_0000: Local var 5: HBS.Reflection.MemberInfoHelper
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0
L_0000: Local var 8: System.Object[]
L_0000: Local var 9: System.Collections.Generic.KeyValuePair`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 10: System.String
L_0000: Local var 11: System.String
L_0000: Local var 12: System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: System.Object
L_0000: Local var 16: System.Object
L_0000: Local var 17: System.String
L_0000: ldnull
L_0001: stloc 17 (System.String)
L_0003: ldarg 0
L_0009: ldarg 1
L_000f: call Void Prefix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0014: ldstr ""
L_0019: stloc.0
L_001a: ldarg.0
L_001b: callvirt System.Type GetType()
L_0020: stloc.1
L_0021: ldarg.1
L_0022: callvirt Enumerator GetEnumerator()
L_0027: stloc.2
L_0028: ldarg.s 6
L_002a: ldnull
L_002b: cgt.un
L_002d: stloc.s 6 (System.Boolean)
L_002f: br Label1
L_0034: Label34
L_0034: newobj Void .ctor()
L_0039: stloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_003b: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_003d: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_0042: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0044: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0046: call System.String get_Key()
L_004b: stloc.3
L_004c: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_004e: ldarg.2
L_004f: call Boolean IsNullOrEmpty(System.String)
L_0054: brtrue Label2
L_0059: ldstr "{0}.{1}"
L_005e: ldarg.2
L_005f: ldloc.3
L_0060: call System.String Format(System.String, System.Object, System.Object)
L_0065: br Label3
L_006a: Label2
L_006a: ldloc.3
L_006b: Label3
L_006b: stfld System.String memberClassName
L_0070: ldloc.s 6 (System.Boolean)
L_0072: brfalse Label4
L_0077: ldarg.s 5
L_0079: brfalse Label5
L_007e: ldarg.s 6
L_0080: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0082: ldftn Boolean <RehydrateObjectFromDictionary>b__1(System.Func`2[System.String,System.Boolean])
L_0088: newobj Void .ctor(Object, IntPtr)
L_008d: call Boolean All[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_0092: br Label6
L_0097: Label5
L_0097: ldarg.s 6
L_0099: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_009b: ldftn Boolean <RehydrateObjectFromDictionary>b__0(System.Func`2[System.String,System.Boolean])
L_00a1: newobj Void .ctor(Object, IntPtr)
L_00a6: call Boolean Any[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_00ab: Label6
L_00ab: brtrue Label7
L_00b0: Label4
L_00b0: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_00b2: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_00b7: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00b9: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00bb: call System.Object get_Value()
L_00c0: stloc.s 4 (System.Object)
L_00c2: ldsfld HBS.Reflection.ReflectionCache reflectionCache
L_00c7: ldloc.1
L_00c8: ldloc.3
L_00c9: callvirt HBS.Reflection.MemberInfoHelper GetMemberHelper(System.Type, System.String)
L_00ce: stloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d0: ldnull
L_00d1: stloc.s 8 (System.Object[])
L_00d3: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d5: brtrue Label8
L_00da: ldstr "Could not retrieve member {0} from type {1}"
L_00df: ldloc.3
L_00e0: ldloc.1
L_00e1: callvirt System.String get_Name()
L_00e6: call System.String Format(System.String, System.Object, System.Object)
L_00eb: stloc.s 10 (System.String)
L_00ed: ldloc.0
L_00ee: ldloc.s 10 (System.String)
L_00f0: ldstr "
"
L_00f5: call System.String Concat(System.String, System.String, System.String)
L_00fa: stloc.0
L_00fb: ldloc.s 10 (System.String)
L_00fd: call Void LogWarning(System.String)
L_0102: br Label9
L_0107: Label8
L_0107: ldarg.s 4
L_0109: brfalse Label10
L_010e: ldarg.s 4
L_0110: callvirt Void Start()
L_0115: Label10
L_0115: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0117: ldtoken fastJSON.JsonIgnore
L_011c: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0121: ldc.i4.0
L_0122: callvirt System.Object[] GetCustomAttributes(System.Type, Boolean)
L_0127: stloc.s 8 (System.Object[])
L_0129: ldarg.s 4
L_012b: brfalse Label11
L_0130: ldarg.s 4
L_0132: callvirt Void Stop()
L_0137: Label11
L_0137: ldloc.s 8 (System.Object[])
L_0139: brfalse Label12
L_013e: ldloc.s 8 (System.Object[])
L_0140: ldlen
L_0141: brfalse Label13
L_0146: ldstr "Ignoring value [{0}] from type [{1}] because class has it marked with JsonIgnore attribute."
L_014b: ldloc.3
L_014c: ldloc.1
L_014d: callvirt System.String get_Name()
L_0152: call System.String Format(System.String, System.Object, System.Object)
L_0157: stloc.s 11 (System.String)
L_0159: ldloc.0
L_015a: ldloc.s 11 (System.String)
L_015c: ldstr "
"
L_0161: call System.String Concat(System.String, System.String, System.String)
L_0166: stloc.0
L_0167: ldloc.s 11 (System.String)
L_0169: call Void LogWarning(System.String)
L_016e: br Label14
L_0173: Label12
L_0173: Label13
L_0173: ldloc.s 4 (System.Object)
L_0175: isinst System.Collections.Generic.Dictionary`2[System.String,System.Object]
L_017a: stloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_017c: ldarg.s 4
L_017e: brfalse Label15
L_0183: ldarg.s 4
L_0185: callvirt Void Start()
L_018a: Label15
L_018a: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_018c: callvirt System.Type GetMemberType()
L_0191: callvirt System.Type[] GetInterfaces()
L_0196: ldtoken System.Collections.IDictionary
L_019b: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_01a0: call Boolean Contains[Type](System.Collections.Generic.IEnumerable`1[System.Type], System.Type)
L_01a5: stloc.s 13 (System.Boolean)
L_01a7: ldarg.s 4
L_01a9: brfalse Label16
L_01ae: ldarg.s 4
L_01b0: callvirt Void Stop()
L_01b5: Label16
L_01b5: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_01b7: brfalse Label17
L_01bc: ldloc.s 13 (System.Boolean)
L_01be: brtrue Label18
L_01c3: ldarg.s 4
L_01c5: brfalse Label19
L_01ca: ldarg.s 4
L_01cc: callvirt Void Start()
L_01d1: Label19
L_01d1: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01d3: callvirt System.Type GetMemberType()
L_01d8: callvirt Boolean get_IsValueType()
L_01dd: stloc.s 14 (System.Boolean)
L_01df: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01e1: ldarg.0
L_01e2: ldnull
L_01e3: callvirt System.Object GetValue(System.Object, System.Object[])
L_01e8: stloc.s 15 (System.Object)
L_01ea: ldarg.s 4
L_01ec: brfalse Label20
L_01f1: ldarg.s 4
L_01f3: callvirt Void Stop()
L_01f8: Label20
L_01f8: ldloc.s 15 (System.Object)
L_01fa: brtrue Label21
L_01ff: ldarg.s 4
L_0201: brfalse Label22
L_0206: ldarg.s 4
L_0208: callvirt Void Start()
L_020d: Label22
L_020d: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_020f: callvirt System.Type GetMemberType()
L_0214: callvirt Boolean get_IsArray()
L_0219: brfalse Label23
L_021e: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0220: callvirt System.Type GetMemberType()
L_0225: ldc.i4.1
L_0226: newarr System.Object
L_022b: dup
L_022c: ldc.i4.0
L_022d: ldc.i4.1
L_022e: box System.Int32
L_0233: stelem.ref
L_0234: call System.Object CreateInstance(System.Type, System.Object[])
L_0239: stloc.s 15 (System.Object)
L_023b: br Label24
L_0240: Label23
L_0240: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0242: callvirt System.Type GetMemberType()
L_0247: call System.Object CreateInstance(System.Type)
L_024c: stloc.s 15 (System.Object)
L_024e: Label24
L_024e: ldarg.s 4
L_0250: brfalse Label25
L_0255: ldarg.s 4
L_0257: callvirt Void Stop()
L_025c: Label25
L_025c: ldc.i4.1
L_025d: stloc.s 14 (System.Boolean)
L_025f: Label21
L_025f: ldloc.s 15 (System.Object)
L_0261: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0263: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0265: ldfld System.String memberClassName
L_026a: ldarg.3
L_026b: ldarg.s 4
L_026d: ldarg.s 5
L_026f: ldarg.s 6
L_0271: call System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0276: pop
L_0277: ldloc.s 14 (System.Boolean)
L_0279: brfalse Label26
L_027e: ldarg.s 4
L_0280: brfalse Label27
L_0285: ldarg.s 4
L_0287: callvirt Void Start()
L_028c: Label27
L_028c: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_028e: ldarga.s 0
L_0290: ldloc.s 15 (System.Object)
L_0292: call System.Object[] Empty[Object]()
L_0297: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_029c: ldarg.s 4
L_029e: brfalse Label28
L_02a3: ldarg.s 4
L_02a5: callvirt Void Stop()
L_02aa: br Label29
L_02af: Label17
L_02af: Label18
L_02af: ldarg.3
L_02b0: brfalse Label30
L_02b5: ldarg.3
L_02b6: callvirt Void Start()
L_02bb: Label30
L_02bb: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02bd: callvirt System.Type GetMemberType()
L_02c2: ldloc.s 4 (System.Object)
L_02c4: call System.Object ConvertValue(System.Type, System.Object)
L_02c9: stloc.s 16 (System.Object)
L_02cb: ldarg.3
L_02cc: brfalse Label31
L_02d1: ldarg.3
L_02d2: callvirt Void Stop()
L_02d7: Label31
L_02d7: ldarg.s 4
L_02d9: brfalse Label32
L_02de: ldarg.s 4
L_02e0: callvirt Void Start()
L_02e5: Label32
L_02e5: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02e7: ldarga.s 0
L_02e9: ldloc.s 16 (System.Object)
L_02eb: call System.Object[] Empty[Object]()
L_02f0: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_02f5: ldarg.s 4
L_02f7: brfalse Label33
L_02fc: ldarg.s 4
L_02fe: callvirt Void Stop()
L_0303: Label1
L_0303: Label7
L_0303: Label9
L_0303: Label14
L_0303: Label26
L_0303: Label28
L_0303: Label29
L_0303: Label33
L_0303: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_0305: call Boolean MoveNext()
L_030a: brtrue Label34
L_030f: ldloc.0
L_0310: stloc 17 (System.String)
L_0312: ldarg 0
L_0318: ldarg 1
L_031e: call Void Postfix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0323: ldloc 17 (System.String)
L_0325: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: ldarg.0
L_0008: callvirt Void set_DropParent(BattleTech.UI.IMechLabDropTarget)
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0013: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0018: ldarg.1
L_0019: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001e: callvirt Void Add(BattleTech.MechComponentRef)
L_0023: ldarg.1
L_0024: isinst BattleTech.UI.MechLabItemSlotElement
L_0029: stloc.0
L_002a: ldloc.0
L_002b: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0030: ldc.i4.1
L_0031: callvirt Void set_blocksRaycasts(Boolean)
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_003c: ldloc.0
L_003d: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: ldfld System.Int32 usedSlots
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt Int32 get_InventorySize()
L_0059: add
L_005a: stfld System.Int32 usedSlots
L_005f: ldloc.0
L_0060: callvirt UnityEngine.GameObject get_gameObject()
L_0065: callvirt UnityEngine.Transform get_transform()
L_006a: ldarg.0
L_006b: ldfld UnityEngine.Transform inventoryParent
L_0070: ldc.i4.0
L_0071: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_0076: ldloc.0
L_0077: callvirt UnityEngine.GameObject get_gameObject()
L_007c: callvirt UnityEngine.Transform get_transform()
L_0081: call UnityEngine.Vector3 get_one()
L_0086: callvirt Void set_localScale(UnityEngine.Vector3)
L_008b: ldarg.0
L_008c: ldloc.0
L_008d: ldc.i4.0
L_008e: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0093: ldarg.0
L_0094: ldfld BattleTech.UI.MechLabPanel mechLab
L_0099: callvirt Void FlagAsModified()
L_009e: ldc.i4.1
L_009f: stloc 1 (System.Boolean)
L_00a0: ldarg 1
L_00a6: ldarg.0
L_00a7: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00ac: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_00b1: ldloc 1 (System.Boolean)
L_00b2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void RepairAll(Boolean, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brfalse Label1
L_0010: ldarg.0
L_0011: call Boolean get_IsSimGame()
L_0016: brtrue Label2
L_001b: Label1
L_001b: br Label12
L_0020: Label2
L_0020: ldarg.1
L_0021: brtrue Label3
L_0026: ldarg.0
L_0027: ldfld BattleTech.LocationLoadoutDef loadout
L_002c: ldfld System.Single CurrentInternalStructure
L_0031: ldc.r4 0
L_0036: ble.un Label4
L_003b: Label3
L_003b: ldarg.0
L_003c: ldarg.2
L_003d: call Void RepairStructure(Boolean)
L_0042: Label4
L_0042: ldarg.0
L_0043: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0048: callvirt Int32 get_Count()
L_004d: ldc.i4.1
L_004e: sub
L_004f: stloc.0
L_0050: br Label5
L_0055: Label11
L_0055: ldarg.0
L_0056: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_005b: ldloc.0
L_005c: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0061: stloc.1
L_0062: ldloc.1
L_0063: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0068: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_006d: brfalse Label6
L_0072: ldloc.1
L_0073: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0078: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_007d: ldc.i4.5
L_007e: beq Label7
L_0083: ldloc.1
L_0084: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0089: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_008e: ldc.i4.4
L_008f: bne.un Label8
L_0094: ldloc.1
L_0095: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_009a: callvirt Boolean get_IsFixed()
L_009f: brtrue Label9
L_00a4: ldarg.0
L_00a5: ldloc.1
L_00a6: ldc.i4.1
L_00a7: call Boolean OnRemoveItemRepair(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_00ac: pop
L_00ad: ldarg.0
L_00ae: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b3: ldloc.1
L_00b4: call Void ForceItemDropRepair(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_00b9: br Label10
L_00be: Label8
L_00be: Label9
L_00be: ldloc.1
L_00bf: ldc.i4.1
L_00c0: callvirt Void RepairComponent(Boolean)
L_00c5: Label6
L_00c5: Label7
L_00c5: Label10
L_00c5: ldloc.0
L_00c6: ldc.i4.1
L_00c7: sub
L_00c8: stloc.0
L_00c9: Label5
L_00c9: ldloc.0
L_00ca: ldc.i4.0
L_00cb: bge Label11
L_00d0: Label12
L_00d0: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void StripDestroyedComponents()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brtrue Label1
L_0010: br Label6
L_0015: Label1
L_0015: ldarg.0
L_0016: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_001b: callvirt Int32 get_Count()
L_0020: ldc.i4.1
L_0021: sub
L_0022: stloc.0
L_0023: br Label2
L_0028: Label5
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_002e: ldloc.0
L_002f: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0034: stloc.1
L_0035: ldloc.1
L_0036: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_003b: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0040: ldc.i4.4
L_0041: bne.un Label3
L_0046: ldloc.1
L_0047: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004c: callvirt Boolean get_IsFixed()
L_0051: brtrue Label4
L_0056: ldarg.0
L_0057: ldloc.1
L_0058: ldc.i4.1
L_0059: call Boolean OnRemoveItemRepair(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_005e: pop
L_005f: ldarg.0
L_0060: ldfld BattleTech.UI.MechLabPanel mechLab
L_0065: ldloc.1
L_0066: call Void ForceItemDropRepair(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_006b: Label3
L_006b: Label4
L_006b: ldloc.0
L_006c: ldc.i4.1
L_006d: sub
L_006e: stloc.0
L_006f: Label2
L_006f: ldloc.0
L_0070: ldc.i4.0
L_0071: bge Label5
L_0076: Label6
L_0076: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void SetData(BattleTech.LocationLoadoutDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.LocationLoadoutDef loadout
L_0007: ldarg.0
L_0008: call Void ClearInventory()
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0014: ldfld BattleTech.MechDef activeMechDef
L_0019: callvirt BattleTech.ChassisDef get_Chassis()
L_001e: ldarg.1
L_001f: ldfld BattleTech.ChassisLocations Location
L_0024: callvirt BattleTech.LocationDef GetLocationDef(BattleTech.ChassisLocations)
L_0029: stfld BattleTech.LocationDef chassisLocationDef
L_002e: ldarg.0
L_002f: ldarg.1
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: ldc.i4.8
L_0036: beq Label1
L_003b: ldarg.1
L_003c: ldfld BattleTech.ChassisLocations Location
L_0041: ldc.i4.4
L_0042: beq Label2
L_0047: ldarg.1
L_0048: ldfld BattleTech.ChassisLocations Location
L_004d: ldc.i4.s 16
L_004f: ceq
L_0051: br Label3
L_0056: Label1
L_0056: Label2
L_0056: ldc.i4.1
L_0057: Label3
L_0057: stfld System.Boolean useRearArmor
L_005c: ldarg.0
L_005d: ldarg.0
L_005e: ldflda BattleTech.LocationDef chassisLocationDef
L_0063: ldfld System.Int32 InventorySlots
L_0068: stfld System.Int32 maxSlots
L_006d: ldarg.0
L_006e: ldarg.0
L_006f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0074: ldfld BattleTech.MechDef originalMechDef
L_0079: ldarg.1
L_007a: ldfld BattleTech.ChassisLocations Location
L_007f: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0084: ldfld System.Single AssignedArmor
L_0089: stfld System.Single originalArmor
L_008e: ldarg.0
L_008f: ldarg.0
L_0090: ldfld System.Single originalArmor
L_0095: stfld System.Single currentArmor
L_009a: ldarg.0
L_009b: ldarg.0
L_009c: ldflda BattleTech.LocationDef chassisLocationDef
L_00a1: ldfld System.Single MaxArmor
L_00a6: stfld System.Single maxArmor
L_00ab: ldarg.0
L_00ac: ldc.r4 0
L_00b1: stfld System.Single maxRearArmor
L_00b6: ldarg.0
L_00b7: ldc.r4 0
L_00bc: stfld System.Single originalRearArmor
L_00c1: ldarg.0
L_00c2: ldc.r4 0
L_00c7: stfld System.Single currentRearArmor
L_00cc: ldarg.0
L_00cd: ldfld System.Boolean useRearArmor
L_00d2: brfalse Label4
L_00d7: ldarg.0
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.MechLabPanel mechLab
L_00de: ldfld BattleTech.MechDef originalMechDef
L_00e3: ldarg.1
L_00e4: ldfld BattleTech.ChassisLocations Location
L_00e9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ee: ldfld System.Single AssignedRearArmor
L_00f3: stfld System.Single originalRearArmor
L_00f8: ldarg.0
L_00f9: ldarg.0
L_00fa: ldfld System.Single originalRearArmor
L_00ff: stfld System.Single currentRearArmor
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: ldflda BattleTech.LocationDef chassisLocationDef
L_010b: ldfld System.Single MaxRearArmor
L_0110: stfld System.Single maxRearArmor
L_0115: Label4
L_0115: ldarg.0
L_0116: ldc.i4.0
L_0117: stfld System.Int32 usedSlots
L_011c: ldarg.0
L_011d: ldc.i4.0
L_011e: stfld System.Int32 currentBallisticCount
L_0123: ldarg.0
L_0124: ldc.i4.0
L_0125: stfld System.Int32 currentEnergyCount
L_012a: ldarg.0
L_012b: ldc.i4.0
L_012c: stfld System.Int32 currentMissileCount
L_0131: ldarg.0
L_0132: ldc.i4.0
L_0133: stfld System.Int32 currentSmallCount
L_0138: ldarg.0
L_0139: ldc.i4.0
L_013a: stfld System.Int32 totalBallisticHardpoints
L_013f: ldarg.0
L_0140: ldc.i4.0
L_0141: stfld System.Int32 totalEnergyHardpoints
L_0146: ldarg.0
L_0147: ldc.i4.0
L_0148: stfld System.Int32 totalMissileHardpoints
L_014d: ldarg.0
L_014e: ldc.i4.0
L_014f: stfld System.Int32 totalSmallHardpoints
L_0154: ldarg.0
L_0155: ldc.i4.0
L_0156: stfld System.Int32 currentJumpjetCount
L_015b: ldarg.0
L_015c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0161: ldfld BattleTech.MechDef activeMechDef
L_0166: ldarg.1
L_0167: ldfld BattleTech.ChassisLocations Location
L_016c: ldarg.0
L_016d: ldflda System.Int32 totalBallisticHardpoints
L_0172: ldarg.0
L_0173: ldflda System.Int32 totalEnergyHardpoints
L_0178: ldarg.0
L_0179: ldflda System.Int32 totalMissileHardpoints
L_017e: ldarg.0
L_017f: ldflda System.Int32 totalSmallHardpoints
L_0184: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0189: ldc.i4.0
L_018a: stloc.0
L_018b: br Label5
L_0190: Label8
L_0190: ldarg.0
L_0191: ldfld BattleTech.UI.MechLabPanel mechLab
L_0196: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_019b: ldloc.0
L_019c: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01a1: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a6: ldarg.1
L_01a7: ldfld BattleTech.ChassisLocations Location
L_01ac: bne.un Label6
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01bd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_01c2: ldloc.0
L_01c3: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01c8: ldc.i4.0
L_01c9: ldarg.1
L_01ca: ldfld BattleTech.ChassisLocations Location
L_01cf: ldarg.0
L_01d0: ldnull
L_01d1: callvirt BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_01d6: stloc.1
L_01d7: ldloc.1
L_01d8: ldnull
L_01d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01de: brfalse Label7
L_01e3: ldarg.0
L_01e4: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_01e9: ldloc.1
L_01ea: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_01ef: ldarg.0
L_01f0: ldarg.0
L_01f1: ldfld System.Int32 usedSlots
L_01f6: ldarg.0
L_01f7: ldfld BattleTech.UI.MechLabPanel mechLab
L_01fc: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0201: ldloc.0
L_0202: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_0207: callvirt BattleTech.MechComponentDef get_Def()
L_020c: callvirt Int32 get_InventorySize()
L_0211: add
L_0212: stfld System.Int32 usedSlots
L_0217: ldloc.1
L_0218: callvirt UnityEngine.GameObject get_gameObject()
L_021d: callvirt UnityEngine.Transform get_transform()
L_0222: ldarg.0
L_0223: ldfld UnityEngine.Transform inventoryParent
L_0228: ldc.i4.0
L_0229: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_022e: ldloc.1
L_022f: callvirt UnityEngine.GameObject get_gameObject()
L_0234: callvirt UnityEngine.Transform get_transform()
L_0239: call UnityEngine.Vector3 get_one()
L_023e: callvirt Void set_localScale(UnityEngine.Vector3)
L_0243: Label6
L_0243: Label7
L_0243: ldloc.0
L_0244: ldc.i4.1
L_0245: add
L_0246: stloc.0
L_0247: Label5
L_0247: ldloc.0
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0253: callvirt Int32 get_Count()
L_0258: blt Label8
L_025d: ldarg.0
L_025e: call Void RefreshHardpointData()
L_0263: ldarg.0
L_0264: call Void RefreshArmor()
L_0269: ldarg.0
L_026a: ldfld BattleTech.UI.TMProWrapper.LocalizableText structureText
L_026f: ldstr "{0} / {1}"
L_0274: ldc.i4.2
L_0275: newarr System.Object
L_027a: dup
L_027b: ldc.i4.0
L_027c: ldarg.1
L_027d: ldfld System.Single CurrentInternalStructure
L_0282: conv.i4
L_0283: box System.Int32
L_0288: stelem.ref
L_0289: dup
L_028a: ldc.i4.1
L_028b: ldarg.0
L_028c: ldflda BattleTech.LocationDef chassisLocationDef
L_0291: ldfld System.Single InternalStructure
L_0296: conv.i4
L_0297: box System.Int32
L_029c: stelem.ref
L_029d: callvirt Void SetText(System.String, System.Object[])
L_02a2: ldarg.1
L_02a3: ldfld System.Single CurrentInternalStructure
L_02a8: ldc.r4 0
L_02ad: bgt.un Label9
L_02b2: ldarg.0
L_02b3: ldc.i4.1
L_02b4: stfld System.Boolean needsRepair
L_02b9: ldarg.0
L_02ba: ldfld UnityEngine.GameObject destroyedOverlay
L_02bf: ldc.i4.1
L_02c0: callvirt Void SetActive(Boolean)
L_02c5: ldarg.0
L_02c6: ldfld UnityEngine.GameObject damagedOverlay
L_02cb: ldc.i4.0
L_02cc: callvirt Void SetActive(Boolean)
L_02d1: br Label11
L_02d6: Label9
L_02d6: ldarg.1
L_02d7: ldfld System.Single CurrentInternalStructure
L_02dc: ldarg.0
L_02dd: ldflda BattleTech.LocationDef chassisLocationDef
L_02e2: ldfld System.Single InternalStructure
L_02e7: bge.un Label10
L_02ec: ldarg.0
L_02ed: ldc.i4.1
L_02ee: stfld System.Boolean needsRepair
L_02f3: ldarg.0
L_02f4: ldfld UnityEngine.GameObject destroyedOverlay
L_02f9: ldc.i4.0
L_02fa: callvirt Void SetActive(Boolean)
L_02ff: ldarg.0
L_0300: ldfld UnityEngine.GameObject damagedOverlay
L_0305: ldc.i4.1
L_0306: callvirt Void SetActive(Boolean)
L_030b: br Label12
L_0310: Label10
L_0310: ldarg.0
L_0311: ldc.i4.0
L_0312: stfld System.Boolean needsRepair
L_0317: ldarg.0
L_0318: ldfld UnityEngine.GameObject damagedOverlay
L_031d: ldc.i4.0
L_031e: callvirt Void SetActive(Boolean)
L_0323: ldarg.0
L_0324: ldfld UnityEngine.GameObject destroyedOverlay
L_0329: ldc.i4.0
L_032a: callvirt Void SetActive(Boolean)
L_032f: Label11
L_032f: Label12
L_032f: ldarg.0
L_0330: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0335: call Void Postfix(System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_033a: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void StripEquipment()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabPanel mechLab
L_0006: callvirt Boolean get_Initialized()
L_000b: brtrue Label1
L_0010: br Label5
L_0015: Label1
L_0015: ldarg.0
L_0016: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_001b: callvirt Int32 get_Count()
L_0020: ldc.i4.1
L_0021: sub
L_0022: stloc.0
L_0023: br Label2
L_0028: Label4
L_0028: ldarg.0
L_0029: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_002e: ldloc.0
L_002f: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0034: stloc.1
L_0035: ldloc.1
L_0036: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_003b: callvirt Boolean get_IsFixed()
L_0040: brtrue Label3
L_0045: ldarg.0
L_0046: ldloc.1
L_0047: ldc.i4.1
L_0048: call Boolean OnRemoveItemStrip(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem, Boolean)
L_004d: pop
L_004e: ldarg.0
L_004f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0054: ldloc.1
L_0055: call Void ForceItemDropStrip(BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement)
L_005a: Label3
L_005a: ldloc.0
L_005b: ldc.i4.1
L_005c: sub
L_005d: stloc.0
L_005e: Label2
L_005e: ldloc.0
L_005f: ldc.i4.0
L_0060: bge Label4
L_0065: Label5
L_0065: ret
DONE

### Patch BattleTech.SimGameState, Void AddMechPart(System.String)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.MechDef
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldarg.1
L_0008: ldstr "MECHPART"
L_000d: ldc.i4.1
L_000e: call Int32 GetItemCount(System.String, System.String, ItemCountType)
L_0013: ldarg.0
L_0014: call BattleTech.SimGameConstants get_Constants()
L_0019: callvirt BattleTech.StoryConstantsDef get_Story()
L_001e: ldfld System.Int32 DefaultMechPartMax
L_0023: stloc.0
L_0024: ldc.i4.1
L_0025: add
L_0026: ldloc.0
L_0027: blt Label1
L_002c: ldc.i4.0
L_002d: stloc.2
L_002e: br Label2
L_0033: Label3
L_0033: ldarg.0
L_0034: ldarg.1
L_0035: ldstr "MECHPART"
L_003a: ldc.i4.0
L_003b: call Void RemoveItemStat(System.String, System.String, Boolean)
L_0040: ldloc.2
L_0041: ldc.i4.1
L_0042: add
L_0043: stloc.2
L_0044: Label2
L_0044: ldloc.2
L_0045: ldloc.0
L_0046: ldc.i4.1
L_0047: sub
L_0048: blt Label3
L_004d: ldarg.0
L_004e: call BattleTech.Data.DataManager get_DataManager()
L_0053: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.MechDef] get_MechDefs()
L_0058: ldarg.1
L_0059: callvirt BattleTech.MechDef Get(System.String)
L_005e: ldarg.0
L_005f: call System.String GenerateSimGameUID()
L_0064: ldarg.0
L_0065: call BattleTech.SimGameConstants get_Constants()
L_006a: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_006f: ldfld System.Boolean EquipMechOnSalvage
L_0074: call BattleTech.MechDef CreateMech(BattleTech.MechDef, System.String, Boolean)
L_0079: stloc.1
L_007a: ldarg.0
L_007b: ldc.i4.0
L_007c: ldloc.1
L_007d: ldc.i4.1
L_007e: ldc.i4.0
L_007f: ldc.i4.1
L_0080: ldnull
L_0081: call Void AddMech(Int32, BattleTech.MechDef, Boolean, Boolean, Boolean, System.String)
L_0086: ldarg.0
L_0087: ldfld BattleTech.UI.SimGameInterruptManager interruptQueue
L_008c: callvirt Boolean DisplayIfAvailable()
L_0091: pop
L_0092: ldarg.0
L_0093: call MessageCenter get_MessageCenter()
L_0098: ldloc.1
L_0099: ldloc.0
L_009a: ldc.i4.1
L_009b: newobj Void .ctor(MechDef, Int32, Boolean)
L_00a0: callvirt Void PublishMessage(MessageCenterMessage)
L_00a5: br Label4
L_00aa: Label1
L_00aa: ldarg.0
L_00ab: ldarg.1
L_00ac: ldstr "MECHPART"
L_00b1: ldc.i4.0
L_00b2: call Void AddItemStat(System.String, System.String, Boolean)
L_00b7: Label4
L_00b7: ret
DONE

### Patch BattleTech.SimGameState, Void ReadyMech(Int32, System.String)
L_0000: Local var 0: System.String[]
L_0000: Local var 1: System.String
L_0000: Local var 2: BattleTech.ChassisDef
L_0000: Local var 3: System.String
L_0000: Local var 4: BattleTech.MechDef
L_0000: Local var 5: BattleTech.MechDef
L_0000: Local var 6: BattleTech.WorkOrderEntry_ReadyMech
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.SimGameState)
L_0006: ldarg.0
L_0007: ldarg.2
L_0008: ldc.i4.0
L_0009: call Boolean ScrapInactiveMech(System.String, Boolean)
L_000e: brfalse Label1
L_0013: ldarg.0
L_0014: ldarg.2
L_0015: ldtoken BattleTech.MechDef
L_001a: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_001f: call System.String GetItemStatID(System.String, System.Type)
L_0024: starg.s 2
L_0026: ldarg.2
L_0027: ldc.i4.1
L_0028: newarr System.Char
L_002d: dup
L_002e: ldc.i4.0
L_002f: ldc.i4.s 46
L_0031: stelem.i2
L_0032: callvirt System.String[] Split(Char[])
L_0037: stloc.0
L_0038: ldtoken BattleTech.BattleTechResourceType
L_003d: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0042: ldloc.0
L_0043: ldc.i4.1
L_0044: ldelem.ref
L_0045: call System.Object Parse(System.Type, System.String)
L_004a: unbox.any BattleTech.BattleTechResourceType
L_004f: ldc.i4.s 37
L_0051: beq Label2
L_0056: br Label4
L_005b: Label2
L_005b: ldarg.0
L_005c: call BattleTech.Data.DataManager get_DataManager()
L_0061: ldc.i4.s 13
L_0063: ldloc.0
L_0064: ldc.i4.2
L_0065: ldelem.ref
L_0066: callvirt Boolean Exists(BattleTech.BattleTechResourceType, System.String)
L_006b: brtrue Label3
L_0070: br Label5
L_0075: Label3
L_0075: ldarg.0
L_0076: call System.String GenerateSimGameUID()
L_007b: stloc.1
L_007c: ldarg.0
L_007d: call BattleTech.Data.DataManager get_DataManager()
L_0082: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.ChassisDef] get_ChassisDefs()
L_0087: ldloc.0
L_0088: ldc.i4.2
L_0089: ldelem.ref
L_008a: callvirt BattleTech.ChassisDef Get(System.String)
L_008f: stloc.2
L_0090: ldloc.2
L_0091: callvirt BattleTech.DescriptionDef get_Description()
L_0096: callvirt System.String get_Id()
L_009b: ldstr "chassisdef"
L_00a0: ldstr "mechdef"
L_00a5: callvirt System.String Replace(System.String, System.String)
L_00aa: stloc.3
L_00ab: ldarg.0
L_00ac: call BattleTech.Data.DataManager get_DataManager()
L_00b1: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.MechDef] get_MechDefs()
L_00b6: ldloc.3
L_00b7: callvirt BattleTech.MechDef Get(System.String)
L_00bc: stloc.s 4 (BattleTech.MechDef)
L_00be: ldloc.2
L_00bf: ldloc.1
L_00c0: ldloc.s 4 (BattleTech.MechDef)
L_00c2: call BattleTech.MechDef CreateMech(BattleTech.ChassisDef, System.String, BattleTech.MechDef)
L_00c7: stloc.s 5 (BattleTech.MechDef)
L_00c9: ldstr "ReadyMech-{0}"
L_00ce: ldloc.1
L_00cf: call System.String Format(System.String, System.Object)
L_00d4: ldstr "Readying 'Mech - {0}"
L_00d9: ldc.i4.1
L_00da: newarr System.Object
L_00df: dup
L_00e0: ldc.i4.0
L_00e1: ldloc.2
L_00e2: callvirt BattleTech.DescriptionDef get_Description()
L_00e7: callvirt System.String get_Name()
L_00ec: stelem.ref
L_00ed: call System.String T(System.String, System.Object[])
L_00f2: ldarg.0
L_00f3: call BattleTech.SimGameConstants get_Constants()
L_00f8: callvirt BattleTech.StoryConstantsDef get_Story()
L_00fd: ldfld System.Int32 MechReadyTime
L_0102: ldarg.1
L_0103: ldloc.s 5 (BattleTech.MechDef)
L_0105: ldarg.0
L_0106: call BattleTech.SimGameConstants get_Constants()
L_010b: callvirt BattleTech.StoryConstantsDef get_Story()
L_0110: ldfld System.String MechReadiedWorkOrderCompletedText
L_0115: ldc.i4.1
L_0116: newarr System.Object
L_011b: dup
L_011c: ldc.i4.0
L_011d: ldloc.2
L_011e: callvirt BattleTech.DescriptionDef get_Description()
L_0123: callvirt System.String get_Name()
L_0128: stelem.ref
L_0129: call System.String T(System.String, System.Object[])
L_012e: newobj Void .ctor(String, String, Int32, Int32, MechDef, String)
L_0133: stloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_0135: ldarg.0
L_0136: call System.Collections.Generic.List`1[BattleTech.WorkOrderEntry] get_MechLabQueue()
L_013b: ldloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_013d: callvirt Void Add(BattleTech.WorkOrderEntry)
L_0142: ldarg.0
L_0143: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_0148: ldarg.1
L_0149: ldloc.s 5 (BattleTech.MechDef)
L_014b: callvirt Void set_Item(Int32, BattleTech.MechDef)
L_0150: ldarg.0
L_0151: ldfld BattleTech.UI.SGRoomManager RoomManager
L_0156: ldloc.s 6 (BattleTech.WorkOrderEntry_ReadyMech)
L_0158: callvirt BattleTech.UI.TaskManagementElement AddWorkQueueEntry(BattleTech.WorkOrderEntry)
L_015d: pop
L_015e: ldarg.0
L_015f: ldc.i4.0
L_0160: call Void UpdateMechLabWorkQueue(Boolean)
L_0165: ldstr "audioeventdef_simgame_vo_barks"
L_016a: ldstr "workqueue_readymech"
L_016f: call AkGameObj get_GlobalAudioObject()
L_0174: ldnull
L_0175: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_017a: pop
L_017b: Label1
L_017b: Label4
L_017b: Label5
L_017b: ret
DONE

### Patch BattleTech.SimGameState, Void ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent)
L_0000: Local var 0: BattleTech.MechDef
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.MechComponentRef
L_0000: Local var 3: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: BattleTech.ComponentDamageLevel
L_0000: Local var 6: BattleTech.MechComponentRef[]
L_0000: Local var 7: System.Int32
L_0000: Local var 8: BattleTech.MechComponentRef
L_0000: ldarg.1
L_0001: callvirt Boolean get_IsMechLabComplete()
L_0006: brfalse Label1
L_000b: br Label20
L_0010: Label1
L_0010: ldarg.0
L_0011: ldarg.1
L_0012: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_0017: callvirt System.String get_MechID()
L_001c: call BattleTech.MechDef GetMechByID(System.String)
L_0021: stloc.0
L_0022: ldc.i4.0
L_0023: stloc.1
L_0024: ldarg.0
L_0025: ldloc.0
L_0026: ldarg.1
L_0027: callvirt System.String get_ComponentSimGameUID()
L_002c: ldarg.1
L_002d: callvirt System.String get_MechComponentID()
L_0032: ldarg.1
L_0033: callvirt BattleTech.ComponentType get_ComponentType()
L_0038: ldarg.1
L_0039: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_003e: ldarg.1
L_003f: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_0044: ldarg.1
L_0045: callvirt Int32 get_HardpointSlot()
L_004a: ldloca.s 1 (System.Boolean)
L_004c: call BattleTech.MechComponentRef GetMechComponentRefForUID(BattleTech.MechDef, System.String, System.String, BattleTech.ComponentType, BattleTech.ComponentDamageLevel, BattleTech.ChassisLocations, Int32, Boolean ByRef)
L_0051: stloc.2
L_0052: ldloc.0
L_0053: brtrue Label2
L_0058: ldsfld HBS.Logging.ILog logger
L_005d: ldc.i4.5
L_005e: newarr System.String
L_0063: dup
L_0064: ldc.i4.0
L_0065: ldstr "ML_InstallComponent "
L_006a: stelem.ref
L_006b: dup
L_006c: ldc.i4.1
L_006d: ldarg.1
L_006e: callvirt System.String get_ID()
L_0073: stelem.ref
L_0074: dup
L_0075: ldc.i4.2
L_0076: ldstr " had an invalid mechID "
L_007b: stelem.ref
L_007c: dup
L_007d: ldc.i4.3
L_007e: ldarg.1
L_007f: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_0084: callvirt System.String get_MechID()
L_0089: stelem.ref
L_008a: dup
L_008b: ldc.i4.4
L_008c: ldstr ", skipping"
L_0091: stelem.ref
L_0092: call System.String Concat(System.String[])
L_0097: callvirt Void LogError(System.Object)
L_009c: br Label21
L_00a1: Label2
L_00a1: ldloc.2
L_00a2: brtrue Label3
L_00a7: ldsfld HBS.Logging.ILog logger
L_00ac: ldc.i4.5
L_00ad: newarr System.String
L_00b2: dup
L_00b3: ldc.i4.0
L_00b4: ldstr "ML_InstallComponent "
L_00b9: stelem.ref
L_00ba: dup
L_00bb: ldc.i4.1
L_00bc: ldarg.1
L_00bd: callvirt System.String get_ID()
L_00c2: stelem.ref
L_00c3: dup
L_00c4: ldc.i4.2
L_00c5: ldstr " had an invalid mechComponentID "
L_00ca: stelem.ref
L_00cb: dup
L_00cc: ldc.i4.3
L_00cd: ldarg.1
L_00ce: callvirt System.String get_MechComponentID()
L_00d3: stelem.ref
L_00d4: dup
L_00d5: ldc.i4.4
L_00d6: ldstr ", skipping"
L_00db: stelem.ref
L_00dc: call System.String Concat(System.String[])
L_00e1: callvirt Void LogError(System.Object)
L_00e6: br Label22
L_00eb: Label3
L_00eb: ldarg.1
L_00ec: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_00f1: brfalse Label4
L_00f6: ldloc.2
L_00f7: callvirt BattleTech.MechComponentDef get_Def()
L_00fc: callvirt BattleTech.DescriptionDef get_Description()
L_0101: callvirt System.String get_Id()
L_0106: pop
L_0107: ldarg.0
L_0108: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_010d: ldloc.2
L_010e: callvirt Boolean Remove(BattleTech.MechComponentRef)
L_0113: pop
L_0114: ldloc.0
L_0115: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_011a: newobj Void .ctor(IEnumerable`1)
L_011f: stloc.3
L_0120: ldloc.2
L_0121: ldarg.1
L_0122: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_0127: ldarg.1
L_0128: callvirt Int32 get_HardpointSlot()
L_012d: ldloc.2
L_012e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0133: ldc.i4.6
L_0134: beq Label5
L_0139: ldc.i4.0
L_013a: br Label6
L_013f: Label5
L_013f: ldc.i4.3
L_0140: Label6
L_0140: ldloc.2
L_0141: callvirt Boolean get_IsFixed()
L_0146: callvirt Void SetData(BattleTech.ChassisLocations, Int32, BattleTech.ComponentDamageLevel, Boolean)
L_014b: ldloc.3
L_014c: ldloc.2
L_014d: callvirt Void Add(BattleTech.MechComponentRef)
L_0152: ldloc.0
L_0153: ldloc.3
L_0154: callvirt BattleTech.MechComponentRef[] ToArray()
L_0159: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_015e: br Label7
L_0163: Label4
L_0163: ldloc.2
L_0164: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0169: ldc.i4.4
L_016a: beq Label8
L_016f: ldc.i4.0
L_0170: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0172: ldloc.2
L_0173: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0178: brtrue Label9
L_017d: ldc.i4.5
L_017e: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0180: br Label10
L_0185: Label9
L_0185: ldloc.2
L_0186: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_018b: ldc.i4.3
L_018c: bne.un Label11
L_0191: ldc.i4.6
L_0192: stloc.s 5 (BattleTech.ComponentDamageLevel)
L_0194: Label10
L_0194: Label11
L_0194: ldloc.2
L_0195: ldarg.1
L_0196: callvirt BattleTech.ChassisLocations get_DesiredLocation()
L_019b: ldarg.1
L_019c: callvirt Int32 get_HardpointSlot()
L_01a1: ldloc.s 5 (BattleTech.ComponentDamageLevel)
L_01a3: ldloc.2
L_01a4: callvirt Boolean get_IsFixed()
L_01a9: callvirt Void SetData(BattleTech.ChassisLocations, Int32, BattleTech.ComponentDamageLevel, Boolean)
L_01ae: ldarg.0
L_01af: ldarg.1
L_01b0: callvirt BattleTech.WorkOrderEntry_MechLab get_MechLabParent()
L_01b5: ldarg.1
L_01b6: callvirt System.String get_ID()
L_01bb: ldloc.2
L_01bc: callvirt System.String get_SimGameUID()
L_01c1: call Int32 GetWorkOrderComponentReferenceCount(BattleTech.WorkOrderEntry_MechLab, System.String, System.String)
L_01c6: ldc.i4.0
L_01c7: cgt
L_01c9: brfalse Label12
L_01ce: ldarg.0
L_01cf: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_01d4: ldloc.2
L_01d5: callvirt Boolean Contains(BattleTech.MechComponentRef)
L_01da: brtrue Label13
L_01df: ldarg.0
L_01e0: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_01e5: ldloc.2
L_01e6: callvirt Void Add(BattleTech.MechComponentRef)
L_01eb: br Label14
L_01f0: Label12
L_01f0: ldarg.0
L_01f1: ldloc.2
L_01f2: callvirt BattleTech.MechComponentDef get_Def()
L_01f7: callvirt BattleTech.DescriptionDef get_Description()
L_01fc: callvirt System.String get_Id()
L_0201: ldloc.2
L_0202: callvirt BattleTech.MechComponentDef get_Def()
L_0207: call System.Type GetTypeFromComponent(BattleTech.MechComponentDef)
L_020c: ldloc.2
L_020d: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0212: brfalse Label15
L_0217: ldloc.2
L_0218: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_021d: ldc.i4.5
L_021e: ceq
L_0220: ldc.i4.0
L_0221: ceq
L_0223: br Label16
L_0228: Label15
L_0228: ldc.i4.0
L_0229: Label16
L_0229: call Void AddItemStat(System.String, System.Type, Boolean)
L_022e: Label8
L_022e: Label13
L_022e: Label14
L_022e: newobj Void .ctor()
L_0233: stloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0235: ldloc.0
L_0236: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_023b: stloc.s 6 (BattleTech.MechComponentRef[])
L_023d: ldc.i4.0
L_023e: stloc.s 7 (System.Int32)
L_0240: br Label17
L_0245: Label19
L_0245: ldloc.s 6 (BattleTech.MechComponentRef[])
L_0247: ldloc.s 7 (System.Int32)
L_0249: ldelem.ref
L_024a: stloc.s 8 (BattleTech.MechComponentRef)
L_024c: ldloc.s 8 (BattleTech.MechComponentRef)
L_024e: ldloc.2
L_024f: beq Label18
L_0254: ldloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0256: ldloc.s 8 (BattleTech.MechComponentRef)
L_0258: callvirt Void Add(BattleTech.MechComponentRef)
L_025d: Label18
L_025d: ldloc.s 7 (System.Int32)
L_025f: ldc.i4.1
L_0260: add
L_0261: stloc.s 7 (System.Int32)
L_0263: Label17
L_0263: ldloc.s 7 (System.Int32)
L_0265: ldloc.s 6 (BattleTech.MechComponentRef[])
L_0267: ldlen
L_0268: conv.i4
L_0269: blt Label19
L_026e: ldloc.0
L_026f: ldloc.s 4 (System.Collections.Generic.List`1[BattleTech.MechComponentRef])
L_0271: callvirt BattleTech.MechComponentRef[] ToArray()
L_0276: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_027b: Label7
L_027b: ldloc.0
L_027c: callvirt Void RefreshBattleValue()
L_0281: ldarg.1
L_0282: ldc.i4.1
L_0283: callvirt Void SetMechLabComplete(Boolean)
L_0288: Label20
L_0288: Label21
L_0288: Label22
L_0288: ldarg 1
L_028e: ldarg.0
L_028f: call Void Postfix(BattleTech.WorkOrderEntry_InstallComponent, BattleTech.SimGameState)
L_0294: ret
DONE

### Patch BattleTech.UI.MechLabItemSlotElement, Void RefreshItemColor()
L_0000: Local var 0: BattleTech.UI.UIColor
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0007: ldarg.0
L_0008: ldfld UnityEngine.GameObject fixedEquipmentOverlay
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.IMechLabDropTarget dropParent
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.UIColorRefTracker nameTextColor
L_0019: ldarg.0
L_001a: ldfld BattleTech.UI.UIColorRefTracker iconColor
L_001f: ldarg.0
L_0020: ldfld SVGImporter.SVGImage icon
L_0025: call Boolean ChangeColor(BattleTech.UI.MechLabItemSlotElement, BattleTech.UI.UIColorRefTracker, UnityEngine.GameObject, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.UIColorRefTracker, BattleTech.UI.UIColorRefTracker, SVGImporter.SVGImage)
L_002a: brfalse Label0
L_002f: ldarg.0
L_0030: ldfld BattleTech.MechComponentRef componentRef
L_0035: call BattleTech.UI.UIColor GetUIColor(BattleTech.MechComponentRef)
L_003a: stloc.0
L_003b: ldarg.0
L_003c: ldfld BattleTech.UI.UIColorRefTracker backgroundColor
L_0041: ldloc.0
L_0042: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0047: ldarg.0
L_0048: ldfld UnityEngine.GameObject fixedEquipmentOverlay
L_004d: ldarg.0
L_004e: call BattleTech.MechComponentRef get_ComponentRef()
L_0053: callvirt Boolean get_IsFixed()
L_0058: callvirt Void SetActive(Boolean)
L_005d: Label0
L_005d: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.1
L_0001: isinst BattleTech.UI.MechLabItemSlotElement
L_0006: stloc.0
L_0007: nop
L_0008: nop
L_0009: nop
L_000a: nop
L_000b: nop
L_000c: nop
L_000d: Label1
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld System.Int32 usedSlots
L_0014: ldarg.1
L_0015: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001a: callvirt BattleTech.MechComponentDef get_Def()
L_001f: callvirt Int32 get_InventorySize()
L_0024: sub
L_0025: stfld System.Int32 usedSlots
L_002a: ldarg.0
L_002b: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0030: ldloc.0
L_0031: callvirt Boolean Remove(BattleTech.UI.MechLabItemSlotElement)
L_0036: pop
L_0037: ldarg.0
L_0038: ldfld BattleTech.UI.MechLabPanel mechLab
L_003d: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0042: ldarg.1
L_0043: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0048: callvirt Boolean Remove(BattleTech.MechComponentRef)
L_004d: pop
L_004e: ldloc.0
L_004f: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0054: ldc.i4.0
L_0055: callvirt Void set_blocksRaycasts(Boolean)
L_005a: ldarg.0
L_005b: call Void RefreshHardpointData()
L_0060: ldarg.0
L_0061: ldloc.0
L_0062: ldc.i4.1
L_0063: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.MechLabPanel mechLab
L_006e: callvirt Void FlagAsModified()
L_0073: ldc.i4.1
L_0074: ret
DONE

### Patch BattleTech.BaseComponentRef, Void RefreshComponentDef()
L_0000: Local var 0: BattleTech.ComponentType
L_0000: ldarg.0
L_0001: call BattleTech.Data.DataManager get_DataManager()
L_0006: brtrue Label1
L_000b: br Label14
L_0010: Label1
L_0010: ldarg.0
L_0011: call BattleTech.ComponentType get_ComponentDefType()
L_0016: stloc.0
L_0017: ldloc.0
L_0018: ldc.i4.1
L_0019: sub
L_001a: switch Labels2,3,4,5,6,7
L_0037: br Label8
L_003c: Label3
L_003c: ldarg.0
L_003d: call BattleTech.Data.DataManager get_DataManager()
L_0042: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.AmmunitionBoxDef] get_AmmoBoxDefs()
L_0047: ldarg.0
L_0048: call System.String get_ComponentDefID()
L_004d: callvirt Boolean Exists(System.String)
L_0052: brfalse Label9
L_0057: ldarg.0
L_0058: ldarg.0
L_0059: call BattleTech.Data.DataManager get_DataManager()
L_005e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.AmmunitionBoxDef] get_AmmoBoxDefs()
L_0063: ldarg.0
L_0064: call System.String get_ComponentDefID()
L_0069: callvirt BattleTech.AmmunitionBoxDef Get(System.String)
L_006e: call Void set_Def(BattleTech.MechComponentDef)
L_0073: br Label15
L_0078: Label4
L_0078: ldarg.0
L_0079: call BattleTech.Data.DataManager get_DataManager()
L_007e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HeatSinkDef] get_HeatSinkDefs()
L_0083: ldarg.0
L_0084: call System.String get_ComponentDefID()
L_0089: callvirt Boolean Exists(System.String)
L_008e: brfalse Label10
L_0093: ldarg.0
L_0094: ldarg.0
L_0095: call BattleTech.Data.DataManager get_DataManager()
L_009a: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HeatSinkDef] get_HeatSinkDefs()
L_009f: ldarg.0
L_00a0: call System.String get_ComponentDefID()
L_00a5: callvirt BattleTech.HeatSinkDef Get(System.String)
L_00aa: call Void set_Def(BattleTech.MechComponentDef)
L_00af: br Label16
L_00b4: Label5
L_00b4: ldarg.0
L_00b5: call BattleTech.Data.DataManager get_DataManager()
L_00ba: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.JumpJetDef] get_JumpJetDefs()
L_00bf: ldarg.0
L_00c0: call System.String get_ComponentDefID()
L_00c5: callvirt Boolean Exists(System.String)
L_00ca: brfalse Label11
L_00cf: ldarg.0
L_00d0: ldarg.0
L_00d1: call BattleTech.Data.DataManager get_DataManager()
L_00d6: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.JumpJetDef] get_JumpJetDefs()
L_00db: ldarg.0
L_00dc: call System.String get_ComponentDefID()
L_00e1: callvirt BattleTech.JumpJetDef Get(System.String)
L_00e6: call Void set_Def(BattleTech.MechComponentDef)
L_00eb: br Label17
L_00f0: Label6
L_00f0: ldarg.0
L_00f1: call BattleTech.Data.DataManager get_DataManager()
L_00f6: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_00fb: ldarg.0
L_00fc: call System.String get_ComponentDefID()
L_0101: callvirt Boolean Exists(System.String)
L_0106: brfalse Label12
L_010b: ldarg.0
L_010c: ldarg.0
L_010d: call BattleTech.Data.DataManager get_DataManager()
L_0112: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.UpgradeDef] get_UpgradeDefs()
L_0117: ldarg.0
L_0118: call System.String get_ComponentDefID()
L_011d: callvirt BattleTech.UpgradeDef Get(System.String)
L_0122: call Void set_Def(BattleTech.MechComponentDef)
L_0127: br Label18
L_012c: Label2
L_012c: ldarg.0
L_012d: call BattleTech.Data.DataManager get_DataManager()
L_0132: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.WeaponDef] get_WeaponDefs()
L_0137: ldarg.0
L_0138: call System.String get_ComponentDefID()
L_013d: callvirt Boolean Exists(System.String)
L_0142: brfalse Label13
L_0147: ldarg.0
L_0148: ldarg.0
L_0149: call BattleTech.Data.DataManager get_DataManager()
L_014e: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.WeaponDef] get_WeaponDefs()
L_0153: ldarg.0
L_0154: call System.String get_ComponentDefID()
L_0159: callvirt BattleTech.WeaponDef Get(System.String)
L_015e: call Void set_Def(BattleTech.MechComponentDef)
L_0163: br Label19
L_0168: Label8
L_0168: ldstr "MechDef RefreshComponentDef had invalid component type: "
L_016d: ldarg.0
L_016e: call BattleTech.ComponentType get_ComponentDefType()
L_0173: box BattleTech.ComponentType
L_0178: call System.String Concat(System.Object, System.Object)
L_017d: call Void LogError(System.Object)
L_0182: Label7
L_0182: Label9
L_0182: Label10
L_0182: Label11
L_0182: Label12
L_0182: Label13
L_0182: Label14
L_0182: Label15
L_0182: Label16
L_0182: Label17
L_0182: Label18
L_0182: Label19
L_0182: ldarg.0
L_0183: call Void SetFixed(BattleTech.BaseComponentRef)
L_0188: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0000: Local var 0: BattleTech.UI.IMechLabDraggableItem
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponDef
L_0000: Local var 4: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.WeaponDef
L_0000: Local var 7: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.MechLabPanel mechLab
L_0007: ldarg 1
L_000d: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.MechLabPanel, UnityEngine.EventSystems.PointerEventData)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldfld BattleTech.UI.MechLabPanel mechLab
L_001d: callvirt Boolean get_Initialized()
L_0022: brtrue Label1
L_0027: br Label15
L_002c: Label1
L_002c: ldarg.0
L_002d: ldfld BattleTech.UI.MechLabPanel mechLab
L_0032: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_0037: brtrue Label2
L_003c: br Label16
L_0041: Label2
L_0041: ldarg.0
L_0042: ldfld BattleTech.UI.MechLabPanel mechLab
L_0047: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_004c: stloc.0
L_004d: ldarg.0
L_004e: ldloc.0
L_004f: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0054: call Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0059: stloc.1
L_005a: ldloc.1
L_005b: brtrue Label3
L_0060: ldloc.0
L_0061: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0066: callvirt BattleTech.ComponentType get_ComponentDefType()
L_006b: ldc.i4.1
L_006c: bne.un Label4
L_0071: ldarg.0
L_0072: ldfld BattleTech.LocationLoadoutDef loadout
L_0077: ldfld System.Single CurrentInternalStructure
L_007c: ldc.r4 0
L_0081: ble.un Label5
L_0086: ldloc.0
L_0087: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_008c: callvirt BattleTech.MechComponentDef get_Def()
L_0091: isinst BattleTech.WeaponDef
L_0096: stloc.3
L_0097: ldnull
L_0098: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_009a: ldarg.0
L_009b: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00a0: callvirt Int32 get_Count()
L_00a5: ldc.i4.1
L_00a6: sub
L_00a7: stloc.s 5 (System.Int32)
L_00a9: br Label6
L_00ae: Label10
L_00ae: ldarg.0
L_00af: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00b4: ldloc.s 5 (System.Int32)
L_00b6: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00bb: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00c0: callvirt BattleTech.MechComponentDef get_Def()
L_00c5: isinst BattleTech.WeaponDef
L_00ca: stloc.s 6 (BattleTech.WeaponDef)
L_00cc: ldloc.s 6 (BattleTech.WeaponDef)
L_00ce: brfalse Label7
L_00d3: ldloc.s 6 (BattleTech.WeaponDef)
L_00d5: callvirt BattleTech.WeaponCategory get_Category()
L_00da: ldloc.3
L_00db: callvirt BattleTech.WeaponCategory get_Category()
L_00e0: bne.un Label8
L_00e5: ldarg.0
L_00e6: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00eb: ldloc.s 5 (System.Int32)
L_00ed: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00f2: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_00f4: br Label9
L_00f9: Label7
L_00f9: Label8
L_00f9: ldloc.s 5 (System.Int32)
L_00fb: ldc.i4.1
L_00fc: sub
L_00fd: stloc.s 5 (System.Int32)
L_00ff: Label6
L_00ff: ldloc.s 5 (System.Int32)
L_0101: ldc.i4.0
L_0102: bge Label10
L_0107: Label9
L_0107: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0109: ldnull
L_010a: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_010f: brfalse Label11
L_0114: ldarg.0
L_0115: ldfld System.Int32 usedSlots
L_011a: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_011c: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0121: callvirt BattleTech.MechComponentDef get_Def()
L_0126: callvirt Int32 get_InventorySize()
L_012b: sub
L_012c: ldloc.3
L_012d: callvirt Int32 get_InventorySize()
L_0132: add
L_0133: ldarg.0
L_0134: ldfld System.Int32 maxSlots
L_0139: bgt Label12
L_013e: ldarg.0
L_013f: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0141: ldc.i4.1
L_0142: call Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0147: pop
L_0148: ldarg.0
L_0149: ldfld BattleTech.UI.MechLabPanel mechLab
L_014e: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0150: callvirt Void ForceItemDrop(BattleTech.UI.MechLabItemSlotElement)
L_0155: ldc.i4.1
L_0156: stloc.1
L_0157: Label3
L_0157: Label4
L_0157: Label5
L_0157: Label11
L_0157: Label12
L_0157: ldloc.1
L_0158: brtrue Label13
L_015d: ldarg.0
L_015e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0163: ldarg.0
L_0164: ldfld Localize.Text _dropErrorMessage
L_0169: callvirt Void ShowDropErrorMessage(Localize.Text)
L_016e: ldarg.0
L_016f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0174: ldarg.1
L_0175: callvirt Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_017a: br Label17
L_017f: Label13
L_017f: ldarg.0
L_0180: ldloc.0
L_0181: ldc.i4.1
L_0182: call Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0187: stloc.2
L_0188: ldarg.0
L_0189: call BattleTech.SimGameState get_Sim()
L_018e: brfalse Label14
L_0193: ldarg.0
L_0194: call BattleTech.SimGameState get_Sim()
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabPanel mechLab
L_019f: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01a4: callvirt System.String get_MechID()
L_01a9: ldloc.0
L_01aa: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01af: ldarg.0
L_01b0: ldfld BattleTech.LocationLoadoutDef loadout
L_01b5: ldfld BattleTech.ChassisLocations Location
L_01ba: ldloc.0
L_01bb: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01c0: callvirt BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_01c5: stloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01c7: ldarg.0
L_01c8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01cd: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01d2: ldloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01d4: callvirt Void AddSubEntry(BattleTech.WorkOrderEntry)
L_01d9: Label14
L_01d9: ldloc.0
L_01da: ldarg.0
L_01db: ldfld BattleTech.LocationLoadoutDef loadout
L_01e0: ldfld BattleTech.ChassisLocations Location
L_01e5: callvirt Void set_MountedLocation(BattleTech.ChassisLocations)
L_01ea: ldarg.0
L_01eb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f0: ldloc.2
L_01f1: callvirt Void ClearDragItem(Boolean)
L_01f6: ldarg.0
L_01f7: call Void RefreshHardpointData()
L_01fc: ldarg.0
L_01fd: ldfld BattleTech.UI.MechLabPanel mechLab
L_0202: ldc.i4.0
L_0203: callvirt Boolean ValidateLoadout(Boolean)
L_0208: pop
L_0209: Label15
L_0209: Label16
L_0209: Label17
L_0209: Label0
L_0209: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnItemGrab(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: Local var 1: BattleTech.MechComponentRef
L_0006: ldnull
L_0007: stloc 1 (BattleTech.MechComponentRef)
L_0008: ldarg 1
L_000e: ldloca 0 (System.Boolean)
L_0010: ldarg.0
L_0011: ldfld BattleTech.UI.MechLabPanel mechLab
L_0016: ldloca 1 (BattleTech.MechComponentRef)
L_0018: call Boolean Prefix(BattleTech.UI.IMechLabDraggableItem, Boolean ByRef, BattleTech.UI.MechLabPanel, BattleTech.MechComponentRef ByRef)
L_001d: brfalse Label0
L_0022: ldarg.0
L_0023: ldfld BattleTech.UI.MechLabPanel mechLab
L_0028: ldarg.1
L_0029: ldarg.2
L_002a: callvirt Boolean OnItemGrab(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_002f: stloc 0 (System.Boolean)
L_0030: Label0
L_0030: ldarg 1
L_0036: ldloca 0 (System.Boolean)
L_0038: ldloc 1 (BattleTech.MechComponentRef)
L_0039: ldarg.0
L_003a: ldfld BattleTech.UI.MechLabPanel mechLab
L_003f: ldarg.0
L_0040: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, Boolean ByRef, BattleTech.MechComponentRef, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabLocationWidget)
L_0045: ldloc 0 (System.Boolean)
L_0046: ret
DONE

### Patch BattleTech.MechValidationRules, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0000: Local var 0: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: ldnull
L_0001: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0002: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] InitializeValidationResults()
L_0007: stloc.0
L_0008: ldarg.0
L_0009: switch Labels1,2,3,4
L_001e: br Label5
L_0023: Label1
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0027: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_002c: ldarg.2
L_002d: ldarg.0
L_002e: ldarg.3
L_002f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0031: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0036: ldarg.1
L_0037: ldarg.2
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_003c: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0041: ldarg.1
L_0042: ldarg.2
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0047: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_004c: ldarg.1
L_004d: ldarg.2
L_004e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0050: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0055: br Label6
L_005a: Label2
L_005a: ldarg.1
L_005b: ldarg.2
L_005c: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_005e: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0063: ldarg.1
L_0064: ldarg.2
L_0065: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0067: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_006c: ldarg.2
L_006d: ldarg.0
L_006e: ldarg.3
L_006f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0071: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0076: ldarg.1
L_0077: ldarg.2
L_0078: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_007a: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_007f: ldarg.2
L_0080: ldarg.0
L_0081: ldarg.3
L_0082: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0084: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0089: ldarg.1
L_008a: ldarg.2
L_008b: ldarg.0
L_008c: ldarg.3
L_008d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_008f: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0094: ldarg.1
L_0095: ldarg.2
L_0096: ldarg.0
L_0097: ldarg.3
L_0098: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_009a: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_009f: ldarg.1
L_00a0: ldarg.2
L_00a1: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00a3: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00a8: br Label7
L_00ad: Label3
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00b1: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00b6: ldarg.1
L_00b7: ldarg.2
L_00b8: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ba: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00bf: ldarg.2
L_00c0: ldarg.0
L_00c1: ldarg.3
L_00c2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00c4: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00c9: ldarg.1
L_00ca: ldarg.2
L_00cb: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00cd: call Void ValidateMechIsStockMechDef(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00d2: ldarg.1
L_00d3: ldarg.2
L_00d4: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00d6: call Void ValidateMechHasStockComponents(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00db: ldarg.1
L_00dc: ldarg.2
L_00dd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00df: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00e4: ldarg.2
L_00e5: ldarg.0
L_00e6: ldarg.3
L_00e7: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00e9: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00ee: ldarg.1
L_00ef: ldarg.2
L_00f0: ldarg.0
L_00f1: ldarg.3
L_00f2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00f4: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00f9: ldarg.1
L_00fa: ldarg.2
L_00fb: ldarg.0
L_00fc: ldarg.3
L_00fd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ff: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0104: ldarg.1
L_0105: ldarg.2
L_0106: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0108: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_010d: br Label8
L_0112: Label4
L_0112: ldarg.1
L_0113: ldarg.2
L_0114: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0116: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_011b: ldarg.2
L_011c: ldarg.0
L_011d: ldarg.3
L_011e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0120: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0125: ldarg.1
L_0126: ldarg.2
L_0127: ldarg.0
L_0128: ldarg.3
L_0129: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_012b: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0130: ldarg.1
L_0131: ldarg.2
L_0132: ldarg.0
L_0133: ldarg.3
L_0134: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0136: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_013b: ldarg.1
L_013c: ldarg.2
L_013d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_013f: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0144: Label5
L_0144: Label6
L_0144: Label7
L_0144: Label8
L_0144: ldloc.0
L_0145: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0146: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0147: ldarg 0
L_014d: ldarg 2
L_0153: call Void Postfix(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], BattleTech.MechValidationLevel, BattleTech.MechDef)
L_0158: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0159: ret
DONE

### Patch BattleTech.MechValidationRules, Boolean ValidateMechCanBeFielded(BattleTech.SimGameState, BattleTech.MechDef)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Boolean)
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldc.i4.0
L_000d: br Label2
L_0012: Label1
L_0012: ldarg.0
L_0013: ldarg.1
L_0014: call Boolean ValidateSimGameMechNotInMaintenance(BattleTech.SimGameState, BattleTech.MechDef)
L_0019: ldarg.1
L_001a: call Boolean ValidateMechStructureSimple(BattleTech.MechDef)
L_001f: stloc.0
L_0020: ldarg.1
L_0021: call Boolean ValidateMechPosessesWeaponsSimple(BattleTech.MechDef)
L_0026: stloc.1
L_0027: ldloc.0
L_0028: and
L_0029: ldloc.1
L_002a: and
L_002b: Label2
L_002b: stloc 2 (System.Boolean)
L_002c: ldarg 1
L_0032: ldloca 2 (System.Boolean)
L_0034: call Void Postfix(BattleTech.MechDef, Boolean ByRef)
L_0039: ldloc 2 (System.Boolean)
L_003a: ret
DONE

### Patch BattleTech.UI.MechLabInventoryWidget, Void ApplyFiltering(Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.InventoryItemElement_NotListView
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: BattleTech.AmmoCategoryValue
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: br Label1
L_0007: Label49
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_000d: ldloc.0
L_000e: callvirt BattleTech.UI.InventoryItemElement_NotListView get_Item(Int32)
L_0013: stloc.1
L_0014: ldloc.1
L_0015: ldfld BattleTech.UI.ListElementController_BASE_NotListView controller
L_001a: brfalse Label2
L_001f: ldarg.0
L_0020: ldloc.1
L_0021: call Void ApplyControllerFiltering(BattleTech.UI.InventoryItemElement_NotListView)
L_0026: br Label3
L_002b: Label2
L_002b: ldc.i4.0
L_002c: stloc.2
L_002d: ldloc.1
L_002e: ldfld BattleTech.WeaponDef weaponDef
L_0033: brfalse Label4
L_0038: ldloc.1
L_0039: ldfld BattleTech.WeaponDef weaponDef
L_003e: callvirt BattleTech.WeaponCategory get_Category()
L_0043: stloc.3
L_0044: ldarg.0
L_0045: ldfld System.Boolean filteringWeapons
L_004a: brfalse Label5
L_004f: ldarg.0
L_0050: ldfld System.Boolean filterEnabledWeaponBallistic
L_0055: brfalse Label6
L_005a: ldloc.3
L_005b: ldc.i4.1
L_005c: bne.un Label7
L_0061: ldc.i4.1
L_0062: stloc.2
L_0063: br Label8
L_0068: Label5
L_0068: Label6
L_0068: Label7
L_0068: ldarg.0
L_0069: ldfld System.Boolean filteringWeapons
L_006e: brfalse Label9
L_0073: ldarg.0
L_0074: ldfld System.Boolean filterEnabledWeaponEnergy
L_0079: brfalse Label10
L_007e: ldloc.3
L_007f: ldc.i4.2
L_0080: bne.un Label11
L_0085: ldc.i4.1
L_0086: stloc.2
L_0087: br Label12
L_008c: Label9
L_008c: Label10
L_008c: Label11
L_008c: ldarg.0
L_008d: ldfld System.Boolean filteringWeapons
L_0092: brfalse Label13
L_0097: ldarg.0
L_0098: ldfld System.Boolean filterEnabledWeaponMissile
L_009d: brfalse Label14
L_00a2: ldloc.3
L_00a3: ldc.i4.3
L_00a4: bne.un Label15
L_00a9: ldc.i4.1
L_00aa: stloc.2
L_00ab: br Label16
L_00b0: Label13
L_00b0: Label14
L_00b0: Label15
L_00b0: ldarg.0
L_00b1: ldfld System.Boolean filteringWeapons
L_00b6: brfalse Label17
L_00bb: ldarg.0
L_00bc: ldfld System.Boolean filterEnabledWeaponSmall
L_00c1: brfalse Label18
L_00c6: ldloc.3
L_00c7: ldc.i4.4
L_00c8: bne.un Label19
L_00cd: ldc.i4.1
L_00ce: stloc.2
L_00cf: br Label20
L_00d4: Label4
L_00d4: ldloc.1
L_00d5: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00da: brfalse Label21
L_00df: ldloc.1
L_00e0: ldfld BattleTech.AmmunitionBoxDef ammoBoxDef
L_00e5: callvirt BattleTech.AmmunitionDef get_Ammo()
L_00ea: callvirt BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_00ef: stloc.s 4 (BattleTech.AmmoCategoryValue)
L_00f1: ldarg.0
L_00f2: ldfld System.Boolean filteringWeapons
L_00f7: brfalse Label22
L_00fc: ldarg.0
L_00fd: ldfld System.Boolean filterEnabledWeaponBallistic
L_0102: brfalse Label23
L_0107: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0109: callvirt Boolean get_IsBallistic()
L_010e: brfalse Label24
L_0113: ldc.i4.1
L_0114: stloc.2
L_0115: br Label25
L_011a: Label22
L_011a: Label23
L_011a: Label24
L_011a: ldarg.0
L_011b: ldfld System.Boolean filteringWeapons
L_0120: brfalse Label26
L_0125: ldarg.0
L_0126: ldfld System.Boolean filterEnabledWeaponEnergy
L_012b: brfalse Label27
L_0130: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0132: callvirt Boolean get_IsEnergy()
L_0137: brfalse Label28
L_013c: ldc.i4.1
L_013d: stloc.2
L_013e: br Label29
L_0143: Label26
L_0143: Label27
L_0143: Label28
L_0143: ldarg.0
L_0144: ldfld System.Boolean filteringWeapons
L_0149: brfalse Label30
L_014e: ldarg.0
L_014f: ldfld System.Boolean filterEnabledWeaponMissile
L_0154: brfalse Label31
L_0159: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_015b: callvirt Boolean get_IsMissile()
L_0160: brfalse Label32
L_0165: ldc.i4.1
L_0166: stloc.2
L_0167: br Label33
L_016c: Label30
L_016c: Label31
L_016c: Label32
L_016c: ldarg.0
L_016d: ldfld System.Boolean filteringWeapons
L_0172: brfalse Label34
L_0177: ldarg.0
L_0178: ldfld System.Boolean filterEnabledWeaponSmall
L_017d: brfalse Label35
L_0182: ldloc.s 4 (BattleTech.AmmoCategoryValue)
L_0184: callvirt Boolean get_IsSupport()
L_0189: brfalse Label36
L_018e: ldc.i4.1
L_018f: stloc.2
L_0190: Label25
L_0190: Label29
L_0190: Label33
L_0190: Label34
L_0190: Label35
L_0190: Label36
L_0190: ldarg.0
L_0191: ldfld System.Boolean filteringWeapons
L_0196: brtrue Label37
L_019b: ldc.i4.0
L_019c: stloc.2
L_019d: br Label38
L_01a2: Label21
L_01a2: ldloc.1
L_01a3: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01a8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01ad: ldc.i4.4
L_01ae: bne.un Label39
L_01b3: ldarg.0
L_01b4: ldfld System.Boolean filteringEquipment
L_01b9: brfalse Label40
L_01be: ldarg.0
L_01bf: ldfld System.Boolean filterEnabledJumpjet
L_01c4: brfalse Label41
L_01c9: ldc.i4.1
L_01ca: stloc.2
L_01cb: Label39
L_01cb: Label40
L_01cb: Label41
L_01cb: ldloc.1
L_01cc: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01d1: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01d6: ldc.i4.3
L_01d7: bne.un Label42
L_01dc: ldarg.0
L_01dd: ldfld System.Boolean filteringEquipment
L_01e2: brfalse Label43
L_01e7: ldarg.0
L_01e8: ldfld System.Boolean filterEnabledHeatsink
L_01ed: brfalse Label44
L_01f2: ldc.i4.1
L_01f3: stloc.2
L_01f4: Label42
L_01f4: Label43
L_01f4: Label44
L_01f4: ldloc.1
L_01f5: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01fa: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01ff: ldc.i4.5
L_0200: bne.un Label45
L_0205: ldarg.0
L_0206: ldfld System.Boolean filteringEquipment
L_020b: brfalse Label46
L_0210: ldarg.0
L_0211: ldfld System.Boolean filterEnabledUpgrade
L_0216: brfalse Label47
L_021b: ldc.i4.1
L_021c: stloc.2
L_021d: Label45
L_021d: Label46
L_021d: Label47
L_021d: ldarg.0
L_021e: ldfld System.Boolean filteringWeapons
L_0223: brfalse Label48
L_0228: ldc.i4.0
L_0229: stloc.2
L_022a: Label8
L_022a: Label12
L_022a: Label16
L_022a: Label17
L_022a: Label18
L_022a: Label19
L_022a: Label20
L_022a: Label37
L_022a: Label38
L_022a: Label48
L_022a: ldloc.1
L_022b: callvirt UnityEngine.GameObject get_gameObject()
L_0230: ldloc.2
L_0231: callvirt Void SetActive(Boolean)
L_0236: Label3
L_0236: ldloc.0
L_0237: ldc.i4.1
L_0238: add
L_0239: stloc.0
L_023a: Label1
L_023a: ldloc.0
L_023b: ldarg.0
L_023c: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_0241: callvirt Int32 get_Count()
L_0246: blt Label49
L_024b: ldarg.0
L_024c: ldc.r4 -1
L_0251: call Void RefreshJumpJetOptions(Single)
L_0256: ldarg.0
L_0257: call UnityEngine.GameObject get_gameObject()
L_025c: callvirt Boolean get_activeInHierarchy()
L_0261: ldarg.1
L_0262: and
L_0263: brfalse Label50
L_0268: ldarg.0
L_0269: ldarg.0
L_026a: call System.Collections.IEnumerator EndOfFrameScrollBarMovement()
L_026f: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_0274: pop
L_0275: Label50
L_0275: ldarg.0
L_0276: ldarg.0
L_0277: ldfld System.Single mechTonnage
L_027c: ldarg.0
L_027d: ldfld System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView] localInventory
L_0282: call Void Postfix(BattleTech.UI.MechLabInventoryWidget, Single, System.Collections.Generic.List`1[BattleTech.UI.InventoryItemElement_NotListView])
L_0287: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.String
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String
L_0000: Local var 9: BattleTech.ComponentType
L_0000: Local var 10: BattleTech.WeaponType
L_0000: Local var 11: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldnull
L_0001: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0003: ldstr "MechLab - {0} - {1}"
L_0008: ldc.i4.2
L_0009: newarr System.Object
L_000e: dup
L_000f: ldc.i4.0
L_0010: ldarg.3
L_0011: brtrue Label1
L_0016: ldstr "RemoveComponent"
L_001b: br Label2
L_0020: Label1
L_0020: ldstr "InstallComponent"
L_0025: Label2
L_0025: stelem.ref
L_0026: dup
L_0027: ldc.i4.1
L_0028: ldarg.0
L_0029: call System.String GenerateSimGameUID()
L_002e: stelem.ref
L_002f: call System.String T(System.String, System.Object[])
L_0034: stloc.0
L_0035: ldarg.2
L_0036: callvirt System.String get_SimGameUID()
L_003b: stloc.1
L_003c: ldloc.1
L_003d: call Boolean IsNullOrEmpty(System.String)
L_0042: brfalse Label3
L_0047: ldarg.0
L_0048: call System.String GenerateSimGameUID()
L_004d: stloc.1
L_004e: Label3
L_004e: ldarg.2
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt BattleTech.ComponentType get_ComponentType()
L_0059: stloc.s 9 (BattleTech.ComponentType)
L_005b: ldloc.s 9 (BattleTech.ComponentType)
L_005d: ldc.i4.1
L_005e: sub
L_005f: switch Labels4,5,6,7
L_0074: br Label8
L_0079: Label5
L_0079: ldarg.0
L_007a: call BattleTech.SimGameConstants get_Constants()
L_007f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0084: ldfld System.Int32 AmmoInstallTechPoints
L_0089: stloc.2
L_008a: ldarg.0
L_008b: call BattleTech.SimGameConstants get_Constants()
L_0090: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0095: ldfld System.Int32 AmmoInstallCost
L_009a: stloc.3
L_009b: br Label9
L_00a0: Label6
L_00a0: ldarg.0
L_00a1: call BattleTech.SimGameConstants get_Constants()
L_00a6: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00ab: ldfld System.Int32 HeatSinkInstallTechPoints
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: call BattleTech.SimGameConstants get_Constants()
L_00b7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00bc: ldfld System.Int32 HeatSinkInstallCost
L_00c1: stloc.3
L_00c2: br Label10
L_00c7: Label7
L_00c7: ldarg.0
L_00c8: call BattleTech.SimGameConstants get_Constants()
L_00cd: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00d2: ldfld System.Int32 JumpJetInstallTechPoints
L_00d7: stloc.2
L_00d8: ldarg.0
L_00d9: call BattleTech.SimGameConstants get_Constants()
L_00de: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00e3: ldfld System.Int32 JumpJetInstallCost
L_00e8: stloc.3
L_00e9: br Label11
L_00ee: Label4
L_00ee: ldarg.2
L_00ef: callvirt BattleTech.MechComponentDef get_Def()
L_00f4: castclass BattleTech.WeaponDef
L_00f9: callvirt BattleTech.WeaponType get_Type()
L_00fe: stloc.s 10 (BattleTech.WeaponType)
L_0100: ldloc.s 10 (BattleTech.WeaponType)
L_0102: ldc.i4.1
L_0103: sub
L_0104: switch Labels12,13,14,15,16,17,18,19
L_0129: br Label20
L_012e: Label12
L_012e: Label13
L_012e: Label19
L_012e: ldarg.0
L_012f: call BattleTech.SimGameConstants get_Constants()
L_0134: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0139: ldfld System.Int32 BallisticInstallTechPoints
L_013e: stloc.2
L_013f: ldarg.0
L_0140: call BattleTech.SimGameConstants get_Constants()
L_0145: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_014a: ldfld System.Int32 BallisticInstallCost
L_014f: stloc.3
L_0150: br Label21
L_0155: Label16
L_0155: Label17
L_0155: ldarg.0
L_0156: call BattleTech.SimGameConstants get_Constants()
L_015b: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0160: ldfld System.Int32 MissileInstallTechPoints
L_0165: stloc.2
L_0166: ldarg.0
L_0167: call BattleTech.SimGameConstants get_Constants()
L_016c: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0171: ldfld System.Int32 MissileInstallCost
L_0176: stloc.3
L_0177: br Label22
L_017c: Label14
L_017c: Label15
L_017c: ldarg.0
L_017d: call BattleTech.SimGameConstants get_Constants()
L_0182: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0187: ldfld System.Int32 EnergyInstallTechPoints
L_018c: stloc.2
L_018d: ldarg.0
L_018e: call BattleTech.SimGameConstants get_Constants()
L_0193: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0198: ldfld System.Int32 EnergyInstallCost
L_019d: stloc.3
L_019e: br Label23
L_01a3: Label18
L_01a3: ldarg.0
L_01a4: call BattleTech.SimGameConstants get_Constants()
L_01a9: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01ae: ldfld System.Int32 APInstallTechPoints
L_01b3: stloc.2
L_01b4: ldarg.0
L_01b5: call BattleTech.SimGameConstants get_Constants()
L_01ba: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01bf: ldfld System.Int32 APInstallCost
L_01c4: stloc.3
L_01c5: br Label24
L_01ca: Label20
L_01ca: ldarg.0
L_01cb: call BattleTech.SimGameConstants get_Constants()
L_01d0: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01d5: ldfld System.Int32 OtherInstallTechPoints
L_01da: stloc.2
L_01db: ldarg.0
L_01dc: call BattleTech.SimGameConstants get_Constants()
L_01e1: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01e6: ldfld System.Int32 OtherInstallCost
L_01eb: stloc.3
L_01ec: br Label25
L_01f1: Label8
L_01f1: ldarg.0
L_01f2: call BattleTech.SimGameConstants get_Constants()
L_01f7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01fc: ldfld System.Int32 OtherInstallTechPoints
L_0201: stloc.2
L_0202: ldarg.0
L_0203: call BattleTech.SimGameConstants get_Constants()
L_0208: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_020d: ldfld System.Int32 OtherInstallCost
L_0212: stloc.3
L_0213: Label9
L_0213: Label10
L_0213: Label11
L_0213: Label21
L_0213: Label22
L_0213: Label23
L_0213: Label24
L_0213: Label25
L_0213: ldarg.3
L_0214: brtrue Label26
L_0219: ldarg.0
L_021a: call BattleTech.SimGameConstants get_Constants()
L_021f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0224: ldfld System.Int32 UninstallTechPoints
L_0229: stloc.2
L_022a: Label26
L_022a: ldloc.2
L_022b: ldarg.2
L_022c: callvirt BattleTech.MechComponentDef get_Def()
L_0231: callvirt Int32 get_InventorySize()
L_0236: mul
L_0237: stloc.s 4 (System.Int32)
L_0239: ldloc.3
L_023a: ldarg.2
L_023b: callvirt BattleTech.MechComponentDef get_Def()
L_0240: callvirt Int32 get_InventorySize()
L_0245: mul
L_0246: stloc.s 5 (System.Int32)
L_0248: ldstr ""
L_024d: stloc.s 6 (System.String)
L_024f: ldarg.2
L_0250: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0255: ldc.i4.4
L_0256: bne.un Label27
L_025b: ldstr " Destroyed"
L_0260: stloc.s 6 (System.String)
L_0262: ldc.i4.0
L_0263: stloc.s 5 (System.Int32)
L_0265: Label27
L_0265: ldarg.3
L_0266: brtrue Label28
L_026b: ldstr "Remove"
L_0270: call System.String T(System.String)
L_0275: br Label29
L_027a: Label28
L_027a: ldstr "Install"
L_027f: call System.String T(System.String)
L_0284: Label29
L_0284: stloc.s 7 (System.String)
L_0286: ldarg.3
L_0287: brtrue Label30
L_028c: ldstr ""
L_0291: br Label31
L_0296: Label30
L_0296: ldarga.s 3
L_0298: constrained. BattleTech.ChassisLocations
L_029e: callvirt System.String ToString()
L_02a3: Label31
L_02a3: stloc.s 8 (System.String)
L_02a5: ldloc.0
L_02a6: ldstr "{0}{1} {2} Component - {3}"
L_02ab: ldc.i4.4
L_02ac: newarr System.Object
L_02b1: dup
L_02b2: ldc.i4.0
L_02b3: ldloc.s 7 (System.String)
L_02b5: stelem.ref
L_02b6: dup
L_02b7: ldc.i4.1
L_02b8: ldloc.s 6 (System.String)
L_02ba: stelem.ref
L_02bb: dup
L_02bc: ldc.i4.2
L_02bd: ldloc.s 8 (System.String)
L_02bf: stelem.ref
L_02c0: dup
L_02c1: ldc.i4.3
L_02c2: ldarg.2
L_02c3: callvirt BattleTech.MechComponentDef get_Def()
L_02c8: callvirt BattleTech.DescriptionDef get_Description()
L_02cd: callvirt System.String get_Name()
L_02d2: stelem.ref
L_02d3: call System.String T(System.String, System.Object[])
L_02d8: ldarg.1
L_02d9: ldarg.2
L_02da: ldloc.s 4 (System.Int32)
L_02dc: ldloc.1
L_02dd: ldarg.3
L_02de: ldarg.s 4
L_02e0: ldarg.2
L_02e1: callvirt Int32 get_HardpointSlot()
L_02e6: ldloc.s 5 (System.Int32)
L_02e8: ldstr ""
L_02ed: newobj Void .ctor(String, String, String, MechComponentRef, Int32, String, ChassisLocations, ChassisLocations, Int32, Int32, String)
L_02f2: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_02f4: ldarg.0
L_02f5: ldarg 1
L_02fb: ldarg 2
L_0301: ldarg 3
L_0307: ldarg 4
L_030d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_030f: call Void Postfix(BattleTech.SimGameState, System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, BattleTech.WorkOrderEntry_InstallComponent)
L_0314: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0316: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_RepairComponent CreateComponentRepairWorkOrder(BattleTech.MechComponentRef, Boolean)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.WorkOrderEntry_RepairComponent
L_0000: ldnull
L_0001: stloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_0002: ldstr "MechBay - RepairComponent - {0}"
L_0007: ldc.i4.1
L_0008: newarr System.Object
L_000d: dup
L_000e: ldc.i4.0
L_000f: ldarg.0
L_0010: call System.String GenerateSimGameUID()
L_0015: stelem.ref
L_0016: call System.String T(System.String, System.Object[])
L_001b: ldarg.1
L_001c: callvirt System.String get_SimGameUID()
L_0021: stloc.0
L_0022: ldloc.0
L_0023: call Boolean IsNullOrEmpty(System.String)
L_0028: brfalse Label1
L_002d: ldarg.0
L_002e: call System.String GenerateSimGameUID()
L_0033: stloc.0
L_0034: Label1
L_0034: ldarg.0
L_0035: call BattleTech.SimGameConstants get_Constants()
L_003a: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_003f: ldfld System.Int32 ComponentRepairTechPoints
L_0044: ldarg.1
L_0045: callvirt BattleTech.MechComponentDef get_Def()
L_004a: callvirt Int32 get_InventorySize()
L_004f: mul
L_0050: stloc.1
L_0051: ldarg.0
L_0052: call BattleTech.SimGameConstants get_Constants()
L_0057: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_005c: ldfld System.Int32 ComponentRepairCost
L_0061: ldarg.1
L_0062: callvirt BattleTech.MechComponentDef get_Def()
L_0067: callvirt Int32 get_InventorySize()
L_006c: mul
L_006d: stloc.2
L_006e: ldarg.1
L_006f: callvirt Boolean get_IsFixed()
L_0074: brfalse Label2
L_0079: ldc.i4.0
L_007a: stloc.1
L_007b: ldc.i4.0
L_007c: stloc.2
L_007d: Label2
L_007d: ldstr "Repair Component - {0}"
L_0082: ldc.i4.1
L_0083: newarr System.Object
L_0088: dup
L_0089: ldc.i4.0
L_008a: ldarg.1
L_008b: callvirt BattleTech.MechComponentDef get_Def()
L_0090: callvirt BattleTech.DescriptionDef get_Description()
L_0095: callvirt System.String get_Name()
L_009a: stelem.ref
L_009b: call System.String T(System.String, System.Object[])
L_00a0: ldloc.1
L_00a1: ldarg.1
L_00a2: callvirt System.String get_ComponentDefID()
L_00a7: ldarg.1
L_00a8: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00ad: ldloc.0
L_00ae: ldarg.1
L_00af: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00b4: ldloc.2
L_00b5: ldstr ""
L_00ba: newobj Void .ctor(String, String, Int32, String, ComponentType, String, ComponentDamageLevel, Int32, String)
L_00bf: stloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00c0: ldarg.0
L_00c1: ldarg 1
L_00c7: ldarg 2
L_00cd: ldloca 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00cf: call Void Postfix(BattleTech.SimGameState, BattleTech.MechComponentRef, Boolean, BattleTech.WorkOrderEntry_RepairComponent ByRef)
L_00d4: ldloc 3 (BattleTech.WorkOrderEntry_RepairComponent)
L_00d5: ret
DONE

### Patch BattleTech.SimGameState, Void Rehydrate(BattleTech.Save.GameInstanceSave)
L_0000: Local var 0: BattleTech.SimGameState+<>c__DisplayClass1122_0
L_0000: Local var 1: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.Flashpoint
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.String
L_0000: Local var 7: BattleTech.SimGameState+<>c__DisplayClass1122_1
L_0000: Local var 8: BattleTech.StarSystem
L_0000: Local var 9: System.Collections.Generic.List`1+Enumerator[[BattleTech.StarSystem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 10: BattleTech.StarSystem
L_0000: Local var 11: System.String
L_0000: Local var 12: BattleTech.ShipModuleUpgrade
L_0000: Local var 13: System.Collections.Generic.List`1+Enumerator[[BattleTech.Save.ContractData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 14: BattleTech.SimGameState+AddContractData
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Collections.Generic.List`1+Enumerator[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 18: System.Int32
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.String
L_0000: Local var 21: System.String[]
L_0000: Local var 22: System.Int32
L_0000: Local var 23: System.String
L_0000: Local var 24: BattleTech.Faction
L_0000: Local var 25: System.String
L_0000: Local var 26: System.String
L_0000: Local var 27: System.Collections.Generic.List`1+Enumerator[[BattleTech.Flashpoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 28: BattleTech.Flashpoint
L_0000: Local var 29: System.Int32
L_0000: Local var 30: System.Int32
L_0000: Local var 31: BattleTech.Faction
L_0000: Local var 32: System.Int32
L_0000: Local var 33: BattleTech.Faction
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldarg.0
L_0008: stfld BattleTech.SimGameState <>4__this
L_000d: ldloc.0
L_000e: ldarg.1
L_000f: callvirt BattleTech.Save.SimGameSave get_SimGameSave()
L_0014: stfld BattleTech.Save.SimGameSave save
L_0019: ldloc.0
L_001a: ldarg.1
L_001b: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0020: stfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0025: ldloc.0
L_0026: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_002b: callvirt Void ResetOperateOnAllForAll()
L_0030: ldarg.0
L_0031: ldloc.0
L_0032: ldfld BattleTech.Save.SimGameSave save
L_0037: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_003c: call Void set_SimGameMode(SimGameType)
L_0041: ldarg.0
L_0042: call SimGameType get_SimGameMode()
L_0047: brtrue Label1
L_004c: ldarg.0
L_004d: ldc.i4.1
L_004e: call Void set_SimGameMode(SimGameType)
L_0053: Label1
L_0053: ldarg.0
L_0054: ldloc.0
L_0055: ldfld BattleTech.Save.SimGameSave save
L_005a: callvirt BattleTech.Save.SaveTravelData GetSaveTravelData()
L_005f: stfld BattleTech.Save.SaveTravelData savedTravelData
L_0064: ldloc.0
L_0065: ldfld BattleTech.Save.SimGameSave save
L_006a: callvirt BattleTech.SimGameContext get_SimGameContext()
L_006f: ldarg.0
L_0070: ldloc.0
L_0071: ldfld BattleTech.Save.SimGameSave save
L_0076: ldloc.0
L_0077: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_007c: callvirt Void Rehydrate(BattleTech.SimGameState, BattleTech.Save.SimGameSave, BattleTech.Save.Test.SerializableReferenceContainer)
L_0081: ldarg.0
L_0082: ldarg.0
L_0083: call BattleTech.GameInstance get_BattleTechGame()
L_0088: callvirt BattleTech.GameContext get_GlobalGameContext()
L_008d: newobj Void .ctor(GameContext)
L_0092: stfld BattleTech.SimGameContext Context
L_0097: ldarg.0
L_0098: ldfld BattleTech.SimGameContext Context
L_009d: ldc.i4.s 13
L_009f: ldarg.0
L_00a0: callvirt Void SetObject(BattleTech.GameContextObjectTagEnum, System.Object)
L_00a5: ldarg.0
L_00a6: ldfld BattleTech.SimGameContext Context
L_00ab: ldloc.0
L_00ac: ldfld BattleTech.Save.SimGameSave save
L_00b1: callvirt BattleTech.SimGameContext get_SimGameContext()
L_00b6: callvirt Void MemberwiseCopyFrom(BattleTech.GameContext)
L_00bb: ldarg.0
L_00bc: ldloc.0
L_00bd: ldfld BattleTech.Save.SimGameSave save
L_00c2: callvirt System.String get_CampaignStartDate()
L_00c7: call Void SetCampaignStartDate(System.String)
L_00cc: ldarg.0
L_00cd: ldloc.0
L_00ce: ldfld BattleTech.Save.SimGameSave save
L_00d3: callvirt Int32 get_Day()
L_00d8: call Void set_DaysPassed(Int32)
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.Save.SimGameSave save
L_00e4: callvirt Int32 get_DaysRemainingInQuarter()
L_00e9: call Void set_DayRemainingInQuarter(Int32)
L_00ee: ldarg.0
L_00ef: ldloc.0
L_00f0: ldfld BattleTech.Save.SimGameSave save
L_00f5: callvirt Int32 get_ProRatedRefund()
L_00fa: stfld System.Int32 ProRateRefund
L_00ff: ldarg.0
L_0100: ldloc.0
L_0101: ldfld BattleTech.Save.SimGameSave save
L_0106: callvirt System.Collections.Generic.List`1[System.String] get_ConsumedMilestones()
L_010b: stfld System.Collections.Generic.List`1[System.String] ConsumedMilestones
L_0110: ldarg.0
L_0111: ldloc.0
L_0112: ldfld BattleTech.Save.SimGameSave save
L_0117: callvirt BattleTech.HeraldryDef get_Heraldry()
L_011c: stfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_0121: ldarg.0
L_0122: ldfld BattleTech.HeraldryDef Player1sMercUnitHeraldryDef
L_0127: ldarg.0
L_0128: call BattleTech.Data.DataManager get_DataManager()
L_012d: ldnull
L_012e: callvirt Void RequestResources(BattleTech.Data.DataManager, System.Action)
L_0133: ldarg.0
L_0134: call NetworkRandom get_NetworkRandom()
L_0139: ldloc.0
L_013a: ldfld BattleTech.Save.SimGameSave save
L_013f: callvirt Int32 get_Seed()
L_0144: ldloc.0
L_0145: ldfld BattleTech.Save.SimGameSave save
L_014a: callvirt Int32 get_RandomCalls()
L_014f: callvirt Void Synchronize(Int32, Int32)
L_0154: ldarg.0
L_0155: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_015a: brtrue Label2
L_015f: ldarg.0
L_0160: newobj Void .ctor()
L_0165: stfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_016a: br Label3
L_016f: Label2
L_016f: ldarg.0
L_0170: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
L_0175: callvirt Void Clear()
L_017a: Label3
L_017a: ldarg.0
L_017b: ldloc.0
L_017c: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0181: ldstr "StarSystems"
L_0186: callvirt System.Collections.Generic.List`1[BattleTech.StarSystem] GetItemList[StarSystem](System.String)
L_018b: stfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0190: ldarg.0
L_0191: ldloc.0
L_0192: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0197: ldstr "TargetSystem"
L_019c: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01a1: stfld BattleTech.StarSystem TargetSystem
L_01a6: ldarg.0
L_01a7: ldloc.0
L_01a8: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01ad: ldstr "NearestToTarget"
L_01b2: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01b7: stfld BattleTech.StarSystem NearestToTarget
L_01bc: ldarg.0
L_01bd: ldloc.0
L_01be: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01c3: ldstr "CurSystem"
L_01c8: callvirt BattleTech.StarSystem GetItem[StarSystem](System.String)
L_01cd: call Void set_CurSystem(BattleTech.StarSystem)
L_01d2: ldloc.0
L_01d3: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_01d8: ldloc.0
L_01d9: ldftn Void <Rehydrate>b__0(BattleTech.StarSystem)
L_01df: newobj Void .ctor(Object, IntPtr)
L_01e4: callvirt Void OperateOnAllSourceObjects[StarSystem](System.Action`1[BattleTech.StarSystem])
L_01e9: ldarg.0
L_01ea: call BattleTech.Data.DataManager get_DataManager()
L_01ef: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.StarSystemDef] get_SystemDefs()
L_01f4: callvirt System.Collections.Generic.IEnumerable`1[System.String] get_Keys()
L_01f9: newobj Void .ctor(IEnumerable`1)
L_01fe: stloc.1
L_01ff: ldarg.0
L_0200: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0205: callvirt Int32 get_Count()
L_020a: ldc.i4.1
L_020b: sub
L_020c: stloc.s 4 (System.Int32)
L_020e: br Label4
L_0213: Label7
L_0213: ldarg.0
L_0214: call SimGameType get_SimGameMode()
L_0219: ldc.i4.2
L_021a: bne.un Label5
L_021f: ldarg.0
L_0220: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0225: ldloc.s 4 (System.Int32)
L_0227: callvirt BattleTech.StarSystem get_Item(Int32)
L_022c: callvirt BattleTech.StarSystemDef get_Def()
L_0231: callvirt System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameType] get_StartingSystemModes()
L_0236: ldarg.0
L_0237: call SimGameType get_SimGameMode()
L_023c: callvirt Boolean Contains(SimGameType)
L_0241: brtrue Label6
L_0246: ldarg.0
L_0247: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_024c: ldloc.s 4 (System.Int32)
L_024e: callvirt Void RemoveAt(Int32)
L_0253: Label5
L_0253: Label6
L_0253: ldloc.s 4 (System.Int32)
L_0255: ldc.i4.1
L_0256: sub
L_0257: stloc.s 4 (System.Int32)
L_0259: Label4
L_0259: ldloc.s 4 (System.Int32)
L_025b: ldc.i4.0
L_025c: bge Label7
L_0261: ldloc.1
L_0262: callvirt Enumerator GetEnumerator()
L_0267: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0269: br Label8
	L_026e: Label11
	L_026e: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0270: call System.String get_Current()
	L_0275: stloc.s 6 (System.String)
	L_0277: newobj Void .ctor()
	L_027c: stloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_027e: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_0280: ldarg.0
	L_0281: call BattleTech.Data.DataManager get_DataManager()
	L_0286: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.StarSystemDef] get_SystemDefs()
	L_028b: ldloc.s 6 (System.String)
	L_028d: callvirt BattleTech.StarSystemDef Get(System.String)
	L_0292: stfld BattleTech.StarSystemDef newSystemDef
	L_0297: ldarg.0
	L_0298: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
	L_029d: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_029f: ldftn Boolean <Rehydrate>b__8(BattleTech.StarSystem)
	L_02a5: newobj Void .ctor(Object, IntPtr)
	L_02aa: callvirt BattleTech.StarSystem Find(System.Predicate`1[BattleTech.StarSystem])
	L_02af: brtrue Label9
	L_02b4: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_02b6: ldfld BattleTech.StarSystemDef newSystemDef
	L_02bb: callvirt System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameType] get_StartingSystemModes()
	L_02c0: ldarg.0
	L_02c1: call SimGameType get_SimGameMode()
	L_02c6: callvirt Boolean Contains(SimGameType)
	L_02cb: brfalse Label10
	L_02d0: ldloc.s 7 (BattleTech.SimGameState+<>c__DisplayClass1122_1)
	L_02d2: ldfld BattleTech.StarSystemDef newSystemDef
	L_02d7: ldarg.0
	L_02d8: newobj Void .ctor(StarSystemDef, SimGameState)
	L_02dd: stloc.s 8 (BattleTech.StarSystem)
	L_02df: ldarg.0
	L_02e0: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
	L_02e5: ldloc.s 8 (BattleTech.StarSystem)
	L_02e7: callvirt Void Add(BattleTech.StarSystem)
	L_02ec: Label8
	L_02ec: Label9
	L_02ec: Label10
	L_02ec: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_02ee: call Boolean MoveNext()
	L_02f3: brtrue Label11
	L_02f8: leave Label12
	L_02fd: leave (autogenerated)
} // end try
.finally
{
	L_0302: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0304: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_030a: callvirt Void Dispose()
	L_030f: endfinally
	L_0310: leave (autogenerated)
} // end handler
L_0311: Label12
L_0311: ldarg.0
L_0312: call System.Collections.Generic.List`1[BattleTech.StarSystem] get_StarSystems()
L_0317: callvirt Enumerator GetEnumerator()
L_031c: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
.try
{
	L_031e: br Label13
	L_0323: Label14
	L_0323: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0325: call BattleTech.StarSystem get_Current()
	L_032a: stloc.s 10 (BattleTech.StarSystem)
	L_032c: ldarg.0
	L_032d: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
	L_0332: ldloc.s 10 (BattleTech.StarSystem)
	L_0334: callvirt System.String get_ID()
	L_0339: ldloc.s 10 (BattleTech.StarSystem)
	L_033b: callvirt Void Add(System.String, BattleTech.StarSystem)
	L_0340: Label13
	L_0340: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0342: call Boolean MoveNext()
	L_0347: brtrue Label14
	L_034c: leave Label15
	L_0351: leave (autogenerated)
} // end try
.finally
{
	L_0356: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0358: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem]
	L_035e: callvirt Void Dispose()
	L_0363: endfinally
	L_0364: leave (autogenerated)
} // end handler
L_0365: Label15
L_0365: ldloc.0
L_0366: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_036b: ldloc.0
L_036c: ldftn Void <Rehydrate>b__1(BattleTech.Contract)
L_0372: newobj Void .ctor(Object, IntPtr)
L_0377: callvirt Void OperateOnAllSourceObjects[Contract](System.Action`1[BattleTech.Contract])
L_037c: ldarg.0
L_037d: ldfld System.Collections.Generic.List`1[BattleTech.StarSystem] starSystems
L_0382: callvirt Enumerator GetEnumerator()
L_0387: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
.try
{
	L_0389: br Label16
	L_038e: Label17
	L_038e: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_0390: call BattleTech.StarSystem get_Current()
	L_0395: ldarg.0
	L_0396: ldfld System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem] starDict
	L_039b: callvirt Void SetContractTargets(System.Collections.Generic.Dictionary`2[System.String,BattleTech.StarSystem])
	L_03a0: Label16
	L_03a0: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_03a2: call Boolean MoveNext()
	L_03a7: brtrue Label17
	L_03ac: leave Label18
	L_03b1: leave (autogenerated)
} // end try
.finally
{
	L_03b6: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem])
	L_03b8: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystem]
	L_03be: callvirt Void Dispose()
	L_03c3: endfinally
	L_03c4: leave (autogenerated)
} // end handler
L_03c5: Label18
L_03c5: ldarg.0
L_03c6: ldloc.0
L_03c7: ldfld BattleTech.Save.SimGameSave save
L_03cc: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_03d1: ldstr "ActiveMechs"
L_03d6: callvirt System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] GetItemDictionary[Int32,MechDef](System.String)
L_03db: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ActiveMechs
L_03e0: ldarg.0
L_03e1: ldloc.0
L_03e2: ldfld BattleTech.Save.SimGameSave save
L_03e7: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_03ec: ldstr "ReadyingMechs"
L_03f1: callvirt System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] GetItemDictionary[Int32,MechDef](System.String)
L_03f6: stfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_03fb: ldarg.0
L_03fc: ldloc.0
L_03fd: ldfld BattleTech.Save.SimGameSave save
L_0402: callvirt System.Collections.Generic.List`1[System.String] get_LastUsedMechs()
L_0407: stfld System.Collections.Generic.List`1[System.String] LastUsedMechs
L_040c: ldarg.0
L_040d: ldloc.0
L_040e: ldfld BattleTech.Save.SimGameSave save
L_0413: callvirt System.Collections.Generic.List`1[System.String] get_LastUsedPilots()
L_0418: stfld System.Collections.Generic.List`1[System.String] LastUsedPilots
L_041d: ldarg.0
L_041e: ldloc.0
L_041f: ldfld BattleTech.Save.SimGameSave save
L_0424: callvirt System.Collections.Generic.List`1[BattleTech.TechDef] get_MechTechs()
L_0429: call Void set_MechTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_042e: ldarg.0
L_042f: ldloc.0
L_0430: ldfld BattleTech.Save.SimGameSave save
L_0435: callvirt System.Collections.Generic.List`1[BattleTech.TechDef] get_MedTechs()
L_043a: call Void set_MedTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_043f: ldloc.0
L_0440: ldfld BattleTech.Save.SimGameSave save
L_0445: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_044a: ldsfld System.Action`1[BattleTech.Pilot] <>9__1122_2
L_044f: dup
L_0450: brtrue Label19
L_0455: pop
L_0456: ldsfld BattleTech.SimGameState+<>c <>9
L_045b: ldftn Void <Rehydrate>b__1122_2(BattleTech.Pilot)
L_0461: newobj Void .ctor(Object, IntPtr)
L_0466: dup
L_0467: stsfld System.Action`1[BattleTech.Pilot] <>9__1122_2
L_046c: Label19
L_046c: callvirt Void OperateOnAllSourceObjects[Pilot](System.Action`1[BattleTech.Pilot])
L_0471: ldarg.0
L_0472: ldloc.0
L_0473: ldfld BattleTech.Save.SimGameSave save
L_0478: callvirt BattleTech.Save.WeightedPilotListSave get_Graveyard()
L_047d: ldstr "Graveyard"
L_0482: callvirt BattleTech.WeightedList`1[BattleTech.Pilot] GetList(System.String)
L_0487: stfld BattleTech.WeightedList`1[BattleTech.Pilot] Graveyard
L_048c: ldarg.0
L_048d: ldloc.0
L_048e: ldfld BattleTech.Save.SimGameSave save
L_0493: callvirt BattleTech.Save.WeightedPilotListSave get_PilotRoster()
L_0498: ldstr "PilotRoster"
L_049d: callvirt BattleTech.WeightedList`1[BattleTech.Pilot] GetList(System.String)
L_04a2: stfld BattleTech.WeightedList`1[BattleTech.Pilot] PilotRoster
L_04a7: ldarg.0
L_04a8: ldloc.0
L_04a9: ldfld BattleTech.Save.SimGameSave save
L_04ae: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_04b3: ldstr "Commander"
L_04b8: callvirt BattleTech.Pilot GetItem[Pilot](System.String)
L_04bd: stfld BattleTech.Pilot commander
L_04c2: ldarg.0
L_04c3: ldloc.0
L_04c4: ldfld BattleTech.Save.SimGameSave save
L_04c9: callvirt HBS.Collections.TagSet get_CompanyTags()
L_04ce: stfld HBS.Collections.TagSet companyTags
L_04d3: ldarg.0
L_04d4: ldloc.0
L_04d5: ldfld BattleTech.Save.SimGameSave save
L_04da: callvirt BattleTech.StatCollection get_CompanyStats()
L_04df: stfld BattleTech.StatCollection companyStats
L_04e4: ldarg.0
L_04e5: call Void InitCompanyStatValidators()
L_04ea: ldarg.0
L_04eb: ldloc.0
L_04ec: ldfld BattleTech.Save.SimGameSave save
L_04f1: callvirt System.Collections.Generic.List`1[System.String] get_PurchasedShipUpgrades()
L_04f6: stfld System.Collections.Generic.List`1[System.String] purchasedArgoUpgrades
L_04fb: ldarg.0
L_04fc: ldfld System.Collections.Generic.List`1[System.String] purchasedArgoUpgrades
L_0501: callvirt Enumerator GetEnumerator()
L_0506: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0508: br Label20
	L_050d: Label21
	L_050d: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_050f: call System.String get_Current()
	L_0514: stloc.s 11 (System.String)
	L_0516: ldarg.0
	L_0517: call BattleTech.Data.DataManager get_DataManager()
	L_051c: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.ShipModuleUpgrade] get_ShipUpgradeDefs()
	L_0521: ldloc.s 11 (System.String)
	L_0523: callvirt BattleTech.ShipModuleUpgrade Get(System.String)
	L_0528: stloc.s 12 (BattleTech.ShipModuleUpgrade)
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.ShipModuleUpgrade] shipUpgrades
	L_0530: ldloc.s 12 (BattleTech.ShipModuleUpgrade)
	L_0532: callvirt Void Add(BattleTech.ShipModuleUpgrade)
	L_0537: Label20
	L_0537: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0539: call Boolean MoveNext()
	L_053e: brtrue Label21
	L_0543: leave Label22
	L_0548: leave (autogenerated)
} // end try
.finally
{
	L_054d: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_054f: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0555: callvirt Void Dispose()
	L_055a: endfinally
	L_055b: leave (autogenerated)
} // end handler
L_055c: Label22
L_055c: ldloc.0
L_055d: ldfld BattleTech.Save.SimGameSave save
L_0562: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0567: ldloc.0
L_0568: ldftn Void <Rehydrate>b__3(BattleTech.MechDef)
L_056e: newobj Void .ctor(Object, IntPtr)
L_0573: callvirt Void OperateOnAllSourceObjects[MechDef](System.Action`1[BattleTech.MechDef])
L_0578: ldarg.0
L_0579: ldloc.0
L_057a: ldfld BattleTech.Save.SimGameSave save
L_057f: callvirt BattleTech.DropshipType get_CurDropship()
L_0584: call Void set_CurDropship(BattleTech.DropshipType)
L_0589: ldarg.0
L_058a: ldloc.0
L_058b: ldfld BattleTech.Save.SimGameSave save
L_0590: callvirt System.Collections.Generic.List`1[BattleTech.Save.ContractData] get_ContractBits()
L_0595: stfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_059a: ldarg.0
L_059b: ldfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_05a0: brfalse Label23
L_05a5: ldarg.0
L_05a6: ldfld System.Collections.Generic.List`1[BattleTech.Save.ContractData] contractBits
L_05ab: callvirt Enumerator GetEnumerator()
L_05b0: stloc.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
.try
{
	L_05b2: br Label24
	L_05b7: Label25
	L_05b7: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05b9: call BattleTech.Save.ContractData get_Current()
	L_05be: newobj Void .ctor(ContractData)
	L_05c3: stloc.s 14 (BattleTech.SimGameState+AddContractData)
	L_05c5: ldarg.0
	L_05c6: ldloc.s 14 (BattleTech.SimGameState+AddContractData)
	L_05c8: call BattleTech.Contract AddContract(AddContractData)
	L_05cd: pop
	L_05ce: Label24
	L_05ce: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05d0: call Boolean MoveNext()
	L_05d5: brtrue Label25
	L_05da: leave Label26
	L_05df: leave (autogenerated)
} // end try
.finally
{
	L_05e4: ldloca.s 13 (System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData])
	L_05e6: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Save.ContractData]
	L_05ec: callvirt Void Dispose()
	L_05f1: endfinally
	L_05f2: leave (autogenerated)
} // end handler
L_05f3: Label23
L_05f3: Label26
L_05f3: ldarg.0
L_05f4: ldloc.0
L_05f5: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_05fa: ldstr "TemporaryResultTracker"
L_05ff: callvirt System.Collections.Generic.List`1[BattleTech.TemporarySimGameResult] GetItemList[TemporarySimGameResult](System.String)
L_0604: stfld System.Collections.Generic.List`1[BattleTech.TemporarySimGameResult] TemporaryResultTracker
L_0609: ldloc.0
L_060a: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_060f: ldloc.0
L_0610: ldftn Void <Rehydrate>b__4(BattleTech.TemporarySimGameResult)
L_0616: newobj Void .ctor(Object, IntPtr)
L_061b: callvirt Void OperateOnAllSourceObjects[TemporarySimGameResult](System.Action`1[BattleTech.TemporarySimGameResult])
L_0620: ldloc.0
L_0621: ldfld BattleTech.Save.SimGameSave save
L_0626: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_062b: ldloc.0
L_062c: ldftn Void <Rehydrate>b__5(BattleTech.WorkOrderEntry)
L_0632: newobj Void .ctor(Object, IntPtr)
L_0637: callvirt Void OperateOnAllSourceObjects[WorkOrderEntry](System.Action`1[BattleTech.WorkOrderEntry])
L_063c: ldloc.0
L_063d: ldfld BattleTech.Save.SimGameSave save
L_0642: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0647: ldloc.0
L_0648: ldftn Void <Rehydrate>b__6(BattleTech.MechComponentRef)
L_064e: newobj Void .ctor(Object, IntPtr)
L_0653: callvirt Void OperateOnAllSourceObjects[MechComponentRef](System.Action`1[BattleTech.MechComponentRef])
L_0658: ldarg.0
L_0659: ldloc.0
L_065a: ldfld BattleTech.Save.SimGameSave save
L_065f: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0664: ldstr "MechLabQueue"
L_0669: callvirt System.Collections.Generic.List`1[BattleTech.WorkOrderEntry] GetItemList[WorkOrderEntry](System.String)
L_066e: call Void set_MechLabQueue(System.Collections.Generic.List`1[BattleTech.WorkOrderEntry])
L_0673: ldarg.0
L_0674: ldloc.0
L_0675: ldfld BattleTech.Save.SimGameSave save
L_067a: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_067f: ldstr "MedBayQueue"
L_0684: callvirt BattleTech.WorkOrderEntry_MedBayGeneric GetItem[WorkOrderEntry_MedBayGeneric](System.String)
L_0689: stfld BattleTech.WorkOrderEntry_MedBayGeneric MedBayQueue
L_068e: ldarg.0
L_068f: ldloc.0
L_0690: ldfld BattleTech.Save.SimGameSave save
L_0695: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_069a: ldstr "TravelOrder"
L_069f: callvirt BattleTech.WorkOrderEntry_TravelGeneric GetItem[WorkOrderEntry_TravelGeneric](System.String)
L_06a4: call Void set_TravelOrder(BattleTech.WorkOrderEntry_TravelGeneric)
L_06a9: ldarg.0
L_06aa: ldloc.0
L_06ab: ldfld BattleTech.Save.SimGameSave save
L_06b0: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_06b5: ldstr "WorkOrderComponents"
L_06ba: callvirt System.Collections.Generic.List`1[BattleTech.MechComponentRef] GetItemList[MechComponentRef](System.String)
L_06bf: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] WorkOrderComponents
L_06c4: ldarg.0
L_06c5: ldloc.0
L_06c6: ldfld BattleTech.Save.SimGameSave save
L_06cb: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_06d0: ldstr "CurrentUpgradeEntry"
L_06d5: callvirt BattleTech.WorkOrderEntry_ArgoUpgradeGeneric GetItem[WorkOrderEntry_ArgoUpgradeGeneric](System.String)
L_06da: stfld BattleTech.WorkOrderEntry_ArgoUpgradeGeneric CurrentUpgradeEntry
L_06df: ldarg.0
L_06e0: ldloc.0
L_06e1: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_06e6: ldstr "specialEventTracker"
L_06eb: callvirt System.Collections.Generic.List`1[BattleTech.SimGameEventTracker] GetItemList[SimGameEventTracker](System.String)
L_06f0: stfld System.Collections.Generic.List`1[BattleTech.SimGameEventTracker] specialEventTracker
L_06f5: ldarg.0
L_06f6: ldloc.0
L_06f7: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_06fc: ldstr "companyEventTracker"
L_0701: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0706: stfld BattleTech.SimGameEventTracker companyEventTracker
L_070b: ldarg.0
L_070c: ldloc.0
L_070d: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0712: ldstr "mechWarriorEventTracker"
L_0717: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_071c: stfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_0721: ldarg.0
L_0722: ldloc.0
L_0723: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0728: ldstr "deadEventTracker"
L_072d: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0732: stfld BattleTech.SimGameEventTracker deadEventTracker
L_0737: ldarg.0
L_0738: ldloc.0
L_0739: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_073e: ldstr "moraleEventTracker"
L_0743: callvirt BattleTech.SimGameEventTracker GetItem[SimGameEventTracker](System.String)
L_0748: stfld BattleTech.SimGameEventTracker moraleEventTracker
L_074d: ldloc.0
L_074e: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0753: ldloc.0
L_0754: ldftn Void <Rehydrate>b__7(BattleTech.SimGameEventTracker)
L_075a: newobj Void .ctor(Object, IntPtr)
L_075f: callvirt Void OperateOnAllSourceObjects[SimGameEventTracker](System.Action`1[BattleTech.SimGameEventTracker])
L_0764: ldarg.0
L_0765: ldloc.0
L_0766: ldfld BattleTech.Save.SimGameSave save
L_076b: callvirt BattleTech.Framework.ContractScope get_contractScope()
L_0770: stfld BattleTech.Framework.ContractScope ContractScope
L_0775: ldarg.0
L_0776: ldloc.0
L_0777: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_077c: ldstr "activeBreadcrumb"
L_0781: callvirt BattleTech.Contract GetItem[Contract](System.String)
L_0786: stfld BattleTech.Contract activeBreadcrumb
L_078b: ldloc.0
L_078c: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_0791: ldstr "pendingBreadcrumb"
L_0796: callvirt Boolean HasItem(System.String)
L_079b: brfalse Label27
L_07a0: ldarg.0
L_07a1: ldloc.0
L_07a2: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_07a7: ldstr "pendingBreadcrumb"
L_07ac: callvirt BattleTech.Contract GetItem[Contract](System.String)
L_07b1: stfld BattleTech.Contract pendingBreadcrumb
L_07b6: Label27
L_07b6: ldarg.0
L_07b7: ldloc.0
L_07b8: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
L_07bd: ldstr "globalContracts"
L_07c2: callvirt System.Collections.Generic.List`1[BattleTech.Contract] GetItemList[Contract](System.String)
L_07c7: stfld System.Collections.Generic.List`1[BattleTech.Contract] globalContracts
L_07cc: ldloc.0
L_07cd: ldfld BattleTech.Save.SimGameSave save
L_07d2: callvirt UInt32 get_UIDCount()
L_07d7: ldarg.0
L_07d8: ldfld System.UInt32 UIDCount
L_07dd: ble.un Label28
L_07e2: ldarg.0
L_07e3: ldloc.0
L_07e4: ldfld BattleTech.Save.SimGameSave save
L_07e9: callvirt UInt32 get_UIDCount()
L_07ee: stfld System.UInt32 UIDCount
L_07f3: Label28
L_07f3: ldloc.0
L_07f4: ldfld BattleTech.Save.SimGameSave save
L_07f9: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_07fe: brfalse Label29
L_0803: ldarg.0
L_0804: newobj Void .ctor()
L_0809: stfld System.Collections.Generic.Dictionary`2[BattleTech.ArgoController+RepairStateLocations,System.Int32] argoLocationRepairStates
L_080e: ldc.i4.0
L_080f: stloc.s 15 (System.Int32)
L_0811: br Label30
L_0816: Label31
L_0816: ldarg.0
L_0817: ldfld System.Collections.Generic.Dictionary`2[BattleTech.ArgoController+RepairStateLocations,System.Int32] argoLocationRepairStates
L_081c: ldloc.0
L_081d: ldfld BattleTech.Save.SimGameSave save
L_0822: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_0827: ldloc.s 15 (System.Int32)
L_0829: callvirt Int32 get_Item(Int32)
L_082e: ldloc.0
L_082f: ldfld BattleTech.Save.SimGameSave save
L_0834: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateValues
L_0839: ldloc.s 15 (System.Int32)
L_083b: callvirt Int32 get_Item(Int32)
L_0840: callvirt Void Add(RepairStateLocations, Int32)
L_0845: ldloc.s 15 (System.Int32)
L_0847: ldc.i4.1
L_0848: add
L_0849: stloc.s 15 (System.Int32)
L_084b: Label30
L_084b: ldloc.s 15 (System.Int32)
L_084d: ldloc.0
L_084e: ldfld BattleTech.Save.SimGameSave save
L_0853: ldfld System.Collections.Generic.List`1[System.Int32] RepairStateKeys
L_0858: callvirt Int32 get_Count()
L_085d: blt Label31
L_0862: Label29
L_0862: ldloc.0
L_0863: ldfld BattleTech.Save.SimGameSave save
L_0868: ldfld System.Collections.Generic.List`1[System.String] UsedRoninIDs
L_086d: brfalse Label32
L_0872: ldarg.0
L_0873: ldloc.0
L_0874: ldfld BattleTech.Save.SimGameSave save
L_0879: ldfld System.Collections.Generic.List`1[System.String] UsedRoninIDs
L_087e: newobj Void .ctor(IEnumerable`1)
L_0883: stfld System.Collections.Generic.List`1[System.String] usedRoninIDs
L_0888: Label32
L_0888: ldloc.0
L_0889: ldfld BattleTech.Save.SimGameSave save
L_088e: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_0893: brfalse Label33
L_0898: ldarg.0
L_0899: newobj Void .ctor()
L_089e: stfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
L_08a3: ldc.i4.0
L_08a4: stloc.s 16 (System.Int32)
L_08a6: br Label34
L_08ab: Label35
L_08ab: ldarg.0
L_08ac: ldfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
L_08b1: ldloc.0
L_08b2: ldfld BattleTech.Save.SimGameSave save
L_08b7: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_08bc: ldloc.s 16 (System.Int32)
L_08be: callvirt Int32 get_Item(Int32)
L_08c3: callvirt Void Add(SimGameCharacterType)
L_08c8: ldloc.s 16 (System.Int32)
L_08ca: ldc.i4.1
L_08cb: add
L_08cc: stloc.s 16 (System.Int32)
L_08ce: Label34
L_08ce: ldloc.s 16 (System.Int32)
L_08d0: ldloc.0
L_08d1: ldfld BattleTech.Save.SimGameSave save
L_08d6: ldfld System.Collections.Generic.List`1[System.Int32] CharacterList
L_08db: callvirt Int32 get_Count()
L_08e0: blt Label35
L_08e5: Label33
L_08e5: ldloc.0
L_08e6: ldfld BattleTech.Save.SimGameSave save
L_08eb: ldfld System.Collections.Generic.List`1[System.Boolean] CharacterStatus
L_08f0: brfalse Label36
L_08f5: ldarg.0
L_08f6: ldloc.0
L_08f7: ldfld BattleTech.Save.SimGameSave save
L_08fc: ldfld System.Collections.Generic.List`1[System.Boolean] CharacterStatus
L_0901: newobj Void .ctor(IEnumerable`1)
L_0906: stfld System.Collections.Generic.List`1[System.Boolean] characterStatus
L_090b: Label36
L_090b: ldloc.0
L_090c: ldfld BattleTech.Save.SimGameSave save
L_0911: ldfld System.Collections.Generic.List`1[System.String] MapDiscardPile
L_0916: brfalse Label37
L_091b: ldarg.0
L_091c: ldloc.0
L_091d: ldfld BattleTech.Save.SimGameSave save
L_0922: ldfld System.Collections.Generic.List`1[System.String] MapDiscardPile
L_0927: newobj Void .ctor(IEnumerable`1)
L_092c: stfld System.Collections.Generic.List`1[System.String] mapDiscardPile
L_0931: Label37
L_0931: ldloc.0
L_0932: ldfld BattleTech.Save.SimGameSave save
L_0937: ldfld System.Collections.Generic.List`1[System.String] ContractDiscardPile
L_093c: brfalse Label38
L_0941: ldarg.0
L_0942: ldloc.0
L_0943: ldfld BattleTech.Save.SimGameSave save
L_0948: ldfld System.Collections.Generic.List`1[System.String] ContractDiscardPile
L_094d: newobj Void .ctor(IEnumerable`1)
L_0952: stfld System.Collections.Generic.List`1[System.String] contractDiscardPile
L_0957: Label38
L_0957: ldloc.0
L_0958: ldfld BattleTech.Save.SimGameSave save
L_095d: ldfld System.Collections.Generic.List`1[System.String] PilotGenCallsignDiscardPile
L_0962: brfalse Label39
L_0967: ldarg.0
L_0968: ldloc.0
L_0969: ldfld BattleTech.Save.SimGameSave save
L_096e: ldfld System.Collections.Generic.List`1[System.String] PilotGenCallsignDiscardPile
L_0973: newobj Void .ctor(IEnumerable`1)
L_0978: stfld System.Collections.Generic.List`1[System.String] pilotGenCallsignDiscardPile
L_097d: Label39
L_097d: ldloc.0
L_097e: ldfld BattleTech.Save.SimGameSave save
L_0983: ldfld System.Collections.Generic.List`1[System.String] PilotGenVoiceDiscardPile
L_0988: brfalse Label40
L_098d: ldarg.0
L_098e: ldloc.0
L_098f: ldfld BattleTech.Save.SimGameSave save
L_0994: ldfld System.Collections.Generic.List`1[System.String] PilotGenVoiceDiscardPile
L_0999: newobj Void .ctor(IEnumerable`1)
L_099e: stfld System.Collections.Generic.List`1[System.String] pilotGenVoiceDiscardPile
L_09a3: Label40
L_09a3: ldloc.0
L_09a4: ldfld BattleTech.Save.SimGameSave save
L_09a9: ldfld System.Collections.Generic.List`1[System.String] PilotGenPortraitDiscardPile
L_09ae: brfalse Label41
L_09b3: ldarg.0
L_09b4: ldloc.0
L_09b5: ldfld BattleTech.Save.SimGameSave save
L_09ba: ldfld System.Collections.Generic.List`1[System.String] PilotGenPortraitDiscardPile
L_09bf: newobj Void .ctor(IEnumerable`1)
L_09c4: stfld System.Collections.Generic.List`1[System.String] pilotGenPortraitDiscardPile
L_09c9: Label41
L_09c9: ldloc.0
L_09ca: ldfld BattleTech.Save.SimGameSave save
L_09cf: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractEmployers
L_09d4: brfalse Label42
L_09d9: ldarg.0
L_09da: newobj Void .ctor()
L_09df: stfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractEmployers
L_09e4: ldloc.0
L_09e5: ldfld BattleTech.Save.SimGameSave save
L_09ea: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractEmployers
L_09ef: callvirt Enumerator GetEnumerator()
L_09f4: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
.try
{
	L_09f6: br Label43
	L_09fb: Label44
	L_09fb: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_09fd: call Int32 get_Current()
	L_0a02: stloc.s 18 (System.Int32)
	L_0a04: ldarg.0
	L_0a05: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractEmployers
	L_0a0a: ldloc.s 18 (System.Int32)
	L_0a0c: callvirt Void Add(BattleTech.Faction)
	L_0a11: Label43
	L_0a11: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a13: call Boolean MoveNext()
	L_0a18: brtrue Label44
	L_0a1d: leave Label45
	L_0a22: leave (autogenerated)
} // end try
.finally
{
	L_0a27: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a29: constrained. System.Collections.Generic.List`1+Enumerator[System.Int32]
	L_0a2f: callvirt Void Dispose()
	L_0a34: endfinally
	L_0a35: leave (autogenerated)
} // end handler
L_0a36: Label42
L_0a36: Label45
L_0a36: ldloc.0
L_0a37: ldfld BattleTech.Save.SimGameSave save
L_0a3c: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractTargets
L_0a41: brfalse Label46
L_0a46: ldarg.0
L_0a47: newobj Void .ctor()
L_0a4c: stfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0a51: ldloc.0
L_0a52: ldfld BattleTech.Save.SimGameSave save
L_0a57: ldfld System.Collections.Generic.List`1[System.Int32] IgnoredContractTargets
L_0a5c: callvirt Enumerator GetEnumerator()
L_0a61: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
.try
{
	L_0a63: br Label47
	L_0a68: Label48
	L_0a68: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a6a: call Int32 get_Current()
	L_0a6f: stloc.s 19 (System.Int32)
	L_0a71: ldarg.0
	L_0a72: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
	L_0a77: ldloc.s 19 (System.Int32)
	L_0a79: callvirt Void Add(BattleTech.Faction)
	L_0a7e: Label47
	L_0a7e: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a80: call Boolean MoveNext()
	L_0a85: brtrue Label48
	L_0a8a: leave Label49
	L_0a8f: leave (autogenerated)
} // end try
.finally
{
	L_0a94: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[System.Int32])
	L_0a96: constrained. System.Collections.Generic.List`1+Enumerator[System.Int32]
	L_0a9c: callvirt Void Dispose()
	L_0aa1: endfinally
	L_0aa2: leave (autogenerated)
} // end handler
L_0aa3: Label49
L_0aa3: ldloc.0
L_0aa4: ldfld BattleTech.Save.SimGameSave save
L_0aa9: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_0aae: ldc.i4.2
L_0aaf: bne.un Label50
L_0ab4: ldarg.0
L_0ab5: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0aba: ldc.i4.s 9
L_0abc: callvirt Boolean Contains(BattleTech.Faction)
L_0ac1: brtrue Label51
L_0ac6: ldarg.0
L_0ac7: ldfld System.Collections.Generic.List`1[BattleTech.Faction] ignoredContractTargets
L_0acc: ldc.i4.s 9
L_0ace: callvirt Void Add(BattleTech.Faction)
L_0ad3: Label46
L_0ad3: Label50
L_0ad3: Label51
L_0ad3: ldloc.0
L_0ad4: ldfld BattleTech.Save.SimGameSave save
L_0ad9: ldfld System.Collections.Generic.List`1[System.String] DisplayedFactions
L_0ade: brfalse Label52
L_0ae3: ldarg.0
L_0ae4: newobj Void .ctor()
L_0ae9: stfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0aee: ldloc.0
L_0aef: ldfld BattleTech.Save.SimGameSave save
L_0af4: ldfld System.Collections.Generic.List`1[System.String] DisplayedFactions
L_0af9: callvirt Enumerator GetEnumerator()
L_0afe: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0b00: br Label53
	L_0b05: Label54
	L_0b05: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b07: call System.String get_Current()
	L_0b0c: stloc.s 20 (System.String)
	L_0b0e: ldarg.0
	L_0b0f: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
	L_0b14: ldarg.0
	L_0b15: ldloc.s 20 (System.String)
	L_0b17: call BattleTech.Faction GetFactionFromString(System.String)
	L_0b1c: callvirt Void Add(BattleTech.Faction)
	L_0b21: Label53
	L_0b21: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b23: call Boolean MoveNext()
	L_0b28: brtrue Label54
	L_0b2d: leave Label55
	L_0b32: leave (autogenerated)
} // end try
.finally
{
	L_0b37: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0b39: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0b3f: callvirt Void Dispose()
	L_0b44: endfinally
	L_0b45: leave (autogenerated)
} // end handler
L_0b46: Label55
L_0b46: ldarg.0
L_0b47: call BattleTech.SimGameConstants get_Constants()
L_0b4c: callvirt BattleTech.StoryConstantsDef get_Story()
L_0b51: ldfld System.String[] StartingDisplayedFactions
L_0b56: stloc.s 21 (System.String[])
L_0b58: ldc.i4.0
L_0b59: stloc.s 22 (System.Int32)
L_0b5b: br Label56
L_0b60: Label58
L_0b60: ldloc.s 21 (System.String[])
L_0b62: ldloc.s 22 (System.Int32)
L_0b64: ldelem.ref
L_0b65: stloc.s 23 (System.String)
L_0b67: ldarg.0
L_0b68: ldloc.s 23 (System.String)
L_0b6a: call BattleTech.Faction GetFactionFromString(System.String)
L_0b6f: stloc.s 24 (BattleTech.Faction)
L_0b71: ldarg.0
L_0b72: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0b77: ldloc.s 24 (BattleTech.Faction)
L_0b79: callvirt Boolean Contains(BattleTech.Faction)
L_0b7e: brtrue Label57
L_0b83: ldarg.0
L_0b84: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0b89: ldloc.s 24 (BattleTech.Faction)
L_0b8b: callvirt Void Add(BattleTech.Faction)
L_0b90: Label57
L_0b90: ldloc.s 22 (System.Int32)
L_0b92: ldc.i4.1
L_0b93: add
L_0b94: stloc.s 22 (System.Int32)
L_0b96: Label56
L_0b96: ldloc.s 22 (System.Int32)
L_0b98: ldloc.s 21 (System.String[])
L_0b9a: ldlen
L_0b9b: conv.i4
L_0b9c: blt Label58
L_0ba1: ldloc.0
L_0ba2: ldfld BattleTech.Save.SimGameSave save
L_0ba7: ldfld BattleTech.SimGameState+SimGameType SimGameMode
L_0bac: ldc.i4.2
L_0bad: bne.un Label59
L_0bb2: ldarg.0
L_0bb3: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bb8: ldc.i4.s 10
L_0bba: callvirt Boolean Contains(BattleTech.Faction)
L_0bbf: brtrue Label60
L_0bc4: ldarg.0
L_0bc5: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bca: ldc.i4.s 10
L_0bcc: callvirt Void Add(BattleTech.Faction)
L_0bd1: Label60
L_0bd1: ldarg.0
L_0bd2: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0bd7: ldc.i4.s 9
L_0bd9: callvirt Boolean Contains(BattleTech.Faction)
L_0bde: brfalse Label61
L_0be3: ldarg.0
L_0be4: ldfld System.Collections.Generic.List`1[BattleTech.Faction] displayedFactions
L_0be9: ldc.i4.s 9
L_0beb: callvirt Boolean Remove(BattleTech.Faction)
L_0bf0: pop
L_0bf1: Label52
L_0bf1: Label59
L_0bf1: Label61
L_0bf1: ldloc.0
L_0bf2: ldfld BattleTech.Save.SimGameSave save
L_0bf7: ldfld System.Collections.Generic.List`1[System.String] ConversationIDRefsWeHaveSelected
L_0bfc: brfalse Label62
L_0c01: ldarg.0
L_0c02: newobj Void .ctor()
L_0c07: stfld System.Collections.Generic.List`1[System.String] AlreadyClickedConversationResponses
L_0c0c: ldloc.0
L_0c0d: ldfld BattleTech.Save.SimGameSave save
L_0c12: ldfld System.Collections.Generic.List`1[System.String] ConversationIDRefsWeHaveSelected
L_0c17: callvirt Enumerator GetEnumerator()
L_0c1c: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0c1e: br Label63
	L_0c23: Label64
	L_0c23: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c25: call System.String get_Current()
	L_0c2a: stloc.s 25 (System.String)
	L_0c2c: ldarg.0
	L_0c2d: ldfld System.Collections.Generic.List`1[System.String] AlreadyClickedConversationResponses
	L_0c32: ldloc.s 25 (System.String)
	L_0c34: callvirt Void Add(System.String)
	L_0c39: Label63
	L_0c39: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c3b: call Boolean MoveNext()
	L_0c40: brtrue Label64
	L_0c45: leave Label65
	L_0c4a: leave (autogenerated)
} // end try
.finally
{
	L_0c4f: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c51: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0c57: callvirt Void Dispose()
	L_0c5c: endfinally
	L_0c5d: leave (autogenerated)
} // end handler
L_0c5e: Label62
L_0c5e: Label65
L_0c5e: ldloc.0
L_0c5f: ldfld BattleTech.Save.SimGameSave save
L_0c64: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c69: brfalse Label66
L_0c6e: ldarg.0
L_0c6f: newobj Void .ctor()
L_0c74: stfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c79: ldloc.0
L_0c7a: ldfld BattleTech.Save.SimGameSave save
L_0c7f: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
L_0c84: callvirt Enumerator GetEnumerator()
L_0c89: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0c8b: br Label67
	L_0c90: Label68
	L_0c90: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0c92: call System.String get_Current()
	L_0c97: stloc.s 26 (System.String)
	L_0c99: ldarg.0
	L_0c9a: ldfld System.Collections.Generic.List`1[System.String] WhitelistedRonin
	L_0c9f: ldloc.s 26 (System.String)
	L_0ca1: callvirt Void Add(System.String)
	L_0ca6: Label67
	L_0ca6: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0ca8: call Boolean MoveNext()
	L_0cad: brtrue Label68
	L_0cb2: leave Label69
	L_0cb7: leave (autogenerated)
} // end try
.finally
{
	L_0cbc: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0cbe: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0cc4: callvirt Void Dispose()
	L_0cc9: endfinally
	L_0cca: leave (autogenerated)
} // end handler
L_0ccb: Label66
L_0ccb: Label69
L_0ccb: ldarg.0
L_0ccc: ldloc.0
L_0ccd: ldfld BattleTech.Save.SimGameSave save
L_0cd2: ldfld System.Boolean AllowDebug
L_0cd7: stfld System.Boolean AllowDebug
L_0cdc: ldarg.0
L_0cdd: ldfld BattleTech.SimGameEventTracker companyEventTracker
L_0ce2: ldsfld BattleTech.EventScope[] CompanyTrackerScope
L_0ce7: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0cec: ldarg.0
L_0ced: ldfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_0cf2: ldsfld BattleTech.EventScope[] MechWarriorTrackerScope
L_0cf7: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0cfc: ldarg.0
L_0cfd: ldfld BattleTech.SimGameEventTracker moraleEventTracker
L_0d02: ldsfld BattleTech.EventScope[] MoraleTrackerScope
L_0d07: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0d0c: ldarg.0
L_0d0d: ldfld BattleTech.SimGameEventTracker deadEventTracker
L_0d12: ldsfld BattleTech.EventScope[] DeadTrackerScope
L_0d17: callvirt Void SetValidScopes(BattleTech.EventScope[])
L_0d1c: ldarg.0
L_0d1d: ldfld BattleTech.SimGameConstantOverride constantOverrides
L_0d22: ldarg.0
L_0d23: callvirt Void Initialize(BattleTech.SimGameState)
L_0d28: ldarg.0
L_0d29: call SimGameType get_SimGameMode()
L_0d2e: ldc.i4.2
L_0d2f: beq Label70
L_0d34: ldstr "DifficultySettings"
L_0d39: br Label71
L_0d3e: Label70
L_0d3e: ldstr "CareerDifficultySettings"
L_0d43: Label71
L_0d43: stloc.2
L_0d44: ldarg.0
L_0d45: ldfld BattleTech.SimGameDifficulty difficultySettings
L_0d4a: ldarg.0
L_0d4b: ldarg.0
L_0d4c: call BattleTech.Data.DataManager get_DataManager()
L_0d51: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.SimGameDifficultySettingList] get_SimGameDifficultySettingLists()
L_0d56: ldloc.2
L_0d57: callvirt BattleTech.SimGameDifficultySettingList Get(System.String)
L_0d5c: ldc.i4.0
L_0d5d: callvirt Void Initialize(BattleTech.SimGameState, BattleTech.SimGameDifficultySettingList, Boolean)
L_0d62: ldloc.0
L_0d63: ldfld BattleTech.Save.SimGameSave save
L_0d68: ldfld BattleTech.SimGameDifficulty+SimGameDifficultySave DifficultySettings
L_0d6d: brfalse Label72
L_0d72: ldarg.0
L_0d73: ldfld BattleTech.SimGameDifficulty difficultySettings
L_0d78: ldloc.0
L_0d79: ldfld BattleTech.Save.SimGameSave save
L_0d7e: ldfld BattleTech.SimGameDifficulty+SimGameDifficultySave DifficultySettings
L_0d83: callvirt Void Rehydrate(SimGameDifficultySave)
L_0d88: br Label73
L_0d8d: Label72
L_0d8d: ldarg.0
L_0d8e: call BattleTech.SimGameDifficulty get_DifficultySettings()
L_0d93: ldc.i4.1
L_0d94: callvirt Void ApplyAllSettings(Boolean)
L_0d99: ldarg.0
L_0d9a: call BattleTech.SimGameDifficulty get_DifficultySettings()
L_0d9f: callvirt Void RefreshCareerScoreMultiplier()
L_0da4: Label73
L_0da4: ldnull
L_0da5: stloc.3
L_0da6: ldloc.0
L_0da7: ldfld BattleTech.Save.SimGameSave save
L_0dac: ldfld System.Collections.Generic.List`1[System.String] FlashpointDiscardPile
L_0db1: brfalse Label74
L_0db6: ldarg.0
L_0db7: ldloc.0
L_0db8: ldfld BattleTech.Save.SimGameSave save
L_0dbd: ldfld System.Collections.Generic.List`1[System.String] FlashpointDiscardPile
L_0dc2: newobj Void .ctor(IEnumerable`1)
L_0dc7: stfld System.Collections.Generic.List`1[System.String] flashpointDiscardPile
L_0dcc: Label74
L_0dcc: ldloc.0
L_0dcd: ldfld BattleTech.Save.SimGameSave save
L_0dd2: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0dd7: brfalse Label75
L_0ddc: ldloc.0
L_0ddd: ldfld BattleTech.Save.SimGameSave save
L_0de2: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0de7: callvirt Int32 get_Count()
L_0dec: ldc.i4.0
L_0ded: ble Label76
L_0df2: ldarg.0
L_0df3: ldloc.0
L_0df4: ldfld BattleTech.Save.SimGameSave save
L_0df9: ldfld System.Collections.Generic.List`1[System.String] CompletedFlashpoints
L_0dfe: stfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_0e03: Label75
L_0e03: Label76
L_0e03: ldloc.0
L_0e04: ldfld BattleTech.Save.SimGameSave save
L_0e09: ldfld System.Boolean InFlashpointCooldownHasValue
L_0e0e: brfalse Label77
L_0e13: ldarg.0
L_0e14: ldloc.0
L_0e15: ldfld BattleTech.Save.SimGameSave save
L_0e1a: ldfld System.Boolean InFlashpointCooldown
L_0e1f: stfld System.Boolean inFlashpointCooldown
L_0e24: Label77
L_0e24: ldloc.0
L_0e25: ldfld BattleTech.Save.SimGameSave save
L_0e2a: ldfld System.Boolean FlashpointCooldownDaysHasValue
L_0e2f: brfalse Label78
L_0e34: ldarg.0
L_0e35: ldloc.0
L_0e36: ldfld BattleTech.Save.SimGameSave save
L_0e3b: ldfld System.Int32 FlashpointCooldownDays
L_0e40: stfld System.Int32 flashpointCooldownDays
L_0e45: Label78
L_0e45: ldloc.0
L_0e46: ldfld BattleTech.Save.SimGameSave save
L_0e4b: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] AvailableFlashpointList
L_0e50: brfalse Label79
L_0e55: ldarg.0
L_0e56: ldloc.0
L_0e57: ldfld BattleTech.Save.SimGameSave save
L_0e5c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] AvailableFlashpointList
L_0e61: newobj Void .ctor(IEnumerable`1)
L_0e66: stfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0e6b: ldarg.0
L_0e6c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0e71: callvirt Enumerator GetEnumerator()
L_0e76: stloc.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
.try
{
	L_0e78: br Label80
	L_0e7d: Label84
	L_0e7d: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0e7f: call BattleTech.Flashpoint get_Current()
	L_0e84: stloc.s 28 (BattleTech.Flashpoint)
	L_0e86: ldloc.s 28 (BattleTech.Flashpoint)
	L_0e88: ldarg.0
	L_0e89: ldloc.0
	L_0e8a: ldfld BattleTech.Save.Test.SerializableReferenceContainer globalReferences
	L_0e8f: callvirt Void Rehydrate(BattleTech.SimGameState, BattleTech.Save.Test.SerializableReferenceContainer)
	L_0e94: ldloc.3
	L_0e95: brtrue Label81
	L_0e9a: ldloc.0
	L_0e9b: ldfld BattleTech.Save.SimGameSave save
	L_0ea0: ldfld System.String ActiveFlashpoint
	L_0ea5: call Boolean IsNullOrEmpty(System.String)
	L_0eaa: brtrue Label82
	L_0eaf: ldloc.s 28 (BattleTech.Flashpoint)
	L_0eb1: callvirt BattleTech.FlashpointDef get_Def()
	L_0eb6: ldfld BattleTech.BaseDescriptionDef Description
	L_0ebb: callvirt System.String get_Id()
	L_0ec0: ldloc.0
	L_0ec1: ldfld BattleTech.Save.SimGameSave save
	L_0ec6: ldfld System.String ActiveFlashpoint
	L_0ecb: call Boolean op_Equality(System.String, System.String)
	L_0ed0: brfalse Label83
	L_0ed5: ldloc.s 28 (BattleTech.Flashpoint)
	L_0ed7: stloc.3
	L_0ed8: Label80
	L_0ed8: Label81
	L_0ed8: Label82
	L_0ed8: Label83
	L_0ed8: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0eda: call Boolean MoveNext()
	L_0edf: brtrue Label84
	L_0ee4: leave Label85
	L_0ee9: leave (autogenerated)
} // end try
.finally
{
	L_0eee: ldloca.s 27 (System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint])
	L_0ef0: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Flashpoint]
	L_0ef6: callvirt Void Dispose()
	L_0efb: endfinally
	L_0efc: leave (autogenerated)
} // end handler
L_0efd: Label85
L_0efd: ldloc.3
L_0efe: brfalse Label86
L_0f03: ldarg.0
L_0f04: ldloc.3
L_0f05: stfld BattleTech.Flashpoint activeFlashpoint
L_0f0a: Label79
L_0f0a: Label86
L_0f0a: ldloc.0
L_0f0b: ldfld BattleTech.Save.SimGameSave save
L_0f10: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f15: brfalse Label87
L_0f1a: ldarg.0
L_0f1b: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f20: callvirt Void Clear()
L_0f25: ldc.i4.0
L_0f26: stloc.s 29 (System.Int32)
L_0f28: br Label88
L_0f2d: Label89
L_0f2d: ldarg.0
L_0f2e: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f33: ldloc.0
L_0f34: ldfld BattleTech.Save.SimGameSave save
L_0f39: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f3e: ldloc.s 29 (System.Int32)
L_0f40: callvirt System.String get_Item(Int32)
L_0f45: callvirt Void Add(System.String)
L_0f4a: ldloc.s 29 (System.Int32)
L_0f4c: ldc.i4.1
L_0f4d: add
L_0f4e: stloc.s 29 (System.Int32)
L_0f50: Label88
L_0f50: ldloc.s 29 (System.Int32)
L_0f52: ldloc.0
L_0f53: ldfld BattleTech.Save.SimGameSave save
L_0f58: ldfld System.Collections.Generic.List`1[System.String] VisitedStarSystems
L_0f5d: callvirt Int32 get_Count()
L_0f62: blt Label89
L_0f67: Label87
L_0f67: ldloc.0
L_0f68: ldfld BattleTech.Save.SimGameSave save
L_0f6d: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
L_0f72: brfalse Label90
L_0f77: ldarg.0
L_0f78: ldfld System.Collections.Generic.List`1[BattleTech.Faction] AlliedFactions
L_0f7d: callvirt Void Clear()
L_0f82: ldc.i4.0
L_0f83: stloc.s 30 (System.Int32)
L_0f85: br Label91
L_0f8a: Label94
L_0f8a: nop
.try
{
	L_0f8b: ldtoken BattleTech.Faction
	L_0f90: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
	L_0f95: ldloc.0
	L_0f96: ldfld BattleTech.Save.SimGameSave save
	L_0f9b: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
	L_0fa0: ldloc.s 30 (System.Int32)
	L_0fa2: callvirt System.String get_Item(Int32)
	L_0fa7: call System.Object Parse(System.Type, System.String)
	L_0fac: unbox.any BattleTech.Faction
	L_0fb1: stloc.s 31 (BattleTech.Faction)
	L_0fb3: ldarg.0
	L_0fb4: ldfld System.Collections.Generic.List`1[BattleTech.Faction] AlliedFactions
	L_0fb9: ldloc.s 31 (BattleTech.Faction)
	L_0fbb: callvirt Void Add(BattleTech.Faction)
	L_0fc0: leave Label92
	L_0fc5: leave (autogenerated)
} // end try
.catch System.Object
{
	L_0fca: pop
	L_0fcb: leave Label93
	L_0fd0: leave (autogenerated)
} // end handler
L_0fd5: Label92
L_0fd5: Label93
L_0fd5: ldloc.s 30 (System.Int32)
L_0fd7: ldc.i4.1
L_0fd8: add
L_0fd9: stloc.s 30 (System.Int32)
L_0fdb: Label91
L_0fdb: ldloc.s 30 (System.Int32)
L_0fdd: ldloc.0
L_0fde: ldfld BattleTech.Save.SimGameSave save
L_0fe3: ldfld System.Collections.Generic.List`1[System.String] AlliedFactions
L_0fe8: callvirt Int32 get_Count()
L_0fed: blt Label94
L_0ff2: Label90
L_0ff2: ldloc.0
L_0ff3: ldfld BattleTech.Save.SimGameSave save
L_0ff8: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
L_0ffd: brfalse Label95
L_1002: ldarg.0
L_1003: ldfld System.Collections.Generic.List`1[BattleTech.Faction] CareerModeEndAlliedFactions
L_1008: callvirt Void Clear()
L_100d: ldc.i4.0
L_100e: stloc.s 32 (System.Int32)
L_1010: br Label96
L_1015: Label99
L_1015: nop
.try
{
	L_1016: ldtoken BattleTech.Faction
	L_101b: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
	L_1020: ldloc.0
	L_1021: ldfld BattleTech.Save.SimGameSave save
	L_1026: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
	L_102b: ldloc.s 32 (System.Int32)
	L_102d: callvirt System.String get_Item(Int32)
	L_1032: call System.Object Parse(System.Type, System.String)
	L_1037: unbox.any BattleTech.Faction
	L_103c: stloc.s 33 (BattleTech.Faction)
	L_103e: ldarg.0
	L_103f: ldfld System.Collections.Generic.List`1[BattleTech.Faction] CareerModeEndAlliedFactions
	L_1044: ldloc.s 33 (BattleTech.Faction)
	L_1046: callvirt Void Add(BattleTech.Faction)
	L_104b: leave Label97
	L_1050: leave (autogenerated)
} // end try
.catch System.Object
{
	L_1055: pop
	L_1056: leave Label98
	L_105b: leave (autogenerated)
} // end handler
L_1060: Label97
L_1060: Label98
L_1060: ldloc.s 32 (System.Int32)
L_1062: ldc.i4.1
L_1063: add
L_1064: stloc.s 32 (System.Int32)
L_1066: Label96
L_1066: ldloc.s 32 (System.Int32)
L_1068: ldloc.0
L_1069: ldfld BattleTech.Save.SimGameSave save
L_106e: ldfld System.Collections.Generic.List`1[System.String] CareerModeEndAlliedFactions
L_1073: callvirt Int32 get_Count()
L_1078: blt Label99
L_107d: Label95
L_107d: ldarg.0
L_107e: ldloc.0
L_107f: ldfld BattleTech.Save.SimGameSave save
L_1084: ldfld System.Boolean CareerModeLocked
L_1089: stfld System.Boolean careerModeLocked
L_108e: ldarg.0
L_108f: ldloc.0
L_1090: ldfld BattleTech.Save.SimGameSave save
L_1095: ldfld System.Int32 CareerModeFlashpointStartDate
L_109a: stfld System.Int32 careerModeFlashpointStartDate
L_109f: ldarg.0
L_10a0: ldc.i4.1
L_10a1: call Void SetFactionValidators(Boolean)
L_10a6: ldarg.0
L_10a7: ldarg.0
L_10a8: ldfld BattleTech.StatCollection companyStats
L_10ad: ldarg.0
L_10ae: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ActiveMechs
L_10b3: ldarg.0
L_10b4: ldfld System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef] ReadyingMechs
L_10b9: call Void FixMechInMechbay(BattleTech.SimGameState, BattleTech.StatCollection, System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef], System.Collections.Generic.Dictionary`2[System.Int32,BattleTech.MechDef])
L_10be: ret
DONE

### Patch BattleTech.UI.SkirmishMechBayPanel, Void LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest)
L_0000: ldarg.0
L_0001: call Void FixDefaults(BattleTech.UI.SkirmishMechBayPanel)
L_0006: ldarg.0
L_0007: ldc.i4.1
L_0008: call Void RefreshMechList(Boolean)
L_000d: ldarg.0
L_000e: call Void RefreshLanceList()
L_0013: ldarg.0
L_0014: ldnull
L_0015: call Void SelectLance(BattleTech.LanceDef)
L_001a: ldarg.0
L_001b: ldnull
L_001c: call Void SelectMech(BattleTech.MechDef)
L_0021: ldarg.0
L_0022: ldc.i4.1
L_0023: stfld System.Boolean initialized
L_0028: ldarg.0
L_0029: ldarg.0
L_002a: ldfld UnityEngine.GameObject mechPageObj
L_002f: callvirt DG.Tweening.DOTweenAnimation GetComponent[DOTweenAnimation]()
L_0034: stfld DG.Tweening.DOTweenAnimation mechPageAnimation
L_0039: ldarg.0
L_003a: ldarg.0
L_003b: ldfld UnityEngine.GameObject lancePageObj
L_0040: callvirt DG.Tweening.DOTweenAnimation GetComponent[DOTweenAnimation]()
L_0045: stfld DG.Tweening.DOTweenAnimation lancePageAnimation
L_004a: ldarg.0
L_004b: ldarg.0
L_004c: ldfld UnityEngine.GameObject lancePageObj
L_0051: callvirt UnityEngine.CanvasGroup GetComponent[CanvasGroup]()
L_0056: stfld UnityEngine.CanvasGroup lancePageCanvasGroup
L_005b: ldarg.0
L_005c: ldc.i4.1
L_005d: call Void ToggleLancePreview(Boolean)
L_0062: ldarg.0
L_0063: ldc.i4.0
L_0064: call Void ToggleMechInfo(Boolean)
L_0069: ldarg.0
L_006a: ldfld BattleTech.UI.HBSRadioSet lanceFiltersRadioSet
L_006f: callvirt Void Reset()
L_0074: ldarg.0
L_0075: ldc.i4.1
L_0076: stfld System.Boolean filterEnabledStock
L_007b: ldarg.0
L_007c: ldfld BattleTech.UI.HBSDOTweenToggle LanceStockToggleObj
L_0081: ldarg.0
L_0082: ldfld System.Boolean filterEnabledStock
L_0087: brtrue Label1
L_008c: ldc.i4.0
L_008d: br Label2
L_0092: Label1
L_0092: ldc.i4.1
L_0093: Label2
L_0093: ldc.i4.0
L_0094: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0099: pop
L_009a: ldarg.0
L_009b: call Void Filter_LanceAll()
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.HBSDOTweenToggle lanceTabBtn
L_00a6: callvirt Void ForceRadioSetSelection()
L_00ab: ldc.i4.1
L_00ac: call Void Hide(Boolean)
L_00b1: ret
DONE

### Patch BattleTech.UI.SkirmishSettings_Beta, Void OnLoadComplete(BattleTech.Data.LoadRequest)
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.LanceSizeDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.LanceSizeDef
L_0000: Local var 3: BattleTech.UI.SkirmishSettings_Beta+<>c__DisplayClass25_0
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.UI.UIManager uiManager
L_0007: ldarg.0
L_0008: ldflda System.Collections.Generic.List`1[BattleTech.MechDef] stockMechs
L_000d: call Void Prefix(BattleTech.UI.SkirmishSettings_Beta, BattleTech.UI.UIManager, System.Collections.Generic.List`1[BattleTech.MechDef] ByRef)
L_0012: ldarg.0
L_0013: newobj Void .ctor()
L_0018: stfld System.Collections.Generic.Dictionary`2[System.Int32,System.Collections.Generic.List`1[BattleTech.LanceDef]] lancesByBV
L_001d: newobj Void .ctor()
L_0022: stloc.0
L_0023: call System.Collections.Generic.List`1[BattleTech.LanceSizeDef] get_LanceSizeDefDefaultDefinitions()
L_0028: callvirt Enumerator GetEnumerator()
L_002d: stloc.1
.try
{
	L_002e: br Label1
	L_0033: Label2
	L_0033: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_0035: call BattleTech.LanceSizeDef get_Current()
	L_003a: stloc.2
	L_003b: newobj Void .ctor()
	L_0040: stloc.3
	L_0041: ldloc.3
	L_0042: ldloc.2
	L_0043: callvirt Int32 get_MaxCBills()
	L_0048: call HBS.Collections.TagSet GetTagsForCBillValue(Int32)
	L_004d: stfld HBS.Collections.TagSet cBillTags
	L_0052: ldarg.0
	L_0053: ldfld System.Collections.Generic.Dictionary`2[System.Int32,System.Collections.Generic.List`1[BattleTech.LanceDef]] lancesByBV
	L_0058: ldloc.2
	L_0059: callvirt Int32 get_MaxCBills()
	L_005e: ldarg.0
	L_005f: ldfld System.Collections.Generic.List`1[BattleTech.LanceDef] allLances
	L_0064: ldloc.3
	L_0065: ldftn Boolean <OnLoadComplete>b__0(BattleTech.LanceDef)
	L_006b: newobj Void .ctor(Object, IntPtr)
	L_0070: callvirt System.Collections.Generic.List`1[BattleTech.LanceDef] FindAll(System.Predicate`1[BattleTech.LanceDef])
	L_0075: callvirt Void Add(Int32, System.Collections.Generic.List`1[BattleTech.LanceDef])
	L_007a: ldloc.0
	L_007b: ldloc.2
	L_007c: ldfld System.String DisplayName
	L_0081: callvirt Void Add(System.String)
	L_0086: Label1
	L_0086: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_0088: call Boolean MoveNext()
	L_008d: brtrue Label2
	L_0092: leave Label3
	L_0097: leave (autogenerated)
} // end try
.finally
{
	L_009c: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef])
	L_009e: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.LanceSizeDef]
	L_00a4: callvirt Void Dispose()
	L_00a9: endfinally
	L_00aa: leave (autogenerated)
} // end handler
L_00ab: Label3
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.UI.TMProWrapper.HBS_Dropdown lanceBudgetDropdown
L_00b1: callvirt Void ClearOptions()
L_00b6: ldarg.0
L_00b7: ldfld BattleTech.UI.TMProWrapper.HBS_Dropdown lanceBudgetDropdown
L_00bc: ldloc.0
L_00bd: callvirt Void AddOptions(System.Collections.Generic.List`1[System.String])
L_00c2: ldc.i4.s 41
L_00c4: ldnull
L_00c5: ldnull
L_00c6: call Boolean PlayComputerVO(BattleTech.ComputerVOEvents, EventCallback, System.Object)
L_00cb: pop
L_00cc: ldarg.0
L_00cd: ldfld BattleTech.UI.LancePreviewPanel playerLancePreview
L_00d2: ldc.i4.1
L_00d3: callvirt Void set_Visible(Boolean)
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.LancePreviewPanel opponentLancePreview
L_00de: ldc.i4.1
L_00df: callvirt Void set_Visible(Boolean)
L_00e4: ldarg.0
L_00e5: ldarg.0
L_00e6: ldfld System.Int32 battleValueIndex
L_00eb: call Void InitializeLanceModules(Int32)
L_00f0: ret
DONE

### Patch BattleTech.MechDef, Void InsertFixedEquipmentIntoInventory()
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: Local var 4: System.Guid
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldflda BattleTech.MechComponentRef[] inventory
L_0007: ldarg.0
L_0008: ldfld BattleTech.Data.DataManager dataManager
L_000d: call Boolean FIX(BattleTech.MechDef, BattleTech.MechComponentRef[] ByRef, BattleTech.Data.DataManager)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.ChassisDef get_Chassis()
L_001d: brtrue Label1
L_0022: br Label10
L_0027: Label1
L_0027: ldarg.0
L_0028: call BattleTech.ChassisDef get_Chassis()
L_002d: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_0032: brfalse Label2
L_0037: ldarg.0
L_0038: call BattleTech.ChassisDef get_Chassis()
L_003d: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_0042: ldlen
L_0043: brfalse Label3
L_0048: ldc.i4.0
L_0049: stloc.1
L_004a: br Label4
L_004f: Label7
L_004f: ldarg.0
L_0050: ldfld BattleTech.MechComponentRef[] inventory
L_0055: ldloc.1
L_0056: ldelem.ref
L_0057: callvirt System.String get_SimGameUID()
L_005c: call Boolean IsNullOrEmpty(System.String)
L_0061: brtrue Label5
L_0066: ldarg.0
L_0067: ldfld BattleTech.MechComponentRef[] inventory
L_006c: ldloc.1
L_006d: ldelem.ref
L_006e: callvirt System.String get_SimGameUID()
L_0073: ldstr "FixedEquipment"
L_0078: callvirt Boolean Contains(System.String)
L_007d: brfalse Label6
L_0082: ldarg.0
L_0083: ldfld BattleTech.MechComponentRef[] inventory
L_0088: ldloc.1
L_0089: ldelem.ref
L_008a: ldarg.0
L_008b: ldfld BattleTech.MechComponentRef[] inventory
L_0090: ldloc.1
L_0091: ldelem.ref
L_0092: callvirt Int32 get_HardpointSlot()
L_0097: ldarg.0
L_0098: ldfld BattleTech.MechComponentRef[] inventory
L_009d: ldloc.1
L_009e: ldelem.ref
L_009f: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00a4: ldc.i4.1
L_00a5: callvirt Void SetData(Int32, BattleTech.ComponentDamageLevel, Boolean)
L_00aa: br Label11
L_00af: Label5
L_00af: Label6
L_00af: ldloc.1
L_00b0: ldc.i4.1
L_00b1: add
L_00b2: stloc.1
L_00b3: Label4
L_00b3: ldloc.1
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.MechComponentRef[] inventory
L_00ba: ldlen
L_00bb: conv.i4
L_00bc: blt Label7
L_00c1: newobj Void .ctor()
L_00c6: stloc.0
L_00c7: ldc.i4.0
L_00c8: stloc.2
L_00c9: br Label8
L_00ce: Label9
L_00ce: ldarg.0
L_00cf: call BattleTech.ChassisDef get_Chassis()
L_00d4: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_00d9: ldloc.2
L_00da: ldelem.ref
L_00db: ldnull
L_00dc: newobj Void .ctor(MechComponentRef, String)
L_00e1: stloc.3
L_00e2: ldloc.3
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.Data.DataManager dataManager
L_00e9: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_00ee: ldloc.3
L_00ef: callvirt Void RefreshComponentDef()
L_00f4: ldloc.3
L_00f5: ldstr "FixedEquipment-{0}"
L_00fa: call System.Guid NewGuid()
L_00ff: stloc.s 4 (System.Guid)
L_0101: ldloca.s 4 (System.Guid)
L_0103: constrained. System.Guid
L_0109: callvirt System.String ToString()
L_010e: call System.String Format(System.String, System.Object)
L_0113: callvirt Void SetSimGameUID(System.String)
L_0118: ldloc.0
L_0119: ldloc.3
L_011a: callvirt Void Add(BattleTech.MechComponentRef)
L_011f: ldloc.2
L_0120: ldc.i4.1
L_0121: add
L_0122: stloc.2
L_0123: Label8
L_0123: ldloc.2
L_0124: ldarg.0
L_0125: call BattleTech.ChassisDef get_Chassis()
L_012a: callvirt BattleTech.MechComponentRef[] get_FixedEquipment()
L_012f: ldlen
L_0130: conv.i4
L_0131: blt Label9
L_0136: ldloc.0
L_0137: ldarg.0
L_0138: ldfld BattleTech.MechComponentRef[] inventory
L_013d: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef])
L_0142: ldarg.0
L_0143: ldloc.0
L_0144: callvirt BattleTech.MechComponentRef[] ToArray()
L_0149: stfld BattleTech.MechComponentRef[] inventory
L_014e: Label2
L_014e: Label3
L_014e: Label10
L_014e: Label11
L_014e: Label0
L_014e: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.String
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String
L_0000: Local var 9: BattleTech.ComponentType
L_0000: Local var 10: BattleTech.WeaponType
L_0000: Local var 11: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldnull
L_0001: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0003: ldstr "MechLab - {0} - {1}"
L_0008: ldc.i4.2
L_0009: newarr System.Object
L_000e: dup
L_000f: ldc.i4.0
L_0010: ldarg.3
L_0011: brtrue Label1
L_0016: ldstr "RemoveComponent"
L_001b: br Label2
L_0020: Label1
L_0020: ldstr "InstallComponent"
L_0025: Label2
L_0025: stelem.ref
L_0026: dup
L_0027: ldc.i4.1
L_0028: ldarg.0
L_0029: call System.String GenerateSimGameUID()
L_002e: stelem.ref
L_002f: call System.String T(System.String, System.Object[])
L_0034: stloc.0
L_0035: ldarg.2
L_0036: callvirt System.String get_SimGameUID()
L_003b: stloc.1
L_003c: ldloc.1
L_003d: call Boolean IsNullOrEmpty(System.String)
L_0042: brfalse Label3
L_0047: ldarg.0
L_0048: call System.String GenerateSimGameUID()
L_004d: stloc.1
L_004e: Label3
L_004e: ldarg.2
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt BattleTech.ComponentType get_ComponentType()
L_0059: stloc.s 9 (BattleTech.ComponentType)
L_005b: ldloc.s 9 (BattleTech.ComponentType)
L_005d: ldc.i4.1
L_005e: sub
L_005f: switch Labels4,5,6,7
L_0074: br Label8
L_0079: Label5
L_0079: ldarg.0
L_007a: call BattleTech.SimGameConstants get_Constants()
L_007f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0084: ldfld System.Int32 AmmoInstallTechPoints
L_0089: stloc.2
L_008a: ldarg.0
L_008b: call BattleTech.SimGameConstants get_Constants()
L_0090: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0095: ldfld System.Int32 AmmoInstallCost
L_009a: stloc.3
L_009b: br Label9
L_00a0: Label6
L_00a0: ldarg.0
L_00a1: call BattleTech.SimGameConstants get_Constants()
L_00a6: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00ab: ldfld System.Int32 HeatSinkInstallTechPoints
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: call BattleTech.SimGameConstants get_Constants()
L_00b7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00bc: ldfld System.Int32 HeatSinkInstallCost
L_00c1: stloc.3
L_00c2: br Label10
L_00c7: Label7
L_00c7: ldarg.0
L_00c8: call BattleTech.SimGameConstants get_Constants()
L_00cd: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00d2: ldfld System.Int32 JumpJetInstallTechPoints
L_00d7: stloc.2
L_00d8: ldarg.0
L_00d9: call BattleTech.SimGameConstants get_Constants()
L_00de: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_00e3: ldfld System.Int32 JumpJetInstallCost
L_00e8: stloc.3
L_00e9: br Label11
L_00ee: Label4
L_00ee: ldarg.2
L_00ef: callvirt BattleTech.MechComponentDef get_Def()
L_00f4: castclass BattleTech.WeaponDef
L_00f9: callvirt BattleTech.WeaponType get_Type()
L_00fe: stloc.s 10 (BattleTech.WeaponType)
L_0100: ldloc.s 10 (BattleTech.WeaponType)
L_0102: ldc.i4.1
L_0103: sub
L_0104: switch Labels12,13,14,15,16,17,18,19
L_0129: br Label20
L_012e: Label12
L_012e: Label13
L_012e: Label19
L_012e: ldarg.0
L_012f: call BattleTech.SimGameConstants get_Constants()
L_0134: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0139: ldfld System.Int32 BallisticInstallTechPoints
L_013e: stloc.2
L_013f: ldarg.0
L_0140: call BattleTech.SimGameConstants get_Constants()
L_0145: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_014a: ldfld System.Int32 BallisticInstallCost
L_014f: stloc.3
L_0150: br Label21
L_0155: Label16
L_0155: Label17
L_0155: ldarg.0
L_0156: call BattleTech.SimGameConstants get_Constants()
L_015b: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0160: ldfld System.Int32 MissileInstallTechPoints
L_0165: stloc.2
L_0166: ldarg.0
L_0167: call BattleTech.SimGameConstants get_Constants()
L_016c: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0171: ldfld System.Int32 MissileInstallCost
L_0176: stloc.3
L_0177: br Label22
L_017c: Label14
L_017c: Label15
L_017c: ldarg.0
L_017d: call BattleTech.SimGameConstants get_Constants()
L_0182: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0187: ldfld System.Int32 EnergyInstallTechPoints
L_018c: stloc.2
L_018d: ldarg.0
L_018e: call BattleTech.SimGameConstants get_Constants()
L_0193: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0198: ldfld System.Int32 EnergyInstallCost
L_019d: stloc.3
L_019e: br Label23
L_01a3: Label18
L_01a3: ldarg.0
L_01a4: call BattleTech.SimGameConstants get_Constants()
L_01a9: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01ae: ldfld System.Int32 APInstallTechPoints
L_01b3: stloc.2
L_01b4: ldarg.0
L_01b5: call BattleTech.SimGameConstants get_Constants()
L_01ba: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01bf: ldfld System.Int32 APInstallCost
L_01c4: stloc.3
L_01c5: br Label24
L_01ca: Label20
L_01ca: ldarg.0
L_01cb: call BattleTech.SimGameConstants get_Constants()
L_01d0: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01d5: ldfld System.Int32 OtherInstallTechPoints
L_01da: stloc.2
L_01db: ldarg.0
L_01dc: call BattleTech.SimGameConstants get_Constants()
L_01e1: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01e6: ldfld System.Int32 OtherInstallCost
L_01eb: stloc.3
L_01ec: br Label25
L_01f1: Label8
L_01f1: ldarg.0
L_01f2: call BattleTech.SimGameConstants get_Constants()
L_01f7: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_01fc: ldfld System.Int32 OtherInstallTechPoints
L_0201: stloc.2
L_0202: ldarg.0
L_0203: call BattleTech.SimGameConstants get_Constants()
L_0208: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_020d: ldfld System.Int32 OtherInstallCost
L_0212: stloc.3
L_0213: Label9
L_0213: Label10
L_0213: Label11
L_0213: Label21
L_0213: Label22
L_0213: Label23
L_0213: Label24
L_0213: Label25
L_0213: ldarg.3
L_0214: brtrue Label26
L_0219: ldarg.0
L_021a: call BattleTech.SimGameConstants get_Constants()
L_021f: callvirt BattleTech.MechLabConstantsDef get_MechLab()
L_0224: ldfld System.Int32 UninstallTechPoints
L_0229: stloc.2
L_022a: Label26
L_022a: ldloc.2
L_022b: ldarg.2
L_022c: callvirt BattleTech.MechComponentDef get_Def()
L_0231: callvirt Int32 get_InventorySize()
L_0236: mul
L_0237: stloc.s 4 (System.Int32)
L_0239: ldloc.3
L_023a: ldarg.2
L_023b: callvirt BattleTech.MechComponentDef get_Def()
L_0240: callvirt Int32 get_InventorySize()
L_0245: mul
L_0246: stloc.s 5 (System.Int32)
L_0248: ldstr ""
L_024d: stloc.s 6 (System.String)
L_024f: ldarg.2
L_0250: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0255: ldc.i4.4
L_0256: bne.un Label27
L_025b: ldstr " Destroyed"
L_0260: stloc.s 6 (System.String)
L_0262: ldc.i4.0
L_0263: stloc.s 5 (System.Int32)
L_0265: Label27
L_0265: ldarg.3
L_0266: brtrue Label28
L_026b: ldstr "Remove"
L_0270: call System.String T(System.String)
L_0275: br Label29
L_027a: Label28
L_027a: ldstr "Install"
L_027f: call System.String T(System.String)
L_0284: Label29
L_0284: stloc.s 7 (System.String)
L_0286: ldarg.3
L_0287: brtrue Label30
L_028c: ldstr ""
L_0291: br Label31
L_0296: Label30
L_0296: ldarga.s 3
L_0298: constrained. BattleTech.ChassisLocations
L_029e: callvirt System.String ToString()
L_02a3: Label31
L_02a3: stloc.s 8 (System.String)
L_02a5: ldloc.0
L_02a6: ldstr "{0}{1} {2} Component - {3}"
L_02ab: ldc.i4.4
L_02ac: newarr System.Object
L_02b1: dup
L_02b2: ldc.i4.0
L_02b3: ldloc.s 7 (System.String)
L_02b5: stelem.ref
L_02b6: dup
L_02b7: ldc.i4.1
L_02b8: ldloc.s 6 (System.String)
L_02ba: stelem.ref
L_02bb: dup
L_02bc: ldc.i4.2
L_02bd: ldloc.s 8 (System.String)
L_02bf: stelem.ref
L_02c0: dup
L_02c1: ldc.i4.3
L_02c2: ldarg.2
L_02c3: callvirt BattleTech.MechComponentDef get_Def()
L_02c8: callvirt BattleTech.DescriptionDef get_Description()
L_02cd: callvirt System.String get_Name()
L_02d2: stelem.ref
L_02d3: call System.String T(System.String, System.Object[])
L_02d8: ldarg.1
L_02d9: ldarg.2
L_02da: ldloc.s 4 (System.Int32)
L_02dc: ldloc.1
L_02dd: ldarg.3
L_02de: ldarg.s 4
L_02e0: ldarg.2
L_02e1: callvirt Int32 get_HardpointSlot()
L_02e6: ldloc.s 5 (System.Int32)
L_02e8: ldstr ""
L_02ed: newobj Void .ctor(String, String, String, MechComponentRef, Int32, String, ChassisLocations, ChassisLocations, Int32, Int32, String)
L_02f2: stloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_02f4: ldarg.0
L_02f5: ldarg 1
L_02fb: ldarg 2
L_0301: ldarg 3
L_0307: ldarg 4
L_030d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_030f: call Void Postfix(BattleTech.SimGameState, System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, BattleTech.WorkOrderEntry_InstallComponent)
L_0314: ldarg.0
L_0315: ldarg 2
L_031b: ldarg 3
L_0321: ldarg 4
L_0327: ldarg 1
L_032d: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_032f: call Void FixCost(BattleTech.SimGameState, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations, System.String, BattleTech.WorkOrderEntry_InstallComponent)
L_0334: ldloc 11 (BattleTech.WorkOrderEntry_InstallComponent)
L_0336: ret
DONE

### Patch BattleTech.Data.DataManager, Void Clear(Boolean, Boolean, Boolean, Boolean, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg 1
L_0006: call Void Prefix(Boolean)
L_000b: ldarg.s 5
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: newobj Void .ctor()
L_0018: stfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] activeLoadBatches
L_001d: ldarg.0
L_001e: newobj Void .ctor()
L_0023: stfld System.Collections.Generic.Dictionary`2[BattleTech.VersionManifestEntry,System.Collections.Generic.List`1[BattleTech.Data.LoadRequest]] activeBatchManifestMap
L_0028: ldarg.0
L_0029: newobj Void .ctor()
L_002e: stfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+InjectedDependencyLoadRequest] injectedDepenencyLoaders
L_0033: ldarg.0
L_0034: newobj Void .ctor()
L_0039: stfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] loadRequestCache
L_003e: ldc.i4.0
L_003f: stloc.0
L_0040: br Label2
L_0045: Label3
L_0045: ldarg.0
L_0046: ldfld System.Collections.Generic.List`1[BattleTech.Data.LoadRequest] loadRequestCache
L_004b: ldarg.0
L_004c: newobj Void .ctor(DataManager)
L_0051: callvirt Void Add(BattleTech.Data.LoadRequest)
L_0056: ldloc.0
L_0057: ldc.i4.1
L_0058: add
L_0059: stloc.0
L_005a: Label2
L_005a: ldloc.0
L_005b: ldc.i4.s 100
L_005d: blt Label3
L_0062: ldarg.0
L_0063: newobj Void .ctor()
L_0068: stfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+DependencyLoadRequest] dependencyLoadRequestCache
L_006d: ldc.i4.0
L_006e: stloc.1
L_006f: br Label4
L_0074: Label5
L_0074: ldarg.0
L_0075: ldfld System.Collections.Generic.List`1[BattleTech.Data.DataManager+DependencyLoadRequest] dependencyLoadRequestCache
L_007a: ldarg.0
L_007b: newobj Void .ctor(DataManager)
L_0080: callvirt Void Add(DependencyLoadRequest)
L_0085: ldloc.1
L_0086: ldc.i4.1
L_0087: add
L_0088: stloc.1
L_0089: Label4
L_0089: ldloc.1
L_008a: ldc.i4.s 100
L_008c: blt Label5
L_0091: Label1
L_0091: ldarg.1
L_0092: brfalse Label6
L_0097: ldarg.0
L_0098: call Void ClearBTDefs()
L_009d: Label6
L_009d: ldarg.2
L_009e: brfalse Label7
L_00a3: ldarg.0
L_00a4: call BattleTech.Data.SpriteCache get_SpriteCache()
L_00a9: ldnull
L_00aa: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00af: brfalse Label8
L_00b4: ldarg.0
L_00b5: call BattleTech.Data.SpriteCache get_SpriteCache()
L_00ba: callvirt Void Clear()
L_00bf: Label8
L_00bf: ldarg.0
L_00c0: call BattleTech.Data.TextureManager get_TextureManager()
L_00c5: ldnull
L_00c6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00cb: brfalse Label9
L_00d0: ldarg.0
L_00d1: call BattleTech.Data.TextureManager get_TextureManager()
L_00d6: callvirt Void Clear()
L_00db: Label9
L_00db: ldarg.0
L_00dc: call BattleTech.Data.SVGCache get_SVGCache()
L_00e1: ldnull
L_00e2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00e7: brfalse Label10
L_00ec: ldarg.0
L_00ed: call BattleTech.Data.SVGCache get_SVGCache()
L_00f2: callvirt Void Clear()
L_00f7: Label10
L_00f7: ldarg.0
L_00f8: call BattleTech.Portraits.PortraitManager get_PortraitManager()
L_00fd: ldnull
L_00fe: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0103: brfalse Label11
L_0108: ldarg.0
L_0109: call BattleTech.Portraits.PortraitManager get_PortraitManager()
L_010e: callvirt Void Clear()
L_0113: Label7
L_0113: Label11
L_0113: ldarg.s 4
L_0115: brfalse Label12
L_011a: ldarg.0
L_011b: call BattleTech.Assetbundles.AssetBundleManager get_AssetBundleManager()
L_0120: ldnull
L_0121: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0126: brfalse Label13
L_012b: ldarg.0
L_012c: call BattleTech.Assetbundles.AssetBundleManager get_AssetBundleManager()
L_0131: callvirt Void AutoUnloadAll()
L_0136: Label12
L_0136: Label13
L_0136: ldarg.3
L_0137: brfalse Label14
L_013c: ldarg.0
L_013d: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0142: ldnull
L_0143: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0148: brfalse Label15
L_014d: ldarg.0
L_014e: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0153: ldnull
L_0154: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0159: brfalse Label16
L_015e: ldarg.0
L_015f: call BattleTech.Data.PrefabCache get_GameObjectPool()
L_0164: callvirt Void Clear()
L_0169: Label14
L_0169: Label15
L_0169: Label16
L_0169: call UnityEngine.AsyncOperation UnloadUnusedAssets()
L_016e: pop
L_016f: ret
DONE

### Harmony id=io.github.denadan.CustomSalvage, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from CustomSalvage.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\CustomSalvage\CustomSalvage.dll
### At 2019-09-15 05.27.28
### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg 1
L_002f: ldarg 2
L_0035: ldarg 3
L_003b: ldarg 4
L_0041: ldarg.0
L_0042: ldarg.0
L_0043: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0048: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_004d: brfalse Label0
L_0052: ldarg.0
L_0053: ldarg.s 4
L_0055: stfld System.Boolean loggingSalvageResults
L_005a: ldarg.0
L_005b: call BattleTech.GameInstance get_BattleTechGame()
L_0060: callvirt BattleTech.SimGameState get_Simulation()
L_0065: brtrue Label1
L_006a: ldsfld HBS.Logging.ILog logger
L_006f: ldstr "Can't generate salvage without sim game."
L_0074: callvirt Void LogError(System.Object)
L_0079: br Label57
L_007e: Label1
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0089: ldarg.0
L_008a: newobj Void .ctor()
L_008f: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0094: ldarg.0
L_0095: newobj Void .ctor()
L_009a: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_009f: ldarg.0
L_00a0: newobj Void .ctor()
L_00a5: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_00aa: ldarg.0
L_00ab: call BattleTech.GameInstance get_BattleTechGame()
L_00b0: callvirt BattleTech.SimGameState get_Simulation()
L_00b5: stloc.0
L_00b6: ldloc.0
L_00b7: callvirt BattleTech.SimGameConstants get_Constants()
L_00bc: stloc.1
L_00bd: ldc.i4.0
L_00be: stloc.s 8 (System.Int32)
L_00c0: br Label2
L_00c5: Label9
L_00c5: ldarg.3
L_00c6: ldloc.s 8 (System.Int32)
L_00c8: callvirt BattleTech.UnitResult get_Item(Int32)
L_00cd: ldfld BattleTech.MechDef mech
L_00d2: stloc.s 9 (BattleTech.MechDef)
L_00d4: ldloc.0
L_00d5: callvirt NetworkRandom get_NetworkRandom()
L_00da: ldc.r4 0
L_00df: ldc.r4 1
L_00e4: callvirt Single Float(Single, Single)
L_00e9: stloc.s 10 (System.Single)
L_00eb: ldloc.s 10 (System.Single)
L_00ed: ldloc.1
L_00ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00f3: ldfld System.Single DestroyedMechRecoveryChance
L_00f8: cgt.un
L_00fa: ldc.i4.0
L_00fb: ceq
L_00fd: stloc.s 11 (System.Boolean)
L_00ff: ldsfld HBS.Logging.ILog logger
L_0104: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_0109: ldloc.s 8 (System.Int32)
L_010b: box System.Int32
L_0110: ldloc.s 9 (BattleTech.MechDef)
L_0112: callvirt BattleTech.DescriptionDef get_Description()
L_0117: callvirt System.String get_Name()
L_011c: ldloc.s 9 (BattleTech.MechDef)
L_011e: ldc.i4.8
L_011f: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0124: box System.Boolean
L_0129: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012e: callvirt Void LogWarning(System.Object)
L_0133: ldsfld HBS.Logging.ILog logger
L_0138: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_013d: ldloc.s 10 (System.Single)
L_013f: box System.Single
L_0144: ldloc.1
L_0145: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_014a: ldfld System.Single DestroyedMechRecoveryChance
L_014f: box System.Single
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: callvirt Void LogWarning(System.Object)
L_015e: ldloc.s 9 (BattleTech.MechDef)
L_0160: ldc.i4.8
L_0161: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0166: ldc.i4.0
L_0167: ceq
L_0169: ldloc.s 11 (System.Boolean)
L_016b: or
L_016c: brfalse Label3
L_0171: ldsfld HBS.Logging.ILog logger
L_0176: ldstr "Recovery Succeeded"
L_017b: callvirt Void LogWarning(System.Object)
L_0180: ldarg.3
L_0181: ldloc.s 8 (System.Int32)
L_0183: callvirt BattleTech.UnitResult get_Item(Int32)
L_0188: ldc.i4.0
L_0189: stfld System.Boolean mechLost
L_018e: br Label4
L_0193: Label3
L_0193: ldsfld HBS.Logging.ILog logger
L_0198: ldstr "Recovery Failed, Unit Lost"
L_019d: callvirt Void LogWarning(System.Object)
L_01a2: ldarg.3
L_01a3: ldloc.s 8 (System.Int32)
L_01a5: callvirt BattleTech.UnitResult get_Item(Int32)
L_01aa: ldc.i4.1
L_01ab: stfld System.Boolean mechLost
L_01b0: ldloc.s 9 (BattleTech.MechDef)
L_01b2: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_01b7: stloc.s 12 (BattleTech.MechComponentRef[])
L_01b9: ldc.i4.0
L_01ba: stloc.s 13 (System.Int32)
L_01bc: br Label5
L_01c1: Label8
L_01c1: ldloc.s 12 (BattleTech.MechComponentRef[])
L_01c3: ldloc.s 13 (System.Int32)
L_01c5: ldelem.ref
L_01c6: stloc.s 14 (BattleTech.MechComponentRef)
L_01c8: ldloc.s 9 (BattleTech.MechDef)
L_01ca: ldloc.s 14 (BattleTech.MechComponentRef)
L_01cc: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d1: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_01d6: brtrue Label6
L_01db: ldloc.s 14 (BattleTech.MechComponentRef)
L_01dd: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01e2: ldc.i4.4
L_01e3: beq Label7
L_01e8: newobj Void .ctor()
L_01ed: stloc.s 15 (BattleTech.SalvageDef)
L_01ef: ldloc.s 15 (BattleTech.SalvageDef)
L_01f1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01f3: callvirt BattleTech.MechComponentDef get_Def()
L_01f8: stfld BattleTech.MechComponentDef MechComponentDef
L_01fd: ldloc.s 15 (BattleTech.SalvageDef)
L_01ff: ldloc.s 14 (BattleTech.MechComponentRef)
L_0201: callvirt BattleTech.MechComponentDef get_Def()
L_0206: callvirt BattleTech.DescriptionDef get_Description()
L_020b: newobj Void .ctor(DescriptionDef)
L_0210: stfld BattleTech.DescriptionDef Description
L_0215: ldloc.s 15 (BattleTech.SalvageDef)
L_0217: ldarg.0
L_0218: call System.String GenerateRewardUID()
L_021d: stfld System.String RewardID
L_0222: ldloc.s 15 (BattleTech.SalvageDef)
L_0224: ldc.i4.1
L_0225: stfld BattleTech.SalvageDef+SalvageType Type
L_022a: ldloc.s 15 (BattleTech.SalvageDef)
L_022c: ldloc.s 14 (BattleTech.MechComponentRef)
L_022e: callvirt BattleTech.MechComponentDef get_Def()
L_0233: callvirt BattleTech.ComponentType get_ComponentType()
L_0238: stfld BattleTech.ComponentType ComponentType
L_023d: ldloc.s 15 (BattleTech.SalvageDef)
L_023f: ldc.i4.0
L_0240: stfld System.Boolean Damaged
L_0245: ldloc.s 15 (BattleTech.SalvageDef)
L_0247: ldc.i4.1
L_0248: stfld System.Int32 Count
L_024d: ldarg.0
L_024e: ldloc.s 15 (BattleTech.SalvageDef)
L_0250: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_0255: Label6
L_0255: Label7
L_0255: ldloc.s 13 (System.Int32)
L_0257: ldc.i4.1
L_0258: add
L_0259: stloc.s 13 (System.Int32)
L_025b: Label5
L_025b: ldloc.s 13 (System.Int32)
L_025d: ldloc.s 12 (BattleTech.MechComponentRef[])
L_025f: ldlen
L_0260: conv.i4
L_0261: blt Label8
L_0266: Label4
L_0266: ldloc.s 8 (System.Int32)
L_0268: ldc.i4.1
L_0269: add
L_026a: stloc.s 8 (System.Int32)
L_026c: Label2
L_026c: ldloc.s 8 (System.Int32)
L_026e: ldarg.3
L_026f: callvirt Int32 get_Count()
L_0274: blt Label9
L_0279: ldc.i4.0
L_027a: stloc.s 16 (System.Int32)
L_027c: br Label10
L_0281: Label36
L_0281: ldarg.1
L_0282: ldloc.s 16 (System.Int32)
L_0284: callvirt BattleTech.UnitResult get_Item(Int32)
L_0289: ldfld BattleTech.MechDef mech
L_028e: stloc.s 17 (BattleTech.MechDef)
L_0290: ldarg.1
L_0291: ldloc.s 16 (System.Int32)
L_0293: callvirt BattleTech.UnitResult get_Item(Int32)
L_0298: ldfld BattleTech.Pilot pilot
L_029d: stloc.s 18 (BattleTech.Pilot)
L_029f: ldnull
L_02a0: stloc.s 19 (BattleTech.SalvageDef)
L_02a2: ldc.i4.0
L_02a3: stloc.s 20 (System.Boolean)
L_02a5: ldc.i4.0
L_02a6: stloc.s 21 (System.Boolean)
L_02a8: ldloc.s 17 (BattleTech.MechDef)
L_02aa: ldc.i4.8
L_02ab: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02b0: brfalse Label11
L_02b5: ldarg.0
L_02b6: ldloc.1
L_02b7: ldloc.s 17 (BattleTech.MechDef)
L_02b9: ldc.i4.1
L_02ba: ldarg.0
L_02bb: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02c0: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02c5: br Label12
L_02ca: Label11
L_02ca: ldloc.s 17 (BattleTech.MechDef)
L_02cc: ldc.i4.s 64
L_02ce: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02d3: brfalse Label13
L_02d8: ldloc.s 17 (BattleTech.MechDef)
L_02da: ldc.i4 128
L_02df: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_02e4: brfalse Label14
L_02e9: ldc.i4.1
L_02ea: stloc.s 20 (System.Boolean)
L_02ec: ldarg.0
L_02ed: ldloc.1
L_02ee: ldloc.s 17 (BattleTech.MechDef)
L_02f0: ldc.i4.2
L_02f1: ldarg.0
L_02f2: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02f7: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02fc: br Label15
L_0301: Label13
L_0301: Label14
L_0301: ldloc.s 18 (BattleTech.Pilot)
L_0303: callvirt Boolean get_IsIncapacitated()
L_0308: brtrue Label16
L_030d: ldloc.s 17 (BattleTech.MechDef)
L_030f: ldc.i4.1
L_0310: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0315: brfalse Label17
L_031a: Label16
L_031a: ldarg.0
L_031b: ldloc.1
L_031c: ldloc.s 17 (BattleTech.MechDef)
L_031e: ldc.i4.3
L_031f: ldarg.0
L_0320: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0325: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_032a: Label12
L_032a: Label15
L_032a: ldloc.s 17 (BattleTech.MechDef)
L_032c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0331: stloc.s 12 (BattleTech.MechComponentRef[])
L_0333: ldc.i4.0
L_0334: stloc.s 13 (System.Int32)
L_0336: br Label18
L_033b: Label21
L_033b: ldloc.s 12 (BattleTech.MechComponentRef[])
L_033d: ldloc.s 13 (System.Int32)
L_033f: ldelem.ref
L_0340: stloc.s 22 (BattleTech.MechComponentRef)
L_0342: ldloc.s 17 (BattleTech.MechDef)
L_0344: ldloc.s 22 (BattleTech.MechComponentRef)
L_0346: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_034b: callvirt Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0350: brtrue Label19
L_0355: ldloc.s 22 (BattleTech.MechComponentRef)
L_0357: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_035c: ldc.i4.4
L_035d: beq Label20
L_0362: ldarg.0
L_0363: ldarg.0
L_0364: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0369: ldloc.s 22 (BattleTech.MechComponentRef)
L_036b: callvirt BattleTech.MechComponentDef get_Def()
L_0370: ldc.i4.0
L_0371: ldc.i4.0
L_0372: ldloc.1
L_0373: ldloc.0
L_0374: callvirt NetworkRandom get_NetworkRandom()
L_0379: ldc.i4.1
L_037a: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_037f: Label19
L_037f: Label20
L_037f: ldloc.s 13 (System.Int32)
L_0381: ldc.i4.1
L_0382: add
L_0383: stloc.s 13 (System.Int32)
L_0385: Label18
L_0385: ldloc.s 13 (System.Int32)
L_0387: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0389: ldlen
L_038a: conv.i4
L_038b: blt Label21
L_0390: ldloc.s 21 (System.Boolean)
L_0392: brfalse Label22
L_0397: newobj Void .ctor()
L_039c: stloc.s 19 (BattleTech.SalvageDef)
L_039e: ldloc.s 19 (BattleTech.SalvageDef)
L_03a0: ldc.i4.3
L_03a1: stfld BattleTech.SalvageDef+SalvageType Type
L_03a6: ldloc.s 19 (BattleTech.SalvageDef)
L_03a8: ldloc.s 17 (BattleTech.MechDef)
L_03aa: callvirt BattleTech.ChassisDef get_Chassis()
L_03af: callvirt BattleTech.DescriptionDef get_Description()
L_03b4: newobj Void .ctor(DescriptionDef)
L_03b9: stfld BattleTech.DescriptionDef Description
L_03be: ldloc.s 19 (BattleTech.SalvageDef)
L_03c0: ldc.i4.1
L_03c1: stfld System.Int32 Count
L_03c6: ldtoken BattleTech.ChassisLocations
L_03cb: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03d0: call System.Array GetValues(System.Type)
L_03d5: callvirt System.Collections.IEnumerator GetEnumerator()
L_03da: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03dc: br Label23
	L_03e1: Label30
	L_03e1: ldloc.s 23 (System.Collections.IEnumerator)
	L_03e3: callvirt System.Object get_Current()
	L_03e8: unbox.any BattleTech.ChassisLocations
	L_03ed: stloc.s 24 (BattleTech.ChassisLocations)
	L_03ef: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f1: brfalse Label24
	L_03f6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f8: ldc.i4 255
	L_03fd: beq Label25
	L_0402: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0404: ldc.i4.s 34
	L_0406: beq Label26
	L_040b: ldloc.s 24 (BattleTech.ChassisLocations)
	L_040d: ldc.i4 192
	L_0412: beq Label27
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: ldc.i4.s 28
	L_041b: beq Label28
	L_0420: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0422: ldc.i4.s 62
	L_0424: beq Label29
	L_0429: ldloc.s 19 (BattleTech.SalvageDef)
	L_042b: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0430: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0432: callvirt Void Add(BattleTech.ChassisLocations)
	L_0437: ldloc.s 19 (BattleTech.SalvageDef)
	L_0439: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_043e: ldloc.s 17 (BattleTech.MechDef)
	L_0440: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0442: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_0447: ldfld System.Single CurrentInternalStructure
	L_044c: callvirt Void Add(Single)
	L_0451: Label23
	L_0451: Label24
	L_0451: Label25
	L_0451: Label26
	L_0451: Label27
	L_0451: Label28
	L_0451: Label29
	L_0451: ldloc.s 23 (System.Collections.IEnumerator)
	L_0453: callvirt Boolean MoveNext()
	L_0458: brtrue Label30
	L_045d: leave Label31
	L_0462: leave (autogenerated)
} // end try
.finally
{
	L_0467: ldloc.s 23 (System.Collections.IEnumerator)
	L_0469: isinst System.IDisposable
	L_046e: stloc.s 25 (System.IDisposable)
	L_0470: ldloc.s 25 (System.IDisposable)
	L_0472: brfalse Label32
	L_0477: ldloc.s 25 (System.IDisposable)
	L_0479: callvirt Void Dispose()
	L_047e: Label32
	L_047e: endfinally
	L_047f: leave (autogenerated)
} // end handler
L_0480: Label31
L_0480: ldloc.s 20 (System.Boolean)
L_0482: brfalse Label33
L_0487: ldc.i4.0
L_0488: stloc.s 26 (System.Int32)
L_048a: br Label34
L_048f: Label35
L_048f: ldloc.s 19 (BattleTech.SalvageDef)
L_0491: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_0496: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0498: ldloc.s 26 (System.Int32)
L_049a: stloc.s 13 (System.Int32)
L_049c: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_049e: ldloc.s 13 (System.Int32)
L_04a0: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_04a2: ldloc.s 13 (System.Int32)
L_04a4: callvirt Single get_Item(Int32)
L_04a9: ldc.r4 2
L_04ae: div
L_04af: callvirt Void set_Item(Int32, Single)
L_04b4: ldloc.s 26 (System.Int32)
L_04b6: ldc.i4.1
L_04b7: add
L_04b8: stloc.s 26 (System.Int32)
L_04ba: Label34
L_04ba: ldloc.s 26 (System.Int32)
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_04c3: callvirt Int32 get_Count()
L_04c8: blt Label35
L_04cd: Label33
L_04cd: ldloc.s 19 (BattleTech.SalvageDef)
L_04cf: ldloc.1
L_04d0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04d5: ldfld System.Int32 DefaultChassisWeight
L_04da: stfld System.Int32 Weight
L_04df: ldarg.0
L_04e0: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04e5: ldloc.s 19 (BattleTech.SalvageDef)
L_04e7: callvirt Void Add(BattleTech.SalvageDef)
L_04ec: Label17
L_04ec: Label22
L_04ec: ldloc.s 16 (System.Int32)
L_04ee: ldc.i4.1
L_04ef: add
L_04f0: stloc.s 16 (System.Int32)
L_04f2: Label10
L_04f2: ldloc.s 16 (System.Int32)
L_04f4: ldarg.1
L_04f5: callvirt Int32 get_Count()
L_04fa: blt Label36
L_04ff: ldc.i4.0
L_0500: stloc.s 28 (System.Int32)
L_0502: br Label37
L_0507: Label42
L_0507: ldarg.2
L_0508: ldloc.s 28 (System.Int32)
L_050a: callvirt BattleTech.VehicleDef get_Item(Int32)
L_050f: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_0514: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_0519: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_051b: br Label38
	L_0520: Label39
	L_0520: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0522: callvirt BattleTech.VehicleComponentRef get_Current()
	L_0527: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0529: ldarg.0
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0530: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0532: callvirt BattleTech.MechComponentDef get_Def()
	L_0537: ldc.i4.0
	L_0538: ldc.i4.0
	L_0539: ldloc.1
	L_053a: ldloc.0
	L_053b: callvirt NetworkRandom get_NetworkRandom()
	L_0540: ldc.i4.1
	L_0541: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_0546: Label38
	L_0546: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0548: callvirt Boolean MoveNext()
	L_054d: brtrue Label39
	L_0552: leave Label40
	L_0557: leave (autogenerated)
} // end try
.finally
{
	L_055c: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_055e: brfalse Label41
	L_0563: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0565: callvirt Void Dispose()
	L_056a: Label41
	L_056a: endfinally
	L_056b: leave (autogenerated)
} // end handler
L_056c: Label40
L_056c: ldloc.s 28 (System.Int32)
L_056e: ldc.i4.1
L_056f: add
L_0570: stloc.s 28 (System.Int32)
L_0572: Label37
L_0572: ldloc.s 28 (System.Int32)
L_0574: ldarg.2
L_0575: callvirt Int32 get_Count()
L_057a: blt Label42
L_057f: ldarg.0
L_0580: ldarg.0
L_0581: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0586: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_058b: ldarg.0
L_058c: call Int32 get_SalvagePotential()
L_0591: stloc.2
L_0592: ldloc.1
L_0593: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0598: ldfld System.Single VictorySalvageChance
L_059d: stloc.3
L_059e: ldloc.1
L_059f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a4: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_05a9: stloc.s 4 (System.Single)
L_05ab: ldarg.0
L_05ac: call ContractState get_State()
L_05b1: ldc.i4.5
L_05b2: bne.un Label43
L_05b7: ldloc.1
L_05b8: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05bd: ldfld System.Single DefeatSalvageChance
L_05c2: stloc.3
L_05c3: ldloc.1
L_05c4: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05c9: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05ce: stloc.s 4 (System.Single)
L_05d0: br Label44
L_05d5: Label43
L_05d5: ldarg.0
L_05d6: call ContractState get_State()
L_05db: ldc.i4.4
L_05dc: bne.un Label45
L_05e1: ldloc.1
L_05e2: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05e7: ldfld System.Single RetreatSalvageChance
L_05ec: stloc.3
L_05ed: ldloc.1
L_05ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05f3: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05f8: stloc.s 4 (System.Single)
L_05fa: Label44
L_05fa: Label45
L_05fa: ldloc.3
L_05fb: stloc.s 5 (System.Single)
L_05fd: ldloc.2
L_05fe: conv.r4
L_05ff: ldarg.0
L_0600: call Single get_PercentageContractSalvage()
L_0605: mul
L_0606: stloc.s 6 (System.Single)
L_0608: ldloc.2
L_0609: ldc.i4.0
L_060a: ble Label46
L_060f: ldloc.s 6 (System.Single)
L_0611: ldloc.1
L_0612: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0617: ldfld System.Int32 ContractFloorSalvageBonus
L_061c: conv.r4
L_061d: add
L_061e: stloc.s 6 (System.Single)
L_0620: Label46
L_0620: ldc.r4 0
L_0625: ldloc.s 5 (System.Single)
L_0627: ldloc.s 4 (System.Single)
L_0629: ldarg.3
L_062a: callvirt Int32 get_Count()
L_062f: conv.r4
L_0630: mul
L_0631: sub
L_0632: call Single Max(Single, Single)
L_0637: stloc.3
L_0638: ldloc.s 6 (System.Single)
L_063a: conv.r4
L_063b: ldloc.3
L_063c: mul
L_063d: call Int32 FloorToInt(Single)
L_0642: stloc.s 7 (System.Int32)
L_0644: ldloc.2
L_0645: ldc.i4.0
L_0646: ble Label47
L_064b: ldloc.2
L_064c: ldloc.1
L_064d: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0652: ldfld System.Int32 ContractFloorSalvageBonus
L_0657: add
L_0658: stloc.2
L_0659: Label47
L_0659: ldarg.0
L_065a: ldloc.s 7 (System.Int32)
L_065c: call Void set_FinalSalvageCount(Int32)
L_0661: ldarg.0
L_0662: ldc.i4.7
L_0663: ldloc.s 7 (System.Int32)
L_0665: conv.r4
L_0666: ldloc.1
L_0667: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_066c: ldfld System.Single PrioritySalvageModifier
L_0671: mul
L_0672: call Int32 FloorToInt(Single)
L_0677: call Int32 Min(Int32, Int32)
L_067c: call Void set_FinalPrioritySalvageCount(Int32)
L_0681: ldarg.0
L_0682: ldfld System.Boolean loggingSalvageResults
L_0687: brfalse Label48
L_068c: ldarg.0
L_068d: ldstr "Salvage"
L_0692: call Void PushReport(System.String)
L_0697: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_069c: ldc.i4.6
L_069d: newarr System.Object
L_06a2: dup
L_06a3: ldc.i4.0
L_06a4: ldloc.2
L_06a5: box System.Int32
L_06aa: stelem.ref
L_06ab: dup
L_06ac: ldc.i4.1
L_06ad: ldloc.s 5 (System.Single)
L_06af: box System.Single
L_06b4: stelem.ref
L_06b5: dup
L_06b6: ldc.i4.2
L_06b7: ldarg.3
L_06b8: callvirt Int32 get_Count()
L_06bd: box System.Int32
L_06c2: stelem.ref
L_06c3: dup
L_06c4: ldc.i4.3
L_06c5: ldloc.3
L_06c6: box System.Single
L_06cb: stelem.ref
L_06cc: dup
L_06cd: ldc.i4.4
L_06ce: ldloc.s 7 (System.Int32)
L_06d0: box System.Int32
L_06d5: stelem.ref
L_06d6: dup
L_06d7: ldc.i4.5
L_06d8: ldarg.0
L_06d9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06de: callvirt Int32 get_Count()
L_06e3: box System.Int32
L_06e8: stelem.ref
L_06e9: call System.String Format(System.String, System.Object[])
L_06ee: stloc.s 31 (System.String)
L_06f0: ldarg.0
L_06f1: ldloc.s 31 (System.String)
L_06f3: call Void ReportLog(System.String)
L_06f8: ldarg.0
L_06f9: ldstr "Potential Salvage"
L_06fe: call Void PushReport(System.String)
L_0703: ldarg.0
L_0704: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0709: callvirt Enumerator GetEnumerator()
L_070e: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_0710: br Label49
	L_0715: Label52
	L_0715: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0717: call BattleTech.SalvageDef get_Current()
	L_071c: stloc.s 33 (BattleTech.SalvageDef)
	L_071e: ldarg.0
	L_071f: ldstr "{0} of type {1} in damage state of {2}"
	L_0724: ldloc.s 33 (BattleTech.SalvageDef)
	L_0726: ldfld BattleTech.DescriptionDef Description
	L_072b: callvirt System.String get_Id()
	L_0730: ldloc.s 33 (BattleTech.SalvageDef)
	L_0732: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0737: box BattleTech.SalvageDef+SalvageType
	L_073c: ldloc.s 33 (BattleTech.SalvageDef)
	L_073e: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0743: ldc.i4.3
	L_0744: beq Label50
	L_0749: ldloc.s 33 (BattleTech.SalvageDef)
	L_074b: ldfld System.Boolean Damaged
	L_0750: br Label51
	L_0755: Label50
	L_0755: ldc.i4.1
	L_0756: Label51
	L_0756: box System.Boolean
	L_075b: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0760: call Void ReportLog(System.String)
	L_0765: Label49
	L_0765: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0767: call Boolean MoveNext()
	L_076c: brtrue Label52
	L_0771: leave Label53
	L_0776: leave (autogenerated)
} // end try
.finally
{
	L_077b: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_077d: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_0783: callvirt Void Dispose()
	L_0788: endfinally
	L_0789: leave (autogenerated)
} // end handler
L_078a: Label53
L_078a: ldarg.0
L_078b: call Void PopReport()
L_0790: ldsfld HBS.Logging.ILog logger
L_0795: ldloc.s 31 (System.String)
L_0797: callvirt Void LogWarning(System.Object)
L_079c: Label48
L_079c: ldloc.3
L_079d: ldc.r4 0
L_07a2: beq Label54
L_07a7: ldloc.s 7 (System.Int32)
L_07a9: ldc.i4.1
L_07aa: bge Label55
L_07af: Label54
L_07af: ldarg.0
L_07b0: ldfld System.Boolean loggingSalvageResults
L_07b5: brfalse Label56
L_07ba: ldarg.0
L_07bb: call Void PopReport()
L_07c0: Label55
L_07c0: Label56
L_07c0: Label57
L_07c0: Label0
L_07c0: ret
DONE

### Patch BattleTech.UI.MechBayChassisInfoWidget, Void OnScrapClicked()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.String
L_0000: ldarg.0
L_0001: ldfld BattleTech.ChassisDef selectedChassis
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.MechBayPanel mechBay
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechBayChassisUnitElement chassisElement
L_0012: ldarg.0
L_0013: call Boolean OnReadyClicked(BattleTech.ChassisDef, BattleTech.UI.MechBayPanel, BattleTech.UI.MechBayChassisUnitElement, BattleTech.UI.MechBayChassisInfoWidget)
L_0018: brfalse Label0
L_001d: ldarg.0
L_001e: ldfld BattleTech.ChassisDef selectedChassis
L_0023: brtrue Label1
L_0028: br Label4
L_002d: Label1
L_002d: ldc.r4 1
L_0032: stloc.0
L_0033: ldarg.0
L_0034: ldfld BattleTech.ChassisDef selectedChassis
L_0039: ldfld System.Int32 MechPartCount
L_003e: ldc.i4.0
L_003f: ble Label2
L_0044: ldarg.0
L_0045: ldfld BattleTech.ChassisDef selectedChassis
L_004a: ldfld System.Int32 MechPartCount
L_004f: ldarg.0
L_0050: ldfld BattleTech.ChassisDef selectedChassis
L_0055: callvirt Int32 get_MechPartMax()
L_005a: bge Label3
L_005f: ldc.r4 1
L_0064: ldarg.0
L_0065: ldfld BattleTech.ChassisDef selectedChassis
L_006a: callvirt Int32 get_MechPartMax()
L_006f: conv.r4
L_0070: div
L_0071: stloc.0
L_0072: Label2
L_0072: Label3
L_0072: ldarg.0
L_0073: ldfld BattleTech.ChassisDef selectedChassis
L_0078: callvirt BattleTech.DescriptionDef get_Description()
L_007d: callvirt Int32 get_Cost()
L_0082: conv.r4
L_0083: ldarg.0
L_0084: ldfld BattleTech.UI.MechBayPanel mechBay
L_0089: callvirt BattleTech.SimGameState get_Sim()
L_008e: callvirt BattleTech.SimGameConstants get_Constants()
L_0093: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0098: ldfld System.Single MechScrapModifier
L_009d: mul
L_009e: ldloc.0
L_009f: mul
L_00a0: call Int32 RoundToInt(Single)
L_00a5: call System.String GetCBillString(Int32)
L_00aa: stloc.1
L_00ab: ldstr "Scrap 'Mech?"
L_00b0: ldstr "Are you sure you want to scrap this 'Mech Chassis? It will be removed permanently from your inventory.

SCRAP VALUE: <color=#F79B26FF>{0}</color>"
L_00b5: ldc.i4.1
L_00b6: newarr System.Object
L_00bb: dup
L_00bc: ldc.i4.0
L_00bd: ldloc.1
L_00be: stelem.ref
L_00bf: call System.String T(System.String, System.Object[])
L_00c4: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_00c9: ldstr "Cancel"
L_00ce: ldnull
L_00cf: ldc.i4.1
L_00d0: ldnull
L_00d1: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_00d6: ldstr "Scrap"
L_00db: ldarg.0
L_00dc: ldftn Void ConfirmScrapClicked()
L_00e2: newobj Void .ctor(Object, IntPtr)
L_00e7: ldc.i4.1
L_00e8: ldnull
L_00e9: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_00ee: callvirt BattleTech.UI.GenericPopupBuilder CancelOnEscape()
L_00f3: call BattleTech.UI.UIManager get_Instance()
L_00f8: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00fd: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_0102: newobj Void .ctor(UIColorRef)
L_0107: ldc.r4 0
L_010c: ldc.i4.1
L_010d: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_0112: callvirt BattleTech.UI.GenericPopup Render()
L_0117: pop
L_0118: Label4
L_0118: Label0
L_0118: ret
DONE

### Patch BattleTech.UI.MechBayChassisInfoWidget, Void OnReadyClicked()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: ldfld BattleTech.ChassisDef selectedChassis
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.MechBayPanel mechBay
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechBayChassisUnitElement chassisElement
L_0012: ldarg.0
L_0013: call Boolean OnReadyClicked(BattleTech.ChassisDef, BattleTech.UI.MechBayPanel, BattleTech.UI.MechBayChassisUnitElement, BattleTech.UI.MechBayChassisInfoWidget)
L_0018: brfalse Label0
L_001d: ldarg.0
L_001e: ldfld BattleTech.ChassisDef selectedChassis
L_0023: brtrue Label1
L_0028: br Label6
L_002d: Label1
L_002d: ldarg.0
L_002e: ldfld BattleTech.ChassisDef selectedChassis
L_0033: ldfld System.Int32 MechPartCount
L_0038: ldarg.0
L_0039: ldfld BattleTech.ChassisDef selectedChassis
L_003e: callvirt Int32 get_MechPartMax()
L_0043: bge Label2
L_0048: ldarg.0
L_0049: ldfld BattleTech.ChassisDef selectedChassis
L_004e: callvirt Int32 get_MechPartMax()
L_0053: ldarg.0
L_0054: ldfld BattleTech.ChassisDef selectedChassis
L_0059: ldfld System.Int32 MechPartCount
L_005e: sub
L_005f: stloc.1
L_0060: ldstr "'Mech Chassis Incomplete"
L_0065: ldstr "This chassis requires {0} more part{1} before it can be readied for combat."
L_006a: ldc.i4.2
L_006b: newarr System.Object
L_0070: dup
L_0071: ldc.i4.0
L_0072: ldloc.1
L_0073: box System.Int32
L_0078: stelem.ref
L_0079: dup
L_007a: ldc.i4.1
L_007b: ldloc.1
L_007c: ldc.i4.1
L_007d: beq Label3
L_0082: ldstr "s"
L_0087: br Label4
L_008c: Label3
L_008c: ldstr ""
L_0091: Label4
L_0091: stelem.ref
L_0092: call System.String T(System.String, System.Object[])
L_0097: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_009c: call BattleTech.UI.UIManager get_Instance()
L_00a1: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00a6: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_00ab: newobj Void .ctor(UIColorRef)
L_00b0: ldc.r4 0
L_00b5: ldc.i4.1
L_00b6: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_00bb: callvirt BattleTech.UI.GenericPopup Render()
L_00c0: pop
L_00c1: br Label7
L_00c6: Label2
L_00c6: ldarg.0
L_00c7: ldfld BattleTech.UI.MechBayPanel mechBay
L_00cc: callvirt BattleTech.SimGameState get_Sim()
L_00d1: callvirt Int32 GetFirstFreeMechBay()
L_00d6: ldc.i4.0
L_00d7: bge Label5
L_00dc: ldstr "Cannot Ready 'Mech"
L_00e1: ldstr "There are no available slots in the 'Mech Bay. You must move an active 'Mech into storage before readying this chassis."
L_00e6: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_00eb: call BattleTech.UI.UIManager get_Instance()
L_00f0: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00f5: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_00fa: newobj Void .ctor(UIColorRef)
L_00ff: ldc.r4 0
L_0104: ldc.i4.1
L_0105: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_010a: callvirt BattleTech.UI.GenericPopup Render()
L_010f: pop
L_0110: br Label8
L_0115: Label5
L_0115: ldarg.0
L_0116: ldfld BattleTech.UI.MechBayPanel mechBay
L_011b: callvirt BattleTech.SimGameState get_Sim()
L_0120: callvirt BattleTech.SimGameConstants get_Constants()
L_0125: callvirt BattleTech.StoryConstantsDef get_Story()
L_012a: ldfld System.Int32 MechReadyTime
L_012f: conv.r4
L_0130: ldarg.0
L_0131: ldfld BattleTech.UI.MechBayPanel mechBay
L_0136: callvirt BattleTech.SimGameState get_Sim()
L_013b: callvirt Int32 get_MechTechSkill()
L_0140: conv.r4
L_0141: div
L_0142: call Int32 CeilToInt(Single)
L_0147: stloc.0
L_0148: ldstr "Ready 'Mech?"
L_014d: ldstr "It will take {0} day(s) to ready this BattleMech chassis for combat."
L_0152: ldc.i4.1
L_0153: newarr System.Object
L_0158: dup
L_0159: ldc.i4.0
L_015a: ldloc.0
L_015b: box System.Int32
L_0160: stelem.ref
L_0161: call System.String T(System.String, System.Object[])
L_0166: call BattleTech.UI.GenericPopupBuilder Create(System.String, System.String)
L_016b: ldstr "Cancel"
L_0170: ldnull
L_0171: ldc.i4.1
L_0172: ldnull
L_0173: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_0178: ldstr "Ready"
L_017d: ldarg.0
L_017e: ldftn Void ConfirmReadyClicked()
L_0184: newobj Void .ctor(Object, IntPtr)
L_0189: ldc.i4.1
L_018a: ldnull
L_018b: callvirt BattleTech.UI.GenericPopupBuilder AddButton(System.String, System.Action, Boolean, InControl.PlayerAction)
L_0190: call BattleTech.UI.UIManager get_Instance()
L_0195: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_019a: ldfld BattleTech.UI.UIColorRef PopupBackfill
L_019f: newobj Void .ctor(UIColorRef)
L_01a4: ldc.r4 0
L_01a9: ldc.i4.1
L_01aa: callvirt BattleTech.UI.GenericPopupBuilder AddFader(System.Nullable`1[BattleTech.UI.UIColorRef], Single, Boolean)
L_01af: callvirt BattleTech.UI.GenericPopupBuilder CancelOnEscape()
L_01b4: callvirt BattleTech.UI.GenericPopup Render()
L_01b9: pop
L_01ba: Label6
L_01ba: Label7
L_01ba: Label8
L_01ba: Label0
L_01ba: ret
DONE

### Harmony id=io.github.denadan.DynamicShops, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from DynamicShops.Control.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\DynamicShops\DynamicShops.dll
### At 2019-09-15 05.27.28
### Patch BattleTech.Shop, Void Initialize(System.Collections.Generic.List`1[System.String], ShopType, RefreshType)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.String
L_0000: ldarga 1
L_0006: call Void SetType(System.Collections.Generic.List`1[System.String] ByRef)
L_000b: ldarg.0
L_000c: newobj Void .ctor()
L_0011: call Void set_ItemCollections(System.Collections.Generic.List`1[BattleTech.ItemCollectionDef])
L_0016: ldarg.1
L_0017: brfalse Label1
L_001c: ldarg.1
L_001d: callvirt Int32 get_Count()
L_0022: brtrue Label2
L_0027: Label1
L_0027: br Label6
L_002c: Label2
L_002c: ldarg.0
L_002d: ldarg.1
L_002e: newobj Void .ctor(IEnumerable`1)
L_0033: stfld System.Collections.Generic.List`1[System.String] pendingCollection
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: stfld BattleTech.Shop+RefreshType requestedShopUpdate
L_003f: ldarg.0
L_0040: ldarg.2
L_0041: call Void set_ThisShopType(ShopType)
L_0046: ldarg.1
L_0047: callvirt Enumerator GetEnumerator()
L_004c: stloc.0
.try
{
	L_004d: br Label3
	L_0052: Label4
	L_0052: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0054: call System.String get_Current()
	L_0059: stloc.1
	L_005a: ldarg.0
	L_005b: ldfld BattleTech.SimGameState Sim
	L_0060: ldloc.1
	L_0061: ldarg.0
	L_0062: ldftn Void OnItemCollectionRetrieved(BattleTech.ItemCollectionDef)
	L_0068: newobj Void .ctor(Object, IntPtr)
	L_006d: ldc.i4.s 31
	L_006f: callvirt Void RequestItem[ItemCollectionDef](System.String, System.Action`1[BattleTech.ItemCollectionDef], BattleTech.BattleTechResourceType)
	L_0074: Label3
	L_0074: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0076: call Boolean MoveNext()
	L_007b: brtrue Label4
	L_0080: leave Label5
	L_0085: leave (autogenerated)
} // end try
.finally
{
	L_008a: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_008c: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_0092: callvirt Void Dispose()
	L_0097: endfinally
	L_0098: leave (autogenerated)
} // end handler
L_0099: Label5
L_0099: Label6
L_0099: ret
DONE

### Patch BattleTech.StarSystem, Boolean CanUseFactionStore()
L_0000: Local var 0: BattleTech.Faction
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 1 (System.Boolean)
L_0009: call Boolean Prefix(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Boolean HasFactionStore()
L_0019: brfalse Label1
L_001e: ldarg.0
L_001f: call BattleTech.StarSystemDef get_Def()
L_0024: callvirt BattleTech.Faction get_FactionShopOwner()
L_0029: stloc.0
L_002a: ldarg.0
L_002b: call BattleTech.SimGameState get_Sim()
L_0030: ldloc.0
L_0031: ldnull
L_0032: callvirt Boolean IsFactionAlly(BattleTech.Faction, System.Collections.Generic.List`1[BattleTech.Faction])
L_0037: brfalse Label2
L_003c: ldc.i4.1
L_003d: br Label3
L_0042: Label2
L_0042: ldc.i4.0
L_0043: br Label4
L_0048: Label1
L_0048: ldc.i4.0
L_0049: Label3
L_0049: Label4
L_0049: stloc 1 (System.Boolean)
L_004a: Label0
L_004a: ldloc 1 (System.Boolean)
L_004b: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void RefreshStoreTypeButtons()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.StarSystem theSystem
L_0006: callvirt Boolean HasFactionStore()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldfld BattleTech.StarSystem theSystem
L_0012: callvirt Boolean HasBlackMarketStore()
L_0017: stloc.1
L_0018: ldloc.0
L_0019: ldloc.1
L_001a: or
L_001b: stloc.2
L_001c: ldarg.0
L_001d: ldfld UnityEngine.GameObject SystemStoreButtonHoldingObject
L_0022: ldloc.2
L_0023: callvirt Void SetActive(Boolean)
L_0028: ldarg.0
L_0029: ldfld BattleTech.StarSystem theSystem
L_002e: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_0033: stloc.3
L_0034: ldarg.0
L_0035: ldfld BattleTech.StarSystem theSystem
L_003a: callvirt Boolean CanUseSystemStore()
L_003f: brfalse Label1
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_004a: ldc.i4.0
L_004b: ldc.i4.0
L_004c: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0051: pop
L_0052: ldarg.0
L_0053: ldfld UnityEngine.GameObject LowRepSystemStoreOverlay
L_0058: ldc.i4.0
L_0059: callvirt Void SetActive(Boolean)
L_005e: br Label2
L_0063: Label1
L_0063: ldarg.0
L_0064: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_0069: ldc.i4.5
L_006a: ldc.i4.0
L_006b: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_0070: pop
L_0071: ldarg.0
L_0072: ldfld UnityEngine.GameObject LowRepSystemStoreOverlay
L_0077: ldc.i4.1
L_0078: callvirt Void SetActive(Boolean)
L_007d: Label2
L_007d: ldarg.0
L_007e: ldfld UnityEngine.GameObject FactionStoreButtonHoldingObject
L_0083: ldloc.0
L_0084: callvirt Void SetActive(Boolean)
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_008f: ldarg.0
L_0090: ldfld BattleTech.SimGameState simState
L_0095: ldloc.3
L_0096: callvirt Void FillInByFaction(BattleTech.SimGameState, BattleTech.Faction)
L_009b: ldarg.0
L_009c: ldfld BattleTech.StarSystem theSystem
L_00a1: callvirt Boolean HasFactionStore()
L_00a6: brfalse Label3
L_00ab: ldarg.0
L_00ac: ldfld BattleTech.StarSystem theSystem
L_00b1: callvirt Boolean CanUseFactionStore()
L_00b6: brfalse Label4
L_00bb: ldarg.0
L_00bc: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_00c1: ldc.i4.0
L_00c2: ldc.i4.0
L_00c3: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00c8: pop
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00cf: ldc.i4.0
L_00d0: callvirt Void SetActive(Boolean)
L_00d5: br Label5
L_00da: Label4
L_00da: ldarg.0
L_00db: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle FactionStoreButton
L_00e0: ldc.i4.5
L_00e1: ldc.i4.0
L_00e2: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00e7: pop
L_00e8: ldarg.0
L_00e9: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00ee: ldc.i4.1
L_00ef: callvirt Void SetActive(Boolean)
L_00f4: br Label6
L_00f9: Label3
L_00f9: ldarg.0
L_00fa: ldfld UnityEngine.GameObject LowRepFactionOverlay
L_00ff: ldc.i4.0
L_0100: callvirt Void SetActive(Boolean)
L_0105: Label5
L_0105: Label6
L_0105: ldarg.0
L_0106: ldfld UnityEngine.GameObject BlackMarketStoreButtonHoldingObject
L_010b: ldloc.1
L_010c: callvirt Void SetActive(Boolean)
L_0111: ldarg.0
L_0112: ldfld BattleTech.SimGameState simState
L_0117: ldsfld System.String BLACKMARKET_ICON
L_011c: ldarg.0
L_011d: ldftn Void <RefreshStoreTypeButtons>b__64_0(UnityEngine.Sprite)
L_0123: newobj Void .ctor(Object, IntPtr)
L_0128: ldc.i4.s 61
L_012a: callvirt Void RequestItem[Sprite](System.String, System.Action`1[UnityEngine.Sprite], BattleTech.BattleTechResourceType)
L_012f: ldarg.0
L_0130: ldfld BattleTech.StarSystem theSystem
L_0135: callvirt Boolean HasBlackMarketStore()
L_013a: brfalse Label7
L_013f: ldarg.0
L_0140: ldfld BattleTech.StarSystem theSystem
L_0145: callvirt Boolean CanUseBlackMarketStore()
L_014a: brfalse Label8
L_014f: ldarg.0
L_0150: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle BlackMarketStoreButton
L_0155: ldc.i4.0
L_0156: ldc.i4.0
L_0157: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_015c: pop
L_015d: ldarg.0
L_015e: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0163: ldc.i4.0
L_0164: callvirt Void SetActive(Boolean)
L_0169: br Label9
L_016e: Label8
L_016e: ldarg.0
L_016f: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle BlackMarketStoreButton
L_0174: ldc.i4.5
L_0175: ldc.i4.0
L_0176: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_017b: pop
L_017c: ldarg.0
L_017d: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0182: ldc.i4.1
L_0183: callvirt Void SetActive(Boolean)
L_0188: br Label10
L_018d: Label7
L_018d: ldarg.0
L_018e: ldfld UnityEngine.GameObject LowRepBlackMarketOverlay
L_0193: ldc.i4.0
L_0194: callvirt Void SetActive(Boolean)
L_0199: Label9
L_0199: Label10
L_0199: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void FillInFactionData()
L_0000: Local var 0: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.StarSystem theSystem
L_0006: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_000b: stloc.0
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.SG_Stores_StoreImagePanel StoreImagePanel
L_0012: ldc.i4.1
L_0013: ldloc.0
L_0014: callvirt Void FillInData(StoreType, BattleTech.Faction)
L_0019: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void RefreshColorAreas()
L_0000: Local var 0: UnityEngine.Color
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.UI.SG_Shop_Screen+StoreType
L_0000: Local var 3: BattleTech.Faction
L_0000: Local var 4: BattleTech.FactionDef
L_0000: Local var 5: UnityEngine.Color
L_0000: Local var 6: UnityEngine.Color
L_0000: Local var 7: System.Collections.Generic.List`1+Enumerator[[BattleTech.UI.UIColorRefTracker, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldloca.s 0 (UnityEngine.Color)
L_0002: initobj UnityEngine.Color
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: ldarg.0
L_000b: ldfld BattleTech.UI.SG_Shop_Screen+StoreType currentStoreType
L_0010: stloc.2
L_0011: ldloc.2
L_0012: switch Labels1,2,3
L_0023: br Label4
L_0028: Label1
L_0028: ldc.i4.1
L_0029: stloc.1
L_002a: call BattleTech.UI.UIManager get_Instance()
L_002f: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0034: ldflda BattleTech.UI.UIColorRef SystemStoreColor
L_0039: ldfld UnityEngine.Color color
L_003e: stloc.0
L_003f: br Label5
L_0044: Label2
L_0044: ldarg.0
L_0045: ldfld BattleTech.StarSystem theSystem
L_004a: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_004f: stloc.3
L_0050: ldnull
L_0051: stloc.s 4 (BattleTech.FactionDef)
L_0053: ldarg.0
L_0054: ldfld BattleTech.SimGameState simState
L_0059: callvirt System.Collections.Generic.Dictionary`2[BattleTech.Faction,BattleTech.FactionDef] get_FactionsDict()
L_005e: ldloc.3
L_005f: ldloca.s 4 (BattleTech.FactionDef)
L_0061: callvirt Boolean TryGetValue(BattleTech.Faction, BattleTech.FactionDef ByRef)
L_0066: brfalse Label6
L_006b: ldc.i4.1
L_006c: stloc.1
L_006d: ldloca.s 5 (UnityEngine.Color)
L_006f: initobj UnityEngine.Color
L_0075: ldloc.s 4 (BattleTech.FactionDef)
L_0077: ldloca.s 5 (UnityEngine.Color)
L_0079: callvirt Boolean GetFactionStoreColor(UnityEngine.Color ByRef)
L_007e: brfalse Label7
L_0083: ldloc.s 5 (UnityEngine.Color)
L_0085: stloc.0
L_0086: br Label8
L_008b: Label7
L_008b: call BattleTech.UI.UIManager get_Instance()
L_0090: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_0095: ldflda BattleTech.UI.UIColorRef FactionStoreColor
L_009a: ldfld UnityEngine.Color color
L_009f: stloc.0
L_00a0: br Label9
L_00a5: Label3
L_00a5: ldc.i4.1
L_00a6: stloc.1
L_00a7: call BattleTech.UI.UIManager get_Instance()
L_00ac: callvirt BattleTech.UI.UILookAndColorConstants get_UILookAndColorConstants()
L_00b1: ldflda BattleTech.UI.UIColorRef BlackMarketStoreColor
L_00b6: ldfld UnityEngine.Color color
L_00bb: stloc.0
L_00bc: Label4
L_00bc: Label5
L_00bc: Label6
L_00bc: Label8
L_00bc: Label9
L_00bc: ldloc.1
L_00bd: brfalse Label10
L_00c2: ldarg.0
L_00c3: ldfld System.Collections.Generic.List`1[BattleTech.UI.UIColorRefTracker] ColorAffectors
L_00c8: callvirt Enumerator GetEnumerator()
L_00cd: stloc.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
.try
{
	L_00cf: br Label11
	L_00d4: Label12
	L_00d4: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00d6: call BattleTech.UI.UIColorRefTracker get_Current()
	L_00db: ldloc.0
	L_00dc: callvirt Void OverrideWithColor(UnityEngine.Color)
	L_00e1: Label11
	L_00e1: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00e3: call Boolean MoveNext()
	L_00e8: brtrue Label12
	L_00ed: leave Label13
	L_00f2: leave (autogenerated)
} // end try
.finally
{
	L_00f7: ldloca.s 7 (System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker])
	L_00f9: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.UI.UIColorRefTracker]
	L_00ff: callvirt Void Dispose()
	L_0104: endfinally
	L_0105: leave (autogenerated)
} // end handler
L_0106: Label13
L_0106: ldloc.0
L_0107: stloc.s 6 (UnityEngine.Color)
L_0109: ldloca.s 6 (UnityEngine.Color)
L_010b: ldsfld System.Single CENTER_BG_ALPHASCALAR
L_0110: ldloc.s 6 (UnityEngine.Color)
L_0112: ldfld System.Single a
L_0117: mul
L_0118: stfld System.Single a
L_011d: ldarg.0
L_011e: ldfld BattleTech.UI.UIColorRefTracker LargeBGFillColor
L_0123: ldloc.s 6 (UnityEngine.Color)
L_0125: callvirt Void OverrideWithColor(UnityEngine.Color)
L_012a: Label10
L_012a: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void UpdateHeaderArea()
L_0000: Local var 0: BattleTech.UI.SG_Shop_Screen+StoreType
L_0000: Local var 1: BattleTech.Faction
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.SG_Shop_Screen+StoreType currentStoreType
L_0006: stloc.0
L_0007: ldloc.0
L_0008: switch Labels1,2,3
L_0019: br Label4
L_001e: Label1
L_001e: ldarg.0
L_001f: call Void SetHeaderAreaToSystem()
L_0024: br Label5
L_0029: Label2
L_0029: ldarg.0
L_002a: ldfld BattleTech.StarSystem theSystem
L_002f: call BattleTech.Faction GetFactionShowOwner(BattleTech.StarSystem)
L_0034: stloc.1
L_0035: ldarg.0
L_0036: ldloc.1
L_0037: call Void SetHeaderAreaToFaction(BattleTech.Faction)
L_003c: br Label6
L_0041: Label3
L_0041: ldarg.0
L_0042: call Void SetHeaderAreaToBlackMarket()
L_0047: Label4
L_0047: Label5
L_0047: Label6
L_0047: ret
DONE

### Patch BattleTech.StarSystem, Boolean CanUseBlackMarketStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean Override_Access(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call Boolean HasBlackMarketStore()
L_0019: brfalse Label1
L_001e: ldarg.0
L_001f: call BattleTech.SimGameState get_Sim()
L_0024: callvirt HBS.Collections.TagSet get_CompanyTags()
L_0029: ldarg.0
L_002a: call BattleTech.SimGameState get_Sim()
L_002f: callvirt BattleTech.SimGameConstants get_Constants()
L_0034: callvirt BattleTech.StoryConstantsDef get_Story()
L_0039: ldfld System.String BlackMarketTag
L_003e: callvirt Boolean Contains(System.String)
L_0043: brfalse Label2
L_0048: ldc.i4.1
L_0049: br Label3
L_004e: Label1
L_004e: Label2
L_004e: ldc.i4.0
L_004f: Label3
L_004f: stloc 0 (System.Boolean)
L_0050: Label0
L_0050: ldloc 0 (System.Boolean)
L_0051: ret
DONE

### Patch BattleTech.StarSystem, Boolean HasBlackMarketStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldloca 0 (System.Boolean)
L_0009: call Boolean HasBlackMarketStore(BattleTech.StarSystem, Boolean ByRef)
L_000e: brfalse Label0
L_0013: ldarg.0
L_0014: call BattleTech.Shop get_BlackMarketShop()
L_0019: callvirt Boolean get_IsEmpty()
L_001e: ldc.i4.0
L_001f: ceq
L_0021: stloc 0 (System.Boolean)
L_0022: Label0
L_0022: ldloc 0 (System.Boolean)
L_0023: ret
DONE

### Patch BattleTech.StarSystem, Boolean HasFactionStore()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: call BattleTech.Shop get_FactionShop()
L_000c: callvirt Boolean get_IsEmpty()
L_0011: ldc.i4.0
L_0012: ceq
L_0014: stloc 0 (System.Boolean)
L_0015: ldarg.0
L_0016: call Void ShowShopInfo(BattleTech.StarSystem)
L_001b: ldloc 0 (System.Boolean)
L_001c: ret
DONE

### Patch BattleTech.UI.SG_Shop_Screen, Void BeginShop()
L_0000: ldarg.0
L_0001: ldarg.0
L_0002: ldfld BattleTech.SimGameState simState
L_0007: callvirt BattleTech.StarSystem get_CurSystem()
L_000c: stfld BattleTech.StarSystem theSystem
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.HBSDOTweenStoreTypeToggle SystemStoreButton
L_0017: callvirt Void ForceRadioSetSelection()
L_001c: ldarg.0
L_001d: ldarg.0
L_001e: ldfld BattleTech.StarSystem theSystem
L_0023: callvirt BattleTech.Shop get_SystemShop()
L_0028: ldc.i4.1
L_0029: call Void ChangeToBuy(BattleTech.Shop, Boolean)
L_002e: ldarg.0
L_002f: call Void RefreshStoreTypeButtons()
L_0034: ldarg.0
L_0035: ldarg.0
L_0036: call System.Collections.IEnumerator EndOfFrameSetupStoreButtonsAndColors()
L_003b: call UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator)
L_0040: pop
L_0041: ldarg.0
L_0042: call Void ShowShopInfo(BattleTech.UI.SG_Shop_Screen)
L_0047: ret
DONE

### Patch BattleTech.StarSystem, Void OnSystemChange()
L_0000: ldarg.0
L_0001: call Void ReplaceShops(BattleTech.StarSystem)
L_0006: ldarg.0
L_0007: call Void RefreshShops()
L_000c: ret
DONE

### Harmony id=de.morphyum.FlashpointEnabler, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from RepeatableFlashpoints.FlashpointEnabler.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\FlashpointEnabler\FlashpointEnabler.dll
### At 2019-09-15 05.27.29
### Patch BattleTech.SimGameState, Void CompleteFlashpoint(BattleTech.Flashpoint, BattleTech.FlashpointEndType, System.String, System.String, System.Action)
L_0000: ldarg.1
L_0001: brtrue Label1
L_0006: br Label8
L_000b: Label1
L_000b: ldarg.0
L_000c: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0011: ldarg.1
L_0012: callvirt Boolean Contains(BattleTech.Flashpoint)
L_0017: brfalse Label2
L_001c: ldarg.0
L_001d: ldfld System.Collections.Generic.List`1[BattleTech.Flashpoint] availableFlashpointList
L_0022: ldarg.1
L_0023: callvirt Boolean Remove(BattleTech.Flashpoint)
L_0028: pop
L_0029: Label2
L_0029: ldarg.2
L_002a: ldc.i4.1
L_002b: bne.un Label3
L_0030: ldarg.1
L_0031: ldarg.3
L_0032: ldarg.s 4
L_0034: callvirt Void OnFlashpointSucceeded(System.String, System.String)
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_003f: ldarg.1
L_0040: callvirt BattleTech.FlashpointDef get_Def()
L_0045: ldfld BattleTech.BaseDescriptionDef Description
L_004a: callvirt System.String get_Id()
L_004f: callvirt Void Add(System.String)
L_0054: br Label9
L_0059: Label3
L_0059: ldarg.2
L_005a: ldc.i4.2
L_005b: bne.un Label4
L_0060: ldarg.0
L_0061: ldfld BattleTech.UI.SimGameInterruptManager interruptQueue
L_0066: callvirt Boolean get_FPEnterSystemIsOpen()
L_006b: brfalse Label5
L_0070: ldarg.0
L_0071: ldarg.s 5
L_0073: ldarg.1
L_0074: callvirt BattleTech.FlashpointDef get_Def()
L_0079: ldfld BattleTech.BaseDescriptionDef Description
L_007e: callvirt System.String get_Name()
L_0083: call Void ShowFlashpointFailedPopup(System.Action, System.String)
L_0088: br Label10
L_008d: Label5
L_008d: ldarg.0
L_008e: ldarg.s 5
L_0090: ldarg.1
L_0091: callvirt BattleTech.FlashpointDef get_Def()
L_0096: ldfld BattleTech.BaseDescriptionDef Description
L_009b: callvirt System.String get_Name()
L_00a0: call Void ShowFlashpointFailedNotif(System.Action, System.String)
L_00a5: br Label11
L_00aa: Label4
L_00aa: ldarg.2
L_00ab: ldc.i4.4
L_00ac: bne.un Label6
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.List`1[System.String] completedFlashpoints
L_00b7: ldarg.1
L_00b8: callvirt BattleTech.FlashpointDef get_Def()
L_00bd: ldfld BattleTech.BaseDescriptionDef Description
L_00c2: callvirt System.String get_Id()
L_00c7: callvirt Void Add(System.String)
L_00cc: ldarg.0
L_00cd: ldarg.s 5
L_00cf: ldarg.1
L_00d0: callvirt BattleTech.FlashpointDef get_Def()
L_00d5: ldfld BattleTech.BaseDescriptionDef Description
L_00da: callvirt System.String get_Name()
L_00df: call Void ShowFlashpointCompletedWithoutRewardNotif(System.Action, System.String)
L_00e4: br Label12
L_00e9: Label6
L_00e9: ldarg.s 5
L_00eb: brfalse Label7
L_00f0: ldarg.s 5
L_00f2: callvirt Void Invoke()
L_00f7: Label7
L_00f7: Label8
L_00f7: Label9
L_00f7: Label10
L_00f7: Label11
L_00f7: Label12
L_00f7: ldarg.0
L_00f8: ldarg 1
L_00fe: ldarg 2
L_0104: call Void Postfix(BattleTech.SimGameState, BattleTech.Flashpoint, BattleTech.FlashpointEndType)
L_0109: ret
DONE

### Patch BattleTech.SimGameState, BattleTech.Flashpoint GenerateFlashpoint(System.String, System.String, Boolean)
L_0000: Local var 0: BattleTech.SimGameState+<>c__DisplayClass385_0
L_0000: Local var 1: BattleTech.WeightedList`1[[BattleTech.FlashpointDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.FlashpointDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: BattleTech.WeightedList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 4: BattleTech.StarSystem
L_0000: Local var 5: BattleTech.FactionDef
L_0000: Local var 6: BattleTech.StarSystem
L_0000: Local var 7: BattleTech.FactionDef
L_0000: Local var 8: BattleTech.FlashpointDef
L_0000: Local var 9: BattleTech.FlashpointDef
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.FlashpointDef
L_0000: Local var 12: System.String
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Int32
L_0000: Local var 15: BattleTech.FlashpointDef
L_0000: Local var 16: System.Collections.Generic.List`1[[BattleTech.Faction, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 17: System.Int32
L_0000: Local var 18: BattleTech.Flashpoint
L_0000: ldnull
L_0001: stloc 18 (BattleTech.Flashpoint)
L_0003: ldarg.0
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
### Harmony id=com.joelmeador.FYLS, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from FYLS.Core.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\FYLS\FYLS.dll
### At 2019-09-15 05.27.29
### Patch UnityEngine.Debug, UnityEngine.ILogger get_logger()
L_0000: Local var 0: UnityEngine.ILogger
L_0000: Local var 1: UnityEngine.ILogger
L_0000: ldnull
L_0001: stloc 1 (UnityEngine.ILogger)
L_0002: ldloca 1 (UnityEngine.ILogger)
L_0004: call Boolean Prefix(UnityEngine.ILogger ByRef)
L_0009: brfalse Label0
L_000e: nop
L_000f: ldsfld UnityEngine.ILogger s_Logger
L_0014: stloc.0
L_0015: br Label1
L_001a: Label1
L_001a: ldloc.0
L_001b: stloc 1 (UnityEngine.ILogger)
L_001c: Label0
L_001c: ldloc 1 (UnityEngine.ILogger)
L_001d: ret
DONE

### Patch HBS.Logging.Logger, Void HandleUnityLog(System.String, System.String, UnityEngine.LogType)
L_0000: Local var 0: HBS.Logging.LogLevel
L_0000: Local var 1: HBS.Logging.IStackTrace
L_0000: ldarg 0
L_0006: ldarg 1
L_000c: ldarg 2
L_0012: call Boolean Prefix(System.String, System.String, UnityEngine.LogType)
L_0017: brfalse Label0
L_001c: ldsfld System.Boolean ignoreNextUnityCapture
L_0021: brfalse Label1
L_0026: ldc.i4.0
L_0027: stsfld System.Boolean ignoreNextUnityCapture
L_002c: br Label17
L_0031: Label1
L_0031: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_0036: brtrue Label2
L_003b: ldstr "Unity"
L_0040: call HBS.Logging.ILog GetLogger(System.String)
L_0045: castclass HBS.Logging.Logger+LogImpl
L_004a: stsfld HBS.Logging.Logger+LogImpl unityLog
L_004f: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_0054: ldc.i4.0
L_0055: stfld System.Boolean canIgnoreUnityLogs
L_005a: Label2
L_005a: ldarg.2
L_005b: switch Labels3,4,5,6,7
L_0074: br Label8
L_0079: Label4
L_0079: ldc.i4.3
L_007a: stloc.0
L_007b: br Label9
L_0080: Label3
L_0080: ldc.i4.3
L_0081: stloc.0
L_0082: br Label10
L_0087: Label7
L_0087: ldc.i4.3
L_0088: stloc.0
L_0089: br Label11
L_008e: Label5
L_008e: ldc.i4.2
L_008f: stloc.0
L_0090: br Label12
L_0095: Label6
L_0095: ldc.i4.1
L_0096: stloc.0
L_0097: br Label13
L_009c: Label8
L_009c: ldc.i4.1
L_009d: stloc.0
L_009e: Label9
L_009e: Label10
L_009e: Label11
L_009e: Label12
L_009e: Label13
L_009e: ldnull
L_009f: stloc.1
L_00a0: ldarg.1
L_00a1: call Boolean IsNullOrEmpty(System.String)
L_00a6: brtrue Label14
L_00ab: ldarg.1
L_00ac: ldstr "UnityEngine.Debug:Log"
L_00b1: callvirt Boolean StartsWith(System.String)
L_00b6: brfalse Label15
L_00bb: ldarg.1
L_00bc: ldc.i4.1
L_00bd: newobj Void .ctor(String, Int32)
L_00c2: box HBS.Logging.UnityStackTrace
L_00c7: stloc.1
L_00c8: br Label16
L_00cd: Label15
L_00cd: ldarg.1
L_00ce: ldc.i4.0
L_00cf: newobj Void .ctor(String, Int32)
L_00d4: box HBS.Logging.UnityStackTrace
L_00d9: stloc.1
L_00da: Label14
L_00da: Label16
L_00da: ldsfld HBS.Logging.Logger+LogImpl unityLog
L_00df: ldloc.0
L_00e0: ldarg.0
L_00e1: ldnull
L_00e2: ldnull
L_00e3: ldloc.1
L_00e4: callvirt Void LogAtLevel(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_00e9: Label17
L_00e9: Label0
L_00e9: ldarg 0
L_00ef: ldarg 1
L_00f5: ldarg 2
L_00fb: call Void Postfix(System.String, System.String, UnityEngine.LogType)
L_0100: ret
DONE

### Patch HBS.Logging.Logger+LogImpl, Void LogAtLevel(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0000: Local var 0: System.String
L_0000: Local var 1: HBS.Logging.Logger+LogImpl
L_0000: Local var 2: HBS.Collections.Generic.FastList`1[[HBS.Logging.ILogAppender, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: HBS.Logging.ILogAppender[]
L_0000: Local var 5: System.Int32
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg 5
L_001e: call Boolean Prefix(HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0023: brfalse Label0
L_0028: ldarg.0
L_0029: call System.String get_Name()
L_002e: stloc.0
L_002f: ldarg.0
L_0030: ldarg.1
L_0031: call Boolean IsEnabledFor(HBS.Logging.LogLevel)
L_0036: brfalse Label1
L_003b: ldsfld System.Boolean IsUnityApplication
L_0040: brtrue Label2
L_0045: ldsfld HBS.Logging.FormatHelper formatHelper
L_004a: ldloc.0
L_004b: ldarg.1
L_004c: ldarg.2
L_004d: ldarg.s 4
L_004f: ldarg.s 5
L_0051: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_0056: call Void WriteLine(System.String)
L_005b: Label2
L_005b: ldsfld HBS.Logging.ILogAppender unityLogBypassAppender
L_0060: brfalse Label3
L_0065: ldsfld HBS.Logging.ILogAppender unityLogBypassAppender
L_006a: ldloc.0
L_006b: ldarg.1
L_006c: ldarg.2
L_006d: ldarg.3
L_006e: ldarg.s 4
L_0070: ldarg.s 5
L_0072: callvirt Void OnLogMessage(System.String, HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0077: Label3
L_0077: ldsfld System.Boolean IsUnityApplication
L_007c: brfalse Label4
L_0081: ldarg.1
L_0082: switch Labels5,6,7,8
L_0097: br Label9
L_009c: Label5
L_009c: Label6
L_009c: ldarg.0
L_009d: ldfld System.Boolean canIgnoreUnityLogs
L_00a2: stsfld System.Boolean ignoreNextUnityCapture
L_00a7: ldsfld HBS.Logging.FormatHelper formatHelper
L_00ac: ldloc.0
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldarg.s 4
L_00b1: ldarg.s 5
L_00b3: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_00b8: ldarg.3
L_00b9: call Void Log(System.Object, UnityEngine.Object)
L_00be: br Label10
L_00c3: Label7
L_00c3: ldarg.0
L_00c4: ldfld System.Boolean canIgnoreUnityLogs
L_00c9: stsfld System.Boolean ignoreNextUnityCapture
L_00ce: ldsfld HBS.Logging.FormatHelper formatHelper
L_00d3: ldloc.0
L_00d4: ldarg.1
L_00d5: ldarg.2
L_00d6: ldarg.s 4
L_00d8: ldarg.s 5
L_00da: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_00df: ldarg.3
L_00e0: call Void LogWarning(System.Object, UnityEngine.Object)
L_00e5: br Label11
L_00ea: Label8
L_00ea: ldarg.0
L_00eb: ldfld System.Boolean canIgnoreUnityLogs
L_00f0: stsfld System.Boolean ignoreNextUnityCapture
L_00f5: ldsfld HBS.Logging.FormatHelper formatHelper
L_00fa: ldloc.0
L_00fb: ldarg.1
L_00fc: ldarg.2
L_00fd: ldarg.s 4
L_00ff: ldarg.s 5
L_0101: callvirt System.String FormatMessage(System.String, HBS.Logging.LogLevel, System.Object, System.Exception, HBS.Logging.IStackTrace)
L_0106: ldarg.3
L_0107: call Void LogError(System.Object, UnityEngine.Object)
L_010c: Label4
L_010c: Label9
L_010c: Label10
L_010c: Label11
L_010c: call Boolean get_HasInstance()
L_0111: brfalse Label12
L_0116: call HBS.DebugConsole.DebugConsole get_Instance()
L_011b: ldloc.0
L_011c: ldarg.2
L_011d: callvirt System.String ToString()
L_0122: ldarg.1
L_0123: callvirt Void LogMessage(System.String, System.String, HBS.Logging.LogLevel)
L_0128: Label12
L_0128: ldarg.0
L_0129: stloc.1
L_012a: br Label13
L_012f: Label17
L_012f: ldloc.1
L_0130: ldfld HBS.Collections.Generic.FastList`1[HBS.Logging.ILogAppender] appenders
L_0135: stloc.2
L_0136: ldloc.2
L_0137: brfalse Label14
L_013c: ldloc.2
L_013d: callvirt Int32 get_Count()
L_0142: stloc.3
L_0143: ldloc.2
L_0144: callvirt HBS.Logging.ILogAppender[] get_Buffer()
L_0149: stloc.s 4 (HBS.Logging.ILogAppender[])
L_014b: ldc.i4.0
L_014c: stloc.s 5 (System.Int32)
L_014e: br Label15
L_0153: Label16
L_0153: ldloc.s 4 (HBS.Logging.ILogAppender[])
L_0155: ldloc.s 5 (System.Int32)
L_0157: ldelem.ref
L_0158: ldloc.0
L_0159: ldarg.1
L_015a: ldarg.2
L_015b: ldarg.3
L_015c: ldarg.s 4
L_015e: ldarg.s 5
L_0160: callvirt Void OnLogMessage(System.String, HBS.Logging.LogLevel, System.Object, UnityEngine.Object, System.Exception, HBS.Logging.IStackTrace)
L_0165: ldloc.s 5 (System.Int32)
L_0167: ldc.i4.1
L_0168: add
L_0169: stloc.s 5 (System.Int32)
L_016b: Label15
L_016b: ldloc.s 5 (System.Int32)
L_016d: ldloc.3
L_016e: blt Label16
L_0173: Label14
L_0173: ldloc.1
L_0174: ldfld HBS.Logging.Logger+LogImpl parent
L_0179: stloc.1
L_017a: Label13
L_017a: ldloc.1
L_017b: brtrue Label17
L_0180: Label1
L_0180: Label0
L_0180: ret
DONE

### Harmony id=Battletech.realitymachina.LessHeadInjuries, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from LessHeadInjuries.LessHeadInjuries.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\LessHeadInjuries\RM_LessHeadInjuries.dll
### At 2019-09-15 05.27.29
### Patch BattleTech.GameInstance, Void LaunchContract(BattleTech.Contract, System.String)
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: brfalse Label1
L_000b: br Label7
L_0010: Label1
L_0010: ldarg.1
L_0011: ldstr "LaunchContract"
L_0016: callvirt Void PrintValuesToDisc(System.String)
L_001b: ldarg.2
L_001c: ldstr "bf40fd39-ccf9-47c4-94a6-061809681140"
L_0021: call Boolean op_Equality(System.String, System.String)
L_0026: brfalse Label2
L_002b: ldstr "GameInstance"
L_0030: call HBS.Logging.ILog GetLogger(System.String)
L_0035: ldstr "Launching contract with Player1TeamDefinitionGuid"
L_003a: callvirt Void Log(System.Object)
L_003f: br Label3
L_0044: Label2
L_0044: ldarg.2
L_0045: ldstr "757173dd-b4e1-4bb5-9bee-d78e623cc867"
L_004a: call Boolean op_Equality(System.String, System.String)
L_004f: brfalse Label4
L_0054: ldstr "GameInstance"
L_0059: call HBS.Logging.ILog GetLogger(System.String)
L_005e: ldstr "Launching contract with Player2TeamDefinitionGuid"
L_0063: callvirt Void Log(System.Object)
L_0068: Label3
L_0068: Label4
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_Combat(BattleTech.CombatGameState)
L_0073: ldarg.0
L_0074: call BattleTech.CombatGameState get_Combat()
L_0079: ldarg.1
L_007a: ldarg.0
L_007b: ldarg.2
L_007c: callvirt Void FirstTimeInit(BattleTech.Contract, BattleTech.GameInstance, System.String)
L_0081: ldarg.0
L_0082: call BattleTech.CombatGameState get_Combat()
L_0087: callvirt BattleTech.Contract get_ActiveContract()
L_008c: callvirt Void Begin()
L_0091: ldarg.0
L_0092: call BattleTech.SimGameState get_Simulation()
L_0097: brfalse Label5
L_009c: ldarg.0
L_009d: call BattleTech.SimGameState get_Simulation()
L_00a2: callvirt Boolean get_IsIronmanCampaign()
L_00a7: brfalse Label6
L_00ac: ldarg.0
L_00ad: call BattleTech.SimGameState get_Simulation()
L_00b2: callvirt MessageCenter get_MessageCenter()
L_00b7: ldc.i4.s 64
L_00b9: ldarg.0
L_00ba: ldftn Void HandleCombatIronmanFailure(MessageCenterMessage)
L_00c0: newobj Void .ctor(Object, IntPtr)
L_00c5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ca: Label5
L_00ca: Label6
L_00ca: Label7
L_00ca: call Void Postfix()
L_00cf: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.0
L_0043: ldarg 1
L_0049: ldarg 2
L_004f: ldarg 3
L_0055: ldarg 4
L_005b: ldarg 5
L_0061: ldarg 6
L_0067: ldarg 7
L_006d: ldarg 8
L_0073: call Void Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0078: ldarg.3
L_0079: brfalse Label1
L_007e: ldarg.3
L_007f: ldc.i4 65536
L_0084: bne.un Label2
L_0089: Label1
L_0089: ldc.i4.0
L_008a: br Label23
L_008f: Label2
L_008f: ldsfld HBS.Logging.ILog attackSequenceLogger
L_0094: callvirt Boolean get_IsDebugEnabled()
L_0099: brfalse Label3
L_009e: ldsfld HBS.Logging.ILog attackSequenceLogger
L_00a3: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_00a8: ldc.i4.6
L_00a9: newarr System.Object
L_00ae: dup
L_00af: ldc.i4.0
L_00b0: ldarg.2
L_00b1: ldfld System.Int32 attackWeaponIndex
L_00b6: box System.Int32
L_00bb: stelem.ref
L_00bc: dup
L_00bd: ldc.i4.1
L_00be: ldarga.s 3
L_00c0: constrained. BattleTech.ArmorLocation
L_00c6: callvirt System.String ToString()
L_00cb: stelem.ref
L_00cc: dup
L_00cd: ldc.i4.2
L_00ce: ldarg.s 5
L_00d0: box System.Single
L_00d5: stelem.ref
L_00d6: dup
L_00d7: ldc.i4.3
L_00d8: ldarg.2
L_00d9: ldfld System.Int32 attackGroupIndex
L_00de: box System.Int32
L_00e3: stelem.ref
L_00e4: dup
L_00e5: ldc.i4.4
L_00e6: ldarg.0
L_00e7: call System.String get_GUID()
L_00ec: stelem.ref
L_00ed: dup
L_00ee: ldc.i4.5
L_00ef: ldarg.s 6
L_00f1: box System.Int32
L_00f6: stelem.ref
L_00f7: call System.String Format(System.String, System.Object[])
L_00fc: callvirt Void LogDebug(System.Object)
L_0101: Label3
L_0101: ldarg.0
L_0102: call BattleTech.CombatGameState get_Combat()
L_0107: callvirt BattleTech.AttackDirector get_AttackDirector()
L_010c: ldarg.2
L_010d: ldfld System.Int32 attackSequenceId
L_0112: callvirt AttackSequence GetAttackSequence(Int32)
L_0117: stloc.0
L_0118: ldsfld HBS.Logging.ILog damageLogger
L_011d: callvirt Boolean get_IsLogEnabled()
L_0122: brfalse Label4
L_0127: ldsfld HBS.Logging.ILog damageLogger
L_012c: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_0131: ldc.i4.5
L_0132: newarr System.Object
L_0137: dup
L_0138: ldc.i4.0
L_0139: ldarg.0
L_013a: callvirt BattleTech.DescriptionDef get_Description()
L_013f: callvirt System.String get_Name()
L_0144: stelem.ref
L_0145: dup
L_0146: ldc.i4.1
L_0147: ldarg.s 5
L_0149: box System.Single
L_014e: stelem.ref
L_014f: dup
L_0150: ldc.i4.2
L_0151: ldarga.s 3
L_0153: constrained. BattleTech.ArmorLocation
L_0159: callvirt System.String ToString()
L_015e: stelem.ref
L_015f: dup
L_0160: ldc.i4.3
L_0161: ldarg.s 4
L_0163: callvirt System.String get_Name()
L_0168: stelem.ref
L_0169: dup
L_016a: ldc.i4.4
L_016b: ldarg.2
L_016c: ldfld System.Int32 attackWeaponIndex
L_0171: box System.Int32
L_0176: stelem.ref
L_0177: call System.String Format(System.String, System.Object[])
L_017c: callvirt Void Log(System.Object)
L_0181: Label4
L_0181: ldloc.0
L_0182: brfalse Label5
L_0187: ldloc.0
L_0188: ldarg.0
L_0189: call System.String get_GUID()
L_018e: callvirt Void FlagAttackDidDamage(System.String)
L_0193: ldarg.0
L_0194: call BattleTech.CombatGameState get_Combat()
L_0199: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_019e: ldarg.0
L_019f: call System.String get_GUID()
L_01a4: ldarg.1
L_01a5: ldarg.2
L_01a6: ldarg.3
L_01a7: ldarg.s 4
L_01a9: ldarg.s 5
L_01ab: ldarg.s 6
L_01ad: ldarg.s 7
L_01af: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_01b4: Label5
L_01b4: ldarg.s 5
L_01b6: stloc.1
L_01b7: ldarg.0
L_01b8: ldarg.3
L_01b9: call Single GetCurrentArmor(BattleTech.ArmorLocation)
L_01be: stloc.2
L_01bf: ldloc.2
L_01c0: ldc.r4 0
L_01c5: ble.un Label6
L_01ca: ldarg.s 5
L_01cc: ldloc.2
L_01cd: call Single Min(Single, Single)
L_01d2: stloc.s 7 (System.Single)
L_01d4: ldsfld HBS.Logging.ILog attackLogger
L_01d9: callvirt Boolean get_IsLogEnabled()
L_01de: brfalse Label7
L_01e3: ldsfld HBS.Logging.ILog attackLogger
L_01e8: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01ed: ldc.i4.5
L_01ee: newarr System.Object
L_01f3: dup
L_01f4: ldc.i4.0
L_01f5: ldarg.2
L_01f6: ldfld System.Int32 attackSequenceId
L_01fb: box System.Int32
L_0200: stelem.ref
L_0201: dup
L_0202: ldc.i4.1
L_0203: ldarg.2
L_0204: ldfld System.Int32 attackWeaponIndex
L_0209: box System.Int32
L_020e: stelem.ref
L_020f: dup
L_0210: ldc.i4.2
L_0211: ldarg.1
L_0212: box System.Int32
L_0217: stelem.ref
L_0218: dup
L_0219: ldc.i4.3
L_021a: ldarga.s 3
L_021c: constrained. BattleTech.ArmorLocation
L_0222: callvirt System.String ToString()
L_0227: stelem.ref
L_0228: dup
L_0229: ldc.i4.4
L_022a: ldloc.s 7 (System.Single)
L_022c: box System.Single
L_0231: stelem.ref
L_0232: call System.String Format(System.String, System.Object[])
L_0237: callvirt Void Log(System.Object)
L_023c: Label7
L_023c: ldsfld HBS.Logging.ILog damageLogger
L_0241: callvirt Boolean get_IsLogEnabled()
L_0246: brfalse Label8
L_024b: ldloc.2
L_024c: ldloc.s 7 (System.Single)
L_024e: sub
L_024f: stloc.s 8 (System.Single)
L_0251: ldsfld HBS.Logging.ILog damageLogger
L_0256: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_025b: ldloc.s 7 (System.Single)
L_025d: box System.Single
L_0262: ldloc.2
L_0263: box System.Single
L_0268: ldloc.s 8 (System.Single)
L_026a: box System.Single
L_026f: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0274: callvirt Void Log(System.Object)
L_0279: Label8
L_0279: ldarg.0
L_027a: ldarg.3
L_027b: ldloc.s 7 (System.Single)
L_027d: ldarg.2
L_027e: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_0283: ldarg.s 5
L_0285: ldloc.s 7 (System.Single)
L_0287: sub
L_0288: stloc.1
L_0289: Label6
L_0289: ldloc.1
L_028a: ldc.r4 0
L_028f: bgt.un Label9
L_0294: ldarg.0
L_0295: call BattleTech.CombatGameState get_Combat()
L_029a: callvirt MessageCenter get_MessageCenter()
L_029f: ldarg.2
L_02a0: ldfld System.String attackerId
L_02a5: ldarg.0
L_02a6: call System.String get_GUID()
L_02ab: ldarg.s 5
L_02ad: ldarg.3
L_02ae: newobj Void .ctor(String, String, Single, ArmorLocation)
L_02b3: callvirt Void PublishMessage(MessageCenterMessage)
L_02b8: ldc.i4.1
L_02b9: br Label24
L_02be: Label9
L_02be: ldarg.3
L_02bf: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_02c4: stloc.3
L_02c5: call UnityEngine.Vector3 get_one()
L_02ca: stloc.s 4 (UnityEngine.Vector3)
L_02cc: ldarg.0
L_02cd: call BattleTech.MechRepresentation get_GameRep()
L_02d2: ldnull
L_02d3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02d8: brfalse Label10
L_02dd: ldarg.s 4
L_02df: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02e4: ldnull
L_02e5: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02ea: brfalse Label11
L_02ef: ldarg.s 4
L_02f1: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02f6: ldfld UnityEngine.Transform[] vfxTransforms
L_02fb: ldc.i4.0
L_02fc: ldelem.ref
L_02fd: callvirt UnityEngine.Vector3 get_position()
L_0302: stloc.s 9 (UnityEngine.Vector3)
L_0304: ldarg.0
L_0305: call BattleTech.MechRepresentation get_GameRep()
L_030a: ldloc.3
L_030b: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_0310: callvirt UnityEngine.Vector3 get_position()
L_0315: ldloc.s 9 (UnityEngine.Vector3)
L_0317: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_031c: stloc.s 4 (UnityEngine.Vector3)
L_031e: ldloca.s 4 (UnityEngine.Vector3)
L_0320: call Void Normalize()
L_0325: ldloca.s 4 (UnityEngine.Vector3)
L_0327: ldc.r4 0.5
L_032c: stfld System.Single y
L_0331: ldloc.s 4 (UnityEngine.Vector3)
L_0333: ldarg.s 5
L_0335: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_033a: stloc.s 4 (UnityEngine.Vector3)
L_033c: Label10
L_033c: Label11
L_033c: ldarg.0
L_033d: ldloc.3
L_033e: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_0343: stloc.s 5 (System.Single)
L_0345: ldloc.s 5 (System.Single)
L_0347: ldc.r4 0
L_034c: ble.un Label12
L_0351: ldloc.1
L_0352: ldloc.s 5 (System.Single)
L_0354: call Single Min(Single, Single)
L_0359: stloc.s 10 (System.Single)
L_035b: ldsfld HBS.Logging.ILog attackLogger
L_0360: callvirt Boolean get_IsLogEnabled()
L_0365: brfalse Label13
L_036a: ldsfld HBS.Logging.ILog attackLogger
L_036f: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_0374: ldc.i4.5
L_0375: newarr System.Object
L_037a: dup
L_037b: ldc.i4.0
L_037c: ldarg.2
L_037d: ldfld System.Int32 attackSequenceId
L_0382: box System.Int32
L_0387: stelem.ref
L_0388: dup
L_0389: ldc.i4.1
L_038a: ldarg.2
L_038b: ldfld System.Int32 attackWeaponIndex
L_0390: box System.Int32
L_0395: stelem.ref
L_0396: dup
L_0397: ldc.i4.2
L_0398: ldarg.1
L_0399: box System.Int32
L_039e: stelem.ref
L_039f: dup
L_03a0: ldc.i4.3
L_03a1: ldloca.s 3 (BattleTech.ChassisLocations)
L_03a3: constrained. BattleTech.ChassisLocations
L_03a9: callvirt System.String ToString()
L_03ae: stelem.ref
L_03af: dup
L_03b0: ldc.i4.4
L_03b1: ldloc.s 10 (System.Single)
L_03b3: box System.Single
L_03b8: stelem.ref
L_03b9: call System.String Format(System.String, System.Object[])
L_03be: callvirt Void Log(System.Object)
L_03c3: Label13
L_03c3: ldsfld HBS.Logging.ILog damageLogger
L_03c8: callvirt Boolean get_IsLogEnabled()
L_03cd: brfalse Label14
L_03d2: ldloc.s 5 (System.Single)
L_03d4: ldloc.s 10 (System.Single)
L_03d6: sub
L_03d7: stloc.s 11 (System.Single)
L_03d9: ldsfld HBS.Logging.ILog damageLogger
L_03de: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03e3: ldloc.s 10 (System.Single)
L_03e5: box System.Single
L_03ea: ldloc.s 5 (System.Single)
L_03ec: box System.Single
L_03f1: ldloc.s 11 (System.Single)
L_03f3: box System.Single
L_03f8: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_03fd: callvirt Void Log(System.Object)
L_0402: Label14
L_0402: ldarg.0
L_0403: ldloc.3
L_0404: ldloc.s 10 (System.Single)
L_0406: ldarg.2
L_0407: call Void ApplyStructureStatDamage(BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_040c: ldloc.1
L_040d: ldloc.s 10 (System.Single)
L_040f: sub
L_0410: stloc.1
L_0411: ldarg.0
L_0412: ldloc.3
L_0413: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0418: brfalse Label15
L_041d: ldloc.s 10 (System.Single)
L_041f: ldc.r4 0.01
L_0424: ble.un Label16
L_0429: ldarg.0
L_042a: ldarg.2
L_042b: ldarg.1
L_042c: ldloc.3
L_042d: ldloc.s 4 (UnityEngine.Vector3)
L_042f: ldarg.s 8
L_0431: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_0436: br Label17
L_043b: Label12
L_043b: ldarg.0
L_043c: callvirt Boolean get_IsDead()
L_0441: brfalse Label18
L_0446: ldloc.1
L_0447: ldc.r4 0
L_044c: ble.un Label19
L_0451: ldarg.0
L_0452: ldarg.2
L_0453: ldfld System.String attackerId
L_0458: ldloc.3
L_0459: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_045e: ldc.i4.8
L_045f: ldstr "{0}"
L_0464: ldc.r4 1
L_0469: ldloc.1
L_046a: call Single Max(Single, Single)
L_046f: conv.i4
L_0470: box System.Int32
L_0475: call System.String Format(System.String, System.Object)
L_047a: ldarg.0
L_047b: call BattleTech.CombatGameState get_Combat()
L_0480: callvirt BattleTech.CombatGameConstants get_Constants()
L_0485: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_048a: ldfld System.Single floatieSizeMedium
L_048f: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_0494: Label15
L_0494: Label16
L_0494: Label17
L_0494: Label18
L_0494: Label19
L_0494: ldarg.0
L_0495: call BattleTech.CombatGameState get_Combat()
L_049a: callvirt MessageCenter get_MessageCenter()
L_049f: ldarg.2
L_04a0: ldfld System.String attackerId
L_04a5: ldarg.0
L_04a6: call System.String get_GUID()
L_04ab: ldarg.s 5
L_04ad: ldarg.3
L_04ae: newobj Void .ctor(String, String, Single, ArmorLocation)
L_04b3: callvirt Void PublishMessage(MessageCenterMessage)
L_04b8: ldloc.1
L_04b9: ldc.r4 0
L_04be: bgt.un Label20
L_04c3: ldc.i4.1
L_04c4: br Label25
L_04c9: Label20
L_04c9: ldarg.3
L_04ca: ldarg.2
L_04cb: ldfld BattleTech.AttackDirection[] attackDirections
L_04d0: ldarg.s 6
L_04d2: ldelem.i4
L_04d3: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04d8: stloc.s 6 (BattleTech.ArmorLocation)
L_04da: ldsfld HBS.Logging.ILog attackLogger
L_04df: callvirt Boolean get_IsLogEnabled()
L_04e4: brfalse Label21
L_04e9: ldsfld HBS.Logging.ILog attackLogger
L_04ee: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04f3: ldc.i4.6
L_04f4: newarr System.Object
L_04f9: dup
L_04fa: ldc.i4.0
L_04fb: ldarg.2
L_04fc: ldfld System.Int32 attackSequenceId
L_0501: box System.Int32
L_0506: stelem.ref
L_0507: dup
L_0508: ldc.i4.1
L_0509: ldarg.2
L_050a: ldfld System.Int32 attackWeaponIndex
L_050f: box System.Int32
L_0514: stelem.ref
L_0515: dup
L_0516: ldc.i4.2
L_0517: ldarg.1
L_0518: box System.Int32
L_051d: stelem.ref
L_051e: dup
L_051f: ldc.i4.3
L_0520: ldloca.s 3 (BattleTech.ChassisLocations)
L_0522: constrained. BattleTech.ChassisLocations
L_0528: callvirt System.String ToString()
L_052d: stelem.ref
L_052e: dup
L_052f: ldc.i4.4
L_0530: ldloc.1
L_0531: box System.Single
L_0536: stelem.ref
L_0537: dup
L_0538: ldc.i4.5
L_0539: ldloca.s 6 (BattleTech.ArmorLocation)
L_053b: constrained. BattleTech.ArmorLocation
L_0541: callvirt System.String ToString()
L_0546: stelem.ref
L_0547: call System.String Format(System.String, System.Object[])
L_054c: callvirt Void Log(System.Object)
L_0551: Label21
L_0551: ldsfld HBS.Logging.ILog damageLogger
L_0556: callvirt Boolean get_IsLogEnabled()
L_055b: brfalse Label22
L_0560: ldsfld HBS.Logging.ILog damageLogger
L_0565: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_056a: ldloca.s 3 (BattleTech.ChassisLocations)
L_056c: constrained. BattleTech.ChassisLocations
L_0572: callvirt System.String ToString()
L_0577: ldloc.1
L_0578: box System.Single
L_057d: ldloca.s 6 (BattleTech.ArmorLocation)
L_057f: constrained. BattleTech.ArmorLocation
L_0585: callvirt System.String ToString()
L_058a: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_058f: callvirt Void Log(System.Object)
L_0594: Label22
L_0594: ldarg.0
L_0595: ldarg.1
L_0596: ldarg.2
L_0597: ldloc.s 6 (BattleTech.ArmorLocation)
L_0599: ldarg.s 4
L_059b: ldloc.1
L_059c: ldarg.s 6
L_059e: ldarg.s 7
L_05a0: ldarg.s 8
L_05a2: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_05a7: Label23
L_05a7: Label24
L_05a7: Label25
L_05a7: stloc 12 (System.Boolean)
L_05a9: Label0
L_05a9: ldloc 12 (System.Boolean)
L_05ab: ret
DONE

### Patch BattleTech.Pilot, Void SetNeedsInjury(BattleTech.InjuryReason)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.Pilot, BattleTech.InjuryReason)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldc.i4.1
L_0013: stfld System.Boolean needsInjury
L_0018: ldarg.0
L_0019: ldfld BattleTech.InjuryReason injuryReason
L_001e: brtrue Label1
L_0023: ldarg.0
L_0024: ldarg.1
L_0025: stfld BattleTech.InjuryReason injuryReason
L_002a: Label1
L_002a: Label0
L_002a: ret
DONE

### Harmony id=io.github.mpstark.LogoReplacement, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from LogoReplacement.Main.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\LogoReplacement\LogoReplacement.dll
### At 2019-09-15 05.27.29
### Patch BattleTech.UI.MainMenu, Void Init()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: UnityEngine.GameObject[]
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Init()
L_0006: ldarg.0
L_0007: call BattleTech.GameInstance get_BattleTechGame()
L_000c: callvirt BattleTech.ApplicationConstants get_ApplicationConstants()
L_0011: stfld BattleTech.ApplicationConstants appConstants
L_0016: ldarg.0
L_0017: call BattleTech.GameInstance get_BattleTechGame()
L_001c: callvirt MessageCenter get_MessageCenter()
L_0021: stfld MessageCenter _messageCenter
L_0026: ldarg.0
L_0027: call BattleTech.GameInstance get_BattleTechGame()
L_002c: callvirt BattleTech.Save.ProfileManager get_ProfileManager()
L_0031: stfld BattleTech.Save.ProfileManager _profileManager
L_0036: call Boolean get_TestToolsEnabled()
L_003b: stloc.0
L_003c: ldarg.0
L_003d: ldfld UnityEngine.GameObject[] enableInDevelopmentbuildsOnly
L_0042: stloc.1
L_0043: ldc.i4.0
L_0044: stloc.2
L_0045: br Label1
L_004a: Label2
L_004a: ldloc.1
L_004b: ldloc.2
L_004c: ldelem.ref
L_004d: ldloc.0
L_004e: callvirt Void SetActive(Boolean)
L_0053: ldloc.2
L_0054: ldc.i4.1
L_0055: add
L_0056: stloc.2
L_0057: Label1
L_0057: ldloc.2
L_0058: ldloc.1
L_0059: ldlen
L_005a: conv.i4
L_005b: blt Label2
L_0060: ldarg.0
L_0061: call Void TestDLCBanner()
L_0066: call Void Postfix()
L_006b: call Void Postfix()
L_0070: ret
DONE

### Harmony id=MechEngineer.Features.OverrideTonnage, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideTonnage.OverrideTonnageSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.29
### Patch BattleTech.MechValidationRules, Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc.0
L_0006: ldarg.1
L_0007: callvirt BattleTech.ChassisDef get_Chassis()
L_000c: callvirt Single get_Tonnage()
L_0011: stloc.1
L_0012: ldarg.1
L_0013: ldloca.s 0 (System.Single)
L_0015: ldloca.s 1 (System.Single)
L_0017: call Void CalculateTonnage(BattleTech.MechDef, Single ByRef, Single ByRef)
L_001c: ldloc.0
L_001d: ldarg.1
L_001e: callvirt BattleTech.ChassisDef get_Chassis()
L_0023: callvirt Single get_Tonnage()
L_0028: sub
L_0029: call Single Abs(Single)
L_002e: conv.r8
L_002f: ldc.r8 9.99999974737875E-05
L_0038: bge.un Label1
L_003d: br Label4
L_0042: Label1
L_0042: ldloc.0
L_0043: ldarg.1
L_0044: callvirt BattleTech.ChassisDef get_Chassis()
L_0049: callvirt Single get_Tonnage()
L_004e: ble.un Label2
L_0053: ldarg.2
L_0054: ldc.i4.2
L_0055: ldstr "OVERWEIGHT: 'Mech weight exceeds maximum tonnage for the Chassis"
L_005a: call System.Object[] Empty[Object]()
L_005f: newobj Void .ctor(String, Object[])
L_0064: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0069: Label2
L_0069: ldloc.0
L_006a: ldarg.1
L_006b: callvirt BattleTech.ChassisDef get_Chassis()
L_0070: callvirt Single get_Tonnage()
L_0075: ldc.r4 1
L_007a: sub
L_007b: bgt.un Label3
L_0080: ldarg.2
L_0081: ldc.i4.3
L_0082: ldstr "UNDERWEIGHT: 'Mech has unused tonnage"
L_0087: call System.Object[] Empty[Object]()
L_008c: newobj Void .ctor(String, Object[])
L_0091: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0096: Label3
L_0096: Label4
L_0096: ret
DONE

### Patch BattleTech.UI.MechLabMechInfoWidget, Void CalculateTonnage()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: BattleTech.UI.UIColor
L_0000: Local var 3: BattleTech.UI.UIColor
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.MechComponentRef
L_0000: ldc.r4 100
L_0005: stloc.0
L_0006: ldarg.0
L_0007: ldc.r4 0
L_000c: stfld System.Single currentTonnage
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.MechLabPanel mechLab
L_0017: ldfld BattleTech.MechDef activeMechDef
L_001c: brfalse Label1
L_0021: ldarg.0
L_0022: ldfld BattleTech.UI.MechLabPanel mechLab
L_0027: ldfld BattleTech.MechDef activeMechDef
L_002c: callvirt BattleTech.ChassisDef get_Chassis()
L_0031: callvirt Single get_Tonnage()
L_0036: stloc.0
L_0037: ldarg.0
L_0038: ldarg.0
L_0039: ldfld BattleTech.UI.MechLabPanel mechLab
L_003e: ldfld BattleTech.MechDef activeMechDef
L_0043: callvirt BattleTech.ChassisDef get_Chassis()
L_0048: callvirt Single get_InitialTonnage()
L_004d: stfld System.Single currentTonnage
L_0052: ldc.r4 0
L_0057: stloc.s 4 (System.Single)
L_0059: ldloc.s 4 (System.Single)
L_005b: ldarg.0
L_005c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0061: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0066: ldfld System.Single currentArmor
L_006b: add
L_006c: stloc.s 4 (System.Single)
L_006e: ldloc.s 4 (System.Single)
L_0070: ldarg.0
L_0071: ldfld BattleTech.UI.MechLabPanel mechLab
L_0076: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_007b: ldfld System.Single currentArmor
L_0080: add
L_0081: stloc.s 4 (System.Single)
L_0083: ldloc.s 4 (System.Single)
L_0085: ldarg.0
L_0086: ldfld BattleTech.UI.MechLabPanel mechLab
L_008b: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0090: ldfld System.Single currentRearArmor
L_0095: add
L_0096: stloc.s 4 (System.Single)
L_0098: ldloc.s 4 (System.Single)
L_009a: ldarg.0
L_009b: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a0: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00a5: ldfld System.Single currentArmor
L_00aa: add
L_00ab: stloc.s 4 (System.Single)
L_00ad: ldloc.s 4 (System.Single)
L_00af: ldarg.0
L_00b0: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b5: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00ba: ldfld System.Single currentRearArmor
L_00bf: add
L_00c0: stloc.s 4 (System.Single)
L_00c2: ldloc.s 4 (System.Single)
L_00c4: ldarg.0
L_00c5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00ca: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00cf: ldfld System.Single currentArmor
L_00d4: add
L_00d5: stloc.s 4 (System.Single)
L_00d7: ldloc.s 4 (System.Single)
L_00d9: ldarg.0
L_00da: ldfld BattleTech.UI.MechLabPanel mechLab
L_00df: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00e4: ldfld System.Single currentRearArmor
L_00e9: add
L_00ea: stloc.s 4 (System.Single)
L_00ec: ldloc.s 4 (System.Single)
L_00ee: ldarg.0
L_00ef: ldfld BattleTech.UI.MechLabPanel mechLab
L_00f4: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00f9: ldfld System.Single currentArmor
L_00fe: add
L_00ff: stloc.s 4 (System.Single)
L_0101: ldloc.s 4 (System.Single)
L_0103: ldarg.0
L_0104: ldfld BattleTech.UI.MechLabPanel mechLab
L_0109: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_010e: ldfld System.Single currentArmor
L_0113: add
L_0114: stloc.s 4 (System.Single)
L_0116: ldloc.s 4 (System.Single)
L_0118: ldarg.0
L_0119: ldfld BattleTech.UI.MechLabPanel mechLab
L_011e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0123: ldfld System.Single currentArmor
L_0128: add
L_0129: stloc.s 4 (System.Single)
L_012b: ldloc.s 4 (System.Single)
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0138: ldfld System.Single currentArmor
L_013d: add
L_013e: stloc.s 4 (System.Single)
L_0140: ldarg.0
L_0141: ldarg.0
L_0142: ldfld System.Single currentTonnage
L_0147: ldloc.s 4 (System.Single)
L_0149: call BattleTech.GameInstance get_BattleTechGame()
L_014e: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_0153: ldfld System.Single ARMOR_PER_TENTH_TON
L_0158: ldc.r4 10
L_015d: mul
L_015e: div
L_015f: add
L_0160: stfld System.Single currentTonnage
L_0165: ldc.i4.0
L_0166: stloc.s 5 (System.Int32)
L_0168: br Label2
L_016d: Label3
L_016d: ldarg.0
L_016e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0173: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0178: ldloc.s 5 (System.Int32)
L_017a: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_017f: stloc.s 6 (BattleTech.MechComponentRef)
L_0181: ldarg.0
L_0182: ldarg.0
L_0183: ldfld System.Single currentTonnage
L_0188: ldloc.s 6 (BattleTech.MechComponentRef)
L_018a: callvirt BattleTech.MechComponentDef get_Def()
L_018f: callvirt Single get_Tonnage()
L_0194: add
L_0195: stfld System.Single currentTonnage
L_019a: ldloc.s 5 (System.Int32)
L_019c: ldc.i4.1
L_019d: add
L_019e: stloc.s 5 (System.Int32)
L_01a0: Label2
L_01a0: ldloc.s 5 (System.Int32)
L_01a2: ldarg.0
L_01a3: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a8: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_01ad: callvirt Int32 get_Count()
L_01b2: blt Label3
L_01b7: Label1
L_01b7: ldloc.0
L_01b8: ldarg.0
L_01b9: ldfld System.Single currentTonnage
L_01be: sub
L_01bf: stloc.1
L_01c0: ldloc.1
L_01c1: ldc.r4 0
L_01c6: blt Label4
L_01cb: ldc.i4.s 26
L_01cd: br Label5
L_01d2: Label4
L_01d2: ldc.i4.7
L_01d3: Label5
L_01d3: stloc.2
L_01d4: ldloc.1
L_01d5: ldc.r4 0
L_01da: blt Label6
L_01df: ldloc.1
L_01e0: ldc.r4 5
L_01e5: ble Label7
L_01ea: ldc.i4.1
L_01eb: br Label8
L_01f0: Label7
L_01f0: ldc.i4.6
L_01f1: br Label9
L_01f6: Label6
L_01f6: ldc.i4.7
L_01f7: Label8
L_01f7: Label9
L_01f7: stloc.3
L_01f8: ldarg.0
L_01f9: ldfld BattleTech.UI.TMProWrapper.LocalizableText totalTonnage
L_01fe: ldstr "{0:0.##} / {1}"
L_0203: ldc.i4.2
L_0204: newarr System.Object
L_0209: dup
L_020a: ldc.i4.0
L_020b: ldarg.0
L_020c: ldfld System.Single currentTonnage
L_0211: box System.Single
L_0216: stelem.ref
L_0217: dup
L_0218: ldc.i4.1
L_0219: ldloc.0
L_021a: box System.Single
L_021f: stelem.ref
L_0220: callvirt Void SetText(System.String, System.Object[])
L_0225: ldarg.0
L_0226: ldfld BattleTech.UI.UIColorRefTracker totalTonnageColor
L_022b: ldloc.2
L_022c: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0231: ldloc.1
L_0232: ldc.r4 0
L_0237: bge.un Label10
L_023c: ldloc.1
L_023d: call Single Abs(Single)
L_0242: stloc.1
L_0243: ldarg.0
L_0244: ldfld BattleTech.UI.TMProWrapper.LocalizableText remainingTonnage
L_0249: ldstr "{0:0.##} ton{1} overweight"
L_024e: ldc.i4.2
L_024f: newarr System.Object
L_0254: dup
L_0255: ldc.i4.0
L_0256: ldloc.1
L_0257: box System.Single
L_025c: stelem.ref
L_025d: dup
L_025e: ldc.i4.1
L_025f: ldloc.1
L_0260: ldc.r4 1
L_0265: beq Label11
L_026a: ldstr "s"
L_026f: br Label12
L_0274: Label11
L_0274: ldstr ""
L_0279: Label12
L_0279: stelem.ref
L_027a: callvirt Void SetText(System.String, System.Object[])
L_027f: br Label13
L_0284: Label10
L_0284: ldarg.0
L_0285: ldfld BattleTech.UI.TMProWrapper.LocalizableText remainingTonnage
L_028a: ldstr "{0:0.##} ton{1} remaining"
L_028f: ldc.i4.2
L_0290: newarr System.Object
L_0295: dup
L_0296: ldc.i4.0
L_0297: ldloc.1
L_0298: box System.Single
L_029d: stelem.ref
L_029e: dup
L_029f: ldc.i4.1
L_02a0: ldloc.1
L_02a1: ldc.r4 1
L_02a6: beq Label14
L_02ab: ldstr "s"
L_02b0: br Label15
L_02b5: Label14
L_02b5: ldstr ""
L_02ba: Label15
L_02ba: stelem.ref
L_02bb: callvirt Void SetText(System.String, System.Object[])
L_02c0: Label13
L_02c0: ldarg.0
L_02c1: ldfld BattleTech.UI.UIColorRefTracker remainingTonnageColor
L_02c6: ldloc.3
L_02c7: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_02cc: ldarg.0
L_02cd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d2: ldarg.0
L_02d3: ldflda System.Single currentTonnage
L_02d8: ldarg.0
L_02d9: ldfld BattleTech.UI.TMProWrapper.LocalizableText totalTonnage
L_02de: ldarg.0
L_02df: ldfld BattleTech.UI.UIColorRefTracker totalTonnageColor
L_02e4: ldarg.0
L_02e5: ldfld BattleTech.UI.TMProWrapper.LocalizableText remainingTonnage
L_02ea: ldarg.0
L_02eb: ldfld BattleTech.UI.UIColorRefTracker remainingTonnageColor
L_02f0: call Void Postfix(BattleTech.UI.MechLabPanel, Single ByRef, TMPro.TextMeshProUGUI, BattleTech.UI.UIColorRefTracker, TMPro.TextMeshProUGUI, BattleTech.UI.UIColorRefTracker)
L_02f5: ret
DONE

### Patch BattleTech.MechStatisticsRules, Void CalculateTonnage(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.MechComponentRef
L_0000: ldarg.2
L_0001: ldc.r4 100
L_0006: stind.r4
L_0007: ldarg.1
L_0008: ldarg.0
L_0009: callvirt BattleTech.ChassisDef get_Chassis()
L_000e: callvirt Single get_InitialTonnage()
L_0013: stind.r4
L_0014: ldc.r4 0
L_0019: stloc.0
L_001a: ldloc.0
L_001b: ldarg.0
L_001c: callvirt BattleTech.LocationLoadoutDef get_Head()
L_0021: ldfld System.Single AssignedArmor
L_0026: add
L_0027: stloc.0
L_0028: ldloc.0
L_0029: ldarg.0
L_002a: callvirt BattleTech.LocationLoadoutDef get_CenterTorso()
L_002f: ldfld System.Single AssignedArmor
L_0034: add
L_0035: stloc.0
L_0036: ldloc.0
L_0037: ldarg.0
L_0038: callvirt BattleTech.LocationLoadoutDef get_CenterTorso()
L_003d: ldfld System.Single AssignedRearArmor
L_0042: add
L_0043: stloc.0
L_0044: ldloc.0
L_0045: ldarg.0
L_0046: callvirt BattleTech.LocationLoadoutDef get_LeftTorso()
L_004b: ldfld System.Single AssignedArmor
L_0050: add
L_0051: stloc.0
L_0052: ldloc.0
L_0053: ldarg.0
L_0054: callvirt BattleTech.LocationLoadoutDef get_LeftTorso()
L_0059: ldfld System.Single AssignedRearArmor
L_005e: add
L_005f: stloc.0
L_0060: ldloc.0
L_0061: ldarg.0
L_0062: callvirt BattleTech.LocationLoadoutDef get_RightTorso()
L_0067: ldfld System.Single AssignedArmor
L_006c: add
L_006d: stloc.0
L_006e: ldloc.0
L_006f: ldarg.0
L_0070: callvirt BattleTech.LocationLoadoutDef get_RightTorso()
L_0075: ldfld System.Single AssignedRearArmor
L_007a: add
L_007b: stloc.0
L_007c: ldloc.0
L_007d: ldarg.0
L_007e: callvirt BattleTech.LocationLoadoutDef get_LeftArm()
L_0083: ldfld System.Single AssignedArmor
L_0088: add
L_0089: stloc.0
L_008a: ldloc.0
L_008b: ldarg.0
L_008c: callvirt BattleTech.LocationLoadoutDef get_RightArm()
L_0091: ldfld System.Single AssignedArmor
L_0096: add
L_0097: stloc.0
L_0098: ldloc.0
L_0099: ldarg.0
L_009a: callvirt BattleTech.LocationLoadoutDef get_LeftLeg()
L_009f: ldfld System.Single AssignedArmor
L_00a4: add
L_00a5: stloc.0
L_00a6: ldloc.0
L_00a7: ldarg.0
L_00a8: callvirt BattleTech.LocationLoadoutDef get_RightLeg()
L_00ad: ldfld System.Single AssignedArmor
L_00b2: add
L_00b3: stloc.0
L_00b4: ldarg.1
L_00b5: ldarg.1
L_00b6: ldind.r4
L_00b7: ldloc.0
L_00b8: call BattleTech.GameInstance get_BattleTechGame()
L_00bd: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_00c2: ldfld System.Single ARMOR_PER_TENTH_TON
L_00c7: ldc.r4 10
L_00cc: mul
L_00cd: div
L_00ce: add
L_00cf: stind.r4
L_00d0: ldc.i4.0
L_00d1: stloc.1
L_00d2: br Label1
L_00d7: Label2
L_00d7: ldarg.0
L_00d8: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_00dd: ldloc.1
L_00de: ldelem.ref
L_00df: stloc.2
L_00e0: ldarg.1
L_00e1: ldarg.1
L_00e2: ldind.r4
L_00e3: ldloc.2
L_00e4: callvirt BattleTech.MechComponentDef get_Def()
L_00e9: callvirt Single get_Tonnage()
L_00ee: add
L_00ef: stind.r4
L_00f0: ldloc.1
L_00f1: ldc.i4.1
L_00f2: add
L_00f3: stloc.1
L_00f4: Label1
L_00f4: ldloc.1
L_00f5: ldarg.0
L_00f6: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_00fb: ldlen
L_00fc: conv.i4
L_00fd: blt Label2
L_0102: ldarg 0
L_0108: ldarg 1
L_010e: ldarg 2
L_0114: call Void Postfix(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0119: ret
DONE

### Harmony id=MechEngineer.Features.Engines, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.Engines.EngineSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.29
### Patch BattleTech.Contract, Void GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean)
L_0000: Local var 0: BattleTech.SimGameState
L_0000: Local var 1: BattleTech.SimGameConstants
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: Local var 6: System.Single
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.MechDef
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Boolean
L_0000: Local var 12: BattleTech.MechComponentRef[]
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.MechComponentRef
L_0000: Local var 15: BattleTech.SalvageDef
L_0000: Local var 16: System.Int32
L_0000: Local var 17: BattleTech.MechDef
L_0000: Local var 18: BattleTech.Pilot
L_0000: Local var 19: BattleTech.SalvageDef
L_0000: Local var 20: System.Boolean
L_0000: Local var 21: System.Boolean
L_0000: Local var 22: BattleTech.MechComponentRef
L_0000: Local var 23: System.Collections.IEnumerator
L_0000: Local var 24: BattleTech.ChassisLocations
L_0000: Local var 25: System.IDisposable
L_0000: Local var 26: System.Int32
L_0000: Local var 27: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 28: System.Int32
L_0000: Local var 29: System.Collections.Generic.IEnumerator`1[[BattleTech.VehicleComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 30: BattleTech.VehicleComponentRef
L_0000: Local var 31: System.String
L_0000: Local var 32: System.Collections.Generic.List`1+Enumerator[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 33: BattleTech.SalvageDef
L_0000: ldarg 1
L_0006: ldarg 2
L_000c: ldarg 3
L_0012: ldarg 4
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_001f: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_0024: brfalse Label0
L_0029: ldarg 1
L_002f: ldarg 2
L_0035: ldarg 3
L_003b: ldarg 4
L_0041: ldarg.0
L_0042: ldarg.0
L_0043: ldflda System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0048: call Boolean GenerateSalvage(System.Collections.Generic.List`1[BattleTech.UnitResult], System.Collections.Generic.List`1[BattleTech.VehicleDef], System.Collections.Generic.List`1[BattleTech.UnitResult], Boolean, BattleTech.Contract, System.Collections.Generic.List`1[BattleTech.SalvageDef] ByRef)
L_004d: brfalse Label0
L_0052: ldarg.0
L_0053: ldarg.s 4
L_0055: stfld System.Boolean loggingSalvageResults
L_005a: ldarg.0
L_005b: call BattleTech.GameInstance get_BattleTechGame()
L_0060: callvirt BattleTech.SimGameState get_Simulation()
L_0065: brtrue Label1
L_006a: ldsfld HBS.Logging.ILog logger
L_006f: ldstr "Can't generate salvage without sim game."
L_0074: callvirt Void LogError(System.Object)
L_0079: br Label57
L_007e: Label1
L_007e: ldarg.0
L_007f: newobj Void .ctor()
L_0084: stfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0089: ldarg.0
L_008a: newobj Void .ctor()
L_008f: call Void set_SalvagedChassis(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_0094: ldarg.0
L_0095: newobj Void .ctor()
L_009a: call Void set_LostMechs(System.Collections.Generic.List`1[BattleTech.MechDef])
L_009f: ldarg.0
L_00a0: newobj Void .ctor()
L_00a5: call Void set_SalvageResults(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_00aa: ldarg.0
L_00ab: call BattleTech.GameInstance get_BattleTechGame()
L_00b0: callvirt BattleTech.SimGameState get_Simulation()
L_00b5: stloc.0
L_00b6: ldloc.0
L_00b7: callvirt BattleTech.SimGameConstants get_Constants()
L_00bc: stloc.1
L_00bd: ldc.i4.0
L_00be: stloc.s 8 (System.Int32)
L_00c0: br Label2
L_00c5: Label9
L_00c5: ldarg.3
L_00c6: ldloc.s 8 (System.Int32)
L_00c8: callvirt BattleTech.UnitResult get_Item(Int32)
L_00cd: ldfld BattleTech.MechDef mech
L_00d2: stloc.s 9 (BattleTech.MechDef)
L_00d4: ldloc.0
L_00d5: callvirt NetworkRandom get_NetworkRandom()
L_00da: ldc.r4 0
L_00df: ldc.r4 1
L_00e4: callvirt Single Float(Single, Single)
L_00e9: stloc.s 10 (System.Single)
L_00eb: ldloc.s 10 (System.Single)
L_00ed: ldloc.1
L_00ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_00f3: ldfld System.Single DestroyedMechRecoveryChance
L_00f8: cgt.un
L_00fa: ldc.i4.0
L_00fb: ceq
L_00fd: stloc.s 11 (System.Boolean)
L_00ff: ldsfld HBS.Logging.ILog logger
L_0104: ldstr "Player Unit {0}:  {1} was destroyed in combat. Attempting to recover. Did Torso Get Destroyed? {2}."
L_0109: ldloc.s 8 (System.Int32)
L_010b: box System.Int32
L_0110: ldloc.s 9 (BattleTech.MechDef)
L_0112: callvirt BattleTech.DescriptionDef get_Description()
L_0117: callvirt System.String get_Name()
L_011c: ldloc.s 9 (BattleTech.MechDef)
L_011e: ldc.i4.8
L_011f: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0124: box System.Boolean
L_0129: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_012e: callvirt Void LogWarning(System.Object)
L_0133: ldsfld HBS.Logging.ILog logger
L_0138: ldstr "Rolled a recovery roll of {0}, attempting to roll below {1}"
L_013d: ldloc.s 10 (System.Single)
L_013f: box System.Single
L_0144: ldloc.1
L_0145: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_014a: ldfld System.Single DestroyedMechRecoveryChance
L_014f: box System.Single
L_0154: call System.String Format(System.String, System.Object, System.Object)
L_0159: callvirt Void LogWarning(System.Object)
L_015e: ldloc.s 9 (BattleTech.MechDef)
L_0160: ldc.i4.8
L_0161: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0166: ldc.i4.0
L_0167: ceq
L_0169: ldloc.s 11 (System.Boolean)
L_016b: or
L_016c: brfalse Label3
L_0171: ldsfld HBS.Logging.ILog logger
L_0176: ldstr "Recovery Succeeded"
L_017b: callvirt Void LogWarning(System.Object)
L_0180: ldarg.3
L_0181: ldloc.s 8 (System.Int32)
L_0183: callvirt BattleTech.UnitResult get_Item(Int32)
L_0188: ldc.i4.0
L_0189: stfld System.Boolean mechLost
L_018e: br Label4
L_0193: Label3
L_0193: ldsfld HBS.Logging.ILog logger
L_0198: ldstr "Recovery Failed, Unit Lost"
L_019d: callvirt Void LogWarning(System.Object)
L_01a2: ldarg.3
L_01a3: ldloc.s 8 (System.Int32)
L_01a5: callvirt BattleTech.UnitResult get_Item(Int32)
L_01aa: ldc.i4.1
L_01ab: stfld System.Boolean mechLost
L_01b0: ldloc.s 9 (BattleTech.MechDef)
L_01b2: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_01b7: stloc.s 12 (BattleTech.MechComponentRef[])
L_01b9: ldc.i4.0
L_01ba: stloc.s 13 (System.Int32)
L_01bc: br Label5
L_01c1: Label8
L_01c1: ldloc.s 12 (BattleTech.MechComponentRef[])
L_01c3: ldloc.s 13 (System.Int32)
L_01c5: ldelem.ref
L_01c6: stloc.s 14 (BattleTech.MechComponentRef)
L_01c8: ldloc.s 9 (BattleTech.MechDef)
L_01ca: ldloc.s 14 (BattleTech.MechComponentRef)
L_01cc: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d1: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_01d6: brtrue Label6
L_01db: ldloc.s 14 (BattleTech.MechComponentRef)
L_01dd: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_01e2: ldc.i4.4
L_01e3: beq Label7
L_01e8: newobj Void .ctor()
L_01ed: stloc.s 15 (BattleTech.SalvageDef)
L_01ef: ldloc.s 15 (BattleTech.SalvageDef)
L_01f1: ldloc.s 14 (BattleTech.MechComponentRef)
L_01f3: callvirt BattleTech.MechComponentDef get_Def()
L_01f8: stfld BattleTech.MechComponentDef MechComponentDef
L_01fd: ldloc.s 15 (BattleTech.SalvageDef)
L_01ff: ldloc.s 14 (BattleTech.MechComponentRef)
L_0201: callvirt BattleTech.MechComponentDef get_Def()
L_0206: callvirt BattleTech.DescriptionDef get_Description()
L_020b: newobj Void .ctor(DescriptionDef)
L_0210: stfld BattleTech.DescriptionDef Description
L_0215: ldloc.s 15 (BattleTech.SalvageDef)
L_0217: ldarg.0
L_0218: call System.String GenerateRewardUID()
L_021d: stfld System.String RewardID
L_0222: ldloc.s 15 (BattleTech.SalvageDef)
L_0224: ldc.i4.1
L_0225: stfld BattleTech.SalvageDef+SalvageType Type
L_022a: ldloc.s 15 (BattleTech.SalvageDef)
L_022c: ldloc.s 14 (BattleTech.MechComponentRef)
L_022e: callvirt BattleTech.MechComponentDef get_Def()
L_0233: callvirt BattleTech.ComponentType get_ComponentType()
L_0238: stfld BattleTech.ComponentType ComponentType
L_023d: ldloc.s 15 (BattleTech.SalvageDef)
L_023f: ldc.i4.0
L_0240: stfld System.Boolean Damaged
L_0245: ldloc.s 15 (BattleTech.SalvageDef)
L_0247: ldc.i4.1
L_0248: stfld System.Int32 Count
L_024d: ldarg.0
L_024e: ldloc.s 15 (BattleTech.SalvageDef)
L_0250: call Void AddToFinalSalvage(BattleTech.SalvageDef)
L_0255: Label6
L_0255: Label7
L_0255: ldloc.s 13 (System.Int32)
L_0257: ldc.i4.1
L_0258: add
L_0259: stloc.s 13 (System.Int32)
L_025b: Label5
L_025b: ldloc.s 13 (System.Int32)
L_025d: ldloc.s 12 (BattleTech.MechComponentRef[])
L_025f: ldlen
L_0260: conv.i4
L_0261: blt Label8
L_0266: Label4
L_0266: ldloc.s 8 (System.Int32)
L_0268: ldc.i4.1
L_0269: add
L_026a: stloc.s 8 (System.Int32)
L_026c: Label2
L_026c: ldloc.s 8 (System.Int32)
L_026e: ldarg.3
L_026f: callvirt Int32 get_Count()
L_0274: blt Label9
L_0279: ldc.i4.0
L_027a: stloc.s 16 (System.Int32)
L_027c: br Label10
L_0281: Label36
L_0281: ldarg.1
L_0282: ldloc.s 16 (System.Int32)
L_0284: callvirt BattleTech.UnitResult get_Item(Int32)
L_0289: ldfld BattleTech.MechDef mech
L_028e: stloc.s 17 (BattleTech.MechDef)
L_0290: ldarg.1
L_0291: ldloc.s 16 (System.Int32)
L_0293: callvirt BattleTech.UnitResult get_Item(Int32)
L_0298: ldfld BattleTech.Pilot pilot
L_029d: stloc.s 18 (BattleTech.Pilot)
L_029f: ldnull
L_02a0: stloc.s 19 (BattleTech.SalvageDef)
L_02a2: ldc.i4.0
L_02a3: stloc.s 20 (System.Boolean)
L_02a5: ldc.i4.0
L_02a6: stloc.s 21 (System.Boolean)
L_02a8: ldloc.s 17 (BattleTech.MechDef)
L_02aa: ldc.i4.8
L_02ab: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02b0: brfalse Label11
L_02b5: ldarg.0
L_02b6: ldloc.1
L_02b7: ldloc.s 17 (BattleTech.MechDef)
L_02b9: ldc.i4.1
L_02ba: ldarg.0
L_02bb: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02c0: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02c5: br Label12
L_02ca: Label11
L_02ca: ldloc.s 17 (BattleTech.MechDef)
L_02cc: ldc.i4.s 64
L_02ce: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02d3: brfalse Label13
L_02d8: ldloc.s 17 (BattleTech.MechDef)
L_02da: ldc.i4 128
L_02df: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_02e4: brfalse Label14
L_02e9: ldc.i4.1
L_02ea: stloc.s 20 (System.Boolean)
L_02ec: ldarg.0
L_02ed: ldloc.1
L_02ee: ldloc.s 17 (BattleTech.MechDef)
L_02f0: ldc.i4.2
L_02f1: ldarg.0
L_02f2: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_02f7: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_02fc: br Label15
L_0301: Label13
L_0301: Label14
L_0301: ldloc.s 18 (BattleTech.Pilot)
L_0303: call Boolean IsIncapacitated(BattleTech.Pilot)
L_0308: brtrue Label16
L_030d: ldloc.s 17 (BattleTech.MechDef)
L_030f: ldc.i4.1
L_0310: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0315: brfalse Label17
L_031a: Label16
L_031a: ldarg.0
L_031b: ldloc.1
L_031c: ldloc.s 17 (BattleTech.MechDef)
L_031e: ldc.i4.3
L_031f: ldarg.0
L_0320: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0325: call Void CreateAndAddMechPart(BattleTech.SimGameConstants, BattleTech.MechDef, Int32, System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_032a: Label12
L_032a: Label15
L_032a: ldloc.s 17 (BattleTech.MechDef)
L_032c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0331: stloc.s 12 (BattleTech.MechComponentRef[])
L_0333: ldc.i4.0
L_0334: stloc.s 13 (System.Int32)
L_0336: br Label18
L_033b: Label21
L_033b: ldloc.s 12 (BattleTech.MechComponentRef[])
L_033d: ldloc.s 13 (System.Int32)
L_033f: ldelem.ref
L_0340: stloc.s 22 (BattleTech.MechComponentRef)
L_0342: ldloc.s 17 (BattleTech.MechDef)
L_0344: ldloc.s 22 (BattleTech.MechComponentRef)
L_0346: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_034b: call Boolean IsLocationDestroyed(BattleTech.MechDef, BattleTech.ChassisLocations)
L_0350: brtrue Label19
L_0355: ldloc.s 22 (BattleTech.MechComponentRef)
L_0357: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_035c: ldc.i4.4
L_035d: beq Label20
L_0362: ldarg.0
L_0363: ldarg.0
L_0364: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0369: ldloc.s 22 (BattleTech.MechComponentRef)
L_036b: callvirt BattleTech.MechComponentDef get_Def()
L_0370: ldc.i4.0
L_0371: ldc.i4.0
L_0372: ldloc.1
L_0373: ldloc.0
L_0374: callvirt NetworkRandom get_NetworkRandom()
L_0379: ldc.i4.1
L_037a: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
L_037f: Label19
L_037f: Label20
L_037f: ldloc.s 13 (System.Int32)
L_0381: ldc.i4.1
L_0382: add
L_0383: stloc.s 13 (System.Int32)
L_0385: Label18
L_0385: ldloc.s 13 (System.Int32)
L_0387: ldloc.s 12 (BattleTech.MechComponentRef[])
L_0389: ldlen
L_038a: conv.i4
L_038b: blt Label21
L_0390: ldloc.s 21 (System.Boolean)
L_0392: brfalse Label22
L_0397: newobj Void .ctor()
L_039c: stloc.s 19 (BattleTech.SalvageDef)
L_039e: ldloc.s 19 (BattleTech.SalvageDef)
L_03a0: ldc.i4.3
L_03a1: stfld BattleTech.SalvageDef+SalvageType Type
L_03a6: ldloc.s 19 (BattleTech.SalvageDef)
L_03a8: ldloc.s 17 (BattleTech.MechDef)
L_03aa: callvirt BattleTech.ChassisDef get_Chassis()
L_03af: callvirt BattleTech.DescriptionDef get_Description()
L_03b4: newobj Void .ctor(DescriptionDef)
L_03b9: stfld BattleTech.DescriptionDef Description
L_03be: ldloc.s 19 (BattleTech.SalvageDef)
L_03c0: ldc.i4.1
L_03c1: stfld System.Int32 Count
L_03c6: ldtoken BattleTech.ChassisLocations
L_03cb: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_03d0: call System.Array GetValues(System.Type)
L_03d5: callvirt System.Collections.IEnumerator GetEnumerator()
L_03da: stloc.s 23 (System.Collections.IEnumerator)
.try
{
	L_03dc: br Label23
	L_03e1: Label30
	L_03e1: ldloc.s 23 (System.Collections.IEnumerator)
	L_03e3: callvirt System.Object get_Current()
	L_03e8: unbox.any BattleTech.ChassisLocations
	L_03ed: stloc.s 24 (BattleTech.ChassisLocations)
	L_03ef: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f1: brfalse Label24
	L_03f6: ldloc.s 24 (BattleTech.ChassisLocations)
	L_03f8: ldc.i4 255
	L_03fd: beq Label25
	L_0402: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0404: ldc.i4.s 34
	L_0406: beq Label26
	L_040b: ldloc.s 24 (BattleTech.ChassisLocations)
	L_040d: ldc.i4 192
	L_0412: beq Label27
	L_0417: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0419: ldc.i4.s 28
	L_041b: beq Label28
	L_0420: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0422: ldc.i4.s 62
	L_0424: beq Label29
	L_0429: ldloc.s 19 (BattleTech.SalvageDef)
	L_042b: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
	L_0430: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0432: callvirt Void Add(BattleTech.ChassisLocations)
	L_0437: ldloc.s 19 (BattleTech.SalvageDef)
	L_0439: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
	L_043e: ldloc.s 17 (BattleTech.MechDef)
	L_0440: ldloc.s 24 (BattleTech.ChassisLocations)
	L_0442: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_0447: ldfld System.Single CurrentInternalStructure
	L_044c: callvirt Void Add(Single)
	L_0451: Label23
	L_0451: Label24
	L_0451: Label25
	L_0451: Label26
	L_0451: Label27
	L_0451: Label28
	L_0451: Label29
	L_0451: ldloc.s 23 (System.Collections.IEnumerator)
	L_0453: callvirt Boolean MoveNext()
	L_0458: brtrue Label30
	L_045d: leave Label31
	L_0462: leave (autogenerated)
} // end try
.finally
{
	L_0467: ldloc.s 23 (System.Collections.IEnumerator)
	L_0469: isinst System.IDisposable
	L_046e: stloc.s 25 (System.IDisposable)
	L_0470: ldloc.s 25 (System.IDisposable)
	L_0472: brfalse Label32
	L_0477: ldloc.s 25 (System.IDisposable)
	L_0479: callvirt Void Dispose()
	L_047e: Label32
	L_047e: endfinally
	L_047f: leave (autogenerated)
} // end handler
L_0480: Label31
L_0480: ldloc.s 20 (System.Boolean)
L_0482: brfalse Label33
L_0487: ldc.i4.0
L_0488: stloc.s 26 (System.Int32)
L_048a: br Label34
L_048f: Label35
L_048f: ldloc.s 19 (BattleTech.SalvageDef)
L_0491: ldfld System.Collections.Generic.List`1[System.Single] ChassisStructure
L_0496: stloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_0498: ldloc.s 26 (System.Int32)
L_049a: stloc.s 13 (System.Int32)
L_049c: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_049e: ldloc.s 13 (System.Int32)
L_04a0: ldloc.s 27 (System.Collections.Generic.List`1[System.Single])
L_04a2: ldloc.s 13 (System.Int32)
L_04a4: callvirt Single get_Item(Int32)
L_04a9: ldc.r4 2
L_04ae: div
L_04af: callvirt Void set_Item(Int32, Single)
L_04b4: ldloc.s 26 (System.Int32)
L_04b6: ldc.i4.1
L_04b7: add
L_04b8: stloc.s 26 (System.Int32)
L_04ba: Label34
L_04ba: ldloc.s 26 (System.Int32)
L_04bc: ldloc.s 19 (BattleTech.SalvageDef)
L_04be: ldfld System.Collections.Generic.List`1[BattleTech.ChassisLocations] ChassisLocations
L_04c3: callvirt Int32 get_Count()
L_04c8: blt Label35
L_04cd: Label33
L_04cd: ldloc.s 19 (BattleTech.SalvageDef)
L_04cf: ldloc.1
L_04d0: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_04d5: ldfld System.Int32 DefaultChassisWeight
L_04da: stfld System.Int32 Weight
L_04df: ldarg.0
L_04e0: call System.Collections.Generic.List`1[BattleTech.SalvageDef] get_SalvagedChassis()
L_04e5: ldloc.s 19 (BattleTech.SalvageDef)
L_04e7: callvirt Void Add(BattleTech.SalvageDef)
L_04ec: Label17
L_04ec: Label22
L_04ec: ldloc.s 16 (System.Int32)
L_04ee: ldc.i4.1
L_04ef: add
L_04f0: stloc.s 16 (System.Int32)
L_04f2: Label10
L_04f2: ldloc.s 16 (System.Int32)
L_04f4: ldarg.1
L_04f5: callvirt Int32 get_Count()
L_04fa: blt Label36
L_04ff: ldc.i4.0
L_0500: stloc.s 28 (System.Int32)
L_0502: br Label37
L_0507: Label42
L_0507: ldarg.2
L_0508: ldloc.s 28 (System.Int32)
L_050a: callvirt BattleTech.VehicleDef get_Item(Int32)
L_050f: callvirt System.Collections.Generic.IEnumerable`1[BattleTech.VehicleComponentRef] get_Inventory()
L_0514: callvirt System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef] GetEnumerator()
L_0519: stloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
.try
{
	L_051b: br Label38
	L_0520: Label39
	L_0520: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0522: callvirt BattleTech.VehicleComponentRef get_Current()
	L_0527: stloc.s 30 (BattleTech.VehicleComponentRef)
	L_0529: ldarg.0
	L_052a: ldarg.0
	L_052b: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
	L_0530: ldloc.s 30 (BattleTech.VehicleComponentRef)
	L_0532: callvirt BattleTech.MechComponentDef get_Def()
	L_0537: ldc.i4.0
	L_0538: ldc.i4.0
	L_0539: ldloc.1
	L_053a: ldloc.0
	L_053b: callvirt NetworkRandom get_NetworkRandom()
	L_0540: ldc.i4.1
	L_0541: call Void AddMechComponentToSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef], BattleTech.MechComponentDef, BattleTech.ComponentDamageLevel, Boolean, BattleTech.SimGameConstants, NetworkRandom, Boolean)
	L_0546: Label38
	L_0546: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0548: callvirt Boolean MoveNext()
	L_054d: brtrue Label39
	L_0552: leave Label40
	L_0557: leave (autogenerated)
} // end try
.finally
{
	L_055c: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_055e: brfalse Label41
	L_0563: ldloc.s 29 (System.Collections.Generic.IEnumerator`1[BattleTech.VehicleComponentRef])
	L_0565: callvirt Void Dispose()
	L_056a: Label41
	L_056a: endfinally
	L_056b: leave (autogenerated)
} // end handler
L_056c: Label40
L_056c: ldloc.s 28 (System.Int32)
L_056e: ldc.i4.1
L_056f: add
L_0570: stloc.s 28 (System.Int32)
L_0572: Label37
L_0572: ldloc.s 28 (System.Int32)
L_0574: ldarg.2
L_0575: callvirt Int32 get_Count()
L_057a: blt Label42
L_057f: ldarg.0
L_0580: ldarg.0
L_0581: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0586: call Void FilterPotentialSalvage(System.Collections.Generic.List`1[BattleTech.SalvageDef])
L_058b: ldarg.0
L_058c: call Int32 get_SalvagePotential()
L_0591: stloc.2
L_0592: ldloc.1
L_0593: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_0598: ldfld System.Single VictorySalvageChance
L_059d: stloc.3
L_059e: ldloc.1
L_059f: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05a4: ldfld System.Single VictorySalvageLostPerMechDestroyed
L_05a9: stloc.s 4 (System.Single)
L_05ab: ldarg.0
L_05ac: call ContractState get_State()
L_05b1: ldc.i4.5
L_05b2: bne.un Label43
L_05b7: ldloc.1
L_05b8: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05bd: ldfld System.Single DefeatSalvageChance
L_05c2: stloc.3
L_05c3: ldloc.1
L_05c4: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05c9: ldfld System.Single DefeatSalvageLostPerMechDestroyed
L_05ce: stloc.s 4 (System.Single)
L_05d0: br Label44
L_05d5: Label43
L_05d5: ldarg.0
L_05d6: call ContractState get_State()
L_05db: ldc.i4.4
L_05dc: bne.un Label45
L_05e1: ldloc.1
L_05e2: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05e7: ldfld System.Single RetreatSalvageChance
L_05ec: stloc.3
L_05ed: ldloc.1
L_05ee: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_05f3: ldfld System.Single RetreatSalvageLostPerMechDestroyed
L_05f8: stloc.s 4 (System.Single)
L_05fa: Label44
L_05fa: Label45
L_05fa: ldloc.3
L_05fb: stloc.s 5 (System.Single)
L_05fd: ldloc.2
L_05fe: conv.r4
L_05ff: ldarg.0
L_0600: call Single get_PercentageContractSalvage()
L_0605: mul
L_0606: stloc.s 6 (System.Single)
L_0608: ldloc.2
L_0609: ldc.i4.0
L_060a: ble Label46
L_060f: ldloc.s 6 (System.Single)
L_0611: ldloc.1
L_0612: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0617: ldfld System.Int32 ContractFloorSalvageBonus
L_061c: conv.r4
L_061d: add
L_061e: stloc.s 6 (System.Single)
L_0620: Label46
L_0620: ldc.r4 0
L_0625: ldloc.s 5 (System.Single)
L_0627: ldloc.s 4 (System.Single)
L_0629: ldarg.3
L_062a: callvirt Int32 get_Count()
L_062f: conv.r4
L_0630: mul
L_0631: sub
L_0632: call Single Max(Single, Single)
L_0637: stloc.3
L_0638: ldloc.s 6 (System.Single)
L_063a: conv.r4
L_063b: ldloc.3
L_063c: mul
L_063d: call Int32 FloorToInt(Single)
L_0642: stloc.s 7 (System.Int32)
L_0644: ldloc.2
L_0645: ldc.i4.0
L_0646: ble Label47
L_064b: ldloc.2
L_064c: ldloc.1
L_064d: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_0652: ldfld System.Int32 ContractFloorSalvageBonus
L_0657: add
L_0658: stloc.2
L_0659: Label47
L_0659: ldarg.0
L_065a: ldloc.s 7 (System.Int32)
L_065c: call Void set_FinalSalvageCount(Int32)
L_0661: ldarg.0
L_0662: ldc.i4.7
L_0663: ldloc.s 7 (System.Int32)
L_0665: conv.r4
L_0666: ldloc.1
L_0667: callvirt BattleTech.SalvageConstantsDef get_Salvage()
L_066c: ldfld System.Single PrioritySalvageModifier
L_0671: mul
L_0672: call Int32 FloorToInt(Single)
L_0677: call Int32 Min(Int32, Int32)
L_067c: call Void set_FinalPrioritySalvageCount(Int32)
L_0681: ldarg.0
L_0682: ldfld System.Boolean loggingSalvageResults
L_0687: brfalse Label48
L_068c: ldarg.0
L_068d: ldstr "Salvage"
L_0692: call Void PushReport(System.String)
L_0697: ldstr "Salvage Potential: {0}, Modifier: {1}, Lost Mechs: {2}, Final Modifier: {3}, Total Salvage Receieved: {4}, Potential Salvage: {5}"
L_069c: ldc.i4.6
L_069d: newarr System.Object
L_06a2: dup
L_06a3: ldc.i4.0
L_06a4: ldloc.2
L_06a5: box System.Int32
L_06aa: stelem.ref
L_06ab: dup
L_06ac: ldc.i4.1
L_06ad: ldloc.s 5 (System.Single)
L_06af: box System.Single
L_06b4: stelem.ref
L_06b5: dup
L_06b6: ldc.i4.2
L_06b7: ldarg.3
L_06b8: callvirt Int32 get_Count()
L_06bd: box System.Int32
L_06c2: stelem.ref
L_06c3: dup
L_06c4: ldc.i4.3
L_06c5: ldloc.3
L_06c6: box System.Single
L_06cb: stelem.ref
L_06cc: dup
L_06cd: ldc.i4.4
L_06ce: ldloc.s 7 (System.Int32)
L_06d0: box System.Int32
L_06d5: stelem.ref
L_06d6: dup
L_06d7: ldc.i4.5
L_06d8: ldarg.0
L_06d9: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_06de: callvirt Int32 get_Count()
L_06e3: box System.Int32
L_06e8: stelem.ref
L_06e9: call System.String Format(System.String, System.Object[])
L_06ee: stloc.s 31 (System.String)
L_06f0: ldarg.0
L_06f1: ldloc.s 31 (System.String)
L_06f3: call Void ReportLog(System.String)
L_06f8: ldarg.0
L_06f9: ldstr "Potential Salvage"
L_06fe: call Void PushReport(System.String)
L_0703: ldarg.0
L_0704: ldfld System.Collections.Generic.List`1[BattleTech.SalvageDef] finalPotentialSalvage
L_0709: callvirt Enumerator GetEnumerator()
L_070e: stloc.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
.try
{
	L_0710: br Label49
	L_0715: Label52
	L_0715: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0717: call BattleTech.SalvageDef get_Current()
	L_071c: stloc.s 33 (BattleTech.SalvageDef)
	L_071e: ldarg.0
	L_071f: ldstr "{0} of type {1} in damage state of {2}"
	L_0724: ldloc.s 33 (BattleTech.SalvageDef)
	L_0726: ldfld BattleTech.DescriptionDef Description
	L_072b: callvirt System.String get_Id()
	L_0730: ldloc.s 33 (BattleTech.SalvageDef)
	L_0732: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0737: box BattleTech.SalvageDef+SalvageType
	L_073c: ldloc.s 33 (BattleTech.SalvageDef)
	L_073e: ldfld BattleTech.SalvageDef+SalvageType Type
	L_0743: ldc.i4.3
	L_0744: beq Label50
	L_0749: ldloc.s 33 (BattleTech.SalvageDef)
	L_074b: ldfld System.Boolean Damaged
	L_0750: br Label51
	L_0755: Label50
	L_0755: ldc.i4.1
	L_0756: Label51
	L_0756: box System.Boolean
	L_075b: call System.String Format(System.String, System.Object, System.Object, System.Object)
	L_0760: call Void ReportLog(System.String)
	L_0765: Label49
	L_0765: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_0767: call Boolean MoveNext()
	L_076c: brtrue Label52
	L_0771: leave Label53
	L_0776: leave (autogenerated)
} // end try
.finally
{
	L_077b: ldloca.s 32 (System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef])
	L_077d: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.SalvageDef]
	L_0783: callvirt Void Dispose()
	L_0788: endfinally
	L_0789: leave (autogenerated)
} // end handler
L_078a: Label53
L_078a: ldarg.0
L_078b: call Void PopReport()
L_0790: ldsfld HBS.Logging.ILog logger
L_0795: ldloc.s 31 (System.String)
L_0797: callvirt Void LogWarning(System.Object)
L_079c: Label48
L_079c: ldloc.3
L_079d: ldc.r4 0
L_07a2: beq Label54
L_07a7: ldloc.s 7 (System.Int32)
L_07a9: ldc.i4.1
L_07aa: bge Label55
L_07af: Label54
L_07af: ldarg.0
L_07b0: ldfld System.Boolean loggingSalvageResults
L_07b5: brfalse Label56
L_07ba: ldarg.0
L_07bb: call Void PopReport()
L_07c0: Label55
L_07c0: Label56
L_07c0: Label57
L_07c0: Label0
L_07c0: ret
DONE

### Patch BattleTech.UI.MechLabMechInfoWidget, Void GetTotalHardpoints()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldarg.0
L_0003: ldfld BattleTech.UI.MechLabPanel mechLab
L_0008: ldfld BattleTech.MechDef activeMechDef
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.MechLabPanel mechLab
L_0019: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_001e: ldfld System.Int32 totalBallisticHardpoints
L_0023: ldarg.0
L_0024: ldfld BattleTech.UI.MechLabPanel mechLab
L_0029: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_002e: ldfld System.Int32 totalBallisticHardpoints
L_0033: add
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.MechLabPanel mechLab
L_003a: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003f: ldfld System.Int32 totalBallisticHardpoints
L_0044: add
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabPanel mechLab
L_004b: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0050: ldfld System.Int32 totalBallisticHardpoints
L_0055: add
L_0056: ldarg.0
L_0057: ldfld BattleTech.UI.MechLabPanel mechLab
L_005c: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0061: ldfld System.Int32 totalBallisticHardpoints
L_0066: add
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechLabPanel mechLab
L_006d: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0072: ldfld System.Int32 totalBallisticHardpoints
L_0077: add
L_0078: ldarg.0
L_0079: ldfld BattleTech.UI.MechLabPanel mechLab
L_007e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0083: ldfld System.Int32 totalBallisticHardpoints
L_0088: add
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.MechLabPanel mechLab
L_008f: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0094: ldfld System.Int32 totalBallisticHardpoints
L_0099: add
L_009a: stfld System.Int32 totalBallisticHardpoints
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a6: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ab: ldfld System.Int32 totalEnergyHardpoints
L_00b0: ldarg.0
L_00b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b6: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_00bb: ldfld System.Int32 totalEnergyHardpoints
L_00c0: add
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.MechLabPanel mechLab
L_00c7: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00cc: ldfld System.Int32 totalEnergyHardpoints
L_00d1: add
L_00d2: ldarg.0
L_00d3: ldfld BattleTech.UI.MechLabPanel mechLab
L_00d8: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00dd: ldfld System.Int32 totalEnergyHardpoints
L_00e2: add
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.UI.MechLabPanel mechLab
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00ee: ldfld System.Int32 totalEnergyHardpoints
L_00f3: add
L_00f4: ldarg.0
L_00f5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00fa: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00ff: ldfld System.Int32 totalEnergyHardpoints
L_0104: add
L_0105: ldarg.0
L_0106: ldfld BattleTech.UI.MechLabPanel mechLab
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldfld System.Int32 totalEnergyHardpoints
L_0115: add
L_0116: ldarg.0
L_0117: ldfld BattleTech.UI.MechLabPanel mechLab
L_011c: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0121: ldfld System.Int32 totalEnergyHardpoints
L_0126: add
L_0127: stfld System.Int32 totalEnergyHardpoints
L_012c: ldarg.0
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0138: ldfld System.Int32 totalMissileHardpoints
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0143: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0148: ldfld System.Int32 totalMissileHardpoints
L_014d: add
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0154: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0159: ldfld System.Int32 totalMissileHardpoints
L_015e: add
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_016a: ldfld System.Int32 totalMissileHardpoints
L_016f: add
L_0170: ldarg.0
L_0171: ldfld BattleTech.UI.MechLabPanel mechLab
L_0176: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_017b: ldfld System.Int32 totalMissileHardpoints
L_0180: add
L_0181: ldarg.0
L_0182: ldfld BattleTech.UI.MechLabPanel mechLab
L_0187: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_018c: ldfld System.Int32 totalMissileHardpoints
L_0191: add
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabPanel mechLab
L_0198: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: add
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a9: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01ae: ldfld System.Int32 totalMissileHardpoints
L_01b3: add
L_01b4: stfld System.Int32 totalMissileHardpoints
L_01b9: ldarg.0
L_01ba: ldarg.0
L_01bb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01c0: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_01c5: ldfld System.Int32 totalSmallHardpoints
L_01ca: ldarg.0
L_01cb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01d0: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_01d5: ldfld System.Int32 totalSmallHardpoints
L_01da: add
L_01db: ldarg.0
L_01dc: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e1: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_01e6: ldfld System.Int32 totalSmallHardpoints
L_01eb: add
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f2: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_01f7: ldfld System.Int32 totalSmallHardpoints
L_01fc: add
L_01fd: ldarg.0
L_01fe: ldfld BattleTech.UI.MechLabPanel mechLab
L_0203: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0208: ldfld System.Int32 totalSmallHardpoints
L_020d: add
L_020e: ldarg.0
L_020f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0214: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0219: ldfld System.Int32 totalSmallHardpoints
L_021e: add
L_021f: ldarg.0
L_0220: ldfld BattleTech.UI.MechLabPanel mechLab
L_0225: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_022a: ldfld System.Int32 totalSmallHardpoints
L_022f: add
L_0230: ldarg.0
L_0231: ldfld BattleTech.UI.MechLabPanel mechLab
L_0236: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_023b: ldfld System.Int32 totalSmallHardpoints
L_0240: add
L_0241: stfld System.Int32 totalSmallHardpoints
L_0246: ldarg.0
L_0247: ldfld BattleTech.UI.MechLabPanel mechLab
L_024c: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0251: ldfld System.Int32 currentJumpjetCount
L_0256: ldarg.0
L_0257: ldfld BattleTech.UI.MechLabPanel mechLab
L_025c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0261: ldfld System.Int32 currentJumpjetCount
L_0266: add
L_0267: ldarg.0
L_0268: ldfld BattleTech.UI.MechLabPanel mechLab
L_026d: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0272: ldfld System.Int32 currentJumpjetCount
L_0277: add
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.MechLabPanel mechLab
L_027e: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0283: ldfld System.Int32 currentJumpjetCount
L_0288: add
L_0289: ldarg.0
L_028a: ldfld BattleTech.UI.MechLabPanel mechLab
L_028f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0294: ldfld System.Int32 currentJumpjetCount
L_0299: add
L_029a: ldarg.0
L_029b: ldfld BattleTech.UI.MechLabPanel mechLab
L_02a0: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_02a5: ldfld System.Int32 currentJumpjetCount
L_02aa: add
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.UI.MechLabPanel mechLab
L_02b1: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_02b6: ldfld System.Int32 currentJumpjetCount
L_02bb: add
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02c2: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_02c7: ldfld System.Int32 currentJumpjetCount
L_02cc: add
L_02cd: stloc.0
L_02ce: ldarg.0
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d5: ldfld BattleTech.MechDef activeMechDef
L_02da: callvirt BattleTech.ChassisDef get_Chassis()
L_02df: callvirt Int32 get_MaxJumpjets()
L_02e4: stfld System.Int32 totalJumpjets
L_02e9: Label1
L_02e9: ldarg.0
L_02ea: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_02ef: ldc.i4.0
L_02f0: ldelem.ref
L_02f1: ldc.i4.1
L_02f2: ldstr "{0}"
L_02f7: ldarg.0
L_02f8: ldfld System.Int32 totalBallisticHardpoints
L_02fd: box System.Int32
L_0302: call System.String Format(System.String, System.Object)
L_0307: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_030c: ldarg.0
L_030d: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0312: ldc.i4.1
L_0313: ldelem.ref
L_0314: ldc.i4.2
L_0315: ldstr "{0}"
L_031a: ldarg.0
L_031b: ldfld System.Int32 totalEnergyHardpoints
L_0320: box System.Int32
L_0325: call System.String Format(System.String, System.Object)
L_032a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_032f: ldarg.0
L_0330: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0335: ldc.i4.2
L_0336: ldelem.ref
L_0337: ldc.i4.3
L_0338: ldstr "{0}"
L_033d: ldarg.0
L_033e: ldfld System.Int32 totalMissileHardpoints
L_0343: box System.Int32
L_0348: call System.String Format(System.String, System.Object)
L_034d: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0352: ldarg.0
L_0353: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0358: ldc.i4.3
L_0359: ldelem.ref
L_035a: ldc.i4.4
L_035b: ldstr "{0}"
L_0360: ldarg.0
L_0361: ldfld System.Int32 totalSmallHardpoints
L_0366: box System.Int32
L_036b: call System.String Format(System.String, System.Object)
L_0370: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0375: ldarg.0
L_0376: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_037b: ldc.i4.4
L_037c: ldelem.ref
L_037d: ldc.i4.5
L_037e: ldstr "{0} / {1}"
L_0383: ldloc.0
L_0384: box System.Int32
L_0389: ldarg.0
L_038a: ldfld System.Int32 totalJumpjets
L_038f: box System.Int32
L_0394: call System.String Format(System.String, System.Object, System.Object)
L_0399: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_039e: ldarg.0
L_039f: ldarg.0
L_03a0: ldfld BattleTech.UI.MechLabPanel mechLab
L_03a5: ldarg.0
L_03a6: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03ab: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabHardpointElement[])
L_03b0: ret
DONE

### Patch BattleTech.MechStatisticsRules, Void CalculateHeatEfficiencyStat(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.MechComponentRef
L_0000: Local var 11: BattleTech.WeaponDef
L_0000: Local var 12: BattleTech.HeatSinkDef
L_0000: Local var 13: System.Int32
L_0000: Local var 14: BattleTech.UpgradeDef
L_0000: Local var 15: System.Int32
L_0000: ldarg 0
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: ldsfld BattleTech.CombatGameConstants Combat
L_0010: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0015: ldfld System.Int32 InternalHeatSinkCount
L_001a: conv.r4
L_001b: ldsfld BattleTech.CombatGameConstants Combat
L_0020: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0025: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_002a: mul
L_002b: stloc.0
L_002c: ldc.r4 0
L_0031: stloc.1
L_0032: ldc.r4 0
L_0037: stloc.2
L_0038: ldsfld BattleTech.CombatGameConstants Combat
L_003d: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0042: ldfld System.Int32 MaxHeat
L_0047: conv.r4
L_0048: stloc.3
L_0049: ldc.r4 0
L_004e: stloc.s 4 (System.Single)
L_0050: ldc.i4.0
L_0051: stloc.s 5 (System.Int32)
L_0053: ldc.i4.0
L_0054: stloc.s 9 (System.Int32)
L_0056: br Label1
L_005b: Label27
L_005b: ldarg.0
L_005c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0061: ldloc.s 9 (System.Int32)
L_0063: ldelem.ref
L_0064: stloc.s 10 (BattleTech.MechComponentRef)
L_0066: ldloc.s 10 (BattleTech.MechComponentRef)
L_0068: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_006d: brfalse Label2
L_0072: ldloc.s 10 (BattleTech.MechComponentRef)
L_0074: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0079: ldc.i4.5
L_007a: bne.un Label3
L_007f: Label2
L_007f: ldloc.s 10 (BattleTech.MechComponentRef)
L_0081: callvirt BattleTech.MechComponentDef get_Def()
L_0086: brtrue Label4
L_008b: ldloc.s 10 (BattleTech.MechComponentRef)
L_008d: callvirt Void RefreshComponentDef()
L_0092: Label4
L_0092: ldloc.s 10 (BattleTech.MechComponentRef)
L_0094: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0099: ldc.i4.1
L_009a: bne.un Label5
L_009f: ldloc.s 10 (BattleTech.MechComponentRef)
L_00a1: callvirt BattleTech.MechComponentDef get_Def()
L_00a6: isinst BattleTech.WeaponDef
L_00ab: stloc.s 11 (BattleTech.WeaponDef)
L_00ad: ldloc.2
L_00ae: ldloc.s 11 (BattleTech.WeaponDef)
L_00b0: callvirt Int32 get_HeatGenerated()
L_00b5: conv.r4
L_00b6: add
L_00b7: stloc.2
L_00b8: br Label6
L_00bd: Label5
L_00bd: ldloc.s 10 (BattleTech.MechComponentRef)
L_00bf: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00c4: ldc.i4.4
L_00c5: bne.un Label7
L_00ca: ldloc.s 10 (BattleTech.MechComponentRef)
L_00cc: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_00d1: ldc.i4.3
L_00d2: bge Label8
L_00d7: ldloc.s 5 (System.Int32)
L_00d9: ldc.i4.1
L_00da: add
L_00db: stloc.s 5 (System.Int32)
L_00dd: br Label9
L_00e2: Label7
L_00e2: ldloc.s 10 (BattleTech.MechComponentRef)
L_00e4: callvirt BattleTech.ComponentType get_ComponentDefType()
L_00e9: ldc.i4.3
L_00ea: bne.un Label10
L_00ef: ldloc.s 10 (BattleTech.MechComponentRef)
L_00f1: callvirt BattleTech.MechComponentDef get_Def()
L_00f6: isinst BattleTech.HeatSinkDef
L_00fb: stloc.s 12 (BattleTech.HeatSinkDef)
L_00fd: ldloc.0
L_00fe: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0100: call Single OverrideDissipationCapacity(BattleTech.HeatSinkDef)
L_0105: add
L_0106: stloc.0
L_0107: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0109: callvirt BattleTech.EffectData[] get_statusEffects()
L_010e: brfalse Label11
L_0113: ldc.i4.0
L_0114: stloc.s 13 (System.Int32)
L_0116: br Label12
L_011b: Label17
L_011b: ldloc.s 12 (BattleTech.HeatSinkDef)
L_011d: callvirt BattleTech.EffectData[] get_statusEffects()
L_0122: ldloc.s 13 (System.Int32)
L_0124: ldelem.ref
L_0125: ldfld BattleTech.EffectType effectType
L_012a: ldc.i4.1
L_012b: bne.un Label13
L_0130: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0132: callvirt BattleTech.EffectData[] get_statusEffects()
L_0137: ldloc.s 13 (System.Int32)
L_0139: ldelem.ref
L_013a: ldfld BattleTech.StatisticEffectData statisticData
L_013f: ldfld System.String statName
L_0144: ldstr "MaxHeat"
L_0149: call Boolean op_Equality(System.String, System.String)
L_014e: brfalse Label14
L_0153: ldloc.3
L_0154: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0156: callvirt BattleTech.EffectData[] get_statusEffects()
L_015b: ldloc.s 13 (System.Int32)
L_015d: ldelem.ref
L_015e: ldfld BattleTech.StatisticEffectData statisticData
L_0163: ldfld System.String modValue
L_0168: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_016d: call Single Parse(System.String, System.IFormatProvider)
L_0172: add
L_0173: stloc.3
L_0174: Label14
L_0174: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0176: callvirt BattleTech.EffectData[] get_statusEffects()
L_017b: ldloc.s 13 (System.Int32)
L_017d: ldelem.ref
L_017e: ldfld BattleTech.StatisticEffectData statisticData
L_0183: ldfld System.String statName
L_0188: ldstr "HeatGenerated"
L_018d: call Boolean op_Equality(System.String, System.String)
L_0192: brfalse Label15
L_0197: ldloc.s 12 (BattleTech.HeatSinkDef)
L_0199: callvirt BattleTech.EffectData[] get_statusEffects()
L_019e: ldloc.s 13 (System.Int32)
L_01a0: ldelem.ref
L_01a1: ldfld BattleTech.StatisticEffectData statisticData
L_01a6: ldfld BattleTech.StatisticEffectData+TargetCollection targetCollection
L_01ab: ldc.i4.2
L_01ac: bne.un Label16
L_01b1: ldloc.s 4 (System.Single)
L_01b3: ldc.r4 1
L_01b8: ldloc.s 12 (BattleTech.HeatSinkDef)
L_01ba: callvirt BattleTech.EffectData[] get_statusEffects()
L_01bf: ldloc.s 13 (System.Int32)
L_01c1: ldelem.ref
L_01c2: ldfld BattleTech.StatisticEffectData statisticData
L_01c7: ldfld System.String modValue
L_01cc: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_01d1: call Single Parse(System.String, System.IFormatProvider)
L_01d6: sub
L_01d7: sub
L_01d8: stloc.s 4 (System.Single)
L_01da: Label13
L_01da: Label15
L_01da: Label16
L_01da: ldloc.s 13 (System.Int32)
L_01dc: ldc.i4.1
L_01dd: add
L_01de: stloc.s 13 (System.Int32)
L_01e0: Label12
L_01e0: ldloc.s 13 (System.Int32)
L_01e2: ldloc.s 12 (BattleTech.HeatSinkDef)
L_01e4: callvirt BattleTech.EffectData[] get_statusEffects()
L_01e9: ldlen
L_01ea: conv.i4
L_01eb: blt Label17
L_01f0: br Label18
L_01f5: Label10
L_01f5: ldloc.s 10 (BattleTech.MechComponentRef)
L_01f7: callvirt BattleTech.ComponentType get_ComponentDefType()
L_01fc: ldc.i4.5
L_01fd: bne.un Label19
L_0202: ldloc.s 10 (BattleTech.MechComponentRef)
L_0204: callvirt BattleTech.MechComponentDef get_Def()
L_0209: isinst BattleTech.UpgradeDef
L_020e: stloc.s 14 (BattleTech.UpgradeDef)
L_0210: ldloc.s 14 (BattleTech.UpgradeDef)
L_0212: callvirt BattleTech.EffectData[] get_statusEffects()
L_0217: brfalse Label20
L_021c: ldc.i4.0
L_021d: stloc.s 15 (System.Int32)
L_021f: br Label21
L_0224: Label26
L_0224: ldloc.s 14 (BattleTech.UpgradeDef)
L_0226: callvirt BattleTech.EffectData[] get_statusEffects()
L_022b: ldloc.s 15 (System.Int32)
L_022d: ldelem.ref
L_022e: ldfld BattleTech.EffectType effectType
L_0233: ldc.i4.1
L_0234: bne.un Label22
L_0239: ldloc.s 14 (BattleTech.UpgradeDef)
L_023b: callvirt BattleTech.EffectData[] get_statusEffects()
L_0240: ldloc.s 15 (System.Int32)
L_0242: ldelem.ref
L_0243: ldfld BattleTech.StatisticEffectData statisticData
L_0248: ldfld System.String statName
L_024d: ldstr "MaxHeat"
L_0252: call Boolean op_Equality(System.String, System.String)
L_0257: brfalse Label23
L_025c: ldloc.3
L_025d: ldloc.s 14 (BattleTech.UpgradeDef)
L_025f: callvirt BattleTech.EffectData[] get_statusEffects()
L_0264: ldloc.s 15 (System.Int32)
L_0266: ldelem.ref
L_0267: ldfld BattleTech.StatisticEffectData statisticData
L_026c: ldfld System.String modValue
L_0271: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_0276: call Single Parse(System.String, System.IFormatProvider)
L_027b: add
L_027c: stloc.3
L_027d: Label23
L_027d: ldloc.s 14 (BattleTech.UpgradeDef)
L_027f: callvirt BattleTech.EffectData[] get_statusEffects()
L_0284: ldloc.s 15 (System.Int32)
L_0286: ldelem.ref
L_0287: ldfld BattleTech.StatisticEffectData statisticData
L_028c: ldfld System.String statName
L_0291: ldstr "HeatGenerated"
L_0296: call Boolean op_Equality(System.String, System.String)
L_029b: brfalse Label24
L_02a0: ldloc.s 14 (BattleTech.UpgradeDef)
L_02a2: callvirt BattleTech.EffectData[] get_statusEffects()
L_02a7: ldloc.s 15 (System.Int32)
L_02a9: ldelem.ref
L_02aa: ldfld BattleTech.StatisticEffectData statisticData
L_02af: ldfld BattleTech.StatisticEffectData+TargetCollection targetCollection
L_02b4: ldc.i4.2
L_02b5: bne.un Label25
L_02ba: ldloc.s 4 (System.Single)
L_02bc: ldc.r4 1
L_02c1: ldloc.s 14 (BattleTech.UpgradeDef)
L_02c3: callvirt BattleTech.EffectData[] get_statusEffects()
L_02c8: ldloc.s 15 (System.Int32)
L_02ca: ldelem.ref
L_02cb: ldfld BattleTech.StatisticEffectData statisticData
L_02d0: ldfld System.String modValue
L_02d5: call System.Globalization.NumberFormatInfo get_InvariantInfo()
L_02da: call Single Parse(System.String, System.IFormatProvider)
L_02df: sub
L_02e0: sub
L_02e1: stloc.s 4 (System.Single)
L_02e3: Label22
L_02e3: Label24
L_02e3: Label25
L_02e3: ldloc.s 15 (System.Int32)
L_02e5: ldc.i4.1
L_02e6: add
L_02e7: stloc.s 15 (System.Int32)
L_02e9: Label21
L_02e9: ldloc.s 15 (System.Int32)
L_02eb: ldloc.s 14 (BattleTech.UpgradeDef)
L_02ed: callvirt BattleTech.EffectData[] get_statusEffects()
L_02f2: ldlen
L_02f3: conv.i4
L_02f4: blt Label26
L_02f9: Label3
L_02f9: Label6
L_02f9: Label8
L_02f9: Label9
L_02f9: Label11
L_02f9: Label18
L_02f9: Label19
L_02f9: Label20
L_02f9: ldloc.s 9 (System.Int32)
L_02fb: ldc.i4.1
L_02fc: add
L_02fd: stloc.s 9 (System.Int32)
L_02ff: Label1
L_02ff: ldloc.s 9 (System.Int32)
L_0301: ldarg.0
L_0302: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0307: ldlen
L_0308: conv.i4
L_0309: blt Label27
L_030e: ldloc.s 5 (System.Int32)
L_0310: ldsfld BattleTech.CombatGameConstants Combat
L_0315: callvirt BattleTech.MovementConstants get_MoveConstants()
L_031a: ldfld System.Single[] MoveTable
L_031f: ldlen
L_0320: conv.i4
L_0321: blt Label28
L_0326: ldsfld BattleTech.CombatGameConstants Combat
L_032b: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0330: ldfld System.Single[] MoveTable
L_0335: ldlen
L_0336: conv.i4
L_0337: ldc.i4.1
L_0338: sub
L_0339: stloc.s 5 (System.Int32)
L_033b: Label28
L_033b: ldc.i4.3
L_033c: stloc.s 6 (System.Int32)
L_033e: ldloc.s 5 (System.Int32)
L_0340: ldc.i4.0
L_0341: ble Label29
L_0346: ldloc.1
L_0347: ldloc.s 5 (System.Int32)
L_0349: conv.r4
L_034a: ldsfld BattleTech.CombatGameConstants Combat
L_034f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0354: ldfld System.Single JumpHeatUnitSize
L_0359: mul
L_035a: ldloc.s 6 (System.Int32)
L_035c: conv.r4
L_035d: div
L_035e: add
L_035f: stloc.1
L_0360: br Label30
L_0365: Label29
L_0365: ldc.r4 0
L_036a: stloc.1
L_036b: Label30
L_036b: ldloc.2
L_036c: ldloc.2
L_036d: ldloc.s 4 (System.Single)
L_036f: mul
L_0370: add
L_0371: stloc.2
L_0372: ldloc.0
L_0373: ldsfld BattleTech.CombatGameConstants Combat
L_0378: callvirt BattleTech.HeatConstantsDef get_Heat()
L_037d: ldfld System.Single GlobalHeatSinkMultiplier
L_0382: mul
L_0383: stloc.0
L_0384: ldloc.2
L_0385: ldloc.1
L_0386: add
L_0387: ldsfld BattleTech.CombatGameConstants Combat
L_038c: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0391: ldfld System.Single GlobalHeatIncreaseMultiplier
L_0396: mul
L_0397: stloc.s 7 (System.Single)
L_0399: ldloc.0
L_039a: ldloc.s 7 (System.Single)
L_039c: div
L_039d: ldc.r4 100
L_03a2: mul
L_03a3: ldc.r4 100
L_03a8: call Single Min(Single, Single)
L_03ad: stloc.s 8 (System.Single)
L_03af: ldarg.1
L_03b0: ldloc.s 8 (System.Single)
L_03b2: call BattleTech.GameInstance get_BattleTechGame()
L_03b7: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03bc: ldfld System.Single MinHeatEfficiency
L_03c1: sub
L_03c2: call BattleTech.GameInstance get_BattleTechGame()
L_03c7: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03cc: ldfld System.Single MaxHeatEfficiency
L_03d1: call BattleTech.GameInstance get_BattleTechGame()
L_03d6: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_03db: ldfld System.Single MinHeatEfficiency
L_03e0: sub
L_03e1: div
L_03e2: ldc.r4 10
L_03e7: mul
L_03e8: ldloc.3
L_03e9: ldsfld BattleTech.CombatGameConstants Combat
L_03ee: callvirt BattleTech.HeatConstantsDef get_Heat()
L_03f3: ldfld System.Int32 MaxHeat
L_03f8: conv.r4
L_03f9: sub
L_03fa: ldc.r4 2
L_03ff: div
L_0400: add
L_0401: call Single Round(Single)
L_0406: stind.r4
L_0407: ldarg.1
L_0408: ldarg.1
L_0409: ldind.r4
L_040a: ldc.r4 1
L_040f: call Single Max(Single, Single)
L_0414: stind.r4
L_0415: ldarg.2
L_0416: ldc.r4 10
L_041b: stind.r4
L_041c: call Void Postfix()
L_0421: ret
DONE

### Patch BattleTech.MechStatisticsRules, Void CalculateMovementStat(BattleTech.MechDef, Single ByRef, Single ByRef)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponentRef
L_0000: ldarg 0
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: ldarg.0
L_000c: callvirt BattleTech.ChassisDef get_Chassis()
L_0011: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0016: call Single OverrideMaxSprintDistance(BattleTech.MovementCapabilitiesDef)
L_001b: stloc.0
L_001c: ldc.r4 0
L_0021: stloc.1
L_0022: ldc.i4.0
L_0023: stloc.2
L_0024: br Label1
L_0029: Label6
L_0029: ldarg.0
L_002a: call BattleTech.MechComponentRef[] OverrideInventory(BattleTech.MechDef)
L_002f: ldloc.2
L_0030: ldelem.ref
L_0031: stloc.3
L_0032: ldloc.3
L_0033: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0038: brfalse Label2
L_003d: ldloc.3
L_003e: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0043: ldc.i4.5
L_0044: bne.un Label3
L_0049: Label2
L_0049: ldloc.3
L_004a: callvirt BattleTech.ComponentType get_ComponentDefType()
L_004f: ldc.i4.4
L_0050: bne.un Label4
L_0055: ldloc.1
L_0056: ldc.r4 1
L_005b: add
L_005c: stloc.1
L_005d: br Label5
L_0062: Label4
L_0062: ldloc.3
L_0063: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0068: ldc.i4.5
L_0069: pop
L_006a: pop
L_006b: Label3
L_006b: Label5
L_006b: ldloc.2
L_006c: ldc.i4.1
L_006d: add
L_006e: stloc.2
L_006f: Label1
L_006f: ldloc.2
L_0070: ldarg.0
L_0071: call BattleTech.MechComponentRef[] OverrideInventory(BattleTech.MechDef)
L_0076: ldlen
L_0077: conv.i4
L_0078: blt Label6
L_007d: ldarg.1
L_007e: ldloc.0
L_007f: call BattleTech.GameInstance get_BattleTechGame()
L_0084: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_0089: ldfld System.Single MinSprintFactor
L_008e: sub
L_008f: call BattleTech.GameInstance get_BattleTechGame()
L_0094: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_0099: ldfld System.Single MaxSprintFactor
L_009e: call BattleTech.GameInstance get_BattleTechGame()
L_00a3: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_00a8: ldfld System.Single MinSprintFactor
L_00ad: sub
L_00ae: div
L_00af: ldc.r4 10
L_00b4: mul
L_00b5: ldloc.1
L_00b6: call BattleTech.GameInstance get_BattleTechGame()
L_00bb: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_00c0: ldfld System.Single MinStockJumpFactor
L_00c5: div
L_00c6: add
L_00c7: call Single Floor(Single)
L_00cc: stind.r4
L_00cd: ldarg.1
L_00ce: ldarg.1
L_00cf: ldind.r4
L_00d0: ldc.r4 1
L_00d5: call Single Max(Single, Single)
L_00da: stind.r4
L_00db: ldarg.2
L_00dc: ldc.r4 10
L_00e1: stind.r4
L_00e2: call Void Postfix()
L_00e7: ret
DONE

### Patch BattleTech.Mech, Single GetHeatSinkDissipation()
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.MechComponent
L_0000: Local var 3: BattleTech.HeatSinkDef
L_0000: Local var 4: System.Single
L_0000: ldc.r4 0
L_0005: stloc 4 (System.Single)
L_0007: ldc.r4 0
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldarg.0
L_000f: call BattleTech.CombatGameState get_Combat()
L_0014: callvirt BattleTech.CombatGameConstants get_Constants()
L_0019: callvirt BattleTech.HeatConstantsDef get_Heat()
L_001e: ldfld System.Int32 InternalHeatSinkCount
L_0023: conv.r4
L_0024: ldarg.0
L_0025: call BattleTech.CombatGameState get_Combat()
L_002a: callvirt BattleTech.CombatGameConstants get_Constants()
L_002f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0034: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_0039: mul
L_003a: add
L_003b: stloc.0
L_003c: ldc.i4.0
L_003d: stloc.1
L_003e: br Label1
L_0043: Label6
L_0043: ldarg.0
L_0044: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] miscComponents
L_0049: ldloc.1
L_004a: callvirt BattleTech.MechComponent get_Item(Int32)
L_004f: stloc.2
L_0050: ldloc.2
L_0051: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0056: ldc.i4.4
L_0057: beq Label2
L_005c: ldloc.2
L_005d: callvirt BattleTech.ComponentType get_componentType()
L_0062: ldc.i4.3
L_0063: bne.un Label3
L_0068: ldloc.2
L_0069: callvirt BattleTech.MechComponentDef get_componentDef()
L_006e: isinst BattleTech.HeatSinkDef
L_0073: stloc.3
L_0074: ldloc.3
L_0075: brfalse Label4
L_007a: ldloc.0
L_007b: ldloc.3
L_007c: callvirt Single get_DissipationCapacity()
L_0081: add
L_0082: stloc.0
L_0083: br Label5
L_0088: Label4
L_0088: ldsfld HBS.Logging.ILog initLogger
L_008d: ldc.i4.5
L_008e: newarr System.Object
L_0093: dup
L_0094: ldc.i4.0
L_0095: ldstr "Heat sink component on "
L_009a: stelem.ref
L_009b: dup
L_009c: ldc.i4.1
L_009d: ldarg.0
L_009e: call System.String get_DisplayName()
L_00a3: stelem.ref
L_00a4: dup
L_00a5: ldc.i4.2
L_00a6: ldstr "has wrong componentDef in inventory slot "
L_00ab: stelem.ref
L_00ac: dup
L_00ad: ldc.i4.3
L_00ae: ldloc.1
L_00af: box System.Int32
L_00b4: stelem.ref
L_00b5: dup
L_00b6: ldc.i4.4
L_00b7: ldstr "!"
L_00bc: stelem.ref
L_00bd: call System.String Concat(System.Object[])
L_00c2: callvirt Void LogError(System.Object)
L_00c7: Label2
L_00c7: Label3
L_00c7: Label5
L_00c7: ldloc.1
L_00c8: ldc.i4.1
L_00c9: add
L_00ca: stloc.1
L_00cb: Label1
L_00cb: ldloc.1
L_00cc: ldarg.0
L_00cd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] miscComponents
L_00d2: callvirt Int32 get_Count()
L_00d7: blt Label6
L_00dc: ldloc.0
L_00dd: stloc 4 (System.Single)
L_00df: ldarg.0
L_00e0: ldloca 4 (System.Single)
L_00e2: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00e7: ldloc 4 (System.Single)
L_00e9: ret
DONE

### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void InitEffectStats()
L_0006: ldarg.0
L_0007: call Void Postfix(BattleTech.Mech)
L_000c: ret
DONE

### Patch BattleTech.StatTooltipData, Void SetHeatData(BattleTech.MechDef)
L_0000: Local var 0: BattleTech.CombatGameConstants
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Collections.Generic.List`1[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: BattleTech.HeatSinkDef
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Single
L_0000: Local var 12: BattleTech.WeaponDef
L_0000: Local var 13: System.Int32
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.MechDef)
L_000b: call BattleTech.GameInstance get_BattleTechGame()
L_0010: call BattleTech.CombatGameConstants GetInstance(BattleTech.GameInstance)
L_0015: stloc.0
L_0016: ldarg.1
L_0017: callvirt BattleTech.ChassisDef get_Chassis()
L_001c: callvirt Int32 get_Heatsinks()
L_0021: conv.r4
L_0022: ldloc.0
L_0023: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0028: ldfld System.Int32 InternalHeatSinkCount
L_002d: conv.r4
L_002e: ldloc.0
L_002f: callvirt BattleTech.HeatConstantsDef get_Heat()
L_0034: ldfld System.Single DefaultHeatSinkDissipationCapacity
L_0039: mul
L_003a: add
L_003b: stloc.1
L_003c: ldc.r4 0
L_0041: stloc.2
L_0042: ldc.r4 0
L_0047: stloc.3
L_0048: ldc.r4 100
L_004d: stloc.s 4 (System.Single)
L_004f: newobj Void .ctor()
L_0054: stloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_0056: ldc.i4.0
L_0057: stloc.s 6 (System.Int32)
L_0059: ldarg.1
L_005a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_005f: ldlen
L_0060: conv.i4
L_0061: stloc.s 7 (System.Int32)
L_0063: ldc.i4.0
L_0064: stloc.s 8 (System.Int32)
L_0066: br Label1
L_006b: Label14
L_006b: ldarg.1
L_006c: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0071: ldloc.s 8 (System.Int32)
L_0073: ldelem.ref
L_0074: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0079: ldc.i4.3
L_007a: bne.un Label2
L_007f: ldarg.1
L_0080: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0085: ldloc.s 8 (System.Int32)
L_0087: ldelem.ref
L_0088: callvirt BattleTech.MechComponentDef get_Def()
L_008d: isinst BattleTech.HeatSinkDef
L_0092: stloc.s 9 (BattleTech.HeatSinkDef)
L_0094: ldloc.s 9 (BattleTech.HeatSinkDef)
L_0096: brfalse Label3
L_009b: ldloc.1
L_009c: ldloc.s 9 (BattleTech.HeatSinkDef)
L_009e: call Single DissipationCapacity(BattleTech.HeatSinkDef)
L_00a3: add
L_00a4: stloc.1
L_00a5: ldc.i4.0
L_00a6: stloc.s 10 (System.Int32)
L_00a8: br Label4
L_00ad: Label6
L_00ad: ldarg.0
L_00ae: ldloc.s 9 (BattleTech.HeatSinkDef)
L_00b0: callvirt BattleTech.EffectData[] get_statusEffects()
L_00b5: ldloc.s 10 (System.Int32)
L_00b7: ldelem.ref
L_00b8: ldstr "HeatGenerated"
L_00bd: ldc.i4.2
L_00be: ldc.i4.s 12
L_00c0: ldc.i4.0
L_00c1: call Single GetEffectMod(BattleTech.EffectData, System.String, TargetCollection, StatOperation, BattleTech.WeaponSubType)
L_00c6: stloc.s 11 (System.Single)
L_00c8: ldloc.s 11 (System.Single)
L_00ca: ldc.r4 0
L_00cf: ble.un Label5
L_00d4: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_00d6: ldloc.s 11 (System.Single)
L_00d8: callvirt Void Add(Single)
L_00dd: Label5
L_00dd: ldloc.s 4 (System.Single)
L_00df: ldarg.0
L_00e0: ldloc.s 9 (BattleTech.HeatSinkDef)
L_00e2: callvirt BattleTech.EffectData[] get_statusEffects()
L_00e7: ldloc.s 10 (System.Int32)
L_00e9: ldelem.ref
L_00ea: ldstr "MaxHeat"
L_00ef: ldc.i4.0
L_00f0: ldc.i4.1
L_00f1: ldc.i4.0
L_00f2: call Single GetEffectMod(BattleTech.EffectData, System.String, TargetCollection, StatOperation, BattleTech.WeaponSubType)
L_00f7: add
L_00f8: stloc.s 4 (System.Single)
L_00fa: ldloc.s 10 (System.Int32)
L_00fc: ldc.i4.1
L_00fd: add
L_00fe: stloc.s 10 (System.Int32)
L_0100: Label4
L_0100: ldloc.s 10 (System.Int32)
L_0102: ldloc.s 9 (BattleTech.HeatSinkDef)
L_0104: callvirt BattleTech.EffectData[] get_statusEffects()
L_0109: ldlen
L_010a: conv.i4
L_010b: blt Label6
L_0110: br Label7
L_0115: Label2
L_0115: ldarg.1
L_0116: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_011b: ldloc.s 8 (System.Int32)
L_011d: ldelem.ref
L_011e: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0123: ldc.i4.4
L_0124: bne.un Label8
L_0129: ldarg.1
L_012a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_012f: ldloc.s 8 (System.Int32)
L_0131: ldelem.ref
L_0132: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0137: ldc.i4.4
L_0138: beq Label9
L_013d: ldloc.s 6 (System.Int32)
L_013f: ldc.i4.1
L_0140: add
L_0141: stloc.s 6 (System.Int32)
L_0143: br Label10
L_0148: Label8
L_0148: Label9
L_0148: ldarg.1
L_0149: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_014e: ldloc.s 8 (System.Int32)
L_0150: ldelem.ref
L_0151: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0156: ldc.i4.1
L_0157: bne.un Label11
L_015c: ldarg.1
L_015d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0162: ldloc.s 8 (System.Int32)
L_0164: ldelem.ref
L_0165: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_016a: ldc.i4.4
L_016b: beq Label12
L_0170: ldarg.1
L_0171: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0176: ldloc.s 8 (System.Int32)
L_0178: ldelem.ref
L_0179: callvirt BattleTech.MechComponentDef get_Def()
L_017e: isinst BattleTech.WeaponDef
L_0183: stloc.s 12 (BattleTech.WeaponDef)
L_0185: ldloc.s 12 (BattleTech.WeaponDef)
L_0187: brfalse Label13
L_018c: ldloc.2
L_018d: ldloc.s 12 (BattleTech.WeaponDef)
L_018f: callvirt Int32 get_HeatGenerated()
L_0194: conv.r4
L_0195: add
L_0196: stloc.2
L_0197: Label3
L_0197: Label7
L_0197: Label10
L_0197: Label11
L_0197: Label12
L_0197: Label13
L_0197: ldloc.s 8 (System.Int32)
L_0199: ldc.i4.1
L_019a: add
L_019b: stloc.s 8 (System.Int32)
L_019d: Label1
L_019d: ldloc.s 8 (System.Int32)
L_019f: ldloc.s 7 (System.Int32)
L_01a1: blt Label14
L_01a6: ldc.i4.0
L_01a7: stloc.s 13 (System.Int32)
L_01a9: br Label15
L_01ae: Label16
L_01ae: ldloc.2
L_01af: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_01b1: ldloc.s 13 (System.Int32)
L_01b3: callvirt Single get_Item(Int32)
L_01b8: mul
L_01b9: stloc.2
L_01ba: ldloc.s 13 (System.Int32)
L_01bc: ldc.i4.1
L_01bd: add
L_01be: stloc.s 13 (System.Int32)
L_01c0: Label15
L_01c0: ldloc.s 13 (System.Int32)
L_01c2: ldloc.s 5 (System.Collections.Generic.List`1[System.Single])
L_01c4: callvirt Int32 get_Count()
L_01c9: blt Label16
L_01ce: ldloc.s 6 (System.Int32)
L_01d0: conv.r4
L_01d1: ldloc.0
L_01d2: callvirt BattleTech.HeatConstantsDef get_Heat()
L_01d7: ldfld System.Int32 JumpHeatPerUnit
L_01dc: conv.r4
L_01dd: ldloc.0
L_01de: callvirt BattleTech.HeatConstantsDef get_Heat()
L_01e3: ldfld System.Single JumpHeatUnitSize
L_01e8: mul
L_01e9: mul
L_01ea: ldc.r4 3
L_01ef: div
L_01f0: stloc.3
L_01f1: ldarg.0
L_01f2: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_01f7: ldstr "Heat Sinking"
L_01fc: call System.String T(System.String)
L_0201: ldstr "{0} Heat"
L_0206: ldc.i4.1
L_0207: newarr System.Object
L_020c: dup
L_020d: ldc.i4.0
L_020e: ldloca.s 1 (System.Single)
L_0210: call System.String ToString()
L_0215: stelem.ref
L_0216: call System.String T(System.String, System.Object[])
L_021b: callvirt Void Add(System.String, System.String)
L_0220: ldarg.0
L_0221: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0226: ldstr "Alpha Strike"
L_022b: call System.String T(System.String)
L_0230: ldstr "{0} Heat"
L_0235: ldc.i4.1
L_0236: newarr System.Object
L_023b: dup
L_023c: ldc.i4.0
L_023d: ldloca.s 2 (System.Single)
L_023f: call System.String ToString()
L_0244: stelem.ref
L_0245: call System.String T(System.String, System.Object[])
L_024a: callvirt Void Add(System.String, System.String)
L_024f: ldarg.0
L_0250: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0255: ldstr "Avg. Jump Heat"
L_025a: call System.String T(System.String)
L_025f: ldstr "{0} Heat"
L_0264: ldc.i4.1
L_0265: newarr System.Object
L_026a: dup
L_026b: ldc.i4.0
L_026c: ldloca.s 3 (System.Single)
L_026e: call System.String ToString()
L_0273: stelem.ref
L_0274: call System.String T(System.String, System.Object[])
L_0279: callvirt Void Add(System.String, System.String)
L_027e: ldarg.0
L_027f: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0284: ldstr "Shutdown"
L_0289: call System.String T(System.String)
L_028e: ldstr "{0} Heat"
L_0293: ldc.i4.1
L_0294: newarr System.Object
L_0299: dup
L_029a: ldc.i4.0
L_029b: ldloca.s 4 (System.Single)
L_029d: call System.String ToString()
L_02a2: stelem.ref
L_02a3: call System.String T(System.String, System.Object[])
L_02a8: callvirt Void Add(System.String, System.String)
L_02ad: call Void Postfix()
L_02b2: ret
DONE

### Patch BattleTech.StatTooltipData, Void SetMovementData(BattleTech.MechDef)
L_0000: Local var 0: BattleTech.CombatGameConstants
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Int32
L_0000: ldsfld BattleTech.CombatGameConstants Combat
L_0005: stloc.0
L_0006: ldarg.1
L_0007: callvirt BattleTech.ChassisDef get_Chassis()
L_000c: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0011: callvirt Single get_MaxWalkDistance()
L_0016: stloc.1
L_0017: ldarg.1
L_0018: callvirt BattleTech.ChassisDef get_Chassis()
L_001d: callvirt BattleTech.MovementCapabilitiesDef get_MovementCapDef()
L_0022: callvirt Single get_MaxSprintDistance()
L_0027: stloc.2
L_0028: ldc.i4.0
L_0029: stloc.3
L_002a: ldc.i4.0
L_002b: stloc.s 5 (System.Int32)
L_002d: br Label1
L_0032: Label6
L_0032: ldarg.1
L_0033: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0038: ldloc.s 5 (System.Int32)
L_003a: ldelem.ref
L_003b: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0040: ldc.i4.5
L_0041: bne.un Label2
L_0046: ldarg.1
L_0047: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_004c: ldloc.s 5 (System.Int32)
L_004e: ldelem.ref
L_004f: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_0054: ldc.i4.4
L_0055: bne.un Label3
L_005a: Label2
L_005a: ldarg.1
L_005b: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0060: ldloc.s 5 (System.Int32)
L_0062: ldelem.ref
L_0063: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0068: ldc.i4.4
L_0069: bne.un Label4
L_006e: ldarg.1
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: ldloc.s 5 (System.Int32)
L_0076: ldelem.ref
L_0077: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_007c: ldc.i4.4
L_007d: beq Label5
L_0082: ldloc.3
L_0083: ldc.i4.1
L_0084: add
L_0085: stloc.3
L_0086: Label3
L_0086: Label4
L_0086: Label5
L_0086: ldloc.s 5 (System.Int32)
L_0088: ldc.i4.1
L_0089: add
L_008a: stloc.s 5 (System.Int32)
L_008c: Label1
L_008c: ldloc.s 5 (System.Int32)
L_008e: ldarg.1
L_008f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0094: ldlen
L_0095: conv.i4
L_0096: blt Label6
L_009b: ldc.r4 0
L_00a0: stloc.s 4 (System.Single)
L_00a2: ldloc.3
L_00a3: ldc.i4.0
L_00a4: ble Label7
L_00a9: ldloc.3
L_00aa: ldloc.0
L_00ab: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00b0: ldfld System.Single[] MoveTable
L_00b5: ldlen
L_00b6: conv.i4
L_00b7: ble Label8
L_00bc: ldloc.0
L_00bd: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00c2: ldfld System.Single[] MoveTable
L_00c7: ldloc.0
L_00c8: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00cd: ldfld System.Single[] MoveTable
L_00d2: ldlen
L_00d3: conv.i4
L_00d4: ldc.i4.1
L_00d5: sub
L_00d6: ldelem.r4
L_00d7: stloc.s 4 (System.Single)
L_00d9: br Label9
L_00de: Label8
L_00de: ldloc.0
L_00df: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00e4: ldfld System.Single[] MoveTable
L_00e9: ldloc.3
L_00ea: ldelem.r4
L_00eb: stloc.s 4 (System.Single)
L_00ed: Label7
L_00ed: Label9
L_00ed: ldarg.0
L_00ee: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_00f3: ldstr "Max Move"
L_00f8: call System.String T(System.String)
L_00fd: ldstr "{0}m"
L_0102: ldc.i4.1
L_0103: newarr System.Object
L_0108: dup
L_0109: ldc.i4.0
L_010a: ldloca.s 1 (System.Single)
L_010c: call System.String ToString()
L_0111: stelem.ref
L_0112: call System.String T(System.String, System.Object[])
L_0117: callvirt Void Add(System.String, System.String)
L_011c: ldarg.0
L_011d: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0122: ldstr "Max Sprint"
L_0127: call System.String T(System.String)
L_012c: ldstr "{0}m"
L_0131: ldc.i4.1
L_0132: newarr System.Object
L_0137: dup
L_0138: ldc.i4.0
L_0139: ldloca.s 2 (System.Single)
L_013b: call System.String ToString()
L_0140: stelem.ref
L_0141: call System.String T(System.String, System.Object[])
L_0146: callvirt Void Add(System.String, System.String)
L_014b: ldarg.0
L_014c: ldfld System.Collections.Generic.Dictionary`2[System.String,System.String] dataList
L_0151: ldstr "Max Jump"
L_0156: call System.String T(System.String)
L_015b: ldstr "{0}m"
L_0160: ldc.i4.1
L_0161: newarr System.Object
L_0166: dup
L_0167: ldc.i4.0
L_0168: ldloca.s 4 (System.Single)
L_016a: call System.String ToString()
L_016f: stelem.ref
L_0170: call System.String T(System.String, System.Object[])
L_0175: callvirt Void Add(System.String, System.String)
L_017a: ldarg.0
L_017b: ldarg 1
L_0181: call Void Postfix(BattleTech.StatTooltipData, BattleTech.MechDef)
L_0186: ret
DONE

### Harmony id=MechEngineer.Features.MoveMultiplierStat, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.MoveMultiplierStat.MoveMultiplierStatSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.31
### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void InitEffectStats()
L_000c: ldarg.0
L_000d: call Void Postfix(BattleTech.Mech)
L_0012: ret
DONE

### Patch BattleTech.Mech, Single get_MoveMultiplier()
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.LocationDamageLevel
L_0000: Local var 2: BattleTech.LocationDamageLevel
L_0000: Local var 3: System.Single
L_0000: ldc.r4 0
L_0005: stloc 3 (System.Single)
L_0006: ldc.r4 0
L_000b: stloc.0
L_000c: ldarg.0
L_000d: call Boolean get_IsOverheated()
L_0012: brfalse Label1
L_0017: ldloc.0
L_0018: ldarg.0
L_0019: call BattleTech.CombatGameState get_Combat()
L_001e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0023: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0028: ldfld System.Single OverheatedMovePenalty
L_002d: add
L_002e: stloc.0
L_002f: Label1
L_002f: ldarg.0
L_0030: ldc.i4.s 64
L_0032: call BattleTech.LocationDamageLevel GetLocationDamageLevel(BattleTech.ChassisLocations)
L_0037: stloc.1
L_0038: ldarg.0
L_0039: ldc.i4 128
L_003e: call BattleTech.LocationDamageLevel GetLocationDamageLevel(BattleTech.ChassisLocations)
L_0043: stloc.2
L_0044: ldloc.1
L_0045: ldc.i4.0
L_0046: ble Label2
L_004b: ldarg.0
L_004c: ldc.i4.s 64
L_004e: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_0053: brfalse Label3
L_0058: ldloc.0
L_0059: ldarg.0
L_005a: call BattleTech.CombatGameState get_Combat()
L_005f: callvirt BattleTech.CombatGameConstants get_Constants()
L_0064: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0069: ldfld System.Single LegDestroyedPenalty
L_006e: add
L_006f: stloc.0
L_0070: br Label4
L_0075: Label3
L_0075: ldloc.1
L_0076: ldc.i4.1
L_0077: ble Label5
L_007c: ldloc.0
L_007d: ldarg.0
L_007e: call BattleTech.CombatGameState get_Combat()
L_0083: callvirt BattleTech.CombatGameConstants get_Constants()
L_0088: callvirt BattleTech.MovementConstants get_MoveConstants()
L_008d: ldfld System.Single LegDamageRedPenalty
L_0092: add
L_0093: stloc.0
L_0094: br Label6
L_0099: Label5
L_0099: ldloc.0
L_009a: ldarg.0
L_009b: call BattleTech.CombatGameState get_Combat()
L_00a0: callvirt BattleTech.CombatGameConstants get_Constants()
L_00a5: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00aa: ldfld System.Single LegDamageYellowPenalty
L_00af: add
L_00b0: stloc.0
L_00b1: Label2
L_00b1: Label4
L_00b1: Label6
L_00b1: ldloc.2
L_00b2: ldc.i4.0
L_00b3: ble Label7
L_00b8: ldarg.0
L_00b9: ldc.i4 128
L_00be: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_00c3: brfalse Label8
L_00c8: ldloc.0
L_00c9: ldarg.0
L_00ca: call BattleTech.CombatGameState get_Combat()
L_00cf: callvirt BattleTech.CombatGameConstants get_Constants()
L_00d4: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00d9: ldfld System.Single LegDestroyedPenalty
L_00de: add
L_00df: stloc.0
L_00e0: br Label9
L_00e5: Label8
L_00e5: ldloc.2
L_00e6: ldc.i4.1
L_00e7: ble Label10
L_00ec: ldloc.0
L_00ed: ldarg.0
L_00ee: call BattleTech.CombatGameState get_Combat()
L_00f3: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f8: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00fd: ldfld System.Single LegDamageRedPenalty
L_0102: add
L_0103: stloc.0
L_0104: br Label11
L_0109: Label10
L_0109: ldloc.0
L_010a: ldarg.0
L_010b: call BattleTech.CombatGameState get_Combat()
L_0110: callvirt BattleTech.CombatGameConstants get_Constants()
L_0115: callvirt BattleTech.MovementConstants get_MoveConstants()
L_011a: ldfld System.Single LegDamageYellowPenalty
L_011f: add
L_0120: stloc.0
L_0121: Label7
L_0121: Label9
L_0121: Label11
L_0121: ldarg.0
L_0122: call BattleTech.CombatGameState get_Combat()
L_0127: callvirt BattleTech.CombatGameConstants get_Constants()
L_012c: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0131: ldfld System.Single MinMoveSpeed
L_0136: ldc.r4 1
L_013b: ldloc.0
L_013c: sub
L_013d: call Single Max(Single, Single)
L_0142: stloc 3 (System.Single)
L_0143: ldarg.0
L_0144: ldloca 3 (System.Single)
L_0146: call Void Postfix(BattleTech.Mech, Single ByRef)
L_014b: ldarg.0
L_014c: ldloca 3 (System.Single)
L_014e: call Void Postfix(BattleTech.Mech, Single ByRef)
L_0153: ldloc 3 (System.Single)
L_0154: ret
DONE

### Harmony id=MechEngineer.Features.CompressFloatieMessages, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.CompressFloatieMessages.CompressFloatieMessagesSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.31
### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(BattleTech.FloatieMessage)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_000d: call Boolean Prefix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage, System.Collections.Generic.Queue`1[BattleTech.FloatieMessage])
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.UI.CombatHUD get_HUD()
L_001d: callvirt Boolean get_PilotInjuriesSuppressed()
L_0022: brfalse Label1
L_0027: ldarg.1
L_0028: ldfld BattleTech.FloatieMessage+MessageNature nature
L_002d: ldc.i4.s 9
L_002f: bne.un Label2
L_0034: br Label3
L_0039: Label1
L_0039: Label2
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_003f: ldarg.1
L_0040: callvirt Void Enqueue(BattleTech.FloatieMessage)
L_0045: Label3
L_0045: Label0
L_0045: ret
DONE

### Harmony id=MechEngineer.Features.DamageIgnore, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.DamageIgnore.DamageIgnoreSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.31
### Patch BattleTech.MechComponent, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarga 2
L_000d: call Boolean Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.StatCollection get_StatCollection()
L_001d: ldarg.1
L_001e: ldfld System.String attackerId
L_0023: ldarg.1
L_0024: ldfld System.Int32 stackItemUID
L_0029: ldstr "DamageLevel"
L_002e: ldc.i4.0
L_002f: ldarg.2
L_0030: ldc.i4.m1
L_0031: ldc.i4.1
L_0032: callvirt Int32 ModifyStat[ComponentDamageLevel](System.String, Int32, System.String, StatOperation, BattleTech.ComponentDamageLevel, Int32, Boolean)
L_0037: pop
L_0038: ldarg.2
L_0039: ldc.i4.0
L_003a: blt Label1
L_003f: ldarg.0
L_0040: ldc.i4.1
L_0041: callvirt Void CancelCreatedEffects(Boolean)
L_0046: Label1
L_0046: ldarg.2
L_0047: ldc.i4.4
L_0048: pop
L_0049: pop
L_004a: ldarg.0
L_004b: call BattleTech.MechComponentDef get_componentDef()
L_0050: callvirt Boolean get_CriticalComponent()
L_0055: brfalse Label2
L_005a: ldarg.0
L_005b: ldfld BattleTech.AbstractActor parent
L_0060: ldstr "Vital component destroyed: "
L_0065: ldarg.0
L_0066: call BattleTech.DescriptionDef get_Description()
L_006b: callvirt System.String get_Name()
L_0070: call System.String Concat(System.String, System.String)
L_0075: ldc.i4.s 9
L_0077: ldc.i4.1
L_0078: ldarg.0
L_0079: ldflda BattleTech.LocationDef locationDef
L_007e: ldfld BattleTech.ChassisLocations Location
L_0083: ldarg.1
L_0084: ldfld System.Int32 stackItemUID
L_0089: ldarg.1
L_008a: ldfld System.String attackerId
L_008f: ldc.i4.0
L_0090: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_0095: Label2
L_0095: Label0
L_0095: ret
DONE

### Patch BattleTech.MechComponent, Int32 get_inventorySize()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: call BattleTech.MechComponentDef get_componentDef()
L_000c: callvirt Int32 get_InventorySize()
L_0011: stloc 0 (System.Int32)
L_0012: ldarg.0
L_0013: ldloca 0 (System.Int32)
L_0015: call Void Postfix(BattleTech.MechComponent, Int32 ByRef)
L_001a: ldloc 0 (System.Int32)
L_001b: ret
DONE

### Patch BattleTech.Mech, Void OnLocationDestroyed(BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.WeaponHitInfo, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: BattleTech.DeathMethod
L_0000: Local var 2: System.String
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: BattleTech.MechComponent
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: BattleTech.AmmunitionBox
L_0000: Local var 10: BattleTech.Pilot
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: beq Label1
L_0007: ldarg.1
L_0008: ldc.i4.8
L_0009: beq Label2
L_000e: ldstr "{0} DESTROYED"
L_0013: ldc.i4.1
L_0014: newarr System.Object
L_0019: dup
L_001a: ldc.i4.0
L_001b: ldarg.1
L_001c: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0021: stelem.ref
L_0022: newobj Void .ctor(String, Object[])
L_0027: stloc.3
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldarg.0
L_0034: ldloc.3
L_0035: ldc.i4.s 12
L_0037: ldc.i4.1
L_0038: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_003d: newobj Void .ctor(IStackSequence)
L_0042: callvirt Void PublishMessage(MessageCenterMessage)
L_0047: Label1
L_0047: Label2
L_0047: ldarg.0
L_0048: call BattleTech.CombatGameState get_Combat()
L_004d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0052: ldarg.3
L_0053: ldfld System.Int32 attackSequenceId
L_0058: callvirt AttackSequence GetAttackSequence(Int32)
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label3
L_0064: ldloc.0
L_0065: ldarg.0
L_0066: call System.String get_GUID()
L_006b: callvirt Void FlagAttackDestroyedAnyLocation(System.String)
L_0070: Label3
L_0070: ldarg.1
L_0071: ldc.i4.s 64
L_0073: beq Label4
L_0078: ldarg.1
L_0079: ldc.i4 128
L_007e: bne.un Label5
L_0083: Label4
L_0083: ldloc.0
L_0084: brfalse Label6
L_0089: ldloc.0
L_008a: ldfld BattleTech.AbstractActor attacker
L_008f: callvirt System.String get_GUID()
L_0094: br Label7
L_0099: Label6
L_0099: ldstr "debug"
L_009e: Label7
L_009e: stloc.s 4 (System.String)
L_00a0: ldloc.0
L_00a1: brfalse Label8
L_00a6: ldloc.0
L_00a7: ldfld System.Int32 attackSequenceIdx
L_00ac: br Label9
L_00b1: Label8
L_00b1: ldc.i4.m1
L_00b2: Label9
L_00b2: stloc.s 5 (System.Int32)
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.StatCollection statCollection
L_00ba: ldloc.s 4 (System.String)
L_00bc: ldloc.s 5 (System.Int32)
L_00be: ldstr "RunSpeed"
L_00c3: ldc.i4.0
L_00c4: ldc.r4 0
L_00c9: ldc.i4.m1
L_00ca: ldc.i4.1
L_00cb: callvirt Int32 ModifyStat[Single](System.String, Int32, System.String, StatOperation, Single, Int32, Boolean)
L_00d0: pop
L_00d1: ldarg.0
L_00d2: callvirt Void FlagForKnockdown()
L_00d7: ldloc.0
L_00d8: brfalse Label10
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.AbstractActor attacker
L_00e4: bne.un Label11
L_00e9: ldloc.0
L_00ea: callvirt Void FlagAttackDestroyedAttackerLeg()
L_00ef: br Label12
L_00f4: Label11
L_00f4: ldloc.0
L_00f5: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00fa: ldarg.0
L_00fb: call System.String get_GUID()
L_0100: callvirt Boolean Contains(System.String)
L_0105: brfalse Label13
L_010a: ldloc.0
L_010b: ldarg.0
L_010c: call System.String get_GUID()
L_0111: callvirt Void FlagAttackDestroyedLeg(System.String)
L_0116: ldloc.0
L_0117: ldarg.0
L_0118: call System.String get_GUID()
L_011d: callvirt Void FlagAttackCausedKnockdown(System.String)
L_0122: Label5
L_0122: Label10
L_0122: Label12
L_0122: Label13
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0128: callvirt Enumerator GetEnumerator()
L_012d: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_012f: br Label14
	L_0134: Label18
	L_0134: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0136: call BattleTech.MechComponent get_Current()
	L_013b: stloc.s 7 (BattleTech.MechComponent)
	L_013d: ldloc.s 7 (BattleTech.MechComponent)
	L_013f: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0144: ldarg.1
	L_0145: bne.un Label15
	L_014a: ldloc.s 7 (BattleTech.MechComponent)
	L_014c: ldarg.3
	L_014d: ldc.i4.4
	L_014e: ldc.i4.0
	L_014f: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
	L_0154: ldsfld HBS.Logging.ILog damageLogger
	L_0159: callvirt Boolean get_IsLogEnabled()
	L_015e: brfalse Label16
	L_0163: ldsfld HBS.Logging.ILog damageLogger
	L_0168: ldstr "====@@@ Component Destroyed: {0}"
	L_016d: ldloc.s 7 (BattleTech.MechComponent)
	L_016f: callvirt System.String get_Name()
	L_0174: call System.String Format(System.String, System.Object)
	L_0179: callvirt Void Log(System.Object)
	L_017e: Label16
	L_017e: ldloc.0
	L_017f: brfalse Label17
	L_0184: ldloc.s 7 (BattleTech.MechComponent)
	L_0186: isinst BattleTech.Weapon
	L_018b: stloc.s 8 (BattleTech.Weapon)
	L_018d: ldloc.s 7 (BattleTech.MechComponent)
	L_018f: isinst BattleTech.AmmunitionBox
	L_0194: stloc.s 9 (BattleTech.AmmunitionBox)
	L_0196: ldloc.0
	L_0197: ldarg.0
	L_0198: call System.String get_GUID()
	L_019d: ldloc.s 8 (BattleTech.Weapon)
	L_019f: ldloc.s 9 (BattleTech.AmmunitionBox)
	L_01a1: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
	L_01a6: Label14
	L_01a6: Label15
	L_01a6: Label17
	L_01a6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01a8: call Boolean MoveNext()
	L_01ad: brtrue Label18
	L_01b2: leave Label19
	L_01b7: leave (autogenerated)
} // end try
.finally
{
	L_01bc: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01be: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_01c4: callvirt Void Dispose()
	L_01c9: endfinally
	L_01ca: leave (autogenerated)
} // end handler
L_01cb: Label19
L_01cb: ldarg.0
L_01cc: ldarg.3
L_01cd: call Void UpdateMinStability(BattleTech.WeaponHitInfo)
L_01d2: ldc.i4.0
L_01d3: stloc.1
L_01d4: ldstr ""
L_01d9: stloc.2
L_01da: ldarg.1
L_01db: ldc.i4.8
L_01dc: bne.un Label20
L_01e1: ldc.i4.2
L_01e2: stloc.1
L_01e3: ldstr "Location Destroyed: "
L_01e8: ldarga.s 1
L_01ea: constrained. BattleTech.ChassisLocations
L_01f0: callvirt System.String ToString()
L_01f5: call System.String Concat(System.String, System.String)
L_01fa: stloc.2
L_01fb: br Label21
L_0200: Label20
L_0200: ldarg.1
L_0201: ldc.i4.1
L_0202: bne.un Label22
L_0207: ldc.i4.1
L_0208: stloc.1
L_0209: ldstr "Location Destroyed: "
L_020e: ldarga.s 1
L_0210: constrained. BattleTech.ChassisLocations
L_0216: callvirt System.String ToString()
L_021b: call System.String Concat(System.String, System.String)
L_0220: stloc.2
L_0221: br Label23
L_0226: Label22
L_0226: ldarg.1
L_0227: ldc.i4.s 64
L_0229: beq Label24
L_022e: ldarg.1
L_022f: ldc.i4 128
L_0234: bne.un Label25
L_0239: Label24
L_0239: ldarg.0
L_023a: call Single get_LeftLegStructure()
L_023f: ldc.r4 0
L_0244: bgt.un Label26
L_0249: ldarg.0
L_024a: call Single get_RightLegStructure()
L_024f: ldc.r4 0
L_0254: bgt.un Label27
L_0259: ldc.i4.3
L_025a: stloc.1
L_025b: ldstr "Location Destroyed: "
L_0260: ldarga.s 1
L_0262: constrained. BattleTech.ChassisLocations
L_0268: callvirt System.String ToString()
L_026d: call System.String Concat(System.String, System.String)
L_0272: stloc.2
L_0273: Label21
L_0273: Label23
L_0273: Label25
L_0273: Label26
L_0273: Label27
L_0273: ldarg.s 4
L_0275: ldc.i4.s 11
L_0277: bne.un Label28
L_027c: ldarg.1
L_027d: ldc.i4.8
L_027e: beq Label29
L_0283: ldarg.1
L_0284: ldc.i4.1
L_0285: bne.un Label30
L_028a: Label29
L_028a: ldc.i4.4
L_028b: stloc.1
L_028c: ldstr "Ammo Explosion: "
L_0291: ldarga.s 1
L_0293: constrained. BattleTech.ChassisLocations
L_0299: callvirt System.String ToString()
L_029e: call System.String Concat(System.String, System.String)
L_02a3: stloc.2
L_02a4: Label28
L_02a4: Label30
L_02a4: ldloc.1
L_02a5: brfalse Label31
L_02aa: ldarg.0
L_02ab: ldloc.2
L_02ac: ldloc.1
L_02ad: ldarg.s 4
L_02af: ldarg.1
L_02b0: ldarg.3
L_02b1: ldfld System.Int32 stackItemUID
L_02b6: ldarg.3
L_02b7: ldfld System.String attackerId
L_02bc: ldc.i4.0
L_02bd: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_02c2: br Label32
L_02c7: Label31
L_02c7: ldarg.1
L_02c8: ldc.i4.4
L_02c9: beq Label33
L_02ce: ldarg.1
L_02cf: ldc.i4.s 16
L_02d1: bne.un Label34
L_02d6: Label33
L_02d6: ldarg.0
L_02d7: call BattleTech.CombatGameState get_Combat()
L_02dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_02e1: callvirt BattleTech.PilotingConstantsDef get_PilotingConstants()
L_02e6: ldfld System.Boolean InjuryFromSideTorsoDestruction
L_02eb: brfalse Label35
L_02f0: ldarg.0
L_02f1: callvirt BattleTech.Pilot GetPilot()
L_02f6: stloc.s 10 (BattleTech.Pilot)
L_02f8: ldloc.s 10 (BattleTech.Pilot)
L_02fa: brfalse Label36
L_02ff: ldloc.s 10 (BattleTech.Pilot)
L_0301: ldc.i4.5
L_0302: callvirt Void SetNeedsInjury(BattleTech.InjuryReason)
L_0307: Label32
L_0307: Label34
L_0307: Label35
L_0307: Label36
L_0307: ldarg.0
L_0308: call BattleTech.MechRepresentation get_GameRep()
L_030d: ldnull
L_030e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0313: brfalse Label37
L_0318: ldarg.0
L_0319: call BattleTech.MechRepresentation get_GameRep()
L_031e: ldarg.1
L_031f: ldarg.2
L_0320: callvirt Void PlayComponentDestroyedVFX(Int32, UnityEngine.Vector3)
L_0325: Label37
L_0325: ret
DONE

### Patch BattleTech.Mech, BattleTech.MechComponent GetComponentInSlot(BattleTech.ChassisLocations, Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.LocationDef
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponent
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldc.i4.0
L_0007: stloc.1
L_0008: ldarg.0
L_0009: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_000e: callvirt Enumerator GetEnumerator()
L_0013: stloc.3
.try
{
	L_0014: br Label1
	L_0019: Label5
	L_0019: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_001b: call BattleTech.MechComponent get_Current()
	L_0020: stloc.s 4 (BattleTech.MechComponent)
	L_0022: ldloc.s 4 (BattleTech.MechComponent)
	L_0024: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0029: ldarg.1
	L_002a: and
	L_002b: ldc.i4.0
	L_002c: ble Label2
	L_0031: ldc.i4.0
	L_0032: stloc.s 5 (System.Int32)
	L_0034: br Label3
	L_0039: Label4
	L_0039: ldloc.0
	L_003a: ldloc.s 4 (BattleTech.MechComponent)
	L_003c: callvirt Void Add(BattleTech.MechComponent)
	L_0041: ldloc.1
	L_0042: ldc.i4.1
	L_0043: add
	L_0044: stloc.1
	L_0045: ldloc.s 5 (System.Int32)
	L_0047: ldc.i4.1
	L_0048: add
	L_0049: stloc.s 5 (System.Int32)
	L_004b: Label3
	L_004b: ldloc.s 5 (System.Int32)
	L_004d: ldloc.s 4 (BattleTech.MechComponent)
	L_004f: callvirt Int32 get_inventorySize()
	L_0054: blt Label4
	L_0059: Label1
	L_0059: Label2
	L_0059: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_005b: call Boolean MoveNext()
	L_0060: brtrue Label5
	L_0065: leave Label6
	L_006a: leave (autogenerated)
} // end try
.finally
{
	L_006f: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0071: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0077: callvirt Void Dispose()
	L_007c: endfinally
	L_007d: leave (autogenerated)
} // end handler
L_007e: Label6
L_007e: ldarg.0
L_007f: call BattleTech.MechDef get_MechDef()
L_0084: ldarg.1
L_0085: callvirt BattleTech.LocationDef GetChassisLocationDef(BattleTech.ChassisLocations)
L_008a: stloc.2
L_008b: br Label7
L_0090: Label8
L_0090: ldloc.0
L_0091: ldnull
L_0092: callvirt Void Add(BattleTech.MechComponent)
L_0097: Label7
L_0097: ldloc.0
L_0098: callvirt Int32 get_Count()
L_009d: ldloc.2
L_009e: ldfld System.Int32 InventorySlots
L_00a3: blt Label8
L_00a8: ldarg.0
L_00a9: call BattleTech.CombatGameState get_Combat()
L_00ae: callvirt BattleTech.CombatGameConstants get_Constants()
L_00b3: callvirt BattleTech.CombatResolutionConstantsDef get_ResolutionConstants()
L_00b8: ldfld System.Boolean SearchForValidCritSlot
L_00bd: brfalse Label9
L_00c2: ldc.i4.0
L_00c3: stloc.s 6 (System.Int32)
L_00c5: br Label10
L_00ca: Label15
L_00ca: ldarg.2
L_00cb: ldloc.0
L_00cc: callvirt Int32 get_Count()
L_00d1: blt Label11
L_00d6: ldarg.2
L_00d7: ldloc.0
L_00d8: callvirt Int32 get_Count()
L_00dd: rem
L_00de: starg.s 2
L_00e0: Label11
L_00e0: ldarg.2
L_00e1: ldloc.0
L_00e2: callvirt Int32 get_Count()
L_00e7: bge Label12
L_00ec: ldloc.0
L_00ed: ldarg.2
L_00ee: callvirt BattleTech.MechComponent get_Item(Int32)
L_00f3: brfalse Label13
L_00f8: ldloc.0
L_00f9: ldarg.2
L_00fa: callvirt BattleTech.MechComponent get_Item(Int32)
L_00ff: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0104: ldc.i4.4
L_0105: bge Label14
L_010a: ldloc.0
L_010b: ldarg.2
L_010c: callvirt BattleTech.MechComponent get_Item(Int32)
L_0111: br Label19
L_0116: Label12
L_0116: Label13
L_0116: Label14
L_0116: ldloc.s 6 (System.Int32)
L_0118: ldc.i4.1
L_0119: add
L_011a: stloc.s 6 (System.Int32)
L_011c: Label10
L_011c: ldloc.s 6 (System.Int32)
L_011e: ldloc.2
L_011f: ldfld System.Int32 InventorySlots
L_0124: blt Label15
L_0129: br Label16
L_012e: Label9
L_012e: ldarg.2
L_012f: ldloc.0
L_0130: callvirt Int32 get_Count()
L_0135: bge Label17
L_013a: ldloc.0
L_013b: ldarg.2
L_013c: callvirt BattleTech.MechComponent get_Item(Int32)
L_0141: br Label20
L_0146: Label16
L_0146: Label17
L_0146: ldnull
L_0147: Label19
L_0147: Label20
L_0147: ret
DONE

### Harmony id=MechEngineer.Features.LocationalEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.LocationalEffects.LocationalEffectsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.32
### Patch BattleTech.MechComponent, Void ApplyPassiveEffectToTarget(BattleTech.EffectData, BattleTech.AbstractActor, BattleTech.ICombatant, System.String)
L_0000: Local var 0: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Void Prefix(BattleTech.MechComponent, BattleTech.EffectData ByRef)
L_000c: ldarg.0
L_000d: ldfld BattleTech.CombatGameState combat
L_0012: callvirt BattleTech.EffectManager get_EffectManager()
L_0017: ldarg.1
L_0018: ldarg.s 4
L_001a: ldc.i4.m1
L_001b: ldarg.0
L_001c: ldfld BattleTech.AbstractActor parent
L_0021: ldarg.3
L_0022: ldloca.s 0 (BattleTech.WeaponHitInfo)
L_0024: initobj BattleTech.WeaponHitInfo
L_002a: ldloc.0
L_002b: ldc.i4.0
L_002c: ldc.i4.0
L_002d: callvirt System.Collections.Generic.List`1[BattleTech.Effect] CreateEffect(BattleTech.EffectData, System.String, Int32, BattleTech.ICombatant, BattleTech.ICombatant, BattleTech.WeaponHitInfo, Int32, Boolean)
L_0032: pop
L_0033: ret
DONE

### Harmony id=MechEngineer.Features.CriticalEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.CriticalEffects.CriticalEffectsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.32
### Patch BattleTech.Mech, Void CheckForCrit(BattleTech.WeaponHitInfo, BattleTech.ChassisLocations, BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: Local var 1: System.Single[]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.MechComponent
L_0000: Local var 4: BattleTech.Weapon
L_0000: Local var 5: BattleTech.AmmunitionBox
L_0000: Local var 6: BattleTech.Jumpjet
L_0000: Local var 7: BattleTech.HeatSinkDef
L_0000: Local var 8: System.Boolean
L_0000: Local var 9: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 10: BattleTech.ComponentDamageLevel
L_0000: ldarg.3
L_0001: brtrue Label1
L_0006: ldsfld HBS.Logging.ILog attackLogger
L_000b: ldstr "CheckForCrit had a null weapon!"
L_0010: callvirt Void LogError(System.Object)
L_0015: br Label29
L_001a: Label1
L_001a: ldsfld HBS.Logging.ILog attackLogger
L_001f: callvirt Boolean get_IsLogEnabled()
L_0024: brfalse Label2
L_0029: ldsfld HBS.Logging.ILog attackLogger
L_002e: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Base crit chance: {3:P2}"
L_0033: ldc.i4.4
L_0034: newarr System.Object
L_0039: dup
L_003a: ldc.i4.0
L_003b: ldarg.1
L_003c: ldfld System.Int32 attackSequenceId
L_0041: box System.Int32
L_0046: stelem.ref
L_0047: dup
L_0048: ldc.i4.1
L_0049: ldarg.1
L_004a: ldfld System.Int32 attackWeaponIndex
L_004f: box System.Int32
L_0054: stelem.ref
L_0055: dup
L_0056: ldc.i4.2
L_0057: ldarga.s 2
L_0059: constrained. BattleTech.ChassisLocations
L_005f: callvirt System.String ToString()
L_0064: stelem.ref
L_0065: dup
L_0066: ldc.i4.3
L_0067: ldarg.0
L_0068: call BattleTech.CombatGameState get_Combat()
L_006d: callvirt BattleTech.CritChanceRules get_CritChance()
L_0072: ldarg.0
L_0073: ldarg.2
L_0074: ldc.i4.1
L_0075: callvirt Single GetBaseCritChance(BattleTech.Mech, BattleTech.ChassisLocations, Boolean)
L_007a: box System.Single
L_007f: stelem.ref
L_0080: call System.String Format(System.String, System.Object[])
L_0085: callvirt Void Log(System.Object)
L_008a: ldsfld HBS.Logging.ILog attackLogger
L_008f: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Modifiers : {3}"
L_0094: ldc.i4.4
L_0095: newarr System.Object
L_009a: dup
L_009b: ldc.i4.0
L_009c: ldarg.1
L_009d: ldfld System.Int32 attackSequenceId
L_00a2: box System.Int32
L_00a7: stelem.ref
L_00a8: dup
L_00a9: ldc.i4.1
L_00aa: ldarg.1
L_00ab: ldfld System.Int32 attackWeaponIndex
L_00b0: box System.Int32
L_00b5: stelem.ref
L_00b6: dup
L_00b7: ldc.i4.2
L_00b8: ldarga.s 2
L_00ba: constrained. BattleTech.ChassisLocations
L_00c0: callvirt System.String ToString()
L_00c5: stelem.ref
L_00c6: dup
L_00c7: ldc.i4.3
L_00c8: ldarg.0
L_00c9: call BattleTech.CombatGameState get_Combat()
L_00ce: callvirt BattleTech.CritChanceRules get_CritChance()
L_00d3: ldarg.0
L_00d4: ldarg.3
L_00d5: callvirt System.String GetCritMultiplierDescription(BattleTech.ICombatant, BattleTech.Weapon)
L_00da: stelem.ref
L_00db: call System.String Format(System.String, System.Object[])
L_00e0: callvirt Void Log(System.Object)
L_00e5: Label2
L_00e5: ldarg.0
L_00e6: call BattleTech.CombatGameState get_Combat()
L_00eb: callvirt BattleTech.CritChanceRules get_CritChance()
L_00f0: ldarg.0
L_00f1: ldarg.2
L_00f2: ldarg.3
L_00f3: ldc.i4.1
L_00f4: callvirt Single GetCritChance(BattleTech.ICombatant, BattleTech.ChassisLocations, BattleTech.Weapon, Boolean)
L_00f9: stloc.0
L_00fa: ldarg.0
L_00fb: call BattleTech.CombatGameState get_Combat()
L_0100: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0105: ldarg.1
L_0106: ldc.i4.2
L_0107: callvirt Single[] GetRandomFromCache(BattleTech.WeaponHitInfo, Int32)
L_010c: stloc.1
L_010d: ldsfld HBS.Logging.ILog attackLogger
L_0112: callvirt Boolean get_IsLogEnabled()
L_0117: brfalse Label3
L_011c: ldsfld HBS.Logging.ILog attackLogger
L_0121: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Final crit chance: {3:P2}"
L_0126: ldc.i4.4
L_0127: newarr System.Object
L_012c: dup
L_012d: ldc.i4.0
L_012e: ldarg.1
L_012f: ldfld System.Int32 attackSequenceId
L_0134: box System.Int32
L_0139: stelem.ref
L_013a: dup
L_013b: ldc.i4.1
L_013c: ldarg.1
L_013d: ldfld System.Int32 attackWeaponIndex
L_0142: box System.Int32
L_0147: stelem.ref
L_0148: dup
L_0149: ldc.i4.2
L_014a: ldarga.s 2
L_014c: constrained. BattleTech.ChassisLocations
L_0152: callvirt System.String ToString()
L_0157: stelem.ref
L_0158: dup
L_0159: ldc.i4.3
L_015a: ldloc.0
L_015b: box System.Single
L_0160: stelem.ref
L_0161: call System.String Format(System.String, System.Object[])
L_0166: callvirt Void Log(System.Object)
L_016b: ldsfld HBS.Logging.ILog attackLogger
L_0170: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Crit roll: {3:P2}"
L_0175: ldc.i4.4
L_0176: newarr System.Object
L_017b: dup
L_017c: ldc.i4.0
L_017d: ldarg.1
L_017e: ldfld System.Int32 attackSequenceId
L_0183: box System.Int32
L_0188: stelem.ref
L_0189: dup
L_018a: ldc.i4.1
L_018b: ldarg.1
L_018c: ldfld System.Int32 attackWeaponIndex
L_0191: box System.Int32
L_0196: stelem.ref
L_0197: dup
L_0198: ldc.i4.2
L_0199: ldarga.s 2
L_019b: constrained. BattleTech.ChassisLocations
L_01a1: callvirt System.String ToString()
L_01a6: stelem.ref
L_01a7: dup
L_01a8: ldc.i4.3
L_01a9: ldloc.1
L_01aa: ldc.i4.0
L_01ab: ldelem.r4
L_01ac: box System.Single
L_01b1: stelem.ref
L_01b2: call System.String Format(System.String, System.Object[])
L_01b7: callvirt Void Log(System.Object)
L_01bc: Label3
L_01bc: ldloc.1
L_01bd: ldc.i4.0
L_01be: ldelem.r4
L_01bf: ldloc.0
L_01c0: bgt.un Label4
L_01c5: ldarg.0
L_01c6: call BattleTech.MechDef get_MechDef()
L_01cb: ldarg.2
L_01cc: callvirt BattleTech.LocationDef GetChassisLocationDef(BattleTech.ChassisLocations)
L_01d1: ldfld System.Int32 InventorySlots
L_01d6: conv.r4
L_01d7: ldloc.1
L_01d8: ldc.i4.1
L_01d9: ldelem.r4
L_01da: mul
L_01db: conv.i4
L_01dc: stloc.2
L_01dd: ldarg.0
L_01de: ldarg.2
L_01df: ldloc.2
L_01e0: call BattleTech.MechComponent GetComponentInSlot(BattleTech.ChassisLocations, Int32)
L_01e5: stloc.3
L_01e6: ldloc.3
L_01e7: brfalse Label5
L_01ec: ldsfld HBS.Logging.ILog attackLogger
L_01f1: callvirt Boolean get_IsLogEnabled()
L_01f6: brfalse Label6
L_01fb: ldsfld HBS.Logging.ILog attackLogger
L_0200: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical Hit! Found {3} in slot {4}"
L_0205: ldc.i4.5
L_0206: newarr System.Object
L_020b: dup
L_020c: ldc.i4.0
L_020d: ldarg.1
L_020e: ldfld System.Int32 attackSequenceId
L_0213: box System.Int32
L_0218: stelem.ref
L_0219: dup
L_021a: ldc.i4.1
L_021b: ldarg.1
L_021c: ldfld System.Int32 attackWeaponIndex
L_0221: box System.Int32
L_0226: stelem.ref
L_0227: dup
L_0228: ldc.i4.2
L_0229: ldarga.s 2
L_022b: constrained. BattleTech.ChassisLocations
L_0231: callvirt System.String ToString()
L_0236: stelem.ref
L_0237: dup
L_0238: ldc.i4.3
L_0239: ldloc.3
L_023a: callvirt System.String get_Name()
L_023f: stelem.ref
L_0240: dup
L_0241: ldc.i4.4
L_0242: ldloc.2
L_0243: box System.Int32
L_0248: stelem.ref
L_0249: call System.String Format(System.String, System.Object[])
L_024e: callvirt Void Log(System.Object)
L_0253: Label6
L_0253: ldloc.3
L_0254: isinst BattleTech.Weapon
L_0259: stloc.s 4 (BattleTech.Weapon)
L_025b: ldloc.3
L_025c: isinst BattleTech.AmmunitionBox
L_0261: stloc.s 5 (BattleTech.AmmunitionBox)
L_0263: ldloc.3
L_0264: isinst BattleTech.Jumpjet
L_0269: stloc.s 6 (BattleTech.Jumpjet)
L_026b: ldloc.3
L_026c: callvirt BattleTech.MechComponentDef get_componentDef()
L_0271: isinst BattleTech.HeatSinkDef
L_0276: stloc.s 7 (BattleTech.HeatSinkDef)
L_0278: ldloc.s 4 (BattleTech.Weapon)
L_027a: ldnull
L_027b: cgt.un
L_027d: stloc.s 8 (System.Boolean)
L_027f: ldarg.0
L_0280: call BattleTech.MechRepresentation get_GameRep()
L_0285: ldnull
L_0286: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_028b: brfalse Label7
L_0290: ldarg.3
L_0291: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_0296: ldnull
L_0297: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_029c: brfalse Label8
L_02a1: ldarg.3
L_02a2: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02a7: callvirt Boolean get_HasWeaponEffect()
L_02ac: brfalse Label9
L_02b1: ldarg.3
L_02b2: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02b7: callvirt WeaponEffect get_WeaponEffect()
L_02bc: ldfld AudioSwitch_weapon_type weaponImpactType
L_02c1: ldarg.0
L_02c2: call BattleTech.MechRepresentation get_GameRep()
L_02c7: ldfld AkGameObj audioObject
L_02cc: call Void SetSwitch[AudioSwitch_weapon_type](AudioSwitch_weapon_type, AkGameObj)
L_02d1: br Label10
L_02d6: Label8
L_02d6: Label9
L_02d6: ldc.i4.4
L_02d7: ldarg.0
L_02d8: call BattleTech.MechRepresentation get_GameRep()
L_02dd: ldfld AkGameObj audioObject
L_02e2: call Void SetSwitch[AudioSwitch_weapon_type](AudioSwitch_weapon_type, AkGameObj)
L_02e7: Label10
L_02e7: ldc.i4.s 17
L_02e9: ldarg.0
L_02ea: call BattleTech.MechRepresentation get_GameRep()
L_02ef: ldfld AkGameObj audioObject
L_02f4: call Void SetSwitch[AudioSwitch_surface_type](AudioSwitch_surface_type, AkGameObj)
L_02f9: ldc.i4 335
L_02fe: ldarg.0
L_02ff: call BattleTech.MechRepresentation get_GameRep()
L_0304: ldfld AkGameObj audioObject
L_0309: ldnull
L_030a: ldnull
L_030b: call UInt32 PostEvent[AudioEventList_impact](AudioEventList_impact, AkGameObj, EventCallback, System.Object)
L_0310: pop
L_0311: ldc.i4 325
L_0316: ldarg.0
L_0317: call BattleTech.MechRepresentation get_GameRep()
L_031c: ldfld AkGameObj audioObject
L_0321: ldnull
L_0322: ldnull
L_0323: call UInt32 PostEvent[AudioEventList_explosion](AudioEventList_explosion, AkGameObj, EventCallback, System.Object)
L_0328: pop
L_0329: ldarg.0
L_032a: call BattleTech.Team get_team()
L_032f: callvirt Boolean get_LocalPlayerControlsTeam()
L_0334: brfalse Label11
L_0339: ldstr "audioeventdef_musictriggers_combat"
L_033e: ldstr "critical_hit_friendly "
L_0343: ldnull
L_0344: ldnull
L_0345: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_034a: pop
L_034b: br Label12
L_0350: Label11
L_0350: ldarg.0
L_0351: call BattleTech.Team get_team()
L_0356: ldarg.0
L_0357: call BattleTech.CombatGameState get_Combat()
L_035c: callvirt BattleTech.Team get_LocalPlayerTeam()
L_0361: callvirt Boolean IsFriendly(BattleTech.Team)
L_0366: brtrue Label13
L_036b: ldstr "audioeventdef_musictriggers_combat"
L_0370: ldstr "critical_hit_enemy"
L_0375: ldnull
L_0376: ldnull
L_0377: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_037c: pop
L_037d: Label12
L_037d: Label13
L_037d: ldloc.s 6 (BattleTech.Jumpjet)
L_037f: brtrue Label14
L_0384: ldloc.s 7 (BattleTech.HeatSinkDef)
L_0386: brtrue Label15
L_038b: ldloc.s 5 (BattleTech.AmmunitionBox)
L_038d: brtrue Label16
L_0392: ldloc.3
L_0393: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0398: ldc.i4.0
L_0399: ble Label17
L_039e: ldarg.0
L_039f: call BattleTech.MechRepresentation get_GameRep()
L_03a4: ldarg.2
L_03a5: callvirt Void PlayComponentCritVFX(Int32)
L_03aa: Label14
L_03aa: Label15
L_03aa: Label16
L_03aa: Label17
L_03aa: ldloc.s 5 (BattleTech.AmmunitionBox)
L_03ac: brfalse Label18
L_03b1: ldloc.3
L_03b2: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_03b7: ldc.i4.0
L_03b8: ble Label19
L_03bd: ldarg.0
L_03be: call BattleTech.MechRepresentation get_GameRep()
L_03c3: ldarg.2
L_03c4: ldarg.0
L_03c5: call BattleTech.CombatGameState get_Combat()
L_03ca: callvirt BattleTech.CombatGameConstants get_Constants()
L_03cf: callvirt BattleTech.VFXNamesDef get_VFXNames()
L_03d4: ldfld BattleTech.VFXNameDef componentDestruction_AmmoExplosion
L_03d9: call System.String op_Implicit(BattleTech.VFXNameDef)
L_03de: ldc.i4.1
L_03df: call UnityEngine.Vector3 get_zero()
L_03e4: ldc.i4.1
L_03e5: ldc.r4 -1
L_03ea: callvirt Void PlayVFX(Int32, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
L_03ef: Label7
L_03ef: Label18
L_03ef: Label19
L_03ef: ldarg.0
L_03f0: call BattleTech.CombatGameState get_Combat()
L_03f5: callvirt BattleTech.AttackDirector get_AttackDirector()
L_03fa: ldarg.1
L_03fb: ldfld System.Int32 attackSequenceId
L_0400: callvirt AttackSequence GetAttackSequence(Int32)
L_0405: stloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0407: ldloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0409: brfalse Label20
L_040e: ldloc.s 9 (BattleTech.AttackDirector+AttackSequence)
L_0410: ldarg.0
L_0411: call System.String get_GUID()
L_0416: ldloc.s 4 (BattleTech.Weapon)
L_0418: ldloc.s 5 (BattleTech.AmmunitionBox)
L_041a: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
L_041f: Label20
L_041f: ldloc.3
L_0420: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
L_0425: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0427: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_0429: brtrue Label21
L_042e: ldloc.s 8 (System.Boolean)
L_0430: brfalse Label22
L_0435: ldc.i4.2
L_0436: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0438: ldarg.0
L_0439: call BattleTech.CombatGameState get_Combat()
L_043e: callvirt MessageCenter get_MessageCenter()
L_0443: ldarg.0
L_0444: ldstr "{0} CRIT"
L_0449: ldc.i4.1
L_044a: newarr System.Object
L_044f: dup
L_0450: ldc.i4.0
L_0451: ldloc.3
L_0452: callvirt Localize.Text get_UIName()
L_0457: stelem.ref
L_0458: newobj Void .ctor(String, Object[])
L_045d: ldc.i4.s 10
L_045f: ldc.i4.1
L_0460: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_0465: newobj Void .ctor(IStackSequence)
L_046a: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_046f: br Label23
L_0474: Label22
L_0474: ldc.i4.4
L_0475: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_0477: ldarg.0
L_0478: call BattleTech.CombatGameState get_Combat()
L_047d: callvirt MessageCenter get_MessageCenter()
L_0482: ldarg.0
L_0483: ldstr "{0} DESTROYED"
L_0488: ldc.i4.1
L_0489: newarr System.Object
L_048e: dup
L_048f: ldc.i4.0
L_0490: ldloc.3
L_0491: callvirt Localize.Text get_UIName()
L_0496: stelem.ref
L_0497: newobj Void .ctor(String, Object[])
L_049c: ldc.i4.s 11
L_049e: ldc.i4.1
L_049f: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_04a4: newobj Void .ctor(IStackSequence)
L_04a9: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_04ae: br Label24
L_04b3: Label21
L_04b3: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_04b5: ldc.i4.4
L_04b6: beq Label25
L_04bb: ldc.i4.4
L_04bc: stloc.s 10 (BattleTech.ComponentDamageLevel)
L_04be: ldarg.0
L_04bf: call BattleTech.CombatGameState get_Combat()
L_04c4: callvirt MessageCenter get_MessageCenter()
L_04c9: ldarg.0
L_04ca: ldstr "{0} DESTROYED"
L_04cf: ldc.i4.1
L_04d0: newarr System.Object
L_04d5: dup
L_04d6: ldc.i4.0
L_04d7: ldloc.3
L_04d8: callvirt Localize.Text get_UIName()
L_04dd: stelem.ref
L_04de: newobj Void .ctor(String, Object[])
L_04e3: ldc.i4.s 11
L_04e5: ldc.i4.1
L_04e6: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_04eb: newobj Void .ctor(IStackSequence)
L_04f0: call Void PublishMessage(MessageCenter, MessageCenterMessage)
L_04f5: Label23
L_04f5: Label24
L_04f5: Label25
L_04f5: ldloc.3
L_04f6: ldarg.1
L_04f7: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_04f9: ldc.i4.1
L_04fa: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_04ff: ldsfld HBS.Logging.ILog attackLogger
L_0504: callvirt Boolean get_IsLogEnabled()
L_0509: brfalse Label26
L_050e: ldsfld HBS.Logging.ILog attackLogger
L_0513: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical: {3} new damage state: {4}"
L_0518: ldc.i4.5
L_0519: newarr System.Object
L_051e: dup
L_051f: ldc.i4.0
L_0520: ldarg.1
L_0521: ldfld System.Int32 attackSequenceId
L_0526: box System.Int32
L_052b: stelem.ref
L_052c: dup
L_052d: ldc.i4.1
L_052e: ldarg.1
L_052f: ldfld System.Int32 attackWeaponIndex
L_0534: box System.Int32
L_0539: stelem.ref
L_053a: dup
L_053b: ldc.i4.2
L_053c: ldarga.s 2
L_053e: constrained. BattleTech.ChassisLocations
L_0544: callvirt System.String ToString()
L_0549: stelem.ref
L_054a: dup
L_054b: ldc.i4.3
L_054c: ldloc.3
L_054d: callvirt System.String get_Name()
L_0552: stelem.ref
L_0553: dup
L_0554: ldc.i4.4
L_0555: ldloc.s 10 (BattleTech.ComponentDamageLevel)
L_0557: box BattleTech.ComponentDamageLevel
L_055c: stelem.ref
L_055d: call System.String Format(System.String, System.Object[])
L_0562: callvirt Void Log(System.Object)
L_0567: br Label30
L_056c: Label5
L_056c: ldsfld HBS.Logging.ILog attackLogger
L_0571: callvirt Boolean get_IsLogEnabled()
L_0576: brfalse Label27
L_057b: ldsfld HBS.Logging.ILog attackLogger
L_0580: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} Critical Hit! No component in slot {3}"
L_0585: ldc.i4.4
L_0586: newarr System.Object
L_058b: dup
L_058c: ldc.i4.0
L_058d: ldarg.1
L_058e: ldfld System.Int32 attackSequenceId
L_0593: box System.Int32
L_0598: stelem.ref
L_0599: dup
L_059a: ldc.i4.1
L_059b: ldarg.1
L_059c: ldfld System.Int32 attackWeaponIndex
L_05a1: box System.Int32
L_05a6: stelem.ref
L_05a7: dup
L_05a8: ldc.i4.2
L_05a9: ldarga.s 2
L_05ab: constrained. BattleTech.ChassisLocations
L_05b1: callvirt System.String ToString()
L_05b6: stelem.ref
L_05b7: dup
L_05b8: ldc.i4.3
L_05b9: ldloc.2
L_05ba: box System.Int32
L_05bf: stelem.ref
L_05c0: call System.String Format(System.String, System.Object[])
L_05c5: callvirt Void Log(System.Object)
L_05ca: br Label31
L_05cf: Label4
L_05cf: ldsfld HBS.Logging.ILog attackLogger
L_05d4: callvirt Boolean get_IsLogEnabled()
L_05d9: brfalse Label28
L_05de: ldsfld HBS.Logging.ILog attackLogger
L_05e3: ldstr "SEQ:{0}: WEAP:{1} Loc:{2} No crit"
L_05e8: ldarg.1
L_05e9: ldfld System.Int32 attackSequenceId
L_05ee: box System.Int32
L_05f3: ldarg.1
L_05f4: ldfld System.Int32 attackWeaponIndex
L_05f9: box System.Int32
L_05fe: ldarga.s 2
L_0600: constrained. BattleTech.ChassisLocations
L_0606: callvirt System.String ToString()
L_060b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0610: callvirt Void Log(System.Object)
L_0615: Label26
L_0615: Label27
L_0615: Label28
L_0615: Label29
L_0615: Label30
L_0615: Label31
L_0615: ret
DONE

### Patch BattleTech.MechComponent, Int32 get_inventorySize()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Int32)
L_0006: ldarg.0
L_0007: call BattleTech.MechComponentDef get_componentDef()
L_000c: callvirt Int32 get_InventorySize()
L_0011: stloc 0 (System.Int32)
L_0012: ldarg.0
L_0013: ldloca 0 (System.Int32)
L_0015: call Void Postfix(BattleTech.MechComponent, Int32 ByRef)
L_001a: ldarg.0
L_001b: ldloca 0 (System.Int32)
L_001d: call Void Postfix(BattleTech.MechComponent, Int32 ByRef)
L_0022: ldloc 0 (System.Int32)
L_0023: ret
DONE

### Patch BattleTech.MechComponent, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarga 2
L_000d: call Boolean Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg 1
L_001e: ldarga 2
L_0024: call Void Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0029: ldarg.0
L_002a: call BattleTech.StatCollection get_StatCollection()
L_002f: ldarg.1
L_0030: ldfld System.String attackerId
L_0035: ldarg.1
L_0036: ldfld System.Int32 stackItemUID
L_003b: ldstr "DamageLevel"
L_0040: ldc.i4.0
L_0041: ldarg.2
L_0042: ldc.i4.m1
L_0043: ldc.i4.1
L_0044: callvirt Int32 ModifyStat[ComponentDamageLevel](System.String, Int32, System.String, StatOperation, BattleTech.ComponentDamageLevel, Int32, Boolean)
L_0049: pop
L_004a: ldarg.2
L_004b: ldc.i4.0
L_004c: blt Label1
L_0051: ldarg.0
L_0052: ldc.i4.1
L_0053: call Void CancelCreatedEffects(BattleTech.MechComponent, Boolean)
L_0058: Label1
L_0058: ldarg.2
L_0059: ldc.i4.4
L_005a: pop
L_005b: pop
L_005c: ldarg.0
L_005d: call BattleTech.MechComponentDef get_componentDef()
L_0062: callvirt Boolean get_CriticalComponent()
L_0067: brfalse Label2
L_006c: ldarg.0
L_006d: ldfld BattleTech.AbstractActor parent
L_0072: ldstr "Vital component destroyed: "
L_0077: ldarg.0
L_0078: call BattleTech.DescriptionDef get_Description()
L_007d: callvirt System.String get_Name()
L_0082: call System.String Concat(System.String, System.String)
L_0087: ldc.i4.s 9
L_0089: ldc.i4.1
L_008a: ldarg.0
L_008b: ldflda BattleTech.LocationDef locationDef
L_0090: ldfld BattleTech.ChassisLocations Location
L_0095: ldarg.1
L_0096: ldfld System.Int32 stackItemUID
L_009b: ldarg.1
L_009c: ldfld System.String attackerId
L_00a1: ldc.i4.0
L_00a2: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_00a7: Label2
L_00a7: Label0
L_00a7: ldarg.0
L_00a8: call Void Postfix(BattleTech.MechComponent)
L_00ad: ret
DONE

### Harmony id=MechEngineer.Features.AccuracyEffects, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.AccuracyEffects.AccuracyEffectsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.ToHit, Single GetSelfArmMountedModifier(BattleTech.Weapon)
L_0000: Local var 0: System.Single
L_0000: ldc.r4 0
L_0005: stloc 0 (System.Single)
L_0006: ldarg 1
L_000c: ldloca 0 (System.Single)
L_000e: call Boolean Prefix(BattleTech.Weapon, Single ByRef)
L_0013: brfalse Label0
L_0018: ldarg.1
L_0019: ldfld BattleTech.AbstractActor parent
L_001e: brfalse Label1
L_0023: ldarg.1
L_0024: ldfld BattleTech.AbstractActor parent
L_0029: callvirt BattleTech.UnitType get_UnitType()
L_002e: ldc.i4.1
L_002f: bne.un Label2
L_0034: ldarg.1
L_0035: callvirt Int32 get_Location()
L_003a: ldc.i4.s 34
L_003c: and
L_003d: brfalse Label3
L_0042: ldarg.0
L_0043: ldfld BattleTech.CombatGameState combat
L_0048: callvirt BattleTech.CombatGameConstants get_Constants()
L_004d: callvirt BattleTech.ToHitConstantsDef get_ToHit()
L_0052: ldfld System.Single ToHitSelfArmMountedWeapon
L_0057: br Label4
L_005c: Label1
L_005c: Label2
L_005c: Label3
L_005c: ldc.r4 0
L_0061: Label4
L_0061: stloc 0 (System.Single)
L_0062: Label0
L_0062: ldloc 0 (System.Single)
L_0063: ret
DONE

### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void Prefix(BattleTech.Mech)
L_000c: ldarg.0
L_000d: call Void InitEffectStats()
L_0012: ldarg.0
L_0013: call Void Postfix(BattleTech.Mech)
L_0018: ret
DONE

### Patch BattleTech.UI.CombatHUDWeaponSlot, Void AddToolTipDetail(System.String, Int32)
L_0000: ldarga 1
L_0006: call Void Prefix(System.String ByRef)
L_000b: ldarg.2
L_000c: ldc.i4.0
L_000d: bge Label1
L_0012: ldarg.0
L_0013: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0018: ldfld System.Collections.Generic.List`1[Localize.Text] BuffStrings
L_001d: ldstr "{0} {1:+0;-#}"
L_0022: ldc.i4.2
L_0023: newarr System.Object
L_0028: dup
L_0029: ldc.i4.0
L_002a: ldarg.1
L_002b: stelem.ref
L_002c: dup
L_002d: ldc.i4.1
L_002e: ldarg.2
L_002f: box System.Int32
L_0034: stelem.ref
L_0035: newobj Void .ctor(String, Object[])
L_003a: callvirt Void Add(Localize.Text)
L_003f: br Label3
L_0044: Label1
L_0044: ldarg.2
L_0045: ldc.i4.0
L_0046: ble Label2
L_004b: ldarg.0
L_004c: ldfld BattleTech.UI.CombatHUDTooltipHoverElement ToolTipHoverElement
L_0051: ldfld System.Collections.Generic.List`1[Localize.Text] DebuffStrings
L_0056: ldstr "{0} {1:+0;-#}"
L_005b: ldc.i4.2
L_005c: newarr System.Object
L_0061: dup
L_0062: ldc.i4.0
L_0063: ldarg.1
L_0064: stelem.ref
L_0065: dup
L_0066: ldc.i4.1
L_0067: ldarg.2
L_0068: box System.Int32
L_006d: stelem.ref
L_006e: newobj Void .ctor(String, Object[])
L_0073: callvirt Void Add(Localize.Text)
L_0078: Label2
L_0078: Label3
L_0078: ret
DONE

### Harmony id=MechEngineer.Features.OverrideDescriptions, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideDescriptions.OverrideDescriptionsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.UI.ListElementController_BASE_NotListView, Void SetComponentTooltipData(BattleTech.MechComponentDef)
L_0000: Local var 0: BattleTech.UI.Tooltips.HBSTooltipStateData
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_0006: ldnull
L_0007: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_000c: brtrue Label1
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_0017: ldfld BattleTech.UI.Tooltips.HBSTooltip tooltip
L_001c: ldnull
L_001d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0022: brtrue Label2
L_0027: ldarg.1
L_0028: brtrue Label3
L_002d: Label1
L_002d: Label2
L_002d: br Label4
L_0032: Label3
L_0032: newobj Void .ctor()
L_0037: stloc.0
L_0038: ldloc.0
L_0039: ldarg.1
L_003a: call System.Object MechComponentDefHandlerForTooltip(BattleTech.MechComponentDef)
L_003f: callvirt Void SetObject(System.Object)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.InventoryItemElement_NotListView ItemWidget
L_004a: ldfld BattleTech.UI.Tooltips.HBSTooltip tooltip
L_004f: ldloc.0
L_0050: callvirt Void SetDefaultStateData(BattleTech.UI.Tooltips.HBSTooltipStateData)
L_0055: Label4
L_0055: ldarg.0
L_0056: call Void Postfix(BattleTech.UI.ListElementController_BASE_NotListView)
L_005b: ret
DONE

### Patch BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponentRef
L_0000: Local var 5: BattleTech.MechComponentDef
L_0000: Local var 6: BattleTech.UI.MechLabItemSlotElement
L_0000: ldnull
L_0001: stloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_0003: ldnull
L_0004: stloc.0
L_0005: ldarg.0
L_0006: ldfld BattleTech.Data.DataManager dataManager
L_000b: ldsfld System.String MECHCOMPONENT_ITEM_PREFAB
L_0010: ldc.i4.s 68
L_0012: ldloca.s 2 (System.Nullable`1[UnityEngine.Vector3])
L_0014: initobj System.Nullable`1[UnityEngine.Vector3]
L_001a: ldloc.2
L_001b: ldloca.s 3 (System.Nullable`1[UnityEngine.Quaternion])
L_001d: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0023: ldloc.3
L_0024: ldnull
L_0025: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_002a: stloc.1
L_002b: ldloc.1
L_002c: ldnull
L_002d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0032: brfalse Label1
L_0037: ldloc.1
L_0038: callvirt BattleTech.UI.MechLabItemSlotElement GetComponent[MechLabItemSlotElement]()
L_003d: stloc.0
L_003e: ldarg.1
L_003f: stloc.s 4 (BattleTech.MechComponentRef)
L_0041: ldarg.2
L_0042: brfalse Label2
L_0047: ldarg.1
L_0048: ldnull
L_0049: newobj Void .ctor(MechComponentRef, String)
L_004e: stloc.s 4 (BattleTech.MechComponentRef)
L_0050: ldarg.0
L_0051: call Boolean get_IsSimGame()
L_0056: brfalse Label3
L_005b: ldarg.0
L_005c: ldfld BattleTech.SimGameState sim
L_0061: ldarg.1
L_0062: callvirt BattleTech.BattleTechResourceType GetResourceType()
L_0067: ldarg.1
L_0068: callvirt System.String get_ComponentDefID()
L_006d: callvirt BattleTech.MechComponentDef GetComponentDef(BattleTech.BattleTechResourceType, System.String)
L_0072: stloc.s 5 (BattleTech.MechComponentDef)
L_0074: ldloc.s 4 (BattleTech.MechComponentRef)
L_0076: ldloc.s 5 (BattleTech.MechComponentDef)
L_0078: callvirt Void SetComponentDef(BattleTech.MechComponentDef)
L_007d: ldloc.s 4 (BattleTech.MechComponentRef)
L_007f: ldarg.0
L_0080: ldfld BattleTech.SimGameState sim
L_0085: callvirt System.String GenerateSimGameUID()
L_008a: callvirt Void SetSimGameUID(System.String)
L_008f: Label2
L_008f: Label3
L_008f: ldloc.0
L_0090: ldloc.s 4 (BattleTech.MechComponentRef)
L_0092: ldarg.3
L_0093: ldarg.0
L_0094: ldfld BattleTech.Data.DataManager dataManager
L_0099: ldarg.s 4
L_009b: callvirt Void SetData(BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.Data.DataManager, BattleTech.UI.IMechLabDropTarget)
L_00a0: ldarg.s 5
L_00a2: ldnull
L_00a3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00a8: brfalse Label4
L_00ad: ldloc.0
L_00ae: ldarg.s 5
L_00b0: stfld BattleTech.UI.InventoryItemElement_NotListView ItemThatISpawnedFrom
L_00b5: Label1
L_00b5: Label4
L_00b5: ldloc.0
L_00b6: stloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00b8: ldarg.0
L_00b9: ldarg 1
L_00bf: ldloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00c1: call Void Postfix(BattleTech.UI.MechLabPanel, BattleTech.MechComponentRef, BattleTech.UI.MechLabItemSlotElement)
L_00c6: ldloc 6 (BattleTech.UI.MechLabItemSlotElement)
L_00c8: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean ValidateLoadout(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 9 (System.Boolean)
L_0007: ldarg.0
L_0008: call Boolean get_Initialized()
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label7
L_0018: Label1
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldstr ""
L_001f: ldstr ""
L_0024: call BattleTech.MechDef CreateMechDef(System.String, System.String)
L_0029: stfld BattleTech.MechDef activeMechDef
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0034: ldc.i4.0
L_0035: callvirt Void RefreshInfo(Boolean)
L_003a: ldarg.0
L_003b: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0040: ldarg.0
L_0041: ldfld BattleTech.MechDef activeMechDef
L_0046: callvirt Void SetData(BattleTech.MechDef)
L_004b: ldarg.0
L_004c: ldc.i4.3
L_004d: ldarg.0
L_004e: ldfld BattleTech.Data.DataManager dataManager
L_0053: ldarg.0
L_0054: ldfld BattleTech.MechDef activeMechDef
L_0059: ldarg.0
L_005a: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_005f: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0064: stfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0069: ldarg.0
L_006a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_006f: newobj Void .ctor()
L_0074: dup
L_0075: ldc.i4.0
L_0076: callvirt Void Add(BattleTech.MechValidationType)
L_007b: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0080: stloc.0
L_0081: ldarg.0
L_0082: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0087: newobj Void .ctor()
L_008c: dup
L_008d: ldc.i4.2
L_008e: callvirt Void Add(BattleTech.MechValidationType)
L_0093: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0098: stloc.1
L_0099: ldarg.0
L_009a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_009f: newobj Void .ctor()
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: callvirt Void Add(BattleTech.MechValidationType)
L_00ab: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00b7: newobj Void .ctor()
L_00bc: dup
L_00bd: ldc.i4.4
L_00be: callvirt Void Add(BattleTech.MechValidationType)
L_00c3: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00c8: stloc.3
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00cf: newobj Void .ctor()
L_00d4: dup
L_00d5: ldc.i4.5
L_00d6: callvirt Void Add(BattleTech.MechValidationType)
L_00db: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00e0: stloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00e8: newobj Void .ctor()
L_00ed: dup
L_00ee: ldc.i4.6
L_00ef: callvirt Void Add(BattleTech.MechValidationType)
L_00f4: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00f9: stloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_00fb: ldarg.0
L_00fc: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0101: newobj Void .ctor()
L_0106: dup
L_0107: ldc.i4.8
L_0108: callvirt Void Add(BattleTech.MechValidationType)
L_010d: dup
L_010e: ldc.i4.s 9
L_0110: callvirt Void Add(BattleTech.MechValidationType)
L_0115: dup
L_0116: ldc.i4.7
L_0117: callvirt Void Add(BattleTech.MechValidationType)
L_011c: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0121: stloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_0123: ldarg.0
L_0124: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0129: newobj Void .ctor()
L_012e: dup
L_012f: ldc.i4.s 10
L_0131: callvirt Void Add(BattleTech.MechValidationType)
L_0136: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_013b: stloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_013d: ldarg.0
L_013e: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0143: newobj Void .ctor()
L_0148: dup
L_0149: ldc.i4.s 11
L_014b: callvirt Void Add(BattleTech.MechValidationType)
L_0150: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0155: stloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_0157: ldarg.0
L_0158: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_015d: ldloc.0
L_015e: callvirt Void ToggleGenericAlert(System.Collections.Generic.List`1[Localize.Text])
L_0163: ldarg.0
L_0164: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0169: ldloc.1
L_016a: callvirt Void ToggleOverweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0175: ldloc.2
L_0176: callvirt Void ToggleUnderweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0181: ldloc.3
L_0182: callvirt Void ToggleMissingWeaponAlert(System.Collections.Generic.List`1[Localize.Text])
L_0187: ldarg.0
L_0188: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_018d: ldloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_018f: callvirt Void ToggleNoAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_0194: ldarg.0
L_0195: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_019a: ldloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_019c: callvirt Void ToggleUnneededAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_01a1: ldarg.0
L_01a2: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01a7: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01a9: callvirt Void ToggleInventoryAlert(System.Collections.Generic.List`1[Localize.Text])
L_01ae: ldarg.0
L_01af: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01b4: ldloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_01b6: callvirt Void ToggleDamagedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01bb: ldarg.0
L_01bc: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01c1: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01c3: callvirt Void ToggleDestroyedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01c8: ldloc.0
L_01c9: callvirt Int32 get_Count()
L_01ce: ldc.i4.0
L_01cf: bgt Label2
L_01d4: ldloc.1
L_01d5: callvirt Int32 get_Count()
L_01da: ldc.i4.0
L_01db: bgt Label3
L_01e0: ldloc.3
L_01e1: callvirt Int32 get_Count()
L_01e6: ldc.i4.0
L_01e7: bgt Label4
L_01ec: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01ee: callvirt Int32 get_Count()
L_01f3: ldc.i4.0
L_01f4: bgt Label5
L_01f9: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01fb: callvirt Int32 get_Count()
L_0200: ldc.i4.0
L_0201: cgt
L_0203: br Label6
L_0208: Label2
L_0208: Label3
L_0208: Label4
L_0208: Label5
L_0208: ldc.i4.1
L_0209: Label6
L_0209: ldc.i4.0
L_020a: ceq
L_020c: Label7
L_020c: stloc 9 (System.Boolean)
L_020e: ldarg.0
L_020f: call Void Postfix(BattleTech.UI.MechLabPanel)
L_0214: ldloc 9 (System.Boolean)
L_0216: ret
DONE

### Patch BattleTech.UI.Tooltips.TooltipPrefab_Equipment, Boolean SetData(System.Object)
L_0000: Local var 0: BattleTech.MechComponentDef
L_0000: Local var 1: BattleTech.SimGameState
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 5 (System.Boolean)
L_0007: ldarg.1
L_0008: brtrue Label1
L_000d: ldc.i4.0
L_000e: br Label9
L_0013: Label1
L_0013: ldarg.1
L_0014: castclass BattleTech.MechComponentDef
L_0019: stloc.0
L_001a: ldarg.0
L_001b: ldfld BattleTech.UI.TMProWrapper.LocalizableText manufacturerText
L_0020: ldloc.0
L_0021: callvirt BattleTech.DescriptionDef get_Description()
L_0026: callvirt System.String get_Manufacturer()
L_002b: call System.Object[] Empty[Object]()
L_0030: callvirt Void SetText(System.String, System.Object[])
L_0035: ldarg.0
L_0036: ldfld BattleTech.UI.TMProWrapper.LocalizableText nameText
L_003b: ldloc.0
L_003c: callvirt BattleTech.DescriptionDef get_Description()
L_0041: callvirt System.String get_UIName()
L_0046: call System.Object[] Empty[Object]()
L_004b: callvirt Void SetText(System.String, System.Object[])
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.TMProWrapper.LocalizableText modelText
L_0056: ldloc.0
L_0057: callvirt BattleTech.DescriptionDef get_Description()
L_005c: callvirt System.String get_Model()
L_0061: call System.Object[] Empty[Object]()
L_0066: callvirt Void SetText(System.String, System.Object[])
L_006b: ldarg.0
L_006c: ldfld BattleTech.UI.TMProWrapper.LocalizableText tonnageText
L_0071: ldloc.0
L_0072: callvirt Single get_Tonnage()
L_0077: stloc.2
L_0078: ldloca.s 2 (System.Single)
L_007a: call System.String ToString()
L_007f: call System.Object[] Empty[Object]()
L_0084: callvirt Void SetText(System.String, System.Object[])
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.TMProWrapper.LocalizableText slotsText
L_008f: ldloc.0
L_0090: callvirt Int32 get_InventorySize()
L_0095: stloc.3
L_0096: ldloca.s 3 (System.Int32)
L_0098: call System.String ToString()
L_009d: call System.Object[] Empty[Object]()
L_00a2: callvirt Void SetText(System.String, System.Object[])
L_00a7: ldarg.0
L_00a8: ldfld BattleTech.UI.TMProWrapper.LocalizableText valueText
L_00ad: ldloc.0
L_00ae: callvirt BattleTech.DescriptionDef get_Description()
L_00b3: callvirt Int32 get_Cost()
L_00b8: call System.String GetCBillString(Int32)
L_00bd: call System.Object[] Empty[Object]()
L_00c2: callvirt Void SetText(System.String, System.Object[])
L_00c7: ldloc.0
L_00c8: callvirt System.String get_BonusValueA()
L_00cd: call Boolean IsNullOrEmpty(System.String)
L_00d2: brfalse Label2
L_00d7: ldloc.0
L_00d8: callvirt System.String get_BonusValueB()
L_00dd: call Boolean IsNullOrEmpty(System.String)
L_00e2: brfalse Label3
L_00e7: ldarg.0
L_00e8: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusesText
L_00ed: ldstr "-"
L_00f2: call System.Object[] Empty[Object]()
L_00f7: callvirt Void SetText(System.String, System.Object[])
L_00fc: br Label4
L_0101: Label2
L_0101: Label3
L_0101: ldarg.0
L_0102: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusesText
L_0107: ldstr "{0} {1}"
L_010c: ldc.i4.2
L_010d: newarr System.Object
L_0112: dup
L_0113: ldc.i4.0
L_0114: ldloc.0
L_0115: callvirt System.String get_BonusValueA()
L_011a: stelem.ref
L_011b: dup
L_011c: ldc.i4.1
L_011d: ldloc.0
L_011e: callvirt System.String get_BonusValueB()
L_0123: stelem.ref
L_0124: callvirt Void SetText(System.String, System.Object[])
L_0129: Label4
L_0129: ldarg.0
L_012a: ldfld BattleTech.UI.TMProWrapper.LocalizableText detailText
L_012f: ldloc.0
L_0130: callvirt BattleTech.DescriptionDef get_Description()
L_0135: callvirt System.String get_Details()
L_013a: call System.Object[] Empty[Object]()
L_013f: callvirt Void SetText(System.String, System.Object[])
L_0144: ldarg.0
L_0145: ldfld BattleTech.UI.TMProWrapper.LocalizableText detailText
L_014a: callvirt Void SetAllDirty()
L_014f: call BattleTech.GameInstance get_BattleTechGame()
L_0154: callvirt BattleTech.SimGameState get_Simulation()
L_0159: stloc.1
L_015a: ldloc.1
L_015b: brfalse Label5
L_0160: ldloc.1
L_0161: ldloc.0
L_0162: callvirt BattleTech.DescriptionDef get_Description()
L_0167: callvirt System.String get_Id()
L_016c: ldarg.0
L_016d: ldloc.0
L_016e: call System.String GetComponentType(BattleTech.MechComponentDef)
L_0173: ldc.i4.1
L_0174: callvirt Int32 GetItemCount(System.String, System.String, ItemCountType)
L_0179: stloc.s 4 (System.Int32)
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.TMProWrapper.LocalizableText quantity
L_0181: ldloca.s 4 (System.Int32)
L_0183: call System.String ToString()
L_0188: call System.Object[] Empty[Object]()
L_018d: callvirt Void SetText(System.String, System.Object[])
L_0192: br Label6
L_0197: Label5
L_0197: ldarg.0
L_0198: ldfld BattleTech.UI.TMProWrapper.LocalizableText quantity
L_019d: ldstr "INFINITE"
L_01a2: call System.Object[] Empty[Object]()
L_01a7: callvirt Void SetText(System.String, System.Object[])
L_01ac: Label6
L_01ac: ldarg.0
L_01ad: ldfld UnityEngine.UI.Image PNGImage
L_01b2: ldnull
L_01b3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01b8: brfalse Label7
L_01bd: ldarg.0
L_01be: ldfld UnityEngine.UI.Image PNGImage
L_01c3: ldc.i4.0
L_01c4: callvirt Void set_enabled(Boolean)
L_01c9: Label7
L_01c9: ldarg.0
L_01ca: ldfld SVGImporter.SVGImage SVGImage
L_01cf: ldnull
L_01d0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01d5: brfalse Label8
L_01da: ldarg.0
L_01db: ldfld SVGImporter.SVGImage SVGImage
L_01e0: call BattleTech.GameInstance get_BattleTechGame()
L_01e5: callvirt BattleTech.Data.DataManager get_DataManager()
L_01ea: callvirt BattleTech.Data.SVGCache get_SVGCache()
L_01ef: ldloc.0
L_01f0: callvirt BattleTech.DescriptionDef get_Description()
L_01f5: callvirt System.String get_Icon()
L_01fa: callvirt SVGImporter.SVGAsset GetAsset(System.String)
L_01ff: callvirt Void set_vectorGraphics(SVGImporter.SVGAsset)
L_0204: Label8
L_0204: ldc.i4.1
L_0205: Label9
L_0205: stloc 5 (System.Boolean)
L_0207: ldarg.0
L_0208: ldarg 1
L_020e: call Void Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment, System.Object)
L_0213: ldloc 5 (System.Boolean)
L_0215: ret
DONE

### Harmony id=MechEngineer.Features.DynamicSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.DynamicSlots.DynamicSlotsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.UI.MechLabItemSlotElement, Void SetIconAndText()
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.TMProWrapper.LocalizableText nameText
L_0006: ldstr "{0}"
L_000b: ldc.i4.1
L_000c: newarr System.Object
L_0011: dup
L_0012: ldc.i4.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.MechComponentRef componentRef
L_0019: callvirt BattleTech.MechComponentDef get_Def()
L_001e: callvirt BattleTech.DescriptionDef get_Description()
L_0023: callvirt System.String get_UIName()
L_0028: stelem.ref
L_0029: callvirt Void SetText(System.String, System.Object[])
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.UIColorRefTracker nameTextColor
L_0034: ldc.i4.1
L_0035: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_003a: ldarg.0
L_003b: ldfld BattleTech.MechComponentRef componentRef
L_0040: callvirt BattleTech.MechComponentDef get_Def()
L_0045: callvirt System.String get_BonusValueA()
L_004a: ldstr ""
L_004f: call Boolean op_Inequality(System.String, System.String)
L_0054: brfalse Label1
L_0059: ldarg.0
L_005a: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusTextA
L_005f: callvirt UnityEngine.GameObject get_gameObject()
L_0064: ldc.i4.1
L_0065: callvirt Void SetActive(Boolean)
L_006a: ldarg.0
L_006b: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusTextA
L_0070: ldstr "{0}"
L_0075: ldc.i4.1
L_0076: newarr System.Object
L_007b: dup
L_007c: ldc.i4.0
L_007d: ldarg.0
L_007e: ldfld BattleTech.MechComponentRef componentRef
L_0083: callvirt BattleTech.MechComponentDef get_Def()
L_0088: callvirt System.String get_BonusValueA()
L_008d: stelem.ref
L_008e: callvirt Void SetText(System.String, System.Object[])
L_0093: ldarg.0
L_0094: ldfld BattleTech.UI.UIColorRefTracker bonusTextAColor
L_0099: ldc.i4.1
L_009a: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_009f: Label1
L_009f: ldarg.0
L_00a0: ldfld BattleTech.MechComponentRef componentRef
L_00a5: callvirt BattleTech.MechComponentDef get_Def()
L_00aa: callvirt System.String get_BonusValueB()
L_00af: ldstr ""
L_00b4: call Boolean op_Inequality(System.String, System.String)
L_00b9: brfalse Label2
L_00be: ldarg.0
L_00bf: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusTextB
L_00c4: callvirt UnityEngine.GameObject get_gameObject()
L_00c9: ldc.i4.1
L_00ca: callvirt Void SetActive(Boolean)
L_00cf: ldarg.0
L_00d0: ldfld BattleTech.UI.TMProWrapper.LocalizableText bonusTextB
L_00d5: ldstr "{0}"
L_00da: ldc.i4.1
L_00db: newarr System.Object
L_00e0: dup
L_00e1: ldc.i4.0
L_00e2: ldarg.0
L_00e3: ldfld BattleTech.MechComponentRef componentRef
L_00e8: callvirt BattleTech.MechComponentDef get_Def()
L_00ed: callvirt System.String get_BonusValueB()
L_00f2: stelem.ref
L_00f3: callvirt Void SetText(System.String, System.Object[])
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.UI.UIColorRefTracker bonusTextBColor
L_00fe: ldc.i4.1
L_00ff: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_0104: Label2
L_0104: ldarg.0
L_0105: ldfld BattleTech.MechComponentRef componentRef
L_010a: callvirt BattleTech.MechComponentDef get_Def()
L_010f: callvirt BattleTech.DescriptionDef get_Description()
L_0114: callvirt System.String get_Icon()
L_0119: call Boolean IsNullOrEmpty(System.String)
L_011e: brtrue Label3
L_0123: ldarg.0
L_0124: ldfld SVGImporter.SVGImage icon
L_0129: ldarg.0
L_012a: ldfld BattleTech.Data.DataManager dataManager
L_012f: callvirt BattleTech.Data.SVGCache get_SVGCache()
L_0134: ldarg.0
L_0135: ldfld BattleTech.MechComponentRef componentRef
L_013a: callvirt BattleTech.MechComponentDef get_Def()
L_013f: callvirt BattleTech.DescriptionDef get_Description()
L_0144: callvirt System.String get_Icon()
L_0149: callvirt SVGImporter.SVGAsset GetAsset(System.String)
L_014e: callvirt Void set_vectorGraphics(SVGImporter.SVGAsset)
L_0153: br Label4
L_0158: Label3
L_0158: ldarg.0
L_0159: ldfld SVGImporter.SVGImage icon
L_015e: ldarg.0
L_015f: ldfld BattleTech.MechComponentRef componentRef
L_0164: call SVGImporter.SVGAsset GetComponentTypeIconAsset(BattleTech.MechComponentRef)
L_0169: callvirt Void set_vectorGraphics(SVGImporter.SVGAsset)
L_016e: Label4
L_016e: ldarg.0
L_016f: ldfld BattleTech.UI.UIColorRefTracker iconColor
L_0174: ldc.i4.1
L_0175: callvirt Void SetUIColor(BattleTech.UI.UIColor)
L_017a: ldarg.0
L_017b: ldfld BattleTech.MechComponentRef componentRef
L_0180: ldarg.0
L_0181: ldfld SVGImporter.SVGImage icon
L_0186: call Void Postfix(BattleTech.MechComponentRef, SVGImporter.SVGImage)
L_018b: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean ValidateLoadout(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 5: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 9 (System.Boolean)
L_0007: ldarg.0
L_0008: call Boolean get_Initialized()
L_000d: brtrue Label1
L_0012: ldc.i4.0
L_0013: br Label7
L_0018: Label1
L_0018: ldarg.0
L_0019: ldarg.0
L_001a: ldstr ""
L_001f: ldstr ""
L_0024: call BattleTech.MechDef CreateMechDef(System.String, System.String)
L_0029: stfld BattleTech.MechDef activeMechDef
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0034: ldc.i4.0
L_0035: callvirt Void RefreshInfo(Boolean)
L_003a: ldarg.0
L_003b: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0040: ldarg.0
L_0041: ldfld BattleTech.MechDef activeMechDef
L_0046: callvirt Void SetData(BattleTech.MechDef)
L_004b: ldarg.0
L_004c: ldc.i4.3
L_004d: ldarg.0
L_004e: ldfld BattleTech.Data.DataManager dataManager
L_0053: ldarg.0
L_0054: ldfld BattleTech.MechDef activeMechDef
L_0059: ldarg.0
L_005a: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_005f: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0064: stfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0069: ldarg.0
L_006a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_006f: newobj Void .ctor()
L_0074: dup
L_0075: ldc.i4.0
L_0076: callvirt Void Add(BattleTech.MechValidationType)
L_007b: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0080: stloc.0
L_0081: ldarg.0
L_0082: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0087: newobj Void .ctor()
L_008c: dup
L_008d: ldc.i4.2
L_008e: callvirt Void Add(BattleTech.MechValidationType)
L_0093: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0098: stloc.1
L_0099: ldarg.0
L_009a: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_009f: newobj Void .ctor()
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: callvirt Void Add(BattleTech.MechValidationType)
L_00ab: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00b0: stloc.2
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00b7: newobj Void .ctor()
L_00bc: dup
L_00bd: ldc.i4.4
L_00be: callvirt Void Add(BattleTech.MechValidationType)
L_00c3: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00c8: stloc.3
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00cf: newobj Void .ctor()
L_00d4: dup
L_00d5: ldc.i4.5
L_00d6: callvirt Void Add(BattleTech.MechValidationType)
L_00db: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00e0: stloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_00e2: ldarg.0
L_00e3: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00e8: newobj Void .ctor()
L_00ed: dup
L_00ee: ldc.i4.6
L_00ef: callvirt Void Add(BattleTech.MechValidationType)
L_00f4: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00f9: stloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_00fb: ldarg.0
L_00fc: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0101: newobj Void .ctor()
L_0106: dup
L_0107: ldc.i4.8
L_0108: callvirt Void Add(BattleTech.MechValidationType)
L_010d: dup
L_010e: ldc.i4.s 9
L_0110: callvirt Void Add(BattleTech.MechValidationType)
L_0115: dup
L_0116: ldc.i4.7
L_0117: callvirt Void Add(BattleTech.MechValidationType)
L_011c: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0121: stloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_0123: ldarg.0
L_0124: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0129: newobj Void .ctor()
L_012e: dup
L_012f: ldc.i4.s 10
L_0131: callvirt Void Add(BattleTech.MechValidationType)
L_0136: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_013b: stloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_013d: ldarg.0
L_013e: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0143: newobj Void .ctor()
L_0148: dup
L_0149: ldc.i4.s 11
L_014b: callvirt Void Add(BattleTech.MechValidationType)
L_0150: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0155: stloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_0157: ldarg.0
L_0158: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_015d: ldloc.0
L_015e: callvirt Void ToggleGenericAlert(System.Collections.Generic.List`1[Localize.Text])
L_0163: ldarg.0
L_0164: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0169: ldloc.1
L_016a: callvirt Void ToggleOverweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0175: ldloc.2
L_0176: callvirt Void ToggleUnderweightAlert(System.Collections.Generic.List`1[Localize.Text])
L_017b: ldarg.0
L_017c: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0181: ldloc.3
L_0182: callvirt Void ToggleMissingWeaponAlert(System.Collections.Generic.List`1[Localize.Text])
L_0187: ldarg.0
L_0188: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_018d: ldloc.s 4 (System.Collections.Generic.List`1[Localize.Text])
L_018f: callvirt Void ToggleNoAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_0194: ldarg.0
L_0195: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_019a: ldloc.s 5 (System.Collections.Generic.List`1[Localize.Text])
L_019c: callvirt Void ToggleUnneededAmmoAlert(System.Collections.Generic.List`1[Localize.Text])
L_01a1: ldarg.0
L_01a2: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01a7: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01a9: callvirt Void ToggleInventoryAlert(System.Collections.Generic.List`1[Localize.Text])
L_01ae: ldarg.0
L_01af: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01b4: ldloc.s 7 (System.Collections.Generic.List`1[Localize.Text])
L_01b6: callvirt Void ToggleDamagedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01bb: ldarg.0
L_01bc: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_01c1: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01c3: callvirt Void ToggleDestroyedAlert(System.Collections.Generic.List`1[Localize.Text])
L_01c8: ldloc.0
L_01c9: callvirt Int32 get_Count()
L_01ce: ldc.i4.0
L_01cf: bgt Label2
L_01d4: ldloc.1
L_01d5: callvirt Int32 get_Count()
L_01da: ldc.i4.0
L_01db: bgt Label3
L_01e0: ldloc.3
L_01e1: callvirt Int32 get_Count()
L_01e6: ldc.i4.0
L_01e7: bgt Label4
L_01ec: ldloc.s 6 (System.Collections.Generic.List`1[Localize.Text])
L_01ee: callvirt Int32 get_Count()
L_01f3: ldc.i4.0
L_01f4: bgt Label5
L_01f9: ldloc.s 8 (System.Collections.Generic.List`1[Localize.Text])
L_01fb: callvirt Int32 get_Count()
L_0200: ldc.i4.0
L_0201: cgt
L_0203: br Label6
L_0208: Label2
L_0208: Label3
L_0208: Label4
L_0208: Label5
L_0208: ldc.i4.1
L_0209: Label6
L_0209: ldc.i4.0
L_020a: ceq
L_020c: Label7
L_020c: stloc 9 (System.Boolean)
L_020e: ldarg.0
L_020f: call Void Postfix(BattleTech.UI.MechLabPanel)
L_0214: ldarg.0
L_0215: call Void Postfix(BattleTech.UI.MechLabPanel)
L_021a: ldloc 9 (System.Boolean)
L_021c: ret
DONE

### Harmony id=MechEngineer.Features.ShutdownInjuryProtection, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ShutdownInjuryProtection.ShutdownInjuryProtectionSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.Pilot, System.String get_InjuryReasonDescription()
L_0000: Local var 0: BattleTech.InjuryReason
L_0000: Local var 1: System.String
L_0000: ldnull
L_0001: stloc 1 (System.String)
L_0002: ldarg.0
L_0003: ldfld BattleTech.InjuryReason injuryReason
L_0008: stloc.0
L_0009: ldloc.0
L_000a: ldc.i4.1
L_000b: sub
L_000c: switch Labels1,2,3,4,5
L_0025: br Label6
L_002a: Label1
L_002a: ldstr "MECH DESTROYED"
L_002f: call System.String T(System.String)
L_0034: br Label7
L_0039: Label3
L_0039: ldstr "AMMO EXPLOSION"
L_003e: call System.String T(System.String)
L_0043: br Label8
L_0048: Label2
L_0048: ldstr "HEAD HIT"
L_004d: call System.String T(System.String)
L_0052: br Label9
L_0057: Label4
L_0057: ldstr "KNOCKDOWN"
L_005c: call System.String T(System.String)
L_0061: br Label10
L_0066: Label5
L_0066: ldstr "SIDE TORSO DESTROYED"
L_006b: call System.String T(System.String)
L_0070: br Label11
L_0075: Label6
L_0075: ldstr "ERROR - NOT SET"
L_007a: Label7
L_007a: Label8
L_007a: Label9
L_007a: Label10
L_007a: Label11
L_007a: stloc 1 (System.String)
L_007b: ldarg.0
L_007c: ldloca 1 (System.String)
L_007e: call Void Postfix(BattleTech.Pilot, System.String ByRef)
L_0083: ldloc 1 (System.String)
L_0084: ret
DONE

### Patch BattleTech.Mech, Void CheckForHeatDamage(Int32, System.String)
L_0000: Local var 0: System.Single
L_0000: Local var 1: BattleTech.WeaponHitInfo
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Boolean get_IsOverheated()
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: call BattleTech.CombatGameState get_Combat()
L_0017: callvirt MessageCenter get_MessageCenter()
L_001c: ldarg.0
L_001d: ldstr "HEAT CRITICAL"
L_0022: call System.Object[] Empty[Object]()
L_0027: newobj Void .ctor(String, Object[])
L_002c: ldc.i4.2
L_002d: ldc.i4.1
L_002e: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_0033: newobj Void .ctor(IStackSequence)
L_0038: callvirt Void PublishMessage(MessageCenterMessage)
L_003d: ldarg.0
L_003e: call Single DamageFromOverheat()
L_0043: stloc.0
L_0044: ldloc.0
L_0045: ldc.r4 0.01
L_004a: ble.un Label2
L_004f: ldarg.0
L_0050: call BattleTech.CombatGameState get_Combat()
L_0055: callvirt MessageCenter get_MessageCenter()
L_005a: ldarg.0
L_005b: ldstr "STRUCTURE DAMAGED"
L_0060: ldc.i4.2
L_0061: ldc.i4.1
L_0062: newobj Void .ctor(ICombatant, String, MessageNature, Boolean)
L_0067: newobj Void .ctor(IStackSequence)
L_006c: callvirt Void PublishMessage(MessageCenterMessage)
L_0071: ldarg.0
L_0072: call BattleTech.CombatGameState get_Combat()
L_0077: callvirt MessageCenter get_MessageCenter()
L_007c: ldarg.0
L_007d: newobj Void .ctor(Mech)
L_0082: callvirt Void PublishMessage(MessageCenterMessage)
L_0087: ldsfld HBS.Logging.ILog heatLogger
L_008c: callvirt Boolean get_IsLogEnabled()
L_0091: brfalse Label3
L_0096: ldsfld HBS.Logging.ILog heatLogger
L_009b: ldstr "Mech {0} receives {1} point{2} structure damage to each location from excessive heat"
L_00a0: ldarg.0
L_00a1: call System.String get_DisplayName()
L_00a6: ldloc.0
L_00a7: box System.Single
L_00ac: ldloc.0
L_00ad: ldc.r4 1.01
L_00b2: bgt Label4
L_00b7: ldstr ""
L_00bc: br Label5
L_00c1: Label4
L_00c1: ldstr "s"
L_00c6: Label5
L_00c6: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_00cb: callvirt Void Log(System.Object)
L_00d0: Label3
L_00d0: ldloca.s 1 (BattleTech.WeaponHitInfo)
L_00d2: ldarg.1
L_00d3: ldc.i4.m1
L_00d4: ldc.i4.m1
L_00d5: ldc.i4.m1
L_00d6: ldstr ""
L_00db: ldstr ""
L_00e0: ldc.i4.m1
L_00e1: ldnull
L_00e2: ldnull
L_00e3: ldnull
L_00e4: ldnull
L_00e5: ldnull
L_00e6: ldnull
L_00e7: ldnull
L_00e8: ldc.i4.1
L_00e9: newarr BattleTech.AttackDirection
L_00ee: dup
L_00ef: ldc.i4.0
L_00f0: ldc.i4.1
L_00f1: stelem.i4
L_00f2: ldnull
L_00f3: ldnull
L_00f4: ldnull
L_00f5: call Void .ctor(Int32, Int32, Int32, Int32, String, String, Int32, Single[], Single[], Single[], Boolean[], Int32[], Int32[], AttackImpactQuality[], AttackDirection[], Vector3[], String[], Int32[])
L_00fa: ldarg.0
L_00fb: ldc.i4.2
L_00fc: ldloc.1
L_00fd: ldloc.0
L_00fe: ldarg.2
L_00ff: ldarg.0
L_0100: call System.String get_GUID()
L_0105: call Boolean op_Equality(System.String, System.String)
L_010a: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_010f: ldarg.0
L_0110: ldc.i4.4
L_0111: ldloc.1
L_0112: ldloc.0
L_0113: ldarg.2
L_0114: ldarg.0
L_0115: call System.String get_GUID()
L_011a: call Boolean op_Equality(System.String, System.String)
L_011f: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0124: ldarg.0
L_0125: ldc.i4.8
L_0126: ldloc.1
L_0127: ldloc.0
L_0128: ldarg.2
L_0129: ldarg.0
L_012a: call System.String get_GUID()
L_012f: call Boolean op_Equality(System.String, System.String)
L_0134: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0139: ldarg.0
L_013a: ldc.i4.s 16
L_013c: ldloc.1
L_013d: ldloc.0
L_013e: ldarg.2
L_013f: ldarg.0
L_0140: call System.String get_GUID()
L_0145: call Boolean op_Equality(System.String, System.String)
L_014a: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_014f: ldarg.0
L_0150: ldc.i4.s 32
L_0152: ldloc.1
L_0153: ldloc.0
L_0154: ldarg.2
L_0155: ldarg.0
L_0156: call System.String get_GUID()
L_015b: call Boolean op_Equality(System.String, System.String)
L_0160: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0165: ldarg.0
L_0166: ldc.i4.s 64
L_0168: ldloc.1
L_0169: ldloc.0
L_016a: ldarg.2
L_016b: ldarg.0
L_016c: call System.String get_GUID()
L_0171: call Boolean op_Equality(System.String, System.String)
L_0176: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_017b: ldarg.0
L_017c: ldc.i4 128
L_0181: ldloc.1
L_0182: ldloc.0
L_0183: ldarg.2
L_0184: ldarg.0
L_0185: call System.String get_GUID()
L_018a: call Boolean op_Equality(System.String, System.String)
L_018f: call Void ApplyHeatDamage(BattleTech.ChassisLocations, BattleTech.WeaponHitInfo, Single, Boolean)
L_0194: br Label6
L_0199: Label2
L_0199: ldsfld HBS.Logging.ILog heatLogger
L_019e: ldstr "Mech {0} avoids structure damage from excessive heat"
L_01a3: ldarg.0
L_01a4: call System.String get_DisplayName()
L_01a9: call System.String Format(System.String, System.Object)
L_01ae: callvirt Void Log(System.Object)
L_01b3: Label6
L_01b3: ldarg.0
L_01b4: ldarg.2
L_01b5: callvirt Void HandleDeath(System.String)
L_01ba: ldarg.0
L_01bb: callvirt Boolean get_IsDead()
L_01c0: brtrue Label7
L_01c5: ldarg.0
L_01c6: ldarg.1
L_01c7: ldarg.2
L_01c8: call UnityEngine.Vector2 get_one()
L_01cd: ldnull
L_01ce: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_01d3: Label1
L_01d3: Label7
L_01d3: ret
DONE

### Patch BattleTech.Mech, Void InitEffectStats()
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Mech)
L_0006: ldarg.0
L_0007: call Void Prefix(BattleTech.Mech)
L_000c: ldarg.0
L_000d: call Void Prefix(BattleTech.Mech)
L_0012: ldarg.0
L_0013: call Void InitEffectStats()
L_0018: ldarg.0
L_0019: call Void Postfix(BattleTech.Mech)
L_001e: ret
DONE

### Patch BattleTech.MechShutdownSequence, Void CheckForHeatDamage()
L_0000: Local var 0: BattleTech.DamageType
L_0000: Local var 1: BattleTech.AbstractActor
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechShutdownSequence)
L_0006: ldarg.0
L_0007: call BattleTech.CombatGameState get_Combat()
L_000c: callvirt BattleTech.CombatGameConstants get_Constants()
L_0011: call BattleTech.HeatConstantsDef OverrideHeat(BattleTech.CombatGameConstants)
L_0016: ldfld System.Boolean ShutdownCausesInjury
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.String instigatorGUID
L_0026: ldarg.0
L_0027: call BattleTech.Mech get_OwningMech()
L_002c: callvirt System.String get_GUID()
L_0031: call Boolean op_Equality(System.String, System.String)
L_0036: brtrue Label2
L_003b: ldc.i4.7
L_003c: br Label3
L_0041: Label2
L_0041: ldc.i4.8
L_0042: Label3
L_0042: stloc.0
L_0043: ldarg.0
L_0044: call BattleTech.CombatGameState get_Combat()
L_0049: ldarg.0
L_004a: ldfld System.String instigatorGUID
L_004f: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
L_0054: stloc.1
L_0055: ldarg.0
L_0056: call BattleTech.Mech get_OwningMech()
L_005b: callvirt BattleTech.Pilot get_pilot()
L_0060: ldarg.0
L_0061: call Int32 get_SequenceGUID()
L_0066: stloc.2
L_0067: ldloca.s 2 (System.Int32)
L_0069: call System.String ToString()
L_006e: ldarg.0
L_006f: call Int32 get_RootSequenceGUID()
L_0074: ldc.i4.1
L_0075: ldloc.0
L_0076: ldnull
L_0077: ldloc.1
L_0078: callvirt Void InjurePilot(System.String, Int32, Int32, BattleTech.DamageType, BattleTech.Weapon, BattleTech.AbstractActor)
L_007d: ldarg.0
L_007e: call BattleTech.Mech get_OwningMech()
L_0083: callvirt BattleTech.Pilot get_pilot()
L_0088: callvirt Boolean get_IsIncapacitated()
L_008d: brtrue Label4
L_0092: ldc.i4.0
L_0093: ldarg.0
L_0094: call BattleTech.Mech get_OwningMech()
L_0099: call Void SetPilotVOSwitch[AudioSwitch_dialog_dark_light](AudioSwitch_dialog_dark_light, BattleTech.AbstractActor)
L_009e: ldc.i4.s 87
L_00a0: ldarg.0
L_00a1: call BattleTech.Mech get_OwningMech()
L_00a6: ldnull
L_00a7: ldnull
L_00a8: ldc.i4.1
L_00a9: call Boolean PlayPilotVO(BattleTech.VOEvents, BattleTech.AbstractActor, EventCallback, System.Object, Boolean)
L_00ae: pop
L_00af: ldarg.0
L_00b0: call BattleTech.Mech get_OwningMech()
L_00b5: callvirt BattleTech.Team get_team()
L_00ba: callvirt Boolean get_LocalPlayerControlsTeam()
L_00bf: brfalse Label5
L_00c4: ldstr "audioeventdef_musictriggers_combat"
L_00c9: ldstr "friendly_warrior_injured"
L_00ce: ldnull
L_00cf: ldnull
L_00d0: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_00d5: pop
L_00d6: Label1
L_00d6: Label4
L_00d6: Label5
L_00d6: call Void Postfix()
L_00db: ret
DONE

### Harmony id=MechEngineer.Features.NewSaveFolder, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.NewSaveFolder.NewSaveFolderSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.Save.CachedSettings, Void ClearCachedSettings()
L_0000: ldstr "CachedSettings"
L_0005: call Void DeleteKey(System.String)
L_000a: ret
DONE

### Patch BattleTech.Save.CachedSettings, BattleTech.Save.UserSettings get_Settings()
L_0000: Local var 0: System.String
L_0000: Local var 1: BattleTech.Save.CloudUserSettings
L_0000: Local var 2: BattleTech.Save.LocalUserSettings
L_0000: Local var 3: BattleTech.Save.UserSettings
L_0000: ldstr "CachedSettings"
L_0005: call Boolean HasKey(System.String)
L_000a: brfalse Label1
L_000f: ldstr "CachedSettings"
L_0014: ldstr ""
L_0019: call System.String GetString(System.String, System.String)
L_001e: stloc.0
L_001f: ldloc.0
L_0020: call Boolean IsNullOrEmpty(System.String)
L_0025: brtrue Label2
.try
{
	L_002a: ldloc.0
	L_002b: ldc.i4.1
	L_002c: newarr System.String
	L_0031: dup
	L_0032: ldc.i4.0
	L_0033: ldstr "<LOCAL>"
	L_0038: stelem.ref
	L_0039: ldc.i4.1
	L_003a: callvirt System.String[] Split(System.String[], System.StringSplitOptions)
	L_003f: dup
	L_0040: ldc.i4.0
	L_0041: ldelem.ref
	L_0042: call Byte[] FromBase64String(System.String)
	L_0047: ldc.i4.6
	L_0048: ldc.i4.2
	L_0049: ldnull
	L_004a: call BattleTech.Save.CloudUserSettings Deserialize[CloudUserSettings](Byte[], BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation, System.Object)
	L_004f: stloc.1
	L_0050: ldc.i4.1
	L_0051: ldelem.ref
	L_0052: call Byte[] FromBase64String(System.String)
	L_0057: ldc.i4.6
	L_0058: ldc.i4.2
	L_0059: ldnull
	L_005a: call BattleTech.Save.LocalUserSettings Deserialize[LocalUserSettings](Byte[], BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation, System.Object)
	L_005f: stloc.2
	L_0060: newobj Void .ctor()
	L_0065: dup
	L_0066: ldloc.1
	L_0067: callvirt Void set_CloudSettings(BattleTech.Save.CloudUserSettings)
	L_006c: dup
	L_006d: ldloc.2
	L_006e: callvirt Void set_LocalSettings(BattleTech.Save.LocalUserSettings)
	L_0073: stloc.3
	L_0074: leave Label3
	L_0079: leave (autogenerated)
} // end try
.catch System.Object
{
	L_007e: pop
	L_007f: ldstr "CachedSettings"
	L_0084: call Void DeleteKey(System.String)
	L_0089: leave Label4
	L_008e: leave (autogenerated)
} // end handler
L_0093: Label1
L_0093: Label2
L_0093: Label4
L_0093: newobj Void .ctor()
L_0098: dup
L_0099: call Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_009e: br Label6
L_00a3: Label3
L_00a3: ldloc.3
L_00a4: Label6
L_00a4: ret
DONE

### Patch BattleTech.Save.CachedSettings, Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_0000: Local var 0: System.String
L_0000: Local var 1: System.String
L_0000: Local var 2: System.String
L_0000: Local var 3: System.Exception
.try
{
	L_0000: ldarg.0
	L_0001: callvirt BattleTech.Save.LocalUserSettings get_LocalSettings()
	L_0006: ldc.i4.6
	L_0007: ldc.i4.2
	L_0008: call Byte[] Serialize[LocalUserSettings](BattleTech.Save.LocalUserSettings, BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation)
	L_000d: call System.String ToBase64String(Byte[])
	L_0012: stloc.0
	L_0013: ldarg.0
	L_0014: callvirt BattleTech.Save.CloudUserSettings get_CloudSettings()
	L_0019: ldc.i4.6
	L_001a: ldc.i4.2
	L_001b: call Byte[] Serialize[CloudUserSettings](BattleTech.Save.CloudUserSettings, BattleTech.Serialization.SerializationTarget, BattleTech.Serialization.TargetMaskOperation)
	L_0020: call System.String ToBase64String(Byte[])
	L_0025: stloc.1
	L_0026: ldstr "{0}<LOCAL>{1}"
	L_002b: ldloc.1
	L_002c: ldloc.0
	L_002d: call System.String Format(System.String, System.Object, System.Object)
	L_0032: stloc.2
	L_0033: ldstr "CachedSettings"
	L_0038: ldloc.2
	L_0039: call Void SetString(System.String, System.String)
	L_003e: leave Label1
	L_0043: leave (autogenerated)
} // end try
.catch System.Exception
{
	L_0048: stloc.3
	L_0049: ldsfld HBS.Logging.ILog logger
	L_004e: ldstr "Could not set LocalSettings to PlayerPrefs "
	L_0053: ldloc.3
	L_0054: callvirt System.String get_Message()
	L_0059: call System.String Concat(System.String, System.String)
	L_005e: callvirt Void LogError(System.Object)
	L_0063: leave Label2
	L_0068: leave (autogenerated)
} // end handler
L_006d: Label1
L_006d: Label2
L_006d: ret
DONE

### Patch BattleTech.Save.CachedSettings, Void set_Settings(BattleTech.Save.UserSettings)
L_0000: ldarg.0
L_0001: call Void SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings)
L_0006: ret
DONE

### Patch BattleTech.Save.Core.WriteLocation, Void .ctor(String, Boolean)
L_0000: ldarga 1
L_0006: ldarga 2
L_000c: call Void Prefix(System.String ByRef, Boolean ByRef)
L_0011: ldarg.0
L_0012: ldc.i4.2
L_0013: newarr System.Char
L_0018: dup
L_0019: ldc.i4.0
L_001a: ldc.i4.s 92
L_001c: stelem.i2
L_001d: dup
L_001e: ldc.i4.1
L_001f: ldc.i4.s 47
L_0021: stelem.i2
L_0022: stfld System.Char[] trimCharacters
L_0027: ldarg.0
L_0028: call Void .ctor()
L_002d: ldarg.0
L_002e: ldarg.1
L_002f: stfld System.String rootPath
L_0034: ldarg.0
L_0035: ldarg.2
L_0036: stfld System.Boolean usePlatform
L_003b: ldarg.2
L_003c: brtrue Label1
L_0041: ldarg.0
L_0042: newobj Void .ctor()
L_0047: stfld BattleTech.Save.Core.FileOperations fileOperations
L_004c: br Label2
L_0051: Label1
L_0051: ldarg.0
L_0052: newobj Void .ctor()
L_0057: stfld BattleTech.Save.Core.FileOperations fileOperations
L_005c: Label2
L_005c: ret
DONE

### Harmony id=MechEngineer.Features.MechLabSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.MechLabSlots.MechLabSlotsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.UI.MechLabItemSlotElement, Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabItemSlotElement)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call BattleTech.UI.IMechLabDropTarget get_DropParent()
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: callvirt Void OnItemHoverEnter(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0018: Label0
L_0018: ret
DONE

### Patch BattleTech.UI.MechLabItemSlotElement, Void OnPointerExit(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabItemSlotElement)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call BattleTech.UI.IMechLabDropTarget get_DropParent()
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: callvirt Void OnItemHoverExit(BattleTech.UI.IMechLabDraggableItem, UnityEngine.EventSystems.PointerEventData)
L_0018: Label0
L_0018: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 1 (System.Boolean)
L_0006: ldarg.1
L_0007: ldarg.0
L_0008: callvirt Void set_DropParent(BattleTech.UI.IMechLabDropTarget)
L_000d: ldarg.0
L_000e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0013: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0018: ldarg.1
L_0019: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_001e: callvirt Void Add(BattleTech.MechComponentRef)
L_0023: ldarg.1
L_0024: isinst BattleTech.UI.MechLabItemSlotElement
L_0029: stloc.0
L_002a: ldloc.0
L_002b: ldfld UnityEngine.CanvasGroup thisCanvasGroup
L_0030: ldc.i4.1
L_0031: callvirt Void set_blocksRaycasts(Boolean)
L_0036: ldarg.0
L_0037: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_003c: ldloc.0
L_003d: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: ldfld System.Int32 usedSlots
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_004f: callvirt BattleTech.MechComponentDef get_Def()
L_0054: callvirt Int32 get_InventorySize()
L_0059: add
L_005a: stfld System.Int32 usedSlots
L_005f: ldloc.0
L_0060: callvirt UnityEngine.GameObject get_gameObject()
L_0065: callvirt UnityEngine.Transform get_transform()
L_006a: ldarg.0
L_006b: ldfld UnityEngine.Transform inventoryParent
L_0070: ldc.i4.0
L_0071: call Void SetParent(UnityEngine.Transform, UnityEngine.Transform, Boolean)
L_0076: ldloc.0
L_0077: callvirt UnityEngine.GameObject get_gameObject()
L_007c: callvirt UnityEngine.Transform get_transform()
L_0081: call UnityEngine.Vector3 get_one()
L_0086: callvirt Void set_localScale(UnityEngine.Vector3)
L_008b: ldarg.0
L_008c: ldloc.0
L_008d: ldc.i4.0
L_008e: call Void RefreshMechComponentData(BattleTech.UI.MechLabItemSlotElement, Boolean)
L_0093: ldarg.0
L_0094: ldfld BattleTech.UI.MechLabPanel mechLab
L_0099: callvirt Void FlagAsModified()
L_009e: ldc.i4.1
L_009f: stloc 1 (System.Boolean)
L_00a0: ldarg 1
L_00a6: ldarg.0
L_00a7: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00ac: call Void Postfix(BattleTech.UI.IMechLabDraggableItem, System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_00b1: ldloc 1 (System.Boolean)
L_00b2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, UnityEngine.EventSystems.PointerEventData)
L_000c: brfalse Label0
L_0011: ldarg.0
L_0012: ldarg.1
L_0013: ldc.i4.m1
L_0014: call Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0019: Label0
L_0019: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void SetData(BattleTech.LocationLoadoutDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.UI.MechLabItemSlotElement
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.LocationLoadoutDef loadout
L_0007: ldarg.0
L_0008: call Void ClearInventory()
L_000d: ldarg.0
L_000e: ldarg.0
L_000f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0014: ldfld BattleTech.MechDef activeMechDef
L_0019: callvirt BattleTech.ChassisDef get_Chassis()
L_001e: ldarg.1
L_001f: ldfld BattleTech.ChassisLocations Location
L_0024: callvirt BattleTech.LocationDef GetLocationDef(BattleTech.ChassisLocations)
L_0029: stfld BattleTech.LocationDef chassisLocationDef
L_002e: ldarg.0
L_002f: ldarg.1
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: ldc.i4.8
L_0036: beq Label1
L_003b: ldarg.1
L_003c: ldfld BattleTech.ChassisLocations Location
L_0041: ldc.i4.4
L_0042: beq Label2
L_0047: ldarg.1
L_0048: ldfld BattleTech.ChassisLocations Location
L_004d: ldc.i4.s 16
L_004f: ceq
L_0051: br Label3
L_0056: Label1
L_0056: Label2
L_0056: ldc.i4.1
L_0057: Label3
L_0057: stfld System.Boolean useRearArmor
L_005c: ldarg.0
L_005d: ldarg.0
L_005e: ldflda BattleTech.LocationDef chassisLocationDef
L_0063: ldfld System.Int32 InventorySlots
L_0068: stfld System.Int32 maxSlots
L_006d: ldarg.0
L_006e: ldarg.0
L_006f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0074: ldfld BattleTech.MechDef originalMechDef
L_0079: ldarg.1
L_007a: ldfld BattleTech.ChassisLocations Location
L_007f: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0084: ldfld System.Single AssignedArmor
L_0089: stfld System.Single originalArmor
L_008e: ldarg.0
L_008f: ldarg.0
L_0090: ldfld System.Single originalArmor
L_0095: stfld System.Single currentArmor
L_009a: ldarg.0
L_009b: ldarg.0
L_009c: ldflda BattleTech.LocationDef chassisLocationDef
L_00a1: ldfld System.Single MaxArmor
L_00a6: stfld System.Single maxArmor
L_00ab: ldarg.0
L_00ac: ldc.r4 0
L_00b1: stfld System.Single maxRearArmor
L_00b6: ldarg.0
L_00b7: ldc.r4 0
L_00bc: stfld System.Single originalRearArmor
L_00c1: ldarg.0
L_00c2: ldc.r4 0
L_00c7: stfld System.Single currentRearArmor
L_00cc: ldarg.0
L_00cd: ldfld System.Boolean useRearArmor
L_00d2: brfalse Label4
L_00d7: ldarg.0
L_00d8: ldarg.0
L_00d9: ldfld BattleTech.UI.MechLabPanel mechLab
L_00de: ldfld BattleTech.MechDef originalMechDef
L_00e3: ldarg.1
L_00e4: ldfld BattleTech.ChassisLocations Location
L_00e9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ee: ldfld System.Single AssignedRearArmor
L_00f3: stfld System.Single originalRearArmor
L_00f8: ldarg.0
L_00f9: ldarg.0
L_00fa: ldfld System.Single originalRearArmor
L_00ff: stfld System.Single currentRearArmor
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: ldflda BattleTech.LocationDef chassisLocationDef
L_010b: ldfld System.Single MaxRearArmor
L_0110: stfld System.Single maxRearArmor
L_0115: Label4
L_0115: ldarg.0
L_0116: ldc.i4.0
L_0117: stfld System.Int32 usedSlots
L_011c: ldarg.0
L_011d: ldc.i4.0
L_011e: stfld System.Int32 currentBallisticCount
L_0123: ldarg.0
L_0124: ldc.i4.0
L_0125: stfld System.Int32 currentEnergyCount
L_012a: ldarg.0
L_012b: ldc.i4.0
L_012c: stfld System.Int32 currentMissileCount
L_0131: ldarg.0
L_0132: ldc.i4.0
L_0133: stfld System.Int32 currentSmallCount
L_0138: ldarg.0
L_0139: ldc.i4.0
L_013a: stfld System.Int32 totalBallisticHardpoints
L_013f: ldarg.0
L_0140: ldc.i4.0
L_0141: stfld System.Int32 totalEnergyHardpoints
L_0146: ldarg.0
L_0147: ldc.i4.0
L_0148: stfld System.Int32 totalMissileHardpoints
L_014d: ldarg.0
L_014e: ldc.i4.0
L_014f: stfld System.Int32 totalSmallHardpoints
L_0154: ldarg.0
L_0155: ldc.i4.0
L_0156: stfld System.Int32 currentJumpjetCount
L_015b: ldarg.0
L_015c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0161: ldfld BattleTech.MechDef activeMechDef
L_0166: ldarg.1
L_0167: ldfld BattleTech.ChassisLocations Location
L_016c: ldarg.0
L_016d: ldflda System.Int32 totalBallisticHardpoints
L_0172: ldarg.0
L_0173: ldflda System.Int32 totalEnergyHardpoints
L_0178: ldarg.0
L_0179: ldflda System.Int32 totalMissileHardpoints
L_017e: ldarg.0
L_017f: ldflda System.Int32 totalSmallHardpoints
L_0184: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0189: ldc.i4.0
L_018a: stloc.0
L_018b: br Label5
L_0190: Label8
L_0190: ldarg.0
L_0191: ldfld BattleTech.UI.MechLabPanel mechLab
L_0196: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_019b: ldloc.0
L_019c: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01a1: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01a6: ldarg.1
L_01a7: ldfld BattleTech.ChassisLocations Location
L_01ac: bne.un Label6
L_01b1: ldarg.0
L_01b2: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.UI.MechLabPanel mechLab
L_01bd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_01c2: ldloc.0
L_01c3: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_01c8: ldc.i4.0
L_01c9: ldarg.1
L_01ca: ldfld BattleTech.ChassisLocations Location
L_01cf: ldarg.0
L_01d0: ldnull
L_01d1: callvirt BattleTech.UI.MechLabItemSlotElement CreateMechComponentItem(BattleTech.MechComponentRef, Boolean, BattleTech.ChassisLocations, BattleTech.UI.IMechLabDropTarget, BattleTech.UI.InventoryItemElement_NotListView)
L_01d6: stloc.1
L_01d7: ldloc.1
L_01d8: ldnull
L_01d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_01de: brfalse Label7
L_01e3: ldarg.0
L_01e4: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_01e9: ldloc.1
L_01ea: callvirt Void Add(BattleTech.UI.MechLabItemSlotElement)
L_01ef: ldarg.0
L_01f0: ldarg.0
L_01f1: ldfld System.Int32 usedSlots
L_01f6: ldarg.0
L_01f7: ldfld BattleTech.UI.MechLabPanel mechLab
L_01fc: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0201: ldloc.0
L_0202: callvirt BattleTech.MechComponentRef get_Item(Int32)
L_0207: callvirt BattleTech.MechComponentDef get_Def()
L_020c: callvirt Int32 get_InventorySize()
L_0211: add
L_0212: stfld System.Int32 usedSlots
L_0217: ldloc.1
L_0218: callvirt UnityEngine.GameObject get_gameObject()
L_021d: callvirt UnityEngine.Transform get_transform()
L_0222: ldarg.0
L_0223: ldfld UnityEngine.Transform inventoryParent
L_0228: ldc.i4.0
L_0229: call Void SetParent(UnityEngine.Transform, UnityEngine.Transform, Boolean)
L_022e: ldloc.1
L_022f: callvirt UnityEngine.GameObject get_gameObject()
L_0234: callvirt UnityEngine.Transform get_transform()
L_0239: call UnityEngine.Vector3 get_one()
L_023e: callvirt Void set_localScale(UnityEngine.Vector3)
L_0243: Label6
L_0243: Label7
L_0243: ldloc.0
L_0244: ldc.i4.1
L_0245: add
L_0246: stloc.0
L_0247: Label5
L_0247: ldloc.0
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0253: callvirt Int32 get_Count()
L_0258: blt Label8
L_025d: ldarg.0
L_025e: call Void RefreshHardpointData()
L_0263: ldarg.0
L_0264: call Void RefreshArmor()
L_0269: ldarg.0
L_026a: ldfld BattleTech.UI.TMProWrapper.LocalizableText structureText
L_026f: ldstr "{0} / {1}"
L_0274: ldc.i4.2
L_0275: newarr System.Object
L_027a: dup
L_027b: ldc.i4.0
L_027c: ldarg.1
L_027d: ldfld System.Single CurrentInternalStructure
L_0282: conv.i4
L_0283: box System.Int32
L_0288: stelem.ref
L_0289: dup
L_028a: ldc.i4.1
L_028b: ldarg.0
L_028c: ldflda BattleTech.LocationDef chassisLocationDef
L_0291: ldfld System.Single InternalStructure
L_0296: conv.i4
L_0297: box System.Int32
L_029c: stelem.ref
L_029d: callvirt Void SetText(System.String, System.Object[])
L_02a2: ldarg.1
L_02a3: ldfld System.Single CurrentInternalStructure
L_02a8: ldc.r4 0
L_02ad: bgt.un Label9
L_02b2: ldarg.0
L_02b3: ldc.i4.1
L_02b4: stfld System.Boolean needsRepair
L_02b9: ldarg.0
L_02ba: ldfld UnityEngine.GameObject destroyedOverlay
L_02bf: ldc.i4.1
L_02c0: callvirt Void SetActive(Boolean)
L_02c5: ldarg.0
L_02c6: ldfld UnityEngine.GameObject damagedOverlay
L_02cb: ldc.i4.0
L_02cc: callvirt Void SetActive(Boolean)
L_02d1: br Label11
L_02d6: Label9
L_02d6: ldarg.1
L_02d7: ldfld System.Single CurrentInternalStructure
L_02dc: ldarg.0
L_02dd: ldflda BattleTech.LocationDef chassisLocationDef
L_02e2: ldfld System.Single InternalStructure
L_02e7: bge.un Label10
L_02ec: ldarg.0
L_02ed: ldc.i4.1
L_02ee: stfld System.Boolean needsRepair
L_02f3: ldarg.0
L_02f4: ldfld UnityEngine.GameObject destroyedOverlay
L_02f9: ldc.i4.0
L_02fa: callvirt Void SetActive(Boolean)
L_02ff: ldarg.0
L_0300: ldfld UnityEngine.GameObject damagedOverlay
L_0305: ldc.i4.1
L_0306: callvirt Void SetActive(Boolean)
L_030b: br Label12
L_0310: Label10
L_0310: ldarg.0
L_0311: ldc.i4.0
L_0312: stfld System.Boolean needsRepair
L_0317: ldarg.0
L_0318: ldfld UnityEngine.GameObject damagedOverlay
L_031d: ldc.i4.0
L_031e: callvirt Void SetActive(Boolean)
L_0323: ldarg.0
L_0324: ldfld UnityEngine.GameObject destroyedOverlay
L_0329: ldc.i4.0
L_032a: callvirt Void SetActive(Boolean)
L_032f: Label11
L_032f: Label12
L_032f: ldarg.0
L_0330: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0335: call Void Postfix(System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement])
L_033a: ldarg.0
L_033b: ldarg.0
L_033c: ldfld System.Int32 maxSlots
L_0341: ldarg.0
L_0342: ldfld BattleTech.LocationLoadoutDef loadout
L_0347: call Void Postfix(BattleTech.UI.MechLabLocationWidget, Int32, BattleTech.LocationLoadoutDef)
L_034c: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.WeaponCategory
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Void Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.MechComponentRef ByRef)
L_000c: ldarg.1
L_000d: brtrue Label1
L_0012: ldarg.0
L_0013: ldc.i4.0
L_0014: ldc.i4.6
L_0015: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_001a: br Label15
L_001f: Label1
L_001f: ldarg.1
L_0020: callvirt BattleTech.MechComponentDef get_Def()
L_0025: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_002a: ldarg.0
L_002b: ldfld BattleTech.LocationLoadoutDef loadout
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: and
L_0036: ldc.i4.0
L_0037: cgt.un
L_0039: stloc.0
L_003a: ldc.i4.1
L_003b: stloc.1
L_003c: ldarg.2
L_003d: brfalse Label2
L_0042: ldarg.2
L_0043: callvirt BattleTech.WeaponCategory get_Category()
L_0048: stloc.2
L_0049: ldloc.2
L_004a: ldc.i4.1
L_004b: sub
L_004c: switch Labels3,4,5,6
L_0061: br Label7
L_0066: Label3
L_0066: ldarg.0
L_0067: ldfld System.Int32 totalBallisticHardpoints
L_006c: ldc.i4.0
L_006d: cgt
L_006f: stloc.1
L_0070: br Label8
L_0075: Label4
L_0075: ldarg.0
L_0076: ldfld System.Int32 totalEnergyHardpoints
L_007b: ldc.i4.0
L_007c: cgt
L_007e: stloc.1
L_007f: br Label9
L_0084: Label5
L_0084: ldarg.0
L_0085: ldfld System.Int32 totalMissileHardpoints
L_008a: ldc.i4.0
L_008b: cgt
L_008d: stloc.1
L_008e: br Label10
L_0093: Label6
L_0093: ldarg.0
L_0094: ldfld System.Int32 totalSmallHardpoints
L_0099: ldc.i4.0
L_009a: cgt
L_009c: stloc.1
L_009d: Label2
L_009d: Label7
L_009d: Label8
L_009d: Label9
L_009d: Label10
L_009d: ldarg.0
L_009e: ldloc.0
L_009f: ldloc.1
L_00a0: and
L_00a1: ldarg.3
L_00a2: brtrue Label11
L_00a7: ldarg.s 4
L_00a9: brtrue Label12
L_00ae: ldc.i4.s 29
L_00b0: br Label13
L_00b5: Label12
L_00b5: ldc.i4.6
L_00b6: br Label14
L_00bb: Label11
L_00bb: ldc.i4.8
L_00bc: Label13
L_00bc: Label14
L_00bc: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_00c1: Label15
L_00c1: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void InitWidgets()
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0006: ldarg.0
L_0007: callvirt Void Init(BattleTech.UI.MechLabPanel)
L_000c: ldarg.0
L_000d: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_0012: ldarg.0
L_0013: callvirt Void Init(BattleTech.UI.MechLabPanel)
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.MechLabDismountWidget dismountWidget
L_001e: ldarg.0
L_001f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0024: ldarg.0
L_0025: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_002a: ldarg.0
L_002b: ldarg.0
L_002c: ldfld BattleTech.Data.DataManager dataManager
L_0031: ldc.i4.1
L_0032: ldnull
L_0033: callvirt Void SetData(BattleTech.UI.IMechLabDropTarget, BattleTech.Data.DataManager, Boolean, System.Action)
L_0038: ldarg.0
L_0039: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_003e: ldarg.0
L_003f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_004a: ldarg.0
L_004b: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0056: ldarg.0
L_0057: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_005c: ldarg.0
L_005d: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0062: ldarg.0
L_0063: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0068: ldarg.0
L_0069: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_006e: ldarg.0
L_006f: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0074: ldarg.0
L_0075: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_007a: ldarg.0
L_007b: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0080: ldarg.0
L_0081: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0086: ldarg.0
L_0087: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_008c: ldarg.0
L_008d: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0092: ldarg.0
L_0093: callvirt Void Init(BattleTech.UI.IMechLabDropTarget)
L_0098: ldarg.0
L_0099: call BattleTech.UI.UIManager get_Instance()
L_009e: ldstr ""
L_00a3: ldc.i4.1
L_00a4: callvirt BattleTech.UI.SG_Shop_Screen CreateUIModule[SG_Shop_Screen](System.String, Boolean)
L_00a9: stfld BattleTech.UI.SG_Shop_Screen Shop
L_00ae: ldarg.0
L_00af: ldfld BattleTech.SimGameState sim
L_00b4: brfalse Label1
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00bf: ldarg.0
L_00c0: ldfld BattleTech.SimGameState sim
L_00c5: callvirt Void InitData(BattleTech.SimGameState)
L_00ca: ldarg.0
L_00cb: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00d0: ldc.i4.0
L_00d1: callvirt Void set_Visible(Boolean)
L_00d6: Label1
L_00d6: ldarg.0
L_00d7: ldfld BattleTech.UI.SG_Shop_Screen Shop
L_00dc: ldc.i4.0
L_00dd: callvirt Void set_Visible(Boolean)
L_00e2: ldarg.0
L_00e3: newobj Void .ctor()
L_00e8: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] PurchasedItemsFromStore
L_00ed: ldarg.0
L_00ee: newobj Void .ctor()
L_00f3: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] SoldItemsFromStore
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.SimGameState sim
L_00fe: brfalse Label2
L_0103: ldarg.0
L_0104: ldfld BattleTech.SimGameState sim
L_0109: callvirt BattleTech.StatCollection get_CompanyStats()
L_010e: ldstr "COMPANY_HasSeenTutorial_MechLab"
L_0113: callvirt Boolean GetValue[Boolean](System.String)
L_0118: brfalse Label3
L_011d: Label2
L_011d: ldarg.0
L_011e: ldfld DG.Tweening.DOTweenAnimation helpButtonAnim
L_0123: callvirt Void DOKill()
L_0128: Label3
L_0128: ldarg.0
L_0129: ldfld BattleTech.SimGameState sim
L_012e: brfalse Label4
L_0133: ldarg.0
L_0134: ldfld BattleTech.SimGameState sim
L_0139: callvirt BattleTech.StatCollection get_CompanyStats()
L_013e: ldstr "COMPANY_HasSeenECMReview_MechLab"
L_0143: callvirt Boolean GetValue[Boolean](System.String)
L_0148: brfalse Label5
L_014d: Label4
L_014d: ldarg.0
L_014e: ldfld DG.Tweening.DOTweenAnimation ECMButtonAnim
L_0153: callvirt Void DOKill()
L_0158: Label5
L_0158: ldarg.0
L_0159: call Void Postfix(BattleTech.UI.MechLabPanel)
L_015e: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void LoadMech(BattleTech.MechDef)
L_0000: ldarg.0
L_0001: call Void ClearData()
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "MechLab LoadMech received null data!"
L_0016: callvirt Void Log(System.Object)
L_001b: br Label3
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: stfld BattleTech.MechDef originalMechDef
L_0027: ldarg.0
L_0028: ldfld BattleTech.MechDef originalMechDef
L_002d: ldarg.0
L_002e: ldfld BattleTech.Data.DataManager dataManager
L_0033: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0038: ldarg.0
L_0039: ldfld BattleTech.MechDef originalMechDef
L_003e: callvirt Void Refresh()
L_0043: ldarg.1
L_0044: ldarg.0
L_0045: ldfld BattleTech.Data.DataManager dataManager
L_004a: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004f: ldarg.0
L_0050: ldarg.1
L_0051: ldnull
L_0052: ldc.i4.1
L_0053: newobj Void .ctor(MechDef, String, Boolean)
L_0058: stfld BattleTech.MechDef activeMechDef
L_005d: ldarg.0
L_005e: ldfld BattleTech.MechDef activeMechDef
L_0063: callvirt Void Refresh()
L_0068: ldarg.0
L_0069: ldarg.0
L_006a: ldfld BattleTech.MechDef activeMechDef
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: newobj Void .ctor(IEnumerable`1)
L_0079: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_007e: ldarg.0
L_007f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0084: ldarg.0
L_0085: ldfld BattleTech.MechDef activeMechDef
L_008a: ldc.i4.1
L_008b: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0090: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0095: ldarg.0
L_0096: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_009b: ldarg.0
L_009c: ldfld BattleTech.MechDef activeMechDef
L_00a1: ldc.i4.8
L_00a2: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00a7: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00ac: ldarg.0
L_00ad: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.MechDef activeMechDef
L_00b8: ldc.i4.4
L_00b9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00be: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00c9: ldarg.0
L_00ca: ldfld BattleTech.MechDef activeMechDef
L_00cf: ldc.i4.s 16
L_00d1: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00d6: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.MechDef activeMechDef
L_00e7: ldc.i4.2
L_00e8: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ed: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00f2: ldarg.0
L_00f3: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.MechDef activeMechDef
L_00fe: ldc.i4.s 32
L_0100: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0105: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_010a: ldarg.0
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldarg.0
L_0111: ldfld BattleTech.MechDef activeMechDef
L_0116: ldc.i4.s 64
L_0118: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_011d: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0122: ldarg.0
L_0123: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0128: ldarg.0
L_0129: ldfld BattleTech.MechDef activeMechDef
L_012e: ldc.i4 128
L_0133: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0138: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0143: ldarg.0
L_0144: ldfld BattleTech.MechDef activeMechDef
L_0149: callvirt Void SetData(BattleTech.MechDef)
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0154: ldarg.0
L_0155: ldfld BattleTech.MechDef activeMechDef
L_015a: callvirt BattleTech.ChassisDef get_Chassis()
L_015f: callvirt Single get_Tonnage()
L_0164: callvirt Void RefreshJumpJetOptions(Single)
L_0169: ldarg.0
L_016a: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechDef originalMechDef
L_0175: callvirt Void SetData(BattleTech.MechDef)
L_017a: ldarg.0
L_017b: ldc.i4.0
L_017c: call Void set_Modified(Boolean)
L_0181: ldarg.0
L_0182: ldfld UnityEngine.GameObject modifiedIcon
L_0187: ldarg.0
L_0188: call Boolean get_Modified()
L_018d: callvirt Void SetActive(Boolean)
L_0192: ldarg.0
L_0193: ldc.i4.1
L_0194: call Void set_Initialized(Boolean)
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_019f: ldarg.0
L_01a0: call Boolean get_Initialized()
L_01a5: callvirt Void ToggleListVisible(Boolean)
L_01aa: ldarg.0
L_01ab: call Boolean get_IsSimGame()
L_01b0: brfalse Label2
L_01b5: ldarg.0
L_01b6: call Void CreateBaseWorkOrder()
L_01bb: Label2
L_01bb: ldarg.0
L_01bc: ldc.i4.1
L_01bd: call Boolean ValidateLoadout(Boolean)
L_01c2: pop
L_01c3: ldarg.0
L_01c4: call Void RefreshInventorySelectability()
L_01c9: Label3
L_01c9: ldarg.0
L_01ca: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01cf: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem)
L_0000: Local var 0: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 1: BattleTech.MechComponentRef
L_0000: Local var 2: BattleTech.WeaponDef
L_0000: Local var 3: System.Boolean
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.IMechLabDraggableItem)
L_000c: ldarg.1
L_000d: brtrue Label1
L_0012: ldarg.0
L_0013: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0018: ldc.i4.0
L_0019: callvirt Void ShowHighlightFrame(Boolean)
L_001e: ldarg.0
L_001f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0024: ldc.i4.0
L_0025: ldc.i4.6
L_0026: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0031: ldc.i4.0
L_0032: ldc.i4.6
L_0033: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0038: ldarg.0
L_0039: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003e: ldc.i4.0
L_003f: ldc.i4.6
L_0040: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_004b: ldc.i4.0
L_004c: ldc.i4.6
L_004d: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0052: ldarg.0
L_0053: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0058: ldc.i4.0
L_0059: ldc.i4.6
L_005a: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_005f: ldarg.0
L_0060: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0065: ldc.i4.0
L_0066: ldc.i4.6
L_0067: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_006c: ldarg.0
L_006d: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0072: ldc.i4.0
L_0073: ldc.i4.6
L_0074: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0079: ldarg.0
L_007a: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_007f: ldc.i4.0
L_0080: ldc.i4.6
L_0081: callvirt Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_0086: br Label6
L_008b: Label1
L_008b: ldarg.0
L_008c: call Boolean get_IsSimGame()
L_0091: pop
L_0092: ldarg.1
L_0093: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0098: brtrue Label2
L_009d: br Label7
L_00a2: Label2
L_00a2: ldarg.1
L_00a3: isinst BattleTech.UI.MechLabItemSlotElement
L_00a8: stloc.0
L_00a9: ldarg.1
L_00aa: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00af: stloc.1
L_00b0: ldloc.1
L_00b1: callvirt BattleTech.MechComponentDef get_Def()
L_00b6: isinst BattleTech.WeaponDef
L_00bb: stloc.2
L_00bc: ldc.i4.0
L_00bd: stloc.3
L_00be: ldloc.0
L_00bf: ldnull
L_00c0: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c5: brfalse Label3
L_00ca: ldarg.0
L_00cb: call Boolean get_IsSimGame()
L_00d0: brfalse Label4
L_00d5: ldloc.0
L_00d6: callvirt BattleTech.UI.IMechLabDropTarget get_OriginalDropParent()
L_00db: ldarg.0
L_00dc: callvirt Boolean Equals(System.Object)
L_00e1: br Label5
L_00e6: Label4
L_00e6: ldc.i4.0
L_00e7: Label5
L_00e7: stloc.3
L_00e8: Label3
L_00e8: ldarg.0
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ee: ldarg.1
L_00ef: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00f4: ldloc.2
L_00f5: ldloc.3
L_00f6: ldarg.0
L_00f7: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00fc: ldloc.1
L_00fd: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0102: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0107: ldarg.0
L_0108: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_010d: ldloc.1
L_010e: ldloc.2
L_010f: ldloc.3
L_0110: ldarg.0
L_0111: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0116: ldloc.1
L_0117: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_011c: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0121: ldarg.0
L_0122: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0127: ldloc.1
L_0128: ldloc.2
L_0129: ldloc.3
L_012a: ldarg.0
L_012b: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0130: ldloc.1
L_0131: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0136: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_013b: ldarg.0
L_013c: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0141: ldloc.1
L_0142: ldloc.2
L_0143: ldloc.3
L_0144: ldarg.0
L_0145: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_014a: ldloc.1
L_014b: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0150: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0155: ldarg.0
L_0156: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_015b: ldloc.1
L_015c: ldloc.2
L_015d: ldloc.3
L_015e: ldarg.0
L_015f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0164: ldloc.1
L_0165: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_016a: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_016f: ldarg.0
L_0170: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0175: ldloc.1
L_0176: ldloc.2
L_0177: ldloc.3
L_0178: ldarg.0
L_0179: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_017e: ldloc.1
L_017f: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0184: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0189: ldarg.0
L_018a: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_018f: ldloc.1
L_0190: ldloc.2
L_0191: ldloc.3
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0198: ldloc.1
L_0199: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_019e: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01a9: ldloc.1
L_01aa: ldloc.2
L_01ab: ldloc.3
L_01ac: ldarg.0
L_01ad: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01b2: ldloc.1
L_01b3: callvirt Boolean ValidateAdd(BattleTech.MechComponentRef)
L_01b8: callvirt Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_01bd: Label6
L_01bd: Label7
L_01bd: ret
DONE

### Harmony id=MechEngineer.Features.InvalidInventory, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.InvalidInventory.InvalidInventorySettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.33
### Patch BattleTech.MechValidationRules, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ValidateMechDef(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.WorkOrderEntry_MechLab)
L_0000: Local var 0: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: ldnull
L_0001: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0002: call System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] InitializeValidationResults()
L_0007: stloc.0
L_0008: ldarg.0
L_0009: switch Labels1,2,3,4
L_001e: br Label5
L_0023: Label1
L_0023: ldarg.1
L_0024: ldarg.2
L_0025: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0027: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_002c: ldarg.2
L_002d: ldarg.0
L_002e: ldarg.3
L_002f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0031: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0036: ldarg.1
L_0037: ldarg.2
L_0038: ldarg.0
L_0039: ldarg.3
L_003a: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_003c: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0041: ldarg.1
L_0042: ldarg.2
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0047: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_004c: ldarg.1
L_004d: ldarg.2
L_004e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0050: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0055: br Label6
L_005a: Label2
L_005a: ldarg.1
L_005b: ldarg.2
L_005c: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_005e: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0063: ldarg.1
L_0064: ldarg.2
L_0065: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0067: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_006c: ldarg.2
L_006d: ldarg.0
L_006e: ldarg.3
L_006f: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0071: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0076: ldarg.1
L_0077: ldarg.2
L_0078: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_007a: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_007f: ldarg.2
L_0080: ldarg.0
L_0081: ldarg.3
L_0082: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0084: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0089: ldarg.1
L_008a: ldarg.2
L_008b: ldarg.0
L_008c: ldarg.3
L_008d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_008f: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0094: ldarg.1
L_0095: ldarg.2
L_0096: ldarg.0
L_0097: ldarg.3
L_0098: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_009a: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_009f: ldarg.1
L_00a0: ldarg.2
L_00a1: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00a3: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00a8: br Label7
L_00ad: Label3
L_00ad: ldarg.1
L_00ae: ldarg.2
L_00af: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00b1: call Void ValidateMechChassis(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00b6: ldarg.1
L_00b7: ldarg.2
L_00b8: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ba: call Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00bf: ldarg.2
L_00c0: ldarg.0
L_00c1: ldarg.3
L_00c2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00c4: call Void ValidatePrototypeEquipment(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00c9: ldarg.1
L_00ca: ldarg.2
L_00cb: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00cd: call Void ValidateMechIsStockMechDef(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00d2: ldarg.1
L_00d3: ldarg.2
L_00d4: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00d6: call Void ValidateMechHasStockComponents(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00db: ldarg.1
L_00dc: ldarg.2
L_00dd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00df: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00e4: ldarg.2
L_00e5: ldarg.0
L_00e6: ldarg.3
L_00e7: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00e9: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00ee: ldarg.1
L_00ef: ldarg.2
L_00f0: ldarg.0
L_00f1: ldarg.3
L_00f2: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00f4: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_00f9: ldarg.1
L_00fa: ldarg.2
L_00fb: ldarg.0
L_00fc: ldarg.3
L_00fd: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_00ff: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0104: ldarg.1
L_0105: ldarg.2
L_0106: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0108: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_010d: br Label8
L_0112: Label4
L_0112: ldarg.1
L_0113: ldarg.2
L_0114: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0116: call Void ValidateMechTonnage(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_011b: ldarg.2
L_011c: ldarg.0
L_011d: ldarg.3
L_011e: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0120: call Void ValidateMechStructure(BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0125: ldarg.1
L_0126: ldarg.2
L_0127: ldarg.0
L_0128: ldarg.3
L_0129: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_012b: call Void ValidateMechPosessesWeapons(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0130: ldarg.1
L_0131: ldarg.2
L_0132: ldarg.0
L_0133: ldarg.3
L_0134: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0136: call Void ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager, BattleTech.MechDef, BattleTech.MechValidationLevel, BattleTech.WorkOrderEntry_MechLab, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_013b: ldarg.1
L_013c: ldarg.2
L_013d: ldloca.s 0 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_013f: call Void ValidateMechJumpjetCount(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0144: Label5
L_0144: Label6
L_0144: Label7
L_0144: Label8
L_0144: ldloc.0
L_0145: stloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0146: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0147: ldarg 0
L_014d: ldarg 2
L_0153: call Void Postfix(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], BattleTech.MechValidationLevel, BattleTech.MechDef)
L_0158: ldarg 0
L_015e: ldarg 1
L_0164: ldarg 2
L_016a: ldloca 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_016c: call Void Postfix(BattleTech.MechValidationLevel, BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0171: ldloc 1 (System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]])
L_0172: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Localize.Text GetCantSaveErrorString()
L_0000: Local var 0: Localize.Text
L_0000: Local var 1: System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1+Enumerator[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: Localize.Text
L_0000: ldnull
L_0001: stloc 4 (Localize.Text)
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.UI.MechLabPanel)
L_0009: newobj Void .ctor()
L_000e: stloc.0
L_000f: newobj Void .ctor()
L_0014: stloc.1
L_0015: ldarg.0
L_0016: call Boolean get_IsSimGame()
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0026: newobj Void .ctor()
L_002b: dup
L_002c: ldc.i4.0
L_002d: callvirt Void Add(BattleTech.MechValidationType)
L_0032: dup
L_0033: ldc.i4.2
L_0034: callvirt Void Add(BattleTech.MechValidationType)
L_0039: dup
L_003a: ldc.i4.8
L_003b: callvirt Void Add(BattleTech.MechValidationType)
L_0040: dup
L_0041: ldc.i4.s 9
L_0043: callvirt Void Add(BattleTech.MechValidationType)
L_0048: dup
L_0049: ldc.i4.7
L_004a: callvirt Void Add(BattleTech.MechValidationType)
L_004f: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0054: stloc.1
L_0055: br Label2
L_005a: Label1
L_005a: ldarg.0
L_005b: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0060: newobj Void .ctor()
L_0065: dup
L_0066: ldc.i4.0
L_0067: callvirt Void Add(BattleTech.MechValidationType)
L_006c: dup
L_006d: ldc.i4.2
L_006e: callvirt Void Add(BattleTech.MechValidationType)
L_0073: dup
L_0074: ldc.i4.4
L_0075: callvirt Void Add(BattleTech.MechValidationType)
L_007a: dup
L_007b: ldc.i4.8
L_007c: callvirt Void Add(BattleTech.MechValidationType)
L_0081: dup
L_0082: ldc.i4.s 9
L_0084: callvirt Void Add(BattleTech.MechValidationType)
L_0089: dup
L_008a: ldc.i4.7
L_008b: callvirt Void Add(BattleTech.MechValidationType)
L_0090: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_0095: stloc.1
L_0096: Label2
L_0096: ldloc.1
L_0097: callvirt Int32 get_Count()
L_009c: ldc.i4.0
L_009d: ble Label3
L_00a2: ldloc.0
L_00a3: ldstr "The following issues must be fixed before your 'Mech loadout can be saved:

"
L_00a8: call System.Object[] Empty[Object]()
L_00ad: callvirt Void Append(System.String, System.Object[])
L_00b2: Label3
L_00b2: ldloc.1
L_00b3: callvirt Enumerator GetEnumerator()
L_00b8: stloc.2
.try
{
	L_00b9: br Label4
	L_00be: Label5
	L_00be: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00c0: call Localize.Text get_Current()
	L_00c5: stloc.3
	L_00c6: ldloc.0
	L_00c7: ldloc.3
	L_00c8: callvirt Void AppendLine(Localize.Text)
	L_00cd: Label4
	L_00cd: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00cf: call Boolean MoveNext()
	L_00d4: brtrue Label5
	L_00d9: leave Label6
	L_00de: leave (autogenerated)
} // end try
.finally
{
	L_00e3: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00e5: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_00eb: callvirt Void Dispose()
	L_00f0: endfinally
	L_00f1: leave (autogenerated)
} // end handler
L_00f2: Label6
L_00f2: ldloc.0
L_00f3: stloc 4 (Localize.Text)
L_00f5: ldloc 4 (Localize.Text)
L_00f7: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Localize.Text GetNonFieldableErrorString()
L_0000: Local var 0: Localize.Text
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: Localize.Text
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: Localize.Text
L_0000: ldnull
L_0001: stloc 4 (Localize.Text)
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.UI.MechLabPanel)
L_0009: newobj Void .ctor()
L_000e: stloc.0
L_000f: newobj Void .ctor()
L_0014: pop
L_0015: ldarg.0
L_0016: call Boolean get_IsSimGame()
L_001b: brfalse Label1
L_0020: ldarg.0
L_0021: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_0026: newobj Void .ctor()
L_002b: dup
L_002c: ldc.i4.4
L_002d: callvirt Void Add(BattleTech.MechValidationType)
L_0032: dup
L_0033: ldc.i4.s 11
L_0035: callvirt Void Add(BattleTech.MechValidationType)
L_003a: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_003f: dup
L_0040: callvirt Int32 get_Count()
L_0045: ldc.i4.0
L_0046: ble Label2
L_004b: ldloc.0
L_004c: ldstr "You may confirm your changes, however the following issues must be fixed before this 'Mech can be fielded in battle:

"
L_0051: call System.Object[] Empty[Object]()
L_0056: callvirt Void Append(System.String, System.Object[])
L_005b: Label2
L_005b: callvirt Enumerator GetEnumerator()
L_0060: stloc.1
.try
{
	L_0061: br Label3
	L_0066: Label4
	L_0066: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0068: call Localize.Text get_Current()
	L_006d: stloc.2
	L_006e: ldloc.0
	L_006f: ldloc.2
	L_0070: callvirt Void AppendLine(Localize.Text)
	L_0075: Label3
	L_0075: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0077: call Boolean MoveNext()
	L_007c: brtrue Label4
	L_0081: leave Label5
	L_0086: leave (autogenerated)
} // end try
.finally
{
	L_008b: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_008d: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_0093: callvirt Void Dispose()
	L_0098: endfinally
	L_0099: leave (autogenerated)
} // end handler
L_009a: Label1
L_009a: ldarg.0
L_009b: ldfld System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] validationErrorMessages
L_00a0: newobj Void .ctor()
L_00a5: dup
L_00a6: ldc.i4.3
L_00a7: callvirt Void Add(BattleTech.MechValidationType)
L_00ac: dup
L_00ad: ldc.i4.5
L_00ae: callvirt Void Add(BattleTech.MechValidationType)
L_00b3: dup
L_00b4: ldc.i4.6
L_00b5: callvirt Void Add(BattleTech.MechValidationType)
L_00ba: dup
L_00bb: ldc.i4.s 10
L_00bd: callvirt Void Add(BattleTech.MechValidationType)
L_00c2: dup
L_00c3: ldc.i4.s 11
L_00c5: callvirt Void Add(BattleTech.MechValidationType)
L_00ca: call System.Collections.Generic.List`1[Localize.Text] GetValidationErrors(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]], System.Collections.Generic.List`1[BattleTech.MechValidationType])
L_00cf: dup
L_00d0: callvirt Int32 get_Count()
L_00d5: ldc.i4.0
L_00d6: ble Label6
L_00db: ldloc.0
L_00dc: ldstr "The following issues may affect the performance of this 'Mech in battle:

"
L_00e1: call System.Object[] Empty[Object]()
L_00e6: callvirt Void Append(System.String, System.Object[])
L_00eb: Label6
L_00eb: callvirt Enumerator GetEnumerator()
L_00f0: stloc.1
.try
{
	L_00f1: br Label7
	L_00f6: Label8
	L_00f6: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_00f8: call Localize.Text get_Current()
	L_00fd: stloc.3
	L_00fe: ldloc.0
	L_00ff: ldloc.3
	L_0100: callvirt Void AppendLine(Localize.Text)
	L_0105: Label7
	L_0105: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_0107: call Boolean MoveNext()
	L_010c: brtrue Label8
	L_0111: leave Label9
	L_0116: leave (autogenerated)
} // end try
.finally
{
	L_011b: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[Localize.Text])
	L_011d: constrained. System.Collections.Generic.List`1+Enumerator[Localize.Text]
	L_0123: callvirt Void Dispose()
	L_0128: endfinally
	L_0129: leave (autogenerated)
} // end handler
L_012a: Label5
L_012a: Label9
L_012a: ldloc.0
L_012b: stloc 4 (Localize.Text)
L_012d: ldloc 4 (Localize.Text)
L_012f: ret
DONE

### Harmony id=MechEngineer.Features.ComponentExplosions, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ComponentExplosions.ComponentExplosionsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.34
### Patch BattleTech.Vehicle, Boolean DamageLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.VehicleChassisLocations, BattleTech.Weapon, Single, BattleTech.AttackImpactQuality)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: System.Single
L_0000: Local var 4: System.Single
L_0000: Local var 5: System.Single
L_0000: ldarg.3
L_0001: brfalse Label1
L_0006: ldarg.3
L_0007: ldc.i4 65536
L_000c: bne.un Label2
L_0011: Label1
L_0011: ldc.i4.0
L_0012: br Label10
L_0017: Label2
L_0017: ldarg.0
L_0018: call BattleTech.CombatGameState get_Combat()
L_001d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0022: ldarg.1
L_0023: ldfld System.Int32 attackSequenceId
L_0028: callvirt AttackSequence GetAttackSequence(Int32)
L_002d: stloc.0
L_002e: ldloc.0
L_002f: brfalse Label3
L_0034: ldloc.0
L_0035: ldarg.0
L_0036: call System.String get_GUID()
L_003b: callvirt Void FlagAttackDidDamage(System.String)
L_0040: Label3
L_0040: ldarg.s 5
L_0042: stloc.1
L_0043: ldarg.0
L_0044: ldarg.3
L_0045: call Single GetCurrentArmor(BattleTech.Vehicle, BattleTech.VehicleChassisLocations)
L_004a: stloc.2
L_004b: ldloc.2
L_004c: ldc.r4 0
L_0051: ble.un Label4
L_0056: ldarg.s 5
L_0058: ldloc.2
L_0059: call Single Min(Single, Single)
L_005e: stloc.s 4 (System.Single)
L_0060: ldsfld HBS.Logging.ILog attackLogger
L_0065: callvirt Boolean get_IsLogEnabled()
L_006a: brfalse Label5
L_006f: ldsfld HBS.Logging.ILog attackLogger
L_0074: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_0079: ldc.i4.5
L_007a: newarr System.Object
L_007f: dup
L_0080: ldc.i4.0
L_0081: ldarg.1
L_0082: ldfld System.Int32 attackSequenceId
L_0087: box System.Int32
L_008c: stelem.ref
L_008d: dup
L_008e: ldc.i4.1
L_008f: ldarg.1
L_0090: ldfld System.Int32 attackWeaponIndex
L_0095: box System.Int32
L_009a: stelem.ref
L_009b: dup
L_009c: ldc.i4.2
L_009d: ldarg.2
L_009e: box System.Int32
L_00a3: stelem.ref
L_00a4: dup
L_00a5: ldc.i4.3
L_00a6: ldarga.s 3
L_00a8: constrained. BattleTech.VehicleChassisLocations
L_00ae: callvirt System.String ToString()
L_00b3: stelem.ref
L_00b4: dup
L_00b5: ldc.i4.4
L_00b6: ldloc.s 4 (System.Single)
L_00b8: box System.Single
L_00bd: stelem.ref
L_00be: call System.String Format(System.String, System.Object[])
L_00c3: callvirt Void Log(System.Object)
L_00c8: Label5
L_00c8: ldarg.0
L_00c9: ldarg.3
L_00ca: ldloc.s 4 (System.Single)
L_00cc: ldarg.1
L_00cd: call Void applyArmorStatDamage(BattleTech.VehicleChassisLocations, Single, BattleTech.WeaponHitInfo)
L_00d2: ldarg.s 5
L_00d4: ldloc.s 4 (System.Single)
L_00d6: sub
L_00d7: stloc.1
L_00d8: Label4
L_00d8: ldloc.1
L_00d9: ldc.r4 0
L_00de: bgt.un Label6
L_00e3: ldarg.0
L_00e4: call BattleTech.CombatGameState get_Combat()
L_00e9: callvirt MessageCenter get_MessageCenter()
L_00ee: ldarg.1
L_00ef: ldfld System.String attackerId
L_00f4: ldarg.0
L_00f5: call System.String get_GUID()
L_00fa: ldarg.s 5
L_00fc: ldarg.3
L_00fd: newobj Void .ctor(String, String, Single, VehicleChassisLocations)
L_0102: callvirt Void PublishMessage(MessageCenterMessage)
L_0107: ldc.i4.1
L_0108: br Label11
L_010d: Label6
L_010d: ldarg.0
L_010e: ldarg.3
L_010f: call Single GetCurrentStructure(BattleTech.VehicleChassisLocations)
L_0114: stloc.3
L_0115: ldloc.3
L_0116: ldc.r4 0
L_011b: ble.un Label7
L_0120: ldloc.1
L_0121: ldloc.3
L_0122: call Single Min(Single, Single)
L_0127: stloc.s 5 (System.Single)
L_0129: ldsfld HBS.Logging.ILog attackLogger
L_012e: callvirt Boolean get_IsLogEnabled()
L_0133: brfalse Label8
L_0138: ldsfld HBS.Logging.ILog attackLogger
L_013d: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_0142: ldc.i4.5
L_0143: newarr System.Object
L_0148: dup
L_0149: ldc.i4.0
L_014a: ldarg.1
L_014b: ldfld System.Int32 attackSequenceId
L_0150: box System.Int32
L_0155: stelem.ref
L_0156: dup
L_0157: ldc.i4.1
L_0158: ldarg.1
L_0159: ldfld System.Int32 attackWeaponIndex
L_015e: box System.Int32
L_0163: stelem.ref
L_0164: dup
L_0165: ldc.i4.2
L_0166: ldarg.2
L_0167: box System.Int32
L_016c: stelem.ref
L_016d: dup
L_016e: ldc.i4.3
L_016f: ldarga.s 3
L_0171: constrained. BattleTech.VehicleChassisLocations
L_0177: callvirt System.String ToString()
L_017c: stelem.ref
L_017d: dup
L_017e: ldc.i4.4
L_017f: ldloc.s 5 (System.Single)
L_0181: box System.Single
L_0186: stelem.ref
L_0187: call System.String Format(System.String, System.Object[])
L_018c: callvirt Void Log(System.Object)
L_0191: Label8
L_0191: ldarg.0
L_0192: ldarg.3
L_0193: ldloc.s 5 (System.Single)
L_0195: ldarg.1
L_0196: call Void applyStructureStatDamage(BattleTech.Vehicle, BattleTech.VehicleChassisLocations, Single, BattleTech.WeaponHitInfo)
L_019b: ldloc.1
L_019c: ldloc.s 5 (System.Single)
L_019e: sub
L_019f: stloc.1
L_01a0: ldarg.0
L_01a1: ldarg.3
L_01a2: call Single GetCurrentStructure(BattleTech.VehicleChassisLocations)
L_01a7: ldc.r4 0
L_01ac: bgt.un Label9
L_01b1: ldarg.0
L_01b2: ldstr "Location Destroyed: "
L_01b7: ldarga.s 3
L_01b9: constrained. BattleTech.VehicleChassisLocations
L_01bf: callvirt System.String ToString()
L_01c4: call System.String Concat(System.String, System.String)
L_01c9: ldc.i4.s 11
L_01cb: ldc.i4.s 12
L_01cd: ldarg.3
L_01ce: ldarg.1
L_01cf: ldfld System.Int32 stackItemUID
L_01d4: ldarg.1
L_01d5: ldfld System.String attackerId
L_01da: ldc.i4.0
L_01db: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_01e0: Label7
L_01e0: Label9
L_01e0: ldarg.0
L_01e1: call BattleTech.CombatGameState get_Combat()
L_01e6: callvirt MessageCenter get_MessageCenter()
L_01eb: ldarg.1
L_01ec: ldfld System.String targetId
L_01f1: ldarg.0
L_01f2: call System.String get_GUID()
L_01f7: ldarg.s 5
L_01f9: ldarg.3
L_01fa: newobj Void .ctor(String, String, Single, VehicleChassisLocations)
L_01ff: callvirt Void PublishMessage(MessageCenterMessage)
L_0204: ldc.i4.1
L_0205: Label10
L_0205: Label11
L_0205: ret
DONE

### Patch BattleTech.MechComponent, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarga 2
L_000d: call Boolean Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg 1
L_001e: ldarga 2
L_0024: call Void Prefix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel ByRef)
L_0029: ldarg.0
L_002a: call BattleTech.StatCollection get_StatCollection()
L_002f: ldarg.1
L_0030: ldfld System.String attackerId
L_0035: ldarg.1
L_0036: ldfld System.Int32 stackItemUID
L_003b: ldstr "DamageLevel"
L_0040: ldc.i4.0
L_0041: ldarg.2
L_0042: ldc.i4.m1
L_0043: ldc.i4.1
L_0044: callvirt Int32 ModifyStat[ComponentDamageLevel](System.String, Int32, System.String, StatOperation, BattleTech.ComponentDamageLevel, Int32, Boolean)
L_0049: pop
L_004a: ldarg.2
L_004b: ldc.i4.0
L_004c: blt Label1
L_0051: ldarg.0
L_0052: ldc.i4.1
L_0053: call Void CancelCreatedEffects(BattleTech.MechComponent, Boolean)
L_0058: Label1
L_0058: ldarg.2
L_0059: ldc.i4.4
L_005a: pop
L_005b: pop
L_005c: ldarg.0
L_005d: call BattleTech.MechComponentDef get_componentDef()
L_0062: callvirt Boolean get_CriticalComponent()
L_0067: brfalse Label2
L_006c: ldarg.0
L_006d: ldfld BattleTech.AbstractActor parent
L_0072: ldstr "Vital component destroyed: "
L_0077: ldarg.0
L_0078: call BattleTech.DescriptionDef get_Description()
L_007d: callvirt System.String get_Name()
L_0082: call System.String Concat(System.String, System.String)
L_0087: ldc.i4.s 9
L_0089: ldc.i4.1
L_008a: ldarg.0
L_008b: ldflda BattleTech.LocationDef locationDef
L_0090: ldfld BattleTech.ChassisLocations Location
L_0095: ldarg.1
L_0096: ldfld System.Int32 stackItemUID
L_009b: ldarg.1
L_009c: ldfld System.String attackerId
L_00a1: ldc.i4.0
L_00a2: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_00a7: Label2
L_00a7: Label0
L_00a7: ldarg.0
L_00a8: call Void Postfix(BattleTech.MechComponent)
L_00ad: ldarg.0
L_00ae: ldarg 1
L_00b4: ldarg 2
L_00ba: ldarg 3
L_00c0: call Void Postfix(BattleTech.MechComponent, BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_00c5: ret
DONE

### Patch BattleTech.Mech, Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: System.Single
L_0000: Local var 2: System.Single
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Single
L_0000: Local var 6: BattleTech.ArmorLocation
L_0000: Local var 7: System.Single
L_0000: Local var 8: System.Single
L_0000: Local var 9: UnityEngine.Vector3
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.Single
L_0000: Local var 12: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 12 (System.Boolean)
L_0007: ldarg.0
L_0008: ldarg 1
L_000e: ldarg 2
L_0014: ldarg 3
L_001a: ldarg 4
L_0020: ldarg 5
L_0026: ldarg 6
L_002c: ldarg 7
L_0032: ldarg 8
L_0038: call Boolean Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_003d: brfalse Label0
L_0042: ldarg.0
L_0043: ldarg 1
L_0049: ldarg 2
L_004f: ldarg 3
L_0055: ldarg 4
L_005b: ldarg 5
L_0061: ldarg 6
L_0067: ldarg 7
L_006d: ldarg 8
L_0073: call Void Prefix(BattleTech.Mech, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_0078: ldarg.0
L_0079: call Void Prefix(BattleTech.Mech)
L_007e: ldarg.3
L_007f: brfalse Label1
L_0084: ldarg.3
L_0085: ldc.i4 65536
L_008a: bne.un Label2
L_008f: Label1
L_008f: ldc.i4.0
L_0090: br Label23
L_0095: Label2
L_0095: ldsfld HBS.Logging.ILog attackSequenceLogger
L_009a: callvirt Boolean get_IsDebugEnabled()
L_009f: brfalse Label3
L_00a4: ldsfld HBS.Logging.ILog attackSequenceLogger
L_00a9: ldstr "[Mech.DamageLocation] GUID {4}, Group {3}, Weapon {0}, Hit Index {5}, Location {1}, Total Damage {2}"
L_00ae: ldc.i4.6
L_00af: newarr System.Object
L_00b4: dup
L_00b5: ldc.i4.0
L_00b6: ldarg.2
L_00b7: ldfld System.Int32 attackWeaponIndex
L_00bc: box System.Int32
L_00c1: stelem.ref
L_00c2: dup
L_00c3: ldc.i4.1
L_00c4: ldarga.s 3
L_00c6: constrained. BattleTech.ArmorLocation
L_00cc: callvirt System.String ToString()
L_00d1: stelem.ref
L_00d2: dup
L_00d3: ldc.i4.2
L_00d4: ldarg.s 5
L_00d6: box System.Single
L_00db: stelem.ref
L_00dc: dup
L_00dd: ldc.i4.3
L_00de: ldarg.2
L_00df: ldfld System.Int32 attackGroupIndex
L_00e4: box System.Int32
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.4
L_00ec: ldarg.0
L_00ed: call System.String get_GUID()
L_00f2: stelem.ref
L_00f3: dup
L_00f4: ldc.i4.5
L_00f5: ldarg.s 6
L_00f7: box System.Int32
L_00fc: stelem.ref
L_00fd: call System.String Format(System.String, System.Object[])
L_0102: callvirt Void LogDebug(System.Object)
L_0107: Label3
L_0107: ldarg.0
L_0108: call BattleTech.CombatGameState get_Combat()
L_010d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0112: ldarg.2
L_0113: ldfld System.Int32 attackSequenceId
L_0118: callvirt AttackSequence GetAttackSequence(Int32)
L_011d: stloc.0
L_011e: ldsfld HBS.Logging.ILog damageLogger
L_0123: callvirt Boolean get_IsLogEnabled()
L_0128: brfalse Label4
L_012d: ldsfld HBS.Logging.ILog damageLogger
L_0132: ldstr "{0} takes {1} Damage to its {2} from {3} (ID {4})"
L_0137: ldc.i4.5
L_0138: newarr System.Object
L_013d: dup
L_013e: ldc.i4.0
L_013f: ldarg.0
L_0140: callvirt BattleTech.DescriptionDef get_Description()
L_0145: callvirt System.String get_Name()
L_014a: stelem.ref
L_014b: dup
L_014c: ldc.i4.1
L_014d: ldarg.s 5
L_014f: box System.Single
L_0154: stelem.ref
L_0155: dup
L_0156: ldc.i4.2
L_0157: ldarga.s 3
L_0159: constrained. BattleTech.ArmorLocation
L_015f: callvirt System.String ToString()
L_0164: stelem.ref
L_0165: dup
L_0166: ldc.i4.3
L_0167: ldarg.s 4
L_0169: callvirt System.String get_Name()
L_016e: stelem.ref
L_016f: dup
L_0170: ldc.i4.4
L_0171: ldarg.2
L_0172: ldfld System.Int32 attackWeaponIndex
L_0177: box System.Int32
L_017c: stelem.ref
L_017d: call System.String Format(System.String, System.Object[])
L_0182: callvirt Void Log(System.Object)
L_0187: Label4
L_0187: ldloc.0
L_0188: brfalse Label5
L_018d: ldloc.0
L_018e: ldarg.0
L_018f: call System.String get_GUID()
L_0194: callvirt Void FlagAttackDidDamage(System.String)
L_0199: ldarg.0
L_019a: call BattleTech.CombatGameState get_Combat()
L_019f: callvirt BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_01a4: ldarg.0
L_01a5: call System.String get_GUID()
L_01aa: ldarg.1
L_01ab: ldarg.2
L_01ac: ldarg.3
L_01ad: ldarg.s 4
L_01af: ldarg.s 5
L_01b1: ldarg.s 6
L_01b3: ldarg.s 7
L_01b5: callvirt Void RecordMechDamage(System.String, Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality)
L_01ba: Label5
L_01ba: ldarg.s 5
L_01bc: stloc.1
L_01bd: ldarg.0
L_01be: ldarg.3
L_01bf: call Single GetCurrentArmor(BattleTech.Mech, BattleTech.ArmorLocation)
L_01c4: stloc.2
L_01c5: ldloc.2
L_01c6: ldc.r4 0
L_01cb: ble.un Label6
L_01d0: ldarg.s 5
L_01d2: ldloc.2
L_01d3: call Single Min(Single, Single)
L_01d8: stloc.s 7 (System.Single)
L_01da: ldsfld HBS.Logging.ILog attackLogger
L_01df: callvirt Boolean get_IsLogEnabled()
L_01e4: brfalse Label7
L_01e9: ldsfld HBS.Logging.ILog attackLogger
L_01ee: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Armor damage: {4}"
L_01f3: ldc.i4.5
L_01f4: newarr System.Object
L_01f9: dup
L_01fa: ldc.i4.0
L_01fb: ldarg.2
L_01fc: ldfld System.Int32 attackSequenceId
L_0201: box System.Int32
L_0206: stelem.ref
L_0207: dup
L_0208: ldc.i4.1
L_0209: ldarg.2
L_020a: ldfld System.Int32 attackWeaponIndex
L_020f: box System.Int32
L_0214: stelem.ref
L_0215: dup
L_0216: ldc.i4.2
L_0217: ldarg.1
L_0218: box System.Int32
L_021d: stelem.ref
L_021e: dup
L_021f: ldc.i4.3
L_0220: ldarga.s 3
L_0222: constrained. BattleTech.ArmorLocation
L_0228: callvirt System.String ToString()
L_022d: stelem.ref
L_022e: dup
L_022f: ldc.i4.4
L_0230: ldloc.s 7 (System.Single)
L_0232: box System.Single
L_0237: stelem.ref
L_0238: call System.String Format(System.String, System.Object[])
L_023d: callvirt Void Log(System.Object)
L_0242: Label7
L_0242: ldsfld HBS.Logging.ILog damageLogger
L_0247: callvirt Boolean get_IsLogEnabled()
L_024c: brfalse Label8
L_0251: ldloc.2
L_0252: ldloc.s 7 (System.Single)
L_0254: sub
L_0255: stloc.s 8 (System.Single)
L_0257: ldsfld HBS.Logging.ILog damageLogger
L_025c: ldstr "==== Armor Damage: {0} / {1} || Now: {2}"
L_0261: ldloc.s 7 (System.Single)
L_0263: box System.Single
L_0268: ldloc.2
L_0269: box System.Single
L_026e: ldloc.s 8 (System.Single)
L_0270: box System.Single
L_0275: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_027a: callvirt Void Log(System.Object)
L_027f: Label8
L_027f: ldarg.0
L_0280: ldarg.3
L_0281: ldloc.s 7 (System.Single)
L_0283: ldarg.2
L_0284: call Void ApplyArmorStatDamage(BattleTech.ArmorLocation, Single, BattleTech.WeaponHitInfo)
L_0289: ldarg.s 5
L_028b: ldloc.s 7 (System.Single)
L_028d: sub
L_028e: stloc.1
L_028f: Label6
L_028f: ldloc.1
L_0290: ldc.r4 0
L_0295: bgt.un Label9
L_029a: ldarg.0
L_029b: call BattleTech.CombatGameState get_Combat()
L_02a0: callvirt MessageCenter get_MessageCenter()
L_02a5: ldarg.2
L_02a6: ldfld System.String attackerId
L_02ab: ldarg.0
L_02ac: call System.String get_GUID()
L_02b1: ldarg.s 5
L_02b3: ldarg.3
L_02b4: newobj Void .ctor(String, String, Single, ArmorLocation)
L_02b9: callvirt Void PublishMessage(MessageCenterMessage)
L_02be: ldc.i4.1
L_02bf: br Label24
L_02c4: Label9
L_02c4: ldarg.3
L_02c5: call BattleTech.ChassisLocations GetChassisLocationFromArmorLocation(BattleTech.ArmorLocation)
L_02ca: stloc.3
L_02cb: call UnityEngine.Vector3 get_one()
L_02d0: stloc.s 4 (UnityEngine.Vector3)
L_02d2: ldarg.0
L_02d3: call BattleTech.MechRepresentation get_GameRep()
L_02d8: ldnull
L_02d9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02de: brfalse Label10
L_02e3: ldarg.s 4
L_02e5: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02ea: ldnull
L_02eb: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_02f0: brfalse Label11
L_02f5: ldarg.s 4
L_02f7: callvirt BattleTech.WeaponRepresentation get_weaponRep()
L_02fc: ldfld UnityEngine.Transform[] vfxTransforms
L_0301: ldc.i4.0
L_0302: ldelem.ref
L_0303: callvirt UnityEngine.Vector3 get_position()
L_0308: stloc.s 9 (UnityEngine.Vector3)
L_030a: ldarg.0
L_030b: call BattleTech.MechRepresentation get_GameRep()
L_0310: ldloc.3
L_0311: callvirt UnityEngine.Transform GetVFXTransform(Int32)
L_0316: callvirt UnityEngine.Vector3 get_position()
L_031b: ldloc.s 9 (UnityEngine.Vector3)
L_031d: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0322: stloc.s 4 (UnityEngine.Vector3)
L_0324: ldloca.s 4 (UnityEngine.Vector3)
L_0326: call Void Normalize()
L_032b: ldloca.s 4 (UnityEngine.Vector3)
L_032d: ldc.r4 0.5
L_0332: stfld System.Single y
L_0337: ldloc.s 4 (UnityEngine.Vector3)
L_0339: ldarg.s 5
L_033b: call UnityEngine.Vector3 op_Multiply(UnityEngine.Vector3, Single)
L_0340: stloc.s 4 (UnityEngine.Vector3)
L_0342: Label10
L_0342: Label11
L_0342: ldarg.0
L_0343: ldloc.3
L_0344: call Single GetCurrentStructure(BattleTech.ChassisLocations)
L_0349: stloc.s 5 (System.Single)
L_034b: ldloc.s 5 (System.Single)
L_034d: ldc.r4 0
L_0352: ble.un Label12
L_0357: ldloc.1
L_0358: ldloc.s 5 (System.Single)
L_035a: call Single Min(Single, Single)
L_035f: stloc.s 10 (System.Single)
L_0361: ldsfld HBS.Logging.ILog attackLogger
L_0366: callvirt Boolean get_IsLogEnabled()
L_036b: brfalse Label13
L_0370: ldsfld HBS.Logging.ILog attackLogger
L_0375: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Structure damage: {4}"
L_037a: ldc.i4.5
L_037b: newarr System.Object
L_0380: dup
L_0381: ldc.i4.0
L_0382: ldarg.2
L_0383: ldfld System.Int32 attackSequenceId
L_0388: box System.Int32
L_038d: stelem.ref
L_038e: dup
L_038f: ldc.i4.1
L_0390: ldarg.2
L_0391: ldfld System.Int32 attackWeaponIndex
L_0396: box System.Int32
L_039b: stelem.ref
L_039c: dup
L_039d: ldc.i4.2
L_039e: ldarg.1
L_039f: box System.Int32
L_03a4: stelem.ref
L_03a5: dup
L_03a6: ldc.i4.3
L_03a7: ldloca.s 3 (BattleTech.ChassisLocations)
L_03a9: constrained. BattleTech.ChassisLocations
L_03af: callvirt System.String ToString()
L_03b4: stelem.ref
L_03b5: dup
L_03b6: ldc.i4.4
L_03b7: ldloc.s 10 (System.Single)
L_03b9: box System.Single
L_03be: stelem.ref
L_03bf: call System.String Format(System.String, System.Object[])
L_03c4: callvirt Void Log(System.Object)
L_03c9: Label13
L_03c9: ldsfld HBS.Logging.ILog damageLogger
L_03ce: callvirt Boolean get_IsLogEnabled()
L_03d3: brfalse Label14
L_03d8: ldloc.s 5 (System.Single)
L_03da: ldloc.s 10 (System.Single)
L_03dc: sub
L_03dd: stloc.s 11 (System.Single)
L_03df: ldsfld HBS.Logging.ILog damageLogger
L_03e4: ldstr "==== Structure Damage: {0} / {1} || Now: {2}"
L_03e9: ldloc.s 10 (System.Single)
L_03eb: box System.Single
L_03f0: ldloc.s 5 (System.Single)
L_03f2: box System.Single
L_03f7: ldloc.s 11 (System.Single)
L_03f9: box System.Single
L_03fe: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0403: callvirt Void Log(System.Object)
L_0408: Label14
L_0408: ldarg.0
L_0409: ldloc.3
L_040a: ldloc.s 10 (System.Single)
L_040c: ldarg.2
L_040d: call Void ApplyStructureStatDamage(BattleTech.Mech, BattleTech.ChassisLocations, Single, BattleTech.WeaponHitInfo)
L_0412: ldloc.1
L_0413: ldloc.s 10 (System.Single)
L_0415: sub
L_0416: stloc.1
L_0417: ldarg.0
L_0418: ldloc.3
L_0419: call Boolean IsLocationDestroyed(BattleTech.ChassisLocations)
L_041e: brfalse Label15
L_0423: ldloc.s 10 (System.Single)
L_0425: ldc.r4 0.01
L_042a: ble.un Label16
L_042f: ldarg.0
L_0430: ldarg.2
L_0431: ldarg.1
L_0432: ldloc.3
L_0433: ldloc.s 4 (UnityEngine.Vector3)
L_0435: ldarg.s 8
L_0437: call Void NukeStructureLocation(BattleTech.WeaponHitInfo, Int32, BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.DamageType)
L_043c: br Label17
L_0441: Label12
L_0441: ldarg.0
L_0442: callvirt Boolean get_IsDead()
L_0447: brfalse Label18
L_044c: ldloc.1
L_044d: ldc.r4 0
L_0452: ble.un Label19
L_0457: ldarg.0
L_0458: ldarg.2
L_0459: ldfld System.String attackerId
L_045e: ldloc.3
L_045f: call BattleTech.ArmorLocation GetArmorFromChassisLocation(BattleTech.ChassisLocations)
L_0464: ldc.i4.8
L_0465: ldstr "{0}"
L_046a: ldc.r4 1
L_046f: ldloc.1
L_0470: call Single Max(Single, Single)
L_0475: conv.i4
L_0476: box System.Int32
L_047b: call System.String Format(System.String, System.Object)
L_0480: ldarg.0
L_0481: call BattleTech.CombatGameState get_Combat()
L_0486: callvirt BattleTech.CombatGameConstants get_Constants()
L_048b: callvirt BattleTech.CombatUIConstantsDef get_CombatUIConstants()
L_0490: ldfld System.Single floatieSizeMedium
L_0495: call Void ShowFloatie(System.String, BattleTech.ArmorLocation, MessageNature, System.String, Single)
L_049a: Label15
L_049a: Label16
L_049a: Label17
L_049a: Label18
L_049a: Label19
L_049a: ldarg.0
L_049b: call BattleTech.CombatGameState get_Combat()
L_04a0: callvirt MessageCenter get_MessageCenter()
L_04a5: ldarg.2
L_04a6: ldfld System.String attackerId
L_04ab: ldarg.0
L_04ac: call System.String get_GUID()
L_04b1: ldarg.s 5
L_04b3: ldarg.3
L_04b4: newobj Void .ctor(String, String, Single, ArmorLocation)
L_04b9: callvirt Void PublishMessage(MessageCenterMessage)
L_04be: ldloc.1
L_04bf: ldc.r4 0
L_04c4: bgt.un Label20
L_04c9: ldc.i4.1
L_04ca: br Label25
L_04cf: Label20
L_04cf: ldarg.3
L_04d0: ldarg.2
L_04d1: ldfld BattleTech.AttackDirection[] attackDirections
L_04d6: ldarg.s 6
L_04d8: ldelem.i4
L_04d9: call BattleTech.ArmorLocation GetPassthroughLocation(BattleTech.ArmorLocation, BattleTech.AttackDirection)
L_04de: stloc.s 6 (BattleTech.ArmorLocation)
L_04e0: ldsfld HBS.Logging.ILog attackLogger
L_04e5: callvirt Boolean get_IsLogEnabled()
L_04ea: brfalse Label21
L_04ef: ldsfld HBS.Logging.ILog attackLogger
L_04f4: ldstr "SEQ:{0}: WEAP:{1} HITLOC: {2} ({3}) Passing {4} damage through to {5}"
L_04f9: ldc.i4.6
L_04fa: newarr System.Object
L_04ff: dup
L_0500: ldc.i4.0
L_0501: ldarg.2
L_0502: ldfld System.Int32 attackSequenceId
L_0507: box System.Int32
L_050c: stelem.ref
L_050d: dup
L_050e: ldc.i4.1
L_050f: ldarg.2
L_0510: ldfld System.Int32 attackWeaponIndex
L_0515: box System.Int32
L_051a: stelem.ref
L_051b: dup
L_051c: ldc.i4.2
L_051d: ldarg.1
L_051e: box System.Int32
L_0523: stelem.ref
L_0524: dup
L_0525: ldc.i4.3
L_0526: ldloca.s 3 (BattleTech.ChassisLocations)
L_0528: constrained. BattleTech.ChassisLocations
L_052e: callvirt System.String ToString()
L_0533: stelem.ref
L_0534: dup
L_0535: ldc.i4.4
L_0536: ldloc.1
L_0537: box System.Single
L_053c: stelem.ref
L_053d: dup
L_053e: ldc.i4.5
L_053f: ldloca.s 6 (BattleTech.ArmorLocation)
L_0541: constrained. BattleTech.ArmorLocation
L_0547: callvirt System.String ToString()
L_054c: stelem.ref
L_054d: call System.String Format(System.String, System.Object[])
L_0552: callvirt Void Log(System.Object)
L_0557: Label21
L_0557: ldsfld HBS.Logging.ILog damageLogger
L_055c: callvirt Boolean get_IsLogEnabled()
L_0561: brfalse Label22
L_0566: ldsfld HBS.Logging.ILog damageLogger
L_056b: ldstr "==== {0} Armor Destroyed: {1} Damage applied to {2}"
L_0570: ldloca.s 3 (BattleTech.ChassisLocations)
L_0572: constrained. BattleTech.ChassisLocations
L_0578: callvirt System.String ToString()
L_057d: ldloc.1
L_057e: box System.Single
L_0583: ldloca.s 6 (BattleTech.ArmorLocation)
L_0585: constrained. BattleTech.ArmorLocation
L_058b: callvirt System.String ToString()
L_0590: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0595: callvirt Void Log(System.Object)
L_059a: Label22
L_059a: ldarg.0
L_059b: ldarg.1
L_059c: ldarg.2
L_059d: ldloc.s 6 (BattleTech.ArmorLocation)
L_059f: ldarg.s 4
L_05a1: ldloc.1
L_05a2: ldarg.s 6
L_05a4: ldarg.s 7
L_05a6: ldarg.s 8
L_05a8: call Boolean DamageLocation(Int32, BattleTech.WeaponHitInfo, BattleTech.ArmorLocation, BattleTech.Weapon, Single, Int32, BattleTech.AttackImpactQuality, BattleTech.DamageType)
L_05ad: Label23
L_05ad: Label24
L_05ad: Label25
L_05ad: stloc 12 (System.Boolean)
L_05af: Label0
L_05af: ldarg.0
L_05b0: call Void Postfix(BattleTech.Mech)
L_05b5: ldloc 12 (System.Boolean)
L_05b7: ret
DONE

### Patch BattleTech.AmmunitionBox, Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 2: System.String
L_0000: Local var 3: BattleTech.Mech
L_0000: Local var 4: BattleTech.Pilot
L_0000: Local var 5: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
L_0009: ret
DONE

### Harmony id=MechEngineer.Features.ArmorStructureChanges, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.ArmorStructureChanges.ArmorStructureChangesSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.Mech, Single GetMaxArmor(BattleTech.ArmorLocation)
L_0000: Local var 0: System.Single
L_0000: ldc.r4 0
L_0005: stloc 0 (System.Single)
L_0006: ldarg.0
L_0007: ldfld BattleTech.StatCollection statCollection
L_000c: ldarg.0
L_000d: ldarg.1
L_000e: call System.String GetStringForArmorLocation(BattleTech.ArmorLocation)
L_0013: callvirt BattleTech.Statistic GetStatistic(System.String)
L_0018: callvirt Single DefaultValue[Single]()
L_001d: stloc 0 (System.Single)
L_001e: ldarg.0
L_001f: ldloca 0 (System.Single)
L_0021: call Void Postfix(BattleTech.Mech, Single ByRef)
L_0026: ldloc 0 (System.Single)
L_0027: ret
DONE

### Patch BattleTech.Mech, Single GetMaxStructure(BattleTech.ChassisLocations)
L_0000: Local var 0: System.Single
L_0000: ldc.r4 0
L_0005: stloc 0 (System.Single)
L_0006: ldarg.0
L_0007: call BattleTech.MechDef get_MechDef()
L_000c: ldarg.1
L_000d: callvirt BattleTech.LocationDef GetChassisLocationDef(BattleTech.ChassisLocations)
L_0012: ldfld System.Single InternalStructure
L_0017: stloc 0 (System.Single)
L_0018: ldarg.0
L_0019: ldloca 0 (System.Single)
L_001b: call Void Postfix(BattleTech.Mech, Single ByRef)
L_0020: ldloc 0 (System.Single)
L_0021: ret
DONE

### Patch BattleTech.Mech, BattleTech.MechDef ToMechDef()
L_0000: Local var 0: BattleTech.MechDef
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.LocationLoadoutDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Collections.Generic.List`1[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 4: BattleTech.MechComponent
L_0000: Local var 5: BattleTech.MechComponentRef
L_0000: Local var 6: System.Collections.IEnumerator
L_0000: Local var 7: BattleTech.ChassisLocations
L_0000: Local var 8: System.Single
L_0000: Local var 9: System.Single
L_0000: Local var 10: System.Single
L_0000: Local var 11: System.String
L_0000: Local var 12: System.String
L_0000: Local var 13: BattleTech.LocationLoadoutDef
L_0000: Local var 14: BattleTech.LocationLoadoutDef
L_0000: Local var 15: System.IDisposable
L_0000: Local var 16: BattleTech.MechDef
L_0000: ldnull
L_0001: stloc 16 (BattleTech.MechDef)
L_0003: ldarg.0
L_0004: call BattleTech.MechDef get_MechDef()
L_0009: ldnull
L_000a: ldc.i4.1
L_000b: newobj Void .ctor(MechDef, String, Boolean)
L_0010: stloc.0
L_0011: newobj Void .ctor()
L_0016: stloc.1
L_0017: newobj Void .ctor()
L_001c: stloc.2
L_001d: ldarg.0
L_001e: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0023: callvirt Enumerator GetEnumerator()
L_0028: stloc.3
.try
{
	L_0029: br Label1
	L_002e: Label2
	L_002e: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0030: call BattleTech.MechComponent get_Current()
	L_0035: stloc.s 4 (BattleTech.MechComponent)
	L_0037: ldloc.s 4 (BattleTech.MechComponent)
	L_0039: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_003e: ldnull
	L_003f: newobj Void .ctor(MechComponentRef, String)
	L_0044: stloc.s 5 (BattleTech.MechComponentRef)
	L_0046: ldloc.s 5 (BattleTech.MechComponentRef)
	L_0048: ldloc.s 4 (BattleTech.MechComponent)
	L_004a: callvirt BattleTech.ComponentDamageLevel get_DamageLevel()
	L_004f: stfld BattleTech.ComponentDamageLevel DamageLevel
	L_0054: ldloc.2
	L_0055: ldloc.s 5 (BattleTech.MechComponentRef)
	L_0057: callvirt Void Add(BattleTech.MechComponentRef)
	L_005c: Label1
	L_005c: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_005e: call Boolean MoveNext()
	L_0063: brtrue Label2
	L_0068: leave Label3
	L_006d: leave (autogenerated)
} // end try
.finally
{
	L_0072: ldloca.s 3 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0074: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_007a: callvirt Void Dispose()
	L_007f: endfinally
	L_0080: leave (autogenerated)
} // end handler
L_0081: Label3
L_0081: ldtoken BattleTech.ChassisLocations
L_0086: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_008b: call System.Array GetValues(System.Type)
L_0090: callvirt System.Collections.IEnumerator GetEnumerator()
L_0095: stloc.s 6 (System.Collections.IEnumerator)
.try
{
	L_0097: br Label4
	L_009c: Label20
	L_009c: ldloc.s 6 (System.Collections.IEnumerator)
	L_009e: callvirt System.Object get_Current()
	L_00a3: unbox.any BattleTech.ChassisLocations
	L_00a8: stloc.s 7 (BattleTech.ChassisLocations)
	L_00aa: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00ac: brfalse Label5
	L_00b1: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00b3: ldc.i4 255
	L_00b8: beq Label6
	L_00bd: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00bf: ldc.i4.s 34
	L_00c1: beq Label7
	L_00c6: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00c8: ldc.i4 192
	L_00cd: beq Label8
	L_00d2: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00d4: ldc.i4.s 28
	L_00d6: beq Label9
	L_00db: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00dd: ldc.i4.s 62
	L_00df: beq Label10
	L_00e4: ldc.r4 0
	L_00e9: stloc.s 8 (System.Single)
	L_00eb: ldc.r4 -1
	L_00f0: stloc.s 9 (System.Single)
	L_00f2: ldc.r4 0
	L_00f7: stloc.s 10 (System.Single)
	L_00f9: ldarg.0
	L_00fa: ldloc.s 7 (BattleTech.ChassisLocations)
	L_00fc: call System.String GetStringForArmorLocation(BattleTech.ArmorLocation)
	L_0101: stloc.s 11 (System.String)
	L_0103: ldloc.s 11 (System.String)
	L_0105: call Boolean IsNullOrEmpty(System.String)
	L_010a: brtrue Label11
	L_010f: ldarg.0
	L_0110: ldfld BattleTech.StatCollection statCollection
	L_0115: ldloc.s 11 (System.String)
	L_0117: callvirt Single GetValue[Single](System.String)
	L_011c: stloc.s 8 (System.Single)
	L_011e: br Label12
	L_0123: Label11
	L_0123: ldsfld HBS.Logging.ILog initLogger
	L_0128: ldstr "Cannot find	armor for: "
	L_012d: ldloc.s 7 (BattleTech.ChassisLocations)
	L_012f: box BattleTech.ChassisLocations
	L_0134: call System.String Concat(System.Object, System.Object)
	L_0139: callvirt Void LogError(System.Object)
	L_013e: Label12
	L_013e: ldarg.0
	L_013f: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0141: call System.String GetStringForStructureLocation(BattleTech.ChassisLocations)
	L_0146: stloc.s 12 (System.String)
	L_0148: ldloc.s 12 (System.String)
	L_014a: call Boolean IsNullOrEmpty(System.String)
	L_014f: brtrue Label13
	L_0154: ldarg.0
	L_0155: ldfld BattleTech.StatCollection statCollection
	L_015a: ldloc.s 12 (System.String)
	L_015c: callvirt Single GetValue[Single](System.String)
	L_0161: stloc.s 10 (System.Single)
	L_0163: br Label14
	L_0168: Label13
	L_0168: ldsfld HBS.Logging.ILog initLogger
	L_016d: ldstr "Cannot find	structure for: "
	L_0172: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0174: box BattleTech.ChassisLocations
	L_0179: call System.String Concat(System.Object, System.Object)
	L_017e: callvirt Void LogError(System.Object)
	L_0183: Label14
	L_0183: ldloc.s 7 (BattleTech.ChassisLocations)
	L_0185: ldc.i4.4
	L_0186: bne.un Label15
	L_018b: ldarg.0
	L_018c: call Single get_LeftTorsoRearArmor()
	L_0191: stloc.s 9 (System.Single)
	L_0193: br Label16
	L_0198: Label15
	L_0198: ldloc.s 7 (BattleTech.ChassisLocations)
	L_019a: ldc.i4.s 16
	L_019c: bne.un Label17
	L_01a1: ldarg.0
	L_01a2: call Single get_RightTorsoRearArmor()
	L_01a7: stloc.s 9 (System.Single)
	L_01a9: br Label18
	L_01ae: Label17
	L_01ae: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01b0: ldc.i4.8
	L_01b1: bne.un Label19
	L_01b6: ldarg.0
	L_01b7: call Single get_CenterTorsoRearArmor()
	L_01bc: stloc.s 9 (System.Single)
	L_01be: Label16
	L_01be: Label18
	L_01be: Label19
	L_01be: ldarg.0
	L_01bf: call BattleTech.MechDef get_MechDef()
	L_01c4: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01c6: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
	L_01cb: stloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01cd: ldloc.s 7 (BattleTech.ChassisLocations)
	L_01cf: ldloc.s 8 (System.Single)
	L_01d1: ldloc.s 9 (System.Single)
	L_01d3: ldloc.s 10 (System.Single)
	L_01d5: ldloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01d7: ldfld System.Single AssignedArmor
	L_01dc: ldloc.s 13 (BattleTech.LocationLoadoutDef)
	L_01de: ldfld System.Single AssignedRearArmor
	L_01e3: ldc.i4.0
	L_01e4: newobj Void .ctor(ChassisLocations, Single, Single, Single, Single, Single, LocationDamageLevel)
	L_01e9: stloc.s 14 (BattleTech.LocationLoadoutDef)
	L_01eb: ldloc.1
	L_01ec: ldloc.s 14 (BattleTech.LocationLoadoutDef)
	L_01ee: callvirt Void Add(BattleTech.LocationLoadoutDef)
	L_01f3: Label4
	L_01f3: Label5
	L_01f3: Label6
	L_01f3: Label7
	L_01f3: Label8
	L_01f3: Label9
	L_01f3: Label10
	L_01f3: ldloc.s 6 (System.Collections.IEnumerator)
	L_01f5: callvirt Boolean MoveNext()
	L_01fa: brtrue Label20
	L_01ff: leave Label21
	L_0204: leave (autogenerated)
} // end try
.finally
{
	L_0209: ldloc.s 6 (System.Collections.IEnumerator)
	L_020b: isinst System.IDisposable
	L_0210: stloc.s 15 (System.IDisposable)
	L_0212: ldloc.s 15 (System.IDisposable)
	L_0214: brfalse Label22
	L_0219: ldloc.s 15 (System.IDisposable)
	L_021b: callvirt Void Dispose()
	L_0220: Label22
	L_0220: endfinally
	L_0221: leave (autogenerated)
} // end handler
L_0222: Label21
L_0222: ldloc.0
L_0223: ldloc.2
L_0224: callvirt BattleTech.MechComponentRef[] ToArray()
L_0229: callvirt Void SetInventory(BattleTech.MechComponentRef[])
L_022e: ldloc.0
L_022f: ldloc.1
L_0230: callvirt BattleTech.LocationLoadoutDef[] ToArray()
L_0235: callvirt Void SetLocations(BattleTech.LocationLoadoutDef[])
L_023a: ldloc.0
L_023b: stloc 16 (BattleTech.MechDef)
L_023d: ldarg.0
L_023e: ldloc 16 (BattleTech.MechDef)
L_0240: call Void Postfix(BattleTech.Mech, BattleTech.MechDef)
L_0245: ldloc 16 (BattleTech.MechDef)
L_0247: ret
DONE

### Patch BattleTech.Mech, Single get_ArmorMultiplier()
L_0000: Local var 0: BattleTech.WeightClass
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc 1 (System.Single)
L_0006: ldarg.0
L_0007: call BattleTech.WeightClass get_weightClass()
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 40
L_0010: bgt Label1
L_0015: ldloc.0
L_0016: ldc.i4.s 20
L_0018: beq Label2
L_001d: ldloc.0
L_001e: ldc.i4.s 40
L_0020: beq Label3
L_0025: br Label4
L_002a: Label1
L_002a: ldloc.0
L_002b: ldc.i4.s 60
L_002d: beq Label5
L_0032: ldloc.0
L_0033: ldc.i4.s 80
L_0035: bne.un Label6
L_003a: ldarg.0
L_003b: call BattleTech.CombatGameState get_Combat()
L_0040: callvirt BattleTech.CombatGameConstants get_Constants()
L_0045: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_004a: ldfld System.Single ArmorMultiplierAssault
L_004f: br Label7
L_0054: Label5
L_0054: ldarg.0
L_0055: call BattleTech.CombatGameState get_Combat()
L_005a: callvirt BattleTech.CombatGameConstants get_Constants()
L_005f: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0064: ldfld System.Single ArmorMultiplierHeavy
L_0069: br Label8
L_006e: Label3
L_006e: ldarg.0
L_006f: call BattleTech.CombatGameState get_Combat()
L_0074: callvirt BattleTech.CombatGameConstants get_Constants()
L_0079: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_007e: ldfld System.Single ArmorMultiplierMedium
L_0083: br Label9
L_0088: Label2
L_0088: ldarg.0
L_0089: call BattleTech.CombatGameState get_Combat()
L_008e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0093: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0098: ldfld System.Single ArmorMultiplierLight
L_009d: br Label10
L_00a2: Label4
L_00a2: Label6
L_00a2: ldc.r4 1
L_00a7: Label7
L_00a7: Label8
L_00a7: Label9
L_00a7: Label10
L_00a7: stloc 1 (System.Single)
L_00a8: ldarg.0
L_00a9: ldloca 1 (System.Single)
L_00ab: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00b0: ldloc 1 (System.Single)
L_00b1: ret
DONE

### Patch BattleTech.Mech, Single get_StructureMultiplier()
L_0000: Local var 0: BattleTech.WeightClass
L_0000: Local var 1: System.Single
L_0000: ldc.r4 0
L_0005: stloc 1 (System.Single)
L_0006: ldarg.0
L_0007: call BattleTech.WeightClass get_weightClass()
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 40
L_0010: bgt Label1
L_0015: ldloc.0
L_0016: ldc.i4.s 20
L_0018: beq Label2
L_001d: ldloc.0
L_001e: ldc.i4.s 40
L_0020: beq Label3
L_0025: br Label4
L_002a: Label1
L_002a: ldloc.0
L_002b: ldc.i4.s 60
L_002d: beq Label5
L_0032: ldloc.0
L_0033: ldc.i4.s 80
L_0035: bne.un Label6
L_003a: ldarg.0
L_003b: call BattleTech.CombatGameState get_Combat()
L_0040: callvirt BattleTech.CombatGameConstants get_Constants()
L_0045: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_004a: ldfld System.Single StructureMultiplierAssault
L_004f: br Label7
L_0054: Label5
L_0054: ldarg.0
L_0055: call BattleTech.CombatGameState get_Combat()
L_005a: callvirt BattleTech.CombatGameConstants get_Constants()
L_005f: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0064: ldfld System.Single StructureMultiplierHeavy
L_0069: br Label8
L_006e: Label3
L_006e: ldarg.0
L_006f: call BattleTech.CombatGameState get_Combat()
L_0074: callvirt BattleTech.CombatGameConstants get_Constants()
L_0079: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_007e: ldfld System.Single StructureMultiplierMedium
L_0083: br Label9
L_0088: Label2
L_0088: ldarg.0
L_0089: call BattleTech.CombatGameState get_Combat()
L_008e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0093: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_0098: ldfld System.Single StructureMultiplierLight
L_009d: br Label10
L_00a2: Label4
L_00a2: Label6
L_00a2: ldc.r4 1
L_00a7: Label7
L_00a7: Label8
L_00a7: Label9
L_00a7: Label10
L_00a7: stloc 1 (System.Single)
L_00a8: ldarg.0
L_00a9: ldloca 1 (System.Single)
L_00ab: call Void Postfix(BattleTech.Mech, Single ByRef)
L_00b0: ldloc 1 (System.Single)
L_00b1: ret
DONE

### Harmony id=MechEngineer.Features.HardpointFix, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.HardpointFix.HardpointFixSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.MechDef, Void RefreshInventory()
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: BattleTech.MechComponentRef
L_0000: Local var 2: System.Int32
L_0000: Local var 3: BattleTech.ChassisLocations
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechDef)
L_0006: newobj Void .ctor()
L_000b: stloc.0
L_000c: ldarg.0
L_000d: call Void InsertFixedEquipmentIntoInventory()
L_0012: ldc.i4.0
L_0013: stloc.2
L_0014: br Label1
L_0019: Label9
L_0019: ldarg.0
L_001a: ldfld BattleTech.MechComponentRef[] inventory
L_001f: ldloc.2
L_0020: ldelem.ref
L_0021: stloc.1
L_0022: ldloc.1
L_0023: brtrue Label2
L_0028: ldstr "Found an empty inventory slot"
L_002d: call Void Log(System.Object)
L_0032: br Label3
L_0037: Label2
L_0037: ldloc.1
L_0038: callvirt BattleTech.Data.DataManager get_DataManager()
L_003d: brtrue Label4
L_0042: ldloc.1
L_0043: ldarg.0
L_0044: ldfld BattleTech.Data.DataManager dataManager
L_0049: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004e: Label4
L_004e: ldloc.1
L_004f: callvirt Void RefreshComponentDef()
L_0054: ldloc.1
L_0055: ldfld System.Boolean hasPrefabName
L_005a: brtrue Label5
L_005f: ldloc.1
L_0060: callvirt BattleTech.MechComponentDef get_Def()
L_0065: brfalse Label6
L_006a: ldarg.0
L_006b: call BattleTech.ChassisDef get_Chassis()
L_0070: brfalse Label7
L_0075: ldarg.0
L_0076: call BattleTech.ChassisDef get_Chassis()
L_007b: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0080: brfalse Label8
L_0085: ldloc.1
L_0086: ldarg.0
L_0087: call BattleTech.ChassisDef get_Chassis()
L_008c: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0091: ldloc.1
L_0092: ldarg.0
L_0093: call BattleTech.ChassisDef get_Chassis()
L_0098: callvirt System.String get_PrefabBase()
L_009d: ldloc.1
L_009e: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_00a3: stloc.3
L_00a4: ldloca.s 3 (BattleTech.ChassisLocations)
L_00a6: constrained. BattleTech.ChassisLocations
L_00ac: callvirt System.String ToString()
L_00b1: callvirt System.String ToLower()
L_00b6: ldloca.s 0 (System.Collections.Generic.List`1[System.String])
L_00b8: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_00bd: stfld System.String prefabName
L_00c2: ldloc.1
L_00c3: ldc.i4.1
L_00c4: stfld System.Boolean hasPrefabName
L_00c9: Label3
L_00c9: Label5
L_00c9: Label6
L_00c9: Label7
L_00c9: Label8
L_00c9: ldloc.2
L_00ca: ldc.i4.1
L_00cb: add
L_00cc: stloc.2
L_00cd: Label1
L_00cd: ldloc.2
L_00ce: ldarg.0
L_00cf: ldfld BattleTech.MechComponentRef[] inventory
L_00d4: ldlen
L_00d5: conv.i4
L_00d6: blt Label9
L_00db: ldarg.0
L_00dc: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.Data.DataManager dataManager
L_00e7: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00f2: callvirt Void RefreshComponentDef()
L_00f7: ldarg.0
L_00f8: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_00fd: callvirt BattleTech.MechComponentDef get_Def()
L_0102: brfalse Label10
L_0107: ldarg.0
L_0108: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_010d: ldfld System.Boolean hasPrefabName
L_0112: brtrue Label11
L_0117: ldarg.0
L_0118: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_011d: ldstr "chrPrfWeap_generic_melee"
L_0122: stfld System.String prefabName
L_0127: ldarg.0
L_0128: ldfld BattleTech.MechComponentRef meleeWeaponRef
L_012d: ldc.i4.1
L_012e: stfld System.Boolean hasPrefabName
L_0133: Label10
L_0133: Label11
L_0133: ldarg.0
L_0134: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0139: ldarg.0
L_013a: ldfld BattleTech.Data.DataManager dataManager
L_013f: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0144: ldarg.0
L_0145: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_014a: callvirt Void RefreshComponentDef()
L_014f: ldarg.0
L_0150: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0155: callvirt BattleTech.MechComponentDef get_Def()
L_015a: brfalse Label12
L_015f: ldarg.0
L_0160: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0165: ldfld System.Boolean hasPrefabName
L_016a: brtrue Label13
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0175: ldstr "chrPrfWeap_generic_melee"
L_017a: stfld System.String prefabName
L_017f: ldarg.0
L_0180: ldfld BattleTech.MechComponentRef dfaWeaponRef
L_0185: ldc.i4.1
L_0186: stfld System.Boolean hasPrefabName
L_018b: Label12
L_018b: Label13
L_018b: ldarg.0
L_018c: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_0191: ldarg.0
L_0192: ldfld BattleTech.Data.DataManager dataManager
L_0197: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_019c: ldarg.0
L_019d: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01a2: callvirt Void RefreshComponentDef()
L_01a7: ldarg.0
L_01a8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01ad: callvirt BattleTech.MechComponentDef get_Def()
L_01b2: brfalse Label14
L_01b7: ldarg.0
L_01b8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01bd: ldfld System.Boolean hasPrefabName
L_01c2: brtrue Label15
L_01c7: ldarg.0
L_01c8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01cd: ldstr "chrPrfWeap_generic_melee"
L_01d2: stfld System.String prefabName
L_01d7: ldarg.0
L_01d8: ldfld BattleTech.MechComponentRef imaginaryLaserWeaponRef
L_01dd: ldc.i4.1
L_01de: stfld System.Boolean hasPrefabName
L_01e3: Label14
L_01e3: Label15
L_01e3: ldarg.0
L_01e4: call Void Postfix(BattleTech.MechDef)
L_01e9: ret
DONE

### Patch BattleTech.MechHardpointRules, System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_0000: Local var 0: BattleTech.MechHardpointRules+<>c__DisplayClass1_0
L_0000: Local var 1: BattleTech.WeaponDef
L_0000: Local var 2: BattleTech.WeaponCategory
L_0000: Local var 3: BattleTech.WeaponSubType
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: BattleTech.HardpointDataDef+_WeaponHardpointData
L_0000: Local var 7: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Int32
L_0000: Local var 11: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 12: System.Boolean
L_0000: Local var 13: System.Int32
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.String
L_0000: ldnull
L_0001: stloc 16 (System.String)
L_0003: ldarg 0
L_0009: ldarg 1
L_000f: ldarg 2
L_0015: ldarg 3
L_001b: ldarg 4
L_0021: ldloca 16 (System.String)
L_0023: call Boolean Prefix(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef, System.String ByRef)
L_0028: brfalse Label0
L_002d: newobj Void .ctor()
L_0032: stloc.0
L_0033: ldarg.1
L_0034: callvirt Int32 get_HardpointSlot()
L_0039: ldc.i4.0
L_003a: bge Label1
L_003f: ldstr ""
L_0044: br Label45
L_0049: Label1
L_0049: ldarg.1
L_004a: callvirt BattleTech.MechComponentDef get_Def()
L_004f: isinst BattleTech.WeaponDef
L_0054: stloc.1
L_0055: ldc.i4.0
L_0056: stloc.2
L_0057: ldc.i4.0
L_0058: stloc.3
L_0059: ldloc.0
L_005a: ldstr ""
L_005f: stfld System.String desiredPrefabName
L_0064: ldarg.1
L_0065: callvirt BattleTech.MechComponentDef get_Def()
L_006a: callvirt System.String get_PrefabIdentifier()
L_006f: callvirt System.String ToLower()
L_0074: stloc.s 4 (System.String)
L_0076: ldloc.0
L_0077: ldstr ""
L_007c: stfld System.String hardpointStr
L_0081: ldloc.1
L_0082: brfalse Label2
L_0087: ldloc.1
L_0088: callvirt BattleTech.WeaponCategory get_Category()
L_008d: stloc.2
L_008e: ldloc.1
L_008f: callvirt BattleTech.WeaponSubType get_WeaponSubType()
L_0094: stloc.3
L_0095: ldloc.2
L_0096: ldc.i4.1
L_0097: sub
L_0098: switch Labels3,4,5,6,7,8
L_00b5: br Label9
L_00ba: Label3
L_00ba: ldloc.0
L_00bb: ldstr "_bh"
L_00c0: stfld System.String hardpointStr
L_00c5: br Label10
L_00ca: Label4
L_00ca: ldloc.0
L_00cb: ldstr "_eh"
L_00d0: stfld System.String hardpointStr
L_00d5: br Label11
L_00da: Label5
L_00da: ldloc.0
L_00db: ldstr "_mh"
L_00e0: stfld System.String hardpointStr
L_00e5: br Label12
L_00ea: Label6
L_00ea: ldloc.0
L_00eb: ldstr "_ah"
L_00f0: stfld System.String hardpointStr
L_00f5: br Label13
L_00fa: Label8
L_00fa: ldstr "chrPrfWeap_generic_melee"
L_00ff: br Label46
L_0104: Label7
L_0104: Label9
L_0104: Label10
L_0104: Label11
L_0104: Label12
L_0104: Label13
L_0104: ldloc.0
L_0105: ldstr "chrPrfWeap_{0}_{1}_{2}{3}"
L_010a: ldc.i4.4
L_010b: newarr System.Object
L_0110: dup
L_0111: ldc.i4.0
L_0112: ldarg.2
L_0113: stelem.ref
L_0114: dup
L_0115: ldc.i4.1
L_0116: ldarg.3
L_0117: stelem.ref
L_0118: dup
L_0119: ldc.i4.2
L_011a: ldloc.s 4 (System.String)
L_011c: stelem.ref
L_011d: dup
L_011e: ldc.i4.3
L_011f: ldloc.0
L_0120: ldfld System.String hardpointStr
L_0125: stelem.ref
L_0126: call System.String Format(System.String, System.Object[])
L_012b: stfld System.String desiredPrefabName
L_0130: br Label14
L_0135: Label2
L_0135: ldstr ""
L_013a: br Label47
L_013f: Label14
L_013f: newobj Void .ctor()
L_0144: stloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0146: ldloca.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0148: ldstr ""
L_014d: ldc.i4.0
L_014e: newarr System.String[]
L_0153: ldc.i4.0
L_0154: newarr System.String
L_0159: ldc.i4.0
L_015a: newarr System.String
L_015f: call Void .ctor(String, String[][], String[], String[])
L_0164: ldc.i4.0
L_0165: stloc.s 9 (System.Int32)
L_0167: br Label15
L_016c: Label25
L_016c: ldarg.0
L_016d: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0172: ldloc.s 9 (System.Int32)
L_0174: ldelema BattleTech.HardpointDataDef+_WeaponHardpointData
L_0179: ldfld System.String location
L_017e: ldarg.3
L_017f: call Boolean op_Equality(System.String, System.String)
L_0184: brfalse Label16
L_0189: ldarg.0
L_018a: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_018f: ldloc.s 9 (System.Int32)
L_0191: ldelem BattleTech.HardpointDataDef+_WeaponHardpointData
L_0196: stloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0198: ldc.i4.0
L_0199: stloc.s 10 (System.Int32)
L_019b: br Label17
L_01a0: Label23
L_01a0: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_01a2: ldfld System.String[][] weapons
L_01a7: ldloc.s 10 (System.Int32)
L_01a9: ldelem.ref
L_01aa: newobj Void .ctor(IEnumerable`1)
L_01af: stloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01b1: ldc.i4.1
L_01b2: stloc.s 12 (System.Boolean)
L_01b4: ldc.i4.0
L_01b5: stloc.s 13 (System.Int32)
L_01b7: br Label18
L_01bc: Label21
L_01bc: ldloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01be: ldarg.s 4
L_01c0: ldind.ref
L_01c1: ldloc.s 13 (System.Int32)
L_01c3: callvirt System.String get_Item(Int32)
L_01c8: callvirt Boolean Contains(System.String)
L_01cd: brfalse Label19
L_01d2: ldc.i4.0
L_01d3: stloc.s 12 (System.Boolean)
L_01d5: br Label20
L_01da: Label19
L_01da: ldloc.s 13 (System.Int32)
L_01dc: ldc.i4.1
L_01dd: add
L_01de: stloc.s 13 (System.Int32)
L_01e0: Label18
L_01e0: ldloc.s 13 (System.Int32)
L_01e2: ldarg.s 4
L_01e4: ldind.ref
L_01e5: callvirt Int32 get_Count()
L_01ea: blt Label21
L_01ef: Label20
L_01ef: ldloc.s 12 (System.Boolean)
L_01f1: brfalse Label22
L_01f6: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_01f8: ldloc.s 11 (System.Collections.Generic.List`1[System.String])
L_01fa: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01ff: Label22
L_01ff: ldloc.s 10 (System.Int32)
L_0201: ldc.i4.1
L_0202: add
L_0203: stloc.s 10 (System.Int32)
L_0205: Label17
L_0205: ldloc.s 10 (System.Int32)
L_0207: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_0209: ldfld System.String[][] weapons
L_020e: ldlen
L_020f: conv.i4
L_0210: blt Label23
L_0215: br Label24
L_021a: Label16
L_021a: ldloc.s 9 (System.Int32)
L_021c: ldc.i4.1
L_021d: add
L_021e: stloc.s 9 (System.Int32)
L_0220: Label15
L_0220: ldloc.s 9 (System.Int32)
L_0222: ldarg.0
L_0223: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0228: ldlen
L_0229: conv.i4
L_022a: blt Label25
L_022f: Label24
L_022f: ldloc.2
L_0230: ldc.i4.4
L_0231: bne.un Label26
L_0236: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0238: ldloc.0
L_0239: ldftn Boolean <GetComponentPrefabName>b__0(System.String)
L_023f: newobj Void .ctor(Object, IntPtr)
L_0244: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_0249: pop
L_024a: br Label27
L_024f: Label26
L_024f: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0251: ldloc.0
L_0252: ldftn Boolean <GetComponentPrefabName>b__1(System.String)
L_0258: newobj Void .ctor(Object, IntPtr)
L_025d: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_0262: pop
L_0263: Label27
L_0263: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0265: newobj Void .ctor(IEnumerable`1)
L_026a: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_026c: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_026e: ldloc.0
L_026f: ldftn Boolean <GetComponentPrefabName>b__2(System.String)
L_0275: newobj Void .ctor(Object, IntPtr)
L_027a: callvirt Int32 RemoveAll(System.Predicate`1[System.String])
L_027f: pop
L_0280: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0282: callvirt Int32 get_Count()
L_0287: ldc.i4.1
L_0288: bge Label28
L_028d: ldloc.2
L_028e: ldc.i4.1
L_028f: sub
L_0290: switch Labels29,30,31,32
L_02a5: br Label33
L_02aa: Label29
L_02aa: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02ac: ldloc.s 4 (System.String)
L_02ae: ldloc.0
L_02af: ldfld System.String hardpointStr
L_02b4: call System.Collections.Generic.List`1[System.String] GetFallbackBallisticNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02b9: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02bb: br Label34
L_02c0: Label30
L_02c0: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02c2: ldloc.s 4 (System.String)
L_02c4: ldloc.0
L_02c5: ldfld System.String hardpointStr
L_02ca: call System.Collections.Generic.List`1[System.String] GetFallbackEnergyNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02cf: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02d1: br Label35
L_02d6: Label31
L_02d6: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02d8: ldloc.s 4 (System.String)
L_02da: ldloc.0
L_02db: ldfld System.String hardpointStr
L_02e0: call System.Collections.Generic.List`1[System.String] GetFallbackMissileNames(System.Collections.Generic.List`1[System.String], System.String, System.String)
L_02e5: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02e7: br Label36
L_02ec: Label32
L_02ec: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_02ee: ldloc.3
L_02ef: ldloc.s 4 (System.String)
L_02f1: ldloc.0
L_02f2: ldfld System.String hardpointStr
L_02f7: call System.Collections.Generic.List`1[System.String] GetFallbackSmallNames(System.Collections.Generic.List`1[System.String], BattleTech.WeaponSubType, System.String, System.String)
L_02fc: stloc.s 7 (System.Collections.Generic.List`1[System.String])
L_02fe: Label28
L_02fe: Label33
L_02fe: Label34
L_02fe: Label35
L_02fe: Label36
L_02fe: ldc.i4 2147483647
L_0303: stloc.s 8 (System.Int32)
L_0305: ldc.i4.0
L_0306: stloc.s 14 (System.Int32)
L_0308: br Label37
L_030d: Label39
L_030d: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_030f: ldloc.s 14 (System.Int32)
L_0311: callvirt System.String get_Item(Int32)
L_0316: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0318: ldloc.s 14 (System.Int32)
L_031a: callvirt System.String get_Item(Int32)
L_031f: callvirt Int32 get_Length()
L_0324: ldc.i4.1
L_0325: sub
L_0326: callvirt System.String Substring(Int32)
L_032b: call Int32 Parse(System.String)
L_0330: stloc.s 15 (System.Int32)
L_0332: ldloc.s 15 (System.Int32)
L_0334: ldloc.s 8 (System.Int32)
L_0336: bge Label38
L_033b: ldloc.0
L_033c: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_033e: ldloc.s 14 (System.Int32)
L_0340: callvirt System.String get_Item(Int32)
L_0345: stfld System.String desiredPrefabName
L_034a: ldloc.s 15 (System.Int32)
L_034c: stloc.s 8 (System.Int32)
L_034e: Label38
L_034e: ldloc.s 14 (System.Int32)
L_0350: ldc.i4.1
L_0351: add
L_0352: stloc.s 14 (System.Int32)
L_0354: Label37
L_0354: ldloc.s 14 (System.Int32)
L_0356: ldloc.s 7 (System.Collections.Generic.List`1[System.String])
L_0358: callvirt Int32 get_Count()
L_035d: blt Label39
L_0362: ldloc.s 8 (System.Int32)
L_0364: ldc.i4 2147483647
L_0369: bge Label40
L_036e: ldarg.s 4
L_0370: ldind.ref
L_0371: ldloc.0
L_0372: ldfld System.String desiredPrefabName
L_0377: callvirt Void Add(System.String)
L_037c: ldloc.0
L_037d: ldfld System.String desiredPrefabName
L_0382: br Label48
L_0387: Label40
L_0387: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0389: callvirt Int32 get_Count()
L_038e: ldc.i4.0
L_038f: ble Label41
L_0394: ldarg.s 4
L_0396: ldind.ref
L_0397: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_0399: ldc.i4.0
L_039a: callvirt System.String get_Item(Int32)
L_039f: callvirt Void Add(System.String)
L_03a4: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_03a6: ldc.i4.0
L_03a7: callvirt System.String get_Item(Int32)
L_03ac: br Label49
L_03b1: Label41
L_03b1: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03b3: ldfld System.String[][] weapons
L_03b8: ldlen
L_03b9: brfalse Label42
L_03be: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03c0: ldfld System.String[][] weapons
L_03c5: ldc.i4.0
L_03c6: ldelem.ref
L_03c7: ldlen
L_03c8: brfalse Label43
L_03cd: ldarg.s 4
L_03cf: ldind.ref
L_03d0: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03d2: ldfld System.String[][] weapons
L_03d7: ldc.i4.0
L_03d8: ldelem.ref
L_03d9: ldc.i4.0
L_03da: ldelem.ref
L_03db: callvirt Boolean Contains(System.String)
L_03e0: brtrue Label44
L_03e5: ldarg.s 4
L_03e7: ldind.ref
L_03e8: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03ea: ldfld System.String[][] weapons
L_03ef: ldc.i4.0
L_03f0: ldelem.ref
L_03f1: ldc.i4.0
L_03f2: ldelem.ref
L_03f3: callvirt Void Add(System.String)
L_03f8: Label44
L_03f8: ldloc.s 6 (BattleTech.HardpointDataDef+_WeaponHardpointData)
L_03fa: ldfld System.String[][] weapons
L_03ff: ldc.i4.0
L_0400: ldelem.ref
L_0401: ldc.i4.0
L_0402: ldelem.ref
L_0403: br Label50
L_0408: Label42
L_0408: Label43
L_0408: ldsfld HBS.Logging.ILog logger
L_040d: ldc.i4.7
L_040e: newarr System.String
L_0413: dup
L_0414: ldc.i4.0
L_0415: ldstr "GetComponentPrefabName failed to find a prefab name for unit "
L_041a: stelem.ref
L_041b: dup
L_041c: ldc.i4.1
L_041d: ldarg.2
L_041e: stelem.ref
L_041f: dup
L_0420: ldc.i4.2
L_0421: ldstr " and component "
L_0426: stelem.ref
L_0427: dup
L_0428: ldc.i4.3
L_0429: ldarg.1
L_042a: callvirt BattleTech.MechComponentDef get_Def()
L_042f: callvirt BattleTech.DescriptionDef get_Description()
L_0434: callvirt System.String get_Id()
L_0439: stelem.ref
L_043a: dup
L_043b: ldc.i4.4
L_043c: ldstr ", ideal match name was: "
L_0441: stelem.ref
L_0442: dup
L_0443: ldc.i4.5
L_0444: ldloc.0
L_0445: ldfld System.String desiredPrefabName
L_044a: stelem.ref
L_044b: dup
L_044c: ldc.i4.6
L_044d: ldstr ", falling back to default item"
L_0452: stelem.ref
L_0453: call System.String Concat(System.String[])
L_0458: callvirt Void LogWarning(System.Object)
L_045d: ldarg.0
L_045e: ldfld BattleTech.HardpointDataDef+_WeaponHardpointData[] HardpointData
L_0463: ldc.i4.0
L_0464: ldelema BattleTech.HardpointDataDef+_WeaponHardpointData
L_0469: ldfld System.String[][] weapons
L_046e: ldc.i4.0
L_046f: ldelem.ref
L_0470: ldc.i4.0
L_0471: ldelem.ref
L_0472: Label45
L_0472: Label46
L_0472: Label47
L_0472: Label48
L_0472: Label49
L_0472: Label50
L_0472: stloc 16 (System.String)
L_0474: Label0
L_0474: ldloc 16 (System.String)
L_0476: ret
DONE

### Patch BattleTech.Mech, Void InitGameRep(UnityEngine.Transform)
L_0000: Local var 0: System.String
L_0000: Local var 1: UnityEngine.GameObject
L_0000: Local var 2: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: UnityEngine.Transform
L_0000: Local var 4: UnityEngine.Transform
L_0000: Local var 5: System.Boolean
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: System.Collections.Generic.List`1+Enumerator[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 10: BattleTech.Weapon
L_0000: Local var 11: UnityEngine.Transform
L_0000: Local var 12: System.String
L_0000: Local var 13: BattleTech.ChassisLocations
L_0000: Local var 14: BattleTech.WeaponRepresentation
L_0000: Local var 15: UnityEngine.SkinnedMeshRenderer[]
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 18: BattleTech.MechComponent
L_0000: Local var 19: System.Int32
L_0000: Local var 20: System.String
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.Mech, UnityEngine.Transform)
L_000c: ldarg.0
L_000d: call BattleTech.MechDef get_MechDef()
L_0012: callvirt BattleTech.ChassisDef get_Chassis()
L_0017: callvirt System.String get_PrefabIdentifier()
L_001c: stloc.0
L_001d: ldsfld HBS.Logging.ILog initLogger
L_0022: callvirt Boolean get_IsLogEnabled()
L_0027: brfalse Label1
L_002c: ldsfld HBS.Logging.ILog initLogger
L_0031: ldstr "InitGameRep Loading this -"
L_0036: ldloc.0
L_0037: call System.String Concat(System.String, System.String)
L_003c: callvirt Void Log(System.Object)
L_0041: Label1
L_0041: ldarg.0
L_0042: call BattleTech.CombatGameState get_Combat()
L_0047: callvirt BattleTech.Data.DataManager get_DataManager()
L_004c: ldloc.0
L_004d: ldc.i4.s 45
L_004f: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0051: initobj System.Nullable`1[UnityEngine.Vector3]
L_0057: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0059: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_005b: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0061: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0063: ldnull
L_0064: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0069: stloc.1
L_006a: ldarg.0
L_006b: ldloc.1
L_006c: callvirt BattleTech.MechRepresentation GetComponent[MechRepresentation]()
L_0071: stfld BattleTech.GameRepresentation _gameRep
L_0076: ldloc.1
L_0077: callvirt UnityEngine.Animator GetComponent[Animator]()
L_007c: ldc.i4.1
L_007d: callvirt Void set_enabled(Boolean)
L_0082: ldarg.0
L_0083: call BattleTech.MechRepresentation get_GameRep()
L_0088: ldarg.0
L_0089: ldarg.1
L_008a: ldc.i4.0
L_008b: callvirt Void Init(BattleTech.Mech, UnityEngine.Transform, Boolean)
L_0090: ldarg.1
L_0091: ldnull
L_0092: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0097: brfalse Label2
L_009c: ldloc.1
L_009d: callvirt UnityEngine.Transform get_transform()
L_00a2: ldarg.0
L_00a3: ldfld UnityEngine.Vector3 currentPosition
L_00a8: callvirt Void set_position(UnityEngine.Vector3)
L_00ad: ldloc.1
L_00ae: callvirt UnityEngine.Transform get_transform()
L_00b3: ldarg.0
L_00b4: ldfld UnityEngine.Quaternion currentRotation
L_00b9: callvirt Void set_rotation(UnityEngine.Quaternion)
L_00be: Label2
L_00be: newobj Void .ctor()
L_00c3: stloc.2
L_00c4: ldarg.0
L_00c5: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_00ca: callvirt Enumerator GetEnumerator()
L_00cf: stloc.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
.try
{
	L_00d1: br Label3
	L_00d6: Label5
	L_00d6: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_00d8: call BattleTech.Weapon get_Current()
	L_00dd: stloc.s 10 (BattleTech.Weapon)
	L_00df: ldloc.s 10 (BattleTech.Weapon)
	L_00e1: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_00e6: ldarg.0
	L_00e7: call BattleTech.MechDef get_MechDef()
	L_00ec: callvirt BattleTech.ChassisDef get_Chassis()
	L_00f1: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
	L_00f6: ldloc.s 10 (BattleTech.Weapon)
	L_00f8: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_00fd: ldarg.0
	L_00fe: call BattleTech.MechDef get_MechDef()
	L_0103: callvirt BattleTech.ChassisDef get_Chassis()
	L_0108: callvirt System.String get_PrefabBase()
	L_010d: ldloc.s 10 (BattleTech.Weapon)
	L_010f: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_0114: callvirt BattleTech.ChassisLocations get_MountedLocation()
	L_0119: stloc.s 13 (BattleTech.ChassisLocations)
	L_011b: ldloca.s 13 (BattleTech.ChassisLocations)
	L_011d: constrained. BattleTech.ChassisLocations
	L_0123: callvirt System.String ToString()
	L_0128: callvirt System.String ToLower()
	L_012d: ldloca.s 2 (System.Collections.Generic.List`1[System.String])
	L_012f: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
	L_0134: stfld System.String prefabName
	L_0139: ldloc.s 10 (BattleTech.Weapon)
	L_013b: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_0140: ldc.i4.1
	L_0141: stfld System.Boolean hasPrefabName
	L_0146: ldarg.0
	L_0147: ldloc.s 10 (BattleTech.Weapon)
	L_0149: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_014e: callvirt BattleTech.ChassisLocations get_MountedLocation()
	L_0153: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
	L_0158: stloc.s 11 (UnityEngine.Transform)
	L_015a: ldloc.s 10 (BattleTech.Weapon)
	L_015c: ldloc.s 10 (BattleTech.Weapon)
	L_015e: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
	L_0163: ldfld System.String prefabName
	L_0168: ldloc.s 11 (UnityEngine.Transform)
	L_016a: ldarg.0
	L_016b: call System.String get_LogDisplayName()
	L_0170: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
	L_0175: ldarg.0
	L_0176: call BattleTech.MechRepresentation get_GameRep()
	L_017b: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
	L_0180: ldloc.s 10 (BattleTech.Weapon)
	L_0182: callvirt BattleTech.WeaponRepresentation get_weaponRep()
	L_0187: callvirt Void Add(BattleTech.WeaponRepresentation)
	L_018c: ldarg.0
	L_018d: call BattleTech.MechDef get_MechDef()
	L_0192: ldloc.s 10 (BattleTech.Weapon)
	L_0194: callvirt BattleTech.MechComponentRef get_mechComponentRef()
	L_0199: call System.String GetComponentMountingPointPrefabName(BattleTech.MechDef, BattleTech.MechComponentRef)
	L_019e: stloc.s 12 (System.String)
	L_01a0: ldloc.s 12 (System.String)
	L_01a2: call Boolean IsNullOrEmpty(System.String)
	L_01a7: brtrue Label4
	L_01ac: ldarg.0
	L_01ad: call BattleTech.CombatGameState get_Combat()
	L_01b2: callvirt BattleTech.Data.DataManager get_DataManager()
	L_01b7: ldloc.s 12 (System.String)
	L_01b9: ldc.i4.s 45
	L_01bb: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
	L_01bd: initobj System.Nullable`1[UnityEngine.Vector3]
	L_01c3: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
	L_01c5: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
	L_01c7: initobj System.Nullable`1[UnityEngine.Quaternion]
	L_01cd: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
	L_01cf: ldnull
	L_01d0: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
	L_01d5: callvirt BattleTech.WeaponRepresentation GetComponent[WeaponRepresentation]()
	L_01da: stloc.s 14 (BattleTech.WeaponRepresentation)
	L_01dc: ldloc.s 14 (BattleTech.WeaponRepresentation)
	L_01de: ldarg.0
	L_01df: ldloc.s 11 (UnityEngine.Transform)
	L_01e1: ldc.i4.1
	L_01e2: ldarg.0
	L_01e3: call System.String get_LogDisplayName()
	L_01e8: ldloc.s 10 (BattleTech.Weapon)
	L_01ea: callvirt Int32 get_Location()
	L_01ef: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, System.String, Int32)
	L_01f4: ldarg.0
	L_01f5: call BattleTech.MechRepresentation get_GameRep()
	L_01fa: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
	L_01ff: ldloc.s 14 (BattleTech.WeaponRepresentation)
	L_0201: callvirt Void Add(BattleTech.WeaponRepresentation)
	L_0206: Label3
	L_0206: Label4
	L_0206: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_0208: call Boolean MoveNext()
	L_020d: brtrue Label5
	L_0212: leave Label6
	L_0217: leave (autogenerated)
} // end try
.finally
{
	L_021c: ldloca.s 9 (System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon])
	L_021e: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Weapon]
	L_0224: callvirt Void Dispose()
	L_0229: endfinally
	L_022a: leave (autogenerated)
} // end handler
L_022b: Label6
L_022b: ldarg.0
L_022c: ldloc.2
L_022d: ldc.i4.8
L_022e: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0233: ldarg.0
L_0234: ldloc.2
L_0235: ldc.i4.4
L_0236: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_023b: ldarg.0
L_023c: ldloc.2
L_023d: ldc.i4.s 16
L_023f: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0244: ldarg.0
L_0245: ldloc.2
L_0246: ldc.i4.2
L_0247: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_024c: ldarg.0
L_024d: ldloc.2
L_024e: ldc.i4.s 32
L_0250: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_0255: ldarg.0
L_0256: ldloc.2
L_0257: ldc.i4.1
L_0258: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_025d: ldarg.0
L_025e: ldfld BattleTech.Weapon MeleeWeapon
L_0263: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_0268: ldfld System.Boolean hasPrefabName
L_026d: brtrue Label7
L_0272: ldarg.0
L_0273: ldfld BattleTech.Weapon MeleeWeapon
L_0278: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_027d: ldstr "chrPrfWeap_generic_melee"
L_0282: stfld System.String prefabName
L_0287: ldarg.0
L_0288: ldfld BattleTech.Weapon MeleeWeapon
L_028d: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_0292: ldc.i4.1
L_0293: stfld System.Boolean hasPrefabName
L_0298: Label7
L_0298: ldarg.0
L_0299: ldarg.0
L_029a: ldfld BattleTech.Weapon MeleeWeapon
L_029f: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02a4: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_02a9: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_02ae: stloc.3
L_02af: ldarg.0
L_02b0: ldfld BattleTech.Weapon MeleeWeapon
L_02b5: ldarg.0
L_02b6: ldfld BattleTech.Weapon MeleeWeapon
L_02bb: callvirt BattleTech.BaseComponentRef get_baseComponentRef()
L_02c0: ldfld System.String prefabName
L_02c5: ldloc.3
L_02c6: ldarg.0
L_02c7: call System.String get_LogDisplayName()
L_02cc: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
L_02d1: ldarg.0
L_02d2: ldfld BattleTech.Weapon DFAWeapon
L_02d7: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02dc: ldfld System.Boolean hasPrefabName
L_02e1: brtrue Label8
L_02e6: ldarg.0
L_02e7: ldfld BattleTech.Weapon DFAWeapon
L_02ec: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_02f1: ldstr "chrPrfWeap_generic_melee"
L_02f6: stfld System.String prefabName
L_02fb: ldarg.0
L_02fc: ldfld BattleTech.Weapon DFAWeapon
L_0301: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0306: ldc.i4.1
L_0307: stfld System.Boolean hasPrefabName
L_030c: Label8
L_030c: ldarg.0
L_030d: ldarg.0
L_030e: ldfld BattleTech.Weapon DFAWeapon
L_0313: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0318: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_031d: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_0322: stloc.s 4 (UnityEngine.Transform)
L_0324: ldarg.0
L_0325: ldfld BattleTech.Weapon DFAWeapon
L_032a: ldarg.0
L_032b: ldfld BattleTech.Weapon DFAWeapon
L_0330: callvirt BattleTech.MechComponentRef get_mechComponentRef()
L_0335: ldfld System.String prefabName
L_033a: ldloc.s 4 (UnityEngine.Transform)
L_033c: ldarg.0
L_033d: call System.String get_LogDisplayName()
L_0342: callvirt Void InitGameRep(System.String, UnityEngine.Transform, System.String)
L_0347: ldarg.0
L_0348: call BattleTech.MechDef get_MechDef()
L_034d: callvirt HBS.Collections.TagSet get_MechTags()
L_0352: ldstr "PlaceholderUnfinishedMaterial"
L_0357: callvirt Boolean Contains(System.String)
L_035c: stloc.s 5 (System.Boolean)
L_035e: ldarg.0
L_035f: call BattleTech.MechDef get_MechDef()
L_0364: callvirt HBS.Collections.TagSet get_MechTags()
L_0369: ldstr "PlaceholderImpostorMaterial"
L_036e: callvirt Boolean Contains(System.String)
L_0373: stloc.s 6 (System.Boolean)
L_0375: ldloc.s 5 (System.Boolean)
L_0377: ldloc.s 6 (System.Boolean)
L_0379: or
L_037a: brfalse Label9
L_037f: ldarg.0
L_0380: call BattleTech.MechRepresentation get_GameRep()
L_0385: ldc.i4.1
L_0386: callvirt UnityEngine.SkinnedMeshRenderer[] GetComponentsInChildren[SkinnedMeshRenderer](Boolean)
L_038b: stloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_038d: ldc.i4.0
L_038e: stloc.s 16 (System.Int32)
L_0390: br Label10
L_0395: Label13
L_0395: ldloc.s 5 (System.Boolean)
L_0397: brfalse Label11
L_039c: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_039e: ldloc.s 16 (System.Int32)
L_03a0: ldelem.ref
L_03a1: ldarg.0
L_03a2: call BattleTech.CombatGameState get_Combat()
L_03a7: callvirt BattleTech.Data.DataManager get_DataManager()
L_03ac: callvirt BattleTech.Data.TextureManager get_TextureManager()
L_03b1: ldfld UnityEngine.Material PlaceholderUnfinishedMaterial
L_03b6: callvirt Void set_sharedMaterial(UnityEngine.Material)
L_03bb: Label11
L_03bb: ldloc.s 6 (System.Boolean)
L_03bd: brfalse Label12
L_03c2: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_03c4: ldloc.s 16 (System.Int32)
L_03c6: ldelem.ref
L_03c7: ldarg.0
L_03c8: call BattleTech.CombatGameState get_Combat()
L_03cd: callvirt BattleTech.Data.DataManager get_DataManager()
L_03d2: callvirt BattleTech.Data.TextureManager get_TextureManager()
L_03d7: ldfld UnityEngine.Material PlaceholderImpostorMaterial
L_03dc: callvirt Void set_sharedMaterial(UnityEngine.Material)
L_03e1: Label12
L_03e1: ldloc.s 16 (System.Int32)
L_03e3: ldc.i4.1
L_03e4: add
L_03e5: stloc.s 16 (System.Int32)
L_03e7: Label10
L_03e7: ldloc.s 16 (System.Int32)
L_03e9: ldloc.s 15 (UnityEngine.SkinnedMeshRenderer[])
L_03eb: ldlen
L_03ec: conv.i4
L_03ed: blt Label13
L_03f2: Label9
L_03f2: ldarg.0
L_03f3: call BattleTech.MechRepresentation get_GameRep()
L_03f8: callvirt Void RefreshEdgeCache()
L_03fd: ldarg.0
L_03fe: call BattleTech.MechRepresentation get_GameRep()
L_0403: ldc.r4 1
L_0408: callvirt Void FadeIn(Single)
L_040d: ldarg.0
L_040e: callvirt Boolean get_IsDead()
L_0413: brtrue Label14
L_0418: ldarg.0
L_0419: call BattleTech.CombatGameState get_Combat()
L_041e: callvirt Boolean get_IsLoadingFromSave()
L_0423: brfalse Label15
L_0428: ldarg.0
L_0429: call System.Collections.Generic.List`1[BattleTech.MechComponent] get_AuraComponents()
L_042e: brfalse Label16
L_0433: ldarg.0
L_0434: call System.Collections.Generic.List`1[BattleTech.MechComponent] get_AuraComponents()
L_0439: callvirt Enumerator GetEnumerator()
L_043e: stloc.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_0440: br Label17
	L_0445: Label22
	L_0445: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0447: call BattleTech.MechComponent get_Current()
	L_044c: stloc.s 18 (BattleTech.MechComponent)
	L_044e: ldc.i4.0
	L_044f: stloc.s 19 (System.Int32)
	L_0451: br Label18
	L_0456: Label21
	L_0456: ldloc.s 18 (BattleTech.MechComponent)
	L_0458: callvirt BattleTech.MechComponentDef get_componentDef()
	L_045d: callvirt BattleTech.EffectData[] get_statusEffects()
	L_0462: ldloc.s 19 (System.Int32)
	L_0464: ldelem.ref
	L_0465: ldflda BattleTech.EffectTargetingData targetingData
	L_046a: ldfld BattleTech.AuraEffectType auraEffectType
	L_046f: ldc.i4.2
	L_0470: bne.un Label19
	L_0475: ldstr "vfxPrfPrtl_ECM_loop"
	L_047a: stloc.s 20 (System.String)
	L_047c: ldarg.0
	L_047d: call BattleTech.MechRepresentation get_GameRep()
	L_0482: ldarg.0
	L_0483: call BattleTech.MechRepresentation get_GameRep()
	L_0488: ldfld UnityEngine.Transform thisTransform
	L_048d: call UnityEngine.Vector3 get_zero()
	L_0492: ldloc.s 20 (System.String)
	L_0494: ldc.i4.1
	L_0495: call UnityEngine.Vector3 get_zero()
	L_049a: ldc.i4.0
	L_049b: ldc.r4 -1
	L_04a0: callvirt UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
	L_04a5: pop
	L_04a6: ldarg.0
	L_04a7: call BattleTech.MechRepresentation get_GameRep()
	L_04ac: ldarg.0
	L_04ad: call BattleTech.MechRepresentation get_GameRep()
	L_04b2: ldfld UnityEngine.Transform thisTransform
	L_04b7: call UnityEngine.Vector3 get_zero()
	L_04bc: ldstr "vfxPrfPrtl_ECMcarrierAura_loop"
	L_04c1: ldc.i4.1
	L_04c2: call UnityEngine.Vector3 get_zero()
	L_04c7: ldc.i4.0
	L_04c8: ldc.r4 -1
	L_04cd: callvirt UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
	L_04d2: pop
	L_04d3: leave Label20
	L_04d8: Label19
	L_04d8: ldloc.s 19 (System.Int32)
	L_04da: ldc.i4.1
	L_04db: add
	L_04dc: stloc.s 19 (System.Int32)
	L_04de: Label18
	L_04de: ldloc.s 19 (System.Int32)
	L_04e0: ldloc.s 18 (BattleTech.MechComponent)
	L_04e2: callvirt BattleTech.MechComponentDef get_componentDef()
	L_04e7: callvirt BattleTech.EffectData[] get_statusEffects()
	L_04ec: ldlen
	L_04ed: conv.i4
	L_04ee: blt Label21
	L_04f3: Label17
	L_04f3: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_04f5: call Boolean MoveNext()
	L_04fa: brtrue Label22
	L_04ff: leave Label23
	L_0504: leave (autogenerated)
} // end try
.finally
{
	L_0509: ldloca.s 17 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_050b: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0511: callvirt Void Dispose()
	L_0516: endfinally
	L_0517: leave (autogenerated)
} // end handler
L_0518: Label14
L_0518: Label15
L_0518: Label16
L_0518: Label20
L_0518: Label23
L_0518: ldarg.0
L_0519: ldarg 1
L_051f: call Void Postfix(BattleTech.Mech, UnityEngine.Transform)
L_0524: ret
DONE

### Patch BattleTech.MechRepresentationSimGame, Void LoadWeapons()
L_0000: Local var 0: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.MechComponentRef
L_0000: Local var 3: UnityEngine.Transform
L_0000: Local var 4: BattleTech.ComponentRepresentation
L_0000: Local var 5: System.String
L_0000: Local var 6: BattleTech.ChassisLocations
L_0000: Local var 7: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 8: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: BattleTech.ComponentRepresentation
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechRepresentationSimGame)
L_0006: newobj Void .ctor()
L_000b: stloc.0
L_000c: ldc.i4.0
L_000d: stloc.1
L_000e: br Label1
L_0013: Label4
L_0013: ldarg.0
L_0014: call BattleTech.MechDef get_mechDef()
L_0019: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_001e: ldloc.1
L_001f: ldelem.ref
L_0020: stloc.2
L_0021: ldloc.2
L_0022: ldarg.0
L_0023: call BattleTech.MechDef get_mechDef()
L_0028: callvirt BattleTech.ChassisDef get_Chassis()
L_002d: callvirt BattleTech.HardpointDataDef get_HardpointDataDef()
L_0032: ldloc.2
L_0033: ldarg.0
L_0034: call BattleTech.MechDef get_mechDef()
L_0039: callvirt BattleTech.ChassisDef get_Chassis()
L_003e: callvirt System.String get_PrefabBase()
L_0043: ldloc.2
L_0044: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0049: stloc.s 6 (BattleTech.ChassisLocations)
L_004b: ldloca.s 6 (BattleTech.ChassisLocations)
L_004d: constrained. BattleTech.ChassisLocations
L_0053: callvirt System.String ToString()
L_0058: callvirt System.String ToLower()
L_005d: ldloca.s 0 (System.Collections.Generic.List`1[System.String])
L_005f: call System.String GetComponentPrefabName(BattleTech.HardpointDataDef, BattleTech.BaseComponentRef, System.String, System.String, System.Collections.Generic.List`1[System.String] ByRef)
L_0064: stfld System.String prefabName
L_0069: ldloc.2
L_006a: ldc.i4.1
L_006b: stfld System.Boolean hasPrefabName
L_0070: ldloc.2
L_0071: ldfld System.String prefabName
L_0076: call Boolean IsNullOrEmpty(System.String)
L_007b: brtrue Label2
L_0080: ldarg.0
L_0081: ldloc.2
L_0082: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0087: call UnityEngine.Transform GetAttachTransform(BattleTech.ChassisLocations)
L_008c: stloc.3
L_008d: ldarg.0
L_008e: ldfld BattleTech.Data.DataManager dataManager
L_0093: ldloc.2
L_0094: ldfld System.String prefabName
L_0099: ldc.i4.s 45
L_009b: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_009d: initobj System.Nullable`1[UnityEngine.Vector3]
L_00a3: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_00a5: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_00a7: initobj System.Nullable`1[UnityEngine.Quaternion]
L_00ad: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_00af: ldnull
L_00b0: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_00b5: callvirt BattleTech.ComponentRepresentation GetComponent[ComponentRepresentation]()
L_00ba: stloc.s 4 (BattleTech.ComponentRepresentation)
L_00bc: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00be: ldnull
L_00bf: ldloc.3
L_00c0: ldc.i4.1
L_00c1: ldc.i4.0
L_00c2: ldstr "MechRepSimGame"
L_00c7: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_00cc: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00ce: callvirt UnityEngine.GameObject get_gameObject()
L_00d3: ldc.i4.1
L_00d4: callvirt Void SetActive(Boolean)
L_00d9: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00db: ldc.i4.s 9
L_00dd: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_00e2: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00e4: callvirt UnityEngine.GameObject get_gameObject()
L_00e9: ldloc.2
L_00ea: ldfld System.String prefabName
L_00ef: callvirt Void set_name(System.String)
L_00f4: ldarg.0
L_00f5: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] componentReps
L_00fa: ldloc.s 4 (BattleTech.ComponentRepresentation)
L_00fc: callvirt Void Add(BattleTech.ComponentRepresentation)
L_0101: ldarg.0
L_0102: call BattleTech.MechDef get_mechDef()
L_0107: ldloc.2
L_0108: call System.String GetComponentMountingPointPrefabName(BattleTech.MechDef, BattleTech.MechComponentRef)
L_010d: stloc.s 5 (System.String)
L_010f: ldloc.s 5 (System.String)
L_0111: call Boolean IsNullOrEmpty(System.String)
L_0116: brtrue Label3
L_011b: ldarg.0
L_011c: ldfld BattleTech.Data.DataManager dataManager
L_0121: ldloc.s 5 (System.String)
L_0123: ldc.i4.s 45
L_0125: ldloca.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_0127: initobj System.Nullable`1[UnityEngine.Vector3]
L_012d: ldloc.s 7 (System.Nullable`1[UnityEngine.Vector3])
L_012f: ldloca.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0131: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0137: ldloc.s 8 (System.Nullable`1[UnityEngine.Quaternion])
L_0139: ldnull
L_013a: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_013f: callvirt BattleTech.ComponentRepresentation GetComponent[ComponentRepresentation]()
L_0144: stloc.s 9 (BattleTech.ComponentRepresentation)
L_0146: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0148: ldnull
L_0149: ldloc.3
L_014a: ldc.i4.1
L_014b: ldc.i4.0
L_014c: ldstr "MechRepSimGame"
L_0151: callvirt Void Init(BattleTech.ICombatant, UnityEngine.Transform, Boolean, Boolean, System.String)
L_0156: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0158: callvirt UnityEngine.GameObject get_gameObject()
L_015d: ldc.i4.1
L_015e: callvirt Void SetActive(Boolean)
L_0163: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0165: ldc.i4.s 9
L_0167: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_016c: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_016e: callvirt UnityEngine.GameObject get_gameObject()
L_0173: ldloc.s 5 (System.String)
L_0175: callvirt Void set_name(System.String)
L_017a: ldarg.0
L_017b: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] componentReps
L_0180: ldloc.s 9 (BattleTech.ComponentRepresentation)
L_0182: callvirt Void Add(BattleTech.ComponentRepresentation)
L_0187: Label2
L_0187: Label3
L_0187: ldloc.1
L_0188: ldc.i4.1
L_0189: add
L_018a: stloc.1
L_018b: Label1
L_018b: ldloc.1
L_018c: ldarg.0
L_018d: call BattleTech.MechDef get_mechDef()
L_0192: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0197: ldlen
L_0198: conv.i4
L_0199: blt Label4
L_019e: ldarg.0
L_019f: ldloc.0
L_01a0: ldc.i4.8
L_01a1: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01a6: ldarg.0
L_01a7: ldloc.0
L_01a8: ldc.i4.4
L_01a9: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01ae: ldarg.0
L_01af: ldloc.0
L_01b0: ldc.i4.s 16
L_01b2: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01b7: ldarg.0
L_01b8: ldloc.0
L_01b9: ldc.i4.2
L_01ba: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01bf: ldarg.0
L_01c0: ldloc.0
L_01c1: ldc.i4.s 32
L_01c3: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01c8: ldarg.0
L_01c9: ldloc.0
L_01ca: ldc.i4.1
L_01cb: call Void CreateBlankPrefabs(System.Collections.Generic.List`1[System.String], BattleTech.ChassisLocations)
L_01d0: ldarg.0
L_01d1: call Void Postfix(BattleTech.MechRepresentationSimGame)
L_01d6: ret
DONE

### Patch BattleTech.ChassisDef, Void refreshLocationReferences()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ChassisLocations
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.ChassisDef)
L_0006: ldc.i4.0
L_0007: stloc.0
L_0008: br Label1
L_000d: Label22
L_000d: ldarg.0
L_000e: ldfld BattleTech.LocationDef[] Locations
L_0013: ldloc.0
L_0014: ldelema BattleTech.LocationDef
L_0019: ldfld BattleTech.ChassisLocations Location
L_001e: stloc.1
L_001f: ldloc.1
L_0020: ldc.i4.s 16
L_0022: bgt Label2
L_0027: ldloc.1
L_0028: ldc.i4.1
L_0029: sub
L_002a: switch Labels3,4,5,6
L_003f: ldloc.1
L_0040: ldc.i4.8
L_0041: beq Label7
L_0046: ldloc.1
L_0047: ldc.i4.s 16
L_0049: beq Label8
L_004e: br Label9
L_0053: Label2
L_0053: ldloc.1
L_0054: ldc.i4.s 32
L_0056: beq Label10
L_005b: ldloc.1
L_005c: ldc.i4.s 64
L_005e: beq Label11
L_0063: ldloc.1
L_0064: ldc.i4 128
L_0069: beq Label12
L_006e: br Label13
L_0073: Label3
L_0073: ldarg.0
L_0074: ldarg.0
L_0075: ldfld BattleTech.LocationDef[] Locations
L_007a: ldloc.0
L_007b: ldelem BattleTech.LocationDef
L_0080: call Void set_Head(BattleTech.LocationDef)
L_0085: br Label14
L_008a: Label4
L_008a: ldarg.0
L_008b: ldarg.0
L_008c: ldfld BattleTech.LocationDef[] Locations
L_0091: ldloc.0
L_0092: ldelem BattleTech.LocationDef
L_0097: call Void set_LeftArm(BattleTech.LocationDef)
L_009c: br Label15
L_00a1: Label6
L_00a1: ldarg.0
L_00a2: ldarg.0
L_00a3: ldfld BattleTech.LocationDef[] Locations
L_00a8: ldloc.0
L_00a9: ldelem BattleTech.LocationDef
L_00ae: call Void set_LeftTorso(BattleTech.LocationDef)
L_00b3: br Label16
L_00b8: Label7
L_00b8: ldarg.0
L_00b9: ldarg.0
L_00ba: ldfld BattleTech.LocationDef[] Locations
L_00bf: ldloc.0
L_00c0: ldelem BattleTech.LocationDef
L_00c5: call Void set_CenterTorso(BattleTech.LocationDef)
L_00ca: br Label17
L_00cf: Label8
L_00cf: ldarg.0
L_00d0: ldarg.0
L_00d1: ldfld BattleTech.LocationDef[] Locations
L_00d6: ldloc.0
L_00d7: ldelem BattleTech.LocationDef
L_00dc: call Void set_RightTorso(BattleTech.LocationDef)
L_00e1: br Label18
L_00e6: Label10
L_00e6: ldarg.0
L_00e7: ldarg.0
L_00e8: ldfld BattleTech.LocationDef[] Locations
L_00ed: ldloc.0
L_00ee: ldelem BattleTech.LocationDef
L_00f3: call Void set_RightArm(BattleTech.LocationDef)
L_00f8: br Label19
L_00fd: Label11
L_00fd: ldarg.0
L_00fe: ldarg.0
L_00ff: ldfld BattleTech.LocationDef[] Locations
L_0104: ldloc.0
L_0105: ldelem BattleTech.LocationDef
L_010a: call Void set_LeftLeg(BattleTech.LocationDef)
L_010f: br Label20
L_0114: Label12
L_0114: ldarg.0
L_0115: ldarg.0
L_0116: ldfld BattleTech.LocationDef[] Locations
L_011b: ldloc.0
L_011c: ldelem BattleTech.LocationDef
L_0121: call Void set_RightLeg(BattleTech.LocationDef)
L_0126: br Label21
L_012b: Label5
L_012b: Label9
L_012b: Label13
L_012b: ldc.i4.4
L_012c: newarr System.Object
L_0131: dup
L_0132: ldc.i4.0
L_0133: ldstr "Unknown chassis location def "
L_0138: stelem.ref
L_0139: dup
L_013a: ldc.i4.1
L_013b: ldarg.0
L_013c: ldfld BattleTech.LocationDef[] Locations
L_0141: ldloc.0
L_0142: ldelema BattleTech.LocationDef
L_0147: ldfld BattleTech.ChassisLocations Location
L_014c: box BattleTech.ChassisLocations
L_0151: stelem.ref
L_0152: dup
L_0153: ldc.i4.2
L_0154: ldstr " found in "
L_0159: stelem.ref
L_015a: dup
L_015b: ldc.i4.3
L_015c: ldarg.0
L_015d: call BattleTech.DescriptionDef get_Description()
L_0162: callvirt System.String get_Name()
L_0167: stelem.ref
L_0168: call System.String Concat(System.Object[])
L_016d: call Void LogError(System.Object)
L_0172: Label14
L_0172: Label15
L_0172: Label16
L_0172: Label17
L_0172: Label18
L_0172: Label19
L_0172: Label20
L_0172: Label21
L_0172: ldloc.0
L_0173: ldc.i4.1
L_0174: add
L_0175: stloc.0
L_0176: Label1
L_0176: ldloc.0
L_0177: ldarg.0
L_0178: ldfld BattleTech.LocationDef[] Locations
L_017d: ldlen
L_017e: conv.i4
L_017f: blt Label22
L_0184: ret
DONE

### Patch BattleTech.ChassisDef, Void RefreshHardpointData()
L_0000: ldarg.0
L_0001: ldfld BattleTech.Data.DataManager dataManager
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.Data.DataManager get_DataManager()
L_0011: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HardpointDataDef] get_HardpointDataDefs()
L_0016: ldarg.0
L_0017: call System.String get_HardpointDataDefID()
L_001c: callvirt Boolean Exists(System.String)
L_0021: brfalse Label2
L_0026: ldarg.0
L_0027: ldarg.0
L_0028: call BattleTech.Data.DataManager get_DataManager()
L_002d: callvirt HBS.Data.IDataItemStore`2[System.String,BattleTech.HardpointDataDef] get_HardpointDataDefs()
L_0032: ldarg.0
L_0033: call System.String get_HardpointDataDefID()
L_0038: callvirt BattleTech.HardpointDataDef Get(System.String)
L_003d: call Void set_HardpointDataDef(BattleTech.HardpointDataDef)
L_0042: Label1
L_0042: Label2
L_0042: ldarg.0
L_0043: call Void Postfix(BattleTech.ChassisDef)
L_0048: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnMechLabDrop(UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0000: Local var 0: BattleTech.UI.IMechLabDraggableItem
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: BattleTech.WeaponDef
L_0000: Local var 4: BattleTech.UI.MechLabItemSlotElement
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.WeaponDef
L_0000: Local var 7: BattleTech.WorkOrderEntry_InstallComponent
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg 2
L_000d: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, UnityEngine.EventSystems.PointerEventData, BattleTech.MechLabDropTargetType)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.MechLabPanel mechLab
L_001e: ldarg 1
L_0024: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.UI.MechLabPanel, UnityEngine.EventSystems.PointerEventData)
L_0029: brfalse Label0
L_002e: ldarg.0
L_002f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0034: callvirt Boolean get_Initialized()
L_0039: brtrue Label1
L_003e: br Label15
L_0043: Label1
L_0043: ldarg.0
L_0044: ldfld BattleTech.UI.MechLabPanel mechLab
L_0049: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_004e: brtrue Label2
L_0053: br Label16
L_0058: Label2
L_0058: ldarg.0
L_0059: ldfld BattleTech.UI.MechLabPanel mechLab
L_005e: callvirt BattleTech.UI.IMechLabDraggableItem get_DragItem()
L_0063: stloc.0
L_0064: ldarg.0
L_0065: ldloc.0
L_0066: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_006b: call Boolean ValidateAdd(BattleTech.MechComponentRef)
L_0070: stloc.1
L_0071: ldloc.1
L_0072: brtrue Label3
L_0077: ldloc.0
L_0078: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_007d: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0082: ldc.i4.1
L_0083: bne.un Label4
L_0088: ldarg.0
L_0089: ldfld BattleTech.LocationLoadoutDef loadout
L_008e: ldfld System.Single CurrentInternalStructure
L_0093: ldc.r4 0
L_0098: ble.un Label5
L_009d: ldloc.0
L_009e: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00a3: callvirt BattleTech.MechComponentDef get_Def()
L_00a8: isinst BattleTech.WeaponDef
L_00ad: stloc.3
L_00ae: ldnull
L_00af: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_00b1: ldarg.0
L_00b2: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00b7: callvirt Int32 get_Count()
L_00bc: ldc.i4.1
L_00bd: sub
L_00be: stloc.s 5 (System.Int32)
L_00c0: br Label6
L_00c5: Label10
L_00c5: ldarg.0
L_00c6: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00cb: ldloc.s 5 (System.Int32)
L_00cd: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00d2: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00d7: callvirt BattleTech.MechComponentDef get_Def()
L_00dc: isinst BattleTech.WeaponDef
L_00e1: stloc.s 6 (BattleTech.WeaponDef)
L_00e3: ldloc.s 6 (BattleTech.WeaponDef)
L_00e5: brfalse Label7
L_00ea: ldloc.s 6 (BattleTech.WeaponDef)
L_00ec: callvirt BattleTech.WeaponCategory get_Category()
L_00f1: ldloc.3
L_00f2: callvirt BattleTech.WeaponCategory get_Category()
L_00f7: bne.un Label8
L_00fc: ldarg.0
L_00fd: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0102: ldloc.s 5 (System.Int32)
L_0104: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0109: stloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_010b: br Label9
L_0110: Label7
L_0110: Label8
L_0110: ldloc.s 5 (System.Int32)
L_0112: ldc.i4.1
L_0113: sub
L_0114: stloc.s 5 (System.Int32)
L_0116: Label6
L_0116: ldloc.s 5 (System.Int32)
L_0118: ldc.i4.0
L_0119: bge Label10
L_011e: Label9
L_011e: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0120: ldnull
L_0121: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0126: brfalse Label11
L_012b: ldarg.0
L_012c: ldfld System.Int32 usedSlots
L_0131: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0133: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_0138: callvirt BattleTech.MechComponentDef get_Def()
L_013d: callvirt Int32 get_InventorySize()
L_0142: sub
L_0143: ldloc.3
L_0144: callvirt Int32 get_InventorySize()
L_0149: add
L_014a: ldarg.0
L_014b: ldfld System.Int32 maxSlots
L_0150: bgt Label12
L_0155: ldarg.0
L_0156: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0158: ldc.i4.1
L_0159: call Boolean OnRemoveItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_015e: pop
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldloc.s 4 (BattleTech.UI.MechLabItemSlotElement)
L_0167: callvirt Void ForceItemDrop(BattleTech.UI.MechLabItemSlotElement)
L_016c: ldc.i4.1
L_016d: stloc.1
L_016e: Label3
L_016e: Label4
L_016e: Label5
L_016e: Label11
L_016e: Label12
L_016e: ldloc.1
L_016f: brtrue Label13
L_0174: ldarg.0
L_0175: ldfld BattleTech.UI.MechLabPanel mechLab
L_017a: ldarg.0
L_017b: ldfld Localize.Text _dropErrorMessage
L_0180: callvirt Void ShowDropErrorMessage(Localize.Text)
L_0185: ldarg.0
L_0186: ldfld BattleTech.UI.MechLabPanel mechLab
L_018b: ldarg.1
L_018c: callvirt Void OnDrop(UnityEngine.EventSystems.PointerEventData)
L_0191: br Label17
L_0196: Label13
L_0196: ldarg.0
L_0197: ldloc.0
L_0198: ldc.i4.1
L_0199: call Boolean OnAddItem(BattleTech.UI.IMechLabDraggableItem, Boolean)
L_019e: stloc.2
L_019f: ldarg.0
L_01a0: call BattleTech.SimGameState get_Sim()
L_01a5: brfalse Label14
L_01aa: ldarg.0
L_01ab: call BattleTech.SimGameState get_Sim()
L_01b0: ldarg.0
L_01b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_01b6: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01bb: callvirt System.String get_MechID()
L_01c0: ldloc.0
L_01c1: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_01c6: ldarg.0
L_01c7: ldfld BattleTech.LocationLoadoutDef loadout
L_01cc: ldfld BattleTech.ChassisLocations Location
L_01d1: ldloc.0
L_01d2: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_01d7: callvirt BattleTech.WorkOrderEntry_InstallComponent CreateComponentInstallWorkOrder(System.String, BattleTech.MechComponentRef, BattleTech.ChassisLocations, BattleTech.ChassisLocations)
L_01dc: stloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01de: ldarg.0
L_01df: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e4: ldfld BattleTech.WorkOrderEntry_MechLab baseWorkOrder
L_01e9: ldloc.s 7 (BattleTech.WorkOrderEntry_InstallComponent)
L_01eb: callvirt Void AddSubEntry(BattleTech.WorkOrderEntry)
L_01f0: Label14
L_01f0: ldloc.0
L_01f1: ldarg.0
L_01f2: ldfld BattleTech.LocationLoadoutDef loadout
L_01f7: ldfld BattleTech.ChassisLocations Location
L_01fc: callvirt Void set_MountedLocation(BattleTech.ChassisLocations)
L_0201: ldarg.0
L_0202: ldfld BattleTech.UI.MechLabPanel mechLab
L_0207: ldloc.2
L_0208: callvirt Void ClearDragItem(Boolean)
L_020d: ldarg.0
L_020e: call Void RefreshHardpointData()
L_0213: ldarg.0
L_0214: ldfld BattleTech.UI.MechLabPanel mechLab
L_0219: ldc.i4.0
L_021a: callvirt Boolean ValidateLoadout(Boolean)
L_021f: pop
L_0220: Label15
L_0220: Label16
L_0220: Label17
L_0220: Label0
L_0220: ret
DONE

### Harmony id=MechEngineer.Features.AutoFix, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.AutoFix.AutoFixerSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.WeaponDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[WeaponDef](BattleTech.WeaponDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: ldc.i4.0
L_000a: call Void set_ComponentSubType(BattleTech.MechComponentType)
L_000f: ldarg.0
L_0010: call BattleTech.EffectData[] get_statusEffects()
L_0015: brtrue Label1
L_001a: ldarg.0
L_001b: ldc.i4.0
L_001c: newarr BattleTech.EffectData
L_0021: call Void set_statusEffects(BattleTech.EffectData[])
L_0026: Label1
L_0026: ldarg.0
L_0027: call Void UpgradeToDataDrivenEnums()
L_002c: ldarg.0
L_002d: call Void Postfix(BattleTech.WeaponDef)
L_0032: ret
DONE

### Patch BattleTech.UpgradeDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[UpgradeDef](BattleTech.UpgradeDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: call BattleTech.EffectData[] get_statusEffects()
L_000e: brtrue Label1
L_0013: ldarg.0
L_0014: ldc.i4.0
L_0015: newarr BattleTech.EffectData
L_001a: call Void set_statusEffects(BattleTech.EffectData[])
L_001f: Label1
L_001f: ldarg.0
L_0020: call Void Postfix(BattleTech.UpgradeDef)
L_0025: ret
DONE

### Patch BattleTech.ChassisDef, Void FromJSON(System.String)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.String FromJSON[ChassisDef](BattleTech.ChassisDef, System.String)
L_0007: pop
L_0008: ldarg.0
L_0009: call Void refreshLocationReferences()
L_000e: ldarg.0
L_000f: call Void Postfix(BattleTech.ChassisDef)
L_0014: ret
DONE

### Harmony id=MechEngineer.Features.Globals, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.Globals.GlobalsSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.UI.MechBayPanel, Void CloseMechBay()
L_0000: ldarg.0
L_0001: call BattleTech.SimGameState get_Sim()
L_0006: ldfld BattleTech.UI.SGRoomManager RoomManager
L_000b: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_0010: callvirt Void CloseMechBay()
L_0015: ldarg.0
L_0016: call Void Postfix(BattleTech.UI.MechBayPanel)
L_001b: ret
DONE

### Patch BattleTech.UI.MechBayPanel, Void SelectMech(BattleTech.UI.MechBayMechUnitElement, Boolean)
L_0000: Local var 0: System.Single
L_0000: ldarg.0
L_0001: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0006: ldnull
L_0007: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_000c: brfalse Label1
L_0011: ldarg.0
L_0012: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0017: ldc.i4.1
L_0018: ldc.i4.1
L_0019: callvirt Void SetFrameColor(BattleTech.UI.UIColor, Boolean)
L_001e: Label1
L_001e: ldarg.0
L_001f: ldarg.1
L_0020: stfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0025: ldc.r4 0.5
L_002a: stloc.0
L_002b: ldarg.0
L_002c: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0031: ldnull
L_0032: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0037: brfalse Label2
L_003c: ldarg.0
L_003d: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_0042: ldc.i4.6
L_0043: ldc.i4.1
L_0044: callvirt Void SetFrameColor(BattleTech.UI.UIColor, Boolean)
L_0049: ldarg.0
L_004a: ldarg.1
L_004b: ldfld System.Int32 baySlot
L_0050: stfld System.Int32 selectedBaySlot
L_0055: ldarg.0
L_0056: ldfld UnityEngine.GameObject selectedMechNameObj
L_005b: ldc.i4.0
L_005c: callvirt Void SetActive(Boolean)
L_0061: ldarg.0
L_0062: ldfld BattleTech.UI.MechSkinSelectorWidget skinSelector
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_006d: callvirt BattleTech.MechDef get_MechDef()
L_0072: callvirt Void TryShow(BattleTech.MechDef)
L_0077: ldarg.0
L_0078: ldfld BattleTech.SimGameState sim
L_007d: ldfld BattleTech.UI.SGRoomManager RoomManager
L_0082: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_0087: ldarg.0
L_0088: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_008d: callvirt BattleTech.MechDef get_MechDef()
L_0092: ldloc.0
L_0093: ldc.i4.0
L_0094: ldarg.2
L_0095: callvirt Void LoadMech(BattleTech.MechDef, Single, Boolean, Boolean)
L_009a: br Label3
L_009f: Label2
L_009f: ldarg.0
L_00a0: ldc.i4.m1
L_00a1: stfld System.Int32 selectedBaySlot
L_00a6: ldarg.0
L_00a7: ldfld UnityEngine.GameObject selectedMechNameObj
L_00ac: ldc.i4.0
L_00ad: callvirt Void SetActive(Boolean)
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.SimGameState sim
L_00b8: ldfld BattleTech.UI.SGRoomManager RoomManager
L_00bd: ldfld BattleTech.UI.SGRoomController_MechBay MechBayRoom
L_00c2: ldnull
L_00c3: ldloc.0
L_00c4: ldc.i4.0
L_00c5: ldc.i4.1
L_00c6: callvirt Void LoadMech(BattleTech.MechDef, Single, Boolean, Boolean)
L_00cb: Label3
L_00cb: ldarg.0
L_00cc: ldfld BattleTech.UI.HBSDOTweenToggle selectedMechNameBtnToggleObj
L_00d1: ldc.i4.0
L_00d2: ldc.i4.0
L_00d3: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00d8: pop
L_00d9: ldarg.0
L_00da: ldfld BattleTech.UI.MechBayMechInfoWidget mechInfoWidget
L_00df: ldarg.0
L_00e0: ldfld BattleTech.SimGameState sim
L_00e5: ldarg.0
L_00e6: ldarg.0
L_00e7: ldfld BattleTech.Data.DataManager dataManager
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.UI.MechBayMechUnitElement selectedMech
L_00f2: ldc.i4.1
L_00f3: ldc.i4.1
L_00f4: callvirt Void SetData(BattleTech.SimGameState, BattleTech.UI.MechBayPanel, BattleTech.Data.DataManager, BattleTech.UI.MechBayMechUnitElement, Boolean, Boolean)
L_00f9: ldarg.0
L_00fa: call Void Postfix(BattleTech.UI.MechBayPanel)
L_00ff: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void ExitMechLab()
L_0000: ldarg.0
L_0001: ldfld UnityEngine.Events.UnityAction onCloseCallback
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: ldfld UnityEngine.Events.UnityAction onCloseCallback
L_0011: callvirt Void Invoke()
L_0016: Label1
L_0016: ldarg.0
L_0017: ldc.i4.0
L_0018: stfld System.Boolean modifiedDialogShowing
L_001d: ldarg.0
L_001e: call Boolean get_IsSimGame()
L_0023: brfalse Label2
L_0028: ldarg.0
L_0029: call Void CloseShop()
L_002e: ldarg.0
L_002f: ldc.i4.0
L_0030: call Void Pool(Boolean)
L_0035: Label2
L_0035: ldarg.0
L_0036: call Void Postfix(BattleTech.UI.MechLabPanel)
L_003b: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Void LoadMech(BattleTech.MechDef)
L_0000: ldarg.0
L_0001: call Void ClearData()
L_0006: ldarg.1
L_0007: brtrue Label1
L_000c: ldsfld HBS.Logging.ILog logger
L_0011: ldstr "MechLab LoadMech received null data!"
L_0016: callvirt Void Log(System.Object)
L_001b: br Label3
L_0020: Label1
L_0020: ldarg.0
L_0021: ldarg.1
L_0022: stfld BattleTech.MechDef originalMechDef
L_0027: ldarg.0
L_0028: ldfld BattleTech.MechDef originalMechDef
L_002d: ldarg.0
L_002e: ldfld BattleTech.Data.DataManager dataManager
L_0033: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_0038: ldarg.0
L_0039: ldfld BattleTech.MechDef originalMechDef
L_003e: callvirt Void Refresh()
L_0043: ldarg.1
L_0044: ldarg.0
L_0045: ldfld BattleTech.Data.DataManager dataManager
L_004a: callvirt Void set_DataManager(BattleTech.Data.DataManager)
L_004f: ldarg.0
L_0050: ldarg.1
L_0051: ldnull
L_0052: ldc.i4.1
L_0053: newobj Void .ctor(MechDef, String, Boolean)
L_0058: stfld BattleTech.MechDef activeMechDef
L_005d: ldarg.0
L_005e: ldfld BattleTech.MechDef activeMechDef
L_0063: callvirt Void Refresh()
L_0068: ldarg.0
L_0069: ldarg.0
L_006a: ldfld BattleTech.MechDef activeMechDef
L_006f: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0074: newobj Void .ctor(IEnumerable`1)
L_0079: stfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_007e: ldarg.0
L_007f: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0084: ldarg.0
L_0085: ldfld BattleTech.MechDef activeMechDef
L_008a: ldc.i4.1
L_008b: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0090: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0095: ldarg.0
L_0096: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_009b: ldarg.0
L_009c: ldfld BattleTech.MechDef activeMechDef
L_00a1: ldc.i4.8
L_00a2: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00a7: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00ac: ldarg.0
L_00ad: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.MechDef activeMechDef
L_00b8: ldc.i4.4
L_00b9: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00be: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00c3: ldarg.0
L_00c4: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00c9: ldarg.0
L_00ca: ldfld BattleTech.MechDef activeMechDef
L_00cf: ldc.i4.s 16
L_00d1: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00d6: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00db: ldarg.0
L_00dc: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00e1: ldarg.0
L_00e2: ldfld BattleTech.MechDef activeMechDef
L_00e7: ldc.i4.2
L_00e8: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_00ed: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_00f2: ldarg.0
L_00f3: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00f8: ldarg.0
L_00f9: ldfld BattleTech.MechDef activeMechDef
L_00fe: ldc.i4.s 32
L_0100: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0105: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_010a: ldarg.0
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldarg.0
L_0111: ldfld BattleTech.MechDef activeMechDef
L_0116: ldc.i4.s 64
L_0118: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_011d: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_0122: ldarg.0
L_0123: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0128: ldarg.0
L_0129: ldfld BattleTech.MechDef activeMechDef
L_012e: ldc.i4 128
L_0133: callvirt BattleTech.LocationLoadoutDef GetLocationLoadoutDef(BattleTech.ChassisLocations)
L_0138: callvirt Void SetData(BattleTech.LocationLoadoutDef)
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabMechInfoWidget mechInfoWidget
L_0143: ldarg.0
L_0144: ldfld BattleTech.MechDef activeMechDef
L_0149: callvirt Void SetData(BattleTech.MechDef)
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_0154: ldarg.0
L_0155: ldfld BattleTech.MechDef activeMechDef
L_015a: callvirt BattleTech.ChassisDef get_Chassis()
L_015f: callvirt Single get_Tonnage()
L_0164: callvirt Void RefreshJumpJetOptions(Single)
L_0169: ldarg.0
L_016a: ldfld BattleTech.UI.MechLabStatBlockWidget statsWidget
L_016f: ldarg.0
L_0170: ldfld BattleTech.MechDef originalMechDef
L_0175: callvirt Void SetData(BattleTech.MechDef)
L_017a: ldarg.0
L_017b: ldc.i4.0
L_017c: call Void set_Modified(Boolean)
L_0181: ldarg.0
L_0182: ldfld UnityEngine.GameObject modifiedIcon
L_0187: ldarg.0
L_0188: call Boolean get_Modified()
L_018d: callvirt Void SetActive(Boolean)
L_0192: ldarg.0
L_0193: ldc.i4.1
L_0194: call Void set_Initialized(Boolean)
L_0199: ldarg.0
L_019a: ldfld BattleTech.UI.MechLabInventoryWidget inventoryWidget
L_019f: ldarg.0
L_01a0: call Boolean get_Initialized()
L_01a5: callvirt Void ToggleListVisible(Boolean)
L_01aa: ldarg.0
L_01ab: call Boolean get_IsSimGame()
L_01b0: brfalse Label2
L_01b5: ldarg.0
L_01b6: call Void CreateBaseWorkOrder()
L_01bb: Label2
L_01bb: ldarg.0
L_01bc: ldc.i4.1
L_01bd: call Boolean ValidateLoadout(Boolean)
L_01c2: pop
L_01c3: ldarg.0
L_01c4: call Void RefreshInventorySelectability()
L_01c9: Label3
L_01c9: ldarg.0
L_01ca: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01cf: ldarg.0
L_01d0: call Void Postfix(BattleTech.UI.MechLabPanel)
L_01d5: ret
DONE

### Harmony id=MechEngineer.Features.TurretMechComponents, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretMechComponents.TurretMechComponentSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.Turret, Void InitStats()
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: BattleTech.WeightClass
L_0000: Local var 2: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 3: System.Int32
L_0000: Local var 4: BattleTech.FakeVector3
L_0000: Local var 5: System.Int32
L_0000: Local var 6: BattleTech.FakeVector3
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.Turret)
L_0006: ldarg.0
L_0007: call Void InitStats()
L_000c: ldarg.0
L_000d: call BattleTech.Pilot get_pilot()
L_0012: ldarg.0
L_0013: call BattleTech.CombatGameState get_Combat()
L_0018: ldarg.0
L_0019: callvirt Void Init(BattleTech.CombatGameState, BattleTech.AbstractActor)
L_001e: ldarg.0
L_001f: call BattleTech.CombatGameState get_Combat()
L_0024: callvirt Boolean get_IsLoadingFromSave()
L_0029: brtrue Label1
L_002e: ldarg.0
L_002f: call BattleTech.TurretDef get_TurretDef()
L_0034: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0039: callvirt BattleTech.WeightClass get_weightClass()
L_003e: stloc.1
L_003f: ldloc.1
L_0040: ldc.i4.s 40
L_0042: bgt Label2
L_0047: ldloc.1
L_0048: ldc.i4.s 20
L_004a: beq Label3
L_004f: ldloc.1
L_0050: ldc.i4.s 40
L_0052: beq Label4
L_0057: br Label5
L_005c: Label2
L_005c: ldloc.1
L_005d: ldc.i4.s 60
L_005f: beq Label6
L_0064: ldloc.1
L_0065: ldc.i4.s 80
L_0067: beq Label7
L_006c: br Label8
L_0071: Label3
L_0071: ldarg.0
L_0072: ldarg.0
L_0073: call BattleTech.CombatGameState get_Combat()
L_0078: callvirt BattleTech.CombatGameConstants get_Constants()
L_007d: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_0082: ldfld System.Int32 PhaseLightTurret
L_0087: call Void set_Initiative(Int32)
L_008c: br Label9
L_0091: Label4
L_0091: ldarg.0
L_0092: ldarg.0
L_0093: call BattleTech.CombatGameState get_Combat()
L_0098: callvirt BattleTech.CombatGameConstants get_Constants()
L_009d: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00a2: ldfld System.Int32 PhaseMediumTurret
L_00a7: call Void set_Initiative(Int32)
L_00ac: br Label10
L_00b1: Label6
L_00b1: ldarg.0
L_00b2: ldarg.0
L_00b3: call BattleTech.CombatGameState get_Combat()
L_00b8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00bd: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00c2: ldfld System.Int32 PhaseHeavyTurret
L_00c7: call Void set_Initiative(Int32)
L_00cc: br Label11
L_00d1: Label7
L_00d1: ldarg.0
L_00d2: ldarg.0
L_00d3: call BattleTech.CombatGameState get_Combat()
L_00d8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00dd: callvirt BattleTech.PhaseConstantsDef get_Phase()
L_00e2: ldfld System.Int32 PhaseAssaultTurret
L_00e7: call Void set_Initiative(Int32)
L_00ec: Label5
L_00ec: Label8
L_00ec: Label9
L_00ec: Label10
L_00ec: Label11
L_00ec: ldarg.0
L_00ed: ldfld BattleTech.StatCollection statCollection
L_00f2: ldstr "BaseInitiative"
L_00f7: ldarg.0
L_00f8: call Int32 get_Initiative()
L_00fd: callvirt BattleTech.Statistic AddStatistic[Int32](System.String, Int32)
L_0102: pop
L_0103: ldarg.0
L_0104: call BattleTech.StatCollection get_StatCollection()
L_0109: ldstr "SpotterDistanceMultiplier"
L_010e: ldarg.0
L_010f: call BattleTech.TurretDef get_TurretDef()
L_0114: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0119: callvirt Single get_SpotterDistanceMultiplier()
L_011e: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0123: pop
L_0124: ldarg.0
L_0125: call BattleTech.StatCollection get_StatCollection()
L_012a: ldstr "SpotterDistanceAbsolute"
L_012f: ldc.r4 0
L_0134: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0139: pop
L_013a: ldarg.0
L_013b: call BattleTech.StatCollection get_StatCollection()
L_0140: ldstr "SpottingVisibilityMultiplier"
L_0145: ldarg.0
L_0146: call BattleTech.TurretDef get_TurretDef()
L_014b: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0150: callvirt Single get_VisibilityMultiplier()
L_0155: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_015a: pop
L_015b: ldarg.0
L_015c: call BattleTech.StatCollection get_StatCollection()
L_0161: ldstr "SpottingVisibilityAbsolute"
L_0166: ldc.r4 0
L_016b: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0170: pop
L_0171: ldarg.0
L_0172: call BattleTech.StatCollection get_StatCollection()
L_0177: ldstr "SensorDistanceMultiplier"
L_017c: ldarg.0
L_017d: call BattleTech.TurretDef get_TurretDef()
L_0182: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0187: callvirt Single get_SensorRangeMultiplier()
L_018c: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0191: pop
L_0192: ldarg.0
L_0193: call BattleTech.StatCollection get_StatCollection()
L_0198: ldstr "SensorDistanceAbsolute"
L_019d: ldc.r4 0
L_01a2: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01a7: pop
L_01a8: ldarg.0
L_01a9: call BattleTech.StatCollection get_StatCollection()
L_01ae: ldstr "SensorSignatureModifier"
L_01b3: ldarg.0
L_01b4: call BattleTech.TurretDef get_TurretDef()
L_01b9: callvirt BattleTech.TurretChassisDef get_Chassis()
L_01be: callvirt Single get_Signature()
L_01c3: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01c8: pop
L_01c9: ldarg.0
L_01ca: ldfld BattleTech.StatCollection statCollection
L_01cf: ldarg.0
L_01d0: ldc.i4.1
L_01d1: call System.String GetStringForArmorLocation(BattleTech.BuildingLocation)
L_01d6: ldarg.0
L_01d7: call BattleTech.TurretDef get_TurretDef()
L_01dc: ldfld System.Int32 AssignedArmor
L_01e1: conv.r4
L_01e2: ldarg.0
L_01e3: call Single get_ArmorMultiplier()
L_01e8: mul
L_01e9: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_01ee: pop
L_01ef: ldarg.0
L_01f0: ldfld BattleTech.StatCollection statCollection
L_01f5: ldarg.0
L_01f6: ldc.i4.1
L_01f7: call System.String GetStringForStructureLocation(BattleTech.BuildingLocation)
L_01fc: ldarg.0
L_01fd: call BattleTech.TurretDef get_TurretDef()
L_0202: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0207: callvirt Int32 get_MaxInternalStructure()
L_020c: conv.r4
L_020d: ldarg.0
L_020e: call Single get_StructureMultiplier()
L_0213: mul
L_0214: callvirt BattleTech.Statistic AddStatistic[Single](System.String, Single)
L_0219: pop
L_021a: ldarg.0
L_021b: ldfld BattleTech.StatCollection statCollection
L_0220: ldarg.0
L_0221: ldc.i4.1
L_0222: call System.String GetStringForStructureDamageLevel(BattleTech.BuildingLocation)
L_0227: ldarg.0
L_0228: call BattleTech.TurretDef get_TurretDef()
L_022d: callvirt BattleTech.LocationDamageLevel get_DamageLevel()
L_0232: callvirt BattleTech.Statistic AddStatistic[LocationDamageLevel](System.String, BattleTech.LocationDamageLevel)
L_0237: pop
L_0238: ldarg.0
L_0239: ldarg.0
L_023a: call Single get_TurretStructure()
L_023f: call Void set_StartingStructure(Single)
L_0244: ldarg.0
L_0245: ldarg.0
L_0246: call Single get_TurretArmor()
L_024b: call Void set_StartingArmor(Single)
L_0250: ldarg.0
L_0251: callvirt Void InitEffectStats()
L_0256: ldarg.0
L_0257: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_025c: callvirt Enumerator GetEnumerator()
L_0261: stloc.2
.try
{
	L_0262: br Label12
	L_0267: Label13
	L_0267: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0269: call BattleTech.MechComponent get_Current()
	L_026e: dup
	L_026f: callvirt Void Init()
	L_0274: callvirt Void InitStats()
	L_0279: Label12
	L_0279: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_027b: call Boolean MoveNext()
	L_0280: brtrue Label13
	L_0285: leave Label14
	L_028a: leave (autogenerated)
} // end try
.finally
{
	L_028f: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0291: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0297: callvirt Void Dispose()
	L_029c: endfinally
	L_029d: leave (autogenerated)
} // end handler
L_029e: Label14
L_029e: ldarg.0
L_029f: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_02a4: callvirt Enumerator GetEnumerator()
L_02a9: stloc.2
.try
{
	L_02aa: br Label15
	L_02af: Label16
	L_02af: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02b1: call BattleTech.MechComponent get_Current()
	L_02b6: callvirt Void InitPassiveSelfEffects()
	L_02bb: Label15
	L_02bb: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02bd: call Boolean MoveNext()
	L_02c2: brtrue Label16
	L_02c7: leave Label17
	L_02cc: leave (autogenerated)
} // end try
.finally
{
	L_02d1: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02d3: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_02d9: callvirt Void Dispose()
	L_02de: endfinally
	L_02df: leave (autogenerated)
} // end handler
L_02e0: Label17
L_02e0: ldarg.0
L_02e1: call Void AssignAmmoToWeapons()
L_02e6: br Label18
L_02eb: Label1
L_02eb: ldarg.0
L_02ec: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_02f1: callvirt Enumerator GetEnumerator()
L_02f6: stloc.2
.try
{
	L_02f7: br Label19
	L_02fc: Label20
	L_02fc: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_02fe: call BattleTech.MechComponent get_Current()
	L_0303: callvirt Void UpdateToAuraIfNeeded()
	L_0308: Label19
	L_0308: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_030a: call Boolean MoveNext()
	L_030f: brtrue Label20
	L_0314: leave Label21
	L_0319: leave (autogenerated)
} // end try
.finally
{
	L_031e: ldloca.s 2 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0320: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_0326: callvirt Void Dispose()
	L_032b: endfinally
	L_032c: leave (autogenerated)
} // end handler
L_032d: Label18
L_032d: Label21
L_032d: ldarg.0
L_032e: call Void CalcAndSetAlphaStrikesRemaining()
L_0333: ldarg.0
L_0334: ldfld BattleTech.Weapon ImaginaryLaserWeapon
L_0339: callvirt Void Init()
L_033e: ldarg.0
L_033f: call UnityEngine.Vector3 get_zero()
L_0344: stfld UnityEngine.Vector3 HighestLOSPosition
L_0349: ldarg.0
L_034a: ldarg.0
L_034b: call BattleTech.TurretDef get_TurretDef()
L_0350: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0355: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_035a: ldlen
L_035b: conv.i4
L_035c: newarr UnityEngine.Vector3
L_0361: stfld UnityEngine.Vector3[] originalLOSSourcePositions
L_0366: ldarg.0
L_0367: ldarg.0
L_0368: call BattleTech.TurretDef get_TurretDef()
L_036d: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0372: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_0377: ldlen
L_0378: conv.i4
L_0379: newarr UnityEngine.Vector3
L_037e: stfld UnityEngine.Vector3[] losSourcePositions
L_0383: ldc.i4.0
L_0384: stloc.3
L_0385: br Label22
L_038a: Label24
L_038a: ldarg.0
L_038b: call BattleTech.TurretDef get_TurretDef()
L_0390: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0395: ldfld BattleTech.FakeVector3[] LOSSourcePositions
L_039a: ldloc.3
L_039b: ldelem BattleTech.FakeVector3
L_03a0: stloc.s 4 (BattleTech.FakeVector3)
L_03a2: ldarg.0
L_03a3: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03a8: ldloc.3
L_03a9: ldloc.s 4 (BattleTech.FakeVector3)
L_03ab: ldfld System.Single x
L_03b0: ldloc.s 4 (BattleTech.FakeVector3)
L_03b2: ldfld System.Single y
L_03b7: ldloc.s 4 (BattleTech.FakeVector3)
L_03b9: ldfld System.Single z
L_03be: newobj Void .ctor(Single, Single, Single)
L_03c3: stelem UnityEngine.Vector3
L_03c8: ldarg.0
L_03c9: call UnityEngine.Vector3[] get_LOSSourcePositions()
L_03ce: ldloc.3
L_03cf: ldarg.0
L_03d0: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03d5: ldloc.3
L_03d6: ldelem UnityEngine.Vector3
L_03db: stelem UnityEngine.Vector3
L_03e0: ldarg.0
L_03e1: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_03e6: ldloc.3
L_03e7: ldelema UnityEngine.Vector3
L_03ec: ldfld System.Single y
L_03f1: ldarg.0
L_03f2: ldflda UnityEngine.Vector3 HighestLOSPosition
L_03f7: ldfld System.Single y
L_03fc: ble.un Label23
L_0401: ldarg.0
L_0402: ldflda UnityEngine.Vector3 HighestLOSPosition
L_0407: ldarg.0
L_0408: ldfld UnityEngine.Vector3[] originalLOSSourcePositions
L_040d: ldloc.3
L_040e: ldelema UnityEngine.Vector3
L_0413: ldfld System.Single y
L_0418: stfld System.Single y
L_041d: Label23
L_041d: ldloc.3
L_041e: ldc.i4.1
L_041f: add
L_0420: stloc.3
L_0421: Label22
L_0421: ldloc.3
L_0422: ldarg.0
L_0423: ldfld UnityEngine.Vector3[] losSourcePositions
L_0428: ldlen
L_0429: conv.i4
L_042a: blt Label24
L_042f: ldarg.0
L_0430: ldarg.0
L_0431: call BattleTech.TurretDef get_TurretDef()
L_0436: callvirt BattleTech.TurretChassisDef get_Chassis()
L_043b: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_0440: ldlen
L_0441: conv.i4
L_0442: newarr UnityEngine.Vector3
L_0447: stfld UnityEngine.Vector3[] originalLOSTargetPositions
L_044c: ldarg.0
L_044d: ldarg.0
L_044e: call BattleTech.TurretDef get_TurretDef()
L_0453: callvirt BattleTech.TurretChassisDef get_Chassis()
L_0458: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_045d: ldlen
L_045e: conv.i4
L_045f: newarr UnityEngine.Vector3
L_0464: stfld UnityEngine.Vector3[] losTargetPositions
L_0469: ldc.i4.0
L_046a: stloc.s 5 (System.Int32)
L_046c: br Label25
L_0471: Label26
L_0471: ldarg.0
L_0472: call BattleTech.TurretDef get_TurretDef()
L_0477: callvirt BattleTech.TurretChassisDef get_Chassis()
L_047c: ldfld BattleTech.FakeVector3[] LOSTargetPositions
L_0481: ldloc.s 5 (System.Int32)
L_0483: ldelem BattleTech.FakeVector3
L_0488: stloc.s 6 (BattleTech.FakeVector3)
L_048a: ldarg.0
L_048b: ldfld UnityEngine.Vector3[] originalLOSTargetPositions
L_0490: ldloc.s 5 (System.Int32)
L_0492: ldloc.s 6 (BattleTech.FakeVector3)
L_0494: ldfld System.Single x
L_0499: ldloc.s 6 (BattleTech.FakeVector3)
L_049b: ldfld System.Single y
L_04a0: ldloc.s 6 (BattleTech.FakeVector3)
L_04a2: ldfld System.Single z
L_04a7: newobj Void .ctor(Single, Single, Single)
L_04ac: stelem UnityEngine.Vector3
L_04b1: ldarg.0
L_04b2: ldfld UnityEngine.Vector3[] losTargetPositions
L_04b7: ldloc.s 5 (System.Int32)
L_04b9: ldarg.0
L_04ba: ldfld UnityEngine.Vector3[] originalLOSTargetPositions
L_04bf: ldloc.s 5 (System.Int32)
L_04c1: ldelem UnityEngine.Vector3
L_04c6: stelem UnityEngine.Vector3
L_04cb: ldloc.s 5 (System.Int32)
L_04cd: ldc.i4.1
L_04ce: add
L_04cf: stloc.s 5 (System.Int32)
L_04d1: Label25
L_04d1: ldloc.s 5 (System.Int32)
L_04d3: ldarg.0
L_04d4: ldfld UnityEngine.Vector3[] losTargetPositions
L_04d9: ldlen
L_04da: conv.i4
L_04db: blt Label26
L_04e0: ldarg.0
L_04e1: call Void UpdateLOSPositions()
L_04e6: ldarg.0
L_04e7: call BattleTech.CombatGameState get_Combat()
L_04ec: callvirt Boolean get_IsLoadingFromSave()
L_04f1: ldc.i4.0
L_04f2: ceq
L_04f4: stloc.0
L_04f5: ldarg.0
L_04f6: call BattleTech.Pilot get_pilot()
L_04fb: ldloc.0
L_04fc: ldarg.0
L_04fd: call BattleTech.CombatGameState get_Combat()
L_0502: callvirt Boolean get_IsLoadingFromSave()
L_0507: callvirt Void InitAbilities(Boolean, Boolean)
L_050c: ldarg.0
L_050d: ldloc.0
L_050e: call Void InitAbilities(Boolean)
L_0513: ldarg.0
L_0514: call Void AddTurretAbilitiesToPilot()
L_0519: ldarg.0
L_051a: call System.Collections.Generic.List`1[BattleTech.Ability] get_AuraAbilities()
L_051f: ldarg.0
L_0520: call BattleTech.Pilot get_pilot()
L_0525: callvirt System.Collections.Generic.List`1[BattleTech.Ability] get_AuraAbilities()
L_052a: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[BattleTech.Ability])
L_052f: ret
DONE

### Harmony id=MechEngineer.Features.TurretLimitedAmmo, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.Turret, System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: System.Int32
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0007: stloc.0
L_0008: ldc.i4.0
L_0009: stloc.1
L_000a: ldc.i4.0
L_000b: stloc.2
L_000c: br Label1
L_0011: Label4
L_0011: ldarg.0
L_0012: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0017: ldloc.2
L_0018: callvirt BattleTech.Weapon get_Item(Int32)
L_001d: call Boolean HasAmmo(BattleTech.Weapon)
L_0022: brfalse Label2
L_0027: ldc.i4.1
L_0028: stloc.1
L_0029: br Label3
L_002e: Label2
L_002e: ldloc.2
L_002f: ldc.i4.1
L_0030: add
L_0031: stloc.2
L_0032: Label1
L_0032: ldloc.2
L_0033: ldarg.0
L_0034: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0039: callvirt Int32 get_Count()
L_003e: blt Label4
L_0043: Label3
L_0043: ldarg.0
L_0044: callvirt Boolean get_IsDead()
L_0049: brtrue Label5
L_004e: ldloc.1
L_004f: brtrue Label6
L_0054: ldloc.0
L_0055: ldarg.0
L_0056: ldstr "OUT OF AMMO"
L_005b: ldc.i4.2
L_005c: ldc.i4.0
L_005d: newobj Void .ctor(ICombatant, String, MessageNature, Boolean)
L_0062: callvirt Void Add(BattleTech.IStackSequence)
L_0067: ldarg.0
L_0068: ldstr "Out of Ammo"
L_006d: ldc.i4.s 10
L_006f: ldc.i4.1
L_0070: ldc.i4.1
L_0071: ldc.i4.m1
L_0072: ldstr ""
L_0077: ldc.i4.0
L_0078: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_007d: ldarg.0
L_007e: ldarg.0
L_007f: call System.String get_GUID()
L_0084: callvirt Void HandleDeath(System.String)
L_0089: Label5
L_0089: Label6
L_0089: ldloc.0
L_008a: ret
DONE

### Patch BattleTech.Weapon, Int32 DecrementAmmo(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.AmmunitionBox
L_0000: Local var 3: System.Int32
L_0000: ldc.i4 0
L_0005: stloc 3 (System.Int32)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldloca 3 (System.Int32)
L_000f: call Boolean Prefix(BattleTech.Weapon, Int32, Int32 ByRef)
L_0014: brfalse Label0
L_0019: ldarg.0
L_001a: call Int32 get_ShotsWhenFired()
L_001f: stloc.0
L_0020: ldarg.0
L_0021: call BattleTech.AmmoCategoryValue get_AmmoCategoryValue()
L_0026: callvirt Boolean get_Is_NotSet()
L_002b: brtrue Label1
L_0030: ldarg.0
L_0031: ldfld BattleTech.AbstractActor parent
L_0036: brfalse Label2
L_003b: ldarg.0
L_003c: ldfld BattleTech.AbstractActor parent
L_0041: callvirt BattleTech.UnitType get_UnitType()
L_0046: ldc.i4.4
L_0047: bne.un Label3
L_004c: Label1
L_004c: ldloc.0
L_004d: br Label12
L_0052: Label2
L_0052: Label3
L_0052: ldarg.0
L_0053: call Int32 get_InternalAmmo()
L_0058: ldloc.0
L_0059: blt Label4
L_005e: ldarg.0
L_005f: call BattleTech.StatCollection get_StatCollection()
L_0064: ldarg.0
L_0065: call System.String get_uid()
L_006a: ldarg.1
L_006b: ldstr "InternalAmmo"
L_0070: ldc.i4.2
L_0071: ldloc.0
L_0072: ldc.i4.m1
L_0073: ldc.i4.1
L_0074: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0079: pop
L_007a: ldc.i4.0
L_007b: stloc.0
L_007c: br Label5
L_0081: Label4
L_0081: ldloc.0
L_0082: ldarg.0
L_0083: call Int32 get_InternalAmmo()
L_0088: sub
L_0089: stloc.0
L_008a: ldarg.0
L_008b: call BattleTech.StatCollection get_StatCollection()
L_0090: ldarg.0
L_0091: call System.String get_uid()
L_0096: ldarg.1
L_0097: ldstr "InternalAmmo"
L_009c: ldc.i4.0
L_009d: ldc.i4.0
L_009e: ldc.i4.m1
L_009f: ldc.i4.1
L_00a0: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00a5: pop
L_00a6: Label5
L_00a6: ldloc.0
L_00a7: ldc.i4.0
L_00a8: ble Label6
L_00ad: ldc.i4.0
L_00ae: stloc.1
L_00af: br Label7
L_00b4: Label11
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_00ba: ldloc.1
L_00bb: callvirt BattleTech.AmmunitionBox get_Item(Int32)
L_00c0: stloc.2
L_00c1: ldloc.2
L_00c2: callvirt Int32 get_CurrentAmmo()
L_00c7: ldloc.0
L_00c8: blt Label8
L_00cd: ldloc.2
L_00ce: callvirt BattleTech.StatCollection get_StatCollection()
L_00d3: ldarg.0
L_00d4: call System.String get_uid()
L_00d9: ldarg.1
L_00da: ldstr "CurrentAmmo"
L_00df: ldc.i4.2
L_00e0: ldloc.0
L_00e1: ldc.i4.m1
L_00e2: ldc.i4.1
L_00e3: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00e8: pop
L_00e9: ldc.i4.0
L_00ea: stloc.0
L_00eb: br Label9
L_00f0: Label8
L_00f0: ldloc.0
L_00f1: ldloc.2
L_00f2: callvirt Int32 get_CurrentAmmo()
L_00f7: sub
L_00f8: stloc.0
L_00f9: ldloc.2
L_00fa: callvirt BattleTech.StatCollection get_StatCollection()
L_00ff: ldarg.0
L_0100: call System.String get_uid()
L_0105: ldarg.1
L_0106: ldstr "CurrentAmmo"
L_010b: ldc.i4.0
L_010c: ldc.i4.0
L_010d: ldc.i4.m1
L_010e: ldc.i4.1
L_010f: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0114: pop
L_0115: Label9
L_0115: ldloc.0
L_0116: ldc.i4.0
L_0117: ble Label10
L_011c: ldloc.1
L_011d: ldc.i4.1
L_011e: add
L_011f: stloc.1
L_0120: Label7
L_0120: ldloc.1
L_0121: ldarg.0
L_0122: ldfld System.Collections.Generic.List`1[BattleTech.AmmunitionBox] ammoBoxes
L_0127: callvirt Int32 get_Count()
L_012c: blt Label11
L_0131: Label6
L_0131: Label10
L_0131: ldarg.0
L_0132: call Int32 get_ShotsWhenFired()
L_0137: ldloc.0
L_0138: sub
L_0139: Label12
L_0139: stloc 3 (System.Int32)
L_013a: Label0
L_013a: ldloc 3 (System.Int32)
L_013b: ret
DONE

### Harmony id=MechEngineer.Features.OverrideGhostVFX, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.OverrideGhostVFX.OverrideGhostVFXSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.PilotableActorRepresentation, Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_0000: Local var 0: BattleTech.Rendering.BTLight[]
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Boolean
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: BattleTech.ChassisLocations
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: System.Int32
L_0000: ldarg.0
L_0001: ldflda System.Nullable`1[BattleTech.VisibilityLevel] forcedPlayerVisibilityLevel
L_0006: call Boolean get_HasValue()
L_000b: brfalse Label1
L_0010: ldarg.0
L_0011: ldflda System.Nullable`1[BattleTech.VisibilityLevel] forcedPlayerVisibilityLevel
L_0016: call BattleTech.VisibilityLevel get_Value()
L_001b: starg.s 1
L_001d: Label1
L_001d: ldarg.1
L_001e: ldc.i4.s 9
L_0020: beq Label2
L_0025: ldarg.1
L_0026: ldc.i4.6
L_0027: bne.un Label3
L_002c: Label2
L_002c: ldarg.0
L_002d: ldfld UnityEngine.GameObject VisibleObject
L_0032: ldc.i4.1
L_0033: callvirt Void SetActive(Boolean)
L_0038: ldarg.0
L_0039: ldfld UnityEngine.GameObject BlipObjectUnknown
L_003e: ldc.i4.0
L_003f: callvirt Void SetActive(Boolean)
L_0044: ldarg.0
L_0045: ldfld UnityEngine.GameObject BlipObjectIdentified
L_004a: ldc.i4.0
L_004b: callvirt Void SetActive(Boolean)
L_0050: ldarg.0
L_0051: ldfld UnityEngine.CapsuleCollider mainCollider
L_0056: ldc.i4.1
L_0057: callvirt Void set_enabled(Boolean)
L_005c: ldarg.0
L_005d: call BattleTech.AbstractActor get_parentActor()
L_0062: callvirt Boolean get_IsGhosted()
L_0067: brfalse Label4
L_006c: ldarg.0
L_006d: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0072: ldc.i4.0
L_0073: callvirt Void SetActive(Boolean)
L_0078: ldarg.0
L_0079: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_007e: ldc.i4.1
L_007f: callvirt Void SetActive(Boolean)
L_0084: br Label5
L_0089: Label4
L_0089: ldarg.0
L_008a: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_008f: ldc.i4.0
L_0090: callvirt Void SetActive(Boolean)
L_0095: ldarg.0
L_0096: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_009b: ldc.i4.0
L_009c: callvirt Void SetActive(Boolean)
L_00a1: Label5
L_00a1: ldarg.0
L_00a2: call Boolean get_IsDead()
L_00a7: brtrue Label6
L_00ac: ldarg.0
L_00ad: callvirt Void StartPersistentAudio()
L_00b2: ldarg.0
L_00b3: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_00b8: brfalse Label7
L_00bd: ldarg.0
L_00be: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_00c3: stloc.0
L_00c4: ldc.i4.0
L_00c5: stloc.1
L_00c6: br Label8
L_00cb: Label9
L_00cb: ldloc.0
L_00cc: ldloc.1
L_00cd: ldelem.ref
L_00ce: ldc.i4.1
L_00cf: callvirt Void set_enabled(Boolean)
L_00d4: ldloc.1
L_00d5: ldc.i4.1
L_00d6: add
L_00d7: stloc.1
L_00d8: Label8
L_00d8: ldloc.1
L_00d9: ldloc.0
L_00da: ldlen
L_00db: conv.i4
L_00dc: blt Label9
L_00e1: Label6
L_00e1: Label7
L_00e1: ldarg.0
L_00e2: call Void ResumeAllPersistentVFX()
L_00e7: br Label10
L_00ec: Label3
L_00ec: ldarg.1
L_00ed: ldc.i4.0
L_00ee: ble Label11
L_00f3: ldarg.0
L_00f4: call Boolean get_IsDead()
L_00f9: brtrue Label12
L_00fe: ldarg.0
L_00ff: ldfld UnityEngine.GameObject VisibleObject
L_0104: ldc.i4.0
L_0105: callvirt Void SetActive(Boolean)
L_010a: ldarg.0
L_010b: call Void PauseAllPersistentVFX()
L_0110: ldarg.0
L_0111: callvirt Void StopPersistentAudio()
L_0116: ldarg.0
L_0117: ldfld UnityEngine.CapsuleCollider mainCollider
L_011c: ldc.i4.1
L_011d: callvirt Void set_enabled(Boolean)
L_0122: Label12
L_0122: ldarg.0
L_0123: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0128: brfalse Label13
L_012d: ldarg.0
L_012e: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0133: stloc.0
L_0134: ldc.i4.0
L_0135: stloc.1
L_0136: br Label14
L_013b: Label15
L_013b: ldloc.0
L_013c: ldloc.1
L_013d: ldelem.ref
L_013e: ldc.i4.0
L_013f: callvirt Void set_enabled(Boolean)
L_0144: ldloc.1
L_0145: ldc.i4.1
L_0146: add
L_0147: stloc.1
L_0148: Label14
L_0148: ldloc.1
L_0149: ldloc.0
L_014a: ldlen
L_014b: conv.i4
L_014c: blt Label15
L_0151: Label13
L_0151: ldarg.0
L_0152: ldarg.0
L_0153: call UnityEngine.Transform get_transform()
L_0158: callvirt UnityEngine.Vector3 get_position()
L_015d: ldarg.0
L_015e: call UnityEngine.Transform get_transform()
L_0163: callvirt UnityEngine.Quaternion get_rotation()
L_0168: call Void SetBlipPositionRotation(UnityEngine.Vector3, UnityEngine.Quaternion)
L_016d: ldarg.0
L_016e: call BattleTech.AbstractActor get_parentActor()
L_0173: callvirt BattleTech.CombatGameState get_Combat()
L_0178: callvirt BattleTech.CombatGameConstants get_Constants()
L_017d: callvirt BattleTech.VisibilityConstantsDef get_Visibility()
L_0182: ldfld System.Boolean GhostStateHidesBlips
L_0187: brfalse Label16
L_018c: ldarg.0
L_018d: call BattleTech.AbstractActor get_parentActor()
L_0192: callvirt Boolean get_IsGhosted()
L_0197: brfalse Label17
L_019c: ldarg.0
L_019d: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_01a2: ldc.i4.0
L_01a3: callvirt Void SetActive(Boolean)
L_01a8: ldarg.0
L_01a9: ldfld UnityEngine.GameObject BlipObjectUnknown
L_01ae: ldc.i4.0
L_01af: callvirt Void SetActive(Boolean)
L_01b4: ldarg.0
L_01b5: ldfld UnityEngine.GameObject BlipObjectIdentified
L_01ba: ldc.i4.0
L_01bb: callvirt Void SetActive(Boolean)
L_01c0: ldarg.0
L_01c1: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_01c6: ldc.i4.0
L_01c7: callvirt Void SetActive(Boolean)
L_01cc: ldarg.0
L_01cd: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_01d2: ldc.i4.0
L_01d3: callvirt Void SetActive(Boolean)
L_01d8: ldarg.0
L_01d9: ldfld UnityEngine.CapsuleCollider mainCollider
L_01de: ldc.i4.0
L_01df: callvirt Void set_enabled(Boolean)
L_01e4: br Label18
L_01e9: Label16
L_01e9: Label17
L_01e9: ldc.i4.0
L_01ea: stloc.2
L_01eb: ldarg.1
L_01ec: ldc.i4.4
L_01ed: sub
L_01ee: switch Labels19,20,21,22,23
L_0207: br Label24
L_020c: Label20
L_020c: Label23
L_020c: ldarg.0
L_020d: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0212: ldc.i4.0
L_0213: callvirt Void SetActive(Boolean)
L_0218: ldarg.0
L_0219: ldfld UnityEngine.GameObject BlipObjectIdentified
L_021e: ldc.i4.1
L_021f: callvirt Void SetActive(Boolean)
L_0224: ldarg.0
L_0225: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_022a: ldc.i4.0
L_022b: callvirt Void SetActive(Boolean)
L_0230: ldarg.0
L_0231: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0236: ldc.i4.0
L_0237: callvirt Void SetActive(Boolean)
L_023c: ldarg.0
L_023d: ldfld UnityEngine.GameObject BlipObjectIdentified
L_0242: callvirt Boolean get_activeSelf()
L_0247: stloc.2
L_0248: br Label25
L_024d: Label19
L_024d: ldarg.0
L_024e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0253: ldc.i4.1
L_0254: callvirt Void SetActive(Boolean)
L_0259: ldarg.0
L_025a: ldfld UnityEngine.GameObject BlipObjectIdentified
L_025f: ldc.i4.0
L_0260: callvirt Void SetActive(Boolean)
L_0265: ldarg.0
L_0266: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_026b: ldc.i4.0
L_026c: callvirt Void SetActive(Boolean)
L_0271: ldarg.0
L_0272: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0277: ldc.i4.0
L_0278: callvirt Void SetActive(Boolean)
L_027d: ldarg.0
L_027e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0283: callvirt Boolean get_activeSelf()
L_0288: stloc.2
L_0289: br Label26
L_028e: Label21
L_028e: Label22
L_028e: Label24
L_028e: ldsfld HBS.Logging.ILog initLogger
L_0293: ldarg.0
L_0294: call BattleTech.AbstractActor get_parentActor()
L_0299: callvirt System.String get_DisplayName()
L_029e: ldstr " OnPlayerVisibilityChanged got an invalid visLevel: "
L_02a3: ldarg.1
L_02a4: box BattleTech.VisibilityLevel
L_02a9: call System.String Concat(System.Object, System.Object, System.Object)
L_02ae: callvirt Void LogError(System.Object)
L_02b3: Label25
L_02b3: Label26
L_02b3: ldloc.2
L_02b4: brtrue Label27
L_02b9: ldc.i4 248
L_02be: call AkGameObj get_GlobalAudioObject()
L_02c3: ldnull
L_02c4: ldnull
L_02c5: call UInt32 PostEvent[AudioEventList_ui](AudioEventList_ui, AkGameObj, EventCallback, System.Object)
L_02ca: pop
L_02cb: br Label28
L_02d0: Label11
L_02d0: ldarg.0
L_02d1: call Boolean get_IsDead()
L_02d6: brtrue Label29
L_02db: ldarg.0
L_02dc: ldfld UnityEngine.GameObject VisibleObject
L_02e1: ldc.i4.0
L_02e2: callvirt Void SetActive(Boolean)
L_02e7: ldarg.0
L_02e8: call Void PauseAllPersistentVFX()
L_02ed: ldarg.0
L_02ee: callvirt Void StopPersistentAudio()
L_02f3: Label29
L_02f3: ldarg.0
L_02f4: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_02f9: brfalse Label30
L_02fe: ldarg.0
L_02ff: ldfld BattleTech.Rendering.BTLight[] VisibleLights
L_0304: stloc.0
L_0305: ldc.i4.0
L_0306: stloc.1
L_0307: br Label31
L_030c: Label32
L_030c: ldloc.0
L_030d: ldloc.1
L_030e: ldelem.ref
L_030f: ldc.i4.0
L_0310: callvirt Void set_enabled(Boolean)
L_0315: ldloc.1
L_0316: ldc.i4.1
L_0317: add
L_0318: stloc.1
L_0319: Label31
L_0319: ldloc.1
L_031a: ldloc.0
L_031b: ldlen
L_031c: conv.i4
L_031d: blt Label32
L_0322: Label30
L_0322: ldarg.0
L_0323: ldarg.0
L_0324: call UnityEngine.Transform get_transform()
L_0329: callvirt UnityEngine.Vector3 get_position()
L_032e: ldarg.0
L_032f: call UnityEngine.Transform get_transform()
L_0334: callvirt UnityEngine.Quaternion get_rotation()
L_0339: call Void SetBlipPositionRotation(UnityEngine.Vector3, UnityEngine.Quaternion)
L_033e: ldarg.0
L_033f: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0344: ldc.i4.0
L_0345: callvirt Void SetActive(Boolean)
L_034a: ldarg.0
L_034b: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0350: ldc.i4.0
L_0351: callvirt Void SetActive(Boolean)
L_0356: ldarg.0
L_0357: ldfld UnityEngine.GameObject BlipObjectIdentified
L_035c: ldc.i4.0
L_035d: callvirt Void SetActive(Boolean)
L_0362: ldarg.0
L_0363: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0368: ldc.i4.0
L_0369: callvirt Void SetActive(Boolean)
L_036e: ldarg.0
L_036f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0374: ldc.i4.0
L_0375: callvirt Void SetActive(Boolean)
L_037a: ldarg.0
L_037b: ldfld UnityEngine.CapsuleCollider mainCollider
L_0380: ldc.i4.0
L_0381: callvirt Void set_enabled(Boolean)
L_0386: Label10
L_0386: Label18
L_0386: Label27
L_0386: Label28
L_0386: ldarg.0
L_0387: call Boolean get_IsDead()
L_038c: brfalse Label33
L_0391: ldarg.0
L_0392: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_0397: ldc.i4.0
L_0398: callvirt Void SetActive(Boolean)
L_039d: ldarg.0
L_039e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_03a3: ldc.i4.0
L_03a4: callvirt Void SetActive(Boolean)
L_03a9: ldarg.0
L_03aa: ldfld UnityEngine.GameObject BlipObjectIdentified
L_03af: ldc.i4.0
L_03b0: callvirt Void SetActive(Boolean)
L_03b5: ldarg.0
L_03b6: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_03bb: ldc.i4.0
L_03bc: callvirt Void SetActive(Boolean)
L_03c1: ldarg.0
L_03c2: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_03c7: ldc.i4.0
L_03c8: callvirt Void SetActive(Boolean)
L_03cd: Label33
L_03cd: ldarg.0
L_03ce: call Boolean get_IsDead()
L_03d3: brtrue Label34
L_03d8: ldarg.0
L_03d9: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_03de: brfalse Label35
L_03e3: ldc.i4.0
L_03e4: stloc.3
L_03e5: br Label36
L_03ea: Label42
L_03ea: ldarg.0
L_03eb: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_03f0: ldloc.3
L_03f1: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_03f6: ldnull
L_03f7: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_03fc: brfalse Label37
L_0401: ldarg.0
L_0402: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_0407: ldloc.3
L_0408: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_040d: callvirt Int32 get_mountedLocation()
L_0412: stloc.s 4 (System.Int32)
L_0414: ldloc.s 4 (System.Int32)
L_0416: stloc.s 5 (BattleTech.ChassisLocations)
L_0418: ldarg.0
L_0419: call BattleTech.AbstractActor get_parentActor()
L_041e: ldloc.s 4 (System.Int32)
L_0420: callvirt Single StructureForLocation(Int32)
L_0425: ldc.r4 0
L_042a: cgt
L_042c: stloc.s 6 (System.Boolean)
L_042e: ldloc.s 5 (BattleTech.ChassisLocations)
L_0430: ldc.i4.2
L_0431: beq Label38
L_0436: ldloc.s 5 (BattleTech.ChassisLocations)
L_0438: ldc.i4.s 32
L_043a: beq Label39
L_043f: ldc.i4.1
L_0440: stloc.s 6 (System.Boolean)
L_0442: Label38
L_0442: Label39
L_0442: ldloc.s 6 (System.Boolean)
L_0444: brfalse Label40
L_0449: ldarg.0
L_044a: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_044f: ldloc.3
L_0450: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_0455: ldarg.1
L_0456: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_045b: br Label41
L_0460: Label40
L_0460: ldarg.0
L_0461: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_0466: ldloc.3
L_0467: callvirt BattleTech.WeaponRepresentation get_Item(Int32)
L_046c: ldc.i4.0
L_046d: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_0472: Label37
L_0472: Label41
L_0472: ldloc.3
L_0473: ldc.i4.1
L_0474: add
L_0475: stloc.3
L_0476: Label36
L_0476: ldloc.3
L_0477: ldarg.0
L_0478: ldfld System.Collections.Generic.List`1[BattleTech.WeaponRepresentation] weaponReps
L_047d: callvirt Int32 get_Count()
L_0482: blt Label42
L_0487: Label35
L_0487: ldarg.0
L_0488: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_048d: brfalse Label43
L_0492: ldc.i4.0
L_0493: stloc.s 7 (System.Int32)
L_0495: br Label44
L_049a: Label46
L_049a: ldarg.0
L_049b: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04a0: ldloc.s 7 (System.Int32)
L_04a2: callvirt BattleTech.ComponentRepresentation get_Item(Int32)
L_04a7: ldnull
L_04a8: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_04ad: brfalse Label45
L_04b2: ldarg.0
L_04b3: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04b8: ldloc.s 7 (System.Int32)
L_04ba: callvirt BattleTech.ComponentRepresentation get_Item(Int32)
L_04bf: ldarg.1
L_04c0: callvirt Void OnPlayerVisibilityChanged(BattleTech.VisibilityLevel)
L_04c5: Label45
L_04c5: ldloc.s 7 (System.Int32)
L_04c7: ldc.i4.1
L_04c8: add
L_04c9: stloc.s 7 (System.Int32)
L_04cb: Label44
L_04cb: ldloc.s 7 (System.Int32)
L_04cd: ldarg.0
L_04ce: ldfld System.Collections.Generic.List`1[BattleTech.ComponentRepresentation] miscComponentReps
L_04d3: callvirt Int32 get_Count()
L_04d8: blt Label46
L_04dd: Label34
L_04dd: Label43
L_04dd: ldarg.0
L_04de: call Void Postfix(BattleTech.PilotableActorRepresentation)
L_04e3: ret
DONE

### Patch BattleTech.GameRepresentation, UnityEngine.ParticleSystem PlayVFXAt(UnityEngine.Transform, UnityEngine.Vector3, System.String, Boolean, UnityEngine.Vector3, Boolean, Single)
L_0000: Local var 0: UnityEngine.GameObject
L_0000: Local var 1: UnityEngine.ParticleSystem
L_0000: Local var 2: UnityEngine.Transform
L_0000: Local var 3: BattleTech.Rendering.BTWindZone
L_0000: Local var 4: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 5: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: AutoPoolObject
L_0000: Local var 8: System.Collections.Generic.List`1[[UnityEngine.ParticleSystem, UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 9: UnityEngine.ParticleSystem
L_0000: ldnull
L_0001: stloc 9 (UnityEngine.ParticleSystem)
L_0003: ldarg 3
L_0009: call Boolean Prefix(System.String)
L_000e: brfalse Label0
L_0013: ldarg.3
L_0014: call Boolean IsNullOrEmpty(System.String)
L_0019: brfalse Label1
L_001e: ldnull
L_001f: br Label19
L_0024: Label1
L_0024: ldarg.0
L_0025: call BattleTech.ICombatant get_parentCombatant()
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: callvirt BattleTech.Data.DataManager get_DataManager()
L_0034: ldarg.3
L_0035: ldc.i4.s 45
L_0037: ldloca.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0039: initobj System.Nullable`1[UnityEngine.Vector3]
L_003f: ldloc.s 5 (System.Nullable`1[UnityEngine.Vector3])
L_0041: ldloca.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_0043: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0049: ldloc.s 6 (System.Nullable`1[UnityEngine.Quaternion])
L_004b: ldnull
L_004c: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0051: stloc.0
L_0052: ldloc.0
L_0053: ldnull
L_0054: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0059: brfalse Label2
L_005e: ldsfld HBS.Logging.ILog initLogger
L_0063: ldstr "Error instantiating VFX "
L_0068: ldarg.3
L_0069: call System.String Concat(System.String, System.String)
L_006e: ldarg.0
L_006f: callvirt Void LogError(System.Object, UnityEngine.Object)
L_0074: ldnull
L_0075: br Label20
L_007a: Label2
L_007a: ldloc.0
L_007b: callvirt UnityEngine.ParticleSystem GetComponent[ParticleSystem]()
L_0080: stloc.1
L_0081: ldloc.1
L_0082: ldc.i4.1
L_0083: callvirt Void Stop(Boolean)
L_0088: ldloc.1
L_0089: ldc.i4.1
L_008a: callvirt Void Clear(Boolean)
L_008f: ldloc.0
L_0090: callvirt UnityEngine.Transform get_transform()
L_0095: stloc.2
L_0096: ldloc.2
L_0097: ldnull
L_0098: callvirt Void SetParent(UnityEngine.Transform)
L_009d: ldloc.0
L_009e: ldc.i4.1
L_009f: callvirt BattleTech.Rendering.BTWindZone GetComponentInChildren[BTWindZone](Boolean)
L_00a4: stloc.3
L_00a5: ldloc.3
L_00a6: ldnull
L_00a7: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00ac: brfalse Label3
L_00b1: ldloc.3
L_00b2: callvirt Boolean get_enabled()
L_00b7: brfalse Label4
L_00bc: ldloc.3
L_00bd: callvirt Void ResetZero()
L_00c2: Label3
L_00c2: Label4
L_00c2: ldloc.0
L_00c3: ldc.i4.1
L_00c4: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_00c9: stloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_00cb: ldarg.s 4
L_00cd: brfalse Label5
L_00d2: ldloc.2
L_00d3: ldarg.1
L_00d4: ldc.i4.0
L_00d5: callvirt Void SetParent(UnityEngine.Transform, Boolean)
L_00da: ldloc.2
L_00db: ldarg.2
L_00dc: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00e1: br Label6
L_00e6: Label5
L_00e6: ldloc.2
L_00e7: call UnityEngine.Vector3 get_zero()
L_00ec: callvirt Void set_localPosition(UnityEngine.Vector3)
L_00f1: ldarg.1
L_00f2: ldnull
L_00f3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00f8: brfalse Label7
L_00fd: ldloc.2
L_00fe: ldarg.1
L_00ff: callvirt UnityEngine.Vector3 get_position()
L_0104: callvirt Void set_position(UnityEngine.Vector3)
L_0109: Label7
L_0109: ldloc.2
L_010a: dup
L_010b: callvirt UnityEngine.Vector3 get_position()
L_0110: ldarg.2
L_0111: call UnityEngine.Vector3 op_Addition(UnityEngine.Vector3, UnityEngine.Vector3)
L_0116: callvirt Void set_position(UnityEngine.Vector3)
L_011b: Label6
L_011b: ldarg.s 5
L_011d: call UnityEngine.Vector3 get_zero()
L_0122: call Boolean op_Inequality(UnityEngine.Vector3, UnityEngine.Vector3)
L_0127: brfalse Label8
L_012c: ldloc.2
L_012d: ldarg.s 5
L_012f: callvirt Void LookAt(UnityEngine.Vector3)
L_0134: br Label9
L_0139: Label8
L_0139: ldloc.2
L_013a: call UnityEngine.Quaternion get_identity()
L_013f: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0144: Label9
L_0144: ldloc.2
L_0145: call UnityEngine.Vector3 get_one()
L_014a: callvirt Void set_localScale(UnityEngine.Vector3)
L_014f: ldarg.s 6
L_0151: brfalse Label10
L_0156: ldloc.0
L_0157: callvirt AutoPoolObject GetComponent[AutoPoolObject]()
L_015c: stloc.s 7 (AutoPoolObject)
L_015e: ldloc.s 7 (AutoPoolObject)
L_0160: ldnull
L_0161: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0166: brfalse Label11
L_016b: ldloc.0
L_016c: callvirt AutoPoolObject AddComponent[AutoPoolObject]()
L_0171: stloc.s 7 (AutoPoolObject)
L_0173: Label11
L_0173: ldarg.s 7
L_0175: ldc.r4 0
L_017a: ble.un Label12
L_017f: ldloc.s 7 (AutoPoolObject)
L_0181: ldarg.0
L_0182: call BattleTech.ICombatant get_parentCombatant()
L_0187: callvirt BattleTech.CombatGameState get_Combat()
L_018c: callvirt BattleTech.Data.DataManager get_DataManager()
L_0191: ldarg.3
L_0192: ldarg.s 7
L_0194: callvirt Void Init(BattleTech.Data.DataManager, System.String, Single)
L_0199: br Label13
L_019e: Label12
L_019e: ldloc.s 7 (AutoPoolObject)
L_01a0: ldarg.0
L_01a1: call BattleTech.ICombatant get_parentCombatant()
L_01a6: callvirt BattleTech.CombatGameState get_Combat()
L_01ab: callvirt BattleTech.Data.DataManager get_DataManager()
L_01b0: ldarg.3
L_01b1: ldloc.1
L_01b2: callvirt Void Init(BattleTech.Data.DataManager, System.String, UnityEngine.ParticleSystem)
L_01b7: br Label14
L_01bc: Label10
L_01bc: ldnull
L_01bd: stloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01bf: ldarg.0
L_01c0: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_01c5: ldarg.3
L_01c6: ldloca.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01c8: callvirt Boolean TryGetValue(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem] ByRef)
L_01cd: brfalse Label15
L_01d2: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01d4: ldloc.1
L_01d5: callvirt Void Add(UnityEngine.ParticleSystem)
L_01da: ldarg.0
L_01db: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_01e0: ldarg.3
L_01e1: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01e3: callvirt Void set_Item(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01e8: br Label16
L_01ed: Label15
L_01ed: newobj Void .ctor()
L_01f2: stloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01f4: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_01f6: ldloc.1
L_01f7: callvirt Void Add(UnityEngine.ParticleSystem)
L_01fc: ldarg.0
L_01fd: ldfld System.Collections.Generic.Dictionary`2[System.String,System.Collections.Generic.List`1[UnityEngine.ParticleSystem]] persistentVFXParticles
L_0202: ldarg.3
L_0203: ldloc.s 8 (System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_0205: callvirt Void set_Item(System.String, System.Collections.Generic.List`1[UnityEngine.ParticleSystem])
L_020a: Label13
L_020a: Label14
L_020a: Label16
L_020a: ldloc.1
L_020b: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_0210: ldloc.1
L_0211: ldc.i4.1
L_0212: callvirt Void Play(Boolean)
L_0217: ldloc.3
L_0218: ldnull
L_0219: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_021e: brfalse Label17
L_0223: ldloc.3
L_0224: callvirt Void PlayAnimCurve()
L_0229: Label17
L_0229: ldloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_022b: ldnull
L_022c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0231: brfalse Label18
L_0236: ldloc.s 4 (BattleTech.Rendering.BTLightAnimator)
L_0238: callvirt Void PlayAnimation()
L_023d: Label18
L_023d: ldloc.1
L_023e: Label19
L_023e: Label20
L_023e: stloc 9 (UnityEngine.ParticleSystem)
L_0240: Label0
L_0240: ldloc 9 (UnityEngine.ParticleSystem)
L_0242: ret
DONE

### Harmony id=MechEngineer.Features.OmniSlots, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.35
### Patch BattleTech.UI.MechLabMechInfoWidget, Void GetTotalHardpoints()
L_0000: Local var 0: System.Int32
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldarg.0
L_0003: ldfld BattleTech.UI.MechLabPanel mechLab
L_0008: ldfld BattleTech.MechDef activeMechDef
L_000d: brfalse Label1
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.MechLabPanel mechLab
L_0019: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_001e: ldfld System.Int32 totalBallisticHardpoints
L_0023: ldarg.0
L_0024: ldfld BattleTech.UI.MechLabPanel mechLab
L_0029: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_002e: ldfld System.Int32 totalBallisticHardpoints
L_0033: add
L_0034: ldarg.0
L_0035: ldfld BattleTech.UI.MechLabPanel mechLab
L_003a: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_003f: ldfld System.Int32 totalBallisticHardpoints
L_0044: add
L_0045: ldarg.0
L_0046: ldfld BattleTech.UI.MechLabPanel mechLab
L_004b: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0050: ldfld System.Int32 totalBallisticHardpoints
L_0055: add
L_0056: ldarg.0
L_0057: ldfld BattleTech.UI.MechLabPanel mechLab
L_005c: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0061: ldfld System.Int32 totalBallisticHardpoints
L_0066: add
L_0067: ldarg.0
L_0068: ldfld BattleTech.UI.MechLabPanel mechLab
L_006d: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0072: ldfld System.Int32 totalBallisticHardpoints
L_0077: add
L_0078: ldarg.0
L_0079: ldfld BattleTech.UI.MechLabPanel mechLab
L_007e: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0083: ldfld System.Int32 totalBallisticHardpoints
L_0088: add
L_0089: ldarg.0
L_008a: ldfld BattleTech.UI.MechLabPanel mechLab
L_008f: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0094: ldfld System.Int32 totalBallisticHardpoints
L_0099: add
L_009a: stfld System.Int32 totalBallisticHardpoints
L_009f: ldarg.0
L_00a0: ldarg.0
L_00a1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00a6: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_00ab: ldfld System.Int32 totalEnergyHardpoints
L_00b0: ldarg.0
L_00b1: ldfld BattleTech.UI.MechLabPanel mechLab
L_00b6: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_00bb: ldfld System.Int32 totalEnergyHardpoints
L_00c0: add
L_00c1: ldarg.0
L_00c2: ldfld BattleTech.UI.MechLabPanel mechLab
L_00c7: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_00cc: ldfld System.Int32 totalEnergyHardpoints
L_00d1: add
L_00d2: ldarg.0
L_00d3: ldfld BattleTech.UI.MechLabPanel mechLab
L_00d8: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_00dd: ldfld System.Int32 totalEnergyHardpoints
L_00e2: add
L_00e3: ldarg.0
L_00e4: ldfld BattleTech.UI.MechLabPanel mechLab
L_00e9: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_00ee: ldfld System.Int32 totalEnergyHardpoints
L_00f3: add
L_00f4: ldarg.0
L_00f5: ldfld BattleTech.UI.MechLabPanel mechLab
L_00fa: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_00ff: ldfld System.Int32 totalEnergyHardpoints
L_0104: add
L_0105: ldarg.0
L_0106: ldfld BattleTech.UI.MechLabPanel mechLab
L_010b: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0110: ldfld System.Int32 totalEnergyHardpoints
L_0115: add
L_0116: ldarg.0
L_0117: ldfld BattleTech.UI.MechLabPanel mechLab
L_011c: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0121: ldfld System.Int32 totalEnergyHardpoints
L_0126: add
L_0127: stfld System.Int32 totalEnergyHardpoints
L_012c: ldarg.0
L_012d: ldarg.0
L_012e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0133: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0138: ldfld System.Int32 totalMissileHardpoints
L_013d: ldarg.0
L_013e: ldfld BattleTech.UI.MechLabPanel mechLab
L_0143: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0148: ldfld System.Int32 totalMissileHardpoints
L_014d: add
L_014e: ldarg.0
L_014f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0154: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0159: ldfld System.Int32 totalMissileHardpoints
L_015e: add
L_015f: ldarg.0
L_0160: ldfld BattleTech.UI.MechLabPanel mechLab
L_0165: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_016a: ldfld System.Int32 totalMissileHardpoints
L_016f: add
L_0170: ldarg.0
L_0171: ldfld BattleTech.UI.MechLabPanel mechLab
L_0176: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_017b: ldfld System.Int32 totalMissileHardpoints
L_0180: add
L_0181: ldarg.0
L_0182: ldfld BattleTech.UI.MechLabPanel mechLab
L_0187: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_018c: ldfld System.Int32 totalMissileHardpoints
L_0191: add
L_0192: ldarg.0
L_0193: ldfld BattleTech.UI.MechLabPanel mechLab
L_0198: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: add
L_01a3: ldarg.0
L_01a4: ldfld BattleTech.UI.MechLabPanel mechLab
L_01a9: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_01ae: ldfld System.Int32 totalMissileHardpoints
L_01b3: add
L_01b4: stfld System.Int32 totalMissileHardpoints
L_01b9: ldarg.0
L_01ba: ldarg.0
L_01bb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01c0: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_01c5: ldfld System.Int32 totalSmallHardpoints
L_01ca: ldarg.0
L_01cb: ldfld BattleTech.UI.MechLabPanel mechLab
L_01d0: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_01d5: ldfld System.Int32 totalSmallHardpoints
L_01da: add
L_01db: ldarg.0
L_01dc: ldfld BattleTech.UI.MechLabPanel mechLab
L_01e1: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_01e6: ldfld System.Int32 totalSmallHardpoints
L_01eb: add
L_01ec: ldarg.0
L_01ed: ldfld BattleTech.UI.MechLabPanel mechLab
L_01f2: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_01f7: ldfld System.Int32 totalSmallHardpoints
L_01fc: add
L_01fd: ldarg.0
L_01fe: ldfld BattleTech.UI.MechLabPanel mechLab
L_0203: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0208: ldfld System.Int32 totalSmallHardpoints
L_020d: add
L_020e: ldarg.0
L_020f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0214: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0219: ldfld System.Int32 totalSmallHardpoints
L_021e: add
L_021f: ldarg.0
L_0220: ldfld BattleTech.UI.MechLabPanel mechLab
L_0225: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_022a: ldfld System.Int32 totalSmallHardpoints
L_022f: add
L_0230: ldarg.0
L_0231: ldfld BattleTech.UI.MechLabPanel mechLab
L_0236: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_023b: ldfld System.Int32 totalSmallHardpoints
L_0240: add
L_0241: stfld System.Int32 totalSmallHardpoints
L_0246: ldarg.0
L_0247: ldfld BattleTech.UI.MechLabPanel mechLab
L_024c: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0251: ldfld System.Int32 currentJumpjetCount
L_0256: ldarg.0
L_0257: ldfld BattleTech.UI.MechLabPanel mechLab
L_025c: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0261: ldfld System.Int32 currentJumpjetCount
L_0266: add
L_0267: ldarg.0
L_0268: ldfld BattleTech.UI.MechLabPanel mechLab
L_026d: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0272: ldfld System.Int32 currentJumpjetCount
L_0277: add
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.MechLabPanel mechLab
L_027e: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0283: ldfld System.Int32 currentJumpjetCount
L_0288: add
L_0289: ldarg.0
L_028a: ldfld BattleTech.UI.MechLabPanel mechLab
L_028f: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0294: ldfld System.Int32 currentJumpjetCount
L_0299: add
L_029a: ldarg.0
L_029b: ldfld BattleTech.UI.MechLabPanel mechLab
L_02a0: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_02a5: ldfld System.Int32 currentJumpjetCount
L_02aa: add
L_02ab: ldarg.0
L_02ac: ldfld BattleTech.UI.MechLabPanel mechLab
L_02b1: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_02b6: ldfld System.Int32 currentJumpjetCount
L_02bb: add
L_02bc: ldarg.0
L_02bd: ldfld BattleTech.UI.MechLabPanel mechLab
L_02c2: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_02c7: ldfld System.Int32 currentJumpjetCount
L_02cc: add
L_02cd: stloc.0
L_02ce: ldarg.0
L_02cf: ldarg.0
L_02d0: ldfld BattleTech.UI.MechLabPanel mechLab
L_02d5: ldfld BattleTech.MechDef activeMechDef
L_02da: callvirt BattleTech.ChassisDef get_Chassis()
L_02df: callvirt Int32 get_MaxJumpjets()
L_02e4: stfld System.Int32 totalJumpjets
L_02e9: Label1
L_02e9: ldarg.0
L_02ea: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_02ef: ldc.i4.0
L_02f0: ldelem.ref
L_02f1: ldc.i4.1
L_02f2: ldstr "{0}"
L_02f7: ldarg.0
L_02f8: ldfld System.Int32 totalBallisticHardpoints
L_02fd: box System.Int32
L_0302: call System.String Format(System.String, System.Object)
L_0307: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_030c: ldarg.0
L_030d: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0312: ldc.i4.1
L_0313: ldelem.ref
L_0314: ldc.i4.2
L_0315: ldstr "{0}"
L_031a: ldarg.0
L_031b: ldfld System.Int32 totalEnergyHardpoints
L_0320: box System.Int32
L_0325: call System.String Format(System.String, System.Object)
L_032a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_032f: ldarg.0
L_0330: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0335: ldc.i4.2
L_0336: ldelem.ref
L_0337: ldc.i4.3
L_0338: ldstr "{0}"
L_033d: ldarg.0
L_033e: ldfld System.Int32 totalMissileHardpoints
L_0343: box System.Int32
L_0348: call System.String Format(System.String, System.Object)
L_034d: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0352: ldarg.0
L_0353: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0358: ldc.i4.3
L_0359: ldelem.ref
L_035a: ldc.i4.4
L_035b: ldstr "{0}"
L_0360: ldarg.0
L_0361: ldfld System.Int32 totalSmallHardpoints
L_0366: box System.Int32
L_036b: call System.String Format(System.String, System.Object)
L_0370: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0375: ldarg.0
L_0376: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_037b: ldc.i4.4
L_037c: ldelem.ref
L_037d: ldc.i4.5
L_037e: ldstr "{0} / {1}"
L_0383: ldloc.0
L_0384: box System.Int32
L_0389: ldarg.0
L_038a: ldfld System.Int32 totalJumpjets
L_038f: box System.Int32
L_0394: call System.String Format(System.String, System.Object, System.Object)
L_0399: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_039e: ldarg.0
L_039f: ldarg.0
L_03a0: ldfld BattleTech.UI.MechLabPanel mechLab
L_03a5: ldarg.0
L_03a6: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03ab: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel, BattleTech.UI.MechLabHardpointElement[])
L_03b0: ldarg.0
L_03b1: ldarg.0
L_03b2: ldflda BattleTech.UI.MechLabPanel mechLab
L_03b7: ldarg.0
L_03b8: ldflda BattleTech.UI.MechLabHardpointElement[] hardpoints
L_03bd: call Void Postfix(BattleTech.UI.MechLabMechInfoWidget, BattleTech.UI.MechLabPanel ByRef, BattleTech.UI.MechLabHardpointElement[] ByRef)
L_03c2: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean ValidateAdd(BattleTech.MechComponentDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: BattleTech.WeaponDef
L_0000: Local var 3: BattleTech.WeaponCategory
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponentRef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 6: BattleTech.MechComponentType
L_0000: ldarg.0
L_0001: ldfld BattleTech.LocationLoadoutDef loadout
L_0006: ldfld System.Single CurrentInternalStructure
L_000b: ldc.r4 0
L_0010: bgt.un Label1
L_0015: ldarg.0
L_0016: ldstr "Cannot add {0} to {1}: The location is Destroyed."
L_001b: ldc.i4.2
L_001c: newarr System.Object
L_0021: dup
L_0022: ldc.i4.0
L_0023: ldarg.1
L_0024: callvirt BattleTech.DescriptionDef get_Description()
L_0029: callvirt System.String get_Name()
L_002e: stelem.ref
L_002f: dup
L_0030: ldc.i4.1
L_0031: ldarg.0
L_0032: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0037: callvirt System.String get_text()
L_003c: stelem.ref
L_003d: call Void SetDropErrorMessage(System.String, System.Object[])
L_0042: ldc.i4.0
L_0043: br Label28
L_0048: Label1
L_0048: ldarg.0
L_0049: ldfld System.Int32 usedSlots
L_004e: ldarg.1
L_004f: callvirt Int32 get_InventorySize()
L_0054: add
L_0055: ldarg.0
L_0056: ldfld System.Int32 maxSlots
L_005b: ble Label2
L_0060: ldarg.0
L_0061: ldstr "Cannot add {0} to {1}: Not enough free slots."
L_0066: ldc.i4.2
L_0067: newarr System.Object
L_006c: dup
L_006d: ldc.i4.0
L_006e: ldarg.1
L_006f: callvirt BattleTech.DescriptionDef get_Description()
L_0074: callvirt System.String get_Name()
L_0079: stelem.ref
L_007a: dup
L_007b: ldc.i4.1
L_007c: ldarg.0
L_007d: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0082: callvirt System.String get_text()
L_0087: stelem.ref
L_0088: call Void SetDropErrorMessage(System.String, System.Object[])
L_008d: ldc.i4.0
L_008e: br Label29
L_0093: Label2
L_0093: ldarg.1
L_0094: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_0099: ldarg.0
L_009a: ldfld BattleTech.LocationLoadoutDef loadout
L_009f: ldfld BattleTech.ChassisLocations Location
L_00a4: and
L_00a5: ldc.i4.0
L_00a6: bgt Label3
L_00ab: ldarg.0
L_00ac: ldstr "Cannot add {0} to {1}: Component is not permitted in this location."
L_00b1: ldc.i4.2
L_00b2: newarr System.Object
L_00b7: dup
L_00b8: ldc.i4.0
L_00b9: ldarg.1
L_00ba: callvirt BattleTech.DescriptionDef get_Description()
L_00bf: callvirt System.String get_Name()
L_00c4: stelem.ref
L_00c5: dup
L_00c6: ldc.i4.1
L_00c7: ldarg.0
L_00c8: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_00cd: callvirt System.String get_text()
L_00d2: stelem.ref
L_00d3: call Void SetDropErrorMessage(System.String, System.Object[])
L_00d8: ldc.i4.0
L_00d9: br Label30
L_00de: Label3
L_00de: ldarg.1
L_00df: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_00e4: ldc.i4.1
L_00e5: bne.un Label4
L_00ea: ldc.i4.0
L_00eb: stloc.0
L_00ec: ldc.i4.0
L_00ed: stloc.1
L_00ee: ldarg.1
L_00ef: isinst BattleTech.WeaponDef
L_00f4: stloc.2
L_00f5: ldloc.2
L_00f6: callvirt BattleTech.WeaponCategory get_Category()
L_00fb: stloc.3
L_00fc: ldloc.3
L_00fd: ldc.i4.1
L_00fe: sub
L_00ff: switch Labels5,6,7,8
L_0114: br Label9
L_0119: Label5
L_0119: ldarg.0
L_011a: ldfld System.Int32 currentBallisticCount
L_011f: stloc.0
L_0120: ldarg.0
L_0121: ldfld System.Int32 totalBallisticHardpoints
L_0126: stloc.1
L_0127: br Label10
L_012c: Label6
L_012c: ldarg.0
L_012d: ldfld System.Int32 currentEnergyCount
L_0132: stloc.0
L_0133: ldarg.0
L_0134: ldfld System.Int32 totalEnergyHardpoints
L_0139: stloc.1
L_013a: br Label11
L_013f: Label7
L_013f: ldarg.0
L_0140: ldfld System.Int32 currentMissileCount
L_0145: stloc.0
L_0146: ldarg.0
L_0147: ldfld System.Int32 totalMissileHardpoints
L_014c: stloc.1
L_014d: br Label12
L_0152: Label8
L_0152: ldarg.0
L_0153: ldfld System.Int32 currentSmallCount
L_0158: stloc.0
L_0159: ldarg.0
L_015a: ldfld System.Int32 totalSmallHardpoints
L_015f: stloc.1
L_0160: Label9
L_0160: Label10
L_0160: Label11
L_0160: Label12
L_0160: ldloc.0
L_0161: ldc.i4.1
L_0162: add
L_0163: ldloc.1
L_0164: ble Label13
L_0169: ldloc.2
L_016a: callvirt BattleTech.WeaponCategory get_Category()
L_016f: ldc.i4.4
L_0170: bne.un Label14
L_0175: ldarg.0
L_0176: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_017b: ldc.i4.3
L_017c: newarr System.Object
L_0181: dup
L_0182: ldc.i4.0
L_0183: ldarg.1
L_0184: callvirt BattleTech.DescriptionDef get_Description()
L_0189: callvirt System.String get_Name()
L_018e: stelem.ref
L_018f: dup
L_0190: ldc.i4.1
L_0191: ldarg.0
L_0192: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_0197: callvirt System.String get_text()
L_019c: stelem.ref
L_019d: dup
L_019e: ldc.i4.2
L_019f: ldstr "Support"
L_01a4: stelem.ref
L_01a5: call Void SetDropErrorMessage(System.String, System.Object[])
L_01aa: br Label15
L_01af: Label14
L_01af: ldarg.0
L_01b0: ldstr "Cannot add {0} to {1}: There are no available {2} hardpoints."
L_01b5: ldc.i4.3
L_01b6: newarr System.Object
L_01bb: dup
L_01bc: ldc.i4.0
L_01bd: ldarg.1
L_01be: callvirt BattleTech.DescriptionDef get_Description()
L_01c3: callvirt System.String get_Name()
L_01c8: stelem.ref
L_01c9: dup
L_01ca: ldc.i4.1
L_01cb: ldarg.0
L_01cc: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_01d1: callvirt System.String get_text()
L_01d6: stelem.ref
L_01d7: dup
L_01d8: ldc.i4.2
L_01d9: ldloc.2
L_01da: callvirt BattleTech.WeaponCategory get_Category()
L_01df: stloc.3
L_01e0: ldloca.s 3 (BattleTech.WeaponCategory)
L_01e2: constrained. BattleTech.WeaponCategory
L_01e8: callvirt System.String ToString()
L_01ed: stelem.ref
L_01ee: call Void SetDropErrorMessage(System.String, System.Object[])
L_01f3: Label15
L_01f3: ldc.i4.0
L_01f4: br Label31
L_01f9: Label4
L_01f9: Label13
L_01f9: ldarg.1
L_01fa: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_01ff: ldc.i4.4
L_0200: bne.un Label16
L_0205: ldarg.0
L_0206: ldfld BattleTech.UI.MechLabPanel mechLab
L_020b: ldfld BattleTech.UI.MechLabLocationWidget headWidget
L_0210: ldfld System.Int32 currentJumpjetCount
L_0215: ldarg.0
L_0216: ldfld BattleTech.UI.MechLabPanel mechLab
L_021b: ldfld BattleTech.UI.MechLabLocationWidget centerTorsoWidget
L_0220: ldfld System.Int32 currentJumpjetCount
L_0225: add
L_0226: ldarg.0
L_0227: ldfld BattleTech.UI.MechLabPanel mechLab
L_022c: ldfld BattleTech.UI.MechLabLocationWidget leftTorsoWidget
L_0231: ldfld System.Int32 currentJumpjetCount
L_0236: add
L_0237: ldarg.0
L_0238: ldfld BattleTech.UI.MechLabPanel mechLab
L_023d: ldfld BattleTech.UI.MechLabLocationWidget rightTorsoWidget
L_0242: ldfld System.Int32 currentJumpjetCount
L_0247: add
L_0248: ldarg.0
L_0249: ldfld BattleTech.UI.MechLabPanel mechLab
L_024e: ldfld BattleTech.UI.MechLabLocationWidget leftArmWidget
L_0253: ldfld System.Int32 currentJumpjetCount
L_0258: add
L_0259: ldarg.0
L_025a: ldfld BattleTech.UI.MechLabPanel mechLab
L_025f: ldfld BattleTech.UI.MechLabLocationWidget rightArmWidget
L_0264: ldfld System.Int32 currentJumpjetCount
L_0269: add
L_026a: ldarg.0
L_026b: ldfld BattleTech.UI.MechLabPanel mechLab
L_0270: ldfld BattleTech.UI.MechLabLocationWidget leftLegWidget
L_0275: ldfld System.Int32 currentJumpjetCount
L_027a: add
L_027b: ldarg.0
L_027c: ldfld BattleTech.UI.MechLabPanel mechLab
L_0281: ldfld BattleTech.UI.MechLabLocationWidget rightLegWidget
L_0286: ldfld System.Int32 currentJumpjetCount
L_028b: add
L_028c: ldc.i4.1
L_028d: add
L_028e: ldarg.0
L_028f: ldfld BattleTech.UI.MechLabPanel mechLab
L_0294: ldfld BattleTech.MechDef activeMechDef
L_0299: callvirt BattleTech.ChassisDef get_Chassis()
L_029e: callvirt Int32 get_MaxJumpjets()
L_02a3: ble Label17
L_02a8: ldarg.0
L_02a9: ldstr "Cannot add {0} to {1}: Max number of jumpjets for 'Mech reached."
L_02ae: ldc.i4.2
L_02af: newarr System.Object
L_02b4: dup
L_02b5: ldc.i4.0
L_02b6: ldarg.1
L_02b7: callvirt BattleTech.DescriptionDef get_Description()
L_02bc: callvirt System.String get_Name()
L_02c1: stelem.ref
L_02c2: dup
L_02c3: ldc.i4.1
L_02c4: ldarg.0
L_02c5: ldfld BattleTech.UI.TMProWrapper.LocalizableText locationName
L_02ca: callvirt System.String get_text()
L_02cf: stelem.ref
L_02d0: call Void SetDropErrorMessage(System.String, System.Object[])
L_02d5: ldc.i4.0
L_02d6: br Label32
L_02db: Label16
L_02db: Label17
L_02db: ldarg.1
L_02dc: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02e1: ldc.i4.s 20
L_02e3: bge Label18
L_02e8: ldarg.1
L_02e9: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_02ee: ldc.i4.8
L_02ef: bne.un Label19
L_02f4: Label18
L_02f4: ldc.i4.0
L_02f5: stloc.s 4 (System.Int32)
L_02f7: ldarg.0
L_02f8: ldfld BattleTech.UI.MechLabPanel mechLab
L_02fd: ldfld System.Collections.Generic.List`1[BattleTech.MechComponentRef] activeMechInventory
L_0302: callvirt Enumerator GetEnumerator()
L_0307: stloc.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
.try
{
	L_0309: br Label20
	L_030e: Label22
	L_030e: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0310: call BattleTech.MechComponentRef get_Current()
	L_0315: callvirt BattleTech.MechComponentDef get_Def()
	L_031a: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_031f: ldarg.1
	L_0320: callvirt BattleTech.MechComponentType get_ComponentSubType()
	L_0325: bne.un Label21
	L_032a: ldloc.s 4 (System.Int32)
	L_032c: ldc.i4.1
	L_032d: add
	L_032e: stloc.s 4 (System.Int32)
	L_0330: Label20
	L_0330: Label21
	L_0330: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0332: call Boolean MoveNext()
	L_0337: brtrue Label22
	L_033c: leave Label23
	L_0341: leave (autogenerated)
} // end try
.finally
{
	L_0346: ldloca.s 5 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef])
	L_0348: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponentRef]
	L_034e: callvirt Void Dispose()
	L_0353: endfinally
	L_0354: leave (autogenerated)
} // end handler
L_0355: Label23
L_0355: ldloc.s 4 (System.Int32)
L_0357: ldc.i4.0
L_0358: ble Label24
L_035d: ldarg.1
L_035e: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_0363: ldc.i4.8
L_0364: beq Label25
L_0369: ldarg.1
L_036a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_036f: ldc.i4.s 22
L_0371: bne.un Label26
L_0376: Label25
L_0376: ldarg.0
L_0377: ldstr "ELECTRONIC WARFARE COMPONENT LIMIT: You can only equip one Electronic Warfare component on this 'Mech."
L_037c: call System.Object[] Empty[Object]()
L_0381: call Void SetDropErrorMessage(System.String, System.Object[])
L_0386: br Label27
L_038b: Label26
L_038b: ldarg.0
L_038c: ldstr "PROTOTYPE COMPONENT LIMIT: You can only equip one {0} component on this 'Mech"
L_0391: ldc.i4.1
L_0392: newarr System.Object
L_0397: dup
L_0398: ldc.i4.0
L_0399: ldarg.1
L_039a: callvirt BattleTech.MechComponentType get_ComponentSubType()
L_039f: stloc.s 6 (BattleTech.MechComponentType)
L_03a1: ldloca.s 6 (BattleTech.MechComponentType)
L_03a3: constrained. BattleTech.MechComponentType
L_03a9: callvirt System.String ToString()
L_03ae: stelem.ref
L_03af: call Void SetDropErrorMessage(System.String, System.Object[])
L_03b4: Label27
L_03b4: ldc.i4.0
L_03b5: br Label34
L_03ba: Label19
L_03ba: Label24
L_03ba: ldc.i4.1
L_03bb: Label28
L_03bb: Label29
L_03bb: Label30
L_03bb: Label31
L_03bb: Label32
L_03bb: Label34
L_03bb: ret
DONE

### Patch BattleTech.UI.SG_Shop_ItemSelectedPanel, Void FillInHardPoints(BattleTech.MechDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Single
L_0000: Local var 10: BattleTech.WeightClass
L_0000: Local var 11: System.Int32
L_0000: ldarg.1
L_0001: brfalse Label1
L_0006: ldarg.0
L_0007: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechWeightText
L_000c: ldarg.1
L_000d: callvirt BattleTech.ChassisDef get_Chassis()
L_0012: callvirt Single get_Tonnage()
L_0017: stloc.s 9 (System.Single)
L_0019: ldloca.s 9 (System.Single)
L_001b: call System.String ToString()
L_0020: call System.Object[] Empty[Object]()
L_0025: callvirt Void SetText(System.String, System.Object[])
L_002a: ldarg.0
L_002b: ldfld BattleTech.UI.TMProWrapper.LocalizableText MechClassText
L_0030: ldarg.1
L_0031: callvirt BattleTech.ChassisDef get_Chassis()
L_0036: callvirt BattleTech.WeightClass get_weightClass()
L_003b: stloc.s 10 (BattleTech.WeightClass)
L_003d: ldloca.s 10 (BattleTech.WeightClass)
L_003f: constrained. BattleTech.WeightClass
L_0045: callvirt System.String ToString()
L_004a: call System.Object[] Empty[Object]()
L_004f: callvirt Void SetText(System.String, System.Object[])
L_0054: ldc.i4.0
L_0055: stloc.0
L_0056: ldc.i4.0
L_0057: stloc.1
L_0058: ldc.i4.0
L_0059: stloc.2
L_005a: ldc.i4.0
L_005b: stloc.3
L_005c: ldc.i4.0
L_005d: stloc.s 4 (System.Int32)
L_005f: ldc.i4.0
L_0060: stloc.s 5 (System.Int32)
L_0062: ldc.i4.0
L_0063: stloc.s 6 (System.Int32)
L_0065: ldc.i4.0
L_0066: stloc.s 7 (System.Int32)
L_0068: ldarg.1
L_0069: ldc.i4.1
L_006a: ldloca.s 0 (System.Int32)
L_006c: ldloca.s 1 (System.Int32)
L_006e: ldloca.s 2 (System.Int32)
L_0070: ldloca.s 3 (System.Int32)
L_0072: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0077: ldarg.1
L_0078: ldc.i4.s 32
L_007a: ldloca.s 0 (System.Int32)
L_007c: ldloca.s 1 (System.Int32)
L_007e: ldloca.s 2 (System.Int32)
L_0080: ldloca.s 3 (System.Int32)
L_0082: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0087: ldarg.1
L_0088: ldc.i4.s 16
L_008a: ldloca.s 0 (System.Int32)
L_008c: ldloca.s 1 (System.Int32)
L_008e: ldloca.s 2 (System.Int32)
L_0090: ldloca.s 3 (System.Int32)
L_0092: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0097: ldarg.1
L_0098: ldc.i4.2
L_0099: ldloca.s 0 (System.Int32)
L_009b: ldloca.s 1 (System.Int32)
L_009d: ldloca.s 2 (System.Int32)
L_009f: ldloca.s 3 (System.Int32)
L_00a1: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00a6: ldarg.1
L_00a7: ldc.i4.4
L_00a8: ldloca.s 0 (System.Int32)
L_00aa: ldloca.s 1 (System.Int32)
L_00ac: ldloca.s 2 (System.Int32)
L_00ae: ldloca.s 3 (System.Int32)
L_00b0: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00b5: ldarg.1
L_00b6: ldc.i4.8
L_00b7: ldloca.s 0 (System.Int32)
L_00b9: ldloca.s 1 (System.Int32)
L_00bb: ldloca.s 2 (System.Int32)
L_00bd: ldloca.s 3 (System.Int32)
L_00bf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00c4: ldarg.1
L_00c5: ldc.i4.s 64
L_00c7: ldloca.s 0 (System.Int32)
L_00c9: ldloca.s 1 (System.Int32)
L_00cb: ldloca.s 2 (System.Int32)
L_00cd: ldloca.s 3 (System.Int32)
L_00cf: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00d4: ldarg.1
L_00d5: ldc.i4 128
L_00da: ldloca.s 0 (System.Int32)
L_00dc: ldloca.s 1 (System.Int32)
L_00de: ldloca.s 2 (System.Int32)
L_00e0: ldloca.s 3 (System.Int32)
L_00e2: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00e7: ldloc.0
L_00e8: stloc.s 4 (System.Int32)
L_00ea: ldloc.1
L_00eb: stloc.s 5 (System.Int32)
L_00ed: ldloc.2
L_00ee: stloc.s 6 (System.Int32)
L_00f0: ldloc.3
L_00f1: stloc.s 7 (System.Int32)
L_00f3: ldarg.0
L_00f4: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_00f9: ldc.i4.1
L_00fa: ldloca.s 4 (System.Int32)
L_00fc: call System.String ToString()
L_0101: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0106: ldarg.0
L_0107: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_010c: ldc.i4.2
L_010d: ldloca.s 5 (System.Int32)
L_010f: call System.String ToString()
L_0114: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0119: ldarg.0
L_011a: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_011f: ldc.i4.3
L_0120: ldloca.s 6 (System.Int32)
L_0122: call System.String ToString()
L_0127: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_012c: ldarg.0
L_012d: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_0132: ldc.i4.4
L_0133: ldloca.s 7 (System.Int32)
L_0135: call System.String ToString()
L_013a: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_013f: ldc.i4.0
L_0140: stloc.s 8 (System.Int32)
L_0142: ldc.i4.0
L_0143: stloc.s 11 (System.Int32)
L_0145: br Label2
L_014a: Label4
L_014a: ldarg.1
L_014b: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0150: ldloc.s 11 (System.Int32)
L_0152: ldelem.ref
L_0153: callvirt BattleTech.ComponentType get_ComponentDefType()
L_0158: ldc.i4.4
L_0159: bne.un Label3
L_015e: ldloc.s 8 (System.Int32)
L_0160: ldc.i4.1
L_0161: add
L_0162: stloc.s 8 (System.Int32)
L_0164: Label3
L_0164: ldloc.s 11 (System.Int32)
L_0166: ldc.i4.1
L_0167: add
L_0168: stloc.s 11 (System.Int32)
L_016a: Label2
L_016a: ldloc.s 11 (System.Int32)
L_016c: ldarg.1
L_016d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0172: ldlen
L_0173: conv.i4
L_0174: blt Label4
L_0179: ldarg.0
L_017a: ldfld BattleTech.UI.TMProWrapper.LocalizableText JumpJetText
L_017f: ldstr "{0} / {1}"
L_0184: ldloc.s 8 (System.Int32)
L_0186: box System.Int32
L_018b: ldarg.1
L_018c: callvirt BattleTech.ChassisDef get_Chassis()
L_0191: callvirt Int32 get_MaxJumpjets()
L_0196: box System.Int32
L_019b: call System.String Format(System.String, System.Object, System.Object)
L_01a0: call System.Object[] Empty[Object]()
L_01a5: callvirt Void SetText(System.String, System.Object[])
L_01aa: Label1
L_01aa: ldarg 1
L_01b0: ldarg.0
L_01b1: ldfld BattleTech.UI.MechLabHardpointElement BallisticHardPointElement
L_01b6: ldarg.0
L_01b7: ldfld BattleTech.UI.MechLabHardpointElement EnergyHardPointElement
L_01bc: ldarg.0
L_01bd: ldfld BattleTech.UI.MechLabHardpointElement MissileHardPointElement
L_01c2: ldarg.0
L_01c3: ldfld BattleTech.UI.MechLabHardpointElement SmallHardPointElement
L_01c8: call Void Postfix(BattleTech.MechDef, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement, BattleTech.UI.MechLabHardpointElement)
L_01cd: ret
DONE

### Patch BattleTech.UI.MechBayMechInfoWidget, Void SetHardpoints()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: System.Int32
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.Int32
L_0000: Local var 11: BattleTech.WeaponCategory
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: ldc.i4.0
L_0003: stloc.1
L_0004: ldc.i4.0
L_0005: stloc.2
L_0006: ldc.i4.0
L_0007: stloc.3
L_0008: ldc.i4.0
L_0009: stloc.s 4 (System.Int32)
L_000b: ldc.i4.0
L_000c: stloc.s 5 (System.Int32)
L_000e: ldc.i4.0
L_000f: stloc.s 6 (System.Int32)
L_0011: ldc.i4.0
L_0012: stloc.s 7 (System.Int32)
L_0014: ldc.i4.0
L_0015: stloc.s 8 (System.Int32)
L_0017: ldc.i4.0
L_0018: stloc.s 9 (System.Int32)
L_001a: ldarg.0
L_001b: ldfld BattleTech.MechDef selectedMech
L_0020: brfalse Label1
L_0025: ldarg.0
L_0026: ldfld BattleTech.MechDef selectedMech
L_002b: ldc.i4.1
L_002c: ldloca.s 5 (System.Int32)
L_002e: ldloca.s 6 (System.Int32)
L_0030: ldloca.s 7 (System.Int32)
L_0032: ldloca.s 8 (System.Int32)
L_0034: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0039: ldarg.0
L_003a: ldfld BattleTech.MechDef selectedMech
L_003f: ldc.i4.8
L_0040: ldloca.s 5 (System.Int32)
L_0042: ldloca.s 6 (System.Int32)
L_0044: ldloca.s 7 (System.Int32)
L_0046: ldloca.s 8 (System.Int32)
L_0048: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_004d: ldarg.0
L_004e: ldfld BattleTech.MechDef selectedMech
L_0053: ldc.i4.4
L_0054: ldloca.s 5 (System.Int32)
L_0056: ldloca.s 6 (System.Int32)
L_0058: ldloca.s 7 (System.Int32)
L_005a: ldloca.s 8 (System.Int32)
L_005c: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0061: ldarg.0
L_0062: ldfld BattleTech.MechDef selectedMech
L_0067: ldc.i4.s 16
L_0069: ldloca.s 5 (System.Int32)
L_006b: ldloca.s 6 (System.Int32)
L_006d: ldloca.s 7 (System.Int32)
L_006f: ldloca.s 8 (System.Int32)
L_0071: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0076: ldarg.0
L_0077: ldfld BattleTech.MechDef selectedMech
L_007c: ldc.i4.2
L_007d: ldloca.s 5 (System.Int32)
L_007f: ldloca.s 6 (System.Int32)
L_0081: ldloca.s 7 (System.Int32)
L_0083: ldloca.s 8 (System.Int32)
L_0085: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_008a: ldarg.0
L_008b: ldfld BattleTech.MechDef selectedMech
L_0090: ldc.i4.s 32
L_0092: ldloca.s 5 (System.Int32)
L_0094: ldloca.s 6 (System.Int32)
L_0096: ldloca.s 7 (System.Int32)
L_0098: ldloca.s 8 (System.Int32)
L_009a: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_009f: ldarg.0
L_00a0: ldfld BattleTech.MechDef selectedMech
L_00a5: ldc.i4.s 64
L_00a7: ldloca.s 5 (System.Int32)
L_00a9: ldloca.s 6 (System.Int32)
L_00ab: ldloca.s 7 (System.Int32)
L_00ad: ldloca.s 8 (System.Int32)
L_00af: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.MechDef selectedMech
L_00ba: ldc.i4 128
L_00bf: ldloca.s 5 (System.Int32)
L_00c1: ldloca.s 6 (System.Int32)
L_00c3: ldloca.s 7 (System.Int32)
L_00c5: ldloca.s 8 (System.Int32)
L_00c7: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00cc: ldarg.0
L_00cd: ldfld BattleTech.MechDef selectedMech
L_00d2: callvirt BattleTech.ChassisDef get_Chassis()
L_00d7: callvirt Int32 get_MaxJumpjets()
L_00dc: stloc.s 9 (System.Int32)
L_00de: ldc.i4.0
L_00df: stloc.s 10 (System.Int32)
L_00e1: br Label2
L_00e6: Label13
L_00e6: ldarg.0
L_00e7: ldfld BattleTech.MechDef selectedMech
L_00ec: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_00f1: ldloc.s 10 (System.Int32)
L_00f3: ldelem.ref
L_00f4: callvirt BattleTech.MechComponentDef get_Def()
L_00f9: callvirt BattleTech.ComponentType get_ComponentType()
L_00fe: ldc.i4.1
L_00ff: bne.un Label3
L_0104: ldarg.0
L_0105: ldfld BattleTech.MechDef selectedMech
L_010a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_010f: ldloc.s 10 (System.Int32)
L_0111: ldelem.ref
L_0112: callvirt BattleTech.MechComponentDef get_Def()
L_0117: isinst BattleTech.WeaponDef
L_011c: callvirt BattleTech.WeaponCategory get_Category()
L_0121: stloc.s 11 (BattleTech.WeaponCategory)
L_0123: ldloc.s 11 (BattleTech.WeaponCategory)
L_0125: ldc.i4.1
L_0126: sub
L_0127: switch Labels4,5,6,7
L_013c: br Label8
L_0141: Label4
L_0141: ldloc.0
L_0142: ldc.i4.1
L_0143: add
L_0144: stloc.0
L_0145: br Label9
L_014a: Label5
L_014a: ldloc.1
L_014b: ldc.i4.1
L_014c: add
L_014d: stloc.1
L_014e: br Label10
L_0153: Label6
L_0153: ldloc.2
L_0154: ldc.i4.1
L_0155: add
L_0156: stloc.2
L_0157: br Label11
L_015c: Label7
L_015c: ldloc.3
L_015d: ldc.i4.1
L_015e: add
L_015f: stloc.3
L_0160: Label3
L_0160: Label8
L_0160: Label9
L_0160: Label10
L_0160: Label11
L_0160: ldarg.0
L_0161: ldfld BattleTech.MechDef selectedMech
L_0166: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_016b: ldloc.s 10 (System.Int32)
L_016d: ldelem.ref
L_016e: callvirt BattleTech.MechComponentDef get_Def()
L_0173: callvirt BattleTech.ComponentType get_ComponentType()
L_0178: ldc.i4.4
L_0179: bne.un Label12
L_017e: ldloc.s 4 (System.Int32)
L_0180: ldc.i4.1
L_0181: add
L_0182: stloc.s 4 (System.Int32)
L_0184: Label12
L_0184: ldloc.s 10 (System.Int32)
L_0186: ldc.i4.1
L_0187: add
L_0188: stloc.s 10 (System.Int32)
L_018a: Label2
L_018a: ldloc.s 10 (System.Int32)
L_018c: ldarg.0
L_018d: ldfld BattleTech.MechDef selectedMech
L_0192: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0197: ldlen
L_0198: conv.i4
L_0199: blt Label13
L_019e: Label1
L_019e: ldarg.0
L_019f: ldfld BattleTech.UI.TMProWrapper.LocalizableText ballisticHardpointText
L_01a4: ldstr "{0}/{1}"
L_01a9: ldc.i4.2
L_01aa: newarr System.Object
L_01af: dup
L_01b0: ldc.i4.0
L_01b1: ldloc.0
L_01b2: box System.Int32
L_01b7: stelem.ref
L_01b8: dup
L_01b9: ldc.i4.1
L_01ba: ldloc.s 5 (System.Int32)
L_01bc: box System.Int32
L_01c1: stelem.ref
L_01c2: callvirt Void SetText(System.String, System.Object[])
L_01c7: ldarg.0
L_01c8: ldfld BattleTech.UI.TMProWrapper.LocalizableText energyHardpointText
L_01cd: ldstr "{0}/{1}"
L_01d2: ldc.i4.2
L_01d3: newarr System.Object
L_01d8: dup
L_01d9: ldc.i4.0
L_01da: ldloc.1
L_01db: box System.Int32
L_01e0: stelem.ref
L_01e1: dup
L_01e2: ldc.i4.1
L_01e3: ldloc.s 6 (System.Int32)
L_01e5: box System.Int32
L_01ea: stelem.ref
L_01eb: callvirt Void SetText(System.String, System.Object[])
L_01f0: ldarg.0
L_01f1: ldfld BattleTech.UI.TMProWrapper.LocalizableText missileHardpointText
L_01f6: ldstr "{0}/{1}"
L_01fb: ldc.i4.2
L_01fc: newarr System.Object
L_0201: dup
L_0202: ldc.i4.0
L_0203: ldloc.2
L_0204: box System.Int32
L_0209: stelem.ref
L_020a: dup
L_020b: ldc.i4.1
L_020c: ldloc.s 7 (System.Int32)
L_020e: box System.Int32
L_0213: stelem.ref
L_0214: callvirt Void SetText(System.String, System.Object[])
L_0219: ldarg.0
L_021a: ldfld BattleTech.UI.TMProWrapper.LocalizableText smallHardpointText
L_021f: ldstr "{0}/{1}"
L_0224: ldc.i4.2
L_0225: newarr System.Object
L_022a: dup
L_022b: ldc.i4.0
L_022c: ldloc.3
L_022d: box System.Int32
L_0232: stelem.ref
L_0233: dup
L_0234: ldc.i4.1
L_0235: ldloc.s 8 (System.Int32)
L_0237: box System.Int32
L_023c: stelem.ref
L_023d: callvirt Void SetText(System.String, System.Object[])
L_0242: ldarg.0
L_0243: ldfld BattleTech.UI.TMProWrapper.LocalizableText jumpjetHardpointText
L_0248: ldstr "{0}/{1}"
L_024d: ldc.i4.2
L_024e: newarr System.Object
L_0253: dup
L_0254: ldc.i4.0
L_0255: ldloc.s 4 (System.Int32)
L_0257: box System.Int32
L_025c: stelem.ref
L_025d: dup
L_025e: ldc.i4.1
L_025f: ldloc.s 9 (System.Int32)
L_0261: box System.Int32
L_0266: stelem.ref
L_0267: callvirt Void SetText(System.String, System.Object[])
L_026c: ldarg.0
L_026d: ldfld BattleTech.MechDef selectedMech
L_0272: ldarg.0
L_0273: ldfld BattleTech.UI.TMProWrapper.LocalizableText ballisticHardpointText
L_0278: ldarg.0
L_0279: ldfld BattleTech.UI.TMProWrapper.LocalizableText energyHardpointText
L_027e: ldarg.0
L_027f: ldfld BattleTech.UI.TMProWrapper.LocalizableText missileHardpointText
L_0284: ldarg.0
L_0285: ldfld BattleTech.UI.TMProWrapper.LocalizableText smallHardpointText
L_028a: call Void Postfix(BattleTech.MechDef, TMPro.TextMeshProUGUI, TMPro.TextMeshProUGUI, TMPro.TextMeshProUGUI, TMPro.TextMeshProUGUI)
L_028f: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Boolean ValidateAddSimple(BattleTech.MechComponentDef)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.WeaponCategory
L_0000: Local var 2: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 2 (System.Boolean)
L_0006: ldarg.1
L_0007: callvirt Int32 get_InventorySize()
L_000c: ldarg.0
L_000d: ldfld System.Int32 maxSlots
L_0012: ble Label1
L_0017: ldc.i4.0
L_0018: br Label15
L_001d: Label1
L_001d: ldarg.1
L_001e: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_0023: ldarg.0
L_0024: ldfld BattleTech.LocationLoadoutDef loadout
L_0029: ldfld BattleTech.ChassisLocations Location
L_002e: and
L_002f: ldc.i4.0
L_0030: bgt Label2
L_0035: ldc.i4.0
L_0036: br Label16
L_003b: Label2
L_003b: ldarg.1
L_003c: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_0041: ldc.i4.1
L_0042: bne.un Label3
L_0047: ldc.i4.0
L_0048: stloc.0
L_0049: ldarg.1
L_004a: isinst BattleTech.WeaponDef
L_004f: callvirt BattleTech.WeaponCategory get_Category()
L_0054: stloc.1
L_0055: ldloc.1
L_0056: ldc.i4.1
L_0057: sub
L_0058: switch Labels4,5,6,7
L_006d: br Label8
L_0072: Label4
L_0072: ldarg.0
L_0073: ldfld System.Int32 totalBallisticHardpoints
L_0078: stloc.0
L_0079: br Label9
L_007e: Label5
L_007e: ldarg.0
L_007f: ldfld System.Int32 totalEnergyHardpoints
L_0084: stloc.0
L_0085: br Label10
L_008a: Label6
L_008a: ldarg.0
L_008b: ldfld System.Int32 totalMissileHardpoints
L_0090: stloc.0
L_0091: br Label11
L_0096: Label7
L_0096: ldarg.0
L_0097: ldfld System.Int32 totalSmallHardpoints
L_009c: stloc.0
L_009d: Label8
L_009d: Label9
L_009d: Label10
L_009d: Label11
L_009d: ldloc.0
L_009e: ldc.i4.1
L_009f: bge Label12
L_00a4: ldc.i4.0
L_00a5: br Label17
L_00aa: Label3
L_00aa: Label12
L_00aa: ldarg.1
L_00ab: call BattleTech.ComponentType GetComponentType(BattleTech.MechComponentDef)
L_00b0: ldc.i4.4
L_00b1: bne.un Label13
L_00b6: ldarg.0
L_00b7: ldfld BattleTech.UI.MechLabPanel mechLab
L_00bc: ldfld BattleTech.MechDef activeMechDef
L_00c1: callvirt BattleTech.ChassisDef get_Chassis()
L_00c6: callvirt Int32 get_MaxJumpjets()
L_00cb: ldc.i4.1
L_00cc: bge Label14
L_00d1: ldc.i4.0
L_00d2: br Label18
L_00d7: Label13
L_00d7: Label14
L_00d7: ldc.i4.1
L_00d8: Label15
L_00d8: Label16
L_00d8: Label17
L_00d8: Label18
L_00d8: stloc 2 (System.Boolean)
L_00d9: ldarg.0
L_00da: ldflda BattleTech.LocationLoadoutDef loadout
L_00df: ldarg.0
L_00e0: ldflda BattleTech.UI.MechLabPanel mechLab
L_00e5: ldarg 1
L_00eb: ldloca 2 (System.Boolean)
L_00ed: call Void Postfix(BattleTech.LocationLoadoutDef ByRef, BattleTech.UI.MechLabPanel ByRef, BattleTech.MechComponentDef, Boolean ByRef)
L_00f2: ldloc 2 (System.Boolean)
L_00f3: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void RefreshHardpointData()
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.WeaponCategory
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: stfld System.Int32 currentBallisticCount
L_0007: ldarg.0
L_0008: ldc.i4.0
L_0009: stfld System.Int32 currentEnergyCount
L_000e: ldarg.0
L_000f: ldc.i4.0
L_0010: stfld System.Int32 currentMissileCount
L_0015: ldarg.0
L_0016: ldc.i4.0
L_0017: stfld System.Int32 currentSmallCount
L_001c: ldarg.0
L_001d: ldc.i4.0
L_001e: stfld System.Int32 currentJumpjetCount
L_0023: ldc.i4.0
L_0024: stloc.0
L_0025: br Label1
L_002a: Label12
L_002a: ldarg.0
L_002b: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0030: ldloc.0
L_0031: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0036: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_003b: callvirt BattleTech.MechComponentDef get_Def()
L_0040: callvirt BattleTech.ComponentType get_ComponentType()
L_0045: ldc.i4.1
L_0046: bne.un Label2
L_004b: ldarg.0
L_004c: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0051: ldloc.0
L_0052: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_0057: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_005c: callvirt BattleTech.MechComponentDef get_Def()
L_0061: isinst BattleTech.WeaponDef
L_0066: callvirt BattleTech.WeaponCategory get_Category()
L_006b: stloc.1
L_006c: ldloc.1
L_006d: ldc.i4.1
L_006e: sub
L_006f: switch Labels3,4,5,6
L_0084: br Label7
L_0089: Label3
L_0089: ldarg.0
L_008a: ldarg.0
L_008b: ldfld System.Int32 currentBallisticCount
L_0090: ldc.i4.1
L_0091: add
L_0092: stfld System.Int32 currentBallisticCount
L_0097: br Label8
L_009c: Label4
L_009c: ldarg.0
L_009d: ldarg.0
L_009e: ldfld System.Int32 currentEnergyCount
L_00a3: ldc.i4.1
L_00a4: add
L_00a5: stfld System.Int32 currentEnergyCount
L_00aa: br Label9
L_00af: Label5
L_00af: ldarg.0
L_00b0: ldarg.0
L_00b1: ldfld System.Int32 currentMissileCount
L_00b6: ldc.i4.1
L_00b7: add
L_00b8: stfld System.Int32 currentMissileCount
L_00bd: br Label10
L_00c2: Label6
L_00c2: ldarg.0
L_00c3: ldarg.0
L_00c4: ldfld System.Int32 currentSmallCount
L_00c9: ldc.i4.1
L_00ca: add
L_00cb: stfld System.Int32 currentSmallCount
L_00d0: Label2
L_00d0: Label7
L_00d0: Label8
L_00d0: Label9
L_00d0: Label10
L_00d0: ldarg.0
L_00d1: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_00d6: ldloc.0
L_00d7: callvirt BattleTech.UI.MechLabItemSlotElement get_Item(Int32)
L_00dc: callvirt BattleTech.MechComponentRef get_ComponentRef()
L_00e1: callvirt BattleTech.MechComponentDef get_Def()
L_00e6: callvirt BattleTech.ComponentType get_ComponentType()
L_00eb: ldc.i4.4
L_00ec: bne.un Label11
L_00f1: ldarg.0
L_00f2: ldarg.0
L_00f3: ldfld System.Int32 currentJumpjetCount
L_00f8: ldc.i4.1
L_00f9: add
L_00fa: stfld System.Int32 currentJumpjetCount
L_00ff: Label11
L_00ff: ldloc.0
L_0100: ldc.i4.1
L_0101: add
L_0102: stloc.0
L_0103: Label1
L_0103: ldloc.0
L_0104: ldarg.0
L_0105: ldfld System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_010a: callvirt Int32 get_Count()
L_010f: blt Label12
L_0114: ldarg.0
L_0115: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_011a: ldc.i4.0
L_011b: ldelem.ref
L_011c: ldarg.0
L_011d: ldfld System.Int32 totalBallisticHardpoints
L_0122: ldc.i4.0
L_0123: bgt Label13
L_0128: ldc.i4.0
L_0129: br Label14
L_012e: Label13
L_012e: ldc.i4.1
L_012f: Label14
L_012f: ldstr "{0}/{1}"
L_0134: ldarg.0
L_0135: ldfld System.Int32 currentBallisticCount
L_013a: box System.Int32
L_013f: ldarg.0
L_0140: ldfld System.Int32 totalBallisticHardpoints
L_0145: box System.Int32
L_014a: call System.String Format(System.String, System.Object, System.Object)
L_014f: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0154: ldarg.0
L_0155: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_015a: ldc.i4.1
L_015b: ldelem.ref
L_015c: ldarg.0
L_015d: ldfld System.Int32 totalEnergyHardpoints
L_0162: ldc.i4.0
L_0163: bgt Label15
L_0168: ldc.i4.0
L_0169: br Label16
L_016e: Label15
L_016e: ldc.i4.2
L_016f: Label16
L_016f: ldstr "{0}/{1}"
L_0174: ldarg.0
L_0175: ldfld System.Int32 currentEnergyCount
L_017a: box System.Int32
L_017f: ldarg.0
L_0180: ldfld System.Int32 totalEnergyHardpoints
L_0185: box System.Int32
L_018a: call System.String Format(System.String, System.Object, System.Object)
L_018f: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0194: ldarg.0
L_0195: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_019a: ldc.i4.2
L_019b: ldelem.ref
L_019c: ldarg.0
L_019d: ldfld System.Int32 totalMissileHardpoints
L_01a2: ldc.i4.0
L_01a3: bgt Label17
L_01a8: ldc.i4.0
L_01a9: br Label18
L_01ae: Label17
L_01ae: ldc.i4.3
L_01af: Label18
L_01af: ldstr "{0}/{1}"
L_01b4: ldarg.0
L_01b5: ldfld System.Int32 currentMissileCount
L_01ba: box System.Int32
L_01bf: ldarg.0
L_01c0: ldfld System.Int32 totalMissileHardpoints
L_01c5: box System.Int32
L_01ca: call System.String Format(System.String, System.Object, System.Object)
L_01cf: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_01d4: ldarg.0
L_01d5: ldfld BattleTech.UI.MechLabHardpointElement[] hardpoints
L_01da: ldc.i4.3
L_01db: ldelem.ref
L_01dc: ldarg.0
L_01dd: ldfld System.Int32 totalSmallHardpoints
L_01e2: ldc.i4.0
L_01e3: bgt Label19
L_01e8: ldc.i4.0
L_01e9: br Label20
L_01ee: Label19
L_01ee: ldc.i4.4
L_01ef: Label20
L_01ef: ldstr "{0}/{1}"
L_01f4: ldarg.0
L_01f5: ldfld System.Int32 currentSmallCount
L_01fa: box System.Int32
L_01ff: ldarg.0
L_0200: ldfld System.Int32 totalSmallHardpoints
L_0205: box System.Int32
L_020a: call System.String Format(System.String, System.Object, System.Object)
L_020f: callvirt Void SetData(BattleTech.WeaponCategory, System.String)
L_0214: ldarg.0
L_0215: ldarg.0
L_0216: ldflda BattleTech.LocationDef chassisLocationDef
L_021b: ldarg.0
L_021c: ldflda System.Int32 currentBallisticCount
L_0221: ldarg.0
L_0222: ldflda System.Int32 currentEnergyCount
L_0227: ldarg.0
L_0228: ldflda System.Int32 currentMissileCount
L_022d: ldarg.0
L_022e: ldflda System.Int32 currentSmallCount
L_0233: ldarg.0
L_0234: ldflda System.Int32 totalBallisticHardpoints
L_0239: ldarg.0
L_023a: ldflda System.Int32 totalEnergyHardpoints
L_023f: ldarg.0
L_0240: ldflda System.Int32 totalMissileHardpoints
L_0245: ldarg.0
L_0246: ldflda System.Int32 totalSmallHardpoints
L_024b: ldarg.0
L_024c: ldflda BattleTech.UI.MechLabHardpointElement[] hardpoints
L_0251: ldarg.0
L_0252: ldflda System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] localInventory
L_0257: call Void Postfix(BattleTech.UI.MechLabLocationWidget, BattleTech.LocationDef ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef, BattleTech.UI.MechLabHardpointElement[] ByRef, System.Collections.Generic.List`1[BattleTech.UI.MechLabItemSlotElement] ByRef)
L_025c: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void ShowHighlightFrame(BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.WeaponCategory
L_0000: ldarg.0
L_0001: ldarga 1
L_0007: call Void Prefix(BattleTech.UI.MechLabLocationWidget, BattleTech.MechComponentRef ByRef)
L_000c: ldarg.1
L_000d: brtrue Label1
L_0012: ldarg.0
L_0013: ldc.i4.0
L_0014: ldc.i4.6
L_0015: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_001a: br Label15
L_001f: Label1
L_001f: ldarg.1
L_0020: callvirt BattleTech.MechComponentDef get_Def()
L_0025: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_002a: ldarg.0
L_002b: ldfld BattleTech.LocationLoadoutDef loadout
L_0030: ldfld BattleTech.ChassisLocations Location
L_0035: and
L_0036: ldc.i4.0
L_0037: cgt.un
L_0039: stloc.0
L_003a: ldc.i4.1
L_003b: stloc.1
L_003c: ldarg.2
L_003d: brfalse Label2
L_0042: ldarg.2
L_0043: callvirt BattleTech.WeaponCategory get_Category()
L_0048: stloc.2
L_0049: ldloc.2
L_004a: ldc.i4.1
L_004b: sub
L_004c: switch Labels3,4,5,6
L_0061: br Label7
L_0066: Label3
L_0066: ldarg.0
L_0067: ldfld System.Int32 totalBallisticHardpoints
L_006c: ldc.i4.0
L_006d: cgt
L_006f: stloc.1
L_0070: br Label8
L_0075: Label4
L_0075: ldarg.0
L_0076: ldfld System.Int32 totalEnergyHardpoints
L_007b: ldc.i4.0
L_007c: cgt
L_007e: stloc.1
L_007f: br Label9
L_0084: Label5
L_0084: ldarg.0
L_0085: ldfld System.Int32 totalMissileHardpoints
L_008a: ldc.i4.0
L_008b: cgt
L_008d: stloc.1
L_008e: br Label10
L_0093: Label6
L_0093: ldarg.0
L_0094: ldfld System.Int32 totalSmallHardpoints
L_0099: ldc.i4.0
L_009a: cgt
L_009c: stloc.1
L_009d: Label2
L_009d: Label7
L_009d: Label8
L_009d: Label9
L_009d: Label10
L_009d: ldarg.0
L_009e: ldloc.0
L_009f: ldloc.1
L_00a0: and
L_00a1: ldarg.3
L_00a2: brtrue Label11
L_00a7: ldarg.s 4
L_00a9: brtrue Label12
L_00ae: ldc.i4.s 29
L_00b0: br Label13
L_00b5: Label12
L_00b5: ldc.i4.6
L_00b6: br Label14
L_00bb: Label11
L_00bb: ldc.i4.8
L_00bc: Label13
L_00bc: Label14
L_00bc: call Void ShowHighlightFrame(Boolean, BattleTech.UI.UIColor)
L_00c1: Label15
L_00c1: ldarg.0
L_00c2: ldarg 1
L_00c8: ldarg 2
L_00ce: ldarg 3
L_00d4: ldarg 4
L_00da: ldarg.0
L_00db: ldflda BattleTech.LocationDef chassisLocationDef
L_00e0: call Void Postfix(BattleTech.UI.MechLabLocationWidget, BattleTech.MechComponentRef, BattleTech.WeaponDef, Boolean, Boolean, BattleTech.LocationDef ByRef)
L_00e5: ret
DONE

### Patch BattleTech.MechValidationRules, Void ValidateMechInventorySlots(BattleTech.Data.DataManager, BattleTech.MechDef, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef)
L_0000: Local var 0: System.Collections.Generic.Dictionary`2[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 1: System.Collections.Generic.Dictionary`2[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: System.Collections.Generic.Dictionary`2[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: System.Collections.Generic.Dictionary`2[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 4: System.Collections.Generic.Dictionary`2[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Int32
L_0000: Local var 7: System.Int32
L_0000: Local var 8: System.Int32
L_0000: Local var 9: System.Int32
L_0000: Local var 10: BattleTech.MechComponentRef
L_0000: Local var 11: System.Int32
L_0000: Local var 12: BattleTech.ChassisLocations
L_0000: Local var 13: BattleTech.WeaponCategory
L_0000: Local var 14: System.Int32
L_0000: Local var 15: System.Int32
L_0000: Local var 16: System.Int32
L_0000: Local var 17: System.Int32
L_0000: Local var 18: System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[[BattleTech.ChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 19: BattleTech.ChassisLocations
L_0000: Local var 20: BattleTech.ChassisLocations
L_0000: Local var 21: BattleTech.ChassisLocations
L_0000: Local var 22: BattleTech.ChassisLocations
L_0000: Local var 23: BattleTech.ChassisLocations
L_0000: newobj Void .ctor()
L_0005: stloc.0
L_0006: ldloc.0
L_0007: ldc.i4.1
L_0008: ldarg.1
L_0009: callvirt BattleTech.ChassisDef get_Chassis()
L_000e: callvirt BattleTech.LocationDef get_Head()
L_0013: ldfld System.Int32 InventorySlots
L_0018: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_001d: ldloc.0
L_001e: ldc.i4.8
L_001f: ldarg.1
L_0020: callvirt BattleTech.ChassisDef get_Chassis()
L_0025: callvirt BattleTech.LocationDef get_CenterTorso()
L_002a: ldfld System.Int32 InventorySlots
L_002f: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0034: ldloc.0
L_0035: ldc.i4.4
L_0036: ldarg.1
L_0037: callvirt BattleTech.ChassisDef get_Chassis()
L_003c: callvirt BattleTech.LocationDef get_LeftTorso()
L_0041: ldfld System.Int32 InventorySlots
L_0046: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_004b: ldloc.0
L_004c: ldc.i4.s 16
L_004e: ldarg.1
L_004f: callvirt BattleTech.ChassisDef get_Chassis()
L_0054: callvirt BattleTech.LocationDef get_RightTorso()
L_0059: ldfld System.Int32 InventorySlots
L_005e: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0063: ldloc.0
L_0064: ldc.i4.2
L_0065: ldarg.1
L_0066: callvirt BattleTech.ChassisDef get_Chassis()
L_006b: callvirt BattleTech.LocationDef get_LeftArm()
L_0070: ldfld System.Int32 InventorySlots
L_0075: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_007a: ldloc.0
L_007b: ldc.i4.s 32
L_007d: ldarg.1
L_007e: callvirt BattleTech.ChassisDef get_Chassis()
L_0083: callvirt BattleTech.LocationDef get_RightArm()
L_0088: ldfld System.Int32 InventorySlots
L_008d: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0092: ldloc.0
L_0093: ldc.i4.s 64
L_0095: ldarg.1
L_0096: callvirt BattleTech.ChassisDef get_Chassis()
L_009b: callvirt BattleTech.LocationDef get_LeftLeg()
L_00a0: ldfld System.Int32 InventorySlots
L_00a5: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_00aa: ldloc.0
L_00ab: ldc.i4 128
L_00b0: ldarg.1
L_00b1: callvirt BattleTech.ChassisDef get_Chassis()
L_00b6: callvirt BattleTech.LocationDef get_RightLeg()
L_00bb: ldfld System.Int32 InventorySlots
L_00c0: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_00c5: newobj Void .ctor()
L_00ca: stloc.1
L_00cb: newobj Void .ctor()
L_00d0: stloc.2
L_00d1: newobj Void .ctor()
L_00d6: stloc.3
L_00d7: newobj Void .ctor()
L_00dc: stloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_00de: ldc.i4.0
L_00df: stloc.s 5 (System.Int32)
L_00e1: ldc.i4.0
L_00e2: stloc.s 6 (System.Int32)
L_00e4: ldc.i4.0
L_00e5: stloc.s 7 (System.Int32)
L_00e7: ldc.i4.0
L_00e8: stloc.s 8 (System.Int32)
L_00ea: ldarg.1
L_00eb: ldc.i4.1
L_00ec: ldloca.s 5 (System.Int32)
L_00ee: ldloca.s 6 (System.Int32)
L_00f0: ldloca.s 7 (System.Int32)
L_00f2: ldloca.s 8 (System.Int32)
L_00f4: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_00f9: ldloc.1
L_00fa: ldc.i4.1
L_00fb: ldloc.s 5 (System.Int32)
L_00fd: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0102: ldloc.2
L_0103: ldc.i4.1
L_0104: ldloc.s 6 (System.Int32)
L_0106: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_010b: ldloc.3
L_010c: ldc.i4.1
L_010d: ldloc.s 7 (System.Int32)
L_010f: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0114: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_0116: ldc.i4.1
L_0117: ldloc.s 8 (System.Int32)
L_0119: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_011e: ldc.i4.0
L_011f: stloc.s 5 (System.Int32)
L_0121: ldc.i4.0
L_0122: stloc.s 6 (System.Int32)
L_0124: ldc.i4.0
L_0125: stloc.s 7 (System.Int32)
L_0127: ldc.i4.0
L_0128: stloc.s 8 (System.Int32)
L_012a: ldarg.1
L_012b: ldc.i4.8
L_012c: ldloca.s 5 (System.Int32)
L_012e: ldloca.s 6 (System.Int32)
L_0130: ldloca.s 7 (System.Int32)
L_0132: ldloca.s 8 (System.Int32)
L_0134: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0139: ldloc.1
L_013a: ldc.i4.8
L_013b: ldloc.s 5 (System.Int32)
L_013d: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0142: ldloc.2
L_0143: ldc.i4.8
L_0144: ldloc.s 6 (System.Int32)
L_0146: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_014b: ldloc.3
L_014c: ldc.i4.8
L_014d: ldloc.s 7 (System.Int32)
L_014f: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0154: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_0156: ldc.i4.8
L_0157: ldloc.s 8 (System.Int32)
L_0159: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_015e: ldc.i4.0
L_015f: stloc.s 5 (System.Int32)
L_0161: ldc.i4.0
L_0162: stloc.s 6 (System.Int32)
L_0164: ldc.i4.0
L_0165: stloc.s 7 (System.Int32)
L_0167: ldc.i4.0
L_0168: stloc.s 8 (System.Int32)
L_016a: ldarg.1
L_016b: ldc.i4.4
L_016c: ldloca.s 5 (System.Int32)
L_016e: ldloca.s 6 (System.Int32)
L_0170: ldloca.s 7 (System.Int32)
L_0172: ldloca.s 8 (System.Int32)
L_0174: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0179: ldloc.1
L_017a: ldc.i4.4
L_017b: ldloc.s 5 (System.Int32)
L_017d: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0182: ldloc.2
L_0183: ldc.i4.4
L_0184: ldloc.s 6 (System.Int32)
L_0186: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_018b: ldloc.3
L_018c: ldc.i4.4
L_018d: ldloc.s 7 (System.Int32)
L_018f: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0194: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_0196: ldc.i4.4
L_0197: ldloc.s 8 (System.Int32)
L_0199: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_019e: ldc.i4.0
L_019f: stloc.s 5 (System.Int32)
L_01a1: ldc.i4.0
L_01a2: stloc.s 6 (System.Int32)
L_01a4: ldc.i4.0
L_01a5: stloc.s 7 (System.Int32)
L_01a7: ldc.i4.0
L_01a8: stloc.s 8 (System.Int32)
L_01aa: ldarg.1
L_01ab: ldc.i4.s 16
L_01ad: ldloca.s 5 (System.Int32)
L_01af: ldloca.s 6 (System.Int32)
L_01b1: ldloca.s 7 (System.Int32)
L_01b3: ldloca.s 8 (System.Int32)
L_01b5: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_01ba: ldloc.1
L_01bb: ldc.i4.s 16
L_01bd: ldloc.s 5 (System.Int32)
L_01bf: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_01c4: ldloc.2
L_01c5: ldc.i4.s 16
L_01c7: ldloc.s 6 (System.Int32)
L_01c9: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_01ce: ldloc.3
L_01cf: ldc.i4.s 16
L_01d1: ldloc.s 7 (System.Int32)
L_01d3: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_01d8: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_01da: ldc.i4.s 16
L_01dc: ldloc.s 8 (System.Int32)
L_01de: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_01e3: ldc.i4.0
L_01e4: stloc.s 5 (System.Int32)
L_01e6: ldc.i4.0
L_01e7: stloc.s 6 (System.Int32)
L_01e9: ldc.i4.0
L_01ea: stloc.s 7 (System.Int32)
L_01ec: ldc.i4.0
L_01ed: stloc.s 8 (System.Int32)
L_01ef: ldarg.1
L_01f0: ldc.i4.2
L_01f1: ldloca.s 5 (System.Int32)
L_01f3: ldloca.s 6 (System.Int32)
L_01f5: ldloca.s 7 (System.Int32)
L_01f7: ldloca.s 8 (System.Int32)
L_01f9: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_01fe: ldloc.1
L_01ff: ldc.i4.2
L_0200: ldloc.s 5 (System.Int32)
L_0202: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0207: ldloc.2
L_0208: ldc.i4.2
L_0209: ldloc.s 6 (System.Int32)
L_020b: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0210: ldloc.3
L_0211: ldc.i4.2
L_0212: ldloc.s 7 (System.Int32)
L_0214: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0219: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_021b: ldc.i4.2
L_021c: ldloc.s 8 (System.Int32)
L_021e: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0223: ldc.i4.0
L_0224: stloc.s 5 (System.Int32)
L_0226: ldc.i4.0
L_0227: stloc.s 6 (System.Int32)
L_0229: ldc.i4.0
L_022a: stloc.s 7 (System.Int32)
L_022c: ldc.i4.0
L_022d: stloc.s 8 (System.Int32)
L_022f: ldarg.1
L_0230: ldc.i4.s 32
L_0232: ldloca.s 5 (System.Int32)
L_0234: ldloca.s 6 (System.Int32)
L_0236: ldloca.s 7 (System.Int32)
L_0238: ldloca.s 8 (System.Int32)
L_023a: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_023f: ldloc.1
L_0240: ldc.i4.s 32
L_0242: ldloc.s 5 (System.Int32)
L_0244: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0249: ldloc.2
L_024a: ldc.i4.s 32
L_024c: ldloc.s 6 (System.Int32)
L_024e: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0253: ldloc.3
L_0254: ldc.i4.s 32
L_0256: ldloc.s 7 (System.Int32)
L_0258: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_025d: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_025f: ldc.i4.s 32
L_0261: ldloc.s 8 (System.Int32)
L_0263: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0268: ldc.i4.0
L_0269: stloc.s 5 (System.Int32)
L_026b: ldc.i4.0
L_026c: stloc.s 6 (System.Int32)
L_026e: ldc.i4.0
L_026f: stloc.s 7 (System.Int32)
L_0271: ldc.i4.0
L_0272: stloc.s 8 (System.Int32)
L_0274: ldarg.1
L_0275: ldc.i4.s 64
L_0277: ldloca.s 5 (System.Int32)
L_0279: ldloca.s 6 (System.Int32)
L_027b: ldloca.s 7 (System.Int32)
L_027d: ldloca.s 8 (System.Int32)
L_027f: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_0284: ldloc.1
L_0285: ldc.i4.s 64
L_0287: ldloc.s 5 (System.Int32)
L_0289: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_028e: ldloc.2
L_028f: ldc.i4.s 64
L_0291: ldloc.s 6 (System.Int32)
L_0293: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0298: ldloc.3
L_0299: ldc.i4.s 64
L_029b: ldloc.s 7 (System.Int32)
L_029d: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_02a2: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_02a4: ldc.i4.s 64
L_02a6: ldloc.s 8 (System.Int32)
L_02a8: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_02ad: ldc.i4.0
L_02ae: stloc.s 5 (System.Int32)
L_02b0: ldc.i4.0
L_02b1: stloc.s 6 (System.Int32)
L_02b3: ldc.i4.0
L_02b4: stloc.s 7 (System.Int32)
L_02b6: ldc.i4.0
L_02b7: stloc.s 8 (System.Int32)
L_02b9: ldarg.1
L_02ba: ldc.i4 128
L_02bf: ldloca.s 5 (System.Int32)
L_02c1: ldloca.s 6 (System.Int32)
L_02c3: ldloca.s 7 (System.Int32)
L_02c5: ldloca.s 8 (System.Int32)
L_02c7: call Void GetHardpointCountForLocation(BattleTech.MechDef, BattleTech.ChassisLocations, Int32 ByRef, Int32 ByRef, Int32 ByRef, Int32 ByRef)
L_02cc: ldloc.1
L_02cd: ldc.i4 128
L_02d2: ldloc.s 5 (System.Int32)
L_02d4: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_02d9: ldloc.2
L_02da: ldc.i4 128
L_02df: ldloc.s 6 (System.Int32)
L_02e1: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_02e6: ldloc.3
L_02e7: ldc.i4 128
L_02ec: ldloc.s 7 (System.Int32)
L_02ee: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_02f3: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_02f5: ldc.i4 128
L_02fa: ldloc.s 8 (System.Int32)
L_02fc: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0301: ldc.i4.0
L_0302: stloc.s 9 (System.Int32)
L_0304: br Label1
L_0309: Label17
L_0309: ldarg.1
L_030a: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_030f: ldloc.s 9 (System.Int32)
L_0311: ldelem.ref
L_0312: stloc.s 10 (BattleTech.MechComponentRef)
L_0314: ldloc.s 10 (BattleTech.MechComponentRef)
L_0316: ldfld BattleTech.ComponentDamageLevel DamageLevel
L_031b: ldc.i4.4
L_031c: beq Label2
L_0321: ldloc.s 10 (BattleTech.MechComponentRef)
L_0323: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0328: ldloc.s 10 (BattleTech.MechComponentRef)
L_032a: callvirt BattleTech.MechComponentDef get_Def()
L_032f: callvirt BattleTech.ChassisLocations get_AllowedLocations()
L_0334: and
L_0335: brtrue Label3
L_033a: ldarg.2
L_033b: ldc.i4.8
L_033c: ldstr "'Mech has a component installed in an invalid location: "
L_0341: ldloc.s 10 (BattleTech.MechComponentRef)
L_0343: callvirt BattleTech.MechComponentDef get_Def()
L_0348: callvirt BattleTech.DescriptionDef get_Description()
L_034d: callvirt System.String get_UIName()
L_0352: ldstr ", Location: "
L_0357: ldloc.s 10 (BattleTech.MechComponentRef)
L_0359: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_035e: stloc.s 12 (BattleTech.ChassisLocations)
L_0360: ldloca.s 12 (BattleTech.ChassisLocations)
L_0362: constrained. BattleTech.ChassisLocations
L_0368: callvirt System.String ToString()
L_036d: call System.String Concat(System.String, System.String, System.String, System.String)
L_0372: call System.Object[] Empty[Object]()
L_0377: newobj Void .ctor(String, Object[])
L_037c: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
L_0381: br Label4
L_0386: Label3
L_0386: ldloc.s 10 (BattleTech.MechComponentRef)
L_0388: call BattleTech.ComponentType GetComponentDefType(BattleTech.BaseComponentRef)
L_038d: ldc.i4.1
L_038e: bne.un Label5
L_0393: ldloc.s 10 (BattleTech.MechComponentRef)
L_0395: callvirt BattleTech.MechComponentDef get_Def()
L_039a: isinst BattleTech.WeaponDef
L_039f: callvirt BattleTech.WeaponCategory get_Category()
L_03a4: stloc.s 13 (BattleTech.WeaponCategory)
L_03a6: ldloc.s 13 (BattleTech.WeaponCategory)
L_03a8: ldc.i4.1
L_03a9: sub
L_03aa: switch Labels6,7,8,9
L_03bf: br Label10
L_03c4: Label6
L_03c4: ldloc.1
L_03c5: ldloc.s 10 (BattleTech.MechComponentRef)
L_03c7: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_03cc: callvirt Int32 get_Item(BattleTech.ChassisLocations)
L_03d1: stloc.s 14 (System.Int32)
L_03d3: ldloc.s 14 (System.Int32)
L_03d5: ldc.i4.1
L_03d6: sub
L_03d7: stloc.s 14 (System.Int32)
L_03d9: ldloc.1
L_03da: ldloc.s 10 (BattleTech.MechComponentRef)
L_03dc: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_03e1: ldloc.s 14 (System.Int32)
L_03e3: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_03e8: br Label11
L_03ed: Label7
L_03ed: ldloc.2
L_03ee: ldloc.s 10 (BattleTech.MechComponentRef)
L_03f0: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_03f5: callvirt Int32 get_Item(BattleTech.ChassisLocations)
L_03fa: stloc.s 15 (System.Int32)
L_03fc: ldloc.s 15 (System.Int32)
L_03fe: ldc.i4.1
L_03ff: sub
L_0400: stloc.s 15 (System.Int32)
L_0402: ldloc.2
L_0403: ldloc.s 10 (BattleTech.MechComponentRef)
L_0405: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_040a: ldloc.s 15 (System.Int32)
L_040c: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0411: br Label12
L_0416: Label8
L_0416: ldloc.3
L_0417: ldloc.s 10 (BattleTech.MechComponentRef)
L_0419: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_041e: callvirt Int32 get_Item(BattleTech.ChassisLocations)
L_0423: stloc.s 16 (System.Int32)
L_0425: ldloc.s 16 (System.Int32)
L_0427: ldc.i4.1
L_0428: sub
L_0429: stloc.s 16 (System.Int32)
L_042b: ldloc.3
L_042c: ldloc.s 10 (BattleTech.MechComponentRef)
L_042e: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0433: ldloc.s 16 (System.Int32)
L_0435: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_043a: br Label13
L_043f: Label9
L_043f: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_0441: ldloc.s 10 (BattleTech.MechComponentRef)
L_0443: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0448: callvirt Int32 get_Item(BattleTech.ChassisLocations)
L_044d: stloc.s 17 (System.Int32)
L_044f: ldloc.s 17 (System.Int32)
L_0451: ldc.i4.1
L_0452: sub
L_0453: stloc.s 17 (System.Int32)
L_0455: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_0457: ldloc.s 10 (BattleTech.MechComponentRef)
L_0459: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_045e: ldloc.s 17 (System.Int32)
L_0460: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_0465: br Label14
L_046a: Label5
L_046a: ldloc.s 10 (BattleTech.MechComponentRef)
L_046c: call BattleTech.ComponentType GetComponentDefType(BattleTech.BaseComponentRef)
L_0471: ldc.i4.2
L_0472: beq Label15
L_0477: ldloc.s 10 (BattleTech.MechComponentRef)
L_0479: call BattleTech.ComponentType GetComponentDefType(BattleTech.BaseComponentRef)
L_047e: ldc.i4.4
L_047f: beq Label16
L_0484: ldloc.s 10 (BattleTech.MechComponentRef)
L_0486: call BattleTech.ComponentType GetComponentDefType(BattleTech.BaseComponentRef)
L_048b: ldc.i4.3
L_048c: pop
L_048d: pop
L_048e: Label10
L_048e: Label11
L_048e: Label12
L_048e: Label13
L_048e: Label14
L_048e: Label15
L_048e: Label16
L_048e: ldloc.0
L_048f: ldloc.s 10 (BattleTech.MechComponentRef)
L_0491: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_0496: callvirt Int32 get_Item(BattleTech.ChassisLocations)
L_049b: stloc.s 11 (System.Int32)
L_049d: ldloc.s 11 (System.Int32)
L_049f: ldloc.s 10 (BattleTech.MechComponentRef)
L_04a1: callvirt BattleTech.MechComponentDef get_Def()
L_04a6: callvirt Int32 get_InventorySize()
L_04ab: sub
L_04ac: stloc.s 11 (System.Int32)
L_04ae: ldloc.0
L_04af: ldloc.s 10 (BattleTech.MechComponentRef)
L_04b1: callvirt BattleTech.ChassisLocations get_MountedLocation()
L_04b6: ldloc.s 11 (System.Int32)
L_04b8: callvirt Void set_Item(BattleTech.ChassisLocations, Int32)
L_04bd: Label2
L_04bd: Label4
L_04bd: ldloc.s 9 (System.Int32)
L_04bf: ldc.i4.1
L_04c0: add
L_04c1: stloc.s 9 (System.Int32)
L_04c3: Label1
L_04c3: ldloc.s 9 (System.Int32)
L_04c5: ldarg.1
L_04c6: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_04cb: ldlen
L_04cc: conv.i4
L_04cd: blt Label17
L_04d2: ldloc.0
L_04d3: callvirt KeyCollection get_Keys()
L_04d8: callvirt Enumerator GetEnumerator()
L_04dd: stloc.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
.try
{
	L_04df: br Label18
	L_04e4: Label20
	L_04e4: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_04e6: call BattleTech.ChassisLocations get_Current()
	L_04eb: stloc.s 19 (BattleTech.ChassisLocations)
	L_04ed: ldloc.0
	L_04ee: ldloc.s 19 (BattleTech.ChassisLocations)
	L_04f0: callvirt Int32 get_Item(BattleTech.ChassisLocations)
	L_04f5: ldc.i4.0
	L_04f6: bge Label19
	L_04fb: ldarg.2
	L_04fc: ldc.i4.8
	L_04fd: ldstr "'Mech has too much equipment mounted in the {0}"
	L_0502: ldc.i4.1
	L_0503: newarr System.Object
	L_0508: dup
	L_0509: ldc.i4.0
	L_050a: ldloca.s 19 (BattleTech.ChassisLocations)
	L_050c: constrained. BattleTech.ChassisLocations
	L_0512: callvirt System.String ToString()
	L_0517: stelem.ref
	L_0518: newobj Void .ctor(String, Object[])
	L_051d: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_0522: Label18
	L_0522: Label19
	L_0522: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0524: call Boolean MoveNext()
	L_0529: brtrue Label20
	L_052e: leave Label21
	L_0533: leave (autogenerated)
} // end try
.finally
{
	L_0538: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_053a: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32]
	L_0540: callvirt Void Dispose()
	L_0545: endfinally
	L_0546: leave (autogenerated)
} // end handler
L_0547: Label21
L_0547: ldloc.1
L_0548: callvirt KeyCollection get_Keys()
L_054d: callvirt Enumerator GetEnumerator()
L_0552: stloc.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
.try
{
	L_0554: br Label22
	L_0559: Label24
	L_0559: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_055b: call BattleTech.ChassisLocations get_Current()
	L_0560: stloc.s 20 (BattleTech.ChassisLocations)
	L_0562: ldloc.1
	L_0563: ldloc.s 20 (BattleTech.ChassisLocations)
	L_0565: callvirt Int32 get_Item(BattleTech.ChassisLocations)
	L_056a: ldc.i4.0
	L_056b: bge Label23
	L_0570: ldarg.2
	L_0571: ldc.i4.s 9
	L_0573: ldstr "'Mech has too many Ballistic weapons mounted in the {0}"
	L_0578: ldc.i4.1
	L_0579: newarr System.Object
	L_057e: dup
	L_057f: ldc.i4.0
	L_0580: ldloca.s 20 (BattleTech.ChassisLocations)
	L_0582: constrained. BattleTech.ChassisLocations
	L_0588: callvirt System.String ToString()
	L_058d: stelem.ref
	L_058e: newobj Void .ctor(String, Object[])
	L_0593: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_0598: Label22
	L_0598: Label23
	L_0598: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_059a: call Boolean MoveNext()
	L_059f: brtrue Label24
	L_05a4: leave Label25
	L_05a9: leave (autogenerated)
} // end try
.finally
{
	L_05ae: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_05b0: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32]
	L_05b6: callvirt Void Dispose()
	L_05bb: endfinally
	L_05bc: leave (autogenerated)
} // end handler
L_05bd: Label25
L_05bd: ldloc.2
L_05be: callvirt KeyCollection get_Keys()
L_05c3: callvirt Enumerator GetEnumerator()
L_05c8: stloc.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
.try
{
	L_05ca: br Label26
	L_05cf: Label28
	L_05cf: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_05d1: call BattleTech.ChassisLocations get_Current()
	L_05d6: stloc.s 21 (BattleTech.ChassisLocations)
	L_05d8: ldloc.2
	L_05d9: ldloc.s 21 (BattleTech.ChassisLocations)
	L_05db: callvirt Int32 get_Item(BattleTech.ChassisLocations)
	L_05e0: ldc.i4.0
	L_05e1: bge Label27
	L_05e6: ldarg.2
	L_05e7: ldc.i4.s 9
	L_05e9: ldstr "'Mech has too many Energy weapons mounted in the {0}"
	L_05ee: ldc.i4.1
	L_05ef: newarr System.Object
	L_05f4: dup
	L_05f5: ldc.i4.0
	L_05f6: ldloca.s 21 (BattleTech.ChassisLocations)
	L_05f8: constrained. BattleTech.ChassisLocations
	L_05fe: callvirt System.String ToString()
	L_0603: stelem.ref
	L_0604: newobj Void .ctor(String, Object[])
	L_0609: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_060e: Label26
	L_060e: Label27
	L_060e: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0610: call Boolean MoveNext()
	L_0615: brtrue Label28
	L_061a: leave Label29
	L_061f: leave (autogenerated)
} // end try
.finally
{
	L_0624: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0626: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32]
	L_062c: callvirt Void Dispose()
	L_0631: endfinally
	L_0632: leave (autogenerated)
} // end handler
L_0633: Label29
L_0633: ldloc.3
L_0634: callvirt KeyCollection get_Keys()
L_0639: callvirt Enumerator GetEnumerator()
L_063e: stloc.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
.try
{
	L_0640: br Label30
	L_0645: Label32
	L_0645: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0647: call BattleTech.ChassisLocations get_Current()
	L_064c: stloc.s 22 (BattleTech.ChassisLocations)
	L_064e: ldloc.3
	L_064f: ldloc.s 22 (BattleTech.ChassisLocations)
	L_0651: callvirt Int32 get_Item(BattleTech.ChassisLocations)
	L_0656: ldc.i4.0
	L_0657: bge Label31
	L_065c: ldarg.2
	L_065d: ldc.i4.s 9
	L_065f: ldstr "'Mech has too many Missile weapons mounted in the {0}"
	L_0664: ldc.i4.1
	L_0665: newarr System.Object
	L_066a: dup
	L_066b: ldc.i4.0
	L_066c: ldloca.s 22 (BattleTech.ChassisLocations)
	L_066e: constrained. BattleTech.ChassisLocations
	L_0674: callvirt System.String ToString()
	L_0679: stelem.ref
	L_067a: newobj Void .ctor(String, Object[])
	L_067f: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_0684: Label30
	L_0684: Label31
	L_0684: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0686: call Boolean MoveNext()
	L_068b: brtrue Label32
	L_0690: leave Label33
	L_0695: leave (autogenerated)
} // end try
.finally
{
	L_069a: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_069c: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32]
	L_06a2: callvirt Void Dispose()
	L_06a7: endfinally
	L_06a8: leave (autogenerated)
} // end handler
L_06a9: Label33
L_06a9: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
L_06ab: callvirt KeyCollection get_Keys()
L_06b0: callvirt Enumerator GetEnumerator()
L_06b5: stloc.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
.try
{
	L_06b7: br Label34
	L_06bc: Label36
	L_06bc: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_06be: call BattleTech.ChassisLocations get_Current()
	L_06c3: stloc.s 23 (BattleTech.ChassisLocations)
	L_06c5: ldloc.s 4 (System.Collections.Generic.Dictionary`2[BattleTech.ChassisLocations,System.Int32])
	L_06c7: ldloc.s 23 (BattleTech.ChassisLocations)
	L_06c9: callvirt Int32 get_Item(BattleTech.ChassisLocations)
	L_06ce: ldc.i4.0
	L_06cf: bge Label35
	L_06d4: ldarg.2
	L_06d5: ldc.i4.s 9
	L_06d7: ldstr "'Mech has too many Small weapons mounted in the {0}"
	L_06dc: ldc.i4.1
	L_06dd: newarr System.Object
	L_06e2: dup
	L_06e3: ldc.i4.0
	L_06e4: ldloca.s 23 (BattleTech.ChassisLocations)
	L_06e6: constrained. BattleTech.ChassisLocations
	L_06ec: callvirt System.String ToString()
	L_06f1: stelem.ref
	L_06f2: newobj Void .ctor(String, Object[])
	L_06f7: call Void AddErrorMessage(System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]] ByRef, BattleTech.MechValidationType, Localize.Text)
	L_06fc: Label34
	L_06fc: Label35
	L_06fc: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_06fe: call Boolean MoveNext()
	L_0703: brtrue Label36
	L_0708: leave Label37
	L_070d: leave (autogenerated)
} // end try
.finally
{
	L_0712: ldloca.s 18 (System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32])
	L_0714: constrained. System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[BattleTech.ChassisLocations,System.Int32]
	L_071a: callvirt Void Dispose()
	L_071f: endfinally
	L_0720: leave (autogenerated)
} // end handler
L_0721: Label37
L_0721: ret
DONE

### Harmony id=MechEngineer.Features.TagManager, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechEngineer.Features.Feature`1+FeatureUtils[[MechEngineer.Features.TagManager.TagManagerSettings, MechEngineer, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null]].PatchCandidates(System.Type, System.Collections.Generic.List`1[[System.Type]]), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2019-09-15 05.27.36
### Patch HBS.Util.JSONSerializationUtility, System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0000: Local var 0: System.String
L_0000: Local var 1: System.Type
L_0000: Local var 2: System.Collections.Generic.Dictionary`2+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 3: System.String
L_0000: Local var 4: System.Object
L_0000: Local var 5: HBS.Reflection.MemberInfoHelper
L_0000: Local var 6: System.Boolean
L_0000: Local var 7: HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0
L_0000: Local var 8: System.Object[]
L_0000: Local var 9: System.Collections.Generic.KeyValuePair`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 10: System.String
L_0000: Local var 11: System.String
L_0000: Local var 12: System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.Boolean
L_0000: Local var 15: System.Object
L_0000: Local var 16: System.Object
L_0000: Local var 17: System.String
L_0000: ldnull
L_0001: stloc 17 (System.String)
L_0003: ldarg 0
L_0009: ldarg 1
L_000f: call Void Prefix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0014: ldstr ""
L_0019: stloc.0
L_001a: ldarg.0
L_001b: callvirt System.Type GetType()
L_0020: stloc.1
L_0021: ldarg.1
L_0022: callvirt Enumerator GetEnumerator()
L_0027: stloc.2
L_0028: ldarg.s 6
L_002a: ldnull
L_002b: cgt.un
L_002d: stloc.s 6 (System.Boolean)
L_002f: br Label1
L_0034: Label34
L_0034: newobj Void .ctor()
L_0039: stloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_003b: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_003d: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_0042: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0044: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_0046: call System.String get_Key()
L_004b: stloc.3
L_004c: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_004e: ldarg.2
L_004f: call Boolean IsNullOrEmpty(System.String)
L_0054: brtrue Label2
L_0059: ldstr "{0}.{1}"
L_005e: ldarg.2
L_005f: ldloc.3
L_0060: call System.String Format(System.String, System.Object, System.Object)
L_0065: br Label3
L_006a: Label2
L_006a: ldloc.3
L_006b: Label3
L_006b: stfld System.String memberClassName
L_0070: ldloc.s 6 (System.Boolean)
L_0072: brfalse Label4
L_0077: ldarg.s 5
L_0079: brfalse Label5
L_007e: ldarg.s 6
L_0080: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0082: ldftn Boolean <RehydrateObjectFromDictionary>b__1(System.Func`2[System.String,System.Boolean])
L_0088: newobj Void .ctor(Object, IntPtr)
L_008d: call Boolean All[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_0092: br Label6
L_0097: Label5
L_0097: ldarg.s 6
L_0099: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_009b: ldftn Boolean <RehydrateObjectFromDictionary>b__0(System.Func`2[System.String,System.Boolean])
L_00a1: newobj Void .ctor(Object, IntPtr)
L_00a6: call Boolean Any[Func`2](System.Collections.Generic.IEnumerable`1[System.Func`2[System.String,System.Boolean]], System.Func`2[System.Func`2[System.String,System.Boolean],System.Boolean])
L_00ab: Label6
L_00ab: brtrue Label7
L_00b0: Label4
L_00b0: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_00b2: call System.Collections.Generic.KeyValuePair`2[System.String,System.Object] get_Current()
L_00b7: stloc.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00b9: ldloca.s 9 (System.Collections.Generic.KeyValuePair`2[System.String,System.Object])
L_00bb: call System.Object get_Value()
L_00c0: stloc.s 4 (System.Object)
L_00c2: ldsfld HBS.Reflection.ReflectionCache reflectionCache
L_00c7: ldloc.1
L_00c8: ldloc.3
L_00c9: callvirt HBS.Reflection.MemberInfoHelper GetMemberHelper(System.Type, System.String)
L_00ce: stloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d0: ldnull
L_00d1: stloc.s 8 (System.Object[])
L_00d3: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_00d5: brtrue Label8
L_00da: ldstr "Could not retrieve member {0} from type {1}"
L_00df: ldloc.3
L_00e0: ldloc.1
L_00e1: callvirt System.String get_Name()
L_00e6: call System.String Format(System.String, System.Object, System.Object)
L_00eb: stloc.s 10 (System.String)
L_00ed: ldloc.0
L_00ee: ldloc.s 10 (System.String)
L_00f0: ldstr "
"
L_00f5: call System.String Concat(System.String, System.String, System.String)
L_00fa: stloc.0
L_00fb: ldloc.s 10 (System.String)
L_00fd: call Void LogWarning(System.String)
L_0102: br Label9
L_0107: Label8
L_0107: ldarg.s 4
L_0109: brfalse Label10
L_010e: ldarg.s 4
L_0110: callvirt Void Start()
L_0115: Label10
L_0115: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0117: ldtoken fastJSON.JsonIgnore
L_011c: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0121: ldc.i4.0
L_0122: callvirt System.Object[] GetCustomAttributes(System.Type, Boolean)
L_0127: stloc.s 8 (System.Object[])
L_0129: ldarg.s 4
L_012b: brfalse Label11
L_0130: ldarg.s 4
L_0132: callvirt Void Stop()
L_0137: Label11
L_0137: ldloc.s 8 (System.Object[])
L_0139: brfalse Label12
L_013e: ldloc.s 8 (System.Object[])
L_0140: ldlen
L_0141: brfalse Label13
L_0146: ldstr "Ignoring value [{0}] from type [{1}] because class has it marked with JsonIgnore attribute."
L_014b: ldloc.3
L_014c: ldloc.1
L_014d: callvirt System.String get_Name()
L_0152: call System.String Format(System.String, System.Object, System.Object)
L_0157: stloc.s 11 (System.String)
L_0159: ldloc.0
L_015a: ldloc.s 11 (System.String)
L_015c: ldstr "
"
L_0161: call System.String Concat(System.String, System.String, System.String)
L_0166: stloc.0
L_0167: ldloc.s 11 (System.String)
L_0169: call Void LogWarning(System.String)
L_016e: br Label14
L_0173: Label12
L_0173: Label13
L_0173: ldloc.s 4 (System.Object)
L_0175: isinst System.Collections.Generic.Dictionary`2[System.String,System.Object]
L_017a: stloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_017c: ldarg.s 4
L_017e: brfalse Label15
L_0183: ldarg.s 4
L_0185: callvirt Void Start()
L_018a: Label15
L_018a: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_018c: callvirt System.Type GetMemberType()
L_0191: callvirt System.Type[] GetInterfaces()
L_0196: ldtoken System.Collections.IDictionary
L_019b: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_01a0: call Boolean Contains[Type](System.Collections.Generic.IEnumerable`1[System.Type], System.Type)
L_01a5: stloc.s 13 (System.Boolean)
L_01a7: ldarg.s 4
L_01a9: brfalse Label16
L_01ae: ldarg.s 4
L_01b0: callvirt Void Stop()
L_01b5: Label16
L_01b5: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_01b7: brfalse Label17
L_01bc: ldloc.s 13 (System.Boolean)
L_01be: brtrue Label18
L_01c3: ldarg.s 4
L_01c5: brfalse Label19
L_01ca: ldarg.s 4
L_01cc: callvirt Void Start()
L_01d1: Label19
L_01d1: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01d3: callvirt System.Type GetMemberType()
L_01d8: callvirt Boolean get_IsValueType()
L_01dd: stloc.s 14 (System.Boolean)
L_01df: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_01e1: ldarg.0
L_01e2: ldnull
L_01e3: callvirt System.Object GetValue(System.Object, System.Object[])
L_01e8: stloc.s 15 (System.Object)
L_01ea: ldarg.s 4
L_01ec: brfalse Label20
L_01f1: ldarg.s 4
L_01f3: callvirt Void Stop()
L_01f8: Label20
L_01f8: ldloc.s 15 (System.Object)
L_01fa: brtrue Label21
L_01ff: ldarg.s 4
L_0201: brfalse Label22
L_0206: ldarg.s 4
L_0208: callvirt Void Start()
L_020d: Label22
L_020d: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_020f: callvirt System.Type GetMemberType()
L_0214: callvirt Boolean get_IsArray()
L_0219: brfalse Label23
L_021e: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0220: callvirt System.Type GetMemberType()
L_0225: ldc.i4.1
L_0226: newarr System.Object
L_022b: dup
L_022c: ldc.i4.0
L_022d: ldc.i4.1
L_022e: box System.Int32
L_0233: stelem.ref
L_0234: call System.Object CreateInstance(System.Type, System.Object[])
L_0239: stloc.s 15 (System.Object)
L_023b: br Label24
L_0240: Label23
L_0240: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_0242: callvirt System.Type GetMemberType()
L_0247: call System.Object CreateInstance(System.Type)
L_024c: stloc.s 15 (System.Object)
L_024e: Label24
L_024e: ldarg.s 4
L_0250: brfalse Label25
L_0255: ldarg.s 4
L_0257: callvirt Void Stop()
L_025c: Label25
L_025c: ldc.i4.1
L_025d: stloc.s 14 (System.Boolean)
L_025f: Label21
L_025f: ldloc.s 15 (System.Object)
L_0261: ldloc.s 12 (System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_0263: ldloc.s 7 (HBS.Util.JSONSerializationUtility+<>c__DisplayClass12_0)
L_0265: ldfld System.String memberClassName
L_026a: ldarg.3
L_026b: ldarg.s 4
L_026d: ldarg.s 5
L_026f: ldarg.s 6
L_0271: call System.String RehydrateObjectFromDictionary(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object], System.String, HBS.Stopwatch, HBS.Stopwatch, RehydrationFilteringMode, System.Func`2[System.String,System.Boolean][])
L_0276: pop
L_0277: ldloc.s 14 (System.Boolean)
L_0279: brfalse Label26
L_027e: ldarg.s 4
L_0280: brfalse Label27
L_0285: ldarg.s 4
L_0287: callvirt Void Start()
L_028c: Label27
L_028c: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_028e: ldarga.s 0
L_0290: ldloc.s 15 (System.Object)
L_0292: call System.Object[] Empty[Object]()
L_0297: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_029c: ldarg.s 4
L_029e: brfalse Label28
L_02a3: ldarg.s 4
L_02a5: callvirt Void Stop()
L_02aa: br Label29
L_02af: Label17
L_02af: Label18
L_02af: ldarg.3
L_02b0: brfalse Label30
L_02b5: ldarg.3
L_02b6: callvirt Void Start()
L_02bb: Label30
L_02bb: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02bd: callvirt System.Type GetMemberType()
L_02c2: ldloc.s 4 (System.Object)
L_02c4: call System.Object ConvertValue(System.Type, System.Object)
L_02c9: stloc.s 16 (System.Object)
L_02cb: ldarg.3
L_02cc: brfalse Label31
L_02d1: ldarg.3
L_02d2: callvirt Void Stop()
L_02d7: Label31
L_02d7: ldarg.s 4
L_02d9: brfalse Label32
L_02de: ldarg.s 4
L_02e0: callvirt Void Start()
L_02e5: Label32
L_02e5: ldloc.s 5 (HBS.Reflection.MemberInfoHelper)
L_02e7: ldarga.s 0
L_02e9: ldloc.s 16 (System.Object)
L_02eb: call System.Object[] Empty[Object]()
L_02f0: callvirt Void SetValue(System.Object ByRef, System.Object, System.Object[])
L_02f5: ldarg.s 4
L_02f7: brfalse Label33
L_02fc: ldarg.s 4
L_02fe: callvirt Void Stop()
L_0303: Label1
L_0303: Label7
L_0303: Label9
L_0303: Label14
L_0303: Label26
L_0303: Label28
L_0303: Label29
L_0303: Label33
L_0303: ldloca.s 2 (System.Collections.Generic.Dictionary`2+Enumerator[System.String,System.Object])
L_0305: call Boolean MoveNext()
L_030a: brtrue Label34
L_030f: ldloc.0
L_0310: stloc 17 (System.String)
L_0312: ldarg 0
L_0318: call Void Postfix(System.Object)
L_031d: ldarg 0
L_0323: ldarg 1
L_0329: call Void Postfix(System.Object, System.Collections.Generic.Dictionary`2[System.String,System.Object])
L_032e: ldloc 17 (System.String)
L_0330: ret
DONE

### Patch BattleTech.UI.MechLabPanel, Boolean ComponentDefTagsValid(BattleTech.MechComponentDef)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: ldloca 0 (System.Boolean)
L_000f: ldarg.0
L_0010: ldfld System.Boolean isDebugLab
L_0015: call Boolean Prefix(BattleTech.UI.MechLabPanel, BattleTech.MechComponentDef, Boolean ByRef, Boolean)
L_001a: brfalse Label0
L_001f: ldarg.0
L_0020: call Boolean get_IsSimGame()
L_0025: brfalse Label1
L_002a: ldc.i4.1
L_002b: br Label7
L_0030: Label1
L_0030: ldarg.1
L_0031: callvirt HBS.Collections.TagSet get_ComponentTags()
L_0036: ldstr "component_type_debug"
L_003b: callvirt Boolean Contains(System.String)
L_0040: brfalse Label2
L_0045: ldc.i4.0
L_0046: br Label8
L_004b: Label2
L_004b: ldarg.0
L_004c: ldfld System.Boolean isDebugLab
L_0051: brfalse Label3
L_0056: ldc.i4.1
L_0057: br Label9
L_005c: Label3
L_005c: ldarg.1
L_005d: callvirt HBS.Collections.TagSet get_ComponentTags()
L_0062: ldstr "component_type_stock"
L_0067: callvirt Boolean Contains(System.String)
L_006c: brtrue Label4
L_0071: ldc.i4.0
L_0072: br Label10
L_0077: Label4
L_0077: ldarg.1
L_0078: callvirt HBS.Collections.TagSet get_ComponentTags()
L_007d: ldstr "BLACKLISTED"
L_0082: callvirt Boolean Contains(System.String)
L_0087: brfalse Label5
L_008c: ldc.i4.0
L_008d: br Label11
L_0092: Label5
L_0092: ldarg.1
L_0093: callvirt HBS.Collections.TagSet get_ComponentTags()
L_0098: ldstr "BLACKLISTED"
L_009d: callvirt Boolean Contains(System.String)
L_00a2: brfalse Label6
L_00a7: ldc.i4.0
L_00a8: br Label12
L_00ad: Label6
L_00ad: ldc.i4.1
L_00ae: Label7
L_00ae: Label8
L_00ae: Label9
L_00ae: Label10
L_00ae: Label11
L_00ae: Label12
L_00ae: stloc 0 (System.Boolean)
L_00af: Label0
L_00af: ldloc 0 (System.Boolean)
L_00b0: ret
DONE

### Harmony id=com.joelmeador.MechResizer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MechResizer.MechResizer.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MechResizer\MechResizer.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.TurretRepresentation, Void Init(BattleTech.Turret, UnityEngine.Transform, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: call Void InitHighlighting()
L_000f: ldarg.0
L_0010: ldc.i4.1
L_0011: callvirt Boolean RefreshSurfaceType(Boolean)
L_0016: pop
L_0017: ldarg.0
L_0018: ldarg.0
L_0019: ldfld UnityEngine.GameObject VisibleObject
L_001e: ldc.i4.1
L_001f: callvirt UnityEngine.MeshRenderer[] GetComponentsInChildren[MeshRenderer](Boolean)
L_0024: newobj Void .ctor(IEnumerable`1)
L_0029: stfld System.Collections.Generic.List`1[UnityEngine.Renderer] renderers
L_002e: ldarg.0
L_002f: call Void InitDestructMaterial()
L_0034: ldarg 1
L_003a: ldarg 2
L_0040: ldarg 3
L_0046: ldarg.0
L_0047: call Void Postfix(BattleTech.Turret, UnityEngine.Transform, Boolean, BattleTech.TurretRepresentation)
L_004c: ret
DONE

### Patch BattleTech.VehicleRepresentation, Void Init(BattleTech.Vehicle, UnityEngine.Transform, Boolean)
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: call Void InitHighlighting()
L_000f: ldarg.0
L_0010: ldc.i4.1
L_0011: callvirt Boolean RefreshSurfaceType(Boolean)
L_0016: pop
L_0017: ldc.i4 389
L_001c: ldc.r4 0
L_0021: ldarg.0
L_0022: ldfld AkGameObj audioObject
L_0027: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_002c: ldarg.0
L_002d: ldarg.0
L_002e: ldfld UnityEngine.GameObject VisibleObject
L_0033: ldc.i4.1
L_0034: callvirt UnityEngine.MeshRenderer[] GetComponentsInChildren[MeshRenderer](Boolean)
L_0039: newobj Void .ctor(IEnumerable`1)
L_003e: stfld System.Collections.Generic.List`1[UnityEngine.Renderer] renderers
L_0043: ldarg.0
L_0044: call Void InitDestructMaterial()
L_0049: ldarg 1
L_004f: ldarg 2
L_0055: ldarg 3
L_005b: ldarg.0
L_005c: call Void Postfix(BattleTech.Vehicle, UnityEngine.Transform, Boolean, BattleTech.VehicleRepresentation)
L_0061: ret
DONE

### Patch BattleTech.MechRepresentation, Void Init(BattleTech.Mech, UnityEngine.Transform, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Int32
L_0000: Local var 2: System.String
L_0000: Local var 3: System.String
L_0000: Local var 4: System.String
L_0000: Local var 5: System.String
L_0000: Local var 6: System.String
L_0000: Local var 7: UnityEngine.GameObject
L_0000: Local var 8: System.Single
L_0000: Local var 9: BattleTech.VFXNamesDef
L_0000: Local var 10: UnityEngine.Transform
L_0000: Local var 11: UnityEngine.Transform
L_0000: Local var 12: UnityEngine.Transform
L_0000: Local var 13: UnityEngine.Transform
L_0000: Local var 14: UnityEngine.Transform
L_0000: Local var 15: UnityEngine.Transform
L_0000: Local var 16: UnityEngine.Transform
L_0000: Local var 17: UnityEngine.Transform
L_0000: Local var 18: UnityEngine.Transform
L_0000: Local var 19: UnityEngine.Transform
L_0000: Local var 20: UnityEngine.Transform
L_0000: Local var 21: UnityEngine.Transform
L_0000: Local var 22: AudioSwitch_mech_weight_type
L_0000: Local var 23: BattleTech.WeightClass
L_0000: Local var 24: System.Nullable`1[[UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 25: System.Nullable`1[[UnityEngine.Quaternion, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: ldarg.2
L_0003: ldarg.3
L_0004: call Void Init(BattleTech.AbstractActor, UnityEngine.Transform, Boolean)
L_0009: ldarg.0
L_000a: ldarg.1
L_000b: callvirt BattleTech.CombatGameState get_Combat()
L_0010: callvirt BattleTech.CombatGameConstants get_Constants()
L_0015: call Void set_Constants(BattleTech.CombatGameConstants)
L_001a: ldc.i4.0
L_001b: stloc.0
L_001c: ldarg.0
L_001d: ldstr "Base Layer.Idle.Empty"
L_0022: call Int32 StringToHash(System.String)
L_0027: stfld System.Int32 idleStateEntryHash
L_002c: ldarg.0
L_002d: ldstr "Base Layer.Idle.Flavors"
L_0032: call Int32 StringToHash(System.String)
L_0037: stfld System.Int32 idleStateFlavorsHash
L_003c: ldarg.0
L_003d: ldstr "Base Layer.Idle.Unsteady"
L_0042: call Int32 StringToHash(System.String)
L_0047: stfld System.Int32 idleStateUnsteadyHash
L_004c: ldarg.0
L_004d: ldstr "Base Layer.Idle.Melee Idle"
L_0052: call Int32 StringToHash(System.String)
L_0057: stfld System.Int32 idleStateMeleeBaseHash
L_005c: ldarg.0
L_005d: ldstr "Base Layer.Idle.Melee Idle.Empty"
L_0062: call Int32 StringToHash(System.String)
L_0067: stfld System.Int32 idleStateMeleeEntryHash
L_006c: ldarg.0
L_006d: ldstr "Base Layer.Idle.Melee Idle.Melee Idle"
L_0072: call Int32 StringToHash(System.String)
L_0077: stfld System.Int32 idleStateMeleeHash
L_007c: ldarg.0
L_007d: ldstr "Base Layer.Idle.Melee Idle.Melee Unsteady"
L_0082: call Int32 StringToHash(System.String)
L_0087: stfld System.Int32 idleStateMeleeUnsteadyHash
L_008c: ldarg.0
L_008d: ldstr "Base Layer.Idle.Melee Idle"
L_0092: call Int32 StringToHash(System.String)
L_0097: stfld System.Int32 TEMPIdleStateMeleeIdleHash
L_009c: ldarg.0
L_009d: ldstr "IdleRandom"
L_00a2: call Int32 StringToHash(System.String)
L_00a7: stfld System.Int32 idleRandomValueHash
L_00ac: ldarg.0
L_00ad: ldstr "Base Layer.Downed.Getup"
L_00b2: call Int32 StringToHash(System.String)
L_00b7: stfld System.Int32 standingHash
L_00bc: ldarg.0
L_00bd: ldstr "Base Layer.Death.OnGround Death Idle"
L_00c2: call Int32 StringToHash(System.String)
L_00c7: stfld System.Int32 groundDeathIdleHash
L_00cc: ldarg.0
L_00cd: ldstr "Base Layer.Death.RandomDeath.Death 1"
L_00d2: call Int32 StringToHash(System.String)
L_00d7: stfld System.Int32 randomDeathIdleA
L_00dc: ldarg.0
L_00dd: ldstr "Base Layer.Death.RandomDeath.Death 2"
L_00e2: call Int32 StringToHash(System.String)
L_00e7: stfld System.Int32 randomDeathIdleB
L_00ec: ldarg.0
L_00ed: ldstr "Base Layer.Death.RandomDeath.Death 3"
L_00f2: call Int32 StringToHash(System.String)
L_00f7: stfld System.Int32 randomDeathIdleC
L_00fc: ldarg.0
L_00fd: ldstr "Base Layer.Death.RandomDeath"
L_0102: call Int32 StringToHash(System.String)
L_0107: stfld System.Int32 randomDeathIdleBase
L_010c: ldarg.0
L_010d: ldstr "Base Layer.Death.RandomDeath.Randomize"
L_0112: call Int32 StringToHash(System.String)
L_0117: stfld System.Int32 randomDeathIdleRandomizer
L_011c: ldarg.0
L_011d: ldstr "Base Layer.Hit React.Hit React Light"
L_0122: call Int32 StringToHash(System.String)
L_0127: stfld System.Int32 hitReactLightHash
L_012c: ldarg.0
L_012d: ldstr "Base Layer.Hit React.Hit React Stagger"
L_0132: call Int32 StringToHash(System.String)
L_0137: stfld System.Int32 hitReactHeavyHash
L_013c: ldarg.0
L_013d: ldstr "Base Layer.Hit React.Hit React Melee"
L_0142: call Int32 StringToHash(System.String)
L_0147: stfld System.Int32 hitReactMeleeHash
L_014c: ldarg.0
L_014d: ldstr "Base Layer.Hit React.Melee Dodge"
L_0152: call Int32 StringToHash(System.String)
L_0157: stfld System.Int32 hitReactDodgeHash
L_015c: ldarg.0
L_015d: ldstr "Base Layer.Hit React.DFA"
L_0162: call Int32 StringToHash(System.String)
L_0167: stfld System.Int32 hitReactDFAHash
L_016c: ldarg.0
L_016d: ldc.i4.1
L_016e: stfld System.Boolean allowRandomIdles
L_0173: ldarg.0
L_0174: call Void SetIdleAnimState()
L_0179: ldarg.0
L_017a: ldfld UnityEngine.Animator thisAnimator
L_017f: ldarg.0
L_0180: ldfld System.Int32 idleStateFlavorsHash
L_0185: ldc.i4.0
L_0186: ldc.r4 0
L_018b: ldc.r4 1
L_0190: call Single Range(Single, Single)
L_0195: callvirt Void Play(Int32, Int32, Single)
L_019a: ldarg.0
L_019b: ldc.i4.0
L_019c: stfld System.Boolean IsOnLimpingLeg
L_01a1: ldarg.0
L_01a2: ldc.i4.0
L_01a3: stfld System.Boolean HasCalledOutLimping
L_01a8: ldarg.0
L_01a9: ldc.i4.0
L_01aa: stfld System.Boolean isJumping
L_01af: ldarg.0
L_01b0: ldc.i4.0
L_01b1: stfld System.Boolean isPlayingJumpSound
L_01b6: ldarg.0
L_01b7: ldarg.0
L_01b8: call BattleTech.CombatGameConstants get_Constants()
L_01bd: callvirt BattleTech.VFXNamesDef get_VFXNames()
L_01c2: stloc.s 9 (BattleTech.VFXNamesDef)
L_01c4: ldloca.s 9 (BattleTech.VFXNamesDef)
L_01c6: call System.String[] get_persistentCritNames()
L_01cb: newobj Void .ctor(IEnumerable`1)
L_01d0: stfld System.Collections.Generic.List`1[System.String] persistentCritList
L_01d5: ldarg.0
L_01d6: ldfld UnityEngine.Transform twistTransform
L_01db: ldnull
L_01dc: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_01e1: brfalse Label1
L_01e6: ldc.i4.1
L_01e7: stloc.0
L_01e8: ldarg.0
L_01e9: ldarg.0
L_01ea: ldarg.0
L_01eb: call UnityEngine.Transform get_transform()
L_01f0: ldstr "j_Spine2"
L_01f5: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_01fa: stfld UnityEngine.Transform twistTransform
L_01ff: ldarg.0
L_0200: ldfld UnityEngine.Transform twistTransform
L_0205: ldnull
L_0206: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_020b: brfalse Label2
L_0210: ldstr "ERROR! Couldn't auto-setup twistTransform for mech "
L_0215: ldarg.0
L_0216: call BattleTech.Mech get_parentMech()
L_021b: callvirt System.String get_DisplayName()
L_0220: call System.String Concat(System.String, System.String)
L_0225: call Void LogWarning(System.Object)
L_022a: Label1
L_022a: Label2
L_022a: ldarg.0
L_022b: ldfld UnityEngine.Transform LeftArmAttach
L_0230: ldnull
L_0231: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0236: brfalse Label3
L_023b: ldc.i4.1
L_023c: stloc.0
L_023d: ldarg.0
L_023e: ldarg.0
L_023f: ldarg.0
L_0240: call UnityEngine.Transform get_transform()
L_0245: ldstr "j_LForearm"
L_024a: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_024f: stfld UnityEngine.Transform LeftArmAttach
L_0254: ldarg.0
L_0255: ldfld UnityEngine.Transform LeftArmAttach
L_025a: ldnull
L_025b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0260: brfalse Label4
L_0265: ldstr "ERROR! Couldn't auto-setup LeftArmAttach for mech "
L_026a: ldarg.0
L_026b: call BattleTech.Mech get_parentMech()
L_0270: callvirt System.String get_DisplayName()
L_0275: call System.String Concat(System.String, System.String)
L_027a: call Void LogWarning(System.Object)
L_027f: Label3
L_027f: Label4
L_027f: ldarg.0
L_0280: ldfld UnityEngine.Transform RightArmAttach
L_0285: ldnull
L_0286: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_028b: brfalse Label5
L_0290: ldc.i4.1
L_0291: stloc.0
L_0292: ldarg.0
L_0293: ldarg.0
L_0294: ldarg.0
L_0295: call UnityEngine.Transform get_transform()
L_029a: ldstr "j_RForearm"
L_029f: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_02a4: stfld UnityEngine.Transform RightArmAttach
L_02a9: ldarg.0
L_02aa: ldfld UnityEngine.Transform RightArmAttach
L_02af: ldnull
L_02b0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02b5: brfalse Label6
L_02ba: ldstr "ERROR! Couldn't auto-setup RightArmAttach for mech "
L_02bf: ldarg.0
L_02c0: call BattleTech.Mech get_parentMech()
L_02c5: callvirt System.String get_DisplayName()
L_02ca: call System.String Concat(System.String, System.String)
L_02cf: call Void LogWarning(System.Object)
L_02d4: Label5
L_02d4: Label6
L_02d4: ldarg.0
L_02d5: ldfld UnityEngine.Transform TorsoAttach
L_02da: ldnull
L_02db: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_02e0: brfalse Label7
L_02e5: ldc.i4.1
L_02e6: stloc.0
L_02e7: ldarg.0
L_02e8: ldarg.0
L_02e9: ldarg.0
L_02ea: call UnityEngine.Transform get_transform()
L_02ef: ldstr "j_Spine2"
L_02f4: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_02f9: stfld UnityEngine.Transform TorsoAttach
L_02fe: ldarg.0
L_02ff: ldfld UnityEngine.Transform TorsoAttach
L_0304: ldnull
L_0305: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_030a: brfalse Label8
L_030f: ldstr "ERROR! Couldn't auto-setup TorsoAttach for mech "
L_0314: ldarg.0
L_0315: call BattleTech.Mech get_parentMech()
L_031a: callvirt System.String get_DisplayName()
L_031f: call System.String Concat(System.String, System.String)
L_0324: call Void LogWarning(System.Object)
L_0329: Label7
L_0329: Label8
L_0329: ldarg.0
L_032a: ldfld UnityEngine.Transform LeftLegAttach
L_032f: ldnull
L_0330: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0335: brfalse Label9
L_033a: ldc.i4.1
L_033b: stloc.0
L_033c: ldarg.0
L_033d: ldarg.0
L_033e: ldarg.0
L_033f: call UnityEngine.Transform get_transform()
L_0344: ldstr "j_LCalf"
L_0349: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_034e: stfld UnityEngine.Transform LeftLegAttach
L_0353: ldarg.0
L_0354: ldfld UnityEngine.Transform LeftLegAttach
L_0359: ldnull
L_035a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_035f: brfalse Label10
L_0364: ldstr "ERROR! Couldn't auto-setup LeftLegAttach for mech "
L_0369: ldarg.0
L_036a: call BattleTech.Mech get_parentMech()
L_036f: callvirt System.String get_DisplayName()
L_0374: call System.String Concat(System.String, System.String)
L_0379: call Void LogWarning(System.Object)
L_037e: Label9
L_037e: Label10
L_037e: ldarg.0
L_037f: ldfld UnityEngine.Transform leftFootTransform
L_0384: ldnull
L_0385: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_038a: brfalse Label11
L_038f: ldc.i4.1
L_0390: stloc.0
L_0391: ldarg.0
L_0392: ldarg.0
L_0393: ldarg.0
L_0394: call UnityEngine.Transform get_transform()
L_0399: ldstr "j_LHeel"
L_039e: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_03a3: stfld UnityEngine.Transform leftFootTransform
L_03a8: ldarg.0
L_03a9: ldfld UnityEngine.Transform leftFootTransform
L_03ae: ldnull
L_03af: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03b4: brfalse Label12
L_03b9: ldstr "ERROR! Couldn't auto-setup leftFootTransform for mech "
L_03be: ldarg.0
L_03bf: call BattleTech.Mech get_parentMech()
L_03c4: callvirt System.String get_DisplayName()
L_03c9: call System.String Concat(System.String, System.String)
L_03ce: call Void LogWarning(System.Object)
L_03d3: Label11
L_03d3: Label12
L_03d3: ldarg.0
L_03d4: ldfld UnityEngine.Transform RightLegAttach
L_03d9: ldnull
L_03da: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_03df: brfalse Label13
L_03e4: ldc.i4.1
L_03e5: stloc.0
L_03e6: ldarg.0
L_03e7: ldarg.0
L_03e8: ldarg.0
L_03e9: call UnityEngine.Transform get_transform()
L_03ee: ldstr "j_RCalf"
L_03f3: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_03f8: stfld UnityEngine.Transform RightLegAttach
L_03fd: ldarg.0
L_03fe: ldfld UnityEngine.Transform RightLegAttach
L_0403: ldnull
L_0404: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0409: brfalse Label14
L_040e: ldstr "ERROR! Couldn't auto-setup RightLegAttach for mech "
L_0413: ldarg.0
L_0414: call BattleTech.Mech get_parentMech()
L_0419: callvirt System.String get_DisplayName()
L_041e: call System.String Concat(System.String, System.String)
L_0423: call Void LogWarning(System.Object)
L_0428: Label13
L_0428: Label14
L_0428: ldarg.0
L_0429: ldfld UnityEngine.Transform rightFootTransform
L_042e: ldnull
L_042f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0434: brfalse Label15
L_0439: ldc.i4.1
L_043a: stloc.0
L_043b: ldarg.0
L_043c: ldarg.0
L_043d: ldarg.0
L_043e: call UnityEngine.Transform get_transform()
L_0443: ldstr "j_RHeel"
L_0448: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_044d: stfld UnityEngine.Transform rightFootTransform
L_0452: ldarg.0
L_0453: ldfld UnityEngine.Transform rightFootTransform
L_0458: ldnull
L_0459: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_045e: brfalse Label16
L_0463: ldstr "ERROR! Couldn't auto-setup rightFootTransform for mech "
L_0468: ldarg.0
L_0469: call BattleTech.Mech get_parentMech()
L_046e: callvirt System.String get_DisplayName()
L_0473: call System.String Concat(System.String, System.String)
L_0478: call Void LogWarning(System.Object)
L_047d: Label15
L_047d: Label16
L_047d: ldarg.0
L_047e: ldfld UnityEngine.Transform vfxCenterTorsoTransform
L_0483: ldnull
L_0484: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0489: brfalse Label17
L_048e: ldc.i4.1
L_048f: stloc.0
L_0490: ldarg.0
L_0491: ldarg.0
L_0492: ldfld UnityEngine.Transform twistTransform
L_0497: stfld UnityEngine.Transform vfxCenterTorsoTransform
L_049c: ldarg.0
L_049d: ldfld UnityEngine.Transform vfxCenterTorsoTransform
L_04a2: ldnull
L_04a3: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04a8: brfalse Label18
L_04ad: ldstr "ERROR! Couldn't auto-setup vfxCenterTorsoTransform for mech "
L_04b2: ldarg.0
L_04b3: call BattleTech.Mech get_parentMech()
L_04b8: callvirt System.String get_DisplayName()
L_04bd: call System.String Concat(System.String, System.String)
L_04c2: call Void LogWarning(System.Object)
L_04c7: Label17
L_04c7: Label18
L_04c7: ldarg.0
L_04c8: ldfld UnityEngine.Transform vfxLeftArmTransform
L_04cd: ldnull
L_04ce: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04d3: brfalse Label19
L_04d8: ldc.i4.1
L_04d9: stloc.0
L_04da: ldarg.0
L_04db: ldarg.0
L_04dc: ldfld UnityEngine.Transform LeftArmAttach
L_04e1: stfld UnityEngine.Transform vfxLeftArmTransform
L_04e6: ldarg.0
L_04e7: ldfld UnityEngine.Transform vfxLeftArmTransform
L_04ec: ldnull
L_04ed: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_04f2: brfalse Label20
L_04f7: ldstr "ERROR! Couldn't auto-setup vfxLeftArmTransform for mech "
L_04fc: ldarg.0
L_04fd: call BattleTech.Mech get_parentMech()
L_0502: callvirt System.String get_DisplayName()
L_0507: call System.String Concat(System.String, System.String)
L_050c: call Void LogWarning(System.Object)
L_0511: Label19
L_0511: Label20
L_0511: ldarg.0
L_0512: ldfld UnityEngine.Transform vfxRightArmTransform
L_0517: ldnull
L_0518: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_051d: brfalse Label21
L_0522: ldc.i4.1
L_0523: stloc.0
L_0524: ldarg.0
L_0525: ldarg.0
L_0526: ldfld UnityEngine.Transform RightArmAttach
L_052b: stfld UnityEngine.Transform vfxRightArmTransform
L_0530: ldarg.0
L_0531: ldfld UnityEngine.Transform vfxRightArmTransform
L_0536: ldnull
L_0537: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_053c: brfalse Label22
L_0541: ldstr "ERROR! Couldn't auto-setup vfxRightArmTransform for mech "
L_0546: ldarg.0
L_0547: call BattleTech.Mech get_parentMech()
L_054c: callvirt System.String get_DisplayName()
L_0551: call System.String Concat(System.String, System.String)
L_0556: call Void LogWarning(System.Object)
L_055b: Label21
L_055b: Label22
L_055b: ldarg.0
L_055c: ldfld UnityEngine.Transform vfxHeadTransform
L_0561: ldnull
L_0562: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0567: brfalse Label23
L_056c: ldc.i4.1
L_056d: stloc.0
L_056e: ldarg.0
L_056f: ldarg.0
L_0570: ldfld UnityEngine.Transform twistTransform
L_0575: stfld UnityEngine.Transform vfxHeadTransform
L_057a: ldarg.0
L_057b: ldfld UnityEngine.Transform vfxHeadTransform
L_0580: ldnull
L_0581: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0586: brfalse Label24
L_058b: ldstr "ERROR! Couldn't auto-setup vfxHeadTransform for mech "
L_0590: ldarg.0
L_0591: call BattleTech.Mech get_parentMech()
L_0596: callvirt System.String get_DisplayName()
L_059b: call System.String Concat(System.String, System.String)
L_05a0: call Void LogWarning(System.Object)
L_05a5: Label23
L_05a5: Label24
L_05a5: ldarg.0
L_05a6: ldfld UnityEngine.Transform vfxLeftArmTransform
L_05ab: ldnull
L_05ac: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05b1: brfalse Label25
L_05b6: ldc.i4.1
L_05b7: stloc.0
L_05b8: ldarg.0
L_05b9: ldarg.0
L_05ba: ldfld UnityEngine.Transform LeftArmAttach
L_05bf: stfld UnityEngine.Transform vfxLeftArmTransform
L_05c4: ldarg.0
L_05c5: ldfld UnityEngine.Transform vfxLeftArmTransform
L_05ca: ldnull
L_05cb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05d0: brfalse Label26
L_05d5: ldstr "ERROR! Couldn't auto-setup vfxLeftArmTransform for mech "
L_05da: ldarg.0
L_05db: call BattleTech.Mech get_parentMech()
L_05e0: callvirt System.String get_DisplayName()
L_05e5: call System.String Concat(System.String, System.String)
L_05ea: call Void LogWarning(System.Object)
L_05ef: Label25
L_05ef: Label26
L_05ef: ldarg.0
L_05f0: ldfld UnityEngine.Transform vfxRightArmTransform
L_05f5: ldnull
L_05f6: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_05fb: brfalse Label27
L_0600: ldc.i4.1
L_0601: stloc.0
L_0602: ldarg.0
L_0603: ldarg.0
L_0604: ldfld UnityEngine.Transform RightArmAttach
L_0609: stfld UnityEngine.Transform vfxRightArmTransform
L_060e: ldarg.0
L_060f: ldfld UnityEngine.Transform vfxRightArmTransform
L_0614: ldnull
L_0615: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_061a: brfalse Label28
L_061f: ldstr "ERROR! Couldn't auto-setup vfxRightArmTransform for mech "
L_0624: ldarg.0
L_0625: call BattleTech.Mech get_parentMech()
L_062a: callvirt System.String get_DisplayName()
L_062f: call System.String Concat(System.String, System.String)
L_0634: call Void LogWarning(System.Object)
L_0639: Label27
L_0639: Label28
L_0639: ldarg.0
L_063a: ldfld UnityEngine.Transform vfxLeftLegTransform
L_063f: ldnull
L_0640: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0645: brfalse Label29
L_064a: ldc.i4.1
L_064b: stloc.0
L_064c: ldarg.0
L_064d: ldarg.0
L_064e: ldfld UnityEngine.Transform LeftLegAttach
L_0653: stfld UnityEngine.Transform vfxLeftLegTransform
L_0658: ldarg.0
L_0659: ldfld UnityEngine.Transform vfxLeftLegTransform
L_065e: ldnull
L_065f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0664: brfalse Label30
L_0669: ldstr "ERROR! Couldn't auto-setup vfxLeftLegTransform for mech "
L_066e: ldarg.0
L_066f: call BattleTech.Mech get_parentMech()
L_0674: callvirt System.String get_DisplayName()
L_0679: call System.String Concat(System.String, System.String)
L_067e: call Void LogWarning(System.Object)
L_0683: Label29
L_0683: Label30
L_0683: ldarg.0
L_0684: ldfld UnityEngine.Transform vfxRightLegTransform
L_0689: ldnull
L_068a: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_068f: brfalse Label31
L_0694: ldc.i4.1
L_0695: stloc.0
L_0696: ldarg.0
L_0697: ldarg.0
L_0698: ldfld UnityEngine.Transform RightLegAttach
L_069d: stfld UnityEngine.Transform vfxRightLegTransform
L_06a2: ldarg.0
L_06a3: ldfld UnityEngine.Transform vfxRightLegTransform
L_06a8: ldnull
L_06a9: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_06ae: brfalse Label32
L_06b3: ldstr "ERROR! Couldn't auto-setup vfxRightLegTransform for mech "
L_06b8: ldarg.0
L_06b9: call BattleTech.Mech get_parentMech()
L_06be: callvirt System.String get_DisplayName()
L_06c3: call System.String Concat(System.String, System.String)
L_06c8: call Void LogWarning(System.Object)
L_06cd: Label31
L_06cd: Label32
L_06cd: ldarg.0
L_06ce: ldfld UnityEngine.GameObject BlipObjectUnknown
L_06d3: ldnull
L_06d4: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_06d9: brfalse Label33
L_06de: ldc.i4.1
L_06df: stloc.0
L_06e0: ldarg.0
L_06e1: ldarg.0
L_06e2: call UnityEngine.Transform get_transform()
L_06e7: ldstr "BlipObjectUnknown"
L_06ec: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_06f1: stloc.s 10 (UnityEngine.Transform)
L_06f3: ldloc.s 10 (UnityEngine.Transform)
L_06f5: ldnull
L_06f6: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_06fb: brfalse Label34
L_0700: ldarg.0
L_0701: ldloc.s 10 (UnityEngine.Transform)
L_0703: callvirt UnityEngine.GameObject get_gameObject()
L_0708: stfld UnityEngine.GameObject BlipObjectUnknown
L_070d: Label34
L_070d: ldarg.0
L_070e: ldfld UnityEngine.GameObject BlipObjectUnknown
L_0713: ldnull
L_0714: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0719: brfalse Label35
L_071e: ldstr "ERROR! Couldn't auto-setup Unknown Blip for mech "
L_0723: ldarg.0
L_0724: call BattleTech.Mech get_parentMech()
L_0729: callvirt System.String get_DisplayName()
L_072e: call System.String Concat(System.String, System.String)
L_0733: call Void LogWarning(System.Object)
L_0738: Label33
L_0738: Label35
L_0738: ldarg.0
L_0739: ldfld UnityEngine.GameObject BlipObjectIdentified
L_073e: ldnull
L_073f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0744: brfalse Label36
L_0749: ldc.i4.1
L_074a: stloc.0
L_074b: ldarg.0
L_074c: ldarg.0
L_074d: call UnityEngine.Transform get_transform()
L_0752: ldstr "BlipObjectIdentified"
L_0757: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_075c: stloc.s 11 (UnityEngine.Transform)
L_075e: ldloc.s 11 (UnityEngine.Transform)
L_0760: ldnull
L_0761: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0766: brfalse Label37
L_076b: ldarg.0
L_076c: ldloc.s 11 (UnityEngine.Transform)
L_076e: callvirt UnityEngine.GameObject get_gameObject()
L_0773: stfld UnityEngine.GameObject BlipObjectIdentified
L_0778: Label37
L_0778: ldarg.0
L_0779: ldfld UnityEngine.GameObject BlipObjectIdentified
L_077e: ldnull
L_077f: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0784: brfalse Label38
L_0789: ldstr "ERROR! Couldn't auto-setup Identified Blip for mech "
L_078e: ldarg.0
L_078f: call BattleTech.Mech get_parentMech()
L_0794: callvirt System.String get_DisplayName()
L_0799: call System.String Concat(System.String, System.String)
L_079e: call Void LogWarning(System.Object)
L_07a3: Label36
L_07a3: Label38
L_07a3: ldarg.0
L_07a4: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_07a9: ldnull
L_07aa: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_07af: brfalse Label39
L_07b4: ldc.i4.1
L_07b5: stloc.0
L_07b6: ldarg.0
L_07b7: ldarg.0
L_07b8: call UnityEngine.Transform get_transform()
L_07bd: ldstr "BlipObjectGhostWeak"
L_07c2: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_07c7: stloc.s 12 (UnityEngine.Transform)
L_07c9: ldloc.s 12 (UnityEngine.Transform)
L_07cb: ldnull
L_07cc: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_07d1: brfalse Label40
L_07d6: ldarg.0
L_07d7: ldloc.s 12 (UnityEngine.Transform)
L_07d9: callvirt UnityEngine.GameObject get_gameObject()
L_07de: stfld UnityEngine.GameObject BlipObjectGhostWeak
L_07e3: Label40
L_07e3: ldarg.0
L_07e4: ldfld UnityEngine.GameObject BlipObjectGhostWeak
L_07e9: ldnull
L_07ea: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_07ef: brfalse Label41
L_07f4: ldstr "ERROR! Couldn't auto-setup Weak Ghost Blip for mech "
L_07f9: ldarg.0
L_07fa: call BattleTech.Mech get_parentMech()
L_07ff: callvirt System.String get_DisplayName()
L_0804: call System.String Concat(System.String, System.String)
L_0809: call Void LogWarning(System.Object)
L_080e: Label39
L_080e: Label41
L_080e: ldarg.0
L_080f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0814: ldnull
L_0815: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_081a: brfalse Label42
L_081f: ldc.i4.1
L_0820: stloc.0
L_0821: ldarg.0
L_0822: ldarg.0
L_0823: call UnityEngine.Transform get_transform()
L_0828: ldstr "BlipObjectGhostStrong"
L_082d: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0832: stloc.s 13 (UnityEngine.Transform)
L_0834: ldloc.s 13 (UnityEngine.Transform)
L_0836: ldnull
L_0837: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_083c: brfalse Label43
L_0841: ldarg.0
L_0842: ldloc.s 13 (UnityEngine.Transform)
L_0844: callvirt UnityEngine.GameObject get_gameObject()
L_0849: stfld UnityEngine.GameObject BlipObjectGhostStrong
L_084e: Label43
L_084e: ldarg.0
L_084f: ldfld UnityEngine.GameObject BlipObjectGhostStrong
L_0854: ldnull
L_0855: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_085a: brfalse Label44
L_085f: ldstr "ERROR! Couldn't auto-setup Strong Ghost Blip for mech "
L_0864: ldarg.0
L_0865: call BattleTech.Mech get_parentMech()
L_086a: callvirt System.String get_DisplayName()
L_086f: call System.String Concat(System.String, System.String)
L_0874: call Void LogWarning(System.Object)
L_0879: Label42
L_0879: Label44
L_0879: ldarg.0
L_087a: ldfld MechDestructibleObject headDestructible
L_087f: ldnull
L_0880: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0885: brfalse Label45
L_088a: ldc.i4.1
L_088b: stloc.0
L_088c: ldarg.0
L_088d: ldarg.0
L_088e: call UnityEngine.Transform get_transform()
L_0893: ldstr "Head_whole"
L_0898: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_089d: stloc.s 14 (UnityEngine.Transform)
L_089f: ldloc.s 14 (UnityEngine.Transform)
L_08a1: ldnull
L_08a2: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_08a7: brfalse Label46
L_08ac: ldarg.0
L_08ad: ldloc.s 14 (UnityEngine.Transform)
L_08af: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_08b4: stfld MechDestructibleObject headDestructible
L_08b9: Label46
L_08b9: ldarg.0
L_08ba: ldfld MechDestructibleObject headDestructible
L_08bf: ldnull
L_08c0: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_08c5: brfalse Label47
L_08ca: ldstr "ERROR! Couldn't auto-setup headDestructible for mech "
L_08cf: ldarg.0
L_08d0: call BattleTech.Mech get_parentMech()
L_08d5: callvirt System.String get_DisplayName()
L_08da: call System.String Concat(System.String, System.String)
L_08df: call Void LogWarning(System.Object)
L_08e4: Label45
L_08e4: Label47
L_08e4: ldarg.0
L_08e5: ldfld MechDestructibleObject centerTorsoDestructible
L_08ea: ldnull
L_08eb: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_08f0: brfalse Label48
L_08f5: ldc.i4.1
L_08f6: stloc.0
L_08f7: ldarg.0
L_08f8: ldarg.0
L_08f9: call UnityEngine.Transform get_transform()
L_08fe: ldstr "torso_whole"
L_0903: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0908: stloc.s 15 (UnityEngine.Transform)
L_090a: ldloc.s 15 (UnityEngine.Transform)
L_090c: ldnull
L_090d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0912: brfalse Label49
L_0917: ldarg.0
L_0918: ldloc.s 15 (UnityEngine.Transform)
L_091a: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_091f: stfld MechDestructibleObject centerTorsoDestructible
L_0924: Label49
L_0924: ldarg.0
L_0925: ldfld MechDestructibleObject centerTorsoDestructible
L_092a: ldnull
L_092b: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0930: brfalse Label50
L_0935: ldstr "ERROR! Couldn't auto-setup centerTorsoDestructible for mech "
L_093a: ldarg.0
L_093b: call BattleTech.Mech get_parentMech()
L_0940: callvirt System.String get_DisplayName()
L_0945: call System.String Concat(System.String, System.String)
L_094a: call Void LogWarning(System.Object)
L_094f: Label48
L_094f: Label50
L_094f: ldarg.0
L_0950: ldfld MechDestructibleObject leftTorsoDestructible
L_0955: ldnull
L_0956: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_095b: brfalse Label51
L_0960: ldc.i4.1
L_0961: stloc.0
L_0962: ldarg.0
L_0963: ldarg.0
L_0964: call UnityEngine.Transform get_transform()
L_0969: ldstr "lefttorso_whole"
L_096e: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0973: stloc.s 16 (UnityEngine.Transform)
L_0975: ldloc.s 16 (UnityEngine.Transform)
L_0977: ldnull
L_0978: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_097d: brfalse Label52
L_0982: ldarg.0
L_0983: ldloc.s 16 (UnityEngine.Transform)
L_0985: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_098a: stfld MechDestructibleObject leftTorsoDestructible
L_098f: Label52
L_098f: ldarg.0
L_0990: ldfld MechDestructibleObject leftTorsoDestructible
L_0995: ldnull
L_0996: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_099b: brfalse Label53
L_09a0: ldstr "ERROR! Couldn't auto-setup leftTorsoDestructible for mech "
L_09a5: ldarg.0
L_09a6: call BattleTech.Mech get_parentMech()
L_09ab: callvirt System.String get_DisplayName()
L_09b0: call System.String Concat(System.String, System.String)
L_09b5: call Void LogWarning(System.Object)
L_09ba: Label51
L_09ba: Label53
L_09ba: ldarg.0
L_09bb: ldfld MechDestructibleObject rightTorsoDestructible
L_09c0: ldnull
L_09c1: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_09c6: brfalse Label54
L_09cb: ldc.i4.1
L_09cc: stloc.0
L_09cd: ldarg.0
L_09ce: ldarg.0
L_09cf: call UnityEngine.Transform get_transform()
L_09d4: ldstr "righttorso_whole"
L_09d9: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_09de: stloc.s 17 (UnityEngine.Transform)
L_09e0: ldloc.s 17 (UnityEngine.Transform)
L_09e2: ldnull
L_09e3: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_09e8: brfalse Label55
L_09ed: ldarg.0
L_09ee: ldloc.s 17 (UnityEngine.Transform)
L_09f0: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_09f5: stfld MechDestructibleObject rightTorsoDestructible
L_09fa: Label55
L_09fa: ldarg.0
L_09fb: ldfld MechDestructibleObject rightTorsoDestructible
L_0a00: ldnull
L_0a01: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a06: brfalse Label56
L_0a0b: ldstr "ERROR! Couldn't auto-setup rightTorsoDestructible for mech "
L_0a10: ldarg.0
L_0a11: call BattleTech.Mech get_parentMech()
L_0a16: callvirt System.String get_DisplayName()
L_0a1b: call System.String Concat(System.String, System.String)
L_0a20: call Void LogWarning(System.Object)
L_0a25: Label54
L_0a25: Label56
L_0a25: ldarg.0
L_0a26: ldfld MechDestructibleObject leftArmDestructible
L_0a2b: ldnull
L_0a2c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a31: brfalse Label57
L_0a36: ldc.i4.1
L_0a37: stloc.0
L_0a38: ldarg.0
L_0a39: ldarg.0
L_0a3a: call UnityEngine.Transform get_transform()
L_0a3f: ldstr "LArm_whole"
L_0a44: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0a49: stloc.s 18 (UnityEngine.Transform)
L_0a4b: ldloc.s 18 (UnityEngine.Transform)
L_0a4d: ldnull
L_0a4e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0a53: brfalse Label58
L_0a58: ldarg.0
L_0a59: ldloc.s 18 (UnityEngine.Transform)
L_0a5b: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0a60: stfld MechDestructibleObject leftArmDestructible
L_0a65: Label58
L_0a65: ldarg.0
L_0a66: ldfld MechDestructibleObject leftArmDestructible
L_0a6b: ldnull
L_0a6c: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a71: brfalse Label59
L_0a76: ldstr "ERROR! Couldn't auto-setup leftArmDestructible for mech "
L_0a7b: ldarg.0
L_0a7c: call BattleTech.Mech get_parentMech()
L_0a81: callvirt System.String get_DisplayName()
L_0a86: call System.String Concat(System.String, System.String)
L_0a8b: call Void LogWarning(System.Object)
L_0a90: Label57
L_0a90: Label59
L_0a90: ldarg.0
L_0a91: ldfld MechDestructibleObject rightArmDestructible
L_0a96: ldnull
L_0a97: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0a9c: brfalse Label60
L_0aa1: ldc.i4.1
L_0aa2: stloc.0
L_0aa3: ldarg.0
L_0aa4: ldarg.0
L_0aa5: call UnityEngine.Transform get_transform()
L_0aaa: ldstr "RArm_whole"
L_0aaf: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0ab4: stloc.s 19 (UnityEngine.Transform)
L_0ab6: ldloc.s 19 (UnityEngine.Transform)
L_0ab8: ldnull
L_0ab9: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0abe: brfalse Label61
L_0ac3: ldarg.0
L_0ac4: ldloc.s 19 (UnityEngine.Transform)
L_0ac6: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0acb: stfld MechDestructibleObject rightArmDestructible
L_0ad0: Label61
L_0ad0: ldarg.0
L_0ad1: ldfld MechDestructibleObject rightArmDestructible
L_0ad6: ldnull
L_0ad7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0adc: brfalse Label62
L_0ae1: ldstr "ERROR! Couldn't auto-setup rightArmDestructible for mech "
L_0ae6: ldarg.0
L_0ae7: call BattleTech.Mech get_parentMech()
L_0aec: callvirt System.String get_DisplayName()
L_0af1: call System.String Concat(System.String, System.String)
L_0af6: call Void LogWarning(System.Object)
L_0afb: Label60
L_0afb: Label62
L_0afb: ldarg.0
L_0afc: ldfld MechDestructibleObject leftLegDestructible
L_0b01: ldnull
L_0b02: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b07: brfalse Label63
L_0b0c: ldc.i4.1
L_0b0d: stloc.0
L_0b0e: ldarg.0
L_0b0f: ldarg.0
L_0b10: call UnityEngine.Transform get_transform()
L_0b15: ldstr "LLeg_whole"
L_0b1a: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0b1f: stloc.s 20 (UnityEngine.Transform)
L_0b21: ldloc.s 20 (UnityEngine.Transform)
L_0b23: ldnull
L_0b24: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0b29: brfalse Label64
L_0b2e: ldarg.0
L_0b2f: ldloc.s 20 (UnityEngine.Transform)
L_0b31: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0b36: stfld MechDestructibleObject leftLegDestructible
L_0b3b: Label64
L_0b3b: ldarg.0
L_0b3c: ldfld MechDestructibleObject leftLegDestructible
L_0b41: ldnull
L_0b42: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b47: brfalse Label65
L_0b4c: ldstr "ERROR! Couldn't auto-setup leftLegDestructible for mech "
L_0b51: ldarg.0
L_0b52: call BattleTech.Mech get_parentMech()
L_0b57: callvirt System.String get_DisplayName()
L_0b5c: call System.String Concat(System.String, System.String)
L_0b61: call Void LogWarning(System.Object)
L_0b66: Label63
L_0b66: Label65
L_0b66: ldarg.0
L_0b67: ldfld MechDestructibleObject rightLegDestructible
L_0b6c: ldnull
L_0b6d: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0b72: brfalse Label66
L_0b77: ldc.i4.1
L_0b78: stloc.0
L_0b79: ldarg.0
L_0b7a: ldarg.0
L_0b7b: call UnityEngine.Transform get_transform()
L_0b80: ldstr "RLeg_whole"
L_0b85: call UnityEngine.Transform findRecursive(UnityEngine.Transform, System.String)
L_0b8a: stloc.s 21 (UnityEngine.Transform)
L_0b8c: ldloc.s 21 (UnityEngine.Transform)
L_0b8e: ldnull
L_0b8f: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0b94: brfalse Label67
L_0b99: ldarg.0
L_0b9a: ldloc.s 21 (UnityEngine.Transform)
L_0b9c: callvirt MechDestructibleObject GetComponent[MechDestructibleObject]()
L_0ba1: stfld MechDestructibleObject rightLegDestructible
L_0ba6: Label67
L_0ba6: ldarg.0
L_0ba7: ldfld MechDestructibleObject rightLegDestructible
L_0bac: ldnull
L_0bad: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0bb2: brfalse Label68
L_0bb7: ldstr "ERROR! Couldn't auto-setup rightLegDestructible for mech "
L_0bbc: ldarg.0
L_0bbd: call BattleTech.Mech get_parentMech()
L_0bc2: callvirt System.String get_DisplayName()
L_0bc7: call System.String Concat(System.String, System.String)
L_0bcc: call Void LogWarning(System.Object)
L_0bd1: Label66
L_0bd1: Label68
L_0bd1: ldarg.0
L_0bd2: ldfld UnityEngine.GameObject VisibleObject
L_0bd7: ldnull
L_0bd8: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0bdd: brfalse Label69
L_0be2: ldstr "================= ERROR! Mech "
L_0be7: ldarg.0
L_0be8: call BattleTech.Mech get_parentMech()
L_0bed: callvirt System.String get_DisplayName()
L_0bf2: ldstr " has no visible object!!! FIX THIS ======================"
L_0bf7: call System.String Concat(System.String, System.String, System.String)
L_0bfc: call Void LogError(System.Object)
L_0c01: br Label70
L_0c06: Label69
L_0c06: ldarg.0
L_0c07: ldarg.0
L_0c08: call UnityEngine.GameObject get_gameObject()
L_0c0d: callvirt BattleTech.Rendering.MechMeshMerge AddComponent[MechMeshMerge]()
L_0c12: stfld BattleTech.Rendering.MechMeshMerge mechMerge
L_0c17: Label70
L_0c17: ldloc.0
L_0c18: brfalse Label71
L_0c1d: ldstr "================== ERROR! Found missing transforms in mech "
L_0c22: ldarg.0
L_0c23: call BattleTech.Mech get_parentMech()
L_0c28: callvirt System.String get_DisplayName()
L_0c2d: ldstr "; auto-settings are going to look wrong! FIX THIS ============"
L_0c32: call System.String Concat(System.String, System.String, System.String)
L_0c37: call Void LogError(System.Object)
L_0c3c: Label71
L_0c3c: ldarg.0
L_0c3d: ldfld AkGameObj audioObject
L_0c42: ldnull
L_0c43: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_0c48: brfalse Label72
L_0c4d: ldstr "================= ERROR! Mech "
L_0c52: ldarg.0
L_0c53: call BattleTech.Mech get_parentMech()
L_0c58: callvirt System.String get_DisplayName()
L_0c5d: ldstr " has no audio object!!! FIX THIS ======================"
L_0c62: call System.String Concat(System.String, System.String, System.String)
L_0c67: call Void LogError(System.Object)
L_0c6c: Label72
L_0c6c: ldarg.0
L_0c6d: ldfld AkGameObj audioObject
L_0c72: ldnull
L_0c73: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0c78: brfalse Label73
L_0c7d: ldc.i4.1
L_0c7e: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0c80: ldarg.0
L_0c81: call BattleTech.Mech get_parentMech()
L_0c86: callvirt BattleTech.MechDef get_MechDef()
L_0c8b: callvirt BattleTech.ChassisDef get_Chassis()
L_0c90: callvirt BattleTech.WeightClass get_weightClass()
L_0c95: stloc.s 23 (BattleTech.WeightClass)
L_0c97: ldloc.s 23 (BattleTech.WeightClass)
L_0c99: ldc.i4.s 40
L_0c9b: bgt Label74
L_0ca0: ldloc.s 23 (BattleTech.WeightClass)
L_0ca2: ldc.i4.s 20
L_0ca4: beq Label75
L_0ca9: ldloc.s 23 (BattleTech.WeightClass)
L_0cab: ldc.i4.s 40
L_0cad: beq Label76
L_0cb2: br Label77
L_0cb7: Label74
L_0cb7: ldloc.s 23 (BattleTech.WeightClass)
L_0cb9: ldc.i4.s 60
L_0cbb: beq Label78
L_0cc0: ldloc.s 23 (BattleTech.WeightClass)
L_0cc2: ldc.i4.s 80
L_0cc4: beq Label79
L_0cc9: br Label80
L_0cce: Label75
L_0cce: ldc.i4.0
L_0ccf: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0cd1: br Label81
L_0cd6: Label76
L_0cd6: ldc.i4.1
L_0cd7: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0cd9: br Label82
L_0cde: Label78
L_0cde: ldc.i4.2
L_0cdf: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0ce1: br Label83
L_0ce6: Label79
L_0ce6: ldc.i4.3
L_0ce7: stloc.s 22 (AudioSwitch_mech_weight_type)
L_0ce9: Label77
L_0ce9: Label80
L_0ce9: Label81
L_0ce9: Label82
L_0ce9: Label83
L_0ce9: ldloc.s 22 (AudioSwitch_mech_weight_type)
L_0ceb: ldarg.0
L_0cec: ldfld AkGameObj audioObject
L_0cf1: call Void SetSwitch[AudioSwitch_mech_weight_type](AudioSwitch_mech_weight_type, AkGameObj)
L_0cf6: ldarg.0
L_0cf7: ldfld System.Boolean useBirdFoot
L_0cfc: brfalse Label84
L_0d01: ldc.i4.0
L_0d02: ldarg.0
L_0d03: ldfld AkGameObj audioObject
L_0d08: call Void SetSwitch[AudioSwitch_mech_foot_type](AudioSwitch_mech_foot_type, AkGameObj)
L_0d0d: br Label85
L_0d12: Label84
L_0d12: ldc.i4.1
L_0d13: ldarg.0
L_0d14: ldfld AkGameObj audioObject
L_0d19: call Void SetSwitch[AudioSwitch_mech_foot_type](AudioSwitch_mech_foot_type, AkGameObj)
L_0d1e: Label85
L_0d1e: ldc.i4 384
L_0d23: ldc.r4 100
L_0d28: ldarg.1
L_0d29: callvirt Single get_tonnage()
L_0d2e: sub
L_0d2f: ldarg.0
L_0d30: ldfld AkGameObj audioObject
L_0d35: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_0d3a: ldc.i4 389
L_0d3f: ldc.r4 0
L_0d44: ldarg.0
L_0d45: ldfld AkGameObj audioObject
L_0d4a: call Void SetRTPC[AudioRTPCList](AudioRTPCList, Single, AkGameObj)
L_0d4f: ldc.i4.0
L_0d50: ldarg.0
L_0d51: ldfld AkGameObj audioObject
L_0d56: call Void SetSwitch[AudioSwitch_mech_engine_damaged_mildly_yesno](AudioSwitch_mech_engine_damaged_mildly_yesno, AkGameObj)
L_0d5b: ldc.i4.0
L_0d5c: ldarg.0
L_0d5d: ldfld AkGameObj audioObject
L_0d62: call Void SetSwitch[AudioSwitch_mech_engine_damaged_badly_yesno](AudioSwitch_mech_engine_damaged_badly_yesno, AkGameObj)
L_0d67: Label73
L_0d67: ldarg.1
L_0d68: callvirt BattleTech.MechDef get_MechDef()
L_0d6d: callvirt BattleTech.MechComponentRef[] get_Inventory()
L_0d72: ldsfld System.Func`2[BattleTech.MechComponentRef,System.Boolean] <>9__87_0
L_0d77: dup
L_0d78: brtrue Label86
L_0d7d: pop
L_0d7e: ldsfld BattleTech.MechRepresentation+<>c <>9
L_0d83: ldftn Boolean <Init>b__87_0(BattleTech.MechComponentRef)
L_0d89: newobj Void .ctor(Object, IntPtr)
L_0d8e: dup
L_0d8f: stsfld System.Func`2[BattleTech.MechComponentRef,System.Boolean] <>9__87_0
L_0d94: Label86
L_0d94: call System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef] Where[MechComponentRef](System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef], System.Func`2[BattleTech.MechComponentRef,System.Boolean])
L_0d99: call Int32 Count[MechComponentRef](System.Collections.Generic.IEnumerable`1[BattleTech.MechComponentRef])
L_0d9e: stloc.1
L_0d9f: ldloc.1
L_0da0: ldc.i4.0
L_0da1: ble Label87
L_0da6: ldarg.0
L_0da7: ldarg.1
L_0da8: ldarg.1
L_0da9: callvirt BattleTech.MechDef get_MechDef()
L_0dae: ldarg.1
L_0daf: callvirt BattleTech.CombatGameState get_Combat()
L_0db4: callvirt BattleTech.Data.DataManager get_DataManager()
L_0db9: call Void SetupJumpJets(BattleTech.Mech, BattleTech.MechDef, BattleTech.Data.DataManager)
L_0dbe: ldarg.1
L_0dbf: callvirt BattleTech.CombatGameState get_Combat()
L_0dc4: callvirt BattleTech.Data.DataManager get_DataManager()
L_0dc9: ldstr "JumpjetCurves"
L_0dce: ldc.i4.s 45
L_0dd0: ldloc.1
L_0dd1: callvirt Void PrecachePrefab(System.String, BattleTech.BattleTechResourceType, Int32)
L_0dd6: Label87
L_0dd6: ldstr "chrPrfComp_{0}_centertorso_headlight"
L_0ddb: ldarg.1
L_0ddc: callvirt BattleTech.MechDef get_MechDef()
L_0de1: callvirt BattleTech.ChassisDef get_Chassis()
L_0de6: callvirt System.String get_PrefabBase()
L_0deb: call System.String Format(System.String, System.Object)
L_0df0: stloc.2
L_0df1: ldstr "chrPrfComp_{0}_leftshoulder_headlight"
L_0df6: ldarg.1
L_0df7: callvirt BattleTech.MechDef get_MechDef()
L_0dfc: callvirt BattleTech.ChassisDef get_Chassis()
L_0e01: callvirt System.String get_PrefabBase()
L_0e06: call System.String Format(System.String, System.Object)
L_0e0b: stloc.3
L_0e0c: ldstr "chrPrfComp_{0}_rightshoulder_headlight"
L_0e11: ldarg.1
L_0e12: callvirt BattleTech.MechDef get_MechDef()
L_0e17: callvirt BattleTech.ChassisDef get_Chassis()
L_0e1c: callvirt System.String get_PrefabBase()
L_0e21: call System.String Format(System.String, System.Object)
L_0e26: stloc.s 4 (System.String)
L_0e28: ldstr "chrPrfComp_{0}_leftleg_headlight"
L_0e2d: ldarg.1
L_0e2e: callvirt BattleTech.MechDef get_MechDef()
L_0e33: callvirt BattleTech.ChassisDef get_Chassis()
L_0e38: callvirt System.String get_PrefabBase()
L_0e3d: call System.String Format(System.String, System.Object)
L_0e42: stloc.s 5 (System.String)
L_0e44: ldstr "chrPrfComp_{0}_rightleg_headlight"
L_0e49: ldarg.1
L_0e4a: callvirt BattleTech.MechDef get_MechDef()
L_0e4f: callvirt BattleTech.ChassisDef get_Chassis()
L_0e54: callvirt System.String get_PrefabBase()
L_0e59: call System.String Format(System.String, System.Object)
L_0e5e: stloc.s 6 (System.String)
L_0e60: ldarg.0
L_0e61: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0e66: callvirt Void Clear()
L_0e6b: ldarg.1
L_0e6c: callvirt BattleTech.CombatGameState get_Combat()
L_0e71: callvirt BattleTech.Data.DataManager get_DataManager()
L_0e76: ldloc.2
L_0e77: ldc.i4.s 45
L_0e79: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0e7b: initobj System.Nullable`1[UnityEngine.Vector3]
L_0e81: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0e83: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0e85: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0e8b: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0e8d: ldnull
L_0e8e: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0e93: stloc.s 7 (UnityEngine.GameObject)
L_0e95: ldloc.s 7 (UnityEngine.GameObject)
L_0e97: ldnull
L_0e98: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0e9d: brfalse Label88
L_0ea2: ldloc.s 7 (UnityEngine.GameObject)
L_0ea4: callvirt UnityEngine.Transform get_transform()
L_0ea9: ldarg.0
L_0eaa: ldfld UnityEngine.Transform vfxHeadTransform
L_0eaf: callvirt Void set_parent(UnityEngine.Transform)
L_0eb4: ldloc.s 7 (UnityEngine.GameObject)
L_0eb6: callvirt UnityEngine.Transform get_transform()
L_0ebb: call UnityEngine.Vector3 get_zero()
L_0ec0: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0ec5: ldloc.s 7 (UnityEngine.GameObject)
L_0ec7: callvirt UnityEngine.Transform get_transform()
L_0ecc: call UnityEngine.Quaternion get_identity()
L_0ed1: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0ed6: ldloc.s 7 (UnityEngine.GameObject)
L_0ed8: callvirt UnityEngine.Transform get_transform()
L_0edd: call UnityEngine.Vector3 get_one()
L_0ee2: callvirt Void set_localScale(UnityEngine.Vector3)
L_0ee7: ldarg.0
L_0ee8: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0eed: ldloc.s 7 (UnityEngine.GameObject)
L_0eef: callvirt Void Add(UnityEngine.GameObject)
L_0ef4: Label88
L_0ef4: ldarg.1
L_0ef5: callvirt BattleTech.CombatGameState get_Combat()
L_0efa: callvirt BattleTech.Data.DataManager get_DataManager()
L_0eff: ldloc.3
L_0f00: ldc.i4.s 45
L_0f02: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f04: initobj System.Nullable`1[UnityEngine.Vector3]
L_0f0a: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f0c: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f0e: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0f14: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f16: ldnull
L_0f17: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0f1c: stloc.s 7 (UnityEngine.GameObject)
L_0f1e: ldloc.s 7 (UnityEngine.GameObject)
L_0f20: ldnull
L_0f21: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0f26: brfalse Label89
L_0f2b: ldloc.s 7 (UnityEngine.GameObject)
L_0f2d: callvirt UnityEngine.Transform get_transform()
L_0f32: ldarg.0
L_0f33: ldfld UnityEngine.Transform vfxLeftShoulderTransform
L_0f38: callvirt Void set_parent(UnityEngine.Transform)
L_0f3d: ldloc.s 7 (UnityEngine.GameObject)
L_0f3f: callvirt UnityEngine.Transform get_transform()
L_0f44: call UnityEngine.Vector3 get_zero()
L_0f49: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0f4e: ldloc.s 7 (UnityEngine.GameObject)
L_0f50: callvirt UnityEngine.Transform get_transform()
L_0f55: call UnityEngine.Quaternion get_identity()
L_0f5a: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0f5f: ldloc.s 7 (UnityEngine.GameObject)
L_0f61: callvirt UnityEngine.Transform get_transform()
L_0f66: call UnityEngine.Vector3 get_one()
L_0f6b: callvirt Void set_localScale(UnityEngine.Vector3)
L_0f70: ldarg.0
L_0f71: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_0f76: ldloc.s 7 (UnityEngine.GameObject)
L_0f78: callvirt Void Add(UnityEngine.GameObject)
L_0f7d: Label89
L_0f7d: ldarg.1
L_0f7e: callvirt BattleTech.CombatGameState get_Combat()
L_0f83: callvirt BattleTech.Data.DataManager get_DataManager()
L_0f88: ldloc.s 4 (System.String)
L_0f8a: ldc.i4.s 45
L_0f8c: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f8e: initobj System.Nullable`1[UnityEngine.Vector3]
L_0f94: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_0f96: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0f98: initobj System.Nullable`1[UnityEngine.Quaternion]
L_0f9e: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_0fa0: ldnull
L_0fa1: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_0fa6: stloc.s 7 (UnityEngine.GameObject)
L_0fa8: ldloc.s 7 (UnityEngine.GameObject)
L_0faa: ldnull
L_0fab: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0fb0: brfalse Label90
L_0fb5: ldloc.s 7 (UnityEngine.GameObject)
L_0fb7: callvirt UnityEngine.Transform get_transform()
L_0fbc: ldarg.0
L_0fbd: ldfld UnityEngine.Transform vfxRightShoulderTransform
L_0fc2: callvirt Void set_parent(UnityEngine.Transform)
L_0fc7: ldloc.s 7 (UnityEngine.GameObject)
L_0fc9: callvirt UnityEngine.Transform get_transform()
L_0fce: call UnityEngine.Vector3 get_zero()
L_0fd3: callvirt Void set_localPosition(UnityEngine.Vector3)
L_0fd8: ldloc.s 7 (UnityEngine.GameObject)
L_0fda: callvirt UnityEngine.Transform get_transform()
L_0fdf: call UnityEngine.Quaternion get_identity()
L_0fe4: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_0fe9: ldloc.s 7 (UnityEngine.GameObject)
L_0feb: callvirt UnityEngine.Transform get_transform()
L_0ff0: call UnityEngine.Vector3 get_one()
L_0ff5: callvirt Void set_localScale(UnityEngine.Vector3)
L_0ffa: ldarg.0
L_0ffb: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_1000: ldloc.s 7 (UnityEngine.GameObject)
L_1002: callvirt Void Add(UnityEngine.GameObject)
L_1007: Label90
L_1007: ldarg.1
L_1008: callvirt BattleTech.CombatGameState get_Combat()
L_100d: callvirt BattleTech.Data.DataManager get_DataManager()
L_1012: ldloc.s 5 (System.String)
L_1014: ldc.i4.s 45
L_1016: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_1018: initobj System.Nullable`1[UnityEngine.Vector3]
L_101e: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_1020: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_1022: initobj System.Nullable`1[UnityEngine.Quaternion]
L_1028: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_102a: ldnull
L_102b: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_1030: stloc.s 7 (UnityEngine.GameObject)
L_1032: ldloc.s 7 (UnityEngine.GameObject)
L_1034: ldnull
L_1035: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_103a: brfalse Label91
L_103f: ldloc.s 7 (UnityEngine.GameObject)
L_1041: callvirt UnityEngine.Transform get_transform()
L_1046: ldarg.0
L_1047: ldfld UnityEngine.Transform vfxLeftLegTransform
L_104c: callvirt Void set_parent(UnityEngine.Transform)
L_1051: ldloc.s 7 (UnityEngine.GameObject)
L_1053: callvirt UnityEngine.Transform get_transform()
L_1058: call UnityEngine.Vector3 get_zero()
L_105d: callvirt Void set_localPosition(UnityEngine.Vector3)
L_1062: ldloc.s 7 (UnityEngine.GameObject)
L_1064: callvirt UnityEngine.Transform get_transform()
L_1069: call UnityEngine.Quaternion get_identity()
L_106e: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_1073: ldloc.s 7 (UnityEngine.GameObject)
L_1075: callvirt UnityEngine.Transform get_transform()
L_107a: call UnityEngine.Vector3 get_one()
L_107f: callvirt Void set_localScale(UnityEngine.Vector3)
L_1084: ldarg.0
L_1085: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_108a: ldloc.s 7 (UnityEngine.GameObject)
L_108c: callvirt Void Add(UnityEngine.GameObject)
L_1091: Label91
L_1091: ldarg.1
L_1092: callvirt BattleTech.CombatGameState get_Combat()
L_1097: callvirt BattleTech.Data.DataManager get_DataManager()
L_109c: ldloc.s 6 (System.String)
L_109e: ldc.i4.s 45
L_10a0: ldloca.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_10a2: initobj System.Nullable`1[UnityEngine.Vector3]
L_10a8: ldloc.s 24 (System.Nullable`1[UnityEngine.Vector3])
L_10aa: ldloca.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_10ac: initobj System.Nullable`1[UnityEngine.Quaternion]
L_10b2: ldloc.s 25 (System.Nullable`1[UnityEngine.Quaternion])
L_10b4: ldnull
L_10b5: callvirt UnityEngine.GameObject PooledInstantiate(System.String, BattleTech.BattleTechResourceType, System.Nullable`1[UnityEngine.Vector3], System.Nullable`1[UnityEngine.Quaternion], UnityEngine.Transform)
L_10ba: stloc.s 7 (UnityEngine.GameObject)
L_10bc: ldloc.s 7 (UnityEngine.GameObject)
L_10be: ldnull
L_10bf: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_10c4: brfalse Label92
L_10c9: ldloc.s 7 (UnityEngine.GameObject)
L_10cb: callvirt UnityEngine.Transform get_transform()
L_10d0: ldarg.0
L_10d1: ldfld UnityEngine.Transform vfxRightLegTransform
L_10d6: callvirt Void set_parent(UnityEngine.Transform)
L_10db: ldloc.s 7 (UnityEngine.GameObject)
L_10dd: callvirt UnityEngine.Transform get_transform()
L_10e2: call UnityEngine.Vector3 get_zero()
L_10e7: callvirt Void set_localPosition(UnityEngine.Vector3)
L_10ec: ldloc.s 7 (UnityEngine.GameObject)
L_10ee: callvirt UnityEngine.Transform get_transform()
L_10f3: call UnityEngine.Quaternion get_identity()
L_10f8: callvirt Void set_localRotation(UnityEngine.Quaternion)
L_10fd: ldloc.s 7 (UnityEngine.GameObject)
L_10ff: callvirt UnityEngine.Transform get_transform()
L_1104: call UnityEngine.Vector3 get_one()
L_1109: callvirt Void set_localScale(UnityEngine.Vector3)
L_110e: ldarg.0
L_110f: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] headlightReps
L_1114: ldloc.s 7 (UnityEngine.GameObject)
L_1116: callvirt Void Add(UnityEngine.GameObject)
L_111b: Label92
L_111b: ldarg.0
L_111c: ldc.i4.1
L_111d: callvirt Boolean RefreshSurfaceType(Boolean)
L_1122: pop
L_1123: ldarg.0
L_1124: call Void InitHighlighting()
L_1129: ldarg.0
L_112a: call Void InitWindZone()
L_112f: ldarg.0
L_1130: call BattleTech.Mech get_parentMech()
L_1135: callvirt BattleTech.CombatGameState get_Combat()
L_113a: callvirt MessageCenter get_MessageCenter()
L_113f: ldc.i4.s 81
L_1141: ldarg.0
L_1142: ldftn Void OnHeatChanged(MessageCenterMessage)
L_1148: newobj Void .ctor(Object, IntPtr)
L_114d: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_1152: ldarg.0
L_1153: ldstr "_Heat"
L_1158: ldc.r4 0
L_115d: newobj Void .ctor(String, Single)
L_1162: stfld BattleTech.Rendering.PropertyBlockManager+PropertySetting heatAmount
L_1167: ldarg.0
L_1168: call BattleTech.Rendering.PropertyBlockManager get_propertyBlock()
L_116d: ldarg.0
L_116e: ldflda BattleTech.Rendering.PropertyBlockManager+PropertySetting heatAmount
L_1173: callvirt Void AddProperty(PropertySetting ByRef)
L_1178: ldarg.0
L_1179: call BattleTech.CombatGameConstants get_Constants()
L_117e: callvirt BattleTech.CombatValueMultipliersDef get_CombatValueMultipliers()
L_1183: ldfld System.Single TEST_MechScaleMultiplier
L_1188: stloc.s 8 (System.Single)
L_118a: ldarg.0
L_118b: ldfld UnityEngine.Transform thisTransform
L_1190: ldloc.s 8 (System.Single)
L_1192: ldloc.s 8 (System.Single)
L_1194: ldloc.s 8 (System.Single)
L_1196: newobj Void .ctor(Single, Single, Single)
L_119b: callvirt Void set_localScale(UnityEngine.Vector3)
L_11a0: ldarg.0
L_11a1: call UnityEngine.Animator GetComponent[Animator]()
L_11a6: ldc.i4.0
L_11a7: callvirt Void set_cullingMode(UnityEngine.AnimatorCullingMode)
L_11ac: ldarg.0
L_11ad: call UnityEngine.GameObject get_gameObject()
L_11b2: callvirt BattleTech.Rendering.ShadowTracker AddComponent[ShadowTracker]()
L_11b7: pop
L_11b8: ldarg.0
L_11b9: ldarg.1
L_11ba: ldarg.1
L_11bb: callvirt BattleTech.MechDef get_MechDef()
L_11c0: call Void SetupDamageStates(BattleTech.Mech, BattleTech.MechDef)
L_11c5: ldarg.0
L_11c6: ldfld BattleTech.Rendering.MechMeshMerge mechMerge
L_11cb: ldc.i4.1
L_11cc: callvirt Void RefreshCombinedMesh(Boolean)
L_11d1: ldarg 1
L_11d7: ldarg 2
L_11dd: ldarg 3
L_11e3: ldarg.0
L_11e4: call Void Postfix(BattleTech.Mech, UnityEngine.Transform, Boolean, BattleTech.MechRepresentation)
L_11e9: ret
DONE

### Patch WeaponEffect, Void PlayProjectile()
L_0000: Local var 0: BattleTech.Rendering.BTLightAnimator
L_0000: Local var 1: BattleTech.ChassisLocations
L_0000: Local var 2: BattleTech.AttackSourceLimb
L_0000: Local var 3: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(WeaponEffect)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldc.r4 0
L_0011: stfld System.Single t
L_0016: ldarg.0
L_0017: ldc.i4.2
L_0018: stfld WeaponEffect+WeaponEffectState currentState
L_001d: ldarg.0
L_001e: ldfld UnityEngine.GameObject projectileMeshObject
L_0023: ldnull
L_0024: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0029: brfalse Label1
L_002e: ldarg.0
L_002f: ldfld UnityEngine.GameObject projectileMeshObject
L_0034: ldc.i4.1
L_0035: callvirt Void SetActive(Boolean)
L_003a: Label1
L_003a: ldarg.0
L_003b: ldfld UnityEngine.GameObject projectileLightObject
L_0040: ldnull
L_0041: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0046: brfalse Label2
L_004b: ldarg.0
L_004c: ldfld UnityEngine.GameObject projectileLightObject
L_0051: ldc.i4.1
L_0052: callvirt Void SetActive(Boolean)
L_0057: Label2
L_0057: ldarg.0
L_0058: ldfld UnityEngine.ParticleSystem projectileParticles
L_005d: ldnull
L_005e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0063: brfalse Label3
L_0068: ldarg.0
L_0069: ldfld UnityEngine.ParticleSystem projectileParticles
L_006e: ldc.i4.1
L_006f: callvirt Void Stop(Boolean)
L_0074: ldarg.0
L_0075: ldfld UnityEngine.ParticleSystem projectileParticles
L_007a: ldc.i4.1
L_007b: callvirt Void Clear(Boolean)
L_0080: Label3
L_0080: ldarg.0
L_0081: ldfld UnityEngine.Transform projectileTransform
L_0086: ldarg.0
L_0087: ldfld UnityEngine.Transform startingTransform
L_008c: callvirt UnityEngine.Vector3 get_position()
L_0091: callvirt Void set_position(UnityEngine.Vector3)
L_0096: ldarg.0
L_0097: ldfld UnityEngine.Transform projectileTransform
L_009c: ldarg.0
L_009d: ldfld UnityEngine.Vector3 endPos
L_00a2: callvirt Void LookAt(UnityEngine.Vector3)
L_00a7: ldarg.0
L_00a8: ldarg.0
L_00a9: ldfld UnityEngine.Transform startingTransform
L_00ae: callvirt UnityEngine.Vector3 get_position()
L_00b3: stfld UnityEngine.Vector3 startPos
L_00b8: ldarg.0
L_00b9: ldfld UnityEngine.ParticleSystem projectileParticles
L_00be: ldnull
L_00bf: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00c4: brfalse Label4
L_00c9: ldarg.0
L_00ca: ldfld UnityEngine.ParticleSystem projectileParticles
L_00cf: call Void SetVFXMultiplier(UnityEngine.ParticleSystem)
L_00d4: ldarg.0
L_00d5: ldfld UnityEngine.ParticleSystem projectileParticles
L_00da: ldc.i4.1
L_00db: callvirt Void Play(Boolean)
L_00e0: ldarg.0
L_00e1: ldfld UnityEngine.ParticleSystem projectileParticles
L_00e6: ldc.i4.1
L_00e7: callvirt BattleTech.Rendering.BTLightAnimator GetComponentInChildren[BTLightAnimator](Boolean)
L_00ec: stloc.0
L_00ed: ldloc.0
L_00ee: ldnull
L_00ef: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00f4: brfalse Label5
L_00f9: ldloc.0
L_00fa: callvirt Void StopAnimation()
L_00ff: ldloc.0
L_0100: callvirt Void PlayAnimation()
L_0105: Label4
L_0105: Label5
L_0105: ldarg.0
L_0106: ldfld BattleTech.Weapon weapon
L_010b: ldfld BattleTech.AbstractActor parent
L_0110: callvirt BattleTech.GameRepresentation get_GameRep()
L_0115: ldnull
L_0116: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_011b: brfalse Label6
L_0120: ldarg.0
L_0121: ldfld BattleTech.Weapon weapon
L_0126: callvirt Int32 get_Location()
L_012b: stloc.1
L_012c: ldloc.1
L_012d: ldc.i4.2
L_012e: beq Label7
L_0133: ldloc.1
L_0134: ldc.i4.s 32
L_0136: beq Label8
L_013b: ldc.i4.0
L_013c: br Label9
L_0141: Label8
L_0141: ldc.i4.2
L_0142: br Label10
L_0147: Label7
L_0147: ldc.i4.1
L_0148: Label9
L_0148: Label10
L_0148: stloc.2
L_0149: ldarg.0
L_014a: ldfld BattleTech.Weapon weapon
L_014f: callvirt BattleTech.WeaponDef get_weaponDef()
L_0154: callvirt Int32 get_AttackRecoil()
L_0159: stloc.3
L_015a: ldarg.0
L_015b: ldfld BattleTech.Weapon weapon
L_0160: ldfld BattleTech.AbstractActor parent
L_0165: callvirt BattleTech.GameRepresentation get_GameRep()
L_016a: ldloc.2
L_016b: ldloc.3
L_016c: callvirt Void PlayFireAnim(BattleTech.AttackSourceLimb, Int32)
L_0171: Label6
L_0171: ldarg.0
L_0172: call Boolean get_AllowMissSkipping()
L_0177: brfalse Label11
L_017c: ldarg.0
L_017d: ldflda BattleTech.WeaponHitInfo hitInfo
L_0182: ldarg.0
L_0183: ldfld System.Int32 hitIndex
L_0188: call Boolean DidShotHitChosenTarget(Int32)
L_018d: brtrue Label12
L_0192: ldarg.0
L_0193: call Void PublishWeaponCompleteMessage()
L_0198: Label11
L_0198: Label12
L_0198: Label0
L_0198: ret
DONE

### Harmony id=de.morphyum.MeleeMover, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MeleeMover.MeleeMover.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MeleeMover\MeleeMover.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.VisibilityLevel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Vector3
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_OwningActor()
L_0006: ldarg.1
L_0007: callvirt BattleTech.VisibilityLevel VisibilityToTargetUnit(BattleTech.ICombatant)
L_000c: stloc.0
L_000d: ldloc.0
L_000e: ldc.i4.s 9
L_0010: bge Label1
L_0015: ldloc.0
L_0016: ldc.i4.6
L_0017: beq Label2
L_001c: newobj Void .ctor()
L_0021: br Label14
L_0026: Label1
L_0026: Label2
L_0026: ldarg.0
L_0027: call BattleTech.CombatGameState get_Combat()
L_002c: callvirt BattleTech.HexGrid get_HexGrid()
L_0031: ldarg.1
L_0032: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0037: callvirt System.Collections.Generic.List`1[UnityEngine.Vector3] GetAdjacentPointsOnGrid(UnityEngine.Vector3)
L_003c: ldarg.0
L_003d: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0042: call System.Collections.Generic.List`1[BattleTech.PathNode] GetPathNodesForPoints(System.Collections.Generic.List`1[UnityEngine.Vector3], BattleTech.PathNodeGrid)
L_0047: stloc.1
L_0048: ldloc.1
L_0049: callvirt Int32 get_Count()
L_004e: ldc.i4.1
L_004f: sub
L_0050: stloc.2
L_0051: br Label3
L_0056: Label6
L_0056: ldloc.1
L_0057: ldloc.2
L_0058: callvirt BattleTech.PathNode get_Item(Int32)
L_005d: callvirt UnityEngine.Vector3 get_Position()
L_0062: ldfld System.Single y
L_0067: ldarg.1
L_0068: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_006d: ldfld System.Single y
L_0072: sub
L_0073: call Single Abs(Single)
L_0078: ldarg.0
L_0079: call BattleTech.CombatGameState get_Combat()
L_007e: callvirt BattleTech.CombatGameConstants get_Constants()
L_0083: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0088: ldfld System.Single MaxMeleeVerticalOffset
L_008d: bgt Label4
L_0092: ldarg.0
L_0093: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0098: ldloc.1
L_0099: ldloc.2
L_009a: callvirt BattleTech.PathNode get_Item(Int32)
L_009f: callvirt UnityEngine.Vector3 get_Position()
L_00a4: ldarg.1
L_00a5: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00aa: callvirt Boolean FindBlockerReciprocal(UnityEngine.Vector3, UnityEngine.Vector3)
L_00af: brfalse Label5
L_00b4: Label4
L_00b4: ldloc.1
L_00b5: ldloc.2
L_00b6: callvirt Void RemoveAt(Int32)
L_00bb: Label5
L_00bb: ldloc.2
L_00bc: ldc.i4.1
L_00bd: sub
L_00be: stloc.2
L_00bf: Label3
L_00bf: ldloc.2
L_00c0: ldc.i4.0
L_00c1: bge Label6
L_00c6: ldloc.1
L_00c7: callvirt Int32 get_Count()
L_00cc: ldc.i4.1
L_00cd: ble Label7
L_00d2: ldarg.0
L_00d3: call BattleTech.CombatGameState get_Combat()
L_00d8: callvirt BattleTech.CombatGameConstants get_Constants()
L_00dd: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00e2: ldfld System.Boolean SortMeleeHexesByPathingCost
L_00e7: brfalse Label8
L_00ec: ldloc.1
L_00ed: ldsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_00f2: dup
L_00f3: brtrue Label9
L_00f8: pop
L_00f9: ldsfld BattleTech.Pathing+<>c <>9
L_00fe: ldftn Int32 <GetMeleeDestsForTarget>b__68_0(BattleTech.PathNode, BattleTech.PathNode)
L_0104: newobj Void .ctor(Object, IntPtr)
L_0109: dup
L_010a: stsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_010f: Label9
L_010f: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_0114: br Label10
L_0119: Label8
L_0119: ldloc.1
L_011a: ldarg.0
L_011b: ldftn Int32 <GetMeleeDestsForTarget>b__68_1(BattleTech.PathNode, BattleTech.PathNode)
L_0121: newobj Void .ctor(Object, IntPtr)
L_0126: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_012b: Label10
L_012b: ldarg.0
L_012c: call BattleTech.CombatGameState get_Combat()
L_0131: callvirt BattleTech.CombatGameConstants get_Constants()
L_0136: callvirt BattleTech.MovementConstants get_MoveConstants()
L_013b: ldfld System.Int32 NumMeleeDestinationChoices
L_0140: stloc.3
L_0141: ldarg.0
L_0142: call BattleTech.AbstractActor get_OwningActor()
L_0147: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_014c: ldloc.1
L_014d: ldc.i4.0
L_014e: callvirt BattleTech.PathNode get_Item(Int32)
L_0153: callvirt UnityEngine.Vector3 get_Position()
L_0158: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_015d: stloc.s 4 (UnityEngine.Vector3)
L_015f: ldloca.s 4 (UnityEngine.Vector3)
L_0161: ldc.r4 0
L_0166: stfld System.Single y
L_016b: br Label12
L_0170: Label13
L_0170: ldloc.1
L_0171: ldloc.1
L_0172: callvirt Int32 get_Count()
L_0177: ldc.i4.1
L_0178: sub
L_0179: callvirt Void RemoveAt(Int32)
L_017e: Label11
L_017e: Label12
L_017e: ldloc.1
L_017f: callvirt Int32 get_Count()
L_0184: ldloc.3
L_0185: bgt Label13
L_018a: Label7
L_018a: ldloc.1
L_018b: Label14
L_018b: ret
DONE

### Patch BattleTech.Pathing, BattleTech.PathNodeGrid getGrid(BattleTech.MoveType)
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: sub
L_0003: switch Labels1,2,3,4,5,6
L_0020: br Label7
L_0025: Label2
L_0025: ldarg.0
L_0026: call BattleTech.PathNodeGrid get_SprintingGrid()
L_002b: br Label8
L_0030: Label3
L_0030: ldarg.0
L_0031: call BattleTech.PathNodeGrid get_BackwardGrid()
L_0036: br Label9
L_003b: Label1
L_003b: Label6
L_003b: ldarg.0
L_003c: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0041: br Label10
L_0046: Label5
L_0046: ldarg.0
L_0047: call BattleTech.PathNodeGrid get_SprintingGrid()
L_004c: br Label11
L_0051: Label4
L_0051: Label7
L_0051: ldsfld HBS.Logging.ILog gameInfoLogger
L_0056: ldstr "incorrect MoveType for getGrid: "
L_005b: ldarg.1
L_005c: box BattleTech.MoveType
L_0061: ldstr ", falling back to walking"
L_0066: call System.String Concat(System.Object, System.Object, System.Object)
L_006b: callvirt Void LogError(System.Object)
L_0070: ldarg.0
L_0071: call BattleTech.PathNodeGrid get_WalkingGrid()
L_0076: Label8
L_0076: Label9
L_0076: Label10
L_0076: Label11
L_0076: ret
DONE

### Patch BattleTech.Pathing, Void SetMeleeTarget(BattleTech.AbstractActor)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.PathNode
L_0000: Local var 2: System.Single
L_0000: ldarg.0
L_0001: call Void UnlockPosition()
L_0006: ldarg.0
L_0007: ldc.i4.5
L_0008: stfld BattleTech.MoveType moveType
L_000d: ldarg.0
L_000e: ldarg.1
L_000f: call Void set_CurrentMeleeTarget(BattleTech.AbstractActor)
L_0014: ldarg.0
L_0015: ldarg.1
L_0016: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_001b: call Void set_CurrentDestination(UnityEngine.Vector3)
L_0020: ldarg.0
L_0021: ldc.i4.0
L_0022: call Void set_HasMeleeDestSelection(Boolean)
L_0027: ldarg.1
L_0028: brfalse Label1
L_002d: ldarg.0
L_002e: call BattleTech.CombatGameState get_Combat()
L_0033: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_0038: stloc.0
L_0039: ldloc.0
L_003a: ldarg.0
L_003b: call BattleTech.AbstractActor get_OwningActor()
L_0040: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0045: pop
L_0046: ldloc.0
L_0047: ldarg.1
L_0048: callvirt Boolean Remove(BattleTech.AbstractActor)
L_004d: pop
L_004e: ldarg.0
L_004f: ldarg.1
L_0050: ldloc.0
L_0051: ldloca.s 1 (BattleTech.PathNode)
L_0053: ldarg.0
L_0054: ldflda UnityEngine.Vector3 ResultDestination
L_0059: ldarg.0
L_005a: ldflda System.Single ResultAngle
L_005f: call Boolean GetMeleeDestination(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.PathNode ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_0064: brfalse Label2
L_0069: ldarg.0
L_006a: ldarg.0
L_006b: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0070: ldloc.1
L_0071: ldarg.0
L_0072: call BattleTech.AbstractActor get_OwningActor()
L_0077: callvirt Single get_MaxMeleeEngageRangeDistance()
L_007c: ldarg.0
L_007d: ldfld UnityEngine.Vector3 ResultDestination
L_0082: ldarg.1
L_0083: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0088: ldarg.1
L_0089: ldloca.s 2 (System.Single)
L_008b: ldarg.0
L_008c: ldflda UnityEngine.Vector3 ResultDestination
L_0091: ldarg.0
L_0092: ldflda System.Single ResultAngle
L_0097: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] BuildPathFromEnd(BattleTech.PathNode, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.AbstractActor, Single ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_009c: stfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_00a1: br Label3
L_00a6: Label2
L_00a6: ldsfld HBS.Logging.ILog gameInfoLogger
L_00ab: ldstr "Attempted to set a melee target that we could not path to!"
L_00b0: callvirt Void LogError(System.Object)
L_00b5: br Label4
L_00ba: Label1
L_00ba: ldsfld HBS.Logging.ILog gameInfoLogger
L_00bf: ldstr "ATTEMPTING TO MELEE A BUILDING - this is gonna get weird"
L_00c4: callvirt Void LogError(System.Object)
L_00c9: Label3
L_00c9: Label4
L_00c9: ldarg.0
L_00ca: call Void LockPosition()
L_00cf: ret
DONE

### Harmony id=de.ben.MightyChargingJuggernaut, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from MightyChargingJuggernaut.MightyChargingJuggernaut.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\MightyChargingJuggernaut\MightyChargingJuggernaut.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.MechMeleeSequence, Void CompleteOrders()
L_0000: Local var 0: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldsfld HBS.Logging.ILog logger
L_0010: ldstr "MeleeSequence CompleteOrders"
L_0015: callvirt Void Log(System.Object)
L_001a: ldarg.0
L_001b: call BattleTech.Mech get_OwningMech()
L_0020: callvirt BattleTech.MechRepresentation get_GameRep()
L_0025: ldnull
L_0026: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_002b: pop
L_002c: ldarg.0
L_002d: call BattleTech.ICombatant get_MeleeTarget()
L_0032: ldarg.0
L_0033: ldfld BattleTech.AbstractActor owningActor
L_0038: callvirt System.String get_GUID()
L_003d: callvirt Void HandleDeath(System.String)
L_0042: ldarg.0
L_0043: call BattleTech.ICombatant get_MeleeTarget()
L_0048: callvirt Boolean get_IsDead()
L_004d: brtrue Label1
L_0052: ldarg.0
L_0053: call BattleTech.ICombatant get_MeleeTarget()
L_0058: isinst BattleTech.AbstractActor
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label2
L_0064: ldloc.0
L_0065: callvirt Boolean CheckForInstability()
L_006a: pop
L_006b: ldloc.0
L_006c: ldarg.0
L_006d: call Int32 get_RootSequenceGUID()
L_0072: ldarg.0
L_0073: ldfld BattleTech.AbstractActor owningActor
L_0078: callvirt System.String get_GUID()
L_007d: call UnityEngine.Vector2 get_one()
L_0082: ldnull
L_0083: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_0088: Label1
L_0088: Label2
L_0088: Label0
L_0088: ldarg.0
L_0089: call Void Postfix(BattleTech.MechMeleeSequence)
L_008e: ldarg.0
L_008f: call Void Postfix(BattleTech.MechMeleeSequence)
L_0094: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void GenerateMeleePath()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_MoveIsCharge(Boolean)
L_0007: ldarg.0
L_0008: call BattleTech.Mech get_OwningMech()
L_000d: callvirt BattleTech.Pathing get_Pathing()
L_0012: callvirt Void SetWalking()
L_0017: ldarg.0
L_0018: call BattleTech.Mech get_OwningMech()
L_001d: callvirt BattleTech.Pathing get_Pathing()
L_0022: ldarg.0
L_0023: call BattleTech.ICombatant get_MeleeTarget()
L_0028: isinst BattleTech.AbstractActor
L_002d: callvirt Void SetMeleeTarget(BattleTech.AbstractActor)
L_0032: ldarg.0
L_0033: call BattleTech.Mech get_OwningMech()
L_0038: callvirt BattleTech.Pathing get_Pathing()
L_003d: ldarg.0
L_003e: call UnityEngine.Vector3 get_DesiredMeleePosition()
L_0043: callvirt Void SelectMeleeDest(UnityEngine.Vector3)
L_0048: ldarg.0
L_0049: call BattleTech.Mech get_OwningMech()
L_004e: callvirt BattleTech.Pathing get_Pathing()
L_0053: ldarg.0
L_0054: call BattleTech.ICombatant get_MeleeTarget()
L_0059: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_005e: ldc.i4.0
L_005f: callvirt Void Update(UnityEngine.Vector3, Boolean)
L_0064: ldarg.0
L_0065: ldarg.0
L_0066: call BattleTech.Mech get_OwningMech()
L_006b: newobj Void .ctor(AbstractActor)
L_0070: stfld BattleTech.ActorMovementSequence moveSequence
L_0075: ldarg.0
L_0076: ldfld BattleTech.ActorMovementSequence moveSequence
L_007b: ldarg.0
L_007c: call Boolean get_MoveIsCharge()
L_0081: stfld System.Boolean IgnoreEndSmoothing
L_0086: ldarg.0
L_0087: ldfld BattleTech.ActorMovementSequence moveSequence
L_008c: ldarg.0
L_008d: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0092: stfld BattleTech.MeleeAttackType meleeType
L_0097: ldarg.0
L_0098: ldfld BattleTech.ActorMovementSequence moveSequence
L_009d: ldc.i4.1
L_009e: stfld System.Boolean hasOwningSequence
L_00a3: ldarg.0
L_00a4: call BattleTech.Mech get_OwningMech()
L_00a9: callvirt BattleTech.Pathing get_Pathing()
L_00ae: callvirt Void ClearMeleeTarget()
L_00b3: ldarg.0
L_00b4: call Void Postfix(BattleTech.MechMeleeSequence)
L_00b9: ldarg.0
L_00ba: ldarg.0
L_00bb: ldflda BattleTech.ActorMovementSequence moveSequence
L_00c0: call Void Postfix(BattleTech.MechMeleeSequence, BattleTech.ActorMovementSequence ByRef)
L_00c5: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void BuildMeleeDirectorSequence()
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.MechMeleeSequence)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: call Void Prefix(BattleTech.MechMeleeSequence)
L_0011: ldarg.0
L_0012: ldarg.0
L_0013: call BattleTech.Mech get_OwningMech()
L_0018: ldarg.0
L_0019: call BattleTech.ICombatant get_MeleeTarget()
L_001e: ldarg.0
L_001f: ldfld BattleTech.ActorMovementSequence moveSequence
L_0024: callvirt UnityEngine.Vector3 get_FinalPos()
L_0029: ldarg.0
L_002a: ldfld BattleTech.ActorMovementSequence moveSequence
L_002f: callvirt UnityEngine.Vector3 get_FinalHeading()
L_0034: call UnityEngine.Quaternion LookRotation(UnityEngine.Vector3)
L_0039: newobj Void .ctor()
L_003e: dup
L_003f: ldarg.0
L_0040: call BattleTech.Mech get_OwningMech()
L_0045: ldfld BattleTech.Weapon MeleeWeapon
L_004a: callvirt Void Add(BattleTech.Weapon)
L_004f: ldarg.0
L_0050: call Boolean get_MoveIsCharge()
L_0055: brtrue Label1
L_005a: ldarg.0
L_005b: call BattleTech.MeleeAttackType get_selectedMeleeType()
L_0060: br Label2
L_0065: Label1
L_0065: ldc.i4.5
L_0066: Label2
L_0066: ldc.i4.0
L_0067: ldc.i4.m1
L_0068: newobj Void .ctor(AbstractActor, ICombatant, Vector3, Quaternion, List`1, MeleeAttackType, Int32, Int32)
L_006d: stfld BattleTech.AttackStackSequence meleeSequence
L_0072: ldarg.0
L_0073: ldfld BattleTech.AttackStackSequence meleeSequence
L_0078: ldc.i4.0
L_0079: stfld System.Boolean willConsumeFiring
L_007e: ldarg.0
L_007f: ldfld BattleTech.AttackStackSequence meleeSequence
L_0084: ldc.i4.1
L_0085: stfld System.Boolean hasOwningSequence
L_008a: ldarg.0
L_008b: ldfld BattleTech.AttackStackSequence meleeSequence
L_0090: ldarg.0
L_0091: call Int32 get_RootSequenceGUID()
L_0096: callvirt Void set_RootSequenceGUID(Int32)
L_009b: ldarg.0
L_009c: call BattleTech.CameraSequence get_cameraSequence()
L_00a1: brfalse Label3
L_00a6: ldarg.0
L_00a7: ldfld BattleTech.AttackStackSequence meleeSequence
L_00ac: ldarg.0
L_00ad: call BattleTech.CameraSequence get_cameraSequence()
L_00b2: ldarg.0
L_00b3: call Int32 get_MessageIndex()
L_00b8: callvirt Void SetCamera(BattleTech.CameraSequence, Int32)
L_00bd: Label3
L_00bd: Label0
L_00bd: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void ExecuteMove()
L_0000: Local var 0: System.Boolean
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechMeleeSequence)
L_0006: ldsfld HBS.Logging.ILog logger
L_000b: ldstr "MeleeSequence ExecuteMove. Is full charge? "
L_0010: ldarg.0
L_0011: call Boolean get_MoveIsCharge()
L_0016: stloc.0
L_0017: ldloca.s 0 (System.Boolean)
L_0019: call System.String ToString()
L_001e: call System.String Concat(System.String, System.String)
L_0023: callvirt Void Log(System.Object)
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldc.i4.s 91
L_0035: ldarg.0
L_0036: ldftn Void OnMoveComplete(MessageCenterMessage)
L_003c: newobj Void .ctor(Object, IntPtr)
L_0041: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0046: ldarg.0
L_0047: ldfld BattleTech.ActorMovementSequence moveSequence
L_004c: ldarg.0
L_004d: call Int32 get_RootSequenceGUID()
L_0052: callvirt Void set_RootSequenceGUID(Int32)
L_0057: ldarg.0
L_0058: call BattleTech.CombatGameState get_Combat()
L_005d: callvirt MessageCenter get_MessageCenter()
L_0062: ldarg.0
L_0063: ldfld BattleTech.ActorMovementSequence moveSequence
L_0068: newobj Void .ctor(IStackSequence)
L_006d: callvirt Void PublishMessage(MessageCenterMessage)
L_0072: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void OnMeleeComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackCompleteMessage
L_0000: ldarg.1
L_0001: isinst BattleTech.AttackCompleteMessage
L_0006: stloc.0
L_0007: ldsfld HBS.Logging.ILog logger
L_000c: ldc.i4.6
L_000d: newarr System.Object
L_0012: dup
L_0013: ldc.i4.0
L_0014: ldstr "OnMeleeComplete. msg id: "
L_0019: stelem.ref
L_001a: dup
L_001b: ldc.i4.1
L_001c: ldloc.0
L_001d: ldfld System.Int32 stackItemUID
L_0022: box System.Int32
L_0027: stelem.ref
L_0028: dup
L_0029: ldc.i4.2
L_002a: ldstr ", our id: "
L_002f: stelem.ref
L_0030: dup
L_0031: ldc.i4.3
L_0032: ldarg.0
L_0033: call Int32 get_SequenceGUID()
L_0038: box System.Int32
L_003d: stelem.ref
L_003e: dup
L_003f: ldc.i4.4
L_0040: ldstr ", our rootid: "
L_0045: stelem.ref
L_0046: dup
L_0047: ldc.i4.5
L_0048: ldarg.0
L_0049: call Int32 get_RootSequenceGUID()
L_004e: box System.Int32
L_0053: stelem.ref
L_0054: call System.String Concat(System.Object[])
L_0059: callvirt Void Log(System.Object)
L_005e: ldloc.0
L_005f: ldfld System.Int32 stackItemUID
L_0064: ldarg.0
L_0065: ldfld BattleTech.AttackStackSequence meleeSequence
L_006a: callvirt Int32 get_SequenceGUID()
L_006f: bne.un Label1
L_0074: ldarg.0
L_0075: call BattleTech.CombatGameState get_Combat()
L_007a: callvirt MessageCenter get_MessageCenter()
L_007f: ldc.i4.s 40
L_0081: ldarg.0
L_0082: ldftn Void OnMeleeComplete(MessageCenterMessage)
L_0088: newobj Void .ctor(Object, IntPtr)
L_008d: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0092: ldarg.0
L_0093: ldfld BattleTech.AbstractActor owningActor
L_0098: callvirt BattleTech.GameRepresentation get_GameRep()
L_009d: ldnull
L_009e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_00a3: brfalse Label2
L_00a8: ldarg.0
L_00a9: ldfld BattleTech.AbstractActor owningActor
L_00ae: callvirt BattleTech.GameRepresentation get_GameRep()
L_00b3: ldfld UnityEngine.Animator thisAnimator
L_00b8: ldstr "Forward"
L_00bd: ldc.r4 0
L_00c2: callvirt Void SetFloat(System.String, Single)
L_00c7: Label2
L_00c7: ldarg.0
L_00c8: ldc.i4.1
L_00c9: call Void setState(MeleeSequenceState)
L_00ce: Label1
L_00ce: ldarga 1
L_00d4: ldarg.0
L_00d5: call Void Postfix(MessageCenterMessage ByRef, BattleTech.MechMeleeSequence)
L_00da: ldarg.0
L_00db: ldarga 1
L_00e1: call Void Postfix(BattleTech.MechMeleeSequence, MessageCenterMessage ByRef)
L_00e6: ret
DONE

### Patch BattleTech.MechMeleeSequence, Void OnMoveComplete(MessageCenterMessage)
L_0000: Local var 0: BattleTech.ActorMoveEndMessage
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.MechMeleeSequence)
L_0006: ldarg.1
L_0007: isinst BattleTech.ActorMoveEndMessage
L_000c: stloc.0
L_000d: ldsfld HBS.Logging.ILog logger
L_0012: ldstr "OnMoveComplete. msg id: "
L_0017: ldloc.0
L_0018: callvirt System.String get_affectedObjectGuid()
L_001d: call System.String Concat(System.String, System.String)
L_0022: callvirt Void Log(System.Object)
L_0027: ldloc.0
L_0028: callvirt System.String get_affectedObjectGuid()
L_002d: ldarg.0
L_002e: call BattleTech.Mech get_OwningMech()
L_0033: callvirt System.String get_GUID()
L_0038: call Boolean op_Equality(System.String, System.String)
L_003d: brfalse Label1
L_0042: ldarg.0
L_0043: call BattleTech.CombatGameState get_Combat()
L_0048: callvirt MessageCenter get_MessageCenter()
L_004d: ldc.i4.s 91
L_004f: ldarg.0
L_0050: ldftn Void OnMoveComplete(MessageCenterMessage)
L_0056: newobj Void .ctor(Object, IntPtr)
L_005b: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0060: Label1
L_0060: ret
DONE

### Patch BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] GetMeleeDestsForTarget(BattleTech.AbstractActor)
L_0000: Local var 0: BattleTech.VisibilityLevel
L_0000: Local var 1: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: System.Int32
L_0000: Local var 3: System.Int32
L_0000: Local var 4: UnityEngine.Vector3
L_0000: Local var 5: System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldnull
L_0001: stloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0003: ldarg.0
L_0004: ldloca 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_0006: ldarga 1
L_000c: call Boolean Prefix(BattleTech.Pathing, System.Collections.Generic.List`1[BattleTech.PathNode] ByRef, BattleTech.AbstractActor ByRef)
L_0011: brfalse Label0
L_0016: ldarg.0
L_0017: call BattleTech.AbstractActor get_OwningActor()
L_001c: ldarg.1
L_001d: callvirt BattleTech.VisibilityLevel VisibilityToTargetUnit(BattleTech.ICombatant)
L_0022: stloc.0
L_0023: ldloc.0
L_0024: ldc.i4.s 9
L_0026: bge Label1
L_002b: ldloc.0
L_002c: ldc.i4.6
L_002d: beq Label2
L_0032: newobj Void .ctor()
L_0037: br Label14
L_003c: Label1
L_003c: Label2
L_003c: ldarg.0
L_003d: call BattleTech.CombatGameState get_Combat()
L_0042: callvirt BattleTech.HexGrid get_HexGrid()
L_0047: ldarg.1
L_0048: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_004d: callvirt System.Collections.Generic.List`1[UnityEngine.Vector3] GetAdjacentPointsOnGrid(UnityEngine.Vector3)
L_0052: ldarg.0
L_0053: call BattleTech.PathNodeGrid get_SprintingGrid()
L_0058: call System.Collections.Generic.List`1[BattleTech.PathNode] GetPathNodesForPoints(System.Collections.Generic.List`1[UnityEngine.Vector3], BattleTech.PathNodeGrid)
L_005d: stloc.1
L_005e: ldloc.1
L_005f: callvirt Int32 get_Count()
L_0064: ldc.i4.1
L_0065: sub
L_0066: stloc.2
L_0067: br Label3
L_006c: Label6
L_006c: ldloc.1
L_006d: ldloc.2
L_006e: callvirt BattleTech.PathNode get_Item(Int32)
L_0073: callvirt UnityEngine.Vector3 get_Position()
L_0078: ldfld System.Single y
L_007d: ldarg.1
L_007e: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0083: ldfld System.Single y
L_0088: sub
L_0089: call Single Abs(Single)
L_008e: ldarg.0
L_008f: call BattleTech.CombatGameState get_Combat()
L_0094: callvirt BattleTech.CombatGameConstants get_Constants()
L_0099: callvirt BattleTech.MovementConstants get_MoveConstants()
L_009e: ldfld System.Single MaxMeleeVerticalOffset
L_00a3: bgt Label4
L_00a8: ldarg.0
L_00a9: call BattleTech.PathNodeGrid get_WalkingGrid()
L_00ae: ldloc.1
L_00af: ldloc.2
L_00b0: callvirt BattleTech.PathNode get_Item(Int32)
L_00b5: callvirt UnityEngine.Vector3 get_Position()
L_00ba: ldarg.1
L_00bb: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_00c0: callvirt Boolean FindBlockerReciprocal(UnityEngine.Vector3, UnityEngine.Vector3)
L_00c5: brfalse Label5
L_00ca: Label4
L_00ca: ldloc.1
L_00cb: ldloc.2
L_00cc: callvirt Void RemoveAt(Int32)
L_00d1: Label5
L_00d1: ldloc.2
L_00d2: ldc.i4.1
L_00d3: sub
L_00d4: stloc.2
L_00d5: Label3
L_00d5: ldloc.2
L_00d6: ldc.i4.0
L_00d7: bge Label6
L_00dc: ldloc.1
L_00dd: callvirt Int32 get_Count()
L_00e2: ldc.i4.1
L_00e3: ble Label7
L_00e8: ldarg.0
L_00e9: call BattleTech.CombatGameState get_Combat()
L_00ee: callvirt BattleTech.CombatGameConstants get_Constants()
L_00f3: callvirt BattleTech.MovementConstants get_MoveConstants()
L_00f8: ldfld System.Boolean SortMeleeHexesByPathingCost
L_00fd: brfalse Label8
L_0102: ldloc.1
L_0103: ldsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_0108: dup
L_0109: brtrue Label9
L_010e: pop
L_010f: ldsfld BattleTech.Pathing+<>c <>9
L_0114: ldftn Int32 <GetMeleeDestsForTarget>b__68_0(BattleTech.PathNode, BattleTech.PathNode)
L_011a: newobj Void .ctor(Object, IntPtr)
L_011f: dup
L_0120: stsfld System.Comparison`1[BattleTech.PathNode] <>9__68_0
L_0125: Label9
L_0125: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_012a: br Label10
L_012f: Label8
L_012f: ldloc.1
L_0130: ldarg.0
L_0131: ldftn Int32 <GetMeleeDestsForTarget>b__68_1(BattleTech.PathNode, BattleTech.PathNode)
L_0137: newobj Void .ctor(Object, IntPtr)
L_013c: callvirt Void Sort(System.Comparison`1[BattleTech.PathNode])
L_0141: Label10
L_0141: ldarg.0
L_0142: call BattleTech.CombatGameState get_Combat()
L_0147: callvirt BattleTech.CombatGameConstants get_Constants()
L_014c: callvirt BattleTech.MovementConstants get_MoveConstants()
L_0151: ldfld System.Int32 NumMeleeDestinationChoices
L_0156: stloc.3
L_0157: ldarg.0
L_0158: call BattleTech.AbstractActor get_OwningActor()
L_015d: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0162: ldloc.1
L_0163: ldc.i4.0
L_0164: callvirt BattleTech.PathNode get_Item(Int32)
L_0169: callvirt UnityEngine.Vector3 get_Position()
L_016e: call UnityEngine.Vector3 op_Subtraction(UnityEngine.Vector3, UnityEngine.Vector3)
L_0173: stloc.s 4 (UnityEngine.Vector3)
L_0175: ldloca.s 4 (UnityEngine.Vector3)
L_0177: ldc.r4 0
L_017c: stfld System.Single y
L_0181: br Label12
L_0186: Label13
L_0186: ldloc.1
L_0187: ldloc.1
L_0188: callvirt Int32 get_Count()
L_018d: ldc.i4.1
L_018e: sub
L_018f: callvirt Void RemoveAt(Int32)
L_0194: Label11
L_0194: Label12
L_0194: ldloc.1
L_0195: callvirt Int32 get_Count()
L_019a: ldloc.3
L_019b: bgt Label13
L_01a0: Label7
L_01a0: ldloc.1
L_01a1: Label14
L_01a1: stloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_01a3: Label0
L_01a3: ldloc 5 (System.Collections.Generic.List`1[BattleTech.PathNode])
L_01a5: ret
DONE

### Patch BattleTech.Pathing, Void UpdateMeleePath(Boolean)
L_0000: Local var 0: System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.PathNode
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: callvirt System.Collections.Generic.List`1[BattleTech.AbstractActor] get_AllActors()
L_000b: stloc.0
L_000c: ldloc.0
L_000d: ldarg.0
L_000e: call BattleTech.AbstractActor get_OwningActor()
L_0013: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0018: pop
L_0019: ldloc.0
L_001a: ldarg.0
L_001b: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_0020: callvirt Boolean Remove(BattleTech.AbstractActor)
L_0025: pop
L_0026: ldarg.0
L_0027: ldarg.0
L_0028: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_002d: ldloc.0
L_002e: ldloca.s 1 (BattleTech.PathNode)
L_0030: ldarg.0
L_0031: ldflda UnityEngine.Vector3 ResultDestination
L_0036: ldarg.0
L_0037: ldflda System.Single ResultAngle
L_003c: call Boolean GetMeleeDestination(BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.AbstractActor], BattleTech.PathNode ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_0041: pop
L_0042: ldarg.0
L_0043: ldarg.0
L_0044: call BattleTech.PathNodeGrid get_CurrentGrid()
L_0049: ldloc.1
L_004a: ldarg.0
L_004b: call Single get_MaxCost()
L_0050: ldloc.1
L_0051: callvirt UnityEngine.Vector3 get_Position()
L_0056: ldarg.0
L_0057: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_005c: callvirt UnityEngine.Vector3 get_CurrentPosition()
L_0061: ldarg.0
L_0062: call BattleTech.AbstractActor get_CurrentMeleeTarget()
L_0067: ldarg.0
L_0068: ldflda System.Single costLeft
L_006d: ldarg.0
L_006e: ldflda UnityEngine.Vector3 ResultDestination
L_0073: ldarg.0
L_0074: ldflda System.Single ResultAngle
L_0079: callvirt System.Collections.Generic.List`1[BattleTech.PathNode] BuildPathFromEnd(BattleTech.PathNode, Single, UnityEngine.Vector3, UnityEngine.Vector3, BattleTech.AbstractActor, Single ByRef, UnityEngine.Vector3 ByRef, Single ByRef)
L_007e: stfld System.Collections.Generic.List`1[BattleTech.PathNode] CurrentPath
L_0083: ldarg.0
L_0084: call Void Postfix(BattleTech.Pathing)
L_0089: ret
DONE

### Harmony id=io.github.mpstark.NavigationComputer, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from NavigationComputer.Main.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\NavigationComputer\NavigationComputer.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.UI.SGNavigationScreen, Void Update()
L_0000: ldarg.0
L_0001: ldfld System.Boolean waitForPointerUp
L_0006: brfalse Label1
L_000b: ldc.i4.0
L_000c: call Boolean GetMouseButtonUp(Int32)
L_0011: brfalse Label2
L_0016: ldarg.0
L_0017: ldfld BattleTech.SimGameState simState
L_001c: callvirt BattleTech.Starmap get_Starmap()
L_0021: callvirt BattleTech.StarmapRenderer get_Screen()
L_0026: ldc.i4.1
L_0027: callvirt Void AllowInput(Boolean)
L_002c: ldarg.0
L_002d: ldc.i4.0
L_002e: stfld System.Boolean waitForPointerUp
L_0033: Label1
L_0033: Label2
L_0033: call Void Postfix()
L_0038: ret
DONE

### Patch BattleTech.UI.SGNavigationScreen, Void Init(BattleTech.SimGameState, BattleTech.UI.SGRoomController_Navigation)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: stfld BattleTech.SimGameState simState
L_0007: ldarg.0
L_0008: ldfld BattleTech.UI.SGSystemViewPopulator SystemViewPopulator
L_000d: ldarg.0
L_000e: ldfld BattleTech.SimGameState simState
L_0013: callvirt Void Init(BattleTech.SimGameState)
L_0018: ldarg.0
L_0019: ldfld BattleTech.UI.SGShipTransitStatus TransitStatusWidget
L_001e: ldarg.0
L_001f: ldfld BattleTech.SimGameState simState
L_0024: callvirt Void DisplayTransitState(BattleTech.SimGameState)
L_0029: ldarg.0
L_002a: call BattleTech.UI.UIManager get_Instance()
L_002f: ldstr ""
L_0034: ldc.i4.1
L_0035: callvirt BattleTech.UI.SGNavigationTravelPopup GetOrCreatePopupModule[SGNavigationTravelPopup](System.String, Boolean)
L_003a: stfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_003f: ldarg.0
L_0040: ldfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_0045: ldarg.0
L_0046: ldfld BattleTech.SimGameState simState
L_004b: callvirt Void Init(BattleTech.SimGameState)
L_0050: ldarg.0
L_0051: ldfld BattleTech.UI.SGNavigationTravelPopup TravelPopup
L_0056: ldc.i4.0
L_0057: callvirt Void set_Visible(Boolean)
L_005c: ldarg.0
L_005d: ldfld BattleTech.UI.HBSButton TravelButton
L_0062: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0067: callvirt Void RemoveAllListeners()
L_006c: ldarg.0
L_006d: ldfld BattleTech.UI.HBSButton TravelButton
L_0072: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0077: ldarg.0
L_0078: ldftn Void OnTravelButtonClicked()
L_007e: newobj Void .ctor(Object, IntPtr)
L_0083: callvirt Void AddListener(UnityEngine.Events.UnityAction)
L_0088: ldarg.0
L_0089: ldfld BattleTech.UI.HBSButton BackButton
L_008e: ldfld UnityEngine.Events.UnityEvent OnClicked
L_0093: callvirt Void RemoveAllListeners()
L_0098: ldarg.0
L_0099: ldfld BattleTech.UI.HBSButton BackButton
L_009e: ldfld UnityEngine.Events.UnityEvent OnClicked
L_00a3: ldarg.0
L_00a4: ldftn Void Dismiss()
L_00aa: newobj Void .ctor(Object, IntPtr)
L_00af: callvirt Void AddListener(UnityEngine.Events.UnityAction)
L_00b4: ldarg.0
L_00b5: ldfld System.Collections.Generic.List`1[BattleTech.UI.SGNavStarSystemCallout] AllCallouts
L_00ba: ldarg.0
L_00bb: ldftn Void DisposeCallout(BattleTech.UI.SGNavStarSystemCallout)
L_00c1: newobj Void .ctor(Object, IntPtr)
L_00c6: callvirt Void ForEach(System.Action`1[BattleTech.UI.SGNavStarSystemCallout])
L_00cb: ldarg.0
L_00cc: ldfld BattleTech.UI.SGFlashpointButtonController flashpointButtonController
L_00d1: ldarg.1
L_00d2: ldarg.0
L_00d3: ldftn Void FlashpointButtonResponse(BattleTech.Flashpoint)
L_00d9: newobj Void .ctor(Object, IntPtr)
L_00de: ldarg.0
L_00df: ldftn Void FlashpointButtonResponse(BattleTech.Flashpoint)
L_00e5: newobj Void .ctor(Object, IntPtr)
L_00ea: callvirt Void Init(BattleTech.SimGameState, UnityEngine.Events.UnityAction`1[BattleTech.Flashpoint], UnityEngine.Events.UnityAction`1[BattleTech.Flashpoint])
L_00ef: ldarg.0
L_00f0: call Void BuildDifficultyDropdown()
L_00f5: ldarg.0
L_00f6: ldfld BattleTech.UI.SGBiomeDropdown BiomeDropdown
L_00fb: callvirt Void InitBiomeDataLists()
L_0100: ldarg.0
L_0101: ldfld System.Collections.Generic.List`1[UnityEngine.GameObject] InfoPanelsToHide
L_0106: callvirt Enumerator GetEnumerator()
L_010b: stloc.0
.try
{
	L_010c: br Label1
	L_0111: Label2
	L_0111: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0113: call UnityEngine.GameObject get_Current()
	L_0118: ldc.i4.0
	L_0119: callvirt Void SetActive(Boolean)
	L_011e: Label1
	L_011e: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0120: call Boolean MoveNext()
	L_0125: brtrue Label2
	L_012a: leave Label3
	L_012f: leave (autogenerated)
} // end try
.finally
{
	L_0134: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject])
	L_0136: constrained. System.Collections.Generic.List`1+Enumerator[UnityEngine.GameObject]
	L_013c: callvirt Void Dispose()
	L_0141: endfinally
	L_0142: leave (autogenerated)
} // end handler
L_0143: Label3
L_0143: ldarg.0
L_0144: ldarg 1
L_014a: call Void Postfix(BattleTech.UI.SGNavigationScreen, BattleTech.SimGameState)
L_014f: ret
DONE

### Patch BattleTech.UI.SGNavigationScreen, Boolean HandleEscapeKeypress()
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldloca 0 (System.Boolean)
L_0008: call Boolean Prefix(Boolean ByRef)
L_000d: brfalse Label0
L_0012: ldarg.0
L_0013: ldarg.0
L_0014: ldfld BattleTech.UI.HBSButton BackButton
L_0019: call Boolean ClickButtonIfVisible(BattleTech.UI.HBSButton)
L_001e: stloc 0 (System.Boolean)
L_001f: Label0
L_001f: ldloc 0 (System.Boolean)
L_0020: ret
DONE

### Patch BattleTech.UI.SGRoomController_Navigation, Void ExitNavScreen()
L_0000: call Void Prefix()
L_0005: ldarg.0
L_0006: ldc.i4.0
L_0007: stfld BattleTech.DropshipMenuType curMenuType
L_000c: ldarg.0
L_000d: ldfld BattleTech.SimGameState simState
L_0012: callvirt BattleTech.SimGameCameraController get_CameraController()
L_0017: ldc.i4.0
L_0018: ldc.i4.0
L_0019: ldc.i4.0
L_001a: callvirt Void TransitionCamera(Int32, Boolean, Boolean)
L_001f: ldarg.0
L_0020: ldfld BattleTech.UI.SGNavigationScreen navigationScreen
L_0025: callvirt Void ResetDropdowns()
L_002a: ldarg.0
L_002b: ldfld BattleTech.UI.SGNavigationScreen navigationScreen
L_0030: ldc.i4.0
L_0031: callvirt Void set_Visible(Boolean)
L_0036: ldarg.0
L_0037: ldfld BattleTech.UI.SGRoomManager roomManager
L_003c: ldc.i4.1
L_003d: callvirt Void SetAllUIButOptionsMenuWidgetVisibility(Boolean)
L_0042: ldarg.0
L_0043: ldfld BattleTech.SimGameState simState
L_0048: callvirt BattleTech.Starmap get_Starmap()
L_004d: callvirt BattleTech.StarmapRenderer get_Screen()
L_0052: ldc.i4.0
L_0053: callvirt Void set_StarmapVisible(Boolean)
L_0058: call BattleTech.UI.Tooltips.TooltipManager get_Instance()
L_005d: callvirt Void ClearTooltip()
L_0062: ret
DONE

### Patch BattleTech.SimGameState, Void SetSimRoomState(BattleTech.DropshipLocation)
L_0000: Local var 0: BattleTech.SimGameRoomChangedMessage
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.DropshipLocation)
L_000b: ldarg.0
L_000c: ldarg.1
L_000d: ldc.i4 256
L_0012: beq Label1
L_0017: ldarg.1
L_0018: ldc.i4 128
L_001d: beq Label2
L_0022: ldarg.0
L_0023: call BattleTech.DropshipType get_CurDropship()
L_0028: ldc.i4.0
L_0029: cgt.un
L_002b: br Label3
L_0030: Label1
L_0030: Label2
L_0030: ldc.i4.0
L_0031: Label3
L_0031: call Void SetUIVisible(Boolean)
L_0036: ldarg.0
L_0037: ldarg.1
L_0038: call Void RefreshSimRoomAudio(BattleTech.DropshipLocation)
L_003d: ldarg.0
L_003e: ldarg.1
L_003f: call Void set_CurRoomState(BattleTech.DropshipLocation)
L_0044: ldarg.0
L_0045: ldfld BattleTech.UI.SGRoomManager RoomManager
L_004a: ldarg.1
L_004b: callvirt Void ChangeRoom(BattleTech.DropshipLocation)
L_0050: ldarg.0
L_0051: call BattleTech.SimGameCameraController get_CameraController()
L_0056: ldarg.1
L_0057: callvirt Void SetScene(BattleTech.DropshipLocation)
L_005c: ldarg.1
L_005d: newobj Void .ctor(DropshipLocation)
L_0062: stloc.0
L_0063: ldarg.0
L_0064: call MessageCenter get_MessageCenter()
L_0069: ldloc.0
L_006a: callvirt Void PublishMessage(MessageCenterMessage)
L_006f: ret
DONE

### Patch BattleTech.Starmap, Boolean SetSelectedSystem(BattleTech.StarSystemNode)
L_0000: Local var 0: System.Boolean
L_0000: ldc.i4 0
L_0005: stloc 0 (System.Boolean)
L_0006: ldarg.0
L_0007: ldarg 1
L_000d: call Boolean Prefix(BattleTech.Starmap, BattleTech.StarSystemNode)
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: ldarg.1
L_0019: call Void set_CurSelected(BattleTech.StarSystemNode)
L_001e: ldarg.0
L_001f: ldarg.1
L_0020: call Void FindRouteTo(BattleTech.StarSystemNode)
L_0025: ldc.i4.1
L_0026: stloc 0 (System.Boolean)
L_0027: Label0
L_0027: ldloc 0 (System.Boolean)
L_0028: ret
DONE

### Patch BattleTech.Starmap, BattleTech.StarSystemNode GetLocationByUV(UnityEngine.Vector2, UnityEngine.Rect, Single)
L_0000: Local var 0: System.Collections.Generic.List`1+Enumerator[[BattleTech.StarSystemNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 1: BattleTech.StarSystemNode
L_0000: Local var 2: UnityEngine.Vector2
L_0000: Local var 3: UnityEngine.Vector2
L_0000: Local var 4: BattleTech.StarSystemNode
L_0000: Local var 5: BattleTech.StarSystemNode
L_0000: ldnull
L_0001: stloc 5 (BattleTech.StarSystemNode)
L_0003: ldarg.0
L_0004: ldfld System.Collections.Generic.List`1[BattleTech.StarSystemNode] planetList
L_0009: callvirt Enumerator GetEnumerator()
L_000e: stloc.0
.try
{
	L_000f: br Label1
	L_0014: Label4
	L_0014: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_0016: call BattleTech.StarSystemNode get_Current()
	L_001b: stloc.1
	L_001c: ldloc.1
	L_001d: callvirt UnityEngine.Vector2 get_NormalizedPosition()
	L_0022: stloc.2
	L_0023: ldloca.s 2 (UnityEngine.Vector2)
	L_0025: ldloc.2
	L_0026: ldfld System.Single x
	L_002b: ldc.r4 2
	L_0030: mul
	L_0031: ldc.r4 1
	L_0036: sub
	L_0037: stfld System.Single x
	L_003c: ldloca.s 2 (UnityEngine.Vector2)
	L_003e: ldloc.2
	L_003f: ldfld System.Single y
	L_0044: ldc.r4 2
	L_0049: mul
	L_004a: ldc.r4 1
	L_004f: sub
	L_0050: stfld System.Single y
	L_0055: ldloc.2
	L_0056: ldarg.3
	L_0057: call UnityEngine.Vector2 op_Multiply(UnityEngine.Vector2, Single)
	L_005c: stloc.3
	L_005d: ldloca.s 3 (UnityEngine.Vector2)
	L_005f: ldloc.3
	L_0060: ldfld System.Single x
	L_0065: ldc.r4 1
	L_006a: add
	L_006b: ldc.r4 0.5
	L_0070: mul
	L_0071: stfld System.Single x
	L_0076: ldloca.s 3 (UnityEngine.Vector2)
	L_0078: ldloc.3
	L_0079: ldfld System.Single y
	L_007e: ldc.r4 1
	L_0083: add
	L_0084: ldc.r4 0.5
	L_0089: mul
	L_008a: stfld System.Single y
	L_008f: ldarga.s 2
	L_0091: ldloc.3
	L_0092: call Boolean Contains(UnityEngine.Vector2)
	L_0097: brfalse Label2
	L_009c: ldloc.1
	L_009d: stloc.s 4 (BattleTech.StarSystemNode)
	L_009f: leave Label3
	L_00a4: Label1
	L_00a4: Label2
	L_00a4: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_00a6: call Boolean MoveNext()
	L_00ab: brtrue Label4
	L_00b0: leave Label5
	L_00b5: leave (autogenerated)
} // end try
.finally
{
	L_00ba: ldloca.s 0 (System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode])
	L_00bc: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.StarSystemNode]
	L_00c2: callvirt Void Dispose()
	L_00c7: endfinally
	L_00c8: leave (autogenerated)
} // end handler
L_00c9: Label5
L_00c9: ldnull
L_00ca: br Label7
L_00cf: Label3
L_00cf: ldloc.s 4 (BattleTech.StarSystemNode)
L_00d1: Label7
L_00d1: stloc 5 (BattleTech.StarSystemNode)
L_00d3: ldarg.0
L_00d4: ldloc 5 (BattleTech.StarSystemNode)
L_00d6: call Void Postfix(BattleTech.Starmap, BattleTech.StarSystemNode)
L_00db: ldloc 5 (BattleTech.StarSystemNode)
L_00dd: ret
DONE

### Patch BattleTech.StarmapRenderer, Void SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer)
L_0000: ldarg 1
L_0006: ldarg.0
L_0007: ldfld BattleTech.StarmapSystemRenderer currSystem
L_000c: call Boolean Prefix(BattleTech.StarmapSystemRenderer, BattleTech.StarmapSystemRenderer)
L_0011: brfalse Label0
L_0016: ldarg.1
L_0017: ldarg.0
L_0018: ldfld BattleTech.StarmapSystemRenderer currSystem
L_001d: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0022: brfalse Label1
L_0027: ldarg.0
L_0028: ldfld BattleTech.StarmapSystemRenderer currSystem
L_002d: ldnull
L_002e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0033: brfalse Label2
L_0038: ldarg.0
L_0039: ldfld BattleTech.StarmapSystemRenderer currSystem
L_003e: callvirt Void Deselected()
L_0043: ldarg.0
L_0044: ldnull
L_0045: stfld BattleTech.StarmapSystemRenderer currSystem
L_004a: Label2
L_004a: ldarg.1
L_004b: ldnull
L_004c: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0051: brfalse Label3
L_0056: ldarg.0
L_0057: ldarg.1
L_0058: stfld BattleTech.StarmapSystemRenderer currSystem
L_005d: ldarg.0
L_005e: ldfld BattleTech.StarmapSystemRenderer currSystem
L_0063: callvirt Void Selected()
L_0068: ldarg.0
L_0069: ldfld BattleTech.Starmap starmap
L_006e: ldarg.0
L_006f: ldfld BattleTech.StarmapSystemRenderer currSystem
L_0074: ldfld BattleTech.StarSystemNode system
L_0079: callvirt BattleTech.StarSystem get_System()
L_007e: callvirt Boolean SetSelectedSystem(BattleTech.StarSystem)
L_0083: pop
L_0084: br Label6
L_0089: Label3
L_0089: ldarg.0
L_008a: call Void ClearPlannedPath()
L_008f: ldarg.0
L_0090: ldfld BattleTech.Starmap starmap
L_0095: ldfld BattleTech.StarSystemEvent StarSystemRouted
L_009a: ldnull
L_009b: callvirt Void Invoke(BattleTech.StarSystem)
L_00a0: br Label7
L_00a5: Label1
L_00a5: ldarg.1
L_00a6: ldnull
L_00a7: call Boolean op_Equality(UnityEngine.Object, UnityEngine.Object)
L_00ac: brfalse Label4
L_00b1: ldarg.0
L_00b2: ldfld BattleTech.Starmap starmap
L_00b7: callvirt BattleTech.StarSystemNode get_CurSelected()
L_00bc: brfalse Label5
L_00c1: ldarg.0
L_00c2: ldarg.0
L_00c3: ldfld BattleTech.Starmap starmap
L_00c8: callvirt BattleTech.StarSystemNode get_CurSelected()
L_00cd: call BattleTech.StarmapSystemRenderer GetSystemRenderer(BattleTech.StarSystemNode)
L_00d2: callvirt Void Deselected()
L_00d7: ldarg.0
L_00d8: call Void ClearPlannedPath()
L_00dd: ldarg.0
L_00de: ldfld BattleTech.Starmap starmap
L_00e3: ldfld BattleTech.StarSystemEvent StarSystemRouted
L_00e8: ldnull
L_00e9: callvirt Void Invoke(BattleTech.StarSystem)
L_00ee: Label4
L_00ee: Label5
L_00ee: Label6
L_00ee: Label7
L_00ee: Label0
L_00ee: ret
DONE

### Harmony id=Glucose.OnePointArmorStep, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from OnePointArmorStep.OnePointArmorStep.Init(), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\OnePointArmorStep\OnePointArmorStep.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.UI.MechLabLocationWidget, Void OnFrontArmorAdd()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.0
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: ldc.i4.1
L_0031: call Void ModifyArmor(Boolean, Single, Boolean)
L_0036: br Label2
L_003b: Label1
L_003b: ldarg.0
L_003c: ldc.i4.0
L_003d: ldc.i4.5
L_003e: ldloc.0
L_003f: sub
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnFrontArmorSubtract()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.0
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: neg
L_0031: ldc.i4.1
L_0032: call Void ModifyArmor(Boolean, Single, Boolean)
L_0037: br Label2
L_003c: Label1
L_003c: ldarg.0
L_003d: ldc.i4.0
L_003e: ldloc.0
L_003f: neg
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnRearArmorAdd()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentRearArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.1
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: ldc.i4.1
L_0031: call Void ModifyArmor(Boolean, Single, Boolean)
L_0036: br Label2
L_003b: Label1
L_003b: ldarg.0
L_003c: ldc.i4.1
L_003d: ldc.i4.5
L_003e: ldloc.0
L_003f: sub
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Patch BattleTech.UI.MechLabLocationWidget, Void OnRearArmorSubtract()
L_0000: Local var 0: System.Int32
L_0000: ldarg.0
L_0001: call Boolean Prefix(BattleTech.UI.MechLabLocationWidget)
L_0006: brfalse Label0
L_000b: ldarg.0
L_000c: ldfld System.Single currentRearArmor
L_0011: call Int32 FloorToInt(Single)
L_0016: ldc.i4.5
L_0017: rem
L_0018: stloc.0
L_0019: ldloc.0
L_001a: brtrue Label1
L_001f: ldarg.0
L_0020: ldc.i4.1
L_0021: call BattleTech.GameInstance get_BattleTechGame()
L_0026: callvirt BattleTech.MechStatisticsConstantsDef get_MechStatisticsConstants()
L_002b: ldfld System.Single ARMOR_PER_STEP
L_0030: neg
L_0031: ldc.i4.1
L_0032: call Void ModifyArmor(Boolean, Single, Boolean)
L_0037: br Label2
L_003c: Label1
L_003c: ldarg.0
L_003d: ldc.i4.1
L_003e: ldloc.0
L_003f: neg
L_0040: conv.r4
L_0041: ldc.i4.1
L_0042: call Void ModifyArmor(Boolean, Single, Boolean)
L_0047: Label2
L_0047: Label0
L_0047: ret
DONE

### Harmony id=com.BattleTech.PanicSystem, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from PanicSystem.PanicSystem.Init(System.String, System.String), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\PanicSystem\PanicSystem.dll
### At 2019-09-15 05.27.37
### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(BattleTech.FloatieMessage)
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: ldarg.0
L_0008: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_000d: call Boolean Prefix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage, System.Collections.Generic.Queue`1[BattleTech.FloatieMessage])
L_0012: brfalse Label0
L_0017: ldarg.0
L_0018: call BattleTech.UI.CombatHUD get_HUD()
L_001d: callvirt Boolean get_PilotInjuriesSuppressed()
L_0022: brfalse Label1
L_0027: ldarg.1
L_0028: ldfld BattleTech.FloatieMessage+MessageNature nature
L_002d: ldc.i4.s 9
L_002f: bne.un Label2
L_0034: br Label3
L_0039: Label1
L_0039: Label2
L_0039: ldarg.0
L_003a: ldfld System.Collections.Generic.Queue`1[BattleTech.FloatieMessage] msgQueue
L_003f: ldarg.1
L_0040: callvirt Void Enqueue(BattleTech.FloatieMessage)
L_0045: Label3
L_0045: Label0
L_0045: ldarg.0
L_0046: ldarg 1
L_004c: call Void Postfix(BattleTech.UI.CombatHUDFloatieStack, BattleTech.FloatieMessage)
L_0051: ret
DONE

### Patch BattleTech.UI.CombatHUDFloatieStack, Void AddFloatie(Localize.Text, MessageNature)
L_0000: Local var 0: UnityEngine.Color
L_0000: Local var 1: SVGImporter.SVGAsset
L_0000: Local var 2: BattleTech.UI.CombatHUDStatusStackItem
L_0000: ldarg.1
L_0001: call Boolean IsNullOrEmpty(Localize.Text)
L_0006: brfalse Label1
L_000b: br Label6
L_0010: Label1
L_0010: ldarg.0
L_0011: call Single get_time()
L_0016: stfld System.Single timeLastFloatieShown
L_001b: ldarg.0
L_001c: ldarg.2
L_001d: call UnityEngine.Color GetFloatieColor(MessageNature)
L_0022: stloc.0
L_0023: ldarg.0
L_0024: ldarg.2
L_0025: call SVGImporter.SVGAsset GetFloatieIcon(MessageNature)
L_002a: stloc.1
L_002b: ldarg.0
L_002c: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_0031: ldarg.0
L_0032: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_0037: callvirt Int32 get_Count()
L_003c: ldc.i4.1
L_003d: sub
L_003e: callvirt BattleTech.UI.CombatHUDStatusStackItem get_Item(Int32)
L_0043: stloc.2
L_0044: ldarg.0
L_0045: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_004a: ldloc.2
L_004b: callvirt Boolean Remove(BattleTech.UI.CombatHUDStatusStackItem)
L_0050: pop
L_0051: ldloc.2
L_0052: callvirt UnityEngine.GameObject get_gameObject()
L_0057: callvirt Boolean get_activeSelf()
L_005c: brtrue Label2
L_0061: ldloc.2
L_0062: callvirt UnityEngine.GameObject get_gameObject()
L_0067: ldc.i4.1
L_0068: callvirt Void SetActive(Boolean)
L_006d: Label2
L_006d: ldarg.2
L_006e: ldc.i4.s 16
L_0070: bne.un Label3
L_0075: ldstr "LOST: {0}"
L_007a: ldc.i4.1
L_007b: newarr System.Object
L_0080: dup
L_0081: ldc.i4.0
L_0082: ldarg.1
L_0083: stelem.ref
L_0084: newobj Void .ctor(String, Object[])
L_0089: starg.s 1
L_008b: br Label4
L_0090: Label3
L_0090: ldarg.2
L_0091: ldc.i4.s 17
L_0093: bne.un Label5
L_0098: ldstr "SUPPRESSED: {0}"
L_009d: ldc.i4.1
L_009e: newarr System.Object
L_00a3: dup
L_00a4: ldc.i4.0
L_00a5: ldarg.1
L_00a6: stelem.ref
L_00a7: newobj Void .ctor(String, Object[])
L_00ac: starg.s 1
L_00ae: Label4
L_00ae: Label5
L_00ae: ldloc.2
L_00af: ldloc.1
L_00b0: ldarg.1
L_00b1: ldloc.0
L_00b2: callvirt Void ShowIcon(SVGImporter.SVGAsset, Localize.Text, UnityEngine.Color)
L_00b7: ldloc.2
L_00b8: ldc.i4.0
L_00b9: ldc.i4.0
L_00ba: callvirt System.Nullable`1[System.Boolean] SetState(BattleTech.UI.ButtonState, Boolean)
L_00bf: pop
L_00c0: ldarg.0
L_00c1: ldfld System.Collections.Generic.List`1[BattleTech.UI.CombatHUDStatusStackItem] floatieList
L_00c6: ldc.i4.0
L_00c7: ldloc.2
L_00c8: callvirt Void Insert(Int32, BattleTech.UI.CombatHUDStatusStackItem)
L_00cd: ldarg.0
L_00ce: call BattleTech.UI.CombatHUD get_HUD()
L_00d3: ldc.i4 202
L_00d8: callvirt Void PlayAudioEvent(AudioEventList_ui)
L_00dd: Label6
L_00dd: ldarg.0
L_00de: ldarg 1
L_00e4: call Void Postfix(BattleTech.UI.CombatHUDFloatieStack, Localize.Text)
L_00e9: ret
DONE

### Patch BattleTech.UI.AAR_SalvageScreen, Void OnCompleted()
L_0000: ldarg.0
L_0001: ldc.i4.0
L_0002: call Void set_Initialized(Boolean)
L_0007: ldarg.0
L_0008: ldc.i4.0
L_0009: call Void Pool(Boolean)
L_000e: call BattleTech.UnityGameInstance get_Instance()
L_0013: callvirt BattleTech.GameInstance get_Game()
L_0018: dup
L_0019: callvirt BattleTech.SimGameState get_Simulation()
L_001e: ldarg.0
L_001f: ldfld BattleTech.Contract contract
L_0024: callvirt Void OnCompleteContract(BattleTech.Contract)
L_0029: dup
L_002a: callvirt BattleTech.CombatGameState get_Combat()
L_002f: brfalse Label1
L_0034: call BattleTech.UnityGameInstance get_Instance()
L_0039: callvirt BattleTech.GameInstance get_Game()
L_003e: callvirt Void ClearCombat()
L_0043: Label1
L_0043: ldarg.0
L_0044: call Void LoadingCurtainForSimGameRestart()
L_0049: callvirt BattleTech.SimGameState get_Simulation()
L_004e: callvirt Void AttachUX()
L_0053: ldarg.0
L_0054: ldfld BattleTech.UI.MissionResults missionResultParent
L_0059: ldc.i4.0
L_005a: callvirt Void Pool(Boolean)
L_005f: ldarg.0
L_0060: call Void PoolSalvageControllers()
L_0065: call Void Postfix()
L_006a: ret
DONE

### Patch BattleTech.AbstractActor, System.Collections.Generic.List`1[BattleTech.IStackSequence] OnNewRound(Int32)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Collections.Generic.List`1+Enumerator[[BattleTech.Effect, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 2: BattleTech.Effect
L_0000: Local var 3: BattleTech.AbstractActor
L_0000: Local var 4: System.Collections.Generic.List`1[[BattleTech.IStackSequence, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: ldnull
L_0001: stloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_0003: ldarg.0
L_0004: call Void Prefix(BattleTech.AbstractActor)
L_0009: ldarg.0
L_000a: ldarg.0
L_000b: callvirt Int32 get_BaseInitiative()
L_0010: call Void set_Initiative(Int32)
L_0015: ldarg.0
L_0016: ldc.i4.0
L_0017: call Void set_HasActivatedThisRound(Boolean)
L_001c: ldarg.0
L_001d: ldc.i4.0
L_001e: call Void set_HasBegunActivation(Boolean)
L_0023: ldarg.0
L_0024: ldc.i4.0
L_0025: call Void set_HasMovedThisRound(Boolean)
L_002a: ldarg.0
L_002b: ldc.i4.0
L_002c: call Void set_HasFiredThisRound(Boolean)
L_0031: ldarg.0
L_0032: ldc.i4.0
L_0033: call Void set_StoodUpThisRound(Boolean)
L_0038: ldarg.0
L_0039: ldarg.0
L_003a: ldfld UnityEngine.Vector3 currentPosition
L_003f: stfld UnityEngine.Vector3 previousPosition
L_0044: ldarg.0
L_0045: ldc.i4.0
L_0046: call Void set_AutoBrace(Boolean)
L_004b: ldarg.0
L_004c: ldc.i4.0
L_004d: call Void set_IsCompletingActivation(Boolean)
L_0052: ldarg.0
L_0053: call Boolean get_IsCoolantVenting()
L_0058: brfalse Label1
L_005d: ldarg.0
L_005e: call Void StartCoolantVentCooldown()
L_0063: Label1
L_0063: ldc.i4.0
L_0064: stloc.0
L_0065: br Label2
L_006a: Label3
L_006a: ldarg.0
L_006b: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0070: ldloc.0
L_0071: callvirt BattleTech.Weapon get_Item(Int32)
L_0076: callvirt Void OnNewRound()
L_007b: ldloc.0
L_007c: ldc.i4.1
L_007d: add
L_007e: stloc.0
L_007f: Label2
L_007f: ldloc.0
L_0080: ldarg.0
L_0081: callvirt System.Collections.Generic.List`1[BattleTech.Weapon] get_Weapons()
L_0086: callvirt Int32 get_Count()
L_008b: blt Label3
L_0090: ldarg.0
L_0091: callvirt Boolean get_IsOperational()
L_0096: brfalse Label4
L_009b: ldarg.0
L_009c: call BattleTech.CombatGameState get_Combat()
L_00a1: callvirt BattleTech.EffectManager get_EffectManager()
L_00a6: ldarg.0
L_00a7: callvirt System.Collections.Generic.List`1[BattleTech.Effect] GetAllEffectsTargeting(System.Object)
L_00ac: ldsfld System.Predicate`1[BattleTech.Effect] <>9__641_0
L_00b1: dup
L_00b2: brtrue Label5
L_00b7: pop
L_00b8: ldsfld BattleTech.AbstractActor+<>c <>9
L_00bd: ldftn Boolean <OnNewRound>b__641_0(BattleTech.Effect)
L_00c3: newobj Void .ctor(Object, IntPtr)
L_00c8: dup
L_00c9: stsfld System.Predicate`1[BattleTech.Effect] <>9__641_0
L_00ce: Label5
L_00ce: callvirt System.Collections.Generic.List`1[BattleTech.Effect] FindAll(System.Predicate`1[BattleTech.Effect])
L_00d3: callvirt Enumerator GetEnumerator()
L_00d8: stloc.1
.try
{
	L_00d9: br Label6
	L_00de: Label8
	L_00de: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_00e0: call BattleTech.Effect get_Current()
	L_00e5: stloc.2
	L_00e6: ldarg.0
	L_00e7: call BattleTech.CombatGameState get_Combat()
	L_00ec: ldloc.2
	L_00ed: ldfld System.String creatorID
	L_00f2: callvirt BattleTech.AbstractActor FindActorByGUID(System.String)
	L_00f7: stloc.3
	L_00f8: ldloc.3
	L_00f9: brfalse Label7
	L_00fe: ldloc.3
	L_00ff: callvirt Boolean get_IsGhosted()
	L_0104: pop
	L_0105: ldloc.3
	L_0106: ldarg.0
	L_0107: call System.String get_GUID()
	L_010c: callvirt Void AddGhostSpotter(System.String)
	L_0111: Label6
	L_0111: Label7
	L_0111: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_0113: call Boolean MoveNext()
	L_0118: brtrue Label8
	L_011d: leave Label9
	L_0122: leave (autogenerated)
} // end try
.finally
{
	L_0127: ldloca.s 1 (System.Collections.Generic.List`1+Enumerator[BattleTech.Effect])
	L_0129: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.Effect]
	L_012f: callvirt Void Dispose()
	L_0134: endfinally
	L_0135: leave (autogenerated)
} // end handler
L_0136: Label4
L_0136: Label9
L_0136: newobj Void .ctor()
L_013b: stloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_013d: ldloc 4 (System.Collections.Generic.List`1[BattleTech.IStackSequence])
L_013f: ret
DONE

### Patch BattleTech.AttackStackSequence, Void OnAttackBegin(MessageCenterMessage)
L_0000: Local var 0: BattleTech.AttackSequenceBeginMessage
L_0000: Local var 1: BattleTech.AttackDirector+AttackSequence
L_0000: ldarg.0
L_0001: call Void Prefix(BattleTech.AttackStackSequence)
L_0006: ldarg.1
L_0007: isinst BattleTech.AttackSequenceBeginMessage
L_000c: stloc.0
L_000d: ldarg.0
L_000e: call BattleTech.CombatGameState get_Combat()
L_0013: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0018: ldloc.0
L_0019: ldfld System.Int32 sequenceId
L_001e: callvirt AttackSequence GetAttackSequence(Int32)
L_0023: stloc.1
L_0024: ldloc.1
L_0025: brtrue Label1
L_002a: ldsfld HBS.Logging.ILog attackLogger
L_002f: ldstr "Null sequence on attack begin!!!"
L_0034: callvirt Void Log(System.Object)
L_0039: br Label8
L_003e: Label1
L_003e: ldloc.1
L_003f: ldfld System.Int32 stackItemUID
L_0044: ldarg.0
L_0045: call Int32 get_SequenceGUID()
L_004a: bne.un Label2
L_004f: ldarg.0
L_0050: call BattleTech.CombatGameState get_Combat()
L_0055: callvirt MessageCenter get_MessageCenter()
L_005a: ldc.i4.s 40
L_005c: ldarg.0
L_005d: ldftn Void OnAttackComplete(MessageCenterMessage)
L_0063: newobj Void .ctor(Object, IntPtr)
L_0068: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_006d: ldarg.0
L_006e: call BattleTech.CombatGameState get_Combat()
L_0073: callvirt MessageCenter get_MessageCenter()
L_0078: ldc.i4.s 82
L_007a: ldarg.0
L_007b: ldftn Void OnActorDestroyed(MessageCenterMessage)
L_0081: newobj Void .ctor(Object, IntPtr)
L_0086: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_008b: ldarg.0
L_008c: ldfld System.Boolean hasOwningSequence
L_0091: brtrue Label3
L_0096: call BattleTech.Save.CloudUserSettings get_CloudSettings()
L_009b: ldfld System.Boolean useAttackCam
L_00a0: brfalse Label4
L_00a5: ldarg.0
L_00a6: call BattleTech.CameraControl get_Instance()
L_00ab: ldloc.1
L_00ac: ldfld BattleTech.AbstractActor attacker
L_00b1: ldloc.1
L_00b2: ldfld BattleTech.ICombatant chosenTarget
L_00b7: ldloc.1
L_00b8: callvirt Int32 get_attackTotalShotsFired()
L_00bd: ldloc.1
L_00be: callvirt Int32 get_attackTotalShotsHit()
L_00c3: ldarg.0
L_00c4: ldfld System.Boolean hasOwningSequence
L_00c9: ldarg.0
L_00ca: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00cf: ldc.i4.0
L_00d0: callvirt AttackSequence get_Item(Int32)
L_00d5: ldfld System.Int32 numTargets
L_00da: ldc.i4.1
L_00db: cgt
L_00dd: callvirt BattleTech.CameraSequence ShowAttackCam(BattleTech.AbstractActor, BattleTech.ICombatant, Int32, Int32, Boolean, Boolean)
L_00e2: ldarg.0
L_00e3: call Int32 get_MessageIndex()
L_00e8: call Void SetCamera(BattleTech.CameraSequence, Int32)
L_00ed: call BattleTech.CameraControl get_Instance()
L_00f2: callvirt Void ClearTargets()
L_00f7: Label3
L_00f7: Label4
L_00f7: ldloc.1
L_00f8: ldfld System.Int32 calledShotLocation
L_00fd: brfalse Label5
L_0102: ldloc.1
L_0103: ldfld BattleTech.ICombatant chosenTarget
L_0108: callvirt BattleTech.UnitType get_UnitType()
L_010d: ldc.i4.1
L_010e: bne.un Label6
L_0113: ldarg.0
L_0114: call BattleTech.CombatGameState get_Combat()
L_0119: callvirt MessageCenter get_MessageCenter()
L_011e: ldloc.1
L_011f: ldfld BattleTech.ICombatant chosenTarget
L_0124: callvirt System.String get_GUID()
L_0129: ldloc.1
L_012a: ldfld BattleTech.ICombatant chosenTarget
L_012f: callvirt System.String get_GUID()
L_0134: ldstr "CALLED SHOT: {0}"
L_0139: ldc.i4.1
L_013a: newarr System.Object
L_013f: dup
L_0140: ldc.i4.0
L_0141: ldloc.1
L_0142: ldfld System.Int32 calledShotLocation
L_0147: call Localize.Text GetLongArmorLocation(BattleTech.ArmorLocation)
L_014c: stelem.ref
L_014d: call System.String T(System.String, System.Object[])
L_0152: ldc.i4.s 10
L_0154: newobj Void .ctor(String, String, String, MessageNature)
L_0159: callvirt Void PublishMessage(MessageCenterMessage)
L_015e: br Label9
L_0163: Label6
L_0163: ldloc.1
L_0164: ldfld BattleTech.ICombatant chosenTarget
L_0169: callvirt BattleTech.UnitType get_UnitType()
L_016e: ldc.i4.2
L_016f: bne.un Label7
L_0174: ldarg.0
L_0175: call BattleTech.CombatGameState get_Combat()
L_017a: callvirt MessageCenter get_MessageCenter()
L_017f: ldloc.1
L_0180: ldfld BattleTech.ICombatant chosenTarget
L_0185: callvirt System.String get_GUID()
L_018a: ldloc.1
L_018b: ldfld BattleTech.ICombatant chosenTarget
L_0190: callvirt System.String get_GUID()
L_0195: ldstr "CALLED SHOT: {0}"
L_019a: ldc.i4.1
L_019b: newarr System.Object
L_01a0: dup
L_01a1: ldc.i4.0
L_01a2: ldloc.1
L_01a3: ldfld System.Int32 calledShotLocation
L_01a8: call System.String GetLongChassisLocation(BattleTech.VehicleChassisLocations)
L_01ad: stelem.ref
L_01ae: call System.String T(System.String, System.Object[])
L_01b3: ldc.i4.s 10
L_01b5: newobj Void .ctor(String, String, String, MessageNature)
L_01ba: callvirt Void PublishMessage(MessageCenterMessage)
L_01bf: Label2
L_01bf: Label5
L_01bf: Label7
L_01bf: Label8
L_01bf: Label9
L_01bf: ret
DONE

### Patch BattleTech.AttackStackSequence, Void OnAttackComplete(MessageCenterMessage)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: BattleTech.ICombatant
L_0000: Local var 2: BattleTech.AbstractActor
L_0000: ldarg.0
L_0001: ldarg 1
L_0007: call Void Prefix(BattleTech.AttackStackSequence, MessageCenterMessage)
L_000c: ldarg.1
L_000d: isinst BattleTech.AttackCompleteMessage
L_0012: ldfld System.Int32 stackItemUID
L_0017: ldarg.0
L_0018: call Int32 get_SequenceGUID()
L_001d: bne.un Label1
L_0022: ldarg.0
L_0023: ldfld System.Boolean willConsumeFiring
L_0028: brfalse Label2
L_002d: ldc.i4.0
L_002e: stloc.0
L_002f: br Label3
L_0034: Label7
L_0034: ldarg.0
L_0035: call BattleTech.CombatGameState get_Combat()
L_003a: ldarg.0
L_003b: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0040: ldc.i4.0
L_0041: callvirt AttackSequence get_Item(Int32)
L_0046: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_004b: ldloc.0
L_004c: callvirt System.String get_Item(Int32)
L_0051: ldc.i4.0
L_0052: callvirt BattleTech.ICombatant FindCombatantByGUID(System.String, Boolean)
L_0057: stloc.1
L_0058: ldloc.1
L_0059: brfalse Label4
L_005e: ldloc.1
L_005f: ldarg.0
L_0060: ldfld BattleTech.AbstractActor owningActor
L_0065: callvirt System.String get_GUID()
L_006a: callvirt Void HandleDeath(System.String)
L_006f: ldloc.1
L_0070: callvirt Boolean get_IsDead()
L_0075: brtrue Label5
L_007a: ldloc.1
L_007b: isinst BattleTech.AbstractActor
L_0080: stloc.2
L_0081: ldloc.2
L_0082: brfalse Label6
L_0087: ldloc.2
L_0088: callvirt Boolean CheckForInstability()
L_008d: pop
L_008e: ldloc.2
L_008f: ldarg.0
L_0090: call Int32 get_RootSequenceGUID()
L_0095: ldarg.0
L_0096: ldfld BattleTech.AbstractActor owningActor
L_009b: callvirt System.String get_GUID()
L_00a0: call UnityEngine.Vector2 get_one()
L_00a5: ldnull
L_00a6: callvirt Void HandleKnockdown(Int32, System.String, UnityEngine.Vector2, BattleTech.SequenceFinished)
L_00ab: Label4
L_00ab: Label5
L_00ab: Label6
L_00ab: ldloc.0
L_00ac: ldc.i4.1
L_00ad: add
L_00ae: stloc.0
L_00af: Label3
L_00af: ldloc.0
L_00b0: ldarg.0
L_00b1: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00b6: ldc.i4.0
L_00b7: callvirt AttackSequence get_Item(Int32)
L_00bc: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00c1: callvirt Int32 get_Count()
L_00c6: blt Label7
L_00cb: Label2
L_00cb: ldarg.0
L_00cc: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_00d1: ldc.i4.0
L_00d2: callvirt Void RemoveAt(Int32)
L_00d7: ldsfld HBS.Logging.ILog attackLogger
L_00dc: ldc.i4.4
L_00dd: newarr System.Object
L_00e2: dup
L_00e3: ldc.i4.0
L_00e4: ldstr "OnAttackComplete for stackSequence "
L_00e9: stelem.ref
L_00ea: dup
L_00eb: ldc.i4.1
L_00ec: ldarg.0
L_00ed: call Int32 get_SequenceGUID()
L_00f2: box System.Int32
L_00f7: stelem.ref
L_00f8: dup
L_00f9: ldc.i4.2
L_00fa: ldstr ", remaining sequences: "
L_00ff: stelem.ref
L_0100: dup
L_0101: ldc.i4.3
L_0102: ldarg.0
L_0103: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0108: callvirt Int32 get_Count()
L_010d: box System.Int32
L_0112: stelem.ref
L_0113: call System.String Concat(System.Object[])
L_0118: callvirt Void Log(System.Object)
L_011d: ldarg.0
L_011e: ldfld System.Collections.Generic.List`1[BattleTech.AttackDirector+AttackSequence] directorSequences
L_0123: callvirt Int32 get_Count()
L_0128: brtrue Label8
L_012d: ldarg.0
L_012e: ldc.i4.1
L_012f: call Void set_OrdersAreComplete(Boolean)
L_0134: ldarg.0
L_0135: call BattleTech.CombatGameState get_Combat()
L_013a: callvirt MessageCenter get_MessageCenter()
L_013f: ldc.i4.s 40
L_0141: ldarg.0
L_0142: ldftn Void OnAttackComplete(MessageCenterMessage)
L_0148: newobj Void .ctor(Object, IntPtr)
L_014d: callvirt Void RemoveSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_0152: br Label9
L_0157: Label8
L_0157: ldarg.0
L_0158: ldc.i4.1
L_0159: stfld BattleTech.AttackStackSequence+ASS_State state
L_015e: Label1
L_015e: Label9
L_015e: ret
DONE

### Patch BattleTech.Save.GameInstanceSave, Void .ctor(GameInstance, SaveReason)
L_0000: Local var 0: BattleTech.Data.ContentPackIndex
L_0000: Local var 1: System.DateTime
L_0000: ldarg.0
L_0001: ldc.i4.1
L_0002: stfld System.Int32 version
L_0007: ldarg.0
L_0008: ldstr "the one and only"
L_000d: newobj Void .ctor(String)
L_0012: stfld BattleTech.Save.Test.SerializableReferenceContainer references
L_0017: ldarg.0
L_0018: call Void .ctor()
L_001d: ldarg.1
L_001e: callvirt BattleTech.SimGameState get_Simulation()
L_0023: brfalse Label1
L_0028: ldarg.0
L_0029: ldarg.1
L_002a: callvirt BattleTech.SimGameState get_Simulation()
L_002f: newobj Void .ctor(SimGameState)
L_0034: stfld BattleTech.Save.SimGameSave simGameSave
L_0039: Label1
L_0039: ldarg.0
L_003a: ldarg.1
L_003b: callvirt BattleTech.CombatGameState get_Combat()
L_0040: stfld BattleTech.CombatGameState combatGameState
L_0045: ldarg.0
L_0046: ldarg.2
L_0047: stfld BattleTech.Save.SaveGameStructure.SaveReason saveReason
L_004c: ldarg.0
L_004d: ldarg.2
L_004e: ldc.i4.s 15
L_0050: ceq
L_0052: stfld System.Boolean campaignResult
L_0057: ldarg.0
L_0058: call System.DateTime get_UtcNow()
L_005d: call Void set_SaveTime(System.DateTime)
L_0062: ldarg.0
L_0063: ldarg.0
L_0064: call System.DateTime get_SaveTime()
L_0069: stloc.1
L_006a: ldloca.s 1 (System.DateTime)
L_006c: call Int64 get_Ticks()
L_0071: stfld System.Int64 timestamp
L_0076: ldarg.0
L_0077: call Boolean get_HasSimData()
L_007c: brfalse Label2
L_0081: ldarg.0
L_0082: ldarg.0
L_0083: ldfld BattleTech.Save.SimGameSave simGameSave
L_0088: callvirt System.String get_InstanceGUID()
L_008d: stfld System.String instanceGUID
L_0092: br Label3
L_0097: Label2
L_0097: ldarg.0
L_0098: call Boolean get_HasCombatData()
L_009d: brfalse Label4
L_00a2: ldarg.0
L_00a3: ldstr "GENERIC_SKIRMISH_SAVE_GUID!"
L_00a8: stfld System.String instanceGUID
L_00ad: br Label5
L_00b2: Label4
L_00b2: ldstr "unexpected save data."
L_00b7: newobj Void .ctor(String)
L_00bc: throw
L_00bd: Label3
L_00bd: Label5
L_00bd: ldarg.1
L_00be: callvirt BattleTech.Data.DataManager get_DataManager()
L_00c3: callvirt BattleTech.Data.ContentPackIndex get_ContentPackIndex()
L_00c8: stloc.0
L_00c9: ldarg.0
L_00ca: ldloc.0
L_00cb: callvirt System.Collections.Generic.List`1[System.String] GetOwnedContentPacks()
L_00d0: stfld System.Collections.Generic.List`1[System.String] ownedContentPacks
L_00d5: ldarg.0
L_00d6: call System.String get_BuildNumber()
L_00db: call Void set_BuildNumber(System.String)
L_00e0: ldarg.0
L_00e1: call System.String get_ProductVersion()
L_00e6: call Void set_ProductVersion(System.String)
L_00eb: ldarg.0
L_00ec: call Void Postfix(BattleTech.Save.GameInstanceSave)
L_00f1: ret
DONE

### Patch BattleTech.LanceSpawnerGameLogic, Void OnTriggerSpawn(MessageCenterMessage)
L_0000: Local var 0: BattleTech.TriggerSpawn
L_0000: Local var 1: System.Boolean
L_0000: Local var 2: BattleTech.Team
L_0000: Local var 3: BattleTech.Team
L_0000: ldarg.1
L_0001: isinst BattleTech.TriggerSpawn
L_0006: stloc.0
L_0007: ldloc.0
L_0008: brfalse Label1
L_000d: ldloc.0
L_000e: callvirt System.String get_affectedObjectGuid()
L_0013: ldarg.0
L_0014: ldfld System.String encounterObjectGuid
L_0019: call Boolean op_Equality(System.String, System.String)
L_001e: brfalse Label2
L_0023: ldarg.0
L_0024: call Boolean HasUnitToSpawn()
L_0029: brfalse Label3
L_002e: ldc.i4.0
L_002f: stloc.1
L_0030: ldarg.0
L_0031: ldc.i4.1
L_0032: stfld System.Boolean isSpawning
L_0037: ldarg.0
L_0038: ldfld BattleTech.SpawnUnitMethodType spawnMethod
L_003d: ldc.i4.1
L_003e: bne.un Label4
L_0043: ldc.i4.1
L_0044: stloc.1
L_0045: ldarg.0
L_0046: ldarg.0
L_0047: call BattleTech.CombatGameState get_Combat()
L_004c: ldarg.0
L_004d: call UnityEngine.Transform get_transform()
L_0052: ldarg.0
L_0053: ldfld System.String encounterObjectGuid
L_0058: ldarg.0
L_0059: ldfld System.String encounterObjectGuid
L_005e: call System.String GetDropshipGuid(System.String)
L_0063: ldc.i4.0
L_0064: ldarg.0
L_0065: ldfld System.String teamDefinitionGuid
L_006a: ldarg.0
L_006b: ldfld BattleTech.DropshipAnimationStyle dropshipAnimationStyle
L_0070: call BattleTech.DropshipGameLogic SpawnDropshipForFlyby(BattleTech.CombatGameState, UnityEngine.Transform, System.String, System.String, Boolean, System.String, BattleTech.DropshipAnimationStyle)
L_0075: call Void set_LeopardInstance(BattleTech.DropshipGameLogic)
L_007a: br Label5
L_007f: Label4
L_007f: ldarg.0
L_0080: ldfld BattleTech.SpawnUnitMethodType spawnMethod
L_0085: ldc.i4.2
L_0086: bne.un Label6
L_008b: ldc.i4.1
L_008c: stloc.1
L_008d: Label5
L_008d: Label6
L_008d: ldarg.0
L_008e: ldloc.1
L_008f: callvirt Void SpawnUnits(Boolean)
L_0094: ldarg.0
L_0095: ldfld System.Boolean encounterInitialized
L_009a: brfalse Label7
L_009f: ldarg.0
L_00a0: call BattleTech.CombatGameState get_Combat()
L_00a5: callvirt BattleTech.TurnDirector get_TurnDirector()
L_00aa: ldarg.0
L_00ab: ldfld System.String teamDefinitionGuid
L_00b0: callvirt BattleTech.TurnActor GetTurnActorByUniqueId(System.String)
L_00b5: isinst BattleTech.Team
L_00ba: stloc.2
L_00bb: ldloc.2
L_00bc: brfalse Label8
L_00c1: ldarg.0
L_00c2: call BattleTech.CombatGameState get_Combat()
L_00c7: callvirt BattleTech.Team get_LocalPlayerTeam()
L_00cc: stloc.3
L_00cd: ldloc.2
L_00ce: ldloc.3
L_00cf: callvirt Boolean IsFriendly(BattleTech.Team)
L_00d4: brfalse Label9
L_00d9: ldstr "audioeventdef_musictriggers_combat"
L_00de: ldstr "friendly_reinforcements"
L_00e3: ldnull
L_00e4: ldnull
L_00e5: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_00ea: pop
L_00eb: br Label11
L_00f0: Label9
L_00f0: ldloc.2
L_00f1: ldloc.3
L_00f2: callvirt Boolean IsEnemy(BattleTech.Team)
L_00f7: brfalse Label10
L_00fc: ldstr "audioeventdef_musictriggers_combat"
L_0101: ldstr "new_enemy_wave"
L_0106: ldnull
L_0107: ldnull
L_0108: call Boolean PlayAudioEvent(System.String, System.String, AkGameObj, EventCallback)
L_010d: pop
L_010e: Label1
L_010e: Label2
L_010e: Label3
L_010e: Label7
L_010e: Label8
L_010e: Label10
L_010e: Label11
L_010e: ldarg.0
L_010f: call Void Postfix(BattleTech.LanceSpawnerGameLogic)
L_0114: ret
DONE

### Patch BattleTech.GameInstance, Void LaunchContract(BattleTech.Contract, System.String)
L_0000: ldarg.0
L_0001: call BattleTech.CombatGameState get_Combat()
L_0006: brfalse Label1
L_000b: br Label7
L_0010: Label1
L_0010: ldarg.1
L_0011: ldstr "LaunchContract"
L_0016: callvirt Void PrintValuesToDisc(System.String)
L_001b: ldarg.2
L_001c: ldstr "bf40fd39-ccf9-47c4-94a6-061809681140"
L_0021: call Boolean op_Equality(System.String, System.String)
L_0026: brfalse Label2
L_002b: ldstr "GameInstance"
L_0030: call HBS.Logging.ILog GetLogger(System.String)
L_0035: ldstr "Launching contract with Player1TeamDefinitionGuid"
L_003a: callvirt Void Log(System.Object)
L_003f: br Label3
L_0044: Label2
L_0044: ldarg.2
L_0045: ldstr "757173dd-b4e1-4bb5-9bee-d78e623cc867"
L_004a: call Boolean op_Equality(System.String, System.String)
L_004f: brfalse Label4
L_0054: ldstr "GameInstance"
L_0059: call HBS.Logging.ILog GetLogger(System.String)
L_005e: ldstr "Launching contract with Player2TeamDefinitionGuid"
L_0063: callvirt Void Log(System.Object)
L_0068: Label3
L_0068: Label4
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_Combat(BattleTech.CombatGameState)
L_0073: ldarg.0
L_0074: call BattleTech.CombatGameState get_Combat()
L_0079: ldarg.1
L_007a: ldarg.0
L_007b: ldarg.2
L_007c: callvirt Void FirstTimeInit(BattleTech.Contract, BattleTech.GameInstance, System.String)
L_0081: ldarg.0
L_0082: call BattleTech.CombatGameState get_Combat()
L_0087: callvirt BattleTech.Contract get_ActiveContract()
L_008c: callvirt Void Begin()
L_0091: ldarg.0
L_0092: call BattleTech.SimGameState get_Simulation()
L_0097: brfalse Label5
L_009c: ldarg.0
L_009d: call BattleTech.SimGameState get_Simulation()
L_00a2: callvirt Boolean get_IsIronmanCampaign()
L_00a7: brfalse Label6
L_00ac: ldarg.0
L_00ad: call BattleTech.SimGameState get_Simulation()
L_00b2: callvirt MessageCenter get_MessageCenter()
L_00b7: ldc.i4.s 64
L_00b9: ldarg.0
L_00ba: ldftn Void HandleCombatIronmanFailure(MessageCenterMessage)
L_00c0: newobj Void .ctor(Object, IntPtr)
L_00c5: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_00ca: Label5
L_00ca: Label6
L_00ca: Label7
L_00ca: call Void Postfix()
L_00cf: call Void Postfix()
L_00d4: ret
DONE

### Patch BattleTech.GameInstance, Void Load(BattleTech.Save.GameInstanceSave)
L_0000: Local var 0: System.Boolean
L_0000: ldarg 1
L_0006: call Void Prefix(BattleTech.Save.GameInstanceSave)
L_000b: ldarg.1
L_000c: callvirt Boolean get_IsSkirmish()
L_0011: brfalse Label1
L_0016: ldarg.0
L_0017: ldarg.1
L_0018: call Boolean CreateCombatFromSave(BattleTech.Save.GameInstanceSave)
L_001d: stloc.0
L_001e: ldloc.0
L_001f: brfalse Label2
L_0024: ldarg.1
L_0025: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_002a: ldarg.0
L_002b: call BattleTech.Data.DataManager get_DataManager()
L_0030: ldc.i4 1000
L_0035: callvirt Void RequestDependencies(BattleTech.Data.DataManager, UInt32)
L_003a: Label2
L_003a: ldarg.0
L_003b: call MessageCenter get_MessageCenter()
L_0040: ldloc.0
L_0041: newobj Void .ctor(Boolean)
L_0046: callvirt Void PublishMessage(MessageCenterMessage)
L_004b: br Label3
L_0050: Label1
L_0050: ldarg.0
L_0051: call MessageCenter get_MessageCenter()
L_0056: ldc.i4 159
L_005b: ldarg.0
L_005c: ldftn Void LoadedSimGameSate_OnHeadlessComplete(MessageCenterMessage)
L_0062: newobj Void .ctor(Object, IntPtr)
L_0067: callvirt Void AddSubscriber(MessageCenterMessageType, ReceiveMessageCenterMessage)
L_006c: ldarg.0
L_006d: ldarg.1
L_006e: stfld BattleTech.Save.GameInstanceSave inProgressLoadData
L_0073: ldarg.0
L_0074: newobj Void .ctor()
L_0079: call Void set_Simulation(BattleTech.SimGameState)
L_007e: ldarg.1
L_007f: ldarg.0
L_0080: call BattleTech.Data.DataManager get_DataManager()
L_0085: callvirt Void RequestResourcesCustom(BattleTech.Data.DataManager)
L_008a: ldarg.1
L_008b: callvirt BattleTech.Save.Test.SerializableReferenceContainer get_GlobalReferences()
L_0090: ldarg.0
L_0091: call BattleTech.Data.DataManager get_DataManager()
L_0096: ldc.i4.s 10
L_0098: callvirt Void RequestDependencies(BattleTech.Data.DataManager, UInt32)
L_009d: ldarg.0
L_009e: call BattleTech.SimGameState get_Simulation()
L_00a3: ldarg.0
L_00a4: ldarg.1
L_00a5: callvirt Void InitFromSave(BattleTech.GameInstance, BattleTech.Save.GameInstanceSave)
L_00aa: Label3
L_00aa: ret
DONE

### Patch BattleTech.Mech, Void OnLocationDestroyed(BattleTech.ChassisLocations, UnityEngine.Vector3, BattleTech.WeaponHitInfo, BattleTech.DamageType)
L_0000: Local var 0: BattleTech.AttackDirector+AttackSequence
L_0000: Local var 1: BattleTech.DeathMethod
L_0000: Local var 2: System.String
L_0000: Local var 3: Localize.Text
L_0000: Local var 4: System.String
L_0000: Local var 5: System.Int32
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[BattleTech.MechComponent, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]
L_0000: Local var 7: BattleTech.MechComponent
L_0000: Local var 8: BattleTech.Weapon
L_0000: Local var 9: BattleTech.AmmunitionBox
L_0000: Local var 10: BattleTech.Pilot
L_0000: ldarg.1
L_0001: ldc.i4.1
L_0002: beq Label1
L_0007: ldarg.1
L_0008: ldc.i4.8
L_0009: beq Label2
L_000e: ldstr "{0} DESTROYED"
L_0013: ldc.i4.1
L_0014: newarr System.Object
L_0019: dup
L_001a: ldc.i4.0
L_001b: ldarg.1
L_001c: call Localize.Text GetAbbreviatedChassisLocation(BattleTech.ChassisLocations)
L_0021: stelem.ref
L_0022: newobj Void .ctor(String, Object[])
L_0027: stloc.3
L_0028: ldarg.0
L_0029: call BattleTech.CombatGameState get_Combat()
L_002e: callvirt MessageCenter get_MessageCenter()
L_0033: ldarg.0
L_0034: ldloc.3
L_0035: ldc.i4.s 12
L_0037: ldc.i4.1
L_0038: newobj Void .ctor(ICombatant, Text, MessageNature, Boolean)
L_003d: newobj Void .ctor(IStackSequence)
L_0042: callvirt Void PublishMessage(MessageCenterMessage)
L_0047: Label1
L_0047: Label2
L_0047: ldarg.0
L_0048: call BattleTech.CombatGameState get_Combat()
L_004d: callvirt BattleTech.AttackDirector get_AttackDirector()
L_0052: ldarg.3
L_0053: ldfld System.Int32 attackSequenceId
L_0058: callvirt AttackSequence GetAttackSequence(Int32)
L_005d: stloc.0
L_005e: ldloc.0
L_005f: brfalse Label3
L_0064: ldloc.0
L_0065: ldarg.0
L_0066: call System.String get_GUID()
L_006b: callvirt Void FlagAttackDestroyedAnyLocation(System.String)
L_0070: Label3
L_0070: ldarg.1
L_0071: ldc.i4.s 64
L_0073: beq Label4
L_0078: ldarg.1
L_0079: ldc.i4 128
L_007e: bne.un Label5
L_0083: Label4
L_0083: ldloc.0
L_0084: brfalse Label6
L_0089: ldloc.0
L_008a: ldfld BattleTech.AbstractActor attacker
L_008f: callvirt System.String get_GUID()
L_0094: br Label7
L_0099: Label6
L_0099: ldstr "debug"
L_009e: Label7
L_009e: stloc.s 4 (System.String)
L_00a0: ldloc.0
L_00a1: brfalse Label8
L_00a6: ldloc.0
L_00a7: ldfld System.Int32 attackSequenceIdx
L_00ac: br Label9
L_00b1: Label8
L_00b1: ldc.i4.m1
L_00b2: Label9
L_00b2: stloc.s 5 (System.Int32)
L_00b4: ldarg.0
L_00b5: ldfld BattleTech.StatCollection statCollection
L_00ba: ldloc.s 4 (System.String)
L_00bc: ldloc.s 5 (System.Int32)
L_00be: ldstr "RunSpeed"
L_00c3: ldc.i4.0
L_00c4: ldc.r4 0
L_00c9: ldc.i4.m1
L_00ca: ldc.i4.1
L_00cb: callvirt Int32 ModifyStat[Single](System.String, Int32, System.String, StatOperation, Single, Int32, Boolean)
L_00d0: pop
L_00d1: ldarg.0
L_00d2: callvirt Void FlagForKnockdown()
L_00d7: ldloc.0
L_00d8: brfalse Label10
L_00dd: ldarg.0
L_00de: ldloc.0
L_00df: ldfld BattleTech.AbstractActor attacker
L_00e4: bne.un Label11
L_00e9: ldloc.0
L_00ea: callvirt Void FlagAttackDestroyedAttackerLeg()
L_00ef: br Label12
L_00f4: Label11
L_00f4: ldloc.0
L_00f5: callvirt System.Collections.Generic.List`1[System.String] get_allAffectedTargetIds()
L_00fa: ldarg.0
L_00fb: call System.String get_GUID()
L_0100: callvirt Boolean Contains(System.String)
L_0105: brfalse Label13
L_010a: ldloc.0
L_010b: ldarg.0
L_010c: call System.String get_GUID()
L_0111: callvirt Void FlagAttackDestroyedLeg(System.String)
L_0116: ldloc.0
L_0117: ldarg.0
L_0118: call System.String get_GUID()
L_011d: callvirt Void FlagAttackCausedKnockdown(System.String)
L_0122: Label5
L_0122: Label10
L_0122: Label12
L_0122: Label13
L_0122: ldarg.0
L_0123: ldfld System.Collections.Generic.List`1[BattleTech.MechComponent] allComponents
L_0128: callvirt Enumerator GetEnumerator()
L_012d: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
.try
{
	L_012f: br Label14
	L_0134: Label18
	L_0134: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_0136: call BattleTech.MechComponent get_Current()
	L_013b: stloc.s 7 (BattleTech.MechComponent)
	L_013d: ldloc.s 7 (BattleTech.MechComponent)
	L_013f: call Int32 OverrideLocation(BattleTech.MechComponent)
	L_0144: ldarg.1
	L_0145: bne.un Label15
	L_014a: ldloc.s 7 (BattleTech.MechComponent)
	L_014c: ldarg.3
	L_014d: ldc.i4.4
	L_014e: ldc.i4.0
	L_014f: callvirt Void DamageComponent(BattleTech.WeaponHitInfo, BattleTech.ComponentDamageLevel, Boolean)
	L_0154: ldsfld HBS.Logging.ILog damageLogger
	L_0159: callvirt Boolean get_IsLogEnabled()
	L_015e: brfalse Label16
	L_0163: ldsfld HBS.Logging.ILog damageLogger
	L_0168: ldstr "====@@@ Component Destroyed: {0}"
	L_016d: ldloc.s 7 (BattleTech.MechComponent)
	L_016f: callvirt System.String get_Name()
	L_0174: call System.String Format(System.String, System.Object)
	L_0179: callvirt Void Log(System.Object)
	L_017e: Label16
	L_017e: ldloc.0
	L_017f: brfalse Label17
	L_0184: ldloc.s 7 (BattleTech.MechComponent)
	L_0186: isinst BattleTech.Weapon
	L_018b: stloc.s 8 (BattleTech.Weapon)
	L_018d: ldloc.s 7 (BattleTech.MechComponent)
	L_018f: isinst BattleTech.AmmunitionBox
	L_0194: stloc.s 9 (BattleTech.AmmunitionBox)
	L_0196: ldloc.0
	L_0197: ldarg.0
	L_0198: call System.String get_GUID()
	L_019d: ldloc.s 8 (BattleTech.Weapon)
	L_019f: ldloc.s 9 (BattleTech.AmmunitionBox)
	L_01a1: callvirt Void FlagAttackScoredCrit(System.String, BattleTech.Weapon, BattleTech.AmmunitionBox)
	L_01a6: Label14
	L_01a6: Label15
	L_01a6: Label17
	L_01a6: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01a8: call Boolean MoveNext()
	L_01ad: brtrue Label18
	L_01b2: leave Label19
	L_01b7: leave (autogenerated)
} // end try
.finally
{
	L_01bc: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent])
	L_01be: constrained. System.Collections.Generic.List`1+Enumerator[BattleTech.MechComponent]
	L_01c4: callvirt Void Dispose()
	L_01c9: endfinally
	L_01ca: leave (autogenerated)
} // end handler
L_01cb: Label19
L_01cb: ldarg.0
L_01cc: ldarg.3
L_01cd: call Void UpdateMinStability(BattleTech.WeaponHitInfo)
L_01d2: ldc.i4.0
L_01d3: stloc.1
L_01d4: ldstr ""
L_01d9: stloc.2
L_01da: ldarg.1
L_01db: ldc.i4.8
L_01dc: bne.un Label20
L_01e1: ldc.i4.2
L_01e2: stloc.1
L_01e3: ldstr "Location Destroyed: "
L_01e8: ldarga.s 1
L_01ea: constrained. BattleTech.ChassisLocations
L_01f0: callvirt System.String ToString()
L_01f5: call System.String Concat(System.String, System.String)
L_01fa: stloc.2
L_01fb: br Label21
L_0200: Label20
L_0200: ldarg.1
L_0201: ldc.i4.1
L_0202: bne.un Label22
L_0207: ldc.i4.1
L_0208: stloc.1
L_0209: ldstr "Location Destroyed: "
L_020e: ldarga.s 1
L_0210: constrained. BattleTech.ChassisLocations
L_0216: callvirt System.String ToString()
L_021b: call System.String Concat(System.String, System.String)
L_0220: stloc.2
L_0221: br Label23
L_0226: Label22
L_0226: ldarg.1
L_0227: ldc.i4.s 64
L_0229: beq Label24
L_022e: ldarg.1
L_022f: ldc.i4 128
L_0234: bne.un Label25
L_0239: Label24
L_0239: ldarg.0
L_023a: call Single get_LeftLegStructure()
L_023f: ldc.r4 0
L_0244: bgt.un Label26
L_0249: ldarg.0
L_024a: call Single get_RightLegStructure()
L_024f: ldc.r4 0
L_0254: bgt.un Label27
L_0259: ldc.i4.3
L_025a: stloc.1
L_025b: ldstr "Location Destroyed: "
L_0260: ldarga.s 1
L_0262: constrained. BattleTech.ChassisLocations
L_0268: callvirt System.String ToString()
L_026d: call System.String Concat(System.String, System.String)
L_0272: stloc.2
L_0273: Label21
L_0273: Label23
L_0273: Label25
L_0273: Label26
L_0273: Label27
L_0273: ldarg.s 4
L_0275: ldc.i4.s 11
L_0277: bne.un Label28
L_027c: ldarg.1
L_027d: ldc.i4.8
L_027e: beq Label29
L_0283: ldarg.1
L_0284: ldc.i4.1
L_0285: bne.un Label30
L_028a: Label29
L_028a: ldc.i4.4
L_028b: stloc.1
L_028c: ldstr "Ammo Explosion: "
L_0291: ldarga.s 1
L_0293: constrained. BattleTech.ChassisLocations
L_0299: callvirt System.String ToString()
L_029e: call System.String Concat(System.String, System.String)
L_02a3: stloc.2
L_02a4: Label28
L_02a4: Label30
L_02a4: ldloc.1
L_02a5: brfalse Label31
L_02aa: ldarg.0
L_02ab: ldloc.2
L_02ac: ldloc.1
L_02ad: ldarg.s 4
L_02af: ldarg.1
L_02b0: ldarg.3
L_02b1: ldfld System.Int32 stackItemUID
L_02b6: ldarg.3
L_02b7: ldfld System.String attackerId
L_02bc: ldc.i4.0
L_02bd: callvirt Void FlagForDeath(System.String, BattleTech.DeathMethod, BattleTech.DamageType, Int32, Int32, System.String, Boolean)
L_02c2: br Label32
L_02c7: Label31
L_02c7: ldarg.1
L_02c8: ldc.i4.4
L_02c9: beq Label33
L_02ce: ldarg.1
L_02cf: ldc.i4.s 16
L_02d1: bne.un Label34
L_02d6: Label33
L_02d6: ldarg.0
L_02d7: call BattleTech.CombatGameState get_Combat()
L_02dc: callvirt BattleTech.CombatGameConstants get_Constants()
L_02e1: callvirt BattleTech.PilotingConstantsDef get_PilotingConstants()
L_02e6: ldfld System.Boolean InjuryFromSideTorsoDestruction
L_02eb: brfalse Label35
L_02f0: ldarg.0
L_02f1: callvirt BattleTech.Pilot GetPilot()
L_02f6: stloc.s 10 (BattleTech.Pilot)
L_02f8: ldloc.s 10 (BattleTech.Pilot)
L_02fa: brfalse Label36
L_02ff: ldloc.s 10 (BattleTech.Pilot)
L_0301: ldc.i4.5
L_0302: callvirt Void SetNeedsInjury(BattleTech.InjuryReason)
L_0307: Label32
L_0307: Label34
L_0307: Label35
L_0307: Label36
L_0307: ldarg.0
L_0308: call BattleTech.MechRepresentation get_GameRep()
L_030d: ldnull
L_030e: call Boolean op_Inequality(UnityEngine.Object, UnityEngine.Object)
L_0313: brfalse Label37
L_0318: ldarg.0
L_0319: call BattleTech.MechRepresentation get_GameRep()
L_031e: ldarg.1
L_031f: ldarg.2
L_0320: callvirt Void PlayComponentDestroyedVFX(Int32, UnityEngine.Vector3)
L_0325: Label37
L_0325: ldarg.0
L_0326: call Void Postfix(BattleTech.Mech)
L_032b: ret
DONE

### Patch BattleTech.SimGameState, Void _OnFirstPlayInit(SimGameType, Boolean)
L_0000: Local var 0: System.Boolean
L_0000: Local var 1: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 2: BattleTech.StoryConstantsDef
L_0000: Local var 3: ReportSimGameInitMessage
L_0000: Local var 4: System.Guid
L_0000: Local var 5: System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 6: System.Collections.Generic.List`1+Enumerator[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
L_0000: Local var 7: System.String
L_0000: Local var 8: System.String[]
L_0000: Local var 9: System.Int32
L_0000: Local var 10: System.String
L_0000: Local var 11: System.Collections.IEnumerator
L_0000: Local var 12: BattleTech.SimGameState+SimGameCharacterType
L_0000: Local var 13: System.Boolean
L_0000: Local var 14: System.IDisposable
L_0000: ldc.i4.0
L_0001: stloc.0
L_0002: newobj Void .ctor()
L_0007: stloc.1
L_0008: ldarg.0
L_0009: ldnull
L_000a: call Void InitManagers(BattleTech.Save.GameInstanceSave)
L_000f: ldarg.0
L_0010: ldarg.1
L_0011: ldc.i4.1
L_0012: bne.un Label1
L_0017: ldstr "campaign_instance_"
L_001c: br Label2
L_0021: Label1
L_0021: ldstr "non_campaign_instance_"
L_0026: Label2
L_0026: call System.Guid NewGuid()
L_002b: stloc.s 4 (System.Guid)
L_002d: ldloca.s 4 (System.Guid)
L_002f: constrained. System.Guid
L_0035: callvirt System.String ToString()
L_003a: call System.String Concat(System.String, System.String)
L_003f: call Void set_InstanceGUID(System.String)
L_0044: ldarg.0
L_0045: ldarg.2
L_0046: stfld System.Boolean AllowDebug
L_004b: ldarg.0
L_004c: ldarg.1
L_004d: call Void set_SimGameMode(SimGameType)
L_0052: ldarg.0
L_0053: newobj Void .ctor()
L_0058: call Void set_MedTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_005d: ldarg.0
L_005e: newobj Void .ctor()
L_0063: call Void set_MechTechs(System.Collections.Generic.List`1[BattleTech.TechDef])
L_0068: ldarg.0
L_0069: newobj Void .ctor()
L_006e: call Void set_MechLabQueue(System.Collections.Generic.List`1[BattleTech.WorkOrderEntry])
L_0073: ldarg.0
L_0074: ldfld BattleTech.SimGameConstantOverride constantOverrides
L_0079: ldarg.0
L_007a: callvirt Void Initialize(BattleTech.SimGameState)
L_007f: ldarg.0
L_0080: call BattleTech.SimGameConstants get_Constants()
L_0085: callvirt BattleTech.StoryConstantsDef get_Story()
L_008a: stloc.2
L_008b: ldarg.1
L_008c: ldc.i4.1
L_008d: sub
L_008e: switch Labels3,4,5
L_009f: br Label6
L_00a4: Label4
L_00a4: ldarg.0
L_00a5: ldarg.0
L_00a6: call BattleTech.SimGameConstants get_Constants()
L_00ab: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_00b0: callvirt System.DateTime GetCampaignStartDate()
L_00b5: call Void SetCampaignStartDate(System.DateTime)
L_00ba: br Label7
L_00bf: Label3
L_00bf: Label5
L_00bf: Label6
L_00bf: ldarg.0
L_00c0: ldarg.0
L_00c1: call BattleTech.SimGameConstants get_Constants()
L_00c6: callvirt BattleTech.StoryConstantsDef get_Story()
L_00cb: callvirt System.DateTime GetCampaignStartDate()
L_00d0: call Void SetCampaignStartDate(System.DateTime)
L_00d5: Label7
L_00d5: ldarg.0
L_00d6: ldfld BattleTech.SimGameEventTracker companyEventTracker
L_00db: ldsfld BattleTech.EventScope[] CompanyTrackerScope
L_00e0: ldloc.2
L_00e1: ldfld System.Single CompanyEventStartingChance
L_00e6: ldloc.2
L_00e7: ldfld System.Single CompanyEventIncreaseRate
L_00ec: ldc.i4.0
L_00ed: ldarg.0
L_00ee: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_00f3: ldarg.0
L_00f4: ldfld BattleTech.SimGameEventTracker mechWarriorEventTracker
L_00f9: ldsfld BattleTech.EventScope[] MechWarriorTrackerScope
L_00fe: ldloc.2
L_00ff: ldfld System.Single PersonalEventStartingChance
L_0104: ldloc.2
L_0105: ldfld System.Single PersonalEventIncreaseRate
L_010a: ldc.i4.0
L_010b: ldarg.0
L_010c: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_0111: ldarg.0
L_0112: ldfld BattleTech.SimGameEventTracker moraleEventTracker
L_0117: ldsfld BattleTech.EventScope[] MoraleTrackerScope
L_011c: ldloc.2
L_011d: ldfld System.Single MoraleEventStartingChance
L_0122: ldloc.2
L_0123: ldfld System.Single MoraleEventIncreaseRate
L_0128: ldc.i4.1
L_0129: ldarg.0
L_012a: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_012f: ldarg.0
L_0130: ldfld BattleTech.SimGameEventTracker deadEventTracker
L_0135: ldsfld BattleTech.EventScope[] DeadTrackerScope
L_013a: ldloc.2
L_013b: ldfld System.Single DeadEventStartingChance
L_0140: ldloc.2
L_0141: ldfld System.Single DeadEventIncreaseRate
L_0146: ldc.i4.3
L_0147: ldarg.0
L_0148: callvirt Void Init(BattleTech.EventScope[], Single, Single, SimEventType, BattleTech.SimGameState)
L_014d: ldarg.0
L_014e: ldarg.0
L_014f: call BattleTech.GameInstance get_BattleTechGame()
L_0154: callvirt BattleTech.GameContext get_GlobalGameContext()
L_0159: newobj Void .ctor(GameContext)
L_015e: stfld BattleTech.SimGameContext Context
L_0163: ldarg.0
L_0164: ldfld BattleTech.SimGameContext Context
L_0169: ldc.i4.s 13
L_016b: ldarg.0
L_016c: callvirt Void SetObject(BattleTech.GameContextObjectTagEnum, System.Object)
L_0171: ldarg.1
L_0172: ldc.i4.1
L_0173: beq Label8
L_0178: newobj Void .ctor()
L_017d: stloc.s 5 (System.Collections.Generic.List`1[System.String])
L_017f: ldarg.1
L_0180: ldc.i4.2
L_0181: beq Label9
L_0186: ldarg.1
L_0187: ldc.i4.3
L_0188: bne.un Label10
L_018d: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_018f: ldarg.0
L_0190: call BattleTech.SimGameConstants get_Constants()
L_0195: callvirt BattleTech.SimDebugConstantsDef get_Debug()
L_019a: ldfld System.String[] NonCampaignStartingTags
L_019f: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01a4: ldarg.0
L_01a5: call HBS.Collections.TagSet get_CompanyTags()
L_01aa: ldarg.0
L_01ab: call BattleTech.SimGameConstants get_Constants()
L_01b0: callvirt BattleTech.FlashpointConstantsDef get_Flashpoints()
L_01b5: ldfld System.String SystemUseFlashpointsTag
L_01ba: callvirt Boolean Add(System.String)
L_01bf: pop
L_01c0: br Label11
L_01c5: Label9
L_01c5: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_01c7: ldarg.0
L_01c8: call BattleTech.SimGameConstants get_Constants()
L_01cd: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_01d2: ldfld System.String[] CareerStartingTags
L_01d7: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_01dc: ldarg.0
L_01dd: ldarg.0
L_01de: call NetworkRandom get_NetworkRandom()
L_01e3: ldarg.0
L_01e4: call BattleTech.SimGameConstants get_Constants()
L_01e9: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_01ee: ldfld System.Int32[] FlashpointStartRange
L_01f3: ldc.i4.0
L_01f4: ldelem.i4
L_01f5: ldarg.0
L_01f6: call BattleTech.SimGameConstants get_Constants()
L_01fb: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0200: ldfld System.Int32[] FlashpointStartRange
L_0205: ldc.i4.1
L_0206: ldelem.i4
L_0207: ldc.i4.1
L_0208: add
L_0209: callvirt Int32 Int(Int32, Int32)
L_020e: stfld System.Int32 careerModeFlashpointStartDate
L_0213: ldc.i4.1
L_0214: stloc.0
L_0215: ldloc.1
L_0216: ldarg.0
L_0217: call BattleTech.SimGameConstants get_Constants()
L_021c: callvirt BattleTech.CareerModeConstantsDef get_CareerMode()
L_0221: ldfld System.String[] ConversationCharacters
L_0226: callvirt Void AddRange(System.Collections.Generic.IEnumerable`1[System.String])
L_022b: Label10
L_022b: Label11
L_022b: ldloc.s 5 (System.Collections.Generic.List`1[System.String])
L_022d: callvirt Enumerator GetEnumerator()
L_0232: stloc.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
.try
{
	L_0234: br Label12
	L_0239: Label13
	L_0239: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_023b: call System.String get_Current()
	L_0240: stloc.s 7 (System.String)
	L_0242: ldarg.0
	L_0243: call HBS.Collections.TagSet get_CompanyTags()
	L_0248: ldloc.s 7 (System.String)
	L_024a: callvirt Boolean Add(System.String)
	L_024f: pop
	L_0250: Label12
	L_0250: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0252: call Boolean MoveNext()
	L_0257: brtrue Label13
	L_025c: leave Label14
	L_0261: leave (autogenerated)
} // end try
.finally
{
	L_0266: ldloca.s 6 (System.Collections.Generic.List`1+Enumerator[System.String])
	L_0268: constrained. System.Collections.Generic.List`1+Enumerator[System.String]
	L_026e: callvirt Void Dispose()
	L_0273: endfinally
	L_0274: leave (autogenerated)
} // end handler
L_0275: Label14
L_0275: ldarg.0
L_0276: call HBS.Collections.TagSet get_CompanyTags()
L_027b: ldarg.0
L_027c: call BattleTech.SimGameConstants get_Constants()
L_0281: callvirt BattleTech.StoryConstantsDef get_Story()
L_0286: ldfld System.String SystemUseEventsTag
L_028b: callvirt Boolean Add(System.String)
L_0290: pop
L_0291: ldarg.0
L_0292: call HBS.Collections.TagSet get_CompanyTags()
L_0297: ldarg.0
L_0298: call BattleTech.SimGameConstants get_Constants()
L_029d: callvirt BattleTech.StoryConstantsDef get_Story()
L_02a2: ldfld System.String SystemUseTimeTag
L_02a7: callvirt Boolean Add(System.String)
L_02ac: pop
L_02ad: br Label15
L_02b2: Label8
L_02b2: ldarg.0
L_02b3: call HBS.Collections.TagSet get_CompanyTags()
L_02b8: ldarg.0
L_02b9: call BattleTech.SimGameConstants get_Constants()
L_02be: callvirt BattleTech.StoryConstantsDef get_Story()
L_02c3: ldfld System.String SystemUseMilestoneTag
L_02c8: callvirt Boolean Add(System.String)
L_02cd: pop
L_02ce: Label15
L_02ce: ldarg.0
L_02cf: call BattleTech.SimGameConstants get_Constants()
L_02d4: callvirt BattleTech.StoryConstantsDef get_Story()
L_02d9: ldfld System.String[] CampaignCommanderUpdateTags
L_02de: brfalse Label16
L_02e3: ldarg.0
L_02e4: call BattleTech.SimGameConstants get_Constants()
L_02e9: callvirt BattleTech.StoryConstantsDef get_Story()
L_02ee: ldfld System.String[] CampaignCommanderUpdateTags
L_02f3: stloc.s 8 (System.String[])
L_02f5: ldc.i4.0
L_02f6: stloc.s 9 (System.Int32)
L_02f8: br Label17
L_02fd: Label18
L_02fd: ldloc.s 8 (System.String[])
L_02ff: ldloc.s 9 (System.Int32)
L_0301: ldelem.ref
L_0302: stloc.s 10 (System.String)
L_0304: ldarg.0
L_0305: call HBS.Collections.TagSet get_CompanyTags()
L_030a: ldloc.s 10 (System.String)
L_030c: callvirt Boolean Add(System.String)
L_0311: pop
L_0312: ldloc.s 9 (System.Int32)
L_0314: ldc.i4.1
L_0315: add
L_0316: stloc.s 9 (System.Int32)
L_0318: Label17
L_0318: ldloc.s 9 (System.Int32)
L_031a: ldloc.s 8 (System.String[])
L_031c: ldlen
L_031d: conv.i4
L_031e: blt Label18
L_0323: Label16
L_0323: ldarg.0
L_0324: call HBS.Collections.TagSet get_CompanyTags()
L_0329: ldstr "{0}{1}"
L_032e: ldstr "SYSTEM_GAMEMODE_"
L_0333: ldarg.0
L_0334: call SimGameType get_SimGameMode()
L_0339: box BattleTech.SimGameState+SimGameType
L_033e: call System.String Format(System.String, System.Object, System.Object)
L_0343: callvirt Boolean Add(System.String)
L_0348: pop
L_0349: ldarg.0
L_034a: call Void InitCompanyStats()
L_034f: ldarg.0
L_0350: ldarg.0
L_0351: call BattleTech.SimGameConstants get_Constants()
L_0356: callvirt BattleTech.FinancesConstantsDef get_Finances()
L_035b: ldfld System.Int32 QuarterLength
L_0360: call Void set_DayRemainingInQuarter(Int32)
L_0365: ldarg.0
L_0366: ldc.i4.0
L_0367: ldc.i4.0
L_0368: call Void SetExpenditureLevel(BattleTech.EconomyScale, Boolean)
L_036d: ldtoken BattleTech.SimGameState+SimGameCharacterType
L_0372: call System.Type GetTypeFromHandle(System.RuntimeTypeHandle)
L_0377: call System.Array GetValues(System.Type)
L_037c: callvirt System.Collections.IEnumerator GetEnumerator()
L_0381: stloc.s 11 (System.Collections.IEnumerator)
.try
{
	L_0383: br Label19
	L_0388: Label23
	L_0388: ldloc.s 11 (System.Collections.IEnumerator)
	L_038a: callvirt System.Object get_Current()
	L_038f: unbox.any BattleTech.SimGameState+SimGameCharacterType
	L_0394: stloc.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_0396: ldarg.0
	L_0397: ldfld System.Collections.Generic.List`1[BattleTech.SimGameState+SimGameCharacterType] characterList
	L_039c: ldloc.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_039e: callvirt Void Add(SimGameCharacterType)
	L_03a3: ldloc.0
	L_03a4: brfalse Label20
	L_03a9: ldc.i4.0
	L_03aa: stloc.s 13 (System.Boolean)
	L_03ac: ldloc.1
	L_03ad: ldloca.s 12 (BattleTech.SimGameState+SimGameCharacterType)
	L_03af: constrained. BattleTech.SimGameState+SimGameCharacterType
	L_03b5: callvirt System.String ToString()
	L_03ba: callvirt Boolean Contains(System.String)
	L_03bf: brfalse Label21
	L_03c4: ldc.i4.1
	L_03c5: stloc.s 13 (System.Boolean)
	L_03c7: Label21
	L_03c7: ldarg.0
	L_03c8: ldfld System.Collections.Generic.List`1[System.Boolean] characterStatus
	L_03cd: ldloc.s 13 (System.Boolean)
	L_03cf: callvirt Void Add(Boolean)
	L_03d4: br Label22
	L_03d9: Label20
	L_03d9: ldarg.0
	L_03da: ldfld System.Collections.Generic.List`1[System.Boolean] characterStatus
	L_03df: ldc.i4.1
	L_03e0: callvirt Void Add(Boolean)
	L_03e5: Label19
	L_03e5: Label22
	L_03e5: ldloc.s 11 (System.Collections.IEnumerator)
	L_03e7: callvirt Boolean MoveNext()
	L_03ec: brtrue Label23
	L_03f1: leave Label24
	L_03f6: leave (autogenerated)
} // end try
.finally
{
	L_03fb: ldloc.s 11 (System.Collections.IEnumerator)
	L_03fd: isinst System.IDisposable
	L_0402: stloc.s 14 (System.IDisposable)
	L_0404: ldloc.s 14 (System.IDisposable)
	L_0406: brfalse Label25
	L_040b: ldloc.s 14 (System.IDisposable)
	L_040d: callvirt Void Dispose()
	L_0412: Label25
	L_0412: endfinally
	L_0413: leave (autogenerated)
} // end handler
L_0414: Label24
L_0414: ldarg.0
L_0415: call Void AddCachedFactionsToDisplayList()
L_041a: ldc.i4.0
L_041b: newobj Void .ctor(Boolean)
L_0420: stloc.3
L_0421: ldarg.0
L_0422: call MessageCenter get_MessageCenter()
L_0427: ldloc.3
L_0428: callvirt Void PublishMessage(MessageCenterMessage)
L_042d: call Void Postfix()
L_0432: ret
DONE

### Patch BattleTech.CombatGameState, Void _Init(BattleTech.GameInstance, BattleTech.Contract, System.String)
L_0000: Local var 0: BattleTech.EncounterPlayStyle
L_0000: Local var 1: System.DateTime
L_0000: ldarg.0
L_0001: ldarg.1
L_0002: call Void set_BattleTechGame(BattleTech.GameInstance)
L_0007: ldarg.0
L_0008: ldarg.2
L_0009: call Void set_ActiveContract(BattleTech.Contract)
L_000e: ldarg.0
L_000f: ldarg.3
L_0010: call Void set_LocalPlayerTeamGuid(System.String)
L_0015: ldarg.0
L_0016: call Boolean get_IsLoadingFromSave()
L_001b: brtrue Label1
L_0020: ldarg.0
L_0021: newobj Void .ctor()
L_0026: call Void set_ItemRegistry(ItemRegistry)
L_002b: ldarg.0
L_002c: ldarg.0
L_002d: call BattleTech.Contract get_ActiveContract()
L_0032: callvirt Boolean get_ShouldSaveAtMissionStart()
L_0037: brfalse Label2
L_003c: ldarg.1
L_003d: callvirt BattleTech.SimGameState get_Simulation()
L_0042: brfalse Label3
L_0047: ldarg.1
L_0048: callvirt BattleTech.SimGameState get_Simulation()
L_004d: callvirt Boolean get_IsIronmanCampaign()
L_0052: ldc.i4.0
L_0053: ceq
L_0055: br Label4
L_005a: Label2
L_005a: Label3
L_005a: ldc.i4.0
L_005b: Label4
L_005b: call Void set_NeedsStoryMissionStartSave(Boolean)
L_0060: Label1
L_0060: ldarg.0
L_0061: ldarg.0
L_0062: ldarg.1
L_0063: callvirt Boolean get_IsMultiplayer()
L_0068: newobj Void .ctor(CombatGameState, Boolean)
L_006d: call Void set_LOS(BattleTech.LineOfSight)
L_0072: ldarg.0
L_0073: ldarg.0
L_0074: newobj Void .ctor(CombatGameState)
L_0079: call Void set_LOFCache(LOFCache)
L_007e: ldarg.0
L_007f: ldarg.0
L_0080: newobj Void .ctor(CombatGameState)
L_0085: call Void set_ToHit(BattleTech.ToHit)
L_008a: ldarg.0
L_008b: ldarg.0
L_008c: newobj Void .ctor(CombatGameState)
L_0091: call Void set_CritChance(BattleTech.CritChanceRules)
L_0096: ldarg.0
L_0097: ldarg.0
L_0098: newobj Void .ctor(CombatGameState)
L_009d: call Void set_MeleeRules(BattleTech.MeleeRules)
L_00a2: ldarg.0
L_00a3: ldarg.0
L_00a4: newobj Void .ctor(CombatGameState)
L_00a9: call Void set_HitLocation(BattleTech.HitLocation)
L_00ae: ldarg.0
L_00af: ldarg.0
L_00b0: newobj Void .ctor(CombatGameState)
L_00b5: call Void set_PilotingRules(BattleTech.PilotingRules)
L_00ba: ldarg.0
L_00bb: ldarg.0
L_00bc: call BattleTech.GameInstance get_BattleTechGame()
L_00c1: call BattleTech.CombatGameConstants GetInstance(BattleTech.GameInstance)
L_00c6: call Void set_Constants(BattleTech.CombatGameConstants)
L_00cb: ldarg.0
L_00cc: call BattleTech.CombatGameConstants get_Constants()
L_00d1: callvirt Void PrewarmVFX()
L_00d6: ldarg.0
L_00d7: call BattleTech.CombatGameConstants get_Constants()
L_00dc: ldarg.0
L_00dd: callvirt Void BuildClusterTables(BattleTech.CombatGameState)
L_00e2: ldarg.0
L_00e3: call Boolean get_IsLoadingFromSave()
L_00e8: brtrue Label5
L_00ed: ldarg.0
L_00ee: ldarg.0
L_00ef: newobj Void .ctor(CombatGameState)
L_00f4: call Void set_TurnDirector(BattleTech.TurnDirector)
L_00f9: Label5
L_00f9: ldarg.0
L_00fa: newobj Void .ctor()
L_00ff: call Void set_PathingManager(BattleTech.PathingManager)
L_0104: ldarg.0
L_0105: ldarg.0
L_0106: newobj Void .ctor(CombatGameState)
L_010b: call Void set_AttackDirector(BattleTech.AttackDirector)
L_0110: ldarg.0
L_0111: ldarg.0
L_0112: newobj Void .ctor(CombatGameState)
L_0117: call Void set_StackManager(BattleTech.StackManager)
L_011c: ldarg.0
L_011d: call Boolean get_IsLoadingFromSave()
L_0122: brfalse Label6
L_0127: ldarg.0
L_0128: call BattleTech.EffectManager get_EffectManager()
L_012d: brtrue Label7
L_0132: Label6
L_0132: ldarg.0
L_0133: ldarg.0
L_0134: newobj Void .ctor(CombatGameState)
L_0139: call Void set_EffectManager(BattleTech.EffectManager)
L_013e: Label7
L_013e: ldarg.0
L_013f: ldarg.0
L_0140: newobj Void .ctor(CombatGameState)
L_0145: call Void set_InvocationHandler(BattleTech.InvocationHandler)
L_014a: ldarg.0
L_014b: ldarg.0
L_014c: newobj Void .ctor(CombatGameState)
L_0151: call Void set_AILogCache(AILogCache)
L_0156: ldarg.0
L_0157: ldarg.2
L_0158: ldarg.1
L_0159: callvirt BattleTech.Data.DataManager get_DataManager()
L_015e: call BattleTech.MapMetaData LoadMapMetaData(BattleTech.Contract, BattleTech.Data.DataManager)
L_0163: call Void set_MapMetaData(BattleTech.MapMetaData)
L_0168: ldc.i4.0
L_0169: stloc.0
L_016a: ldarg.2
L_016b: callvirt BattleTech.Framework.ContractOverride get_Override()
L_0170: brfalse Label8
L_0175: ldarg.2
L_0176: callvirt BattleTech.Framework.ContractOverride get_Override()
L_017b: ldfld BattleTech.EncounterPlayStyle encounterPlayStyle
L_0180: stloc.0
L_0181: Label8
L_0181: ldarg.0
L_0182: ldarg.0
L_0183: ldloc.0
L_0184: newobj Void .ctor(CombatGameState, EncounterPlayStyle)
L_0189: call Void set_HostilityMatrix(BattleTech.HostilityMatrix)
L_018e: ldarg.0
L_018f: ldnull
L_0190: call Void set_EncounterLayerData(BattleTech.EncounterLayerData)
L_0195: ldarg.0
L_0196: ldarg.0
L_0197: newobj Void .ctor(CombatGameState)
L_019c: call Void set_HexGrid(BattleTech.HexGrid)
L_01a1: ldarg.0
L_01a2: ldarg.0
L_01a3: newobj Void .ctor(CombatGameState)
L_01a8: call Void set_MultiplayerGameVerification(BattleTech.MultiplayerGameVerification)
L_01ad: ldarg.0
L_01ae: newobj Void .ctor()
L_01b3: call Void set_NetworkRandom(NetworkRandom)
L_01b8: ldarg.0
L_01b9: call NetworkRandom get_NetworkRandom()
L_01be: ldarg.0
L_01bf: call BattleTech.MultiplayerGameVerification get_MultiplayerGameVerification()
L_01c4: callvirt Boolean get_RecordData()
L_01c9: callvirt Void set_RecordHistory(Boolean)
L_01ce: ldsfld HBS.Logging.ILog gameInfoLogger
L_01d3: ldstr "CombatGameState created: {0}"
L_01d8: call System.DateTime get_UtcNow()
L_01dd: stloc.1
L_01de: ldloca.s 1 (System.DateTime)
L_01e0: ldstr "ddd MMM d yyyy HH:mm:ss"
L_01e5: call System.String ToString(System.String)
L_01ea: call System.String Format(System.String, System.Object)
L_01ef: callvirt Void Log(System.Object)
L_01f4: ldarg.0
L_01f5: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_01fa: brfalse Label9
L_01ff: ldarg.0
L_0200: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0205: callvirt Boolean IsNetworkGameActive()
L_020a: brfalse Label10
L_020f: ldsfld HBS.Logging.ILog gameInfoLogger
L_0214: ldstr "    Playing multiplayer."
L_0219: callvirt Void Log(System.Object)
L_021e: ldarg.0
L_021f: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0224: callvirt BattleTech.Network.Client.NetworkGameInstanceState get_State()
L_0229: ldc.i4.2
L_022a: bne.un Label11
L_022f: ldsfld HBS.Logging.ILog gameInfoLogger
L_0234: ldstr "    Is hosting."
L_0239: callvirt Void Log(System.Object)
L_023e: br Label12
L_0243: Label11
L_0243: ldsfld HBS.Logging.ILog gameInfoLogger
L_0248: ldstr "    Is not hosting."
L_024d: callvirt Void Log(System.Object)
L_0252: Label12
L_0252: ldsfld HBS.Logging.ILog gameInfoLogger
L_0257: ldstr "    Session Token: "
L_025c: ldarg.0
L_025d: call BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0262: callvirt System.String get_ServerToken()
L_0267: call System.String Concat(System.String, System.String)
L_026c: callvirt Void Log(System.Object)
L_0271: Label9
L_0271: Label10
L_0271: ldarg.0
L_0272: call MessageCenter get_MessageCenter()
L_0277: brfalse Label13
L_027c: ldarg.0
L_027d: call MessageCenter get_MessageCenter()
L_0282: newobj Void .ctor()
L_0287: dup
L_0288: call BattleTech.GameInstance get_BattleTechGame()
L_028d: callvirt BattleTech.Network.Client.NetworkGameInstance get_NetworkGameInstance()
L_0292: callvirt Boolean IsNetworkGameActive()
L_0297: callvirt Void set_IsNetworkGame(Boolean)
L_029c: callvirt Void PublishMessage(MessageCenterMessage)
L_02a1: Label13
L_02a1: call Boolean get_HasInstance()
L_02a6: brfalse Label14
L_02ab: call HBS.DebugConsole.DebugConsole get_Instance()
L_02b0: ldarg.0
L_02b1: ldftn Void DebugConsoleOnBeforeDump()
L_02b7: newobj Void .ctor(Object, IntPtr)
L_02bc: callvirt Void add_OnBeforeDump(DumpHandler)
L_02c1: Label14
L_02c1: ldarg.0
L_02c2: newobj Void .ctor()
L_02c7: stfld System.Collections.Generic.List`1[BattleTech.RegionGameLogic] RegionsList
L_02cc: ldarg.0
L_02cd: ldarg.2
L_02ce: call Void InitContext(BattleTech.Contract)
L_02d3: call Void Postfix()
L_02d8: ret
DONE

### Harmony id=io.github.mpstark.PilotHealthPopup, version=1.2.0.1, location=F:\Games\GalaxyClient\Games\BATTLETECH\Mods\ModTek\0Harmony.dll
### Started from PilotHealthPopup.Main.Init(), location F:\Games\GalaxyClient\Games\BATTLETECH\Mods\PilotHealthPopup\PilotHealthPopup.dll
### At 2019-09-15 05.27.38
### Patch BattleTech.Pilot, Void InjurePilot(System.String, Int32, Int32, BattleTech.DamageType, BattleTech.Weapon, BattleTech.AbstractActor)
L_0000: Local var 0: System.Int32
L_0000: Local var 1: System.Int32
L_0000: ldarg.0
L_0001: call BattleTech.AbstractActor get_ParentActor()
L_0006: brfalse Label1
L_000b: ldarg.0
L_000c: call BattleTech.AbstractActor get_ParentActor()
L_0011: callvirt BattleTech.StatCollection get_StatCollection()
L_0016: ldstr "IgnorePilotInjuries"
L_001b: callvirt Boolean GetValue[Boolean](System.String)
L_0020: brfalse Label2
L_0025: ldarg.0
L_0026: call BattleTech.CombatGameState get_Combat()
L_002b: callvirt MessageCenter get_MessageCenter()
L_0030: ldarg.1
L_0031: ldarg.0
L_0032: call BattleTech.AbstractActor get_ParentActor()
L_0037: callvirt System.String get_GUID()
L_003c: ldstr "INJURY IGNORED"
L_0041: call System.String T(System.String)
L_0046: ldc.i4.s 9
L_0048: newobj Void .ctor(String, String, String, MessageNature)
L_004d: callvirt Void PublishMessage(MessageCenterMessage)
L_0052: br Label8
L_0057: Label1
L_0057: Label2
L_0057: ldarg.0
L_0058: call Int32 get_BonusHealth()
L_005d: stloc.0
L_005e: ldloc.0
L_005f: ldc.i4.0
L_0060: ble Label3
L_0065: ldarg.3
L_0066: ldloc.0
L_0067: call Int32 Min(Int32, Int32)
L_006c: stloc.1
L_006d: ldarg.0
L_006e: ldfld BattleTech.StatCollection statCollection
L_0073: ldarg.1
L_0074: ldarg.2
L_0075: ldstr "BonusHealth"
L_007a: ldc.i4.2
L_007b: ldloc.1
L_007c: ldc.i4.m1
L_007d: ldc.i4.1
L_007e: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_0083: pop
L_0084: ldarg.3
L_0085: ldloc.1
L_0086: sub
L_0087: starg.s 3
L_0089: Label3
L_0089: ldarg.3
L_008a: ldc.i4.0
L_008b: ble Label4
L_0090: ldarg.0
L_0091: call Boolean get_IsIncapacitated()
L_0096: brtrue Label5
L_009b: ldarg.0
L_009c: ldarg.s 4
L_009e: ldarg.0
L_009f: call BattleTech.AbstractActor get_ParentActor()
L_00a4: ldarg.s 5
L_00a6: ldarg.s 6
L_00a8: call Void SaveInjuryInfo(BattleTech.DamageType, BattleTech.AbstractActor, BattleTech.Weapon, BattleTech.AbstractActor)
L_00ad: Label5
L_00ad: ldarg.0
L_00ae: call BattleTech.StatCollection get_StatCollection()
L_00b3: ldarg.1
L_00b4: ldarg.2
L_00b5: ldstr "Injuries"
L_00ba: ldc.i4.1
L_00bb: ldarg.3
L_00bc: ldc.i4.m1
L_00bd: ldc.i4.1
L_00be: callvirt Int32 ModifyStat[Int32](System.String, Int32, System.String, StatOperation, Int32, Int32, Boolean)
L_00c3: pop
L_00c4: ldarg.0
L_00c5: call BattleTech.CombatGameState get_Combat()
L_00ca: brfalse Label6
L_00cf: ldarg.0
L_00d0: call BattleTech.CombatGameState get_Combat()
L_00d5: callvirt MessageCenter get_MessageCenter()
L_00da: ldarg.0
L_00db: call BattleTech.AbstractActor get_ParentActor()
L_00e0: callvirt System.String get_GUID()
L_00e5: ldarg.0
L_00e6: call BattleTech.StatCollection get_StatCollection()
L_00eb: ldstr "Injuries"
L_00f0: callvirt Int32 GetValue[Int32](System.String)
L_00f5: newobj Void .ctor(String, Int32)
L_00fa: callvirt Void PublishMessage(MessageCenterMessage)
L_00ff: Label6
L_00ff: ldsfld HBS.Logging.ILog injuryLogger
L_0104: callvirt Boolean get_IsLogEnabled()
L_0109: brfalse Label7
L_010e: ldsfld HBS.Logging.ILog injuryLogger
L_0113: ldstr "////// POWPOW (>_<*): {0} Injured! ///// Cause: {1} ///// Injuries: {2}"
L_0118: ldarg.0
L_0119: call BattleTech.HumanDescriptionDef get_Description()
L_011e: callvirt System.String get_Name()
L_0123: ldarga.s 4
L_0125: constrained. BattleTech.DamageType
L_012b: callvirt System.String ToString()
L_0130: ldarg.0
L_0131: call Int32 get_Injuries()
L_0136: box System.Int32
L_013b: call System.String Format(System.String, System.Object, System.Object, System.Object)
L_0140: callvirt Void Log(System.Object)
L_0145: Label4
L_0145: Label7
L_0145: ldarg.0
L_0146: ldarg.1
L_0147: ldarg.2
L_0148: call Void ApplyInjuryAbilities(System.String, Int32)
L_014d: Label8
L_014d: ldarg.0
L_014e: call Void Postfix(BattleTech.Pilot)
L_0153: ret
DONE

System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
System.Exception: Exception from HarmonyInstance "de.morphyum.FlashpointEnabler" ---> System.Exception: Parameter "useInitial" not found in method BattleTech.SimGameState.GenerateFlashpoint(System.String, System.String, System.Boolean)
  at Harmony.MethodPatcher.EmitCallParameter (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Reflection.MethodInfo patch, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Boolean allowFirsParamPassthrough) [0x004a7] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher+<>c__DisplayClass19_0.<AddPrefixes>b__0 (System.Reflection.MethodInfo fix) [0x00001] in <ef472ad41f4948fdb52674edfe069979>:0 
  at System.Collections.Generic.List`1[T].ForEach (System.Action`1[T] action) [0x00024] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at Harmony.MethodPatcher.AddPrefixes (System.Reflection.Emit.ILGenerator il, System.Reflection.MethodBase original, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.Dictionary`2[TKey,TValue] variables, System.Reflection.Emit.Label label) [0x0002b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00126] in <ef472ad41f4948fdb52674edfe069979>:0 
   --- End of inner exception stack trace ---
  at Harmony.MethodPatcher.CreatePatchedMethod (System.Reflection.MethodBase original, System.String harmonyInstanceID, System.Collections.Generic.List`1[T] prefixes, System.Collections.Generic.List`1[T] postfixes, System.Collections.Generic.List`1[T] transpilers) [0x00310] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchFunctions.UpdateWrapper (System.Reflection.MethodBase original, Harmony.PatchInfo patchInfo, System.String instanceID) [0x00028] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.PatchProcessor.Patch () [0x000e4] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.<PatchAll>b__9_0 (System.Type type) [0x0002c] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.CollectionExtensions.Do[T] (System.Collections.Generic.IEnumerable`1[T] sequence, System.Action`1[T] action) [0x0001b] in <ef472ad41f4948fdb52674edfe069979>:0 
  at Harmony.HarmonyInstance.PatchAll (System.Reflection.Assembly assembly) [0x00007] in <ef472ad41f4948fdb52674edfe069979>:0 
  at RepeatableFlashpoints.FlashpointEnabler.Init (System.String directory, System.String settingsJSON) [0x00013] in <9af056f6a2bc46068528ef2488fcadc1>:0 
